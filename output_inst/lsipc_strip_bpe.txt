endbr64, sub_rsp_8, mov_rax_qword_ptr_[rip+0x@@ 13@@ fc@@ 9], test_rax_rax, je_4, call_rax, add_rsp_8, ret
push_qword_ptr_[rip+0x@@ 13@@ b6@@ 2], b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ b@@ 63@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 7@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2e@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2e@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2c@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2c@@ 5@@ ]
call_0xfffffffffffff80@@ 0
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2b@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2a@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2a@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 27@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 27@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 26@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 26@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 24@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 24@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 22@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 20@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 1fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 1f@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 1e@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 1e@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 1dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 1d@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 1c@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 1c@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 1b@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 1b@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 1a@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 1a@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 19d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 19@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 18d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 18@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 17@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 17@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 16@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 16@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 15@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 15@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 14@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 13@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 13@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 12@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 11d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 115@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 10@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 10@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ f5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ e5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ d5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ cd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ bd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ b5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ ad@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ a5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 85@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 75@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 6d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 65@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 00@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 00@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ ff@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ ff@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ fe@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ fe@@ 5@@ ]
endbr64, jmp_0xffffffffffff@@ 5@@ 2f@@ c
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ fd@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ fc@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ fc@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ fb@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ fb@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ fa@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f@@ 85@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f7@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f7@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f@@ 6d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f@@ 65@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f0@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ e@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ ef@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ e@@ ed@@ ]
endbr64, jmp_0xffffffffffff@@ 57@@ 1@@ c
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ e@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ ed@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ ec@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ ec@@ 5@@ ]
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rsi, mov_esi_8, push_rbx, mov_ebx_edi, mov_edi_1, sub_rsp_0x1@@ 38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 28]_rax, xor_eax_eax, call_0xfffffffffffffc@@ 19, test_rax_rax, jne_0x1a, mov_edx_8, lea_rsi_[rip+0xc@@ 7@@ 14], mov_edi_1, xor_eax_eax, call_0xfffffffffffffc@@ fc, lea_r14_[r@@ sp+0x110], mov_r15_rax, mov_ecx_5, xor_eax_eax, mov_rdi_r14, rep_stosd_dword_ptr_[rdi]_eax, lea_rsi_[rip+0x@@ ca@@ 2e], mov_edi_6, call_0xfffffffffffffdd@@ 4, lea_rsi_[rip+0xc@@ 6f@@ 3], lea_rdi_[rip+0x@@ c6@@ fe], call_0xfffffffffffff95@@ 1, lea_rdi_[rip+0xc@@ 6f@@ 2], call_0xfffffffffffff8e@@ 5, lea_rdi_[rip+0x2@@ fd@@ 9], call_0xb@@ 27@@ 9, and_byte_ptr_[r@@ 15+@@ 4]@@ _0x@@ cf, xor_edi_edi, lea_r12_[rip+0x@@ c@@ e0@@ 2], lea_r13_[rip+0x@@ 12@@ ec@@ f], call_0xfffffffffffffe@@ ff, mov_qword_ptr_[rsp+0x28]_0, mov_dword_ptr_[rsp+0x30]_0, mov_dword_ptr_[rsp+0x@@ 44]_0, mov_dword_ptr_[rsp+0x38]_0, mov_dword_ptr_[rsp+8]@@ _0xffffffff, mov_dword_ptr_[rsp+0x18]_0, mov_dword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0x20]_0, xor_r8d_r8d, lea_rcx_[rip+0x@@ 11@@ cb@@ 6], lea_rdx_[rip+0xc@@ 7d@@ f], mov_rsi_rbp, mov_edi_ebx, call_0xfffffffffffff92@@ a, cmp_eax_-1, je_0x6@@ 18, cmp_eax_0x4@@ 9, jle_0x@@ 4d, mov_rcx_r14, mov_edx_0x4@@ a, lea_r8_[rip+0xc@@ fa@@ 8], mov_rsi_r8, cmp_eax_edx, jl@@ _0x1b, cmp_edx_eax, je_0x47, mov_edx_dword_ptr_[r@@ si+4], add_rsi_4, test_edx_edx, jne_0xffffffffffffffef, mov_edx_dword_ptr_[r@@ 8+0x@@ 40], add_r8@@ _0x40, add_rcx_4, cmp_eax_edx, jl@@ _6, test_edx_edx, jne_0xffffffffffffffce, sub_eax@@ _0x4@@ a, cmp_eax@@ _0x38, ja_0x8@@ f8, movsxd_rax_dword_ptr_[r@@ 12@@ +rax*4], add_rax_r12, jmp_rax, mov_esi_dword_ptr_[r@@ cx], test_esi_esi, jne_0xc, mov_dword_ptr_[rcx]_eax, jmp_0xffffffffffffffc8, cmp_edx_esi, je_0xffffffffffffffbe, mov_r12_qword_ptr_[rip+0x@@ 12@@ d5@@ 5], mov_edx_5, lea_rsi_[rip+0x@@ be@@ 29], xor_edi_edi, mov_qword_ptr_[rsp+8]_r8, call_0xfffffffffffff8@@ 22, mov_rdi_qword_ptr_[rip+0x@@ 12@@ d5@@ 6], mov_rdx_rax, mov_rcx_r12, mov_esi_1, xor_eax_eax, call_0xfffffffffffffd@@ 89, mov_r8_qword_ptr_[rsp+8], xor_ebx_ebx, lea_rbp_[rip+0x@@ c@@ 57@@ b], mov_r12_r8, mov_r9d_dword_ptr_[r@@ 12+r@@ bx], test_r9d_r9d, je_0x49, mov_rcx_rbp, lea_rax_[rip+0x@@ 11@@ b@@ c0], jmp_0x13, mov_rcx_qword_ptr_[rax+0x20], add_rax_0x20, test_rcx_rcx, je_0x@@ fb@@ 7, cmp_r9d@@ _dword_ptr_[r@@ ax+0x18], jne_0xffffffffffffffeb, mov_rdi_qword_ptr_[rip+0x@@ 12@@ d0@@ 0], lea_rdx_[rip+0xc@@ 86@@ f], mov_esi_1, xor_eax_eax, call_0xfffffffffffffd@@ 32, add_rbx_4, cmp_rbx@@ _0x3c, jne_0xffffffffffffffb2, mov_rsi_qword_ptr_[rip+0x@@ 12@@ cd@@ c], mov_edi_0xa, call_0xfffffffffffff97@@ 7, mov_edi_1, call_0xfffffffffffffc@@ fd, mov_eax_dword_ptr_[rsp+0x20], add_eax_dword_ptr_[r@@ sp+0x18], add_eax_dword_ptr_[r@@ sp+0x10], je_0x@@ 92@@ c, cmp_dword_ptr_[rsp+0x@@ 30]_0, jne_0x@@ 95@@ 3, movzx_eax_byte_ptr_[r@@ 15+4], mov_edx_dword_ptr_[r15], and_eax@@ _0x30, cmp_dword_ptr_[rsp+@@ 8]_-1, je_0xa@@ 29, test_edx_edx, jne_0xa@@ 21, mov_dword_ptr_[r15@@ ]_5, test_al_al, jne_0xa@@ 79, mov_eax_2, shl_eax_4, mov_edx_eax, movzx_eax_byte_ptr_[r@@ 15+4], and_eax_0xffffff@@ cf, or_eax_edx, mov_byte_ptr_[r15+@@ 4]_al, cmp_dword_ptr_[r@@ 15@@ ]_5, je_0xa@@ 57, cmp_dword_ptr_[rsp+0x@@ 44]_0, je_0x80, mov_rax_qword_ptr_[rip+0x@@ 12@@ 7@@ b0], lea_rcx_[rax+1], mov_qword_ptr_[rip+0x@@ 12@@ 7a@@ 5@@ ]_rcx, cmp_rax@@ _0x4@@ 3, ja_0x1@@ e@@ 4e, lea_rdx_[rip+0x12@@ 7b@@ 4], lea_rsi_[rax@@ +2], mov_dword_ptr_[rdx@@ +rax*4@@ ]_4, mov_qword_ptr_[rip+0x@@ 12@@ 78@@ 2]@@ _rsi, cmp_rcx@@ _0x4@@ 3, ja_0x1@@ e@@ 2b, mov_dword_ptr_[rdx@@ +rcx@@ *4@@ ]_6, lea_rcx_[rax@@ +3], mov_qword_ptr_[rip+0x@@ 12@@ 7@@ 66@@ ]_rcx, cmp_rsi@@ _0x4@@ 3, ja_0x1@@ e0@@ f, add_rax_4, mov_dword_ptr_[r@@ dx+r@@ si@@ *4@@ ]_8, mov_qword_ptr_[rip+0x@@ 12@@ 7@@ 4a@@ ]_rax, cmp_rcx@@ _0x4@@ 3, ja_0x1@@ d@@ f3, mov_dword_ptr_[rdx@@ +rcx*@@ 4]_0xa, mov_edi_dword_ptr_[rsp+0x@@ 20], test@@ _dword_ptr_[rsp+0x@@ 38]@@ _edi, je_0x64, mov_rax_qword_ptr_[rip+0x@@ 12@@ 7@@ 28], lea_rsi_[rax+1], mov_qword_ptr_[rip+0x@@ 12@@ 7@@ 1d@@ ]_rsi, cmp_rax@@ _0x4@@ 3, ja_0x1@@ dc@@ 6, lea_rdx_[rip+0x12@@ 7@@ 2c], lea_rcx_[rax@@ +2], mov_dword_ptr_[rdx@@ +rax*@@ 4]@@ _0xf, mov_qword_ptr_[rip+0x@@ 12@@ 6@@ fa@@ ]_rcx, cmp_rsi@@ _0x4@@ 3, ja_0x1@@ da@@ 3, add_rax_3, mov_dword_ptr_[r@@ dx+r@@ si*@@ 4]@@ _0x10, mov_qword_ptr_[rip+0x@@ 12@@ 6d@@ e]_rax, cmp_rcx@@ _0x4@@ 3, ja_0x1@@ d@@ 87, mov_dword_ptr_[rdx@@ +rcx*@@ 4]@@ _0xc, mov_edi_dword_ptr_[r@@ sp+0x18], test@@ _dword_ptr_[rsp+0x@@ 38]@@ _edi, je_0x5f, mov_rax_qword_ptr_[rip+0x@@ 12@@ 6b@@ c], lea_rdx_[rip+0x12@@ 6d@@ 5], lea_rsi@@ _[rax-1], mov_ecx_dword_ptr_[r@@ dx+r@@ si*4], cmp_ecx@@ _0x18, cmove_rax@@ _rsi, lea_rsi_[rax+1], mov_qword_ptr_[rip+0x@@ 12@@ 69@@ c]@@ _rsi, cmp_rax@@ _0x4@@ 3, ja_0x1@@ d@@ 45, lea_rdi_[rax@@ +2], mov_dword_ptr_[rdx@@ +rax*@@ 4]@@ _0x16, mov_qword_ptr_[rip+0x@@ 12@@ 68@@ 0]_rdi, cmp_rsi@@ _0x4@@ 3, ja_0x1@@ d@@ 29, mov_dword_ptr_[r@@ dx+r@@ si*@@ 4]@@ _0x17, cmp_ecx@@ _0x18, je_0x@@ e0@@ 2, mov_edi_dword_ptr_[rsp+0x10], test@@ _dword_ptr_[rsp+0x@@ 38]@@ _edi, je_0x48, mov_rax_qword_ptr_[rip+0x@@ 12@@ 65@@ 5], lea_rdx_[rax+1], mov_qword_ptr_[rip+0x@@ 12@@ 6@@ 4a@@ ]_rdx, cmp_rax@@ _0x4@@ 3, ja_0x1@@ c@@ f3, lea_rcx_[rip+0x12@@ 65@@ 9], mov_dword_ptr_[rcx@@ +rax*@@ 4]@@ _0x1c, add_rax_2, mov_qword_ptr_[rip+0x@@ 12@@ 6@@ 27@@ ]_rax, cmp_rdx@@ _0x4@@ 3, ja_0x1@@ cd@@ 0, mov_dword_ptr_[rcx@@ +rdx*@@ 4]@@ _0xc, cmp_qword_ptr_[rsp+0x28]_0, je_0x2e, mov_rdi_qword_ptr_[rsp+0x28], lea_r8_[rip+0x2@@ 18@@ 2], lea_rcx_[rip+0x12@@ 5f@@ b], mov_edx_0x4@@ 4, lea_rsi_[rip+0x12@@ 60@@ f], call_0x4f@@ 1f, test_eax_eax, js_0x8@@ 42, mov_rdi_r15, call_0x1f@@ 6f, mov_r14_rax, xor_ebx_ebx, lea_rbp_[rip+0x@@ 11@@ 6c@@ e], jmp_0x43, mov_edi_ebx, call_0x2@@ 1f@@ a, cdqe, imul_rdx@@ _rax@@ _0x28, mov_rcx_qword_ptr_[r@@ bp@@ +rdx+0x@@ 20], mov_edx_ecx, test_byte_ptr_[r@@ 15+@@ 4]_2, je_5, and_edx@@ _0xfffffffe, imul_rax_rax@@ _0x28, mov_rdi_r14, add_rax_rbp, movsd_xmm0_qword_ptr_[r@@ ax+0x18], mov_rsi_qword_ptr_[rax], call_0xffffffffffffe@@ ed@@ c, test_rax_rax, je_0x7@@ db, inc_rbx, cmp_rbx@@ _qword_ptr_[rip+0x@@ 12@@ 58@@ 4], jb_0xffffffffffffff@@ b8, mov_qword_ptr_[rip+0x@@ 12@@ 5@@ 5b@@ ]_r14, test_r14_r14, je_0x7@@ d2, cmp_dword_ptr_[rsp+0x@@ 30]_0, jne_0x@@ 84@@ 1, cmp_dword_ptr_[rsp+0x@@ 20]_0, jne_0xd@@ 19, cmp_dword_ptr_[rsp+0x1@@ 8]_0, jne_0x10@@ 23, cmp_dword_ptr_[rsp+0x1@@ 0]_0, jne_0x14@@ 74, cmp_dword_ptr_[r@@ 15@@ ]_5, mov_r12_qword_ptr_[rip+0x@@ 12@@ 5@@ 1b], je_0xb@@ dd, mov_rdi_r12, call_0xfffffffffffff48@@ 2, mov_rdi_qword_ptr_[rip+0x@@ 12@@ 50@@ 6], call_0xfffffffffffff25@@ 6, mov_rdi_r15, call_0xffffffffffffed@@ 5e, xor_eax_eax, mov_rdi_qword_ptr_[rsp+0x1@@ 28], xor_rdi_qword_ptr_fs:[0x28], jne_0x1@@ d@@ 33, add_rsp_0x1@@ 38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_r12_qword_ptr_[rip+0x@@ 12@@ 48@@ 7], mov_edx_5, lea_rsi_[rip+0xb@@ aa@@ b], xor_edi_edi, call_0xffffffffffffef@@ 59, mov_rdi_qword_ptr_[rip+0x@@ 12@@ 4@@ 8d], mov_rdx_rax, mov_rcx_r12, mov_esi_1, xor_eax_eax, call_0xfffffffffffff@@ 4c0, mov_edi_1, call_0xfffffffffffff4a@@ 6, cmp_dword_ptr_[rsp+@@ 8]_-1, jne_0x1@@ 7@@ 27, movzx_eax_byte_ptr_[rsp+0x@@ 38], or_al@@ _byte_ptr_[rsp+0x@@ 44], jne_0x1@@ 7@@ 18, mov_dword_ptr_[rsp+0x18]_1, mov_dword_ptr_[rsp+0x10]_1, mov_dword_ptr_[rsp+0x20]_1, mov_rax_qword_ptr_[rip+0x@@ 11@@ eb@@ 9], lea_rsi_[rax+1], mov_qword_ptr_[rip+0x@@ 11@@ ea@@ e@@ ]_rsi, cmp_rax@@ _0x4@@ 3, ja_0x1@@ 55@@ 7, lea_rdx_[rip+0x11@@ eb@@ d], lea_rcx_[rax@@ +2], mov_dword_ptr_[rdx@@ +rax*@@ 4]@@ _0x1d, mov_qword_ptr_[rip+0x@@ 11@@ e@@ 8b@@ ]_rcx, cmp_rsi@@ _0x4@@ 3, ja_0x1@@ 5@@ 34, mov_dword_ptr_[r@@ dx+r@@ si*@@ 4]@@ _0x1e, lea_rsi_[rax@@ +3], mov_qword_ptr_[rip+0x@@ 11@@ e@@ 6f@@ ]_rsi, cmp_rcx@@ _0x4@@ 3, ja_0x1@@ 5@@ 18, mov_dword_ptr_[rdx@@ +rcx*@@ 4]@@ _0x1f, lea_rcx_[rax@@ +4], mov_qword_ptr_[rip+0x@@ 11@@ e@@ 53@@ ]_rcx, cmp_rsi@@ _0x4@@ 3, ja_0x1@@ 4f@@ c, add_rax@@ _5, mov_dword_ptr_[r@@ dx+r@@ si*@@ 4]_0x20, mov_qword_ptr_[rip+0x@@ 11@@ e@@ 37@@ ]_rax, cmp_rcx@@ _0x4@@ 3, ja_0x1@@ 4e0, mov_dword_ptr_[rdx@@ +rcx*@@ 4]@@ _0x21, mov_qword_ptr_[rip+0x@@ 11@@ f@@ 53@@ ]@@ _0x1d, mov_qword_ptr_[rip+0x@@ 11@@ f4@@ 0]@@ _0x21, mov_dword_ptr_[rsp+0x@@ 30]_1, jmp_0xfffffffffffff@@ 5f@@ b, test_al_al, jne_0xfffffffffffff@@ 60@@ a, mov_eax_1, cmp_edx@@ _5, jne_0xfffffffffffff@@ 5e@@ 9, jmp_0xfffffffffffff@@ 5d@@ e, mov_rdi_r14, call_0xffffffffffffea@@ e6, mov_qword_ptr_[rip+0x@@ 11d@@ 86@@ ]_0, mov_eax_1, jmp_0xfffffffffffff88@@ a, lea_eax_[r@@ 9@@ -0x@@ 21], cmp_eax@@ _0x5d, ja_0xffffffffffff@@ f0@@ 68, mov_rdi_qword_ptr_[rip+0x@@ 11d@@ 48], mov_ecx_r9d, lea_rdx_[rip+0xb@@ 5a@@ 6], mov_esi_1, xor_eax_eax, call_0xffffffffffffed@@ 77, jmp_0xfffffffffffff0@@ 45, cmp_qword_ptr_[rip+0x@@ 11d@@ 15]_0, jne_0xfffffffffffff@@ 5a@@ 7, mov_eax_dword_ptr_[rsp+0x38], or_eax@@ _dword_ptr_[rsp+0x@@ 44], jne_0xfffffffffffff@@ 5@@ 99, xor_eax_eax, lea_rdx_[rip+0x@@ 11d@@ 68], mov_dword_ptr_[rdx@@ +rax*@@ 4]_eax, inc_rax, cmp_rax@@ _0x22, jne_0xfffffffffffffff6, mov_qword_ptr_[rip+0x@@ 11d@@ 3@@ 1]@@ _0x22, jmp_0xfffffffffffff7@@ 1b, lea_rsi_[rip+0xb@@ 6c@@ 9], mov_rdi_r14, call_0xffffffffffffe@@ 60@@ 2, cmp_dword_ptr_[rsp+0x@@ 20]_0, je_0x1@@ 3a@@ 5, lea_rbp_[rsp+0x@@ c0], mov_rdi_rbp, lea_r12_[rsp+0x@@ b8], mov_r13_qword_ptr_[rip+0x@@ 11@@ c@@ d8], call_0x20@@ f8, mov_rsi_r12, or_edi@@ _0xffffffff, call_0x2a@@ 2d, xor_ebx_ebx, test_eax_eax, jle_0x@@ 1f, mov_rdi_qword_ptr_[rsp+0x@@ b8], mov_rax_rdi, jmp@@ _4, inc_ebx, mov_rax_qword_ptr_[rax+0x58], test_rax_rax, jne_0xfffffffffffffff7, call_0x2@@ d0@@ a, xor_edi_edi, movsxd_r14@@ _dword_ptr_[rsp+0x@@ f4], mov_edx_5, lea_rsi_[rip+0xb@@ 65@@ d], call_0xffffffffffffe7@@ 2f, mov_rdx_rax, movsxd_rcx@@ _ebx, mov_r9d_1, mov_r8_r14, lea_rsi_[rip+0xb@@ 65@@ b], mov_rdi_r13, call_0x1@@ 95@@ 1, mov_rbx_qword_ptr_[rsp+0x@@ f8], xor_edi_edi, mov_edx_5, lea_rsi_[rip+0xb@@ 64@@ 4], call_0xffffffffffffe@@ 6f@@ 6, mov_rdx_rax, xor_r9d_r9d, mov_r8_rbx, xor_ecx_ecx, lea_rsi_[rip+0xb@@ 64@@ 9], mov_rdi_r13, call_0x19@@ 1c, xor_edi_edi, movsxd_rbx@@ _dword_ptr_[r@@ sp+0x100], mov_edx_5, lea_rsi_[rip+0xb@@ 27@@ 9], call_0xffffffffffffe@@ 6c@@ 1, mov_rdx_rax, xor_r9d_r9d, xor_ecx_ecx, mov_r8_rbx, lea_rsi_[rip+0xb@@ 6@@ 1b], mov_rdi_r13, call_0x1@@ 8e@@ 7, cmp_dword_ptr_[rsp+0x1@@ 8]_0, je_0x1@@ 59, mov_rdi_rbp, mov_r13_qword_ptr_[rip+0x@@ 11@@ be@@ d], call_0x2@@ 1f@@ d, or_edi@@ _0xffffffff, mov_rsi_r12, call_0x2@@ 2f@@ 2, test_eax_eax, jle_0x@@ 12@@ 75, mov_rdi_qword_ptr_[rsp+0x@@ b8], xor_r14d_r14d, mov_rax_rdi, xor_ecx_ecx, jmp_0xc, add_r14@@ _qword_ptr_[r@@ ax+0x28], inc_rcx, mov_rax_rdx, mov_rdx_qword_ptr_[rax+0x@@ 60], test_rdx_rdx, jne_0xffffffffffffffef, mov_qword_ptr_[rsp+8]_rcx, call_0x2@@ 5d@@ b, mov_rcx_qword_ptr_[rsp+8], mov_rbx_qword_ptr_[rsp+0x@@ c0], mov_edx_5, lea_rsi_[rip+0xb@@ 5d@@ 6], xor_edi_edi, mov_qword_ptr_[rsp+8]_rcx, call_0xffffffffffffe6@@ 26, mov_rcx_qword_ptr_[rsp+8], mov_r9d_1, mov_rdx_rax, mov_r8_rbx, lea_rsi_[rip+0xb@@ 5c@@ 9], mov_rdi_r13, call_0x1@@ 84@@ 6, mov_r8@@ _qword_ptr_[rsp+0x@@ d0], mov_qword_ptr_[rsp+8]_r8, call_0xffffffffffffeb@@ 44, mov_edx_5, lea_rsi_[rip+0xb@@ 5a@@ a], xor_edi_edi, movsxd_rbx_eax, call_0xffffffffffffe@@ 5d@@ e, mov_r10_rax, xor_edx_edx, mov_rax_r14, div@@ _rbx, mov_r8_qword_ptr_[rsp+8], mov_rdx_r10, mov_r9d_1, lea_rsi_[rip+0xb@@ 5@@ 94], mov_rdi_r13, mov_rcx_rax, call_0x1@@ 7f@@ 3, mov_rbx_qword_ptr_[rsp+0x@@ c8], mov_edx_5, lea_rsi_[rip+0xb@@ 17@@ a], xor_edi_edi, call_0xffffffffffffe5@@ 98, mov_rdx_rax, mov_r8_rbx, xor_r9d_r9d, xor_ecx_ecx, lea_rsi_[rip+0xb@@ 56@@ 3], mov_rdi_r13, call_0x1@@ 7b@@ e, mov_rbx_qword_ptr_[rsp+0x@@ d8], mov_edx_5, lea_rsi_[rip+0xb@@ 17@@ 5], xor_edi_edi, call_0xffffffffffffe@@ 56@@ 3, mov_rdx_rax, xor_r9d_r9d, mov_r8_rbx, xor_ecx_ecx, lea_rsi_[rip+0xb@@ 53@@ 5], mov_rdi_r13, call_0x1@@ 78@@ 9, cmp_dword_ptr_[rsp+0x1@@ 0]_0, je_0xfffffffffffff@@ 57@@ 9, mov_rdi_rbp, mov_r13_qword_ptr_[rip+0x@@ 11@@ a8@@ f], call_0x1@@ fa@@ f, or_edi@@ _0xffffffff, mov_rsi_r12, call_0x2@@ 4e@@ 4, test_eax_eax, jle_0x@@ 112@@ 1, mov_rdi_qword_ptr_[rsp+0x@@ b8], xor_ebp_ebp, mov_rax_rdi, xor_ebx_ebx, jmp_7, inc_ebp, add_ebx@@ _dword_ptr_[r@@ di+0x30], mov_rax_qword_ptr_[rax+0x40], test_rax_rax, jne_0xfffffffffffffff4, call_0x27@@ 68, movsxd_r12@@ _dword_ptr_[rsp+0x@@ e0], xor_edi_edi, mov_edx_5, lea_rsi_[rip+0xb@@ 1@@ 1d], call_0xffffffffffffe@@ 4d@@ d, mov_rdx_rax, movsxd_rcx@@ _ebp, mov_r8_r12, mov_r9d_1, mov_rdi_r13, lea_rsi_[rip+0xb@@ 4d@@ a], call_0x16@@ ff, movsxd_rbp@@ _dword_ptr_[rsp+0x@@ e8], xor_edi_edi, mov_edx_5, lea_rsi_[rip+0xb@@ 4c@@ 6], call_0xffffffffffffe@@ 4a@@ 4, mov_rdx_rax, movsxd_rcx@@ _ebx, mov_r8_rbp, mov_r9d_1, mov_rdi_r13, lea_rsi_[rip+0xb@@ 4c@@ 3], call_0x1@@ 6c@@ 6, movsxd_rbx@@ _dword_ptr_[rsp+0x@@ e4], xor_edi_edi, mov_edx_5, lea_rsi_[rip+0x@@ b0@@ cb], call_0xffffffffffffe@@ 46@@ b, mov_rdx_rax, xor_r9d_r9d, mov_r8_rbx, xor_ecx_ecx, mov_rdi_r13, lea_rsi_[rip+0xb@@ 49@@ 5], call_0x16@@ 91, movsxd_rbx@@ _dword_ptr_[rsp+0x@@ ec], xor_edi_edi, mov_edx_5, lea_rsi_[rip+0x@@ b0@@ be], call_0xffffffffffffe4@@ 36, mov_rdx_rax, xor_r9d_r9d, mov_r8_rbx, xor_ecx_ecx, mov_rdi_r13, lea_rsi_[rip+0xb@@ 46@@ 7], call_0x1@@ 65@@ c, mov_ebx_dword_ptr_[rsp+0x@@ f0], xor_edi_edi, mov_edx_5, lea_rsi_[rip+0xb@@ 45@@ 4], call_0xffffffffffffe@@ 40@@ 2, mov_rdx_rax, xor_r9d_r9d, mov_r8_rbx, xor_ecx_ecx, lea_rsi_[rip+0xb@@ 45@@ 1], mov_rdi_r13, call_0x16@@ 28, jmp_0xfffffffffffff4@@ 1d, xor_edi_edi, call_0xffffffffffffe@@ 8e@@ c, xor_esi_esi, mov_rdi_r12, mov_r13_rax, call_0xffffffffffffe@@ 86@@ f, mov_r14_rax, mov_qword_ptr_[rsp+0x10]@@ _r15, xor_ebx_ebx, lea_rbp_[rsp+0x@@ c0], jmp_0x6@@ b, mov_rsi_rbx, mov_rdi_r14, call_0xffffffffffffe7@@ 00, mov_edi_ebx, mov_r15_rax, call_0x1@@ 556, cdqe, imul_rax_rax@@ _0x28, lea_rdi_[rip+0x10@@ a@@ 14], mov_rdx_qword_ptr_[r@@ di+r@@ ax+0x10], mov_rdi_r15, mov_qword_ptr_[rsp+8]_rdx, call_0xffffffffffffe@@ 75@@ 7, mov_r9_rax, test_rax_rax, je_0x2c, mov_rdx_qword_ptr_[rsp+8], or_rcx_0xffffffffffffffff, mov_rdi_rdx, xor_eax_eax, repne_scasb_al_byte_ptr_[rdi], mov_r8d@@ _0x20, lea_rsi_[rip+0xb@@ 3f@@ a], mov_edi_1, add_ecx@@ _0x25, call_0xffffffffffffe@@ 7c@@ 5, inc_rbx, mov_rdx_rbp, mov_rsi_r13, mov_rdi_r12, call_0xffffffffffffe@@ 6d@@ 4, test_eax_eax, je_0xffffffffffffff@@ 87, mov_r15_qword_ptr_[rsp+0x10], test_r14_r14, je_0x3c, mov_rdi_r14, call_0xffffffffffffe@@ 76@@ e, mov_rbp_rax, test_rax_rax, je_0x2c, mov_edx_5, lea_rsi_[rip+0xb@@ 3b@@ f], xor_edi_edi, call_0xffffffffffffe3@@ 13, mov_rsi_rax, mov_edi_1, xor_eax_eax, call_0xffffffffffffe@@ 77@@ 4, mov_rdi_rbp, call_0xffffffffffffe@@ 7c@@ c, mov_rdi_r13, call_0xffffffffffffe@@ 1e@@ 4, jmp_0xfffffffffffff@@ 34@@ 2, add_rax_3, mov_qword_ptr_[rip+0x@@ 11@@ 8@@ 5f@@ ]_rax, cmp_rdi@@ _0x4@@ 3, ja_0x@@ f0@@ 8, mov_dword_ptr_[r@@ dx+r@@ di*@@ 4]@@ _0x18, jmp_0xfffffffffffff@@ 1e8, mov_ebx_dword_ptr_[r@@ sp+8], lea_rsi_[rsp+0x@@ 68], mov_edi_ebx, mov_qword_ptr_[rsp+0x58]_0, mov_qword_ptr_[rsp+0x60]_0, mov_qword_ptr_[rsp+0x70]_0, call_0x2@@ 56@@ 3, test_eax_eax, jle_0x@@ e@@ 3e, lea_rsi_[rip+0xb@@ 4c@@ 1], mov_rdi_r14, call_0xffffffffffffe0@@ ec, mov_eax_dword_ptr_[rsp+8], mov_r12@@ _qword_ptr_[rsp+0x68], not_eax, shr_eax_0x1f, mov_dword_ptr_[rsp+0x20]_eax, lea_rbp_[rip+0x@@ b8@@ 1e], cmp_qword_ptr_[r12+0x@@ 58]_0, jne_0xd, cmp_byte_ptr_[rsp+0x@@ 20]_0, je_0xd@@ f4, xor_esi_esi, mov_rdi_r14, call_0xffffffffffffe@@ 4e@@ 6, mov_r13_rax, test_rax_rax, je_0x@@ fe@@ 7, mov_rax_qword_ptr_[rsp+0x58], mov_edi_dword_ptr_[r@@ 12+8], test_rax_rax, je_7, cmp_dword_ptr_[rax+0x1@@ 0]_edi, je_0xc, call_0xffffffffffffe@@ 2@@ 11, mov_qword_ptr_[rsp+0x58]_rax, mov_rax_qword_ptr_[rsp+0x60], mov_edi_dword_ptr_[r@@ 12+0xc], test_rax_rax, je_7, cmp_dword_ptr_[rax+0x1@@ 0]_edi, je_0xc, call_0xffffffffffffe@@ 2b@@ 3, mov_qword_ptr_[rsp+0x60]_rax, xor_ebx_ebx, cmp_qword_ptr_[rip+0x@@ 11@@ 77@@ f]_0, je_0x65, mov_edi_ebx, call_0x1@@ 3a@@ 6, cmp_eax_0x1@@ 2, ja@@ _0x3f, mov_eax_eax, movsxd_rax_dword_ptr_[r@@ bp@@ +rax*4], add_rax_rbp, jmp_rax, inc_rbx, cmp_rbx@@ _qword_ptr_[rip+0x@@ 11@@ 7@@ 25], mov_qword_ptr_[rsp+0x70]_0, jb_0xffffffffffffff@@ a4, cmp_dword_ptr_[rsp+@@ 8]_0, jns@@ _0x@@ d@@ 28, mov_r12_qword_ptr_[r@@ 12+0x@@ 58], jmp_0xffffffffffffff1c, mov_ebx_dword_ptr_[r@@ sp+8], mov_rax_qword_ptr_[rip+0x@@ 115@@ 09], lea_rsi_[rsp+0x@@ 88], mov_edi_ebx, mov_qword_ptr_[rsp+0x20]_rax, mov_qword_ptr_[rsp+0x78]_0, mov_qword_ptr_[rsp+0x80]_0, mov_qword_ptr_[rsp+0x90]_0, call_0x1@@ be@@ 9, test_eax_eax, jle_0x@@ b@@ 40, mov_rdi_qword_ptr_[rsp+0x20], lea_rsi_[rip+0xa@@ f@@ 50], call_0xffffffffffffdd@@ c0, mov_eax_dword_ptr_[rsp+8], mov_qword_ptr_[rsp+0x1@@ 8]_r15, not_eax, shr_eax_0x1f, mov_dword_ptr_[rsp+0x44]_eax, mov_r12@@ _qword_ptr_[rsp+0x88], lea_rbp_[rip+0x@@ b@@ 53@@ 6], cmp_qword_ptr_[r12+0x@@ 60]_0, jne_0xd, cmp_byte_ptr_[rsp+0x@@ 44]_0, je_0xc@@ 45, mov_rdi_qword_ptr_[rsp+0x20], xor_esi_esi, call_0xffffffffffffe@@ 1b0, mov_r13_rax, test_rax_rax, je_0xc@@ b1, mov_r15_qword_ptr_[rsp+0x18], xor_ebx_ebx, cmp_rbx@@ _qword_ptr_[rip+0x@@ 114@@ 81], jae_0x@@ 3@@ 94, mov_edi_ebx, call_0x10@@ a9, cmp_eax_0x1@@ a, ja_0x1@@ d, mov_eax_eax, movsxd_rax_dword_ptr_[r@@ bp@@ +rax*4], add_rax_rbp, jmp_rax, mov_qword_ptr_[rsp+0x90]_0, inc_rbx, jmp_0xffffffffffffffbd, mov_edx_5, lea_rsi_[rip+0xa@@ e@@ 1b], xor_edi_edi, call_0xffffffffffffde@@ 83, mov_rsi_rax, mov_edi_1, xor_eax_eax, call_0xffffffffffffe@@ 1d@@ 4, cmp_dword_ptr_[rsp+@@ 8]_0, jns@@ _0x8@@ 80, mov_r12_qword_ptr_[r@@ 12+0x@@ 60], jmp_0xfffffffffffffc@@ 23, mov_r14_qword_ptr_[r@@ ip+0x@@ 110@@ b1], lea_rsi_[rip+0xa@@ 9c@@ a], mov_rdi_r14, mov_qword_ptr_[rsp+0x98]_0, mov_qword_ptr_[rsp+0xa0]_0, mov_qword_ptr_[rsp+0xa8]_0, mov_qword_ptr_[rsp+0xb0]_0, mov_qword_ptr_[rsp+0xc0]_0, call_0xffffffffffffd@@ 96@@ b, mov_edi_dword_ptr_[rsp+8], lea_rsi_[rsp+0x@@ b8], call_0x1a@@ ba, test_eax_eax, jle_0x@@ 7@@ 25, mov_eax_dword_ptr_[rsp+8], mov_r12@@ _qword_ptr_[rsp+0xb8], not_eax, shr_eax_0x1f, mov_dword_ptr_[rsp+0x10]_eax, lea_rbp_[rip+0x@@ b@@ 13@@ 9], cmp_qword_ptr_[r12+0x@@ 40]_0, jne_0xd, cmp_byte_ptr_[rsp+0x1@@ 0]_0, je_0x5@@ 36, xor_esi_esi, mov_rdi_r14, call_0xffffffffffffdd@@ 49, mov_r13_rax, test_rax_rax, je_0x@@ 84@@ a, xor_ebx_ebx, cmp_qword_ptr_[rip+0x@@ 110@@ 1e@@ ]_0, je_0x46, mov_edi_ebx, call_0xc@@ 46, cmp_eax_0x1@@ c, ja_0x1@@ e, mov_eax_eax, movsxd_rax_dword_ptr_[r@@ bp@@ +rax*4], add_rax_rbp, jmp_rax, inc_rbx, cmp_rbx@@ _qword_ptr_[rip+0x@@ 10@@ fe@@ 6], mov_qword_ptr_[rsp+0xc0]_0, jb_0xffffffffffffff@@ c2, cmp_dword_ptr_[rsp+@@ 8]_0, js_0x1@@ 5, mov_rax_qword_ptr_[rsp+0xb8], cmp_qword_ptr_[rax+0x@@ 30]_0, jne_0x2@@ 5e, mov_r12_qword_ptr_[r@@ 12+0x@@ 40], jmp_0xffffffffffffff68, mov_rdi_r15, call_0x6f@@ 3, mov_r12_rax, xor_esi_esi, mov_rdi_rax, call_0xffffffffffffd@@ 66@@ 6, lea_rsi_[rip+0xa@@ 8@@ 37], mov_rdi_r12, call_0xffffffffffffd6@@ 27, mov_edx_4, pxor_xmm0_xmm0, lea_rsi_[rip+0xa@@ 8@@ 28], mov_rdi_r12, call_0xffffffffffffd@@ 66@@ f, test_rax_rax, je_0x5@@ b5, mov_edx_4, pxor_xmm0_xmm0, lea_rsi_[rip+0xa@@ 80@@ e], mov_rdi_r12, call_0xffffffffffffd@@ 64@@ e, test_rax_rax, je_0x5@@ 8a, mov_edx_4, pxor_xmm0_xmm0, lea_rsi_[rip+0xa@@ 7f@@ 3], mov_rdi_r12, call_0xffffffffffffd6@@ 2d, test_rax_rax, je_0x5@@ 5f, mov_edx_4, pxor_xmm0_xmm0, lea_rsi_[rip+0xa@@ 7d@@ 9], mov_rdi_r12, call_0xffffffffffffd@@ 60c, test_rax_rax, je_0x5@@ 34, mov_edx_4, pxor_xmm0_xmm0, lea_rsi_[rip+0xa@@ b0@@ 4], mov_rdi_r12, call_0xffffffffffffd@@ 5e@@ b, test_rax_rax, je_0x5@@ 09, mov_rdi_r12, mov_edx_4, pxor_xmm0_xmm0, lea_rsi_[rip+0xa@@ 79@@ b], call_0xffffffffffffd@@ 5c@@ a, lea_r14_[rsp+0x@@ c0], xor_edi_edi, test_rax_rax, je_0x4@@ d4, mov_qword_ptr_[rsp+8]@@ _r15, mov_r15_rdi, jmp_0x1@@ 3a, mov_rbx_r15, shl_rbx_4, xor_esi_esi, mov_rdi_r12, add_rbx_qword_ptr_[r@@ ax+0x38], call_0xffffffffffffd@@ 96@@ 5, mov_rbp_rax, test_rax_rax, je_0x4@@ 66, mov_rdx_r15, lea_rsi_[rip+0xa@@ 75@@ 3], mov_rdi_r14, xor_eax_eax, call_0x68@@ 5, mov_rdx_qword_ptr_[rsp+0x@@ c0], xor_esi_esi, mov_rdi_rbp, call_0xffffffffffffd4@@ 93, test_eax_eax, jne_0xfffffffffffff@@ 80@@ b, mov_edx_dword_ptr_[rbx], lea_rsi_[rip+0xa@@ f8@@ 3], mov_rdi_r14, call_0x65@@ a, mov_rdx_qword_ptr_[rsp+0x@@ c0], mov_esi_1, mov_rdi_rbp, call_0xffffffffffffd@@ 46@@ 5, test_eax_eax, jne_0xfffffffffffff7@@ dd, mov_edx_dword_ptr_[rbx+4], lea_rsi_[rip+0xa@@ f@@ 54], mov_rdi_r14, call_0x6@@ 2b, mov_rdx_qword_ptr_[rsp+0x@@ c0], mov_esi_2, mov_rdi_rbp, call_0xffffffffffffd4@@ 36, test_eax_eax, jne_0xfffffffffffff7@@ ae, mov_edx_dword_ptr_[rbx+8], lea_rsi_[rip+0xa@@ f2@@ 5], mov_rdi_r14, call_0x5f@@ c, mov_rdx_qword_ptr_[rsp+0x@@ c0], mov_esi_3, mov_rdi_rbp, call_0xffffffffffffd@@ 40@@ 7, test_eax_eax, jne_0xfffffffffffff7@@ 7f, mov_edx_dword_ptr_[rbx+0xc], lea_rsi_[rip+0xa@@ ef@@ 6], mov_rdi_r14, call_0x5c@@ d, mov_rdx_qword_ptr_[rsp+0x@@ c0], mov_esi_4, mov_rdi_rbp, call_0xffffffffffffd@@ 3d8, test_eax_eax, jne_0xfffffffffffff7@@ 50, mov_edi_dword_ptr_[r@@ bx+0xc], call_0x7f@@ 98, mov_rdx_rax, mov_esi_5, mov_rdi_rbp, mov_qword_ptr_[rsp+0xc0]_rax, call_0xffffffffffffd@@ 3b0, test_eax_eax, jne_0xfffffffffffff7@@ 28, inc_r15, mov_rax_qword_ptr_[rsp+0xb8], cmp_r15@@ _qword_ptr_[r@@ ax+0x30], jb_0xfffffffffffffe@@ bf, mov_rsi_r12, mov_rdi_r13, mov_r15_qword_ptr_[rsp+8], call_0xffffffffffffd@@ 7a@@ 3, mov_rdi_qword_ptr_[rsp+0x@@ b8], call_0x1@@ 7f@@ 6, jmp_0xffffffffffffe@@ 5b@@ b, mov_rdi_qword_ptr_[rsp+0x68], call_0x1a@@ 28, jmp_0xffffffffffffe@@ 48@@ 7, test_ebx_ebx, js_0xffffffffffff@@ e@@ 480, xor_edi_edi, mov_edx_5, lea_rsi_[rip+0xa@@ 3c0], call_0xffffffffffffd@@ 44@@ 8, mov_rdi_rax, mov_esi_ebx, xor_eax_eax, call_0xffffffffffffd@@ 4c@@ c, jmp_0xffffffffffffe@@ 45@@ b, test_ebx_ebx, js_0xffffffffffff@@ e@@ 45@@ f, xor_edi_edi, mov_edx_5, lea_rsi_[rip+0xa@@ 39@@ 4], call_0xffffffffffffd4@@ 1c, mov_rdi_rax, mov_esi_ebx, xor_eax_eax, call_0xffffffffffffd@@ 4a0, jmp_0xffffffffffffe@@ 4@@ 3a, xor_r14d_r14d, xor_ecx_ecx, jmp_0xffffffffffffed@@ c0, xor_ebp_ebp, xor_ebx_ebx, jmp_0xffffffffffffe@@ f0@@ 5, cmp_dword_ptr_[rsp+0x1@@ 8]_0, lea_rbp_[rsp+0x@@ c0], lea_r12_[rsp+0x@@ b8], jne_0xffffffffffff@@ ed@@ 47, jmp_0xffffffffffffee@@ 94, call_0x8@@ 33, mov_ebx_dword_ptr_[r@@ sp+8], test_ebx_ebx, js_0xffffffffffff@@ e@@ 40@@ 2, xor_edi_edi, mov_edx_5, lea_rsi_[rip+0xa@@ 32@@ c], call_0xffffffffffffd@@ 3b@@ 4, mov_rdi_rax, mov_esi_ebx, xor_eax_eax, call_0xffffffffffffd4@@ 38, jmp_0xffffffffffffe@@ 3d@@ d, mov_rdi_qword_ptr_[rsp+0x88], mov_r15_qword_ptr_[rsp+0x18], call_0x1@@ 26@@ b, jmp_0xffffffffffffe@@ 30@@ 5, mov_edx_5, lea_rsi_[rip+0x@@ 97@@ e0], jmp_0xfffffffffffff@@ 3d@@ 3, call_0xffffffffffffd@@ 29@@ 3, lea_rsi_[rip+0x@@ 9d@@ b7], xor_edi_edi, mov_edx_5, call_0xffffffffffffd@@ 238, mov_rsi_rax, mov_edi_1, xor_eax_eax, call_0xffffffffffffd@@ 29@@ 9, mov_edi_0x2@@ 14, call_0x6a@@ f, mov_edi_0x2@@ 12, call_0x6a@@ 5, mov_edi_0x2@@ 10, call_0x6@@ 9b, mov_edi_0x2@@ 0e, call_0x6@@ 91, mov_edi_0x2@@ 0c, call_0x68@@ 7, mov_edi_0x2@@ 0a, call_0x67@@ d
endbr64, xor_ebp_ebp, mov_r9_rdx, pop_rsi, mov_rdx_rsp, and_rsp_0xfffffffffffffff0, push_rax, push_rsp, lea_r8_[rip+0x@@ 8a@@ e6], lea_rcx_[rip+0x@@ 8a@@ 6f], lea_rdi_[rip-0x@@ 28@@ 38], call_qword_ptr_[rip+0x@@ 10@@ 68@@ 2], hlt
lea_rdi_[rip+0x10@@ 6c@@ 1], lea_rax_[rip+0x10@@ 6b@@ a], cmp_rax_rdi, je_0x17, mov_rax_qword_ptr_[rip+0x@@ 10@@ 65@@ e], test_rax_rax, je_0xb, jmp_rax, ret
lea_rdi_[rip+0x10@@ 69@@ 1], lea_rsi_[rip+0x10@@ 68@@ a], sub_rsi_rdi, mov_rax_rsi, shr_rsi@@ _0x3f, sar_rax_3, add_rsi_rax, sar_rsi_1, je_0x16, mov_rax_qword_ptr_[rip+0x@@ 10@@ 63@@ 5], test_rax_rax, je_0xa, jmp_rax, ret
endbr64, cmp_byte_ptr_[rip+0x@@ 10@@ 67@@ d]_0, jne_0x2d, push_rbp, cmp_qword_ptr_[rip+0x@@ 10@@ 6@@ 12]_0, mov_rbp_rsp, je_0xe, mov_rdi_qword_ptr_[rip+0x@@ 10@@ 6@@ 26], call_0xffffffffffffc@@ ea@@ e, call_0xffffffffffffff@@ 69, mov_byte_ptr_[rip+0x@@ 10@@ 6@@ 55@@ ]_1, pop_rbp, ret, ret
endbr64, jmp_0xffffffffffffff7@@ c
push_r12, push_rbx, mov_rbx_rdi, sub_rsp_8, call_0xffffffffffffd@@ 28@@ 6, test_rax_rax, je_0x8a, mov_r12_rax, test_byte_ptr_[r@@ bx+@@ 4]_1, jne_0x50, cmp_dword_ptr_[rbx@@ ]_5, ja@@ _0x22, mov_eax_dword_ptr_[rbx], lea_rdx_[rip+0xa@@ 56@@ 1], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, add_rsp_8, pop_rbx, mov_rax_r12, pop_r12, ret, mov_esi_1, mov_rdi_rax, call_0xffffffffffffc@@ f0@@ 9, jmp_0xffffffffffffffa5, lea_rsi_[rip+0x9@@ 55@@ 5], xor_edi_edi, mov_edx_5, call_0xffffffffffffd0@@ 46, mov_rsi_rax, mov_edi_1, xor_eax_eax, call_0xffffffffffffd@@ 39@@ 7
sub_rsp_0xd8, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, mov_r10_rsi, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rcx_rsp, lea_rax_[rsp+0x20], mov_rdx_r10, mov_esi_1, mov_dword_ptr_[rsp]_0x10, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffd@@ 34@@ 6, test_eax_eax, js_0x1@@ a, mov_rdx_qword_ptr_[rsp+0x18], xor_rdx_qword_ptr_fs:[0x28], jne_0x1d, add_rsp_0xd8, ret, lea_rsi_[rip+0x@@ 9c@@ 1c], mov_edi_1, xor_eax_eax, call_0xffffffffffffd@@ 2c@@ 7, call_0xffffffffffffc@@ fa@@ 2
push_rbx, mov_rbx_rdi, mov_rax_qword_ptr_[rbx], mov_edi_esi, test_rax_rax, je_7, cmp_dword_ptr_[rax+0x1@@ 0]_esi, je_0xf, call_0xffffffffffffcf@@ 1d, mov_qword_ptr_[rbx]_rax, test_rax_rax, je_0x1a, mov_rdi_qword_ptr_[rax], test_rdi_rdi, je_0x12, call_0xffffffffffffd@@ 4b@@ 8, test_rax_rax, je_0xc, pop_rbx, ret, xor_eax_eax, pop_rbx, ret, lea_rsi_[rip+0x@@ 9b@@ d2], mov_edi_1, call_0xffffffffffffd@@ 26@@ 8
endbr64, push_r14, mov_r14_rdi, push_r13, mov_r13_rsi, push_r12, lea_r12_[rip+0x@@ 9b@@ c6], push_rbp, lea_rbp_[rip+0x@@ f@@ 58@@ 9], push_rbx, xor_ebx_ebx, jmp_0xe, mov_r12_qword_ptr_[r@@ bp], add_rbp@@ _0x28, mov_rdx_r13, mov_rsi_r12, mov_rdi_r14, call_0xffffffffffffd@@ 24@@ 7, test_eax_eax, jne_9, cmp_byte_ptr_[r@@ 12+r@@ 13]_0, je_0x39, inc_rbx, cmp_rbx@@ _0x22, jne_0xffffffffffffffd8, mov_edx_5, lea_rsi_[rip+0x@@ 9b@@ 83], xor_edi_edi, call_0xffffffffffffc@@ ea0, mov_rdi_rax, mov_rsi_r14, xor_eax_eax, call_0xffffffffffffcf@@ 23, mov_eax_0xffffffff, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_eax_ebx, cmp_rbx@@ _0xc, jbe_0xffffffffffff@@ fff@@ 1, cmp_qword_ptr_[rip+0x@@ 10@@ 5@@ 29@@ ]_rbx, ja@@ _0xb, cmp_qword_ptr_[rip+0x@@ 10@@ 5@@ 1@@ 8]_rbx, jae_0xffffffffffffff@@ df, mov_edx_5, lea_rsi_[rip+0x9@@ 38@@ 2], jmp_0xffffffffffffffb@@ 8
sub_rsp_8, test_edi_edi, js@@ _0x22, movsxd_rdi_edi, cmp_rdi@@ _qword_ptr_[rip+0x@@ 10@@ 3b@@ e], jae_0x@@ 54, lea_rax_[rip+0x10@@ 3d@@ 5], mov_eax_dword_ptr_[rax+r@@ di*4], cmp_eax_0x2@@ 1, ja_0x2@@ 6, add_rsp_8, ret, lea_rcx_[rip+0xa@@ 50@@ 1], mov_edx_0x@@ ee, lea_rsi_[rip+0x@@ 9b@@ 09], lea_rdi_[rip+0x@@ 9b@@ 14], call_0xffffffffffffcf@@ 2e, lea_rcx_[rip+0xa@@ 4e@@ 2], mov_edx_0x@@ f0, lea_rsi_[rip+0x9a@@ ea], lea_rdi_[rip+0x9@@ 34@@ 7], call_0xffffffffffffc@@ f0@@ f, lea_rcx_[rip+0xa@@ 4c@@ 3], mov_edx_0x@@ ef, lea_rsi_[rip+0x9a@@ cb], lea_rdi_[rip+0x@@ 9a@@ df], call_0xffffffffffffc@@ ef@@ 0
push_r15, push_r14, push_r13, mov_r13d@@ _r9d, push_r12, mov_r12_r8, push_rbp, push_rbx, sub_rsp_0x38, mov_qword_ptr_[rsp+8]_rsi, mov_qword_ptr_[rsp+0x10]_rdx, mov_qword_ptr_[rsp]_rcx, xor_esi_esi, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0xffffffffffffd0@@ 1c, test_rax_rax, je_0x1@@ c5, xor_r14d_r14d, cmp_qword_ptr_[rip+0x@@ 10@@ 2f@@ 3]_0, je_0x7a, mov_rbp_rax, mov_rax_r12, and_eax_1, mov_qword_ptr_[rsp+0x18]_rax, lea_rbx_[rip+0x@@ a@@ 2@@ 14], lea_r15_[rsp+0x20], mov_edi_r14d, mov_qword_ptr_[rsp+0x20]_0, call_0xfffffffffffffe@@ f4, sub_eax@@ _0x1d, cmp_eax_4, ja_0x3@@ 4, movsxd_rax_dword_ptr_[r@@ bx+rax*4], add_rax_rbx, jmp_rax, inc@@ _r14, cmp_qword_ptr_[rip+0x@@ 10@@ 27@@ b@@ ]_r14, ja_0xffffffffffffff@@ ab, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x13@@ a, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, xor_edi_edi, call_0xffffffffffffc@@ bd@@ 3, mov_rsi_rax, mov_edi_1, xor_eax_eax, call_0xffffffffffffcf@@ 24, mov_edx_5, lea_rsi_[rip+0x9@@ 13@@ b], jmp_0xffffffffffffffde, call_0xffffffffffffc@@ bf@@ 1
push_rax, pop_rax, mov_edx_5, lea_rsi_[rip+0x9@@ 13@@ a], xor_edi_edi, sub_rsp_8, call_0xffffffffffffcb@@ 8c, mov_rsi_rax, mov_edx_0x4@@ 3, mov_edi_1, xor_eax_eax, call_0xffffffffffffc@@ be@@ 8
push_rax, pop_rax, lea_rdx_[rip+0x@@ 98@@ 5b], lea_rsi_[rip+0x9@@ 140], xor_eax_eax, mov_ecx_edi, sub_rsp_8, mov_edi_1, call_0xffffffffffffc@@ eb@@ 3
push_r12, pxor_xmm0_xmm0, push_rbp, sub_rsp_0xa8, mov_qword_ptr_[rsp+8]_rsi, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm0, movaps_xmmword_ptr_[rsp+0x70]_xmm0, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm0, cmp_edi_2, je_0x40, cmp_edi@@ _3, je_0xf3, cmp_edi_1, je_0xc2, lea_rsi_[rip+0x@@ 98@@ 34], xor_edi_edi, mov_edx_5, call_0xffffffffffffca@@ de, mov_rsi_rax, mov_edi_1, xor_eax_eax, call_0xffffffffffffcb@@ 3f, lea_r12_[rsp+0x10], lea_rdi_[rsp+8], mov_rsi_r12, lea_rbp_[rsp+0x@@ 50], call_0xffffffffffffc@@ 8e@@ e, mov_rsi_rbp, mov_rdi_r12, call_0xffffffffffffcf@@ 23, mov_rdx_rbp, mov_ecx_dword_ptr_[rdx], add_rdx_4, lea_eax_[rcx-0x1010101], not_ecx, and_eax_ecx, and_eax_0x80808080, je_0xffffffffffffffeb, mov_ecx_eax, shr_ecx_0x10, test_eax_0x8080, cmove_eax_ecx, lea_rcx_[rdx+2], cmove_rdx_rcx, mov_esi_eax, add_sil@@ _al, sbb_rdx_3, cmp_byte_ptr_[rdx@@ -1]_0xa, je_0x82, mov_rdi_rbp, call_0xffffffffffffc@@ fe@@ 9, test_rax_rax, je_0x7f, mov_rsi_qword_ptr_[rsp+0x98], xor_rsi_qword_ptr_fs:[0x28], jne_0x67, add_rsp_0xa8, pop_rbp, pop_r12, ret, lea_rbp_[rsp+0x@@ 50], lea_rdi_[rsp+8], mov_r8d@@ _0x40, mov_rcx_rbp, xor_edx_edx, lea_rsi_[rip+0x@@ ff@@ 84], call_0x3e@@ 74, jmp_0xffffffffffffffb3, lea_rbp_[rsp+0x@@ 50], lea_rdi_[rsp+8], mov_ecx_0x40, mov_rdx_rbp, mov_esi_0x2@@ 7, call_0x3d@@ a1, jmp_0xffffffffffffff90, mov_byte_ptr_[rdx@@ -1]_0, jmp_0xffffffffffffff80, call_0xffffffffffffca@@ 17, lea_rsi_[rip+0x@@ 96@@ 90], mov_edi_1, call_0xffffffffffffcd@@ 2@@ 6
push_rbx, mov_rbx_rdi, mov_rax_qword_ptr_[rbx], mov_edi_esi, test_rax_rax, je_7, cmp_dword_ptr_[rax+0x1@@ 0]_esi, je_0xf, call_0xffffffffffffca@@ 4d, mov_qword_ptr_[rbx]_rax, test_rax_rax, je_0x1a, mov_rdi_qword_ptr_[rax], test_rdi_rdi, je_0x12, call_0xffffffffffffcf@@ 28, test_rax_rax, je_0xc, pop_rbx, ret, xor_eax_eax, pop_rbx, ret, lea_rsi_[rip+0x@@ 96@@ 42], mov_edi_1, call_0xffffffffffffc@@ cd@@ 8
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_r12_qword_ptr_[rip+0x@@ fe@@ 83], mov_rdi_r12, call_0xffffffffffffc@@ 7f@@ 8, mov_rdi_r12, mov_r13_rax, call_0xffffffffffffc8@@ 2d, mov_rdi_r12, mov_ebp_eax, call_0xffffffffffffc@@ 90@@ 3, mov_ebx_eax, test_ebp_ebp, jne_0x9a, test_eax_eax, je_0x13, call_0xffffffffffffc7@@ 40, mov_edx_dword_ptr_[rax], test_r13_r13, jne_0x56, cmp_edx@@ _9, jne_0x51, mov_rbp_qword_ptr_[rip+0x@@ fe@@ 58], mov_rdi_rbp, call_0xffffffffffffc@@ 7b@@ 5, mov_rdi_rbp, mov_r12_rax, call_0xffffffffffffc7@@ ea, mov_ebx_eax, mov_rdi_rbp, call_0xffffffffffffc@@ 8c0, test_ebx_ebx, jne_0x99, test_eax_eax, je_0x11, test_r12_r12, jne_0x42, call_0xffffffffffffc@@ 6f@@ a, cmp_dword_ptr_[rax@@ ]_9, jne_0x38, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, cmp_edx@@ _0x20, je_0xffffffffffffff@@ ae, test_edx_edx, je_0x43, xor_edi_edi, mov_edx_5, lea_rsi_[rip+0x@@ 96@@ 1e], call_0xffffffffffffc@@ 8b@@ 9, mov_rdi_rax, xor_eax_eax, call_0xffffffffffffc@@ 75@@ f, mov_edi_1, call_0xffffffffffffc@@ 6f@@ 5, call_0xffffffffffffc@@ 6b@@ 0, mov_edx_dword_ptr_[rax], test_ebx_ebx, jne_0xffffffffffffffc7, cmp_edx@@ _0x20, je_0xffffffffffffff@@ 73, mov_dword_ptr_[rax]_0, xor_edi_edi, mov_edx_5, lea_rsi_[rip+0x@@ 95@@ dd], call_0xffffffffffffc@@ 87@@ 8, mov_rdi_rax, xor_eax_eax, call_0xffffffffffffc@@ 8f@@ e, jmp_0xffffffffffffffbf, test_eax_eax, jne_0xffffffffffffffb4, call_0xffffffffffffc@@ 66@@ c, cmp_dword_ptr_[rax]@@ _0x20, je_0xffffffffffffff@@ aa, mov_dword_ptr_[rax]_0, jmp_0xffffffffffffffa@@ 2
push_r13, push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_8, mov_rdi_qword_ptr_[rdi+0x30], test_rdi_rdi, je_0xd8, mov_r13d_dword_ptr_[r@@ 12], test_r13d_r13d, js_0x@@ cb, mov_esi_0x10, call_0xffffffffffffca@@ 74, mov_rbp_rax, test_rax_rax, je_0xc0, mov_qword_ptr_[r12+0x@@ 38]_rax, xor_ebx_ebx, jmp_0x15, mov_rbp_qword_ptr_[r@@ 12+0x@@ 38], mov_r13d_dword_ptr_[r@@ 12], mov_rax_rbx, shl_rax_4, add_rbp_rax, xor_ecx_ecx, mov_edx_0xc, mov_esi_ebx, mov_edi_r13d, xor_eax_eax, call_0xffffffffffffcc@@ ef, mov_dword_ptr_[rbp]_eax, test_eax_eax, js_0x@@ 95, mov_edi_dword_ptr_[r@@ 12], xor_ecx_ecx, mov_edx_0xe, mov_esi_ebx, xor_eax_eax, call_0xffffffffffffc@@ cd@@ 0, mov_dword_ptr_[rbp+@@ 4]_eax, test_eax_eax, js_0x@@ 9f, mov_edi_dword_ptr_[r@@ 12], xor_ecx_ecx, mov_edx_0xf, mov_esi_ebx, xor_eax_eax, call_0xffffffffffffc@@ cb@@ 1, mov_dword_ptr_[rbp+@@ 8]_eax, test_eax_eax, js_0xa@@ 9, mov_edi_dword_ptr_[r@@ 12], xor_ecx_ecx, mov_edx_0xb, mov_esi_ebx, xor_eax_eax, call_0xffffffffffffcc@@ 92, mov_dword_ptr_[rbp+0x@@ c]_eax, test_eax_eax, js_0x@@ b3, inc_rbx, cmp_rbx_qword_ptr_[r@@ 12+0x30], jb_0xffffffffffffff@@ 6a, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_edx_0x10, lea_rsi_[rip+0x9@@ 4a@@ e], mov_edi_1, xor_eax_eax, call_0xffffffffffffca@@ 96, mov_edx_5, lea_rsi_[rip+0x@@ 9f@@ 6c], xor_edi_edi, call_0xffffffffffffc7@@ 22, mov_rsi_rax, lea_rdx_[rip+0x@@ 9f@@ 65], mov_edi_1, xor_eax_eax, call_0xffffffffffffca@@ 6c, mov_edx_5, lea_rsi_[rip+0x@@ 9f@@ 43], xor_edi_edi, call_0xffffffffffffc@@ 6f@@ 9, mov_rsi_rax, lea_rdx_[rip+0x@@ 9f@@ 4b], mov_edi_1, xor_eax_eax, call_0xffffffffffffca@@ 43, mov_edx_5, lea_rsi_[rip+0x@@ 9f@@ 1a], xor_edi_edi, call_0xffffffffffffc@@ 6d@@ 0, mov_rsi_rax, lea_rdx_[rip+0x@@ 9f@@ 32], mov_edi_1, xor_eax_eax, call_0xffffffffffffca@@ 1a, mov_edx_5, lea_rsi_[rip+0x@@ 9e@@ f1], xor_edi_edi, call_0xffffffffffffc@@ 6a@@ 7, mov_rsi_rax, lea_rdx_[rip+0x@@ 9f@@ 19], mov_edi_1, xor_eax_eax, call_0xffffffffffffc@@ 9f@@ 1
endbr64, push_rbx, xor_esi_esi, mov_rbx_rdi, sub_rsp_0x30, lea_rdi_[rip+0x@@ 9e@@ fb], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0xffffffffffffcb@@ 1b, test_eax_eax, jne_0x14, xor_esi_esi, lea_rdi_[rip+0x@@ 9e@@ f1], call_0xffffffffffffc@@ b0@@ 9, test_eax_eax, je_0x4a, xor_edi_edi, mov_rdx_rsp, mov_esi_3, call_0xffffffffffffca@@ 36, test_eax_eax, js@@ _0x5f, mov_eax_dword_ptr_[rsp+0x10], mov_dword_ptr_[rbx+0x@@ 34]_eax, mov_eax_dword_ptr_[rsp+0xc], mov_dword_ptr_[rbx+0x@@ 40]_eax, movsxd_rax_dword_ptr_[r@@ sp+8], mov_qword_ptr_[rbx+0x38]_rax, xor_eax_eax, mov_rcx_qword_ptr_[rsp+0x28], xor_rcx_qword_ptr_fs:[0x28], jne_0x7b, add_rsp_0x30, pop_rbx, ret, xor_esi_esi, lea_rdi_[rip+0x9@@ ea@@ f], call_0xffffffffffffc@@ aa@@ f, test_eax_eax, jne_0xffffffffffffffa@@ 8, xor_edi_edi, lea_rsi_[rbx+0x@@ 34], lea_rdx_[rip+0x@@ 9e@@ 69], call_0x5e@@ 89, test_eax_eax, je_0x12, mov_eax_1, jmp_0xffffffffffffffb7, xor_edi_edi, lea_rsi_[rbx+0x@@ 40], lea_rdx_[rip+0x@@ 9e@@ 5b], call_0x5e@@ 63, test_eax_eax, jne_0xffffffffffffffdc, xor_edi_edi, lea_rsi_[rbx+0x@@ 38], lea_rdx_[rip+0x@@ 9e@@ 5d], call_0x5c@@ fd, test_eax_eax, setne_al, movzx_eax_al, jmp_0xffffffffffffff7c, call_0xffffffffffffc@@ 5c@@ b
endbr64, push_r12, lea_rsi_[rip+0xa@@ 18@@ 1], push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x30, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_dword_ptr_[rdi+0x@@ 30]@@ _0x7@@ fff, lea_rdi_[rip+0x@@ 9e@@ 24], call_0xffffffffffffca@@ 3c, test_rax_rax, je_0x37, mov_rdi_rax, mov_rbp_rax, lea_rcx_[r@@ bx+0x28], xor_eax_eax, lea_rdx_[rbx+0x@@ 24], lea_r9_[r@@ bx+0x20], lea_r8_[r@@ bx+0x@@ 2c], lea_rsi_[rip+0x@@ 9e@@ 10], call_0xffffffffffffc@@ 3a@@ 3, mov_r12d_eax, mov_rdi_rbp, call_0xffffffffffffc@@ 4d@@ 8, cmp_r12d@@ _4, je_0x54, pxor_xmm0_xmm0, mov_rcx_rsp, mov_edx_3, xor_esi_esi, xor_edi_edi, xor_eax_eax, mov_qword_ptr_[rsp+0x20]_0, movaps_xmmword_ptr_[rsp]_xmm0, movaps_xmmword_ptr_[rsp+0x10]_xmm0, call_0xffffffffffffc@@ a0@@ 9, mov_r8d_eax, mov_eax_1, test_r8d_r8d, js@@ _0x20, mov_eax_dword_ptr_[rsp+4], mov_dword_ptr_[rbx+0x20]_eax, mov_eax_dword_ptr_[rsp+0x10], mov_dword_ptr_[rbx+0x@@ 24]_eax, mov_eax_dword_ptr_[rsp+8], mov_dword_ptr_[rbx+0x@@ 28]_eax, mov_eax_dword_ptr_[rsp+0x14], mov_dword_ptr_[rbx+0x@@ 2c]_eax, xor_eax_eax, mov_rsi_qword_ptr_[rsp+0x28], xor_rsi_qword_ptr_fs:[0x28], jne_0xb, add_rsp_0x30, pop_rbx, pop_rbp, pop_r12, ret, call_0xffffffffffffc@@ 4e@@ 0
endbr64, push_r12, xor_esi_esi, push_rbp, mov_rbp_rdi, sub_rsp_0x88, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x78]_rax, xor_eax_eax, mov_qword_ptr_[rdi+0x1@@ 8]_1, lea_rdi_[rip+0x@@ 9d@@ 57], call_0xffffffffffffc@@ 9@@ 1e, test_eax_eax, jne_0x14, xor_esi_esi, lea_rdi_[rip+0x@@ 9d@@ 5d], call_0xffffffffffffc@@ 90@@ c, test_eax_eax, je_0x5d, mov_rdx_rsp, mov_esi_3, xor_edi_edi, call_0xffffffffffffc@@ 9@@ 19, mov_r12d_1, test_eax_eax, js@@ _0x1f, mov_rax_qword_ptr_[rsp+0x10], xor_r12d_r12d, mov_qword_ptr_[rbp]_rax, mov_rax_qword_ptr_[rsp+0x20], mov_qword_ptr_[rbp+0x10]_rax, mov_rax_qword_ptr_[rsp], mov_qword_ptr_[rbp+8]_rax, mov_rax_qword_ptr_[rsp+0x78], xor_rax_qword_ptr_fs:[0x28], jne_0x63, add_rsp_0x88, pop_rbp, mov_eax_r12d, pop_r12, ret, xor_esi_esi, lea_rdi_[rip+0x@@ 9d@@ 08], call_0xffffffffffffc8@@ 9f, mov_r12d_eax, test_eax_eax, jne_0xffffffffffffff92, lea_rsi_[r@@ bp+0x10], xor_edi_edi, lea_rdx_[rip+0x@@ 9c@@ bf], call_0x5b@@ 26, lea_rsi_[r@@ bp+8], xor_edi_edi, lea_rdx_[rip+0x@@ 9c@@ c5], call_0x5b@@ 14, lea_rdx_[rip+0x@@ 9c@@ d1], mov_rsi_rbp, xor_edi_edi, call_0x5b@@ 03, jmp_0xffffffffffffff91, call_0xffffffffffffc@@ 3d@@ c
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp@@ _0x108, mov_qword_ptr_[rsp]_rsi, mov_ebx_edi, mov_esi@@ _0x68, mov_edi_1, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x20@@ f8]_rax, xor_eax_eax, call_0xffffffffffffc@@ 5a0, test_rax_rax, je_0x1@@ 30, mov_rbp_rax, mov_rax_qword_ptr_[rsp], mov_qword_ptr_[rbp+0x@@ 60]_0, mov_qword_ptr_[rax]_rbp, lea_rsi_[rip+0x@@ 9f@@ 27], lea_rdi_[rip+0x@@ 9c@@ 53], call_0xffffffffffffc@@ 80@@ 2, mov_r15_rax, test_rax_rax, je_0x1@@ 58, mov_rdi_r15, call_0xffffffffffffc@@ 46@@ d, cmp_eax_0xa, jne_0xfffffffffffffff5, xor_r12d_r12d, lea_r13_[rsp+0x@@ f0], lea_r14_[rip+0x@@ 9c@@ b9], mov_rdx_r15, mov_esi_0x2000, mov_rdi_r13, call_0xffffffffffffc5@@ 16, test_rax_rax, je_0x109, lea_rax_[rbp+0x@@ 58], mov_qword_ptr_[rbp+0x@@ 50]@@ _0x@@ d@@ ead, mov_qword_ptr_[rbp+0x@@ 58]@@ _0x@@ d@@ ead, push_rax, lea_rax_[rbp+0x@@ 50], lea_rdx_[r@@ bp+4], push_rax, lea_rax_[rbp+0x@@ 40], lea_r9_[r@@ bp+0x28], push_rax, lea_rax_[r@@ bp+0x38], lea_r8_[r@@ bp+0x18], push_rax, lea_rax_[r@@ bp+0x30], mov_rcx_rbp, push_rax, lea_rax_[r@@ bp+0x14], mov_rsi_r14, push_rax, lea_rax_[rbp+0x10], mov_rdi_r13, push_rax, lea_rax_[r@@ bp+0xc], push_rax, lea_rax_[r@@ bp+8], push_rax, lea_rax_[r@@ bp+0x20], push_rax, lea_rax_[rbp+0x@@ 4c], push_rax, lea_rax_[r@@ bp+0x48], push_rax, xor_eax_eax, call_0xffffffffffffc@@ 60@@ 5, add_rsp_0x60, cmp_eax_0xd, jle_0xffffffffffffff@@ 78, test_ebx_ebx, js@@ _0x61, cmp_dword_ptr_[r@@ bp@@ ]_ebx, jne_0xffffffffffffff@@ 6b, mov_r12d_1, mov_rdi_r15, call_0xffffffffffffc@@ 1f@@ d, mov_rax_qword_ptr_[rsp+0x@@ 20@@ f8], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ b2, add_rsp_0x2@@ 108, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_edx@@ _0x68, lea_rsi_[rip+0x@@ 8f@@ 6d], mov_edi_1, xor_eax_eax, call_0xffffffffffffc@@ 555, mov_esi@@ _0x68, mov_edi_1, call_0xffffffffffffc@@ 44@@ 6, test_rax_rax, je_0xffffffffffffffd6, mov_qword_ptr_[rbp+0x@@ 60]_rax, inc_r12d, mov_qword_ptr_[rax+0x@@ 60]_0, mov_rbp_rax, jmp_0xfffffffffffffee9, test_r12d_r12d, jne_0xffffffffffffff@@ 82, mov_rax_qword_ptr_[rsp], mov_rdi_qword_ptr_[rax], call_0xffffffffffffb@@ f7@@ 9, jmp_0xffffffffffffff74, lea_rdx_[rsp+0x10], mov_esi@@ _0xe, xor_edi_edi, call_0xffffffffffffc@@ 68@@ 3, mov_r13d_eax, mov_eax_ebx, not_eax, mov_dword_ptr_[rsp+0xc]_eax, xor_r12d_r12d, lea_r14_[rsp+0x@@ 80], test_r13d_r13d, js@@ _0xfc, mov_rdx_r14, mov_esi@@ _0xd, mov_edi_r15d, call_0xffffffffffffc@@ 65@@ 4, test_eax_eax, js_0x@@ cf, mov_edx_dword_ptr_[rsp+0xc], test_edx_edx, jns@@ _0xa, cmp_ebx_eax, jne_0x@@ bf, mov_dword_ptr_[rbp]_eax, mov_eax_dword_ptr_[rsp+0x@@ 94], mov_qword_ptr_[rbp+0x@@ 50]@@ _0x@@ d@@ ead, mov_dword_ptr_[rbp+0x@@ 18]_eax, mov_rax_qword_ptr_[rsp+0x@@ d8], mov_qword_ptr_[rbp+0x@@ 58]@@ _0x@@ d@@ ead, mov_qword_ptr_[rbp+0x20]_rax, mov_rax_qword_ptr_[rsp+0x80], inc_r12d, mov_qword_ptr_[rbp+@@ 4]_rax, mov_rax_qword_ptr_[rsp+0x88], mov_qword_ptr_[rbp+0x@@ c]_rax, mov_eax_dword_ptr_[rsp+0x@@ 8c], mov_dword_ptr_[rbp+0x@@ 14]_eax, mov_rax_qword_ptr_[rsp+0xb0], mov_qword_ptr_[rbp+0x@@ 28]_rax, mov_rax_qword_ptr_[rsp+0xb8], mov_qword_ptr_[rbp+0x@@ 30]_rax, mov_rax_qword_ptr_[rsp+0xc0], mov_qword_ptr_[rbp+0x@@ 38]_rax, mov_rax_qword_ptr_[rsp+0xc8], mov_qword_ptr_[rbp+0x@@ 40]_rax, mov_rax_qword_ptr_[rsp+0xd0], mov_qword_ptr_[rbp+0x@@ 48]_rax, test_ebx_ebx, jns_0xfffffffffffffe@@ 93, mov_esi@@ _0x68, mov_edi_1, call_0xffffffffffffc@@ 3@@ 1b, test_rax_rax, je_0xfffffffffffffea@@ b, mov_qword_ptr_[rbp+0x@@ 60]_rax, mov_qword_ptr_[rax+0x@@ 60]_0, mov_rbp_rax, inc@@ _r15d, cmp_r13d@@ _r15d, jge_0xffffffffffffff@@ 19, test_r12d_r12d, jne_0xfffffffffffffe@@ 57, mov_rax_qword_ptr_[rsp], xor_r12d_r12d, mov_rdi_qword_ptr_[rax], call_0xffffffffffffbe@@ 3f, jmp_0xfffffffffffffe@@ 42, call_0xffffffffffffc0@@ b@@ 5
endbr64, test_rdi_rdi, je_0x21, push_rbx, mov_rbx_rdi, mov_rdi_rbx, mov_rbx_qword_ptr_[r@@ bx+0x60], call_0xffffffffffffbe@@ 19, test_rbx_rbx, jne_0xfffffffffffffff1, pop_rbx, ret, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rsi, mov_esi_0x4@@ 8, push_rbx, mov_ebx_edi, mov_edi_1, sub_rsp_0xb8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xa8]_rax, xor_eax_eax, call_0xffffffffffffc@@ 26@@ 9, test_rax_rax, je_0x109, mov_qword_ptr_[rbp]_rax, mov_qword_ptr_[rax+0x@@ 40]_0, lea_rsi_[rip+0x@@ 9b@@ f6], lea_rdi_[rip+0x@@ 99@@ 34], mov_r15_rax, call_0xffffffffffffc@@ 4c@@ e, mov_r13_rax, test_rax_rax, je_0x1@@ 32, mov_rdi_r13, call_0xffffffffffffc@@ 13@@ 5, cmp_eax_0xa, jne_0xfffffffffffffff5, xor_r12d_r12d, lea_r14_[rip+0x@@ 9@@ 9c@@ 9], mov_rdi_r13, call_0xffffffffffffc@@ 28@@ e, test_eax_eax, jne_0x@@ ef, lea_rax_[r@@ 15+0x20], push_rax, lea_rax_[r@@ 15+0x28], lea_rdx_[r@@ 15+4], push_rax, lea_rax_[r@@ 15+0x14], lea_r9_[r@@ 15+0x30], push_rax, lea_rax_[r@@ 15+0x10], lea_r8_[r@@ 15+0x18], push_rax, lea_rax_[r@@ 15+0xc], mov_rcx_r15, push_rax, lea_rax_[r@@ 15+8], mov_rsi_r14, push_rax, mov_rdi_r13, xor_eax_eax, call_0xffffffffffffbd@@ ec, add_rsp_0x30, cmp_eax_0xa, jne_0xffffffffffffffaf, test_ebx_ebx, js_0x4@@ c, cmp_dword_ptr_[r@@ 15@@ ]_ebx, jne_0xffffffffffffffa6, mov_rdi_r15, call_0xfffffffffffff7@@ 12, mov_r12d_1, mov_rdi_r13, call_0xffffffffffffb@@ f0@@ 4, mov_rax_qword_ptr_[rsp+0xa8], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ 93, add_rsp_0xb8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_esi_0x4@@ 8, mov_edi_1, call_0xffffffffffffc@@ 16@@ 6, test_rax_rax, jne_0x1e, mov_edx_0x4@@ 8, lea_rsi_[rip+0x@@ 8c@@ 5d], mov_edi_1, xor_eax_eax, call_0xffffffffffffc@@ 24@@ 5, mov_qword_ptr_[r15+0x@@ 40]_rax, mov_qword_ptr_[rax+0x@@ 40]_0, mov_rdi_r13, inc_r12d, mov_r15_rax, call_0xffffffffffffc@@ 1a@@ b, test_eax_eax, je_0xffffffffffffff@@ 23, test_r12d_r12d, jne_0xffffffffffffff@@ 6e, mov_rdi_qword_ptr_[rbp], call_0xffffffffffffbc@@ 6b, jmp_0xffffffffffffff5f, lea_rcx_[rsp+0x10], mov_edx_0x1@@ 3, xor_esi_esi, xor_edi_edi, xor_eax_eax, call_0xffffffffffffc@@ 3b@@ 1, mov_ecx_ebx, not_ecx, mov_dword_ptr_[rsp+8]_eax, mov_dword_ptr_[rsp+0xc]_ecx, xor_r12d_r12d, lea_r14_[rsp+0x@@ 40], test_eax_eax, js_0x@@ ba, xor_esi_esi, xor_eax_eax, mov_rcx_r14, mov_edx_0x12, mov_edi_r13d, call_0xffffffffffffc@@ 38@@ 1, test_eax_eax, js_0x8@@ 7, mov_edx_dword_ptr_[rsp+0xc], test_edx_edx, jns@@ _6, cmp_ebx_eax, jne_0x77, mov_dword_ptr_[r15]_eax, mov_eax_dword_ptr_[rsp+0x54], mov_dword_ptr_[r15+0x1@@ 8]_eax, mov_rax_qword_ptr_[rsp+0x90], mov_qword_ptr_[r15+0x@@ 30]_rax, mov_rax_qword_ptr_[rsp+0x40], mov_qword_ptr_[r15+@@ 4]_rax, mov_rax_qword_ptr_[rsp+0x48], mov_qword_ptr_[r15+0x@@ c]_rax, mov_eax_dword_ptr_[rsp+0x4c], mov_dword_ptr_[r15+0x1@@ 4]_eax, mov_rax_qword_ptr_[rsp+0x70], mov_qword_ptr_[r15+0x@@ 28]_rax, mov_rax_qword_ptr_[rsp+0x80], mov_qword_ptr_[r15+0x@@ 20]_rax, test_ebx_ebx, jns@@ _0x5@@ 5, mov_esi_0x4@@ 8, mov_edi_1, call_0xffffffffffffc0@@ 54, test_rax_rax, je_0xfffffffffffffe@@ f4, mov_qword_ptr_[r15+0x@@ 40]_rax, mov_qword_ptr_[rax+0x@@ 40]_0, add_r12d@@ _2, mov_r15_rax, inc_r13d, cmp_dword_ptr_[rsp+@@ 8]_r13d, jge_0xffffffffffffff@@ 5b, test_r12d_r12d, jne_0xfffffffffffffe@@ 83, mov_rdi_qword_ptr_[rbp], xor_r12d_r12d, call_0xffffffffffffbb@@ 75, jmp_0xfffffffffffffe@@ 71, mov_rdi_r15, inc_r12d, call_0xfffffffffffff56@@ 5, jmp_0xfffffffffffffe@@ 61, call_0xffffffffffffb@@ dd@@ b
endbr64, test_rdi_rdi, je_0x39, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rbp_rbx, mov_rdi_qword_ptr_[rbp+0x@@ 38], mov_rbx_qword_ptr_[r@@ bx+0x40], call_0xffffffffffffbb@@ 2d, mov_rdi_rbp, call_0xffffffffffffbb@@ 25, test_rbx_rbx, jne_0xffffffffffffffe5, add_rsp_8, pop_rbx, pop_rbp, ret, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_ebp_edi, mov_edi_1, push_rbx, mov_rbx_rsi, mov_esi_0x6@@ 0, sub_rsp_0x118, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x108]_rax, xor_eax_eax, call_0xffffffffffffbf@@ 69, test_rax_rax, je_0x1@@ 39, mov_qword_ptr_[rbx]_rax, mov_qword_ptr_[rax+0x@@ 58]_0, lea_rsi_[rip+0x@@ 98@@ f7], lea_rdi_[rip+0x@@ 96@@ 47], mov_r15_rax, call_0xffffffffffffc@@ 1c@@ f, mov_r13_rax, test_rax_rax, je_0x1@@ 62, mov_rdi_r13, call_0xffffffffffffbe@@ 35, cmp_eax_0xa, jne_0xfffffffffffffff5, xor_r12d_r12d, lea_r14_[rip+0x@@ 96@@ f1], mov_rdi_r13, call_0xffffffffffffbf@@ 8e, test_eax_eax, jne_0x1@@ 1f, lea_rax_[r@@ 15+0x30], push_rax, lea_rax_[r@@ 15+0x28], lea_rdx_[r@@ 15+4], push_rax, lea_rax_[r@@ 15+0x20], lea_r9_[r@@ 15+0x38], push_rax, lea_rax_[r@@ 15+0x14], lea_r8_[r@@ 15+0x18], push_rax, lea_rax_[r@@ 15+0x10], mov_rcx_r15, push_rax, lea_rax_[r@@ 15+0xc], mov_rsi_r14, push_rax, lea_rax_[r@@ 15+8], mov_rdi_r13, push_rax, lea_rax_[r@@ 15+0x@@ 54], push_rax, lea_rax_[r@@ 15+0x@@ 50], push_rax, lea_rax_[r@@ 15+0x40], push_rax, xor_eax_eax, call_0xffffffffffffba@@ d8, add_rsp_0x50, cmp_eax@@ _0xe, jne_0xffffffffffffff@@ 9b, test_ebp_ebp, js@@ _0x68, cmp_dword_ptr_[r@@ 15]@@ _ebp, jne_0xffffffffffffff92, lea_rdx_[rsp+0x90], mov_esi_2, mov_edi_ebp, call_0xffffffffffffc0@@ 32, mov_r12d_1, cmp_eax_-1, je_0xe, mov_rax_qword_ptr_[rsp+0x@@ e8], mov_qword_ptr_[r15+0x@@ 48]_rax, mov_rdi_r13, call_0xffffffffffffbb@@ d3, mov_rax_qword_ptr_[r@@ sp+0x108], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ b7, add_rsp_0x118, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_esi_0x6@@ 0, mov_edi_1, call_0xffffffffffffbe@@ 36, test_rax_rax, jne_0x1e, mov_edx_0x6@@ 0, lea_rsi_[rip+0x8@@ 92@@ d], mov_edi_1, xor_eax_eax, call_0xffffffffffffbf@@ 15, mov_qword_ptr_[r15+0x@@ 58]_rax, mov_qword_ptr_[rax+0x@@ 58]_0, mov_rdi_r13, inc_r12d, mov_r15_rax, call_0xffffffffffffbe@@ 7b, test_eax_eax, je_0xfffffffffffffe@@ f3, test_r12d_r12d, jne_0xffffffffffffff@@ 6f, mov_rdi_qword_ptr_[rbx], call_0xffffffffffffb@@ 93@@ c, jmp_0xffffffffffffff61, lea_rdx_[rsp+0x10], mov_esi_0xc, xor_edi_edi, call_0xffffffffffffbf@@ 66, mov_ecx_ebp, not_ecx, mov_dword_ptr_[rsp+8]_eax, mov_dword_ptr_[rsp+0xc]_ecx, xor_r12d_r12d, lea_r14_[rsp+0x@@ 90], test_eax_eax, js@@ _0xf@@ 2, mov_rdx_r14, mov_esi@@ _0xb, mov_edi_r13d, call_0xffffffffffffbf@@ 37, test_eax_eax, js_0x@@ c3, mov_edx_dword_ptr_[rsp+0xc], test_edx_edx, jns@@ _0xa, cmp_ebp_eax, jne_0x@@ b3, mov_dword_ptr_[r15]_eax, mov_rax_qword_ptr_[rsp+0x90], inc_r12d, mov_qword_ptr_[r15+@@ 4]_rax, mov_rax_qword_ptr_[rsp+0x98], mov_qword_ptr_[r15+0x@@ c]_rax, mov_rax_qword_ptr_[rsp+0xa0], mov_qword_ptr_[r15+0x1@@ 4]_rax, mov_rax_qword_ptr_[rsp+0xc0], mov_qword_ptr_[r15+0x@@ 20]_rax, mov_rax_qword_ptr_[rsp+0xc8], mov_qword_ptr_[r15+0x@@ 28]_rax, mov_rax_qword_ptr_[rsp+0xd0], mov_qword_ptr_[r15+0x@@ 30]_rax, mov_rax_qword_ptr_[rsp+0x@@ d8], mov_qword_ptr_[r15+0x@@ 38]_rax, mov_rax_qword_ptr_[rsp+0x@@ e0], mov_qword_ptr_[r15+0x@@ 40]_rax, mov_rax_qword_ptr_[rsp+0x@@ e8], mov_qword_ptr_[r15+0x@@ 48]_rax, mov_rax_qword_ptr_[rsp+0xf0], mov_qword_ptr_[r15+0x@@ 50]_rax, test_ebp_ebp, jns_0xfffffffffffffe@@ 8c, mov_esi_0x6@@ 0, mov_edi_1, call_0xffffffffffffbc@@ ea, test_rax_rax, je_0xfffffffffffffe@@ ba, mov_qword_ptr_[r15+0x@@ 58]_rax, mov_qword_ptr_[rax+0x@@ 58]_0, mov_r15_rax, inc_r13d, cmp_dword_ptr_[rsp+@@ 8]_r13d, jge_0xffffffffffffff@@ 23, test_r12d_r12d, jne_0xfffffffffffffe@@ 4e, mov_rdi_qword_ptr_[rbx], xor_r12d_r12d, call_0xffffffffffffb8@@ 10, jmp_0xfffffffffffffe@@ 3d, call_0xffffffffffffb@@ a8@@ 6
endbr64, test_rdi_rdi, je_0x21, push_rbx, mov_rbx_rdi, mov_rdi_rbx, mov_rbx_qword_ptr_[r@@ bx+0x@@ 58], call_0xffffffffffffb@@ 7e@@ 9, test_rbx_rbx, jne_0xfffffffffffffff1, pop_rbx, ret, ret
endbr64, push_rbp, xor_eax_eax, lea_rdx_[rip+0x9@@ 37@@ 9], push_rbx, mov_rbx_rsi, mov_rbp_rdi, sub_rsp_8, mov_r8d_dword_ptr_[r@@ si+0x18], mov_ecx_dword_ptr_[rsi], and_r8d@@ _0x1ff, mov_esi_1, call_0xffffffffffffbf@@ 65, mov_edi_dword_ptr_[r@@ bx+0x10], call_0xffffffffffffb@@ 9b@@ d, test_rax_rax, je_0xa5, mov_rcx_qword_ptr_[rax], mov_rdi_rbp, xor_eax_eax, lea_rdx_[rip+0x9@@ 34@@ 3], mov_esi_1, call_0xffffffffffffbf@@ 3b, mov_edi_dword_ptr_[r@@ bx+0x14], call_0xffffffffffffba@@ 53, test_rax_rax, je_0xa5, mov_rcx_qword_ptr_[rax], mov_rdi_rbp, xor_eax_eax, lea_rdx_[rip+0x@@ 93@@ 19], mov_esi_1, call_0xffffffffffffbf@@ 11, mov_edi_dword_ptr_[r@@ bx+8], call_0xffffffffffffb@@ 96@@ 9, test_rax_rax, je_0xa5, mov_rcx_qword_ptr_[rax], mov_rdi_rbp, xor_eax_eax, lea_rdx_[rip+0x9@@ 2e@@ f], mov_esi_1, call_0xffffffffffffb@@ ee@@ 7, mov_edi_dword_ptr_[r@@ bx+0xc], call_0xffffffffffffb@@ 9@@ ff, test_rax_rax, je_0xa5, mov_rcx_qword_ptr_[rax], add_rsp_8, pop_rbx, mov_rdi_rbp, lea_rdx_[rip+0x9@@ 2d0], mov_esi_1, xor_eax_eax, pop_rbp, jmp_0xffffffffffff@@ beb@@ 7, mov_ecx_dword_ptr_[r@@ bx+0x10], mov_rdi_rbp, xor_eax_eax, lea_rdx_[rip+0x9@@ 2a@@ b], mov_esi_1, call_0xffffffffffffbe@@ 9c, mov_edi_dword_ptr_[r@@ bx+0x14], call_0xffffffffffffb@@ 9b@@ 4, test_rax_rax, jne_0xffffffffffffff@@ 67, mov_ecx_dword_ptr_[r@@ bx+0x14], mov_rdi_rbp, xor_eax_eax, lea_rdx_[rip+0x9@@ 28@@ 1], mov_esi_1, call_0xffffffffffffbe@@ 72, mov_edi_dword_ptr_[r@@ bx+8], call_0xffffffffffffb@@ 8c@@ a, test_rax_rax, jne_0xffffffffffffff@@ 67, mov_ecx_dword_ptr_[r@@ bx+8], mov_rdi_rbp, xor_eax_eax, lea_rdx_[rip+0x9@@ 25@@ 7], mov_esi_1, call_0xffffffffffffbe@@ 48, mov_edi_dword_ptr_[r@@ bx+0xc], call_0xffffffffffffb@@ 960, test_rax_rax, jne_0xffffffffffffff@@ 67, mov_ecx_dword_ptr_[rbx+0x@@ c], add_rsp_8, pop_rbx, mov_rdi_rbp, lea_rdx_[rip+0x9@@ 23@@ 9], mov_esi_1, xor_eax_eax, pop_rbp, jmp_0xffffffffffff@@ be@@ 1@@ 8
endbr64, push_r14, mov_r14_rcx, push_r13, mov_r13_rdx, push_r12, push_rbp, mov_ebp_r8d, push_rbx, mov_ebx_edi, sub_rsp_0x30, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, test_rsi_rsi, je_0x1@@ 40, mov_rdi_rsi, mov_r12_rsi, call_0xffffffffffffb@@ 86@@ 6, cmp_byte_ptr_[r@@ 12@@ +rax@@ -1]@@ _0x3d, je_0x113, cmp_ebx_1, je_0x1@@ 6a, cmp_ebx_2, je_0x1@@ 91, mov_rdx_r12, lea_rsi_[rip+0x9@@ 1e@@ 7], mov_edi_1, xor_eax_eax, call_0xffffffffffffbc@@ 92, cmp_ebx_2, jle_0x@@ 9a, cmp_ebx_3, jne_0x1@@ 98, mov_r12_rsp, mov_r8d_ebp, lea_rcx_[rip+0x9@@ 1c@@ 9], mov_edx_0x20, mov_esi_1, mov_rdi_r12, xor_eax_eax, call_0xffffffffffffb@@ dd@@ f, mov_rsi_r13, xor_edi_edi, call_0x1@@ 2f@@ 5, mov_rbp_rax, mov_rdx_rax, mov_edi_1, mov_rsi_r12, xor_eax_eax, call_0xffffffffffffbc@@ 40, mov_rdi_rbp, call_0xffffffffffffb@@ 588, test_r14_r14, je_0x18, mov_rdx_r14, lea_rsi_[rip+0x8@@ 4a@@ 5], mov_edi_1, xor_eax_eax, call_0xffffffffffffbc@@ 1d, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ 1c, add_rsp_0x30, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, cmp_ebx_1, ja_0x10@@ 9, mov_r12_rsp, mov_rdi_r12, mov_r8d_ebp, lea_rcx_[rip+0x9@@ 12@@ b], mov_edx_0x20, mov_esi_1, xor_eax_eax, call_0xffffffffffffbd@@ 4b, mov_rdx_r13, mov_rsi_r12, mov_edi_1, xor_eax_eax, call_0xffffffffffffbb@@ b9, jmp_0xffffffffffffff81, mov_rdx_r12, lea_rsi_[rip+0x@@ 84@@ 1f], mov_edi_1, xor_eax_eax, call_0xffffffffffffbb@@ 97, cmp_ebx_2, jne_0xffffffffffffff@@ 02, mov_r12_rsp, mov_rdi_r12, mov_r8d_ebp, lea_rcx_[rip+0x@@ 90@@ cd], mov_edx_0x20, mov_esi_1, xor_eax_eax, call_0xffffffffffffbc@@ ed, mov_rdx_r13, shr_rdx@@ _0xa, mov_rsi_r12, mov_edi_1, xor_eax_eax, call_0xffffffffffffbb@@ 57, jmp_0xffffffffffffff1f, xor_edi_edi, mov_edx_5, lea_rsi_[rip+0x@@ 90@@ 6b], call_0xffffffffffffb@@ 6c@@ a, mov_rsi_rax, mov_rdx_r12, mov_edi_1, xor_eax_eax, call_0xffffffffffffbb@@ 28, jmp_0xffffffffffffff3c, xor_edi_edi, mov_edx_5, lea_rsi_[rip+0x@@ 90@@ 49], call_0xffffffffffffb6@@ 9a, mov_rsi_rax, mov_rdx_r12, mov_edi_1, xor_eax_eax, call_0xffffffffffffba@@ f8, jmp_0xffffffffffffff6a, call_0xffffffffffffb@@ 6b@@ e, jmp_0xffffffffffff@@ bc@@ 79, jmp_0xffffffffffff@@ bc@@ 7@@ 4
mov_qword_ptr_[rsi]_0, test_rdi_rdi, je_0x65, movzx_eax_byte_ptr_[rdi], cmp_al_0x2f, jne_0x4f, movzx_eax_byte_ptr_[r@@ di+1], mov_r8_rdi, inc_rdi, cmp_al_0x2f, je_0xfffffffffffffff4, mov_qword_ptr_[rsi@@ ]_1, movzx_eax_byte_ptr_[r@@ 8+1], cmp_al_0x2f, je_0x20, test_al_al, je_0x1c, mov_eax_2, mov_qword_ptr_[rsi]_rax, movzx_edx_byte_ptr_[r@@ di@@ +rax-1], inc_rax, test_dl_dl, je_7, cmp_dl@@ _0x2f, jne_0xffffffffffffffee, mov_rax_r8, ret, xor_r8d_r8d, test_al_al, je_0xffffffffffffffef, mov_r8_rdi, inc_rdi, jmp_0xffffffffffffffb9, xor_r8d_r8d, jmp_0xffffffffffffffe@@ 2
push_r12, mov_r12_rsi, xor_eax_eax, push_rbp, mov_rbp_rdi, push_rbx, xor_ebx_ebx, movsx_esi@@ _byte_ptr_[rdi], test_sil_sil, je_0x2e, cmp_sil@@ _0x5c, je_0x2c, mov_rdi_r12, call_0xffffffffffffb6@@ 37, test_rax_rax, jne_0x47, inc_ebx, movsxd_rax_ebx, movsx_esi_byte_ptr_[r@@ bp+rax], test_sil_sil, jne_0xffffffffffffffe0, pop_rbx, pop_rbp, pop_r12, ret, lea_eax_[rbx+1], cdqe, cmp_byte_ptr_[rbp@@ +rax]_0, je_0x1e, add_ebx@@ _2, movsxd_rax_ebx, movsx_esi_byte_ptr_[r@@ bp+rax], test_sil_sil, jne_0xffffffffffffffb6, pop_rbx, pop_rbp, pop_r12, ret, movsxd_rax_ebx, pop_rbx, pop_rbp, pop_r12, ret
push_r14, mov_r14d_edx, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, push_rbx, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_qword_ptr_[rsp]_0, call_0xffffffffffffb@@ 34@@ 4, mov_dword_ptr_[rax]_0, mov_edi_dword_ptr_[rip+0x@@ ea@@ 33], test_r12_r12, je_9, cmp_byte_ptr_[r12]_0, jne_0x19, mov_rcx_r12, mov_rdx_r13, lea_rsi_[rip+0x8@@ f7@@ c], xor_eax_eax, call_0xffffffffffffb@@ 578, mov_rbx_rax, mov_edx_r14d, mov_rsi_rsp, xor_ecx_ecx, mov_rdi_r12, call_0xffffffffffffb6@@ 32, mov_edx_dword_ptr_[rbx], test_edx_edx, jne_0x39, mov_rdx_qword_ptr_[rsp], cmp_rdx@@ _r12, je_0x50, test_rdx_rdx, je_7, cmp_byte_ptr_[rdx]_0, jne_0x46, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x41, add_rsp_0x18, pop_rbx, pop_r12, pop_r13, pop_r14, ret, mov_edi_dword_ptr_[rip+0x@@ e@@ 9b@@ a], cmp_edx@@ _0x22, jne_0xffffffffffffff@@ 90, mov_rcx_r12, mov_rdx_r13, lea_rsi_[rip+0x8@@ f0@@ a], xor_eax_eax, call_0xffffffffffffb@@ 7f@@ 6, mov_edi_dword_ptr_[rip+0x@@ e@@ 99@@ a], jmp_0xffffffffffffff73, call_0xffffffffffffb@@ 4c@@ 5
push_r13, mov_r13_rdi, push_r12, mov_r12_rsi, sub_rsp_8, call_0xffffffffffffb@@ 28@@ 2, mov_dword_ptr_[rax]@@ _0x22, mov_edi_dword_ptr_[rip+0x@@ e@@ 97@@ 1], mov_rcx_r13, mov_rdx_r12, lea_rsi_[rip+0x8@@ ec@@ 6], xor_eax_eax, call_0xffffffffffffb@@ 7b@@ 2
push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, sub_rsp_8, call_0xfffffffffffffed@@ 3, mov_edx_0xffffffff, cmp_rax_rdx, ja@@ _0xa, add_rsp_8, pop_rbp, pop_r12, ret, mov_rsi_r12, mov_rdi_rbp, call_0xffffffffffffff@@ 9@@ 6
endbr64, mov_dword_ptr_[rip+0x@@ e9@@ 16@@ ]_edi, ret
endbr64, push_r15, push_r14, mov_r14_rdi, push_r13, push_r12, mov_r12_rsi, push_rbp, push_rbx, sub_rsp_0x48, mov_qword_ptr_[rsp+0x18]_rdx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_qword_ptr_[rsi]_0, call_0xffffffffffffb@@ 1d@@ c, mov_rbp_rax, test_r14_r14, je_0x3@@ 09, movzx_ebx_byte_ptr_[r@@ 14], test_bl_bl, je_0x2@@ fd, call_0xffffffffffffb@@ 98@@ f, mov_rcx_qword_ptr_[rax], mov_r13_rax, mov_rax_r14, jmp_0x10, movzx_ebx_byte_ptr_[r@@ ax+1], inc_rax, movzx_edx@@ _bl, test_byte_ptr_[rcx@@ +rdx*@@ 2+1]_0x20, jne_0xfffffffffffffff1, cmp_bl@@ _0x2d, je_0x2@@ cc, mov_dword_ptr_[rbp]_0, lea_rsi_[rsp+0x30], xor_ecx_ecx, xor_edx_edx, mov_rdi_r14, mov_qword_ptr_[rsp+0x30]_0, mov_qword_ptr_[rsp+0x28]_rsi, call_0xffffffffffffb4@@ 9d, mov_r15_qword_ptr_[rsp+0x30], mov_qword_ptr_[rsp+0x10]_rax, mov_r8d_dword_ptr_[r@@ bp], cmp_r15@@ _r14, je_0x2@@ 87, test_r8d_r8d, jne_0x2@@ be, test_r15_r15, je_0x3@@ 5d, xor_ebx_ebx, xor_r14d_r14d, cmp_byte_ptr_[r15]_0, je_0x3@@ 4e, movzx_eax_byte_ptr_[r@@ 15+1], cmp_al@@ _0x69, je_0xc5, mov_edx_eax, and_edx_0xffffff@@ df, cmp_dl@@ _0x42, jne_0x3@@ 13, cmp_byte_ptr_[r15+@@ 2]_0, je_0x3@@ 6e, call_0xffffffffffffb@@ 20@@ a, test_rax_rax, je_0x2@@ 3a, mov_rdi_qword_ptr_[rax], test_rdi_rdi, je_0x2@@ 2e, mov_qword_ptr_[rsp+0x20]_rdi, call_0xffffffffffffb@@ 2e@@ b, mov_rdx_rax, test_r14_r14, jne_0x2@@ 18, cmp_byte_ptr_[r15]_0, je_0x2@@ 0e, mov_rdi_qword_ptr_[rsp+0x20], mov_rsi_r15, mov_qword_ptr_[rsp+8]_rax, call_0xffffffffffffb0@@ e3, test_eax_eax, jne_0x1@@ f4, mov_rdx_qword_ptr_[rsp+8], lea_rdi_[r@@ 15@@ +rdx], movsx_rdx@@ _byte_ptr_[rdi], cmp_dl@@ _0x30, jne_0x1e, lea_eax_[rbx+1], sub_eax_edi, lea_ebx@@ _[rax+r@@ di], movsx_rdx_byte_ptr_[r@@ di+1], inc_rdi, cmp_dl@@ _0x30, je_0xfffffffffffffff2, mov_rax_qword_ptr_[r13], test_byte_ptr_[rax+rdx*@@ 2+1]_8, jne_0x20@@ f, mov_qword_ptr_[rsp+0x30]_rdi, mov_r15_rdi, movzx_eax_byte_ptr_[r@@ 15+1], cmp_al@@ _0x69, jne_0xffffffffffffff@@ 47, movzx_eax_byte_ptr_[r@@ 15+2], and_eax_0xffffffdf, cmp_al@@ _0x42, jne_0xffffffffffffff@@ 50, cmp_byte_ptr_[r15+@@ 3]_0, jne_0xffffffffffffff@@ 45, mov_r13d@@ _0x400, movsx@@ _r15d@@ _byte_ptr_[r@@ 15], lea_rdi_[rip+0x@@ 8c@@ a3], mov_esi_r15d, call_0xffffffffffffb@@ 2a@@ 5, test_rax_rax, je_0x2@@ 61, lea_rdx_[rip+0x@@ 8c@@ 8b], sub_rax_rdx, lea_edi_[rax+1], test_edi_edi, je_0x2@@ 81, mov_rax_qword_ptr_[rsp+0x10], movsxd_rcx@@ _r13d, mul@@ _rcx, j@@ o@@ _0x2@@ 30, lea_esi_[r@@ di@@ -2], jmp_0x1f, mov_rax_qword_ptr_[rsp+0x10], mul@@ _rcx, set@@ o@@ _al, movzx_eax_al, dec@@ _esi, test_rax_rax, jne_0x20@@ e, mov_rax_qword_ptr_[rsp+0x10], imul_rax@@ _rcx, mov_qword_ptr_[rsp+0x10]_rax, cmp_esi_-1, jne_0xffffffffffffffd6, xor_r8d_r8d, cmp_qword_ptr_[rsp+0x18]_0, je_9, mov_rax_qword_ptr_[rsp+0x18], mov_dword_ptr_[rax]@@ _edi, test_r14_r14, je_0xd4, test_edi_edi, je_0xcc, lea_ecx_[r@@ di@@ -2], mov_edi_1, jmp_0x1c, mov_rax_rdi, mul@@ _r13, set@@ o@@ _al, movzx_eax_al, dec@@ _ecx, test_rax_rax, jne_0xb, imul_rdi@@ _r13, cmp_ecx_-1, jne_0xffffffffffffffe6, mov_ecx_0xa, cmp_r14@@ _0xa, jbe_0x@@ f, lea_rcx_[rcx@@ +rcx*4], add_rcx_rcx, cmp_r14@@ _rcx, ja@@ _0xfffffffffffffff@@ 6, test_ebx_ebx, je_0x17, xor_eax_eax, lea_rcx_[rcx@@ +rcx*4], inc_eax, add_rcx_rcx, cmp_ebx_eax, jne_0xfffffffffffffff5, mov_r9d_1, movabs@@ _r10@@ _0x@@ cccc@@ cccc@@ cccccccd, mov_rax_r14, mul@@ _r10, mov_r11_r9, lea_r9_[r@@ 9+r@@ 9*4], mov_rsi_rdx, shr_rsi@@ _3, lea_rdx_[r@@ si+r@@ si*4], mov_rax_rsi, add_rdx_rdx, mov_rsi_r14, sub_rsi_rdx, mov_rbx_r14, add_r9@@ _r9, mov_r14_rax, test_rsi_rsi, je_0x1f, mov_rax_rcx, xor_edx_edx, div@@ _r11, xor_edx_edx, div_rsi, xor_edx_edx, mov_rsi_rax, mov_rax_rdi, div_rsi, add_qword_ptr_[rsp+0x1@@ 0]_rax, cmp_rbx@@ _9, ja_0xffffffffffffff@@ ad, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[r12]_rax, jmp_0x5@@ a, test_r8d_r8d, jne_0x4a, mov_eax_0x16, mov_r8d@@ _0xffffffea, mov_dword_ptr_[rbp]_eax, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x13@@ 2, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r8d, pop_r15, ret, dec_rax, cmp_rax@@ _-3, jbe_0xfffffffffffffd@@ 41, neg@@ _r8d, test_r8d_r8d, jns_0xffffffffffffff@@ c3, mov_eax_r8d, neg_eax, jmp_0xffffffffffffffb9, mov_dword_ptr_[rbp]_0, mov_rsi_qword_ptr_[rsp+0x28], xor_ecx_ecx, xor_edx_edx, mov_qword_ptr_[rsp+8]_rdi, mov_qword_ptr_[rsp+0x30]_0, call_0xffffffffffffb@@ 18@@ 2, mov_r15_qword_ptr_[rsp+0x30], mov_rdi_qword_ptr_[rsp+8], mov_r8d_dword_ptr_[r@@ bp], mov_r14_rax, cmp_r15@@ _rdi, je_0xffffffffffffff@@ 69, test_r8d_r8d, je_0x38, lea_rax_[rax@@ -1], cmp_rax@@ _-3, ja_0xffffffffffffff@@ a3, test_r15_r15, je_0xffffffffffffff@@ 59, cmp_byte_ptr_[r15]_0, jne_0xfffffffffffffc@@ e7, jmp_0xffffffffffffff49, test_al_al, jne_0xfffffffffffffc@@ fc, jmp_0xfffffffffffffd@@ b7, test_rax_rax, jne_0xffffffffffffffd1, jmp_0xfffffffffffffc@@ c3, mov_rax_qword_ptr_[rsp+0x10], xor_r8d_r8d, mov_qword_ptr_[r12]_rax, jmp_0xffffffffffffff22, mov_r8d@@ _0xffffff@@ de, jmp_0xfffffffffffffe@@ 08, mov_esi_r15d, lea_rdi_[rip+0x@@ 8a@@ 36], call_0xffffffffffffb0@@ 32, test_rax_rax, je_0xfffffffffffffe@@ f2, lea_rdx_[rip+0x@@ 8a@@ 21], sub_rax_rdx, lea_edi_[rax+1], jmp_0xfffffffffffffd@@ 8d, mov_r13d@@ _0x3e8, jmp_0xfffffffffffffd@@ 59, xor_r8d_r8d, cmp_qword_ptr_[rsp+0x18]_0, jne_0xfffffffffffffd@@ cd, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[r12]_rax, jmp_0xfffffffffffffe@@ c5, call_0xffffffffffffa@@ fa@@ a
endbr64, xor_edx_edx, jmp_0xfffffffffffffb@@ 5@@ a
endbr64, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, test_rdi_rdi, jne_0x18, jmp_0x42, call_0xffffffffffffb5@@ 10, mov_rax_qword_ptr_[rax], test_byte_ptr_[rax+r@@ bx*@@ 2+1]_8, je_0xd, inc_rbp, movzx_ebx_byte_ptr_[r@@ bp], test_bl_bl, jne_0xffffffffffffffe8, test_r13_r13, je_6, mov_qword_ptr_[r13@@ ]_rbp, cmp_rbp_r12, jbe_0x@@ 24, cmp_byte_ptr_[rbp]_0, mov_eax_1, jne_0x19, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, test_rsi_rsi, je_9, mov_qword_ptr_[rsi]_0, add_rsp_8, pop_rbx, pop_rbp, pop_r12, xor_eax_eax, pop_r13, ret
endbr64, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, test_rdi_rdi, jne_0x18, jmp_0x42, call_0xffffffffffffb4@@ 90, mov_rax_qword_ptr_[rax], test_byte_ptr_[rax+r@@ bx*@@ 2+1]@@ _0x10, je_0xd, inc_rbp, movzx_ebx_byte_ptr_[r@@ bp], test_bl_bl, jne_0xffffffffffffffe8, test_r13_r13, je_6, mov_qword_ptr_[r13@@ ]_rbp, cmp_rbp_r12, jbe_0x@@ 24, cmp_byte_ptr_[rbp]_0, mov_eax_1, jne_0x19, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, test_rsi_rsi, je_9, mov_qword_ptr_[rsi]_0, add_rsp_8, pop_rbx, pop_rbp, pop_r12, xor_eax_eax, pop_r13, ret
endbr64, push_r13, mov_r13_rdi, push_r12, mov_r12_rsi, push_rbp, push_rbx, sub_rsp_0x58, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0x80], mov_qword_ptr_[rsp+8]_rax, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]_0x10, mov_qword_ptr_[rsp+0x10]_rax, mov_rbx_rax, jmp_0x4d, mov_ecx_edx, mov_rsi_qword_ptr_[r@@ bx@@ +rcx], lea_eax_[r@@ dx+8], mov_dword_ptr_[rsp]_eax, test_rsi_rsi, je_0x81, cmp_eax_0x2f, ja_0x@@ 96, add_edx@@ _0x10, mov_dword_ptr_[rsp]_edx, add_rax_rbx, mov_rbp_qword_ptr_[rax], test_rbp_rbp, je_0x67, mov_rdi_r13, call_0xffffffffffffb0@@ 32, test_eax_eax, je_0x3b, mov_rsi_rbp, mov_rdi_r13, call_0xffffffffffffb0@@ 23, test_eax_eax, je_0x31, mov_edx_dword_ptr_[rsp], cmp_edx_0x2f, jbe_0xffffffffffffff@@ b4, mov_rdx_qword_ptr_[rsp+8], mov_rsi_qword_ptr_[rdx], lea_rax_[rdx+8], mov_qword_ptr_[rsp+8]_rax, test_rsi_rsi, je_0x2e, lea_rdx_[rax+8], mov_qword_ptr_[rsp+8]_rdx, jmp_0xffffffffffffffb6, mov_eax_1, mov_rbx_qword_ptr_[rsp+0x18], xor_rbx_qword_ptr_fs:[0x28], jne_0x2e, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_edi_dword_ptr_[rip+0x@@ e@@ 26@@ a], mov_rcx_r13, mov_rdx_r12, lea_rsi_[rip+0x@@ 87@@ bf], xor_eax_eax, call_0xffffffffffffa@@ db@@ b, mov_rax_qword_ptr_[rsp+8], jmp_0xffffffffffffffb5, call_0xffffffffffffa@@ d7@@ f
endbr64, test_rsi_rsi, je_0x1c, add_rsi_rdi, jmp_0x10, cmp_al@@ _dl, je_0x1e, inc_rdi, cmp_rsi@@ _rdi, je_9, movzx_eax_byte_ptr_[rdi], test_al_al, jne_0xffffffffffffffef, xor_eax_eax, ret, mov_rax_rdi, ret
endbr64, push_r12, mov_edx_0xa, mov_r12_rsi, push_rbp, mov_rbp_rdi, sub_rsp_8, call_0xfffffffffffff8@@ 9a, cmp_eax@@ _0xffff, ja@@ _0xa, add_rsp_8, pop_rbp, pop_r12, ret, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffff84@@ 0
endbr64, push_r12, mov_edx_0x10, mov_r12_rsi, push_rbp, mov_rbp_rdi, sub_rsp_8, call_0xfffffffffffff85@@ a, cmp_eax@@ _0xffff, ja@@ _0xa, add_rsp_8, pop_rbp, pop_r12, ret, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffff80@@ 0
endbr64, mov_edx_0xa, jmp_0xfffffffffffff8@@ 2@@ 7
endbr64, mov_edx_0x10, jmp_0xfffffffffffff8@@ 1@@ 7
endbr64, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, push_rbx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_qword_ptr_[rsp]_0, call_0xffffffffffffaa@@ 35, mov_dword_ptr_[rax]_0, mov_edi_dword_ptr_[rip+0x@@ e@@ 124], test_r12_r12, je_9, cmp_byte_ptr_[r12]_0, jne_0x1a, mov_rcx_r12, mov_rdx_r13, lea_rsi_[rip+0x@@ 86@@ 6d], xor_eax_eax, call_0xffffffffffffac@@ 69, mov_rbx_rax, mov_edx_0xa, mov_rsi_rsp, xor_ecx_ecx, mov_rdi_r12, call_0xffffffffffffab@@ 80, mov_edx_dword_ptr_[rbx], test_edx_edx, jne_0x37, mov_rdx_qword_ptr_[rsp], cmp_rdx@@ _r12, je_0x4e, test_rdx_rdx, je_7, cmp_byte_ptr_[rdx]_0, jne_0x44, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x3f, add_rsp_0x10, pop_rbx, pop_r12, pop_r13, ret, mov_edi_dword_ptr_[rip+0x@@ e0@@ aa], cmp_edx@@ _0x22, jne_0xffffffffffffff8f, mov_rcx_r12, mov_rdx_r13, lea_rsi_[rip+0x8@@ 5f@@ a], xor_eax_eax, call_0xffffffffffffa@@ ee@@ 6, mov_edi_dword_ptr_[rip+0x@@ e0@@ 8a], jmp_0xffffffffffffff72, call_0xffffffffffffa@@ bb@@ 5
endbr64, push_r13, mov_r13_rdi, push_r12, mov_r12_rsi, sub_rsp_8, call_0xffffffffffffff@@ 0e, mov_edx_0x8@@ 0000000, add_rdx_rax, mov_ecx_0xffffffff, cmp_rdx_rcx, ja@@ _0xb, add_rsp_8, pop_r12, pop_r13, ret, call_0xffffffffffffa@@ 94@@ e, mov_dword_ptr_[rax]@@ _0x22, mov_edi_dword_ptr_[rip+0x@@ e0@@ 3d], mov_rcx_r13, mov_rdx_r12, lea_rsi_[rip+0x@@ 85@@ 92], xor_eax_eax, call_0xffffffffffffa@@ e7@@ e
endbr64, push_r13, mov_r13_rdi, push_r12, mov_r12_rsi, sub_rsp_8, call_0xffffffffffffff@@ 8e, lea_edx_[rax+0x@@ 8@@ 000], cmp_edx@@ _0xffff, ja@@ _0xb, add_rsp_8, pop_r12, pop_r13, ret, call_0xffffffffffffa@@ 8f@@ 2, mov_dword_ptr_[rax]@@ _0x22, mov_edi_dword_ptr_[rip+0x@@ d@@ fe@@ 1], mov_rcx_r13, mov_rdx_r12, lea_rsi_[rip+0x@@ 85@@ 36], xor_eax_eax, call_0xffffffffffffae@@ 2@@ 2
endbr64, mov_edx_0xa, jmp_0xfffffffffffff@@ 54@@ 7
endbr64, mov_edx_0x10, jmp_0xfffffffffffff@@ 53@@ 7
endbr64, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, push_rbx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_qword_ptr_[rsp]_0, call_0xffffffffffffa@@ 87@@ 5, mov_dword_ptr_[rax]_0, mov_edi_dword_ptr_[rip+0x@@ df@@ 64], test_r12_r12, je_9, cmp_byte_ptr_[r12]_0, jne_0x1a, mov_rcx_r12, mov_rdx_r13, lea_rsi_[rip+0x8@@ 4a@@ d], xor_eax_eax, call_0xffffffffffffa@@ aa@@ 9, mov_rbx_rax, mov_rsi_rsp, mov_rdi_r12, call_0xffffffffffffa@@ 92@@ 7, mov_eax_dword_ptr_[rbx], test_eax_eax, jne_0x36, mov_rax_qword_ptr_[rsp], cmp_rax_r12, je_0x55, test_rax_rax, je_7, cmp_byte_ptr_[rax]_0, jne_0x4b, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x46, add_rsp_0x10, pop_rbx, pop_r12, pop_r13, ret, mov_edi_dword_ptr_[rip+0x@@ d@@ ef@@ 2], cmp_eax_0x22, jne_0xffffffffffffff@@ 97, mov_rcx_r12, mov_rdx_r13, lea_rsi_[rip+0x8@@ 44@@ 2], xor_eax_eax, call_0xffffffffffffad@@ 2e, mov_edi_dword_ptr_[rip+0x@@ dec@@ a], jmp_0xffffffffffffff72, call_0xffffffffffffa@@ 9f@@ 5
endbr64, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, push_rbx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_qword_ptr_[rsp]_0, call_0xffffffffffffa7@@ 95, mov_dword_ptr_[rax]_0, mov_edi_dword_ptr_[rip+0x@@ de@@ 84], test_r12_r12, je_9, cmp_byte_ptr_[r12]_0, jne_0x1a, mov_rcx_r12, mov_rdx_r13, lea_rsi_[rip+0x8@@ 3c@@ d], xor_eax_eax, call_0xffffffffffffa@@ 9c@@ 9, mov_rbx_rax, mov_edx_0xa, mov_rsi_rsp, mov_rdi_r12, call_0xffffffffffffac@@ 42, mov_edx_dword_ptr_[rbx], test_edx_edx, jne_0x39, mov_rdx_qword_ptr_[rsp], cmp_rdx@@ _r12, je_0x50, test_rdx_rdx, je_7, cmp_byte_ptr_[rdx]_0, jne_0x46, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x41, add_rsp_0x10, pop_rbx, pop_r12, pop_r13, ret, mov_edi_dword_ptr_[rip+0x@@ d@@ e0@@ a], cmp_edx@@ _0x22, jne_0xffffffffffffff8f, mov_rcx_r12, mov_rdx_r13, lea_rsi_[rip+0x8@@ 35@@ a], xor_eax_eax, call_0xffffffffffffac@@ 46, mov_edi_dword_ptr_[rip+0x@@ dd@@ ea], jmp_0xffffffffffffff72, call_0xffffffffffffa@@ 9@@ 1@@ 5
endbr64, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, push_rbx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_qword_ptr_[rsp]_0, call_0xffffffffffffa@@ 6b@@ 5, mov_dword_ptr_[rax]_0, mov_edi_dword_ptr_[rip+0x@@ dd@@ a4], test_r12_r12, je_9, cmp_byte_ptr_[r12]_0, jne_0x1a, mov_rcx_r12, mov_rdx_r13, lea_rsi_[rip+0x8@@ 2e@@ d], xor_eax_eax, call_0xffffffffffffa@@ 8e@@ 9, mov_rbx_rax, mov_edx_0xa, mov_rsi_rsp, mov_rdi_r12, call_0xffffffffffffad@@ 92, mov_edx_dword_ptr_[rbx], test_edx_edx, jne_0x39, mov_rdx_qword_ptr_[rsp], cmp_rdx@@ _r12, je_0x50, test_rdx_rdx, je_7, cmp_byte_ptr_[rdx]_0, jne_0x46, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x41, add_rsp_0x10, pop_rbx, pop_r12, pop_r13, ret, mov_edi_dword_ptr_[rip+0x@@ dd@@ 2a], cmp_edx@@ _0x22, jne_0xffffffffffffff8f, mov_rcx_r12, mov_rdx_r13, lea_rsi_[rip+0x8@@ 27@@ a], xor_eax_eax, call_0xffffffffffffab@@ 66, mov_edi_dword_ptr_[rip+0x@@ dd@@ 0a], jmp_0xffffffffffffff72, call_0xffffffffffffa@@ 83@@ 5
endbr64, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, sub_rsp_0x18, mov_rsi_rsp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xfffffffffffff86@@ b, test_eax_eax, je_0x3c, call_0xffffffffffffa@@ 5d@@ 2, mov_eax_dword_ptr_[rax], mov_edi_dword_ptr_[rip+0x@@ d@@ cc@@ 5], test_eax_eax, mov_rcx_r12, mov_rdx_r13, lea_rsi_[rip+0x8@@ 218], mov_eax_0, je_0x11, call_0xffffffffffffaa@@ ff, call_0xffffffffffffa@@ 800, mov_rdx_qword_ptr_[rsp+8], xor_rdx_qword_ptr_fs:[0x28], mov_rax_qword_ptr_[rsp], jne_0xb, add_rsp_0x18, pop_r12, pop_r13, ret, call_0xffffffffffffa@@ 7a@@ b
endbr64, push_rbx, mov_rbx_rsi, mov_rsi_rdx, call_0xfffffffffffffcc@@ 5, cvttsd2si_rax_xmm0, pxor_xmm1_xmm1, cvtsi2sd_xmm1_rax, mov_qword_ptr_[rbx]_rax, subsd_xmm0_xmm1, mulsd_xmm0_qword_ptr_[rip+0x@@ 8@@ 1d@@ b], cvttsd2si_rax_xmm0, mov_qword_ptr_[rbx+8]_rax, pop_rbx, ret
endbr64, push_r13, mov_edx_edi, mov_rax_rsi, push_r12, and_edx@@ _0xf000, lea_r13_[r@@ si+1], push_rbp, lea_r12_[r@@ si+2], lea_rbp_[r@@ si+@@ 3], push_rbx, lea_r11_[r@@ si+@@ 5], lea_rbx_[r@@ si+4], lea_r10_[r@@ si+@@ 6], lea_r8_[r@@ si+@@ 7], lea_rcx_[rax@@ +@@ 9], add_rsi_8, cmp_edx@@ _0x4000, je_0x1@@ 89, cmp_edx@@ _0xa@@ 000, je_0x65, cmp_edx@@ _0x2000, je_0x1@@ 95, cmp_edx@@ _0x6@@ 000, je_0x1@@ 79, cmp_edx@@ _0xc@@ 000, je_0x1@@ 8d, cmp_edx@@ _0x1000, je_0x1@@ 91, cmp_edx@@ _0x8000, je_0x1@@ 95, mov_r9_rcx, mov_rcx_rsi, mov_rsi_r8, mov_r8@@ _r10, mov_r10@@ _r11, mov_r11@@ _rbx, mov_rbx_rbp, mov_rbp_r12, mov_r12_r13, mov_r13_rax, jmp_0x10, mov_byte_ptr_[rax]@@ _0x6c, lea_r9_[r@@ ax+0x@@ a], mov_edx_edi, and_edx@@ _0x100, cmp_edx_1, sbb_edx_edx, and_edx_0xffffff@@ bb, add_edx@@ _0x72, mov_byte_ptr_[r13@@ ]_dl, mov_edx_edi, and_edx@@ _0x80, cmp_edx_1, sbb_edx_edx, and_edx_0xffffff@@ b6, add_edx@@ _0x7@@ 7, mov_byte_ptr_[r12@@ ]_dl, mov_edx_edi, and_edx@@ _0x40, cmp_edx_1, sbb_edx_edx, test_edi@@ _0x800, je_0x9b, and_edx_0xffffff@@ e0, add_edx@@ _0x73, mov_byte_ptr_[rbp@@ ]_dl, mov_edx_edi, and_edx@@ _0x20, cmp_edx_1, sbb_edx_edx, and_edx_0xffffff@@ bb, add_edx@@ _0x72, mov_byte_ptr_[rbx@@ ]_dl, mov_edx_edi, and_edx@@ _0x10, cmp_edx_1, sbb_edx_edx, and_edx_0xffffff@@ b6, add_edx@@ _0x7@@ 7, mov_byte_ptr_[r@@ 11@@ ]_dl, mov_edx_edi, and_edx@@ _8, cmp_edx_1, sbb_edx_edx, test_edi@@ _0x400, je_0x7f, and_edx_0xffffff@@ e0, add_edx@@ _0x73, mov_byte_ptr_[r@@ 10]@@ _dl, mov_edx_edi, and_edx@@ _4, cmp_edx_1, sbb_edx_edx, and_edx_0xffffff@@ bb, add_edx@@ _0x72, mov_byte_ptr_[r@@ 8]_dl, mov_edx_edi, and_edx_2, cmp_edx_1, sbb_edx_edx, and_edx_0xffffff@@ b6, add_edx@@ _0x7@@ 7, mov_byte_ptr_[rsi@@ ]_dl, mov_edx_edi, and_edx_1, cmp_edx_1, sbb_edx_edx, and_edi@@ _0x200, je_0x27, and_edx_0xffffff@@ e0, add_edx@@ _0x74, mov_byte_ptr_[rcx@@ ]_dl, mov_byte_ptr_[r@@ 9]_0, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, and_edx_0xffffff@@ b5, add_edx@@ _0x78, jmp_0xffffffffffffff6b, and_edx_0xffffff@@ b5, add_edx@@ _0x78, mov_byte_ptr_[rcx@@ ]_dl, mov_byte_ptr_[r@@ 9]_0, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, and_edx_0xffffff@@ b5, add_edx@@ _0x78, jmp_0xffffffffffffff83, mov_byte_ptr_[rax]@@ _0x64, lea_r9_[r@@ ax+0x@@ a], jmp_0xfffffffffffffee8, mov_byte_ptr_[rax]@@ _0x62, lea_r9_[r@@ ax+0x@@ a], jmp_0xfffffffffffffed8, mov_byte_ptr_[rax]@@ _0x63, lea_r9_[r@@ ax+0x@@ a], jmp_0xfffffffffffffec8, mov_byte_ptr_[rax]@@ _0x73, lea_r9_[r@@ ax+0x@@ a], jmp_0xfffffffffffffe@@ b8, mov_byte_ptr_[rax]@@ _0x70, lea_r9_[r@@ ax+0x@@ a], jmp_0xfffffffffffffea@@ 8, mov_byte_ptr_[rax]@@ _0x2d, lea_r9_[r@@ ax+0x@@ a], jmp_0xfffffffffffffe@@ 9@@ 8
endbr64, push_r13, mov_r8_rsi, push_r12, push_rbp, push_rbx, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, test_dil_2, je_0x1@@ 5b, mov_byte_ptr_[rsp+0x@@ b@@ ]_0x20, lea_r10_[rsp+0x@@ c], lea_rbp_[rsp+0x@@ b], mov_eax_0xa, mov_esi_1, mov_rdx_rsi, mov_ecx_eax, shl_rdx_cl, cmp_r8@@ _rdx, jb_0x1@@ 41, add_eax@@ _0xa, cmp_eax_0x4@@ 6, jne_0xffffffffffffffe9, mov_ecx@@ _0x3c, mov_esi_0x@@ cccccccd, mov_edx_ecx, imul_rdx@@ _rsi, lea_rsi_[rip+0x7@@ f0@@ 9], mov_r12_r8, shr_rdx@@ _0x23, movzx_r11d@@ _byte_ptr_[rsi@@ +rdx], mov_rdx_-1, mov_rsi_rdx, shl_rsi@@ _cl, shr@@ _r12@@ _cl, not@@ _rsi, mov_byte_ptr_[r@@ 10]@@ _r11b, mov_r9d_r12d, and_rsi@@ _r8, cmp@@ _r11b@@ _0x42, je_0x1@@ b8, test_dil_1, je_0x1@@ ae, mov_r8d_0x4@@ 26@@ 9, mov_word_ptr_[r@@ 10+@@ 1]@@ _r8w, lea_rdx_[r@@ 10@@ +3], mov_byte_ptr_[rdx]_0, test_rsi_rsi, je_0xe2, lea_ecx_[rax@@ -0x@@ 14], shr_rsi@@ _cl, and_edi@@ _4, je_0x12c, add_rsi@@ _5, movabs_rcx@@ _0x@@ cccc@@ cccc@@ cccccccd, mov_rax_rsi, mul@@ _rcx, mov_rbx_rdx, shr@@ _rbx@@ _3, mov_rax_rbx, imul_rax@@ _rcx, movabs_rdx@@ _0x1@@ 9999@@ 9999@@ 9999@@ 999, ror_rax@@ _1, cmp_rax_rdx, jbe_0x@@ 134, test_rbx_rbx, je_0x92, call_0xffffffffffffa@@ 2e@@ 5, lea_rdx_[rip+0x8@@ 1b@@ d], test_rax_rax, je_0x1c, mov_rdx_qword_ptr_[rax], test_rdx_rdx, je_0x136, cmp_byte_ptr_[rdx]_0, lea_rax_[rip+0x8@@ 1a@@ 2], cmove_rdx_rax, lea_r13_[rsp+0x10], sub_rsp_8, push_rbp, mov_r9d_r12d, lea_r8_[rip+0x@@ 7e@@ 2b], push_rbx, mov_ecx_0x20, mov_esi_0x20, push_rdx, mov_rdi_r13, mov_edx_1, xor_eax_eax, call_0xffffffffffffa@@ 130, add_rsp_0x20, jmp_0x5@@ a, lea_rbp_[rsp+0x@@ b], mov_r10@@ _rbp, jmp_0xfffffffffffffe@@ b2, mov_ecx_eax, sub_ecx@@ _0xa, jne_0xfffffffffffffe@@ cd, mov_eax_0x4@@ 2, mov_word_ptr_[r@@ 10@@ ]_ax, mov_r9d_r8d, lea_r13_[rsp+0x10], sub_rsp_8, push_rbp, mov_ecx_0x20, mov_edx_1, lea_r8_[rip+0x@@ 7d@@ cd], mov_esi_0x20, mov_rdi_r13, xor_eax_eax, call_0xffffffffffffa0@@ d4, pop_rdx, pop_rcx, mov_rdi_r13, call_0xffffffffffffa@@ 8a@@ a, mov_rbx_qword_ptr_[rsp+0x38], xor_rbx_qword_ptr_fs:[0x28], jne_0x8b, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, lea_rdx_[r@@ si+0x@@ 32], mov_rsi_rdx, shr_rsi@@ _2, movabs_rdx@@ _0x2@@ 8f@@ 5c@@ 28@@ f@@ 5c@@ 28@@ f@@ 5c3, mov_rax_rsi, mul_rdx, mov_rbx_rdx, shr@@ _rbx@@ _2, cmp_rbx@@ _0xa, jne_0xfffffffffffffe@@ ec, lea_r9d_[r@@ 12+1], jmp_0xffffffffffffff76, mov_rax_rbx, mul@@ _rcx, mov_rbx_rdx, shr@@ _rbx@@ _3, jmp_0xfffffffffffffe@@ c5, lea_rdx_[r@@ 10+1], jmp_0xfffffffffffffe@@ 63, lea_rdx_[rip+0x@@ 80@@ 75], jmp_0xfffffffffffffed7, call_0xffffffffffffa@@ 2b@@ c
endbr64, test_rdi_rdi, je_0x105, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, sub_rsp_8, movzx_edx_byte_ptr_[rdi], test_dl_dl, je_0xba, test_rsi_rsi, mov_r12_rcx, sete_cl, test_rbp_rbp, sete_al, or@@ _cl_al, mov_r13_rsi, jne_0xa0, test_r12_r12, je_0x97, xor_r15d_r15d, movzx_eax_byte_ptr_[rbx+1], cmp_dl@@ _0x2c, je_0x1d, test_al_al, je_0x20, inc_rbx, cmp_rbp@@ _r15, jbe_0x@@ 8d, mov_edx_eax, movzx_eax_byte_ptr_[rbx+1], cmp_dl@@ _0x2c, jne_0xffffffffffffffe7, mov_r14_rbx, test_al_al, jne_6, lea_r14_[r@@ bx+1], cmp_rdi_r14, jae_0x@@ 56, mov_rsi_r14, sub_rsi_rdi, call_r12, cmp_eax_-1, je_0x48, mov_dword_ptr_[r@@ 13+r@@ 15*@@ 4]_eax, lea_rcx_[r@@ 15+1], cmp_byte_ptr_[r14]_0, je_0x21, movzx_edx_byte_ptr_[r@@ bx+1], lea_rdi_[r@@ bx+1], test_dl_dl, je_0x15, cmp_rbp@@ _rcx, jbe_0x@@ 40, mov_r15_rcx, mov_rbx_rdi, jmp_0xffffffffffffff98, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_ecx, pop_r15, ret, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_0xffffffff, pop_r15, ret, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_0xfffffffe, pop_r15, ret, mov_eax_0xffffffff, ret
endbr64, test_rdi_rdi, je_0x50, push_rbx, movzx_eax_byte_ptr_[rdi], mov_rbx_rcx, test_rcx_rcx, je_0x3d, test_al_al, je_0x39, mov_rcx_r8, mov_r8_qword_ptr_[rbx], cmp_r8@@ _rdx, ja@@ _0x2e, cmp_al_0x2b, je_0x1a, mov_qword_ptr_[rbx]_0, call_0xfffffffffffffeb@@ 1, test_eax_eax, jl@@ e_8, movsxd_rdx_eax, add_qword_ptr_[r@@ bx@@ ]_rdx, pop_rbx, ret, inc_rdi, sub_rdx@@ _r8, lea_rsi_[r@@ si+r@@ 8*4], jmp_0xffffffffffffff@@ e5, mov_eax_0xffffffff, pop_rbx, ret, mov_eax_0xffffffff, ret
endbr64, push_r14, test_rdx_rdx, push_r13, push_r12, push_rbp, mov_rbp_rdx, sete_dl, test_rsi_rsi, sete_al, or_dl_al, push_rbx, jne_0x@@ 85, test_rdi_rdi, je_0x7c, movzx_eax_byte_ptr_[rdi], mov_r13_rsi, mov_rbx_rdi, mov_r12d_1, test_al_al, je_0x77, movzx_edx_byte_ptr_[r@@ bx+1], cmp_al_0x2@@ c, je_0x13, test_dl_dl, je_0x16, inc_rbx, mov_eax_edx, movzx_edx_byte_ptr_[r@@ bx+1], cmp_al_0x2@@ c, jne_0xfffffffffffffff1, mov_r14_rbx, test_dl_dl, jne_6, lea_r14_[r@@ bx+1], cmp_rdi_r14, jae_0x@@ 59, mov_rsi_r14, sub_rsi_rdi, call_rbp, test_eax_eax, js_0x3@@ 4, mov_edx_eax, and_eax_7, sar_edx@@ _3, mov_edi_r12d, mov_ecx_eax, shl_edi@@ _cl, movsxd_rdx_edx, or_byte_ptr_[r@@ 13@@ +rdx@@ ]_dil, cmp_byte_ptr_[r14]_0, je_0x20, movzx_eax_byte_ptr_[rbx+1], inc_rbx, test_al_al, je_0x15, mov_rdi_rbx, jmp_0xffffffffffffffa0, mov_eax_0xffffffea, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, pop_rbx, pop_rbp, pop_r12, pop_r13, xor_eax_eax, pop_r14, ret, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_eax_0xffffffff, pop_r14, ret
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rdx, push_rbx, sub_rsp_8, test_rdx_rdx, sete_dl, test_rsi_rsi, sete_al, or_dl_al, jne_0x6a, test_rdi_rdi, je_0x65, movzx_eax_byte_ptr_[rdi], mov_r13_rsi, mov_rbx_rdi, test_al_al, je_0x6f, movzx_edx_byte_ptr_[r@@ bx+1], cmp_al_0x2@@ c, je_0x13, test_dl_dl, je_0x16, inc_rbx, mov_eax_edx, movzx_edx_byte_ptr_[r@@ bx+1], cmp_al_0x2@@ c, jne_0xfffffffffffffff1, mov_r12_rbx, test_dl_dl, jne_6, lea_r12_[r@@ bx+1], cmp_rdi_r12, jae_0x@@ 51, mov_rsi_r12, sub_rsi_rdi, call_rbp, test_rax_rax, js@@ _0x22, or_qword_ptr_[r@@ 13@@ ]_rax, cmp_byte_ptr_[r12]_0, je_0x29, movzx_eax_byte_ptr_[rbx+1], inc_rbx, test_al_al, je_0x1e, mov_rdi_rbx, jmp_0xffffffffffffffb1, mov_eax_0xffffffea, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, add_rsp_8, pop_rbx, pop_rbp, pop_r12, xor_eax_eax, pop_r13, ret, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_eax_0xffffffff, pop_r13, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_qword_ptr_[rsp]_0, test_rdi_rdi, je_0x61, mov_dword_ptr_[rsi@@ ]_ecx, mov_dword_ptr_[rdx]_ecx, mov_rbx_rdi, mov_r13_rsi, mov_rbp_rdx, mov_r12d_ecx, call_0xffffffffffff9d@@ 31, mov_dword_ptr_[rax]_0, mov_r14_rax, cmp_byte_ptr_[rbx]@@ _0x3a, je_0x60, mov_r15@@ _rsp, mov_edx_0xa, mov_rsi_r15, mov_rdi_rbx, call_0xffffffffffffa@@ 200, mov_dword_ptr_[r13]_eax, mov_dword_ptr_[rbp]_eax, mov_eax_dword_ptr_[r14], test_eax_eax, jne_0x6f, mov_rdx_qword_ptr_[rsp], cmp_rdx_rbx, je_0x66, test_rdx_rdx, je_0x61, movzx_ecx_byte_ptr_[rdx], cmp_cl@@ _0x3a, je_0x69, cmp_cl@@ _0x2d, je_0x74, xor_eax_eax, mov_rdi_qword_ptr_[rsp+8], xor_rdi_qword_ptr_fs:[0x28], jne_0x7f, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, inc_rbx, mov_rsi_rsp, mov_edx_0xa, mov_rdi_rbx, call_0xffffffffffffa@@ 1a@@ 2, mov_dword_ptr_[rbp]_eax, mov_eax_dword_ptr_[r14], test_eax_eax, jne_0x15, mov_rax_qword_ptr_[rsp], test_rax_rax, je_0xc, cmp_byte_ptr_[rax]_0, jne_7, cmp_rax_rbx, jne_0xffffffffffffffb0, mov_eax_0xffffffff, jmp_0xffffffffffffffab, cmp_byte_ptr_[rdx+@@ 1]_0, jne_0xc, mov_dword_ptr_[rbp]@@ _r12d, jmp_0xffffffffffffff96, lea_rbx@@ _[rdx+1], mov_qword_ptr_[rsp]_0, mov_dword_ptr_[r@@ 14]_0, mov_edx_0xa, mov_rsi_r15, jmp_0xffffffffffffffa0, call_0xffffffffffff9e@@ 8@@ 3
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, test_rsi_rsi, je_0xab, test_rdi_rdi, je_0xa2, mov_rbp_rsi, lea_r13_[r@@ sp+8], lea_r12_[rsp+0x10], jmp_0x35, test_rbx_rbx, sete_dl, test_rbp_rbp, sete_al, or_dl_al, jne_0x7a, cmp_r14@@ _r15, jne_0x75, mov_rdx_r14, mov_rsi_rbp, mov_rdi_rbx, call_0xffffffffffff9b@@ fa, test_eax_eax, jne_0x63, lea_rdi_[r@@ bx+r@@ 14], add_rbp@@ _r15, mov_rsi_r13, call_0xffffffffffffe@@ 75@@ 7, mov_rdi_rbp, mov_rsi_r12, mov_rbx_rax, call_0xffffffffffffe@@ 74@@ 9, mov_r14_qword_ptr_[rsp+8], mov_r15_qword_ptr_[rsp+0x10], mov_rbp_rax, mov_rax_r14, add_rax_r15, je_0x21, cmp_rax_1, jne_0xffffffffffffffa3, test_rbx_rbx, je_7, cmp_byte_ptr_[rbx]@@ _0x2f, je_0x11, test_rbp_rbp, je_0x1c, cmp_byte_ptr_[rbp]@@ _0x2f, jne_0xffffffffffffff@@ 8e, mov_eax_1, jmp_0xd, xor_eax_eax, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x11, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xffffffffffff9d@@ 7@@ f
endbr64, mov_rax_rdi, or_rax@@ _rsi, je_0x8e, push_r15, push_r14, push_r13, mov_r13_rdx, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, test_rdi_rdi, je_0x7e, test_rsi_rsi, je_0x99, call_0xffffffffffff9d@@ 0b, mov_rbx_rax, not_rax, xor_r15d_r15d, cmp_r13_rax, ja@@ _0x3a, lea_r14_[r@@ 13+r@@ bx], lea_rdi_[r@@ 14+1], call_0xffffffffffffa0@@ 4f, mov_r15_rax, test_rax_rax, je_0x24, mov_rdx_rbx, mov_rsi_rbp, mov_rdi_rax, call_0xffffffffffff9@@ fd@@ 9, lea_rdi_[r@@ 15+r@@ bx], mov_rdx_r13, mov_rsi_r12, call_0xffffffffffff9@@ fc@@ a, mov_byte_ptr_[r@@ 15+r@@ 14]_0, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_rax_r15, pop_r15, ret, lea_rdi_[rip+0x@@ 6d@@ 46], jmp_0xffffffffffffa@@ 22@@ 1, add_rsp_8, pop_rbx, pop_rbp, mov_rdi_r12, pop_r12, pop_r13, pop_r14, mov_rsi_rdx, pop_r15, jmp_0xffffffffffff@@ 9@@ ea@@ 4, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, jmp_0xffffffffffffa@@ 1e@@ a
endbr64, push_r12, xor_edx_edx, mov_r12_rdi, sub_rsp_0x10, test_rsi_rsi, je_0x17, mov_rdi_rsi, mov_qword_ptr_[rsp+8]_rsi, call_0xffffffffffff9c@@ 44, mov_rsi_qword_ptr_[rsp+8], mov_rdx_rax, add_rsp_0x10, mov_rdi_r12, pop_r12, jmp_0xfffffffffffffee@@ e
endbr64, push_r12, mov_r10_rsi, push_rbp, mov_rbp_rdi, sub_rsp_0xe8, mov_qword_ptr_[rsp+0x40]_rdx, mov_qword_ptr_[rsp+0x48]_rcx, mov_qword_ptr_[rsp+0x50]_r8, mov_qword_ptr_[rsp+0x58]_r9, test_al_al, je_0x3c, movaps_xmmword_ptr_[rsp+0x60]_xmm0, movaps_xmmword_ptr_[rsp+0x70@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, lea_rax_[rsp+0x100], mov_qword_ptr_[rsp+0x18]_rax, lea_rcx_[rsp+0x10], lea_rax_[rsp+0x30], lea_rdi_[rsp+8], mov_rdx_r10, mov_esi_1, mov_dword_ptr_[rsp+0x10]@@ _0x10, mov_dword_ptr_[rsp+0x14]@@ _0x30, mov_qword_ptr_[rsp+0x20]_rax, call_0xffffffffffff9f@@ 11, xor_r12d_r12d, test_eax_eax, js@@ _0x1f, mov_rsi_qword_ptr_[rsp+8], mov_rdi_rbp, movsxd_rdx_eax, call_0xfffffffffffffe@@ 1a, mov_rdi_qword_ptr_[rsp+8], mov_r12_rax, call_0xffffffffffff98@@ fd, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x10, add_rsp_0xe8, pop_rbp, mov_rax_r12, pop_r12, ret, call_0xffffffffffff9b@@ 5@@ a
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x18, mov_r12_qword_ptr_[rdi], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, cmp_byte_ptr_[r12]_0, je_0x136, mov_rbx_rdi, mov_r14_rsi, mov_rdi_r12, mov_rsi_rdx, mov_rbp_rdx, mov_r13d_ecx, call_0xffffffffffff9c@@ 8e, add_r12_rax, movzx_r15d_byte_ptr_[r@@ 12], test_r15b_r15b, je_0xee, test_r13d_r13d, jne_0x45, mov_rsi_rbp, mov_rdi_r12, call_0xffffffffffff9c@@ ad, mov_qword_ptr_[r14]_rax, add_rax_r12, mov_qword_ptr_[rbx]_rax, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ e9, add_rsp_0x18, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, movsx_esi@@ _r15b, lea_rdi_[rip+0x7@@ 50@@ 9], call_0xffffffffffff9a@@ e5, test_rax_rax, je_0x5d, lea_r13_[r@@ 12+1], lea_rsi_[r@@ sp+@@ 6], mov_rdi_r13, mov_byte_ptr_[rsp+@@ 6]@@ _r15b, mov_byte_ptr_[rsp+@@ 7]_0, call_0xffffffffffffe4@@ 64, mov_qword_ptr_[r14]_rax, movzx_edx_byte_ptr_[r@@ 12@@ +rax+1], test_dl_dl, je_0x64, cmp_r15b@@ _dl, jne_0x5f, lea_r14_[r@@ 12@@ +rax+2], movsx_esi_byte_ptr_[r@@ 14], test_sil_sil, je_0xf, mov_rdi_rbp, call_0xffffffffffff9a@@ 9c, test_rax_rax, je_0x44, mov_qword_ptr_[rbx@@ ]_r14, mov_r12_r13, jmp_0xffffffffffffff6d, mov_rsi_rbp, mov_rdi_r12, call_0xffffffffffffe4@@ 1a, mov_qword_ptr_[r14]_rax, lea_r13_[r@@ 12+rax], movsx_esi_byte_ptr_[r@@ 13], test_sil_sil, je_0x26, mov_rdi_rbp, call_0xffffffffffff9a@@ 61, test_rax_rax, jne_0x19, mov_qword_ptr_[rbx@@ ]_r12, xor_r12d_r12d, jmp_0xffffffffffffff2b, mov_qword_ptr_[rbx@@ ]_r13, jmp_0xffffffffffffff1e, xor_r12d_r12d, jmp_0xffffffffffffff0e, call_0xffffffffffff9@@ 9e@@ 8
endbr64, push_rbx, mov_rbx_rdi, jmp_0xd, cmp_eax_0xa, je_0x1d, mov_rdi_rbx, call_0xffffffffffff9a@@ f8, cmp_eax_-1, jne_0xfffffffffffffff0, mov_eax_1, pop_rbx, ret, xor_eax_eax, pop_rbx, ret
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x48, mov_qword_ptr_[rsp+0x28]_rsi, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, test_rdi_rdi, je_0x1@@ f3, lea_rax_[rsp+0x30], mov_qword_ptr_[rsp+0x20]_0, mov_qword_ptr_[rsp+0x18]_rax, xor_ebx_ebx, mov_r14_rdi, mov_rdi_r14, lea_rsi_[rip+0x7@@ 3d@@ 6], call_0xffffffffffff9a@@ ce, add_r14_rax, cmp_byte_ptr_[r14]_0, je_0x1@@ a3, call_0xffffffffffff9@@ 70@@ c, mov_dword_ptr_[rax]_0, mov_rsi_qword_ptr_[rsp+0x18], mov_edx_0xa, mov_rdi_r14, mov_rbx_rax, call_0xffffffffffff9b@@ a1, mov_qword_ptr_[rsp+0x10]_rax, mov_eax_dword_ptr_[rbx], test_eax_eax, jg_0x1@@ 69, cmp_qword_ptr_[rsp+0x10]_0, js_0x1@@ 61, mov_rbp@@ _qword_ptr_[rsp+0x30], cmp_byte_ptr_[rbp]@@ _0x2e, je_0x108, cmp_r14@@ _rbp, je_0xd7, mov_qword_ptr_[rsp+8]_0, xor_r13d_r13d, mov_rdi_rbp, lea_rsi_[rip+0x7@@ 35@@ b], call_0xffffffffffff9a@@ 53, lea_r14_[r@@ bp+rax], mov_qword_ptr_[rsp+0x30]@@ _r14, lea_rbp_[rip+0x@@ c@@ 46@@ d], lea_r12_[rip+0x@@ 7@@ 32@@ 6], xor_ebx_ebx, test_r12_r12, je_0x7d, mov_rdi_r12, call_0xffffffffffff98@@ 78, mov_r15_rax, test_rax_rax, je_0x6d, mov_rdx_rax, mov_rsi_r12, mov_rdi_r14, call_0xffffffffffff96@@ 82, test_eax_eax, jne_0x5b, shl_rbx_4, lea_rax_[rip+0x@@ c4@@ 1e], mov_rsi_qword_ptr_[rax+r@@ bx+8], mov_r12_qword_ptr_[rsp+8], imul@@ _r12@@ _rsi, test_r13d_r13d, je_0x1e, mov_rdx_r12, movabs_rax@@ _0x@@ cccc@@ cccc@@ cccccccd, mul_rdx, shr_rdx@@ _3, dec@@ _r13d, jne_0xffffffffffffffec, mov_r12_rdx, mov_rax_qword_ptr_[rsp+0x10], add_r14@@ _r15, imul_rax@@ _rsi, mov_ebx_1, add_r12_rax, add_qword_ptr_[rsp+0x@@ 20]@@ _r12, jmp_0xfffffffffffffede, inc_ebx, cmp_ebx@@ _0x1c, je_0x13, mov_r12_qword_ptr_[r@@ bp], add_rbp_0x10, jmp_0xffffffffffffff71, mov_eax_0xffffffea, mov_rcx_qword_ptr_[rsp+0x38], xor_rcx_qword_ptr_fs:[0x28], jne_0x9d, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_dword_ptr_[rbx]_0, mov_rsi_qword_ptr_[rsp+0x18], lea_r13_[r@@ bp+1], mov_edx_0xa, mov_rdi_r13, call_0xffffffffffff9a@@ 59, mov_qword_ptr_[rsp+8]_rax, mov_eax_dword_ptr_[rbx], test_eax_eax, jg@@ _0x21, cmp_qword_ptr_[rsp+8]_0, js_0x1@@ d, mov_rbp@@ _qword_ptr_[rsp+0x30], cmp_r13@@ _rbp, je_0xffffffffffffff@@ a1, mov_eax_ebp, sub_eax@@ _r13d, mov_r13d_eax, jmp_0xfffffffffffffe@@ d2, neg_eax, jmp_0xffffffffffffff95, mov_eax@@ _0xffffff@@ de, jmp_0xffffffffffffff8e, test_ebx_ebx, je_0xffffffffffffff@@ 85, mov_rax_qword_ptr_[rsp+0x28], mov_rcx_qword_ptr_[rsp+0x20], mov_qword_ptr_[rax]_rcx, xor_eax_eax, jmp_0xffffffffffffff79, lea_rcx_[rip+0x7@@ 3d0], mov_edx_0x4@@ d, lea_rsi_[rip+0x7@@ 1e@@ c], lea_rdi_[rip+0x7@@ 38@@ 9], call_0xffffffffffff98@@ 4d, call_0xffffffffffff97@@ 6@@ 8
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x98, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x40]_0, mov_qword_ptr_[rsp+0x48]_0, test_rdi_rdi, je_0x7@@ 41, mov_rbx_rsi, test_rsi_rsi, je_0x7@@ 16, mov_r14_rdi, lea_r13_[rsp+0x@@ 50], xor_edi_edi, call_0xffffffffffff9@@ 9e@@ 7, lea_rdi_[rsp+0x@@ 38], mov_rsi_r13, mov_qword_ptr_[rsp+0x38]_rax, call_0xffffffffffff94@@ f5, mov_ecx_4, lea_rdi_[rip+0x7@@ 17@@ d], mov_rsi_r14, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], mov_dword_ptr_[rsp+0x7@@ 0]_0xffffffff, seta_al, sbb_al_0, test_al_al, je_0xd0, mov_ecx_6, lea_rdi_[rip+0x7@@ 15@@ b], mov_rsi_r14, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0xd6, mov_ecx_0xa, lea_rdi_[rip+0x7@@ 14@@ 3], mov_rsi_r14, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x12c, mov_ecx_9, lea_rdi_[rip+0x7@@ 12@@ f], mov_rsi_r14, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x96, movzx_eax_byte_ptr_[r14], cmp_al_0x2b, je_0x10@@ a, cmp_al_0x2d, je_0x6@@ 22, mov_rdi_r14, call_0xffffffffffff96@@ 29, cmp_rax_3, jbe_0x@@ 110, cmp_dword_ptr_[r@@ 14@@ +rax@@ -@@ 4]@@ _0x6@@ f@@ 67@@ 6@@ 120, lea_rsi_[rax@@ -4], jne_0x@@ fd, mov_rdi_r14, call_0xffffffffffff98@@ 24, mov_rbp_rax, test_rax_rax, je_0x6@@ 6b, lea_rsi_[rsp+0x@@ 48], mov_rdi_rax, call_0xfffffffffffffc@@ 7b, mov_rdi_rbp, mov_dword_ptr_[rsp+8]_eax, call_0xffffffffffff9@@ 38@@ f, mov_eax_dword_ptr_[rsp+8], test_eax_eax, js@@ _0x6f, mov_rdi_r13, call_0xffffffffffff9@@ 9a@@ d, cmp_rax_-1, jne_0x37, mov_eax_0xffffffea, jmp_0x5@@ 6, inc@@ _dword_ptr_[rsp+0x@@ 5c], mov_rdi_r13, mov_qword_ptr_[rsp+0x50]_0, mov_dword_ptr_[rsp+0x58]_0, call_0xffffffffffff9@@ 978, cmp_rax_-1, je_0xffffffffffffffcf, imul_rax_rax@@ _0xf4240, mov_rcx_qword_ptr_[rsp+0x48], add_rax@@ _qword_ptr_[rsp+0x40], mov_rdx_rax, sub_rdx_rcx, cmp_rcx_rax, mov_eax_0, cmovb@@ _rax_rdx, mov_qword_ptr_[rbx]_rax, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x@@ 88], xor_rbx_qword_ptr_fs:[0x28], jne_0x@@ 5c@@ 1, add_rsp_0x98, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, dec@@ _dword_ptr_[rsp+0x@@ 5c], jmp_0xffffffffffffff88, lea_rsi_[rsp+0x40], lea_rdi_[r@@ 14+1], call_0xfffffffffffffbb@@ 7, test_eax_eax, jns_0xffffffffffffff@@ 50, jmp_0xffffffffffffffb5, lea_r15_[rip+0x@@ 6@@ fc@@ 6], mov_rax_r14, xor_r12d_r12d, mov_r14_r15, mov_r15_rax, mov_dword_ptr_[rsp+8]@@ _r12d, test_r14_r14, je_0x4@@ bd, mov_rdi_r14, call_0xffffffffffff94@@ ec, mov_rbp_rax, test_rax_rax, je_0x4@@ a9, mov_rdx_rax, mov_rsi_r14, mov_rdi_r15, call_0xffffffffffff98@@ 42, test_eax_eax, jne_0x4@@ 93, cmp_byte_ptr_[r@@ 15+r@@ bp@@ ]_0x20, jne_0x4@@ 88, mov_r12d_dword_ptr_[r@@ sp+8], lea_rax_[rip+0x@@ c@@ 23@@ e], shl_r12@@ _4, mov_r12d_dword_ptr_[r@@ ax+r@@ 12+8], lea_r14_[r@@ 15+r@@ bp+1], mov_eax_dword_ptr_[rsp+0x54], mov_rdx_r13, mov_dword_ptr_[rsp+8]_eax, mov_eax_dword_ptr_[rsp+0x58], lea_rsi_[rip+0x@@ 6f@@ 70], mov_dword_ptr_[rsp+0xc]_eax, mov_eax_dword_ptr_[rsp+0x@@ 5c], mov_rdi_r14, mov_dword_ptr_[rsp+0x10]_eax, mov_eax_dword_ptr_[rsp+0x@@ 64], mov_r15d_dword_ptr_[rsp+0x@@ 50], mov_dword_ptr_[rsp+0x14]_eax, mov_eax_dword_ptr_[rsp+0x68], mov_ebp_dword_ptr_[rsp+0x@@ 60], mov_dword_ptr_[rsp+0x18]_eax, mov_eax_dword_ptr_[rsp+0x@@ 6c], mov_dword_ptr_[rsp+0x1c]_eax, mov_rax_qword_ptr_[rsp+0x78], mov_qword_ptr_[rsp+0x20]_rax, mov_rax_qword_ptr_[rsp+0x80], mov_qword_ptr_[rsp+0x28]_rax, call_0xffffffffffff9@@ 9d@@ 3, test_rax_rax, je_0xb, cmp_byte_ptr_[rax]_0, je_0x3@@ ce, mov_eax_dword_ptr_[rsp+8], mov_rdx_r13, mov_dword_ptr_[rsp+0x54]_eax, mov_eax_dword_ptr_[rsp+0xc], lea_rsi_[rip+0x@@ 6f@@ 12], mov_dword_ptr_[rsp+0x58]_eax, mov_eax_dword_ptr_[rsp+0x10], mov_rdi_r14, mov_dword_ptr_[rsp+0x5c]_eax, mov_eax_dword_ptr_[rsp+0x14], mov_dword_ptr_[rsp+0x50]@@ _r15d, mov_dword_ptr_[rsp+0x@@ 64]_eax, mov_eax_dword_ptr_[rsp+0x18], mov_dword_ptr_[rsp+0x6@@ 0]_ebp, mov_dword_ptr_[rsp+0x68]_eax, mov_eax_dword_ptr_[rsp+0x1c], mov_dword_ptr_[rsp+0x7@@ 0]_0xffffffff, mov_dword_ptr_[rsp+0x@@ 6c]_eax, mov_rax_qword_ptr_[rsp+0x20], mov_qword_ptr_[rsp+0x78]_rax, mov_rax_qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp+0x80]_rax, call_0xffffffffffff99@@ 5b, test_rax_rax, je_0xb, cmp_byte_ptr_[rax]_0, je_0x3@@ 56, mov_eax_dword_ptr_[rsp+8], mov_rdx_r13, mov_dword_ptr_[rsp+0x54]_eax, mov_eax_dword_ptr_[rsp+0xc], lea_rsi_[rip+0x6@@ ea@@ c], mov_dword_ptr_[rsp+0x58]_eax, mov_eax_dword_ptr_[rsp+0x10], mov_rdi_r14, mov_dword_ptr_[rsp+0x5c]_eax, mov_eax_dword_ptr_[rsp+0x14], mov_dword_ptr_[rsp+0x50]@@ _r15d, mov_dword_ptr_[rsp+0x@@ 64]_eax, mov_eax_dword_ptr_[rsp+0x18], mov_dword_ptr_[rsp+0x6@@ 0]_ebp, mov_dword_ptr_[rsp+0x68]_eax, mov_eax_dword_ptr_[rsp+0x1c], mov_dword_ptr_[rsp+0x7@@ 0]_0xffffffff, mov_dword_ptr_[rsp+0x@@ 6c]_eax, mov_rax_qword_ptr_[rsp+0x20], mov_qword_ptr_[rsp+0x78]_rax, mov_rax_qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp+0x80]_rax, call_0xffffffffffff98@@ e3, test_rax_rax, je_0xb, cmp_byte_ptr_[rax]_0, je_0x2@@ d6, mov_eax_dword_ptr_[rsp+8], mov_rdx_r13, mov_dword_ptr_[rsp+0x54]_eax, mov_eax_dword_ptr_[rsp+0xc], lea_rsi_[rip+0x@@ 6e@@ 43], mov_dword_ptr_[rsp+0x58]_eax, mov_eax_dword_ptr_[rsp+0x10], mov_rdi_r14, mov_dword_ptr_[rsp+0x5c]_eax, mov_eax_dword_ptr_[rsp+0x14], mov_dword_ptr_[rsp+0x50]@@ _r15d, mov_dword_ptr_[rsp+0x@@ 64]_eax, mov_eax_dword_ptr_[rsp+0x18], mov_dword_ptr_[rsp+0x6@@ 0]_ebp, mov_dword_ptr_[rsp+0x68]_eax, mov_eax_dword_ptr_[rsp+0x1c], mov_dword_ptr_[rsp+0x7@@ 0]_0xffffffff, mov_dword_ptr_[rsp+0x@@ 6c]_eax, mov_rax_qword_ptr_[rsp+0x20], mov_qword_ptr_[rsp+0x78]_rax, mov_rax_qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp+0x80]_rax, call_0xffffffffffff9@@ 86@@ b, test_rax_rax, je_0xb, cmp_byte_ptr_[rax]_0, je_0x2@@ 5e, mov_eax_dword_ptr_[rsp+8], mov_rdx_r13, mov_dword_ptr_[rsp+0x54]_eax, mov_eax_dword_ptr_[rsp+0xc], lea_rsi_[rip+0x6@@ dd@@ a], mov_dword_ptr_[rsp+0x58]_eax, mov_eax_dword_ptr_[rsp+0x10], mov_rdi_r14, mov_dword_ptr_[rsp+0x5c]_eax, mov_eax_dword_ptr_[rsp+0x14], mov_dword_ptr_[rsp+0x50]@@ _r15d, mov_dword_ptr_[rsp+0x@@ 64]_eax, mov_eax_dword_ptr_[rsp+0x18], mov_dword_ptr_[rsp+0x6@@ 0]_ebp, mov_dword_ptr_[rsp+0x68]_eax, mov_eax_dword_ptr_[rsp+0x1c], mov_dword_ptr_[rsp+0x7@@ 0]_0xffffffff, mov_dword_ptr_[rsp+0x@@ 6c]_eax, mov_rax_qword_ptr_[rsp+0x20], mov_qword_ptr_[rsp+0x78]_rax, mov_rax_qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp+0x80]_rax, call_0xffffffffffff97@@ f3, test_rax_rax, je_0xb, cmp_byte_ptr_[rax]_0, je_0x2@@ 6f, mov_eax_dword_ptr_[rsp+8], mov_rdx_r13, mov_dword_ptr_[rsp+0x54]_eax, mov_eax_dword_ptr_[rsp+0xc], lea_rsi_[rip+0x6d@@ 6b], mov_dword_ptr_[rsp+0x58]_eax, mov_eax_dword_ptr_[rsp+0x10], mov_rdi_r14, mov_dword_ptr_[rsp+0x5c]_eax, mov_eax_dword_ptr_[rsp+0x14], mov_dword_ptr_[rsp+0x50]@@ _r15d, mov_dword_ptr_[rsp+0x@@ 64]_eax, mov_eax_dword_ptr_[rsp+0x18], mov_dword_ptr_[rsp+0x6@@ 0]_ebp, mov_dword_ptr_[rsp+0x68]_eax, mov_eax_dword_ptr_[rsp+0x1c], mov_dword_ptr_[rsp+0x7@@ 0]_0xffffffff, mov_dword_ptr_[rsp+0x@@ 6c]_eax, mov_rax_qword_ptr_[rsp+0x20], mov_qword_ptr_[rsp+0x78]_rax, mov_rax_qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp+0x80]_rax, call_0xffffffffffff97@@ 7b, test_rax_rax, je_0xb, cmp_byte_ptr_[rax]_0, je_0x1@@ f7, mov_eax_dword_ptr_[rsp+8], mov_rdx_r13, mov_dword_ptr_[rsp+0x54]_eax, mov_eax_dword_ptr_[rsp+0xc], lea_rsi_[rip+0x6c@@ c3], mov_dword_ptr_[rsp+0x58]_eax, mov_eax_dword_ptr_[rsp+0x10], mov_rdi_r14, mov_dword_ptr_[rsp+0x5c]_eax, mov_eax_dword_ptr_[rsp+0x14], mov_dword_ptr_[rsp+0x50]@@ _r15d, mov_dword_ptr_[rsp+0x@@ 64]_eax, mov_eax_dword_ptr_[rsp+0x18], mov_dword_ptr_[rsp+0x6@@ 0]_ebp, mov_dword_ptr_[rsp+0x68]_eax, mov_eax_dword_ptr_[rsp+0x1c], mov_dword_ptr_[rsp+0x7@@ 0]_0xffffffff, mov_dword_ptr_[rsp+0x@@ 6c]_eax, mov_rax_qword_ptr_[rsp+0x20], mov_qword_ptr_[rsp+0x78]_rax, mov_rax_qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp+0x80]_rax, call_0xffffffffffff9@@ 70@@ 3, test_rax_rax, je_0xb, cmp_byte_ptr_[rax]_0, je_0xfe, mov_eax_dword_ptr_[rsp+8], mov_rdx_r13, mov_dword_ptr_[rsp+0x54]_eax, mov_eax_dword_ptr_[rsp+0xc], lea_rsi_[rip+0x6c@@ 6c], mov_dword_ptr_[rsp+0x58]_eax, mov_eax_dword_ptr_[rsp+0x10], mov_rdi_r14, mov_dword_ptr_[rsp+0x5c]_eax, mov_eax_dword_ptr_[rsp+0x14], mov_dword_ptr_[rsp+0x50]@@ _r15d, mov_dword_ptr_[rsp+0x@@ 64]_eax, mov_eax_dword_ptr_[rsp+0x18], mov_dword_ptr_[rsp+0x6@@ 0]_ebp, mov_dword_ptr_[rsp+0x68]_eax, mov_eax_dword_ptr_[rsp+0x1c], mov_dword_ptr_[rsp+0x7@@ 0]_0xffffffff, mov_dword_ptr_[rsp+0x@@ 6c]_eax, mov_rax_qword_ptr_[rsp+0x20], mov_qword_ptr_[rsp+0x78]_rax, mov_rax_qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp+0x80]_rax, call_0xffffffffffff96@@ 8b, test_rax_rax, je_7, cmp_byte_ptr_[rax]_0, je_0x7e, mov_eax_dword_ptr_[rsp+8], mov_rdx_r13, mov_dword_ptr_[rsp+0x54]_eax, mov_eax_dword_ptr_[rsp+0xc], lea_rsi_[rip+0x6c@@ 10], mov_dword_ptr_[rsp+0x58]_eax, mov_eax_dword_ptr_[rsp+0x10], mov_rdi_r14, mov_dword_ptr_[rsp+0x5c]_eax, mov_eax_dword_ptr_[rsp+0x14], mov_dword_ptr_[rsp+0x50]@@ _r15d, mov_dword_ptr_[rsp+0x@@ 64]_eax, mov_eax_dword_ptr_[rsp+0x18], mov_dword_ptr_[rsp+0x6@@ 0]_ebp, mov_dword_ptr_[rsp+0x68]_eax, mov_eax_dword_ptr_[rsp+0x1c], mov_dword_ptr_[rsp+0x7@@ 0]_0xffffffff, mov_dword_ptr_[rsp+0x@@ 6c]_eax, mov_rax_qword_ptr_[rsp+0x20], mov_qword_ptr_[rsp+0x78]_rax, mov_rax_qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp+0x80]_rax, call_0xffffffffffff96@@ 17, test_rax_rax, je_0xfffffffffffffa@@ bf, cmp_byte_ptr_[rax]_0, jne_0xfffffffffffffa@@ b6, mov_dword_ptr_[rsp+0x5@@ 0]_0, mov_rdi_r13, call_0xffffffffffff94@@ 45, cmp_rax_-1, je_0xfffffffffffffa@@ 9c, test_r12d_r12d, js_0xffffffffffff@@ fa@@ c6, cmp_dword_ptr_[rsp+0x@@ 6@@ 8]_r12d, je_0xfffffffffffffa@@ bb, jmp_0xfffffffffffffa@@ 82, inc_r12, cmp_r12@@ _0xe, je_0x3c, mov_rax_r12, shl_rax_4, lea_rdx_[rip+0xb@@ db@@ 1], mov_r14_qword_ptr_[r@@ dx+rax], jmp_0xfffffffffffffb@@ 20, lea_rsi_[rsp+0x@@ 48], lea_rdi_[r@@ 14+1], call_0xfffffffffffff6@@ 97, test_eax_eax, jns_0xffffffffffff@@ fa@@ 30, jmp_0xfffffffffffffa@@ 95, mov_r14_r15, mov_r12d_0xffffffff, jmp_0xfffffffffffffb@@ 4c, mov_qword_ptr_[rsp+0x50]_0, mov_dword_ptr_[rsp+0x58]_0, jmp_0xffffffffffffff6e, lea_rcx_[rip+0x@@ 6c@@ 5a], mov_edx_0x@@ c4, lea_rsi_[rip+0x6a@@ 66], lea_rdi_[rip+0x@@ 6a@@ 7b], call_0xffffffffffff90@@ c7, lea_rcx_[rip+0x@@ 6c@@ 3b], mov_edx_0x@@ c3, lea_rsi_[rip+0x6a@@ 47], lea_rdi_[rip+0x@@ 6b@@ e4], call_0xffffffffffff90@@ a8, call_0xffffffffffff8@@ fc@@ 3, mov_eax@@ _0xfffffff4, jmp_0xfffffffffffffa@@ 2@@ 4
endbr64, mov_edx_dword_ptr_[r@@ di+0x20], xor_eax_eax, test_edx_edx, js@@ _5, mov_eax_dword_ptr_[rdi+0x@@ 28], ret
push_r14, mov_r14_rsi, push_r13, mov_r13_rdi, push_r12, mov_r12_rcx, push_rbp, mov_ebp_edx, and_edx_1, push_rbx, mov_rbx_r8, jne_0x1@@ b7, mov_eax_ebp, and_eax_3, cmp_eax_3, je_0x12@@ 9, test_bpl@@ _2, jne_0x14@@ 8, mov_r9_r14, lea_r8_[rip+0x@@ 6a@@ 84], test_bpl@@ _8, jne_0x22, test_bpl@@ _0x10, jne_0x15, and_ebp@@ _4, jne_0x4e, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, lea_r8_[rip+0x@@ 6a@@ 65], xor_eax_eax, mov_rcx_-1, mov_edx_1, mov_rsi_rbx, mov_rdi_r12, call_0xffffffffffff8c@@ 85, test_eax_eax, js_0x@@ 9e, cdqe, cmp_rax_rbx, ja_0x@@ 93, sub_rbx_rax, add_r12_rax, and_ebp@@ _4, je_0xffffffffffffff@@ b6, mov_rdi_r13, call_0xffffffffffffff@@ 3f, mov_edx_eax, cdqe, imul_rax_rax@@ _-0x@@ 77@@ 77@@ 77@@ 77, sub_rsp_8, mov_rcx_-1, shr_rax_0x20, add_eax_edx, sar_eax@@ _5, sar_edx_0x1f, sub_eax_edx, movsxd_r9@@ _eax, imul@@ _r9@@ _r9@@ _-0x@@ 77@@ 77@@ 77@@ 77, cdq, lea_r8_[rip+0x6@@ 9f@@ 7], shr@@ _r9@@ _0x20, add_r9d@@ _eax, sar@@ _r9d@@ _5, sub_r9d@@ _edx, imul_edx@@ _r9d@@ _0x3c, mov_rsi_rbx, mov_rdi_r12, sub_eax_edx, cdq, xor_eax_edx, sub_eax_edx, push_rax, mov_edx_1, xor_eax_eax, call_0xffffffffffff8b@@ fd, pop_rdx, pop_rcx, test_eax_eax, js_0x1@@ 4, cdqe, cmp_rax_rbx, jbe_0xffffffffffffff@@ 3f, mov_edx_5, lea_rsi_[rip+0x6a@@ 84], xor_edi_edi, call_0xffffffffffff8e@@ 22, mov_rdi_rax, xor_eax_eax, call_0xffffffffffff8@@ ea8, mov_eax_0xffffffff, jmp_0xffffffffffffff12, test_rbx_rbx, je_0xffffffffffffffcd, mov_eax_ebp, and_eax_0x20, cmp_eax_1, sbb_eax_eax, and_eax_0xffffff@@ cc, add_eax@@ _0x5@@ 4, mov_byte_ptr_[r12@@ ]_al, dec@@ _rbx, inc_r12, test_bpl@@ _2, je_0xfffffffffffffe@@ c4, mov_eax_dword_ptr_[r13], mov_r9d_dword_ptr_[r@@ 13+8], push_rax, mov_eax_dword_ptr_[r@@ 13+4], mov_rsi_rbx, push_rax, mov_rdi_r12, lea_r8_[rip+0x6@@ 92@@ 2], mov_rcx_-1, mov_edx_1, xor_eax_eax, call_0xffffffffffff8b@@ 5e, pop_rsi, pop_rdi, test_eax_eax, js_0xffffffffffffff@@ 75, cdqe, cmp_rax_rbx, ja_0xffffffffffffff@@ 6a, sub_rbx_rax, add_r12_rax, jmp_0xfffffffffffffe@@ 75, mov_eax_dword_ptr_[rdi+0x@@ c], movsxd_rdx_dword_ptr_[r@@ di+0x14], push_rax, lea_r9_[r@@ dx+0x@@ 76@@ c], lea_r8_[rip+0x6@@ 8c@@ 1], mov_eax_dword_ptr_[rdi+0x10], mov_rcx_-1, inc_eax, push_rax, mov_edx_1, mov_rsi_rbx, mov_rdi_r12, xor_eax_eax, call_0xffffffffffff8b@@ 00, pop_r8, pop_r9, test_eax_eax, js_0xffffffffffffff@@ 15, cdqe, cmp_rax_rbx, ja_0xffffffffffffff@@ 0a, sub_rbx_rax, add_r12_rax, jmp_0xfffffffffffffd@@ f@@ d
endbr64, push_r14, mov_r14_rdx, push_r13, push_r12, mov_r12d_esi, push_rbp, mov_rbp_rcx, push_rbx, mov_rbx_rdi, sub_rsp_0x40, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_r13_rsp, and_esi@@ _0x40, mov_rsi_r13, je_0x43, call_0xffffffffffff8@@ dd@@ 9, test_rax_rax, je_0x41, mov_rsi_qword_ptr_[rbx+8], mov_r8_rbp, mov_rcx_r14, mov_edx_r12d, mov_rdi_r13, call_0xfffffffffffffd@@ 7f, mov_rbx_qword_ptr_[rsp+0x38], xor_rbx_qword_ptr_fs:[0x28], jne_0x46, add_rsp_0x40, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, call_0xffffffffffff8a@@ e8, jmp_0xffffffffffffffbf, mov_rbp_qword_ptr_[rbx], mov_edx_5, lea_rsi_[rip+0x@@ 68@@ 1f], xor_edi_edi, call_0xffffffffffff8c@@ 8f, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffff8d@@ 12, mov_eax_0xffffffff, jmp_0xffffffffffffffae, call_0xffffffffffff8c@@ b@@ 6
endbr64, mov_r8_rcx, mov_rcx_rdx, mov_edx_esi, xor_esi_esi, jmp_0xfffffffffffffd@@ 1@@ 2
endbr64, push_r14, push_r13, mov_r13_rdx, push_r12, mov_r12d_esi, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rcx, sub_rsp_0x40, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_r14_rsp, and_esi@@ _0x40, mov_rsi_r14, je_0x43, call_0xffffffffffff8d@@ 09, test_rax_rax, je_0x41, mov_r8_rbx, mov_rcx_r13, mov_edx_r12d, xor_esi_esi, mov_rdi_r14, call_0xfffffffffffffc@@ b1, mov_rbx_qword_ptr_[rsp+0x38], xor_rbx_qword_ptr_fs:[0x28], jne_0x45, add_rsp_0x40, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, call_0xffffffffffff8a@@ 18, jmp_0xffffffffffffffbf, mov_edx_5, lea_rsi_[rip+0x67@@ 52], xor_edi_edi, call_0xffffffffffff8b@@ c2, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffff8c@@ 45, mov_eax_0xffffffff, jmp_0xffffffffffffffaf, call_0xffffffffffff8b@@ e@@ 9
endbr64, push_r15, push_r14, mov_r14_rcx, push_r13, mov_r13_rdi, push_r12, mov_r12_r8, push_rbp, mov_rbp_rsi, push_rbx, mov_ebx_edx, sub_rsp_0x88, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x78]_rax, xor_eax_eax, cmp_qword_ptr_[rsi@@ ]_0, je_0xa9, mov_r15@@ _rsp, mov_rsi_r15, mov_rdi_r13, call_0xffffffffffff8@@ 99@@ a, lea_rsi_[rsp+0x40], mov_rdi_rbp, call_0xffffffffffff8@@ 98@@ d, mov_eax_dword_ptr_[rsp+0x@@ 5c], cmp_dword_ptr_[rsp+0x1@@ c]_eax, mov_eax_dword_ptr_[rsp+0x54], je_0x5c, cmp_dword_ptr_[rsp+0x1@@ 4]_eax, jne_0x5c, and_ebx@@ _2, mov_rcx_r15, je_0x7e, lea_rdx_[rip+0x6@@ 6c@@ d], mov_rsi_r12, mov_rdi_r14, call_0xffffffffffff8@@ fa@@ f, test_eax_eax, setl@@ e_al, movzx_eax_al, neg_eax, mov_rbx_qword_ptr_[rsp+0x@@ 78], xor_rbx_qword_ptr_fs:[0x28], jne_0xb8, add_rsp_0x88, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, cmp_dword_ptr_[rsp+0x1@@ 4]_eax, je_0x44, mov_rcx_r15, lea_rdx_[rip+0x@@ 66@@ 83], mov_rsi_r12, mov_rdi_r14, call_0xffffffffffff8f@@ 5a, jmp_0xffffffffffffffab, xor_esi_esi, mov_rdi_rbp, call_0xffffffffffff8b@@ cb, jmp_0xffffffffffffff53, lea_rdx_[rip+0x@@ 66@@ 5f], mov_rsi_r12, mov_rdi_r14, call_0xffffffffffff8f@@ 33, jmp_0xffffffffffffff84, sub_rsp_8, mov_eax_dword_ptr_[rsp+0xc], mov_rcx_-1, push_rax, mov_edx_1, lea_r8_[rip+0x6@@ 5e@@ 7], mov_r9d_dword_ptr_[rsp+0x18], mov_rsi_r12, mov_rdi_r14, xor_eax_eax, call_0xffffffffffff88@@ 1f, pop_rdx, pop_rcx, test_eax_eax, js_0x1@@ 4, cdqe, cmp_rax_r12, seta_al, movzx_eax_al, neg_eax, jmp_0xffffffffffffff47, or_eax_0xffffffff, jmp_0xffffffffffffff3f, call_0xffffffffffff8a@@ 8@@ a
push_r12, mov_r12_rsi, push_rbx, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_rbx_qword_ptr_[rip+0x@@ beb@@ d], test_rdi_rdi, je_0xb, test_byte_ptr_[rip+0x@@ c0@@ 84@@ ]_1, je_0x69, mov_rdi_qword_ptr_[rbx], lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, mov_rcx_rsp, lea_rax_[rsp+0x20], mov_rdx_r12, mov_esi_1, mov_dword_ptr_[rsp]_0x10, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffff87@@ 6b, mov_rsi_qword_ptr_[rbx], mov_edi_0xa, call_0xffffffffffff8b@@ 5e, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x31, add_rsp_0xd8, pop_rbx, pop_r12, ret, mov_rcx_rdi, mov_rdi_qword_ptr_[rbx], lea_rdx_[rip+0x6@@ 5f@@ b], mov_esi_1, xor_eax_eax, call_0xffffffffffff8@@ ec@@ 4, jmp_0xffffffffffffff80, call_0xffffffffffff8@@ 97@@ a
push_rbx, mov_r10_rdi, sub_rsp_0xd0, mov_qword_ptr_[rsp+0x28]_rsi, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rbx_qword_ptr_[rip+0x@@ b@@ db@@ a], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_rdi_qword_ptr_[rbx], lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rcx_rsp, lea_rax_[rsp+0x20], mov_rdx_r10, mov_esi_1, mov_dword_ptr_[rsp]_8, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffff86@@ 66, mov_rsi_qword_ptr_[rbx], mov_edi_0xa, call_0xffffffffffff8a@@ 59, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xb, add_rsp_0xd0, pop_rbx, ret, call_0xffffffffffff88@@ 9@@ b
push_r13, mov_r13_rdx, push_r12, mov_r12_rdi, add_r12@@ _0x20, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_8, call_0xffffffffffff86@@ 49, mov_dword_ptr_[rax]_0, mov_r9_r13, mov_r8_rbp, mov_ecx_0x1000, mov_edx_1, mov_esi_0x1000, mov_rdi_r12, mov_rbx_rax, call_0xffffffffffff8c@@ 33, test_eax_eax, js@@ _0x3c, cmp_eax@@ _0xfff, jg_0x1@@ 5, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, mov_dword_ptr_[rbx]@@ _0x24, add_rsp_8, xor_r12d_r12d, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, mov_eax_dword_ptr_[rbx], xor_r12d_r12d, test_eax_eax, jne_0xffffffffffffffc6, mov_dword_ptr_[rbx]@@ _0x16, jmp_0xffffffffffffffb@@ e
push_r12, mov_r9_qword_ptr_[r@@ di+0x18], mov_rax_qword_ptr_[rdi+8], test_r9_r9, je_0x6b, test_rax_rax, je_0x76, xor_edx_edx, cmp_byte_ptr_[rax]@@ _0x2f, sete_dl, add_rax_rdx, sub_rsp_8, push_rax, lea_r12_[r@@ di+0x20], mov_ecx_0x1000, mov_edx_1, lea_r8_[rip+0x6@@ 4d@@ c], mov_esi_0x1000, mov_rdi_r12, xor_eax_eax, call_0xffffffffffff@@ 85@@ 1d, pop_rdx, pop_rcx, test_eax_eax, js_0x4@@ c, cmp_eax@@ _0xfff, jg@@ _0xd, mov_rax_r12, pop_r12, ret, call_0xffffffffffff8@@ 560, mov_dword_ptr_[rax]@@ _0x24, xor_r12d_r12d, mov_rax_r12, pop_r12, ret, mov_r12_rax, mov_rax_r12, pop_r12, ret, mov_r12_r9, mov_rax_r12, pop_r12, ret, xor_r12d_r12d, jmp_0xffffffffffffffb@@ a
endbr64, push_rbp, push_rbx, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_eax_dword_ptr_[rip+0x@@ bd@@ b0], test_eax_eax, je_0x1e, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ f0, add_rsp_0x18, pop_rbx, pop_rbp, ret, lea_rdi_[rip+0x@@ 63@@ 80], call_0xffffffffffff84@@ 69, mov_edx_2, test_rax_rax, je_0x41, mov_rsi_rsp, xor_edx_edx, mov_rdi_rax, call_0xffffffffffff8b@@ e2, mov_rsi_qword_ptr_[rsp], mov_ebp_eax, test_rsi_rsi, je_0x1a, mov_ecx_4, lea_rdi_[rip+0x5@@ fa@@ 3], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_dl, sbb_dl_0, test_dl_dl, je_0x1c, mov_dword_ptr_[rip+0x@@ bd@@ 44]_eax, mov_edx_2, test_eax_eax, jne_0x1c, mov_dword_ptr_[rip+0x@@ bd@@ 35@@ ]_edx, jmp_0xffffffffffffff89, mov_dword_ptr_[rip+0x@@ bd@@ 26@@ ]@@ _0xffff, mov_ebp@@ _0xffff, call_0xffffffffffff86@@ b1, mov_ebx_eax, call_0xffffffffffff87@@ ba, cmp_ebx_eax, je_0x4b, or_ebp@@ _0x1000000, mov_dword_ptr_[rip+0x@@ b@@ d0@@ 5]@@ _ebp, call_0xffffffffffff8@@ 5c@@ 5, mov_ecx_eax, mov_rax_qword_ptr_[rip+0x@@ bb@@ 27], lea_rdx_[rip+0x@@ 64@@ 28], mov_rdi_qword_ptr_[rax], lea_r8_[rip+0x@@ 62@@ ea], mov_esi_1, xor_eax_eax, call_0xffffffffffff8b@@ 9f, mov_edx_dword_ptr_[rip+0x@@ b@@ cd@@ 4], or_edx_2, jmp_0xffffffffffffff96, call_0xffffffffffff8@@ 938, mov_ebx_eax, call_0xffffffffffff8@@ 9e@@ 1, mov_edx_ebp, or_edx_2, cmp_ebx_eax, jne_0xffffffffffffffa4, jmp_0xffffffffffffff78, call_0xffffffffffff86@@ 2@@ e
endbr64, test_rdi_rdi, je_5, inc_dword_ptr_[r@@ di+0x10], ret
endbr64, push_r12, push_rbp, sub_rsp_8, mov_eax_dword_ptr_[rdi], test_eax_eax, jns@@ _0xa@@ 1, mov_r12_rdi, mov_rbp_rsi, test_rsi_rsi, je_0x16, mov_rdi_rsi, call_0xffffffffffff8b@@ 3d, mov_rbp_rax, test_rax_rax, je_0xa1, mov_rdi_qword_ptr_[r@@ 12+0x18], call_0xffffffffffff8@@ 35@@ 7, mov_eax_dword_ptr_[rip+0x@@ bc@@ 4c], mov_qword_ptr_[r12+0x1@@ 8]_rbp, and_eax_4, jne_0x14, add_rsp_8, pop_rbp, pop_r12, ret, call_0xffffffffffff84@@ f0, mov_ecx_eax, mov_rax_qword_ptr_[rip+0x@@ ba@@ 52], lea_r9_[rip+0x@@ 62@@ 40], mov_rdi_qword_ptr_[rax], lea_r8_[rip+0x@@ 62@@ 15], lea_rdx_[rip+0x6@@ 23@@ 3], mov_esi_1, xor_eax_eax, call_0xffffffffffff8a@@ c3, mov_rdx_rbp, mov_rdi_r12, xor_eax_eax, lea_rsi_[rip+0x6@@ 22@@ 6], call_0xfffffffffffffa@@ ef, add_rsp_8, pop_rbp, xor_eax_eax, pop_r12, ret, lea_rcx_[rip+0x6@@ 39@@ 9], mov_edx_0x6@@ d, lea_rsi_[rip+0x6@@ 1d8], lea_rdi_[rip+0x6@@ 1d@@ c], call_0xffffffffffff86@@ 26, mov_eax@@ _0xfffffff4, jmp_0xffffffffffffff7@@ a
endbr64, test_rdi_rdi, je_9, mov_rax_qword_ptr_[rdi+0x18], ret, xor_eax_eax, ret
endbr64, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, sub_rsp_8, test_rsi_rsi, je_0x16, mov_rdi_rsi, call_0xffffffffffff8a@@ 47, mov_rbp_rax, test_rax_rax, je_0x94, mov_edi_dword_ptr_[r@@ 12], test_edi_edi, js@@ _0xf, call_0xffffffffffff86@@ 1e, mov_dword_ptr_[r12]@@ _0xffffffff, mov_rdi_qword_ptr_[r12+8], call_0xffffffffffff8@@ 24@@ c, mov_eax_dword_ptr_[rip+0x@@ bb@@ 41], mov_qword_ptr_[r12+@@ 8]_rbp, and_eax_4, jne_0x11, add_rsp_8, pop_rbp, pop_r12, ret, call_0xffffffffffff8@@ 3e8, mov_ecx_eax, mov_rax_qword_ptr_[rip+0x@@ b@@ 94@@ a], lea_r9_[rip+0x@@ 6@@ 138], mov_rdi_qword_ptr_[rax], lea_r8_[rip+0x6@@ 10@@ d], lea_rdx_[rip+0x6@@ 12@@ b], mov_esi_1, xor_eax_eax, call_0xffffffffffff8@@ 9b@@ b, mov_rdx_rbp, mov_rdi_r12, xor_eax_eax, lea_rsi_[rip+0x6@@ 12@@ f], call_0xfffffffffffff9e@@ 7, add_rsp_8, pop_rbp, xor_eax_eax, pop_r12, ret, mov_eax@@ _0xfffffff4, jmp_0xffffffffffffff9@@ c
endbr64, test_rdi_rdi, je_9, mov_rax_qword_ptr_[rdi+8], ret, xor_eax_eax, ret
endbr64, mov_qword_ptr_[rdi+0x1@@ 0@@ 20]_rsi, mov_qword_ptr_[rdi+0x1@@ 0@@ 28]_rdx, test_byte_ptr_[rip+0x@@ ba@@ 97@@ ]_4, jne_7, xor_eax_eax, ret, push_rbp, mov_rbp_rdi, call_0xffffffffffff8@@ 34c, mov_ecx_eax, mov_rax_qword_ptr_[rip+0x@@ b@@ 8a@@ e], lea_r9_[rip+0x@@ 60@@ 9c], mov_rdi_qword_ptr_[rax], lea_r8_[rip+0x@@ 60@@ 71], lea_rdx_[rip+0x@@ 60@@ 8f], mov_esi_1, xor_eax_eax, call_0xffffffffffff8@@ 9@@ 1f, mov_rdi_rbp, xor_eax_eax, lea_rsi_[rip+0x60@@ a4], call_0xfffffffffffff94@@ e, xor_eax_eax, pop_rbp, ret
endbr64, test_rdi_rdi, je_0x11, mov_rax_qword_ptr_[rdi+0x1@@ 0@@ 20], ret, xor_eax_eax, ret
endbr64, mov_qword_ptr_[rdi+0x1@@ 0@@ 3@@ 0]_rsi, xor_eax_eax, ret
endbr64, push_rbp, push_rbx, sub_rsp_8, test_rdi_rdi, je_0xd0, cmp_qword_ptr_[rdi+@@ 8]_0, mov_rbx_rdi, je_0xa3, mov_eax_dword_ptr_[rdi], test_eax_eax, js@@ _0xb, add_rsp_8, pop_rbx, pop_rbp, ret, call_0xfffffffffffffb@@ 70, mov_rbp_rax, test_rax_rax, je_0x75, test_byte_ptr_[rip+0x@@ b@@ 9c@@ c@@ ]_4, jne_0x1c, mov_rdi_rbp, mov_esi_0x8@@ 0000, xor_eax_eax, call_0xffffffffffff87@@ b0, mov_dword_ptr_[rbx]_eax, add_rsp_8, pop_rbx, pop_rbp, ret, call_0xffffffffffff8@@ 270, mov_ecx_eax, mov_rax_qword_ptr_[rip+0x@@ b@@ 7d@@ 2], lea_r9_[rip+0x@@ 5@@ fc@@ 0], mov_rdi_qword_ptr_[rax], lea_r8_[rip+0x@@ 5f@@ 95], lea_rdx_[rip+0x5@@ fb@@ 3], mov_esi_1, xor_eax_eax, call_0xffffffffffff88@@ 43, mov_rdx_rbp, lea_rsi_[rip+0x5f@@ ea], mov_rdi_rbx, xor_eax_eax, call_0xfffffffffffff86@@ f, jmp_0xffffffffffffffa0, call_0xffffffffffff80@@ b0, mov_eax_dword_ptr_[rax], neg_eax, jmp_0xffffffffffffff6e, lea_rcx_[rip+0x@@ 60@@ eb], mov_edx_0x@@ c9, lea_rsi_[rip+0x5f@@ 4a], lea_rdi_[rip+0x5@@ fa@@ 1], call_0xffffffffffff8@@ 3@@ 98, lea_rcx_[rip+0x@@ 60@@ cc], mov_edx_0x@@ c8, lea_rsi_[rip+0x5f@@ 2b], lea_rdi_[rip+0x5@@ f7@@ f], call_0xffffffffffff8@@ 37@@ 9
endbr64, push_rbx, test_rdi_rdi, je_0x7e, mov_rbx_rdi, mov_edi_dword_ptr_[r@@ di], test_edi_edi, js@@ _0x16, test_byte_ptr_[rip+0x@@ b@@ 8f@@ 6@@ ]_4, jne_0x16, call_0xffffffffffff8@@ 3b@@ 4, mov_dword_ptr_[rbx]@@ _0xffffffff, pop_rbx, ret, call_0xffffffffffff8@@ 1a0, mov_ecx_eax, mov_rax_qword_ptr_[rip+0x@@ b@@ 70@@ 2], lea_r9_[rip+0x@@ 5e@@ f0], mov_rdi_qword_ptr_[rax], lea_r8_[rip+0x5@@ ec@@ 5], lea_rdx_[rip+0x@@ 5e@@ e3], mov_esi_1, xor_eax_eax, call_0xffffffffffff87@@ 73, mov_rdx_qword_ptr_[rbx+8], lea_rsi_[rip+0x5f@@ 2b], mov_rdi_rbx, xor_eax_eax, call_0xfffffffffffff7@@ 9e, mov_edi_dword_ptr_[rbx], call_0xffffffffffff8@@ 35@@ 7, mov_dword_ptr_[rbx]@@ _0xffffffff, jmp_0xffffffffffffffa3, lea_rcx_[rip+0x6@@ 00@@ 3], mov_edx_0x@@ da, lea_rsi_[rip+0x5e@@ 82], lea_rdi_[rip+0x@@ 5e@@ d6], call_0xffffffffffff8@@ 2d@@ 0
endbr64, test_rdi_rdi, je_0x59, push_rbp, mov_rbp_rdi, mov_eax_dword_ptr_[rdi+0x10], dec_eax, mov_dword_ptr_[rdi+0x1@@ 0]_eax, test_eax_eax, jle_9, pop_rbp, ret, test_byte_ptr_[rip+0x@@ b8@@ 39@@ ]_4, jne_0x41, cmp_qword_ptr_[rbp+0x@@ 10@@ 20]_0, je_0xb, mov_rdi_rbp, call_qword_ptr_[rbp+0x@@ 10@@ 28], mov_rdi_rbp, call_0xffffffffffffff@@ 11, mov_rdi_qword_ptr_[rbp+8], call_0xffffffffffff7f@@ 18, mov_rdi_qword_ptr_[rbp+0x18], call_0xffffffffffff7@@ f0@@ f, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffff@@ 7@@ f0@@ 6, ret, call_0xffffffffffff80@@ b8, mov_ecx_eax, mov_rax_qword_ptr_[rip+0x@@ b6@@ 1a], lea_r9_[rip+0x@@ 5e@@ 08], mov_rdi_qword_ptr_[rax], lea_r8_[rip+0x5@@ dd@@ d], lea_rdx_[rip+0x@@ 5d@@ fb], mov_esi_1, xor_eax_eax, call_0xffffffffffff86@@ 8b, lea_rsi_[rip+0x5e@@ 59], mov_rdi_rbp, xor_eax_eax, call_0xfffffffffffff6b@@ a, jmp_0xffffffffffffff7@@ e
endbr64, push_r13, mov_r13_rdi, push_r12, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x28]_rsi, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_esi_0x1@@ 0@@ 38, mov_edi_1, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xffffffffffff8@@ 2d0, mov_r12_rax, test_rax_rax, je_0x70, test_byte_ptr_[rip+0x@@ b7@@ 1c@@ ]_4, jne_0x8c, mov_dword_ptr_[r12+0x1@@ 0]_1, mov_dword_ptr_[r12]@@ _0xffffffff, test_r13_r13, je_0x4d, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, mov_rcx_rsp, lea_rax_[rsp+0x20], lea_rdi_[r@@ 12+8], mov_rdx_r13, mov_esi_1, mov_dword_ptr_[rsp]_8, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffff8@@ 3b@@ a, test_eax_eax, js_0x8@@ 3, cmp_qword_ptr_[r@@ 12+@@ 8]_0, je_0x77, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x77, add_rsp_0xd8, mov_rax_r12, pop_r12, pop_r13, ret, call_0xffffffffffff7f@@ 50, mov_ecx_eax, mov_rax_qword_ptr_[rip+0x@@ b@@ 4b@@ 2], lea_r9_[rip+0x@@ 5c@@ a0], mov_rdi_qword_ptr_[rax], lea_r8_[rip+0x@@ 5c@@ 75], lea_rdx_[rip+0x@@ 5c@@ 93], mov_esi_1, xor_eax_eax, call_0xffffffffffff@@ 85@@ 23, lea_rsi_[rip+0x5c@@ f3], mov_rdi_r12, xor_eax_eax, call_0xfffffffffffff55@@ 2, jmp_0xffffffffffffff37, mov_rdi_r12, call_0xfffffffffffffdd@@ d, xor_r12d_r12d, jmp_0xffffffffffffff80, call_0xffffffffffff7@@ fb@@ 0
endbr64, xor_eax_eax, test_rdi_rdi, je_9, mov_eax_dword_ptr_[rdi], not_eax, shr_eax_0x1f, ret
endbr64, push_r13, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, mov_rsi_rcx, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, test_rsi_rsi, je_0xeb, lea_rax_[rsp+0x100], mov_r13_qword_ptr_[r@@ bp+8], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _0x20, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffff64@@ 5, test_r13_r13, je_0x8d, xor_edx_edx, cmp_byte_ptr_[r@@ 13]@@ _0x2f, sete_dl, add_r13@@ _rdx, test_rax_rax, je_0xbf, xor_edx_edx, cmp_byte_ptr_[rax]@@ _0x2f, sete_dl, add_rax_rdx, push_rax, mov_rdx_qword_ptr_[rbp+0x18], lea_r9_[rip+0x@@ 4@@ f0@@ f], test_rdx_rdx, push_r13, cmovne@@ _r9@@ _rdx, mov_rcx_-1, mov_edx_1, lea_r8_[rip+0x@@ 5b@@ a0], mov_rsi_r12, mov_rdi_rbx, xor_eax_eax, call_0xffffffffffff7@@ be@@ 6, movsxd_rdx_eax, pop_rax, pop_rcx, mov_rax_rbx, cmp_rdx@@ _r12, jae_0x@@ 7e, mov_rbx_qword_ptr_[rsp+0x18], xor_rbx_qword_ptr_fs:[0x28], jne_0x80, add_rsp_0xd8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, lea_r13_[rip+0x@@ 4@@ ea@@ e], test_rax_rax, jne_0xffffffffffffff@@ 85, lea_rax_[rip+0x@@ 4e@@ 9e], mov_r13_rax, jmp_0xffffffffffffff80, mov_rdi_rbp, call_0xfffffffffffff6@@ 2d, test_rax_rax, je_0xffffffffffffff@@ b1, lea_rdx_[r@@ 12-1], mov_rsi_rax, mov_rdi_rbx, call_0xffffffffffff7b@@ e8, mov_byte_ptr_[rbx+r@@ 12@@ -1]_0, jmp_0xffffffffffffff99, lea_rax_[rip+0x@@ 4e@@ 66], jmp_0xffffffffffffff4b, call_0xffffffffffff7@@ bb8, mov_dword_ptr_[rax]@@ _0x24, xor_eax_eax, jmp_0xffffffffffffff77, call_0xffffffffffff7@@ dd@@ 6
endbr64, push_r14, mov_r14d_esi, push_r13, mov_r13_rdx, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xfffffffffffffa@@ 18, mov_dword_ptr_[rsp+4]_eax, mov_r12d_eax, test_eax_eax, js@@ _0x22, test_byte_ptr_[rip+0x@@ b4@@ 11@@ ]_4, jne_0x81, mov_edi_r12d, xor_ecx_ecx, mov_edx_r14d, mov_rsi_r13, call_0xffffffffffff7c@@ 74, mov_r12d_eax, test_eax_eax, jne_0x2a, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0xaa, add_rsp_0x18, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, ret, call_0xffffffffffff7b@@ 20, cmp_dword_ptr_[rax]_2, jne_0xffffffffffffffd0, mov_rax_qword_ptr_[rbp+0x@@ 10@@ 30], test_rax_rax, je_0xffffffffffffff@@ c4, lea_rdx_[rsp+4], mov_rsi_r13, mov_rdi_rbp, call_rax, test_eax_eax, jne_0xffffffffffffffb3, mov_edi_dword_ptr_[rsp+4], xor_ecx_ecx, mov_edx_r14d, mov_rsi_r13, call_0xffffffffffff7@@ c0d, mov_r12d_eax, jmp_0xffffffffffffff9d, call_0xffffffffffff7c@@ 50, mov_ecx_eax, mov_rax_qword_ptr_[rip+0x@@ b@@ 1b@@ 2], lea_r9_[rip+0x@@ 5@@ 9a@@ 0], mov_rdi_qword_ptr_[rax], lea_r8_[rip+0x5@@ 97@@ 5], lea_rdx_[rip+0x5@@ 99@@ 3], mov_esi_1, xor_eax_eax, call_0xffffffffffff8@@ 22@@ 3, mov_rdx_r13, lea_rsi_[rip+0x5@@ 9@@ ff], mov_rdi_rbp, xor_eax_eax, call_0xfffffffffffff24@@ f, mov_r12d_dword_ptr_[r@@ sp+4], jmp_0xffffffffffffff36, call_0xffffffffffff7@@ cc@@ 0
endbr64, push_r12, mov_r12d_esi, mov_rsi_rdx, push_rbp, mov_rbp_rdi, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffff38@@ 3, mov_rdx_rax, test_rax_rax, je_0x28, mov_esi_r12d, mov_rdi_rbp, call_0xfffffffffffffe@@ 30, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x18, add_rsp_0xd8, pop_rbp, pop_r12, ret, call_0xffffffffffff7@@ 9b0, mov_eax_dword_ptr_[rax], neg_eax, jmp_0xffffffffffffffdc, call_0xffffffffffff7@@ bd@@ 5
endbr64, push_r14, push_r13, mov_r13_rdx, push_r12, push_rbp, mov_ebp_esi, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, test_rdi_rdi, je_0x61, mov_r14_rdi, call_0xfffffffffffff8@@ 14, mov_dword_ptr_[rsp+4]_eax, mov_r12d_eax, test_eax_eax, js_0x2@@ 6, mov_edx_ebp, mov_rsi_r13, mov_edi_eax, call_0xffffffffffff7c@@ fd, mov_r12d_eax, test_eax_eax, js_0x@@ 9b, test_byte_ptr_[rip+0x@@ b@@ 1f@@ 6@@ ]_4, jne_0x12@@ 6, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ 64, add_rsp_0x18, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, ret, mov_rdi_rdx, call_0xffffffffffff7a@@ b5, mov_r12d_eax, test_byte_ptr_[rip+0x@@ b@@ 1b@@ 6@@ ]_4, je_0xffffffffffffffc6, call_0xffffffffffff7a@@ 74, mov_ecx_eax, mov_rax_qword_ptr_[rip+0x@@ a@@ fd@@ 6], lea_r9_[rip+0x@@ 57@@ c4], mov_rdi_qword_ptr_[rax], lea_r8_[rip+0x@@ 57@@ 99], lea_rdx_[rip+0x@@ 57@@ b7], mov_esi_1, xor_eax_eax, call_0xffffffffffff80@@ 47, mov_rsi_r13, lea_rdi_[rip+0x@@ 58@@ 3e], xor_eax_eax, call_0xfffffffffffff@@ 18@@ 6, jmp_0xffffffffffffff81, call_0xffffffffffff7@@ 8b@@ 8, cmp_dword_ptr_[rax]_2, jne_0xffffffffffffff@@ 63, mov_rax_qword_ptr_[r14+0x1@@ 0@@ 30], test_rax_rax, je_0xffffffffffffff@@ 53, lea_rdx_[rsp+4], mov_rsi_r13, mov_rdi_r14, call_rax, test_eax_eax, jne_0xffffffffffffff@@ 3e, mov_edi_dword_ptr_[rsp+4], mov_edx_ebp, mov_rsi_r13, call_0xffffffffffff7c@@ 1c, mov_ebp_eax, test_byte_ptr_[rip+0x@@ b@@ 11@@ e@@ ]_4, je_0xae, call_0xffffffffffff7@@ 9d8, mov_ecx_eax, mov_rax_qword_ptr_[rip+0x@@ af@@ 3a], lea_r9_[rip+0x@@ 57@@ 28], mov_rdi_qword_ptr_[rax], lea_r8_[rip+0x@@ 56@@ fd], xor_eax_eax, lea_rdx_[rip+0x@@ 57@@ 19], mov_esi_1, call_0xffffffffffff7@@ fa@@ b, cmp_r12d@@ _ebp, je_0x6a, mov_r12d_ebp, lea_rcx_[rip+0x57@@ 8f], jmp_0x40, call_0xffffffffffff7@@ 990, mov_ecx_eax, mov_rax_qword_ptr_[rip+0x@@ a@@ ef@@ 2], lea_r9_[rip+0x@@ 56@@ e0], mov_rdi_qword_ptr_[rax], lea_r8_[rip+0x@@ 56@@ b5], lea_rdx_[rip+0x@@ 56@@ d3], mov_esi_1, xor_eax_eax, call_0xffffffffffff7f@@ 63, lea_rcx_[rip+0x@@ 4a@@ 8c], mov_rdx_r13, lea_rsi_[rip+0x57@@ 6d], mov_rdi_r14, xor_eax_eax, call_0xffffffffffffef@@ 88, jmp_0xfffffffffffffe@@ 93, call_0xffffffffffff7@@ 9f@@ e, lea_rcx_[rip+0x@@ 4a@@ 67], jmp_0xffffffffffffffdb, mov_r12d_eax, jmp_0xfffffffffffffe@@ 7@@ d
endbr64, push_r12, mov_r12d_esi, mov_rsi_rdx, push_rbp, mov_rdx_rcx, mov_rbp_rdi, sub_rsp_8, call_0xfffffffffffff@@ 13@@ 9, test_rax_rax, je_0x21, add_rsp_8, mov_rdi_rbp, pop_rbp, mov_esi_r12d, mov_rdx_rax, pop_r12, jmp_0xfffffffffffffdd@@ f, call_0xffffffffffff7@@ 77@@ 0, mov_eax_dword_ptr_[rax], add_rsp_8, pop_rbp, neg_eax, pop_r12, ret
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rcx_rsp, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffff@@ 12, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xffffffffffff7@@ 8d@@ 5
endbr64, push_rbp, mov_rbp_rsi, test_rsi_rsi, je_0x55, movzx_eax_byte_ptr_[rsi], mov_r8_rsi, xor_esi_esi, jmp_0x28, cmp_al_0x7@@ 7, je_0x5e, cmp_al@@ _0x61, je_0x72, mov_r9d_esi, or_r9d@@ _0x80000, cmp_al@@ _0x65, cmove@@ _esi@@ _r9d, inc@@ _r8, mov_eax_ecx, test_al_al, je_0x29, movzx_ecx_byte_ptr_[r@@ 8+1], cmp_al_0x7@@ 2, jne_0xffffffffffffffd8, mov_eax_esi, or_eax_2, cmp_cl@@ _0x2b, cmove@@ _esi@@ _eax, jmp_0xffffffffffffffe3, xor_esi_esi, call_0xfffffffffffffc@@ 98, mov_edi_eax, test_eax_eax, js@@ _0x3f, mov_rsi_rbp, pop_rbp, jmp_0xffffffffffff@@ 7c@@ 69, mov_eax_esi, or_eax@@ _0x2@@ 02, or_esi@@ _0x2@@ 01, cmp_cl@@ _0x2b, cmove@@ _esi@@ _eax, jmp_0xffffffffffffffa5, mov_eax_esi, or_eax@@ _0x40@@ 2, or_esi@@ _0x40@@ 1, cmp_cl@@ _0x2b, cmove@@ _esi@@ _eax, jmp_0xffffffffffffff8d, xor_eax_eax, pop_rbp, ret
endbr64, push_r12, mov_r12_rsi, mov_rsi_rdx, push_rbp, mov_rdx_rcx, mov_rbp_rdi, sub_rsp_8, call_0xffffffffffffef@@ 69, test_rax_rax, je_0x21, add_rsp_8, mov_rdi_rbp, pop_rbp, mov_rsi_r12, mov_rdx_rax, pop_r12, jmp_0xffffffffffffff0f, add_rsp_8, pop_rbp, xor_eax_eax, pop_r12, ret
push_rbp, mov_rbp_rsp, push_r15, push_r14, lea_r14d@@ _[rdx@@ *8], sub_r14d@@ _edx, push_r13, push_r12, mov_r12d_edx, push_rbx, mov_rbx_rsi, sub_rsp_0x28, mov_dword_ptr_[rbp-0x4@@ 4]_ecx, mov_rcx_rsp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x38]_rax, xor_eax_eax, movsxd_rax_r14d, add_rax@@ _0xf, mov_rdx_rax, and_rax@@ _0xffffffffffff@@ f000, sub_rcx_rax, mov_rax_rcx, and_rdx@@ _0xfffffffffffffff0, cmp_rsp@@ _rax, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rax, jne_0xffffffffffffffed, and_edx@@ _0xfff, sub_rsp@@ _rdx, test_rdx_rdx, jne_0x@@ f9, mov_qword_ptr_[rbx]_0, mov_rcx_r9, mov_rdx_r8, lea_rsi_[rip+0x54@@ 9e], call_0xffffffffffffff@@ 1f, mov_r15@@ _rsp, mov_r13_rax, test_rax_rax, je_0xe1, mov_rdx_rax, mov_esi_r14d, mov_rdi_rsp, call_0xffffffffffff7@@ 9@@ 12, test_rax_rax, je_0x9a, mov_rdi_r13, call_0xffffffffffff7@@ 68@@ 1, mov_rdi_r15, call_0xffffffffffff7@@ 6c@@ 9, cmp_byte_ptr_[r@@ 15@@ +rax@@ -1]_0xa, jne_8, mov_byte_ptr_[r15@@ +rax@@ -1]_0, lea_rsi_[rbp-0x@@ 40], xor_edx_edx, mov_edi_r12d, call_0x2@@ 70d, mov_qword_ptr_[rbx]_rax, mov_rsi_rax, test_rax_rax, je_0x9d, mov_eax_dword_ptr_[rbp-0x44], mov_rdx_qword_ptr_[rbp-0x40], test_eax_eax, je_0x30, xor_ecx_ecx, mov_rdi_r15, call_0x2@@ cc@@ 9, test_eax_eax, jne_0x2e, xor_eax_eax, mov_rbx_qword_ptr_[rbp-0x@@ 38], xor_rbx_qword_ptr_fs:[0x28], jne_0x79, lea_rsp_[rbp-0x28], pop_rbx, pop_r12, pop_r13, pop_r14, pop_r15, pop_rbp, ret, mov_rdi_r15, call_0x2b@@ 2d, test_eax_eax, je_0xffffffffffffffd6, mov_rdi_qword_ptr_[rbx], call_0x2@@ 701, mov_eax_0xffffffea, jmp_0xffffffffffffffc9, call_0xffffffffffff7@@ 440, mov_r14d_dword_ptr_[r@@ ax], mov_rdi_r13, call_0xffffffffffff7@@ 5e@@ 5, test_r14d_r14d, je_0xffffffffffffff@@ 61, mov_eax_r14d, neg_eax, jmp_0xffffffffffffffa4, or_qword_ptr_[r@@ sp@@ +rdx@@ -8]_0, jmp_0xffffffffffffff07, call_0xffffffffffff7@@ 4@@ 10, mov_eax_dword_ptr_[rax], neg_eax, jmp_0xffffffffffffff89, mov_eax@@ _0xfffffff4, jmp_0xffffffffffffff7f, call_0xffffffffffff7@@ 62@@ 8
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rcx_rsp, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffffd@@ 82, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xffffffffffff7@@ 57@@ 5
endbr64, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, test_rsi_rsi, je_0x3f, mov_rdx_rsi, mov_esi_0x8@@ 0000, call_0xfffffffffffff98@@ 5, mov_ebp_eax, test_ebp_ebp, js_0x5@@ a, mov_edi_ebp, call_0xffffffffffff7@@ a0@@ 8, mov_r12_rax, test_rax_rax, je_0xbd, test_rbx_rbx, je_0x9c, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, cmp_qword_ptr_[rdi+@@ 8]_0, je_0x29, test_byte_ptr_[rip+0x@@ ab@@ 92@@ ]_4, jne_0x32, mov_rdi_rbp, call_0xfffffffffffff17@@ d, mov_edi_eax, test_eax_eax, js_0x1@@ 2, mov_esi_3, call_0x2@@ 2b@@ d, mov_ebp_eax, test_ebp_ebp, jns_0xffffffffffffff@@ aa, pop_rbx, xor_r12d_r12d, pop_rbp, mov_rax_r12, pop_r12, ret, call_0xffffffffffff7@@ 4@@ 20, mov_ecx_eax, mov_rax_qword_ptr_[rip+0x@@ a@@ 98@@ 2], lea_r9_[rip+0x@@ 5@@ 170], mov_rdi_qword_ptr_[rax], lea_r8_[rip+0x5@@ 14@@ 5], lea_rdx_[rip+0x5@@ 16@@ 3], mov_esi_1, xor_eax_eax, call_0xffffffffffff7@@ 9f@@ 3, lea_rsi_[rip+0x5@@ 2@@ 19], mov_rdi_rbp, xor_eax_eax, call_0xffffffffffffea@@ 22, jmp_0xffffffffffffff8d, mov_rdi_rax, call_0xffffffffffff7@@ 5e@@ 5, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, mov_edi_ebp, call_0xffffffffffff7@@ 5b@@ e, jmp_0xffffffffffffff4@@ b
endbr64, push_rbp, mov_rbp_rdi, call_0xffffffffffffeb@@ d8, test_rax_rax, je_0x10, mov_rdi_rbp, mov_rsi_rax, pop_rbp, jmp_0xfffffffffffffee7, xor_eax_eax, pop_rbp, ret
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]_0x10, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffff@@ 3d, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xffffffffffff7@@ 39@@ 0
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 2@@ 1d], endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 130@@ 7d], endbr64, push_r13, mov_r13_rdx, push_r12, mov_r12_rsi, push_rbp, test_rcx_rcx, je_0x2e, mov_rbp_rcx, call_0xffffffffffffe@@ fd@@ 9, mov_edi_eax, cdqe, test_edi_edi, js_0x4@@ a, mov_rsi_rbp, pop_rbp, mov_rdx_r12, pop_r12, mov_rcx_r13, pop_r13, jmp_0xffffffffffff@@ 7@@ 58@@ e, call_0xffffffffffffeb@@ 50, mov_rdi_rax, test_rax_rax, je_0x15, pop_rbp, mov_rsi_r12, pop_r12, mov_rdx_r13, pop_r13, jmp_0xffffffffffff@@ 7@@ 228, call_0xffffffffffff70@@ f0, mov_edi_dword_ptr_[rax], neg@@ _edi, movsxd_rax@@ _edi, pop_rbp, pop_r12, pop_r13, ret
endbr64, push_r13, mov_r13_rdx, push_r12, mov_r12_rsi, mov_rsi_rcx, push_rbp, mov_rbp_rdi, sub_rsp_0xd0, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _0x20, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffe@@ 9d@@ 3, mov_rcx_rax, test_rax_rax, je_0x30, mov_rdx_r13, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffffec@@ d, mov_rdi_qword_ptr_[rsp+0x18], xor_rdi_qword_ptr_fs:[0x28], jne_0x1f, add_rsp_0xd0, pop_rbp, pop_r12, pop_r13, ret, call_0xffffffffffff6@@ ff8, mov_eax_dword_ptr_[rax], neg_eax, cdqe, jmp_0xffffffffffffffd5, call_0xffffffffffff7@@ 21@@ b
endbr64, push_r15, push_r14, mov_r14_rcx, push_r13, push_r12, push_rbp, mov_rbp_rsi, mov_esi_0x8@@ 0000, push_rbx, mov_rbx_rdx, mov_rdx_rcx, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0xfffffffffffff60@@ d, mov_r12d_eax, call_0xffffffffffff6@@ fa@@ 5, mov_r13_rax, test_r12d_r12d, js_0x1@@ 4a, test_byte_ptr_[rip+0x@@ a8@@ 3d@@ ]_4, jne_0xbd, xor_esi_esi, mov_rdx_rbx, mov_rdi_rbp, call_0xffffffffffff7@@ 2b@@ f, test_rbx_rbx, je_0x1@@ 47, lea_rax_[rsp+0x10], mov_qword_ptr_[rsp]_rax, xor_r15d_r15d, xor_ecx_ecx, mov_rdx_rbx, mov_rsi_rbp, mov_edi_r12d, mov_dword_ptr_[rsp+8]_ecx, call_0xffffffffffff7@@ 36@@ 6, test_rax_rax, jle_0x@@ 1e, add_rbp_rax, add_r15_rax, sub_rbx_rax, je_0x103, xor_ecx_ecx, jmp_0xffffffffffffffd8, mov_r14d_dword_ptr_[r@@ 13], je_0x1b, cmp_r14d@@ _0xb, mov_ecx_dword_ptr_[rsp+8], je_8, cmp_r14d_4, jne_0xb, cmp_ecx@@ _4, jle_0x@@ 97, test_r15_r15, mov_eax_0xffffffff, cmove_r15d_eax, mov_edi_r12d, call_0xffffffffffff7@@ 27@@ 2, mov_dword_ptr_[r13@@ ]@@ _r14d, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0xc7, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r15d, pop_r15, ret, call_0xffffffffffff70@@ 40, mov_ecx_eax, mov_rax_qword_ptr_[rip+0x@@ a@@ 5a@@ 2], lea_r9_[rip+0x@@ 4d@@ 90], mov_rdi_qword_ptr_[rax], lea_r8_[rip+0x@@ 4d@@ 65], lea_rdx_[rip+0x@@ 4d@@ 83], mov_esi_1, xor_eax_eax, call_0xffffffffffff7@@ 6@@ 13, mov_rsi_r14, lea_rdi_[rip+0x@@ 4e@@ 49], xor_eax_eax, call_0xffffffffffffe@@ 75@@ 2, jmp_0xffffffffffffff06, mov_rdi_qword_ptr_[rsp], inc@@ _ecx, xor_esi_esi, mov_dword_ptr_[rsp+8]_ecx, mov_dword_ptr_[rsp+0xc]_ecx, mov_qword_ptr_[rsp+0x10]_0, mov_qword_ptr_[rsp+0x1@@ 8]@@ _0x@@ ee@@ 6b@@ 280, call_0xffffffffffff7@@ 10e, mov_ecx_dword_ptr_[rsp+8], jmp_0xfffffffffffffef2, mov_r15d_dword_ptr_[r@@ ax], neg@@ _r15d, jmp_0xffffffffffffff51, mov_r14d_dword_ptr_[r@@ 13], jmp_0xffffffffffffff37, mov_r14d_dword_ptr_[r@@ 13], xor_r15d_r15d, jmp_0xffffffffffffff24, call_0xffffffffffff70@@ 5@@ 4
endbr64, push_r13, mov_r13_rdx, mov_rdx_r8, push_r12, mov_r12_rsi, mov_rsi_rcx, push_rbp, mov_rbp_rdi, call_0xffffffffffffe7@@ 98, test_rax_rax, je_0x20, mov_rdi_rbp, pop_rbp, mov_rsi_r12, pop_r12, mov_rdx_r13, mov_rcx_rax, pop_r13, jmp_0xfffffffffffffd@@ fd, call_0xffffffffffff6@@ dd0, mov_eax_dword_ptr_[rax], pop_rbp, pop_r12, neg_eax, pop_r13, ret
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_r8_rsp, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]@@ _0x20, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffff@@ 27, mov_rdx_qword_ptr_[rsp+0x18], xor_rdx_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xffffffffffff6f@@ 4@@ a
endbr64, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x2@@ 00@@ 8]_rax, xor_eax_eax, test_rsi_rsi, je_0x80, mov_qword_ptr_[rsi]_0, mov_rbp_rsp, mov_rcx_rdx, mov_rbx_rsi, mov_edx_0x1@@ fff, mov_rsi_rbp, call_0xfffffffffffffc@@ dc, mov_r12d_eax, test_eax_eax, js_0x2@@ 4, mov_eax_0, jne_0x43, mov_rdi_rbp, mov_byte_ptr_[rsp@@ +rax]_0, call_0xffffffffffff7@@ 42@@ 2, test_rax_rax, mov_qword_ptr_[rbx]_rax, mov_eax@@ _0xfffffff4, cmove_r12d_eax, mov_rax_qword_ptr_[rsp+0x@@ 200@@ 8], xor_rax_qword_ptr_fs:[0x28], jne_0x2f, add_rsp@@ _0x20@@ 10, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, movsxd_rax_r12d, cmp_byte_ptr_[r@@ sp@@ +rax@@ -1]_0xa, jne_0xffffffffffffffb7, dec@@ _r12d, movsxd_rax_r12d, jmp_0xffffffffffffffaf, mov_r12d@@ _0xffffffea, jmp_0xffffffffffffffc2, call_0xffffffffffff6e@@ 7@@ e
endbr64, push_r12, mov_r12_rsi, mov_rsi_rdx, push_rbp, mov_rbp_rdi, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffe@@ 54@@ 3, mov_rdx_rax, test_rax_rax, je_0x28, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffffe@@ 80, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x18, add_rsp_0xd8, pop_rbp, pop_r12, ret, call_0xffffffffffff6b@@ 70, mov_eax_dword_ptr_[rax], neg_eax, jmp_0xffffffffffffffdc, call_0xffffffffffff6d@@ 9@@ 5
endbr64, push_rbx, dec@@ _rdx, mov_rbx_rsi, call_0xfffffffffffffb@@ 75, test_eax_eax, js_0x1@@ 9, je_0x14, movsxd_rdx_eax, cmp_byte_ptr_[rbx@@ +rdx@@ -1]_0xa, jne_7, dec_eax, movsxd_rdx_eax, add_rbx@@ _rdx, mov_byte_ptr_[rbx]_0, pop_rbx, ret
endbr64, push_r13, mov_r13_rdx, push_r12, mov_r12_rsi, mov_rsi_rcx, push_rbp, mov_rbp_rdi, sub_rsp_0xd0, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _0x20, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffe4@@ 33, mov_rcx_rax, test_rax_rax, je_0x30, mov_rdx_r13, mov_rsi_r12, mov_rdi_rbp, call_0xffffffffffffff@@ 1d, mov_rdi_qword_ptr_[rsp+0x18], xor_rdi_qword_ptr_fs:[0x28], jne_0x1d, add_rsp_0xd0, pop_rbp, pop_r12, pop_r13, ret, call_0xffffffffffff6a@@ 58, mov_eax_dword_ptr_[rax], neg_eax, jmp_0xffffffffffffffd7, call_0xffffffffffff6c@@ 7@@ d
endbr64, push_r13, mov_r13_rdx, push_r12, mov_r12_rsi, push_rbp, sub_rsp_0xd0, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rdx_r12, lea_rsi_[rip+0x4@@ 97@@ 5], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xfffffffffffff32@@ 6, mov_rbp_rax, test_rax_rax, je_0xbe, test_byte_ptr_[rip+0x@@ a@@ 2@@ 5e@@ ]_4, jne_0x66, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, mov_rdi_rbp, lea_rax_[rsp+0x20], mov_rdx_rsp, mov_rsi_r13, mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffff6b@@ 8d, mov_rdi_rbp, mov_r12d_eax, call_0xffffffffffff6b@@ 22, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x6a, add_rsp_0xd0, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, call_0xffffffffffff6a@@ b8, mov_ecx_eax, mov_rax_qword_ptr_[rip+0x@@ a0@@ 1a], lea_r9_[rip+0x@@ 4@@ 80@@ 8], mov_rdi_qword_ptr_[rax], lea_r8_[rip+0x@@ 47@@ dd], lea_rdx_[rip+0x@@ 47@@ fb], mov_esi_1, xor_eax_eax, call_0xffffffffffff70@@ 8b, mov_rdx_r12, mov_rsi_r13, lea_rdi_[rip+0x@@ 48@@ cc], xor_eax_eax, call_0xffffffffffffe@@ 1c@@ 7, jmp_0xffffffffffffff56, mov_r12d@@ _0xffffffea, jmp_0xffffffffffffff8a, call_0xffffffffffff6b@@ 2@@ 5
endbr64, push_r12, mov_r10_rsi, mov_r11@@ _rdx, push_rbp, mov_r12_rcx, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rcx_r11, mov_rdx_r10, lea_rsi_[rip+0x48@@ 26], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xfffffffffffff29@@ 7, mov_rbp_rax, test_rax_rax, je_0x5f, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, mov_rsi_r12, lea_rax_[rsp+0x20], mov_rdi_rbp, mov_rdx_rsp, mov_dword_ptr_[rsp]@@ _0x20, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffff6a@@ 4b, mov_rdi_rbp, mov_r12d_eax, call_0xffffffffffff6@@ 9e0, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x18, add_rsp_0xd8, pop_rbp, mov_eax_r12d, pop_r12, ret, mov_r12d@@ _0xffffffea, jmp_0xffffffffffffffdc, call_0xffffffffffff6a@@ 3@@ 5
endbr64, push_rbx, mov_rbx_rsi, mov_rsi_rdx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_rcx_rsp, lea_rdx_[rip+0x@@ 47@@ ac], mov_qword_ptr_[rsp]_0, call_0xfffffffffffffd@@ 8f, cmp_eax_1, jne_0x27, xor_eax_eax, test_rbx_rbx, je_9, mov_rdx_qword_ptr_[rsp], mov_qword_ptr_[rbx]_rdx, mov_rbx_qword_ptr_[rsp+8], xor_rbx_qword_ptr_fs:[0x28], jne_0x10, add_rsp_0x10, pop_rbx, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffe4, call_0xffffffffffff6@@ 9c@@ 9
endbr64, push_r12, mov_r12_rsi, mov_rsi_rdx, push_rbp, mov_rbp_rdi, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffe0@@ 93, mov_rdx_rax, test_rax_rax, je_0x28, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffffee@@ 0, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x18, add_rsp_0xd8, pop_rbp, pop_r12, ret, call_0xffffffffffff6@@ 6c0, mov_eax_dword_ptr_[rax], neg_eax, jmp_0xffffffffffffffdc, call_0xffffffffffff6@@ 8e@@ 5
endbr64, push_rbx, mov_rbx_rsi, mov_rsi_rdx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_rcx_rsp, lea_rdx_[rip+0x@@ 46@@ 60], mov_qword_ptr_[rsp]_0, call_0xfffffffffffffc@@ 3f, cmp_eax_1, jne_0x27, xor_eax_eax, test_rbx_rbx, je_9, mov_rdx_qword_ptr_[rsp], mov_qword_ptr_[rbx]_rdx, mov_rbx_qword_ptr_[rsp+8], xor_rbx_qword_ptr_fs:[0x28], jne_0x10, add_rsp_0x10, pop_rbx, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffe4, call_0xffffffffffff6@@ 87@@ 9
endbr64, push_r12, mov_r12_rsi, mov_rsi_rdx, push_rbp, mov_rbp_rdi, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffdf@@ 43, mov_rdx_rax, test_rax_rax, je_0x28, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffffee@@ 0, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x18, add_rsp_0xd8, pop_rbp, pop_r12, ret, call_0xffffffffffff6@@ 570, mov_eax_dword_ptr_[rax], neg_eax, jmp_0xffffffffffffffdc, call_0xffffffffffff67@@ 9@@ 5
endbr64, push_rbx, mov_rbx_rsi, mov_rsi_rdx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, lea_rcx_[r@@ sp+4], lea_rdx_[rip+0x@@ 40@@ 1b], mov_dword_ptr_[rsp+4]_0, call_0xfffffffffffffa@@ ed, cmp_eax_1, jne_0x25, xor_eax_eax, test_rbx_rbx, je_8, mov_edx_dword_ptr_[rsp+4], mov_dword_ptr_[rbx]_edx, mov_rbx_qword_ptr_[rsp+8], xor_rbx_qword_ptr_fs:[0x28], jne_0xf, add_rsp_0x10, pop_rbx, ret, mov_eax_0xffffffff, jmp_0xffffffffffffff@@ e5, call_0xffffffffffff67@@ 2@@ 9
endbr64, push_r12, mov_r12_rsi, mov_rsi_rdx, push_rbp, mov_rbp_rdi, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffdd@@ f3, mov_rdx_rax, test_rax_rax, je_0x28, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffffee@@ 0, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x18, add_rsp_0xd8, pop_rbp, pop_r12, ret, call_0xffffffffffff64@@ 20, mov_eax_dword_ptr_[rax], neg_eax, jmp_0xffffffffffffffdc, call_0xffffffffffff66@@ 4@@ 5
endbr64, push_rbx, mov_rbx_rsi, mov_rsi_rdx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, lea_rcx_[r@@ sp+4], lea_rdx_[rip+0x3@@ 56@@ 4], call_0xfffffffffffff9a@@ 5, cmp_eax_1, jne_0x2d, xor_eax_eax, test_rbx_rbx, je_8, mov_edx_dword_ptr_[rsp+4], mov_dword_ptr_[rbx]_edx, mov_rbx_qword_ptr_[rsp+8], xor_rbx_qword_ptr_fs:[0x28], jne_0x17, add_rsp_0x10, pop_rbx, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffdd, call_0xffffffffffff6@@ 5d@@ 9
endbr64, push_r12, mov_r12_rsi, mov_rsi_rdx, push_rbp, mov_rbp_rdi, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffd@@ ca@@ 3, mov_rdx_rax, test_rax_rax, je_0x28, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffffee@@ 0, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x18, add_rsp_0xd8, pop_rbp, pop_r12, ret, call_0xffffffffffff6@@ 2d0, mov_eax_dword_ptr_[rax], neg_eax, jmp_0xffffffffffffffdc, call_0xffffffffffff64@@ f@@ 5
endbr64, push_rbx, mov_rbx_rsi, mov_rsi_rdx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_rcx_rsp, lea_r8_[r@@ sp+4], lea_rdx_[rip+0x4@@ 26@@ f], call_0xfffffffffffff85@@ 2, cmp_eax_2, jne_0x6a, xor_r8d_r8d, test_rbx_rbx, je_0x47, mov_edx_dword_ptr_[rsp], mov_eax_dword_ptr_[rsp+4], mov_rcx_rdx, shl_rcx@@ _8, shl_rdx_0x20, movabs_rsi@@ _0xffff@@ f@@ 0000@@ 0000000, and_ecx@@ _0xfff@@ 00, and_rdx@@ _rsi, or@@ _rdx_rcx, movzx_ecx_al, or@@ _rdx_rcx, shl_rax@@ _0xc, movabs_rcx@@ _0xffffff@@ 00000, and_rax@@ _rcx, or_rax_rdx, mov_qword_ptr_[rbx]_rax, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x15, add_rsp_0x10, mov_eax_r8d, pop_rbx, ret, mov_r8d_0xffffffff, jmp_0xffffffffffffffdf, call_0xffffffffffff6@@ 44@@ 8
endbr64, push_r12, mov_r12_rsi, mov_rsi_rdx, push_rbp, mov_rbp_rdi, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffdb@@ 13, mov_rdx_rax, test_rax_rax, je_0x28, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffffea@@ 0, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x18, add_rsp_0xd8, pop_rbp, pop_r12, ret, call_0xffffffffffff6@@ 140, mov_eax_dword_ptr_[rax], neg_eax, jmp_0xffffffffffffffdc, call_0xffffffffffff6@@ 36@@ 5
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12_rsi, mov_esi_0x8@@ 0001, push_rbp, push_rbx, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xffffffffffffe@@ 76@@ 6, mov_r13d_eax, call_0xffffffffffff60@@ fe, mov_rbp_rax, test_r13d_r13d, js@@ _0xf@@ 3, mov_rdi_r12, call_0xffffffffffff6@@ 2@@ ea, mov_r15_rax, test_rax_rax, je_0x63, mov_r14_rsp, mov_dword_ptr_[rbp]_0, mov_rdx_r15, mov_rsi_r12, mov_edi_r13d, call_0xffffffffffff6@@ 210, mov_ebx_dword_ptr_[r@@ bp], test_rax_rax, jle_0x@@ 75, sub_r15@@ _rax, je_0x10, add_r12_rax, cmp_ebx@@ _0xb, jne_0xffffffffffffffd8, jmp_0x7@@ 0, cmp_ebx@@ _0xb, jne_0xad, mov_rdi_rsp, xor_esi_esi, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+8]@@ _0x@@ ee@@ 6b@@ 280, call_0xffffffffffff6@@ 33@@ 1, mov_ebx_dword_ptr_[r@@ bp], xor_r12d_r12d, mov_edi_r13d, call_0xffffffffffff6@@ 3e@@ 3, mov_dword_ptr_[rbp@@ ]_ebx, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ 88, add_rsp_0x28, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, cmp_ebx_4, je_0x2d, cmp_ebx@@ _0xb, jne_0x58, xor_esi_esi, mov_rdi_r14, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+8]@@ _0x@@ ee@@ 6b@@ 280, call_0xffffffffffff6@@ 2d0, jmp_0xffffffffffffff4b, cmp_ebx@@ _0xb, jne_0xffffffffffffff@@ 3d, jmp_0xffffffffffffffd1, mov_r12d_dword_ptr_[rax], neg@@ _r12d, jmp_0xffffffffffffff8f, xor_r12d_r12d, jmp_0xffffffffffffff77, mov_r12d_0xffffffff, jmp_0xffffffffffffff64, call_0xffffffffffff6@@ 20@@ 5
endbr64, push_r12, mov_r12_rsi, mov_rsi_rdx, push_rbp, mov_rbp_rdi, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffd@@ 8d@@ 3, mov_rdx_rax, test_rax_rax, je_0x28, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffffd@@ f0, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x18, add_rsp_0xd8, pop_rbp, pop_r12, ret, call_0xffffffffffff5f@@ 00, mov_eax_dword_ptr_[rax], neg_eax, jmp_0xffffffffffffffdc, call_0xffffffffffff6@@ 12@@ 5
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rsi, mov_esi_0x8@@ 0001, push_rbx, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0xffffffffffffe5@@ 26, mov_r12d_eax, call_0xffffffffffff5e@@ be, mov_rbx_rax, test_r12d_r12d, js@@ _0x10@@ 3, lea_r15_[r@@ sp+0x10], mov_r9_rbp, lea_r8_[rip+0x@@ 3e@@ 73], mov_ecx_0x1@@ 5, mov_edx_1, mov_esi_0x1@@ 5, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff5e@@ 2a, movsxd_r14@@ _eax, mov_r13_rsp, mov_dword_ptr_[rbx]_0, mov_rdx_r14, mov_rsi_r15, mov_edi_r12d, call_0xffffffffffff5@@ fc0, mov_ebp_dword_ptr_[r@@ bx], test_rax_rax, jle_0x@@ 36, sub_r14@@ _rax, je_0x71, add_r15_rax, cmp_ebp@@ _0xb, jne_0xffffffffffffffda, xor_esi_esi, mov_rdi_r13, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+8]@@ _0x@@ ee@@ 6b@@ 280, call_0xffffffffffff60@@ f1, jmp_0xffffffffffffffbd, cmp_ebp@@ _4, je_0x6d, cmp_ebp@@ _0xb, je_0xffffffffffffffd1, mov_r13d_0xffffffff, mov_edi_r12d, call_0xffffffffffff6@@ 18d, mov_dword_ptr_[rbx]@@ _ebp, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x70, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, pop_r14, pop_r15, ret, cmp_ebp@@ _0xb, jne_0x4d, mov_rdi_rsp, xor_esi_esi, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+8]@@ _0x@@ ee@@ 6b@@ 280, xor_r13d_r13d, call_0xffffffffffff60@@ 82, mov_ebp_dword_ptr_[r@@ bx], jmp_0xffffffffffffffab, cmp_ebp@@ _0xb, jne_0xffffffffffffff@@ 3e, jmp_0xffffffffffffff60, mov_r13d_dword_ptr_[r@@ ax], neg@@ _r13d, jmp_0xffffffffffffff94, xor_r13d_r13d, jmp_0xffffffffffffff7d, call_0xffffffffffff5@@ fc@@ 8
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rsi, mov_esi_0x8@@ 0001, push_rbx, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, call_0xffffffffffffe@@ 3c@@ 6, mov_r12d_eax, call_0xffffffffffff5d@@ 5e, mov_rbx_rax, test_r12d_r12d, js@@ _0x10@@ 3, lea_r15_[r@@ sp+0x10], mov_r9_rbp, lea_r8_[rip+0x@@ 3d@@ 17], mov_ecx@@ _0x25, mov_edx_1, mov_esi_0x2@@ 5, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff5c@@ ca, movsxd_r14@@ _eax, mov_r13_rsp, mov_dword_ptr_[rbx]_0, mov_rdx_r14, mov_rsi_r15, mov_edi_r12d, call_0xffffffffffff5e@@ 60, mov_ebp_dword_ptr_[r@@ bx], test_rax_rax, jle_0x@@ 36, sub_r14@@ _rax, je_0x71, add_r15_rax, cmp_ebp@@ _0xb, jne_0xffffffffffffffda, xor_esi_esi, mov_rdi_r13, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+8]@@ _0x@@ ee@@ 6b@@ 280, call_0xffffffffffff5f@@ 91, jmp_0xffffffffffffffbd, cmp_ebp@@ _4, je_0x6d, cmp_ebp@@ _0xb, je_0xffffffffffffffd1, mov_r13d_0xffffffff, mov_edi_r12d, call_0xffffffffffff60@@ 2d, mov_dword_ptr_[rbx]@@ _ebp, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x70, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, pop_r14, pop_r15, ret, cmp_ebp@@ _0xb, jne_0x4d, mov_rdi_rsp, xor_esi_esi, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+8]@@ _0x@@ ee@@ 6b@@ 280, xor_r13d_r13d, call_0xffffffffffff5f@@ 22, mov_ebp_dword_ptr_[r@@ bx], jmp_0xffffffffffffffab, cmp_ebp@@ _0xb, jne_0xffffffffffffff@@ 3e, jmp_0xffffffffffffff60, mov_r13d_dword_ptr_[r@@ ax], neg@@ _r13d, jmp_0xffffffffffffff94, xor_r13d_r13d, jmp_0xffffffffffffff7d, call_0xffffffffffff5e@@ 6@@ 8
endbr64, push_r12, mov_r12_rsi, mov_rsi_rdx, push_rbp, mov_rbp_rdi, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffd5@@ 33, mov_rdx_rax, test_rax_rax, je_0x28, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffffd@@ f0, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x18, add_rsp_0xd8, pop_rbp, pop_r12, ret, call_0xffffffffffff5b@@ 60, mov_eax_dword_ptr_[rax], neg_eax, jmp_0xffffffffffffffdc, call_0xffffffffffff5d@@ 8@@ 5
endbr64, push_r12, push_rbp, sub_rsp_8, call_0xffffffffffffe@@ 80@@ 5, test_rax_rax, je_0x5d, mov_rbp_rax, xor_r12d_r12d, mov_rdi_rbp, call_0xffffffffffff60@@ 5d, test_rax_rax, je_0x21, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x2e, je_0xffffffffffffffee, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x2@@ e@@ 2e, je_0x26, mov_rdi_rbp, inc_r12d, call_0xffffffffffff60@@ 3e, test_rax_rax, jne_0xffffffffffffffe3, mov_rdi_rbp, call_0xffffffffffff5@@ ec@@ 1, add_rsp_8, pop_rbp, mov_eax_r12d, pop_r12, ret, cmp_byte_ptr_[rax+0x1@@ 5]_0, je_0xffffffffffffff@@ bc, jmp_0xffffffffffffffd6, add_rsp_8, xor_r12d_r12d, pop_rbp, mov_eax_r12d, pop_r12, ret
endbr64, push_rbp, mov_rbp_rdi, sub_rsp_0xd0, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_rdi_rbp, mov_dword_ptr_[rsp]_0x10, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffd@@ 3d@@ 6, mov_rsi_rax, test_rax_rax, je_0x2b, mov_rdi_rbp, call_0xfffffffffffffed@@ 6, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x1e, add_rsp_0xd0, pop_rbp, ret, call_0xffffffffffff5a@@ 00, mov_eax_dword_ptr_[rax], neg_eax, jmp_0xffffffffffffffd6, call_0xffffffffffff5c@@ 2@@ 5
endbr64, push_r12, push_rbp, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 00@@ 8]_rax, xor_eax_eax, test_rsi_rsi, je_0x8@@ 3, mov_r9_rdi, mov_rbp_rdx, mov_rdi_rsi, test_r9_r9, je_0x61, xor_eax_eax, cmp_byte_ptr_[rsi@@ ]@@ _0x2f, sete_al, add_rdi_rax, mov_r12_rsp, sub_rsp_8, push_rdi, mov_ecx_0x1000, mov_edx_1, lea_r8_[rip+0x@@ 38@@ e0], mov_esi_0x1000, mov_rdi_r12, xor_eax_eax, call_0xffffffffffff5@@ 92@@ 1, mov_rsi_rbp, mov_rdi_r12, call_0xffffffffffff60@@ 56, pop_rdx, pop_rcx, mov_rcx_qword_ptr_[rsp+0x1@@ 008], xor_rcx_qword_ptr_fs:[0x28], jne_0x22, add_rsp_0x10@@ 18, pop_rbp, pop_r12, ret, mov_rsi_rdx, call_0xffffffffffff60@@ 2d, jmp_0xffffffffffffffd9, xor_eax_eax, jmp_0xffffffffffffffcf, call_0xffffffffffff5b@@ 6@@ c
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_r8_rcx, lea_rax_[rsp+0x20], xor_ecx_ecx, mov_r9@@ _rsp, mov_dword_ptr_[rsp]@@ _0x20, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffe3@@ 12, mov_rdx_qword_ptr_[rsp+0x18], xor_rdx_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xffffffffffff5a@@ b@@ 5
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_r8_rcx, lea_rax_[rsp+0x20], mov_r9@@ _rsp, mov_ecx_1, mov_dword_ptr_[rsp]@@ _0x20, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffe@@ 25@@ f, mov_rdx_qword_ptr_[rsp+0x18], xor_rdx_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xffffffffffff5a@@ 0@@ 2
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x38, mov_ecx@@ _0x2000, mov_edx_1, lea_r8_[rip+0x@@ 38@@ 0c], xor_r12d_r12d, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x20@@ 28]_rax, xor_eax_eax, lea_r15_[rsp+0x20], sub_rsp_8, push_rsi, mov_r9d_edi, mov_esi_0x2000, mov_rdi_r15, call_0xffffffffffff56@@ fe, xor_esi_esi, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff5d@@ f2, pop_rdx, pop_rcx, test_eax_eax, js_0xa@@ d, mov_edx_0x2@@ 000, xor_esi_esi, mov_rdi_r15, mov_ebp_eax, call_0xffffffffffff5a@@ 77, lea_rax_[rsp+0x10], mov_qword_ptr_[rsp+8]_rax, xor_r14d_r14d, xor_r13d_r13d, mov_ebx@@ _0x2000, mov_r12_r15, mov_rdx_rbx, mov_rsi_r12, mov_edi_ebp, call_0xffffffffffff5b@@ 22, test_rax_rax, jle_0x@@ 1a, add_r12_rax, add_r14_rax, sub_rbx_rax, je_0x30, xor_r13d_r13d, jmp_0xffffffffffffffe0, je_0x19, call_0xffffffffffff56@@ ee, mov_eax_dword_ptr_[rax], cmp_eax_0xb, je_7, cmp_eax_4, jne_8, cmp_r13d_4, jle_0x@@ 69, xor_r12d_r12d, test_r14_r14, je_0x2e, xor_eax_eax, cmp_byte_ptr_[r@@ 15@@ +rax]_0, jne_7, mov_byte_ptr_[r15@@ +rax@@ ]_0x20, inc_rax, cmp_rax_r14, jb_0xffffffffffffff@@ ee, mov_rdi_r15, mov_byte_ptr_[rsp+r@@ 14+0x1@@ f]_0, call_0xffffffffffff5e@@ 2b, mov_r12_rax, mov_edi_ebp, call_0xffffffffffff5a@@ 11, mov_rax_qword_ptr_[rsp+0x@@ 20@@ 28], xor_rax_qword_ptr_fs:[0x28], jne_0x41, add_rsp@@ _0x20@@ 38, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_qword_ptr_[rsp+8], xor_esi_esi, mov_qword_ptr_[rsp+0x10]_0, mov_qword_ptr_[rsp+0x1@@ 8]@@ _0x@@ ee@@ 6b@@ 280, inc_r13d, call_0xffffffffffff5@@ 90@@ 4, jmp_0xffffffffffffff35, call_0xffffffffffff58@@ 7@@ a
endbr64, push_r12, push_rbp, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x18, lea_rcx_[rip+0x@@ 36@@ b1], mov_edx_0x1000, mov_esi_1, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 00@@ 8]_rax, xor_eax_eax, mov_rbp_rsp, mov_r8d_edi, mov_rdi_rbp, call_0xffffffffffff5@@ dd@@ c, mov_edi_8, call_0xffffffffffff5b@@ 52, mov_r12_rax, test_rax_rax, je_0x37, mov_rdi_rbp, call_0xffffffffffff57@@ a2, mov_qword_ptr_[r12]_rax, test_rax_rax, je_0x26, mov_rax_qword_ptr_[rsp+0x1@@ 008], xor_rax_qword_ptr_fs:[0x28], jne_0x20, add_rsp_0x10@@ 18, pop_rbp, mov_rax_r12, pop_r12, ret, mov_rdi_r12, call_0xffffffffffff@@ 55@@ 5d, xor_r12d_r12d, jmp_0xffffffffffffffd1, call_0xffffffffffff57@@ d@@ 3
endbr64, push_rbp, mov_rbp_rdi, test_rdi_rdi, je_0xf, mov_rdi_qword_ptr_[rdi], test_rdi_rdi, je_7, call_0xffffffffffff5@@ 93@@ b, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffff@@ 55@@ 2@@ 2
endbr64, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, test_rdi_rdi, je_0xe1, mov_rbp_rsi, test_rsi_rsi, je_0xd5, mov_dword_ptr_[rsi@@ ]_0, mov_r12_rdi, mov_r14_rsp, call_0xffffffffffff@@ 55@@ 1f, mov_dword_ptr_[rax]_0, mov_r13_rax, jmp_0x14, mov_edx_dword_ptr_[rbp], test_edx_edx, jne_0xa3, mov_rdi_qword_ptr_[r12], call_0xffffffffffff5a@@ 29, mov_rbx_rax, test_rax_rax, je_0x7e, call_0xffffffffffff5c@@ bc, mov_rax_qword_ptr_[rax], movzx_edx_byte_ptr_[r@@ bx+0x1@@ 3], test_byte_ptr_[rax+rdx*@@ 2+1]_8, je_0xffffffffffffffd3, mov_dword_ptr_[r13@@ ]_0, add_rbx@@ _0x13, mov_edx_0xa, mov_rsi_r14, mov_rdi_rbx, call_0xffffffffffff5@@ 9b@@ 2, mov_dword_ptr_[rbp]_eax, mov_edx_eax, mov_eax_dword_ptr_[r13], test_eax_eax, jne_0x1a, mov_rax_qword_ptr_[rsp], cmp_rbx_rax, je_0x11, test_rax_rax, je_0xffffffffffffff@@ 9f, cmp_byte_ptr_[rax]_0, je_0xffffffffffffff@@ 9a, mov_eax_0xffffffff, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x30, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_edx_dword_ptr_[r13], mov_eax_1, test_edx_edx, je_0xffffffffffffffd2, jmp_0xffffffffffffffcb, xor_eax_eax, jmp_0xffffffffffffffcb, mov_eax_0xffffffea, jmp_0xffffffffffffffc4, call_0xffffffffffff56@@ 8@@ 5
endbr64, lea_rsi_[rip+0x34@@ e3], jmp_0xfffffffffffffc@@ 8@@ 5
endbr64, lea_rsi_[rip+0x34@@ db], jmp_0xfffffffffffffc@@ 7@@ 5
endbr64, push_r12, mov_esi_0x18, mov_edi_1, call_0xffffffffffff58@@ 70, mov_r12_rax, test_rax_rax, je_0x25, lea_rdi_[rip+0x34@@ b7], call_0xffffffffffff5@@ 5cc, mov_qword_ptr_[r12]_rax, test_rax_rax, je_0x10, mov_rax_r12, pop_r12, ret, mov_rdi_r12, xor_r12d_r12d, call_0xffffffffffff5@@ 3@@ 9a, mov_rax_r12, pop_r12, ret
endbr64, push_rbp, mov_rbp_rdi, test_rdi_rdi, je_0xf, mov_rdi_qword_ptr_[rdi], test_rdi_rdi, je_7, call_0xffffffffffff57@@ 7b, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffff@@ 5@@ 36@@ 2
endbr64, movzx_eax_byte_ptr_[r@@ di+0x14], test_rsi_rsi, setne_dl, and_eax_0xfffffffe, or_eax_edx, mov_qword_ptr_[rdi+@@ 8]_rsi, mov_byte_ptr_[r@@ di+0x1@@ 4]_al, ret
endbr64, or_byte_ptr_[r@@ di+0x1@@ 4]_2, mov_dword_ptr_[rdi+0x1@@ 0]_esi, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1@@ b8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x2@@ 1a@@ 8]_rax, xor_eax_eax, test_rdi_rdi, je_0x2@@ 11, mov_r14_rsi, test_rsi_rsi, je_0x2@@ 05, mov_dword_ptr_[rsi@@ ]_0, mov_rbp_rdi, lea_r12_[r@@ sp+0x1@@ a0], call_0xffffffffffff5@@ 30@@ a, mov_r13_rax, mov_dword_ptr_[r13@@ ]_0, mov_rdi_qword_ptr_[rbp], call_0xffffffffffff58@@ 24, mov_rbx_rax, test_rax_rax, je_0x1@@ b9, call_0xffffffffffff5a@@ b3, mov_rax_qword_ptr_[rax], movzx_edx_byte_ptr_[r@@ bx+0x1@@ 3], test_byte_ptr_[rax+rdx*@@ 2+1]_8, je_0xffffffffffffffd2, movzx_eax_byte_ptr_[rbp+0x@@ 14], add_rbx@@ _0x13, test_al_2, jne_0x1@@ 1e, test_al_1, je_0xc7, mov_r9_rbx, lea_r8_[rip+0x3@@ 35@@ f], mov_ecx@@ _0x2000, mov_edx_1, mov_esi_0x2000, mov_rdi_r12, xor_eax_eax, call_0xffffffffffff5@@ 23@@ a, mov_rdi_qword_ptr_[rbp], call_0xffffffffffff57@@ 21, mov_edi_eax, mov_edx_0x8@@ 0000, mov_rsi_r12, xor_eax_eax, call_0xffffffffffff5@@ 4a0, mov_edi_eax, test_eax_eax, js_0xffffffffffffff@@ 77, lea_rsi_[rip+0x30@@ 68], call_0xffffffffffff58@@ aa, mov_r15_rax, test_rax_rax, je_0xffffffffffffff@@ 5f, mov_rdx_rax, mov_esi_0x2000, mov_rdi_r12, call_0xffffffffffff56@@ 7e, mov_rdi_r15, mov_qword_ptr_[rsp+8]_rax, call_0xffffffffffff5@@ 3f@@ 1, cmp_qword_ptr_[rsp+8]_0, je_0xffffffffffffff@@ 36, lea_r15_[rsp+0x@@ a0], xor_eax_eax, mov_rdx_r15, lea_rsi_[rip+0x3@@ 2d@@ 5], mov_rdi_r12, call_0xffffffffffff57@@ a9, cmp_eax_1, jne_0xffffffffffffff@@ 11, mov_rsi_qword_ptr_[rbp+8], mov_rdi_r15, call_0xffffffffffff56@@ 64, test_eax_eax, jne_0xfffffffffffffe@@ fd, mov_dword_ptr_[r13@@ ]_0, lea_rsi_[rsp+8], mov_edx_0xa, mov_rdi_rbx, mov_qword_ptr_[rsp+8]_0, call_0xffffffffffff5@@ 6c@@ 9, mov_dword_ptr_[r14]_eax, mov_eax_dword_ptr_[r13], test_eax_eax, jne_0x6b, mov_rdx_qword_ptr_[rsp+8], cmp_rdx_rbx, je_0xc, test_rdx_rdx, je_0x5e, cmp_byte_ptr_[rdx]_0, je_0x59, mov_eax_0xffffffff, jmp_0x5@@ 2, mov_rdi_qword_ptr_[rbp], call_0xffffffffffff56@@ 34, mov_esi_eax, xor_r8d_r8d, lea_rcx_[rsp+0x10], mov_rdx_rbx, mov_edi_1, call_0xffffffffffff54@@ 2d, test_eax_eax, jne_0xfffffffffffffe@@ 86, mov_eax_dword_ptr_[rsp+0x2c], cmp_dword_ptr_[rbp+0x@@ 10]_eax, jne_0xfffffffffffffe@@ 79, movzx_eax_byte_ptr_[rbp+0x@@ 14], jmp_0xfffffffffffffea@@ f, neg_eax, mov_rcx_qword_ptr_[rsp+0x@@ 2@@ 1a8], xor_rcx_qword_ptr_fs:[0x28], jne_0x38, add_rsp_0x2@@ 1b8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_edx_dword_ptr_[r13], mov_eax_1, test_edx_edx, je_0xffffffffffffffc7, mov_eax_0xffffffff, jmp_0xffffffffffffffc0, mov_eax_0xffffffea, jmp_0xffffffffffffffb9, call_0xffffffffffff5@@ 34@@ 5
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 13@@ 14@@ d], endbr64, mov_esi_0x8@@ 00@@ c2, jmp_0xffffffffffff@@ 5@@ 3d@@ 7
endbr64, push_r12, mov_rcx_rsi, mov_r8_rdx, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x20, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, test_rsi_rsi, je_0x70, xor_eax_eax, lea_rdi_[rsp+0x10], lea_rdx_[rip+0x3@@ 1@@ 9d], mov_esi_1, call_0xffffffffffff5@@ 50@@ 3, test_eax_eax, js_0x@@ 9c, mov_edi@@ _0x3f, call_0xffffffffffff@@ 55@@ 91, mov_rdi_qword_ptr_[rsp+0x10], mov_ebp_eax, call_0xffffffffffffff@@ 95, mov_r12d_eax, mov_edi_ebp, call_0xffffffffffff5@@ 57@@ b, cmp_r12d_-1, je_0x62, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rbx]_rax, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x62, add_rsp_0x20, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, lea_rdi_[rip+0x3@@ 12@@ f], mov_qword_ptr_[rsp+8]_rdx, call_0xffffffffffff4@@ fe@@ c, test_rax_rax, mov_r8_qword_ptr_[rsp+8], mov_rcx_rax, jne_0xffffffffffffff@@ 76, lea_rcx_[rip+0x3@@ 10@@ 7], jmp_0xffffffffffffff69, mov_rdi_qword_ptr_[rsp+0x10], call_0xffffffffffff4@@ fd@@ b, xor_eax_eax, jmp_0xffffffffffffff99, mov_r12d_0xffffffff, jmp_0xffffffffffffff92, call_0xffffffffffff5@@ 24@@ 8
endbr64, push_r12, mov_edx_esi, xor_eax_eax, push_rbp, mov_esi_0x40@@ 6, mov_ebp_edi, push_rbx, call_0xffffffffffff5@@ 13d, mov_r12d_eax, test_eax_eax, js_0x1@@ 3, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, mov_edi_ebp, call_0xffffffffffff5@@ 2c@@ e, mov_r12d_eax, test_eax_eax, js_0xffffffffffffff@@ e3, mov_edi_eax, mov_esi_1, xor_eax_eax, call_0xffffffffffff5@@ 109, test_eax_eax, js_0x1@@ a, or_eax_1, mov_edx_eax, mov_esi_2, xor_eax_eax, mov_edi_r12d, call_0xffffffffffff50@@ f1, test_eax_eax, jns_0xffffffffffffff@@ b9, call_0xffffffffffff4@@ fa@@ 8, mov_ebx_dword_ptr_[rax], mov_rbp_rax, mov_edi_r12d, call_0xffffffffffff5@@ 30@@ b, mov_r12d_0xffffffff, mov_dword_ptr_[rbp@@ ]_ebx, jmp_0xffffffffffffff9@@ c
endbr64, push_r14, push_r13, push_r12, push_rbp, push_rbx, test_rdi_rdi, je_0xd6, cmp_byte_ptr_[rdi]_0, je_0xcd, mov_r14d_esi, call_0xffffffffffff5@@ 6cf, mov_r13_rax, test_rax_rax, je_0xc1, movzx_eax_byte_ptr_[rax], mov_rbp_r13, cmp_al_0x2f, jne_0xb, movzx_eax_byte_ptr_[r@@ 13+1], lea_rbp_[r@@ 13+1], test_al_al, jne_0x1f, jmp_0x@@ 97, mov_byte_ptr_[rax]_0, cmp_byte_ptr_[rbp]_0, jne_0x61, cmp_byte_ptr_[rbx+@@ 1]_0, mov_byte_ptr_[rbx]@@ _0x2f, lea_rbp_[r@@ bx+1], je_0x7c, mov_esi_0x2f, mov_rdi_rbp, call_0xffffffffffff5@@ 17@@ 2, mov_rbx_rax, test_rax_rax, jne_0xffffffffffffffd7, cmp_byte_ptr_[rbp]_0, je_0x61, mov_esi_r14d, mov_rdi_r13, call_0xffffffffffff4@@ fa@@ 9, mov_r12d_eax, test_eax_eax, je_0x4f, call_0xffffffffffff4@@ ed@@ d, cmp_dword_ptr_[rax]@@ _0x11, je_0x45, mov_rdi_r13, call_0xffffffffffff4e@@ 80, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, ret, mov_esi_r14d, mov_rdi_r13, call_0xffffffffffff4@@ f7@@ 2, mov_r12d_eax, test_eax_eax, je_0xffffffffffffff@@ 91, call_0xffffffffffff4@@ ea@@ 6, cmp_dword_ptr_[rax]@@ _0x11, je_0xffffffffffffff@@ 87, jmp_0xffffffffffffffc9, xor_r12d_r12d, jmp_0xffffffffffffffba, mov_r12d@@ _0xffffffea, jmp_0xffffffffffffffba, mov_r12d@@ _0xfffffff4, jmp_0xffffffffffffffb@@ 2
endbr64, test_rdi_rdi, je_0x29, sub_rsp_8, mov_esi_0x2f, call_0xffffffffffff5@@ 11@@ e, test_rax_rax, je_8, mov_byte_ptr_[rax]_0, inc_rax, add_rsp_8, ret, xor_eax_eax, ret
push_r14, mov_r14_rdx, push_r13, mov_r13_rsi, push_r12, push_rbp, push_rbx, mov_rbx_rdi, call_0xffffffffffff4e@@ 1f, mov_dword_ptr_[rax]_0, test_rbx_rbx, je_0x61, movsx@@ _r12@@ _byte_ptr_[rbx], test_r12b_r12b, je_0x58, mov_rbp_rax, call_0xffffffffffff5@@ 5d@@ 3, mov_rax_qword_ptr_[rax], test_byte_ptr_[rax+r@@ 12*@@ 2+1]_8, je_0x45, mov_edx_0xa, mov_rsi_r13, mov_rdi_rbx, call_0xffffffffffff5@@ 50@@ 8, mov_dword_ptr_[r14]_eax, mov_eax_dword_ptr_[rbp], test_eax_eax, jne_0x1b, cmp_qword_ptr_[r@@ 13@@ ]_rbx, je_0x25, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, pop_rbx, pop_rbp, pop_r12, pop_r13, neg_eax, pop_r14, ret, mov_eax_0xffffffea, jmp_0xffffffffffffffd@@ 8
endbr64, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdx, push_rbx, movsxd_rbx@@ _edi, mov_rdi_rbx, call_0xffffffffffff5@@ 38@@ c, test_rax_rax, je_0x28, test_r12_r12, je_0x12, lea_rdx_[rbx+0x@@ 3f], shr_rdx@@ _6, shl_rdx_3, mov_qword_ptr_[r12@@ ]_rdx, test_rbp_rbp, je_0xe, add_rbx@@ _0x3f, and@@ _rbx@@ _0xffffffffffffff@@ c0, mov_qword_ptr_[rbp]_rbx, pop_rbx, pop_rbp, pop_r12, ret
endbr64, push_r13, xor_edx_edx, mov_edi@@ _0x800, push_r12, push_rbp, push_rbx, sub_rsp_0x18, mov_rbx_rsp, mov_rsi_rbx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xffffffffffffff@@ 75, test_rax_rax, je_0x9d, mov_rbp_rax, mov_r12d@@ _0x800, jmp_0x26, mov_rdi_rbp, add@@ _r12d_r12d, call_0xffffffffffffff@@ a2, xor_edx_edx, mov_rsi_rbx, mov_edi_r12d, call_0xffffffffffffff@@ 45, mov_rbp_rax, test_rax_rax, je_0x6a, mov_rdx_qword_ptr_[rsp], xor_esi_esi, mov_rdi_rbp, call_0xffffffffffff5@@ 00@@ f, mov_rdx_qword_ptr_[rsp], mov_rcx_rbp, xor_esi_esi, mov_edi_0x@@ cc, xor_eax_eax, call_0xffffffffffff5@@ 17@@ a, mov_r13d_eax, test_eax_eax, jns@@ _0x15, call_0xffffffffffff4c@@ ae, cmp_dword_ptr_[rax]@@ _0x16, jne_0xb, cmp_r12d@@ _0xffff@@ f, jle_0xffffffffffffff@@ a5, mov_rdi_rbp, call_0xffffffffffffff@@ 48, lea_eax_[r@@ 13*8], mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x14, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffe0, call_0xffffffffffff4e@@ 9@@ 9
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12_rcx, push_rbp, push_rbx, sub_rsp_0x18, shl_r12@@ _3, mov_qword_ptr_[rsp+8]_rdi, je_0x1@@ 93, mov_r14_rdx, mov_r15_rsi, mov_rbp_rcx, mov_r13_rdi, xor_edx_edx, xor_r9d_r9d, jmp_0x17, mov_r9_rbx, cmp_r12@@ _r9, jbe_0x@@ f2, mov_rax_r9, shr_rax@@ _3, lea_rbx_[r@@ 9+1], cmp_rax_rbp, jae_0xffffffffffffff@@ e6, mov_rax_r9, shr_rax@@ _6, mov_rax_qword_ptr_[r@@ 14@@ +rax*8], bt_rax@@ _r9, jae_0xffffffffffffff@@ d5, cmp_r12_rbx, jbe_0x@@ e8, mov_rax_rbx, shr_rax@@ _3, cmp_rbp_rax, jbe_0x@@ d8, mov_rax_rbx, shr_rax@@ _6, mov_rax_qword_ptr_[r@@ 14@@ +rax*8], bt_rax@@ _rbx, jae_0x@@ c3, mov_rsi_r9, lea_rcx_[r@@ 9@@ +2], not@@ _rsi, jmp_0x2c, mov_rax_rcx, shr_rax@@ _3, cmp_rax_rbp, jae_0x@@ 20, mov_rax_rcx, shr_rax@@ _6, mov_rax_qword_ptr_[r@@ 14@@ +rax*8], shr_rax_cl, inc_rcx, test_al_1, je_0xb, lea_rdx_[r@@ si+rcx], cmp_r12@@ _rcx, jne_0xffffffffffffffd8, cmp_rdx_1, je_0xc2, lea_rbx@@ _[rdx+r@@ 9], sub_rsp_8, push_rbx, lea_r8_[rip+0x@@ 2c@@ 57], mov_rcx_-1, mov_edx_1, mov_rsi_r15, mov_rdi_r13, xor_eax_eax, call_0xffffffffffff4a@@ f8, pop_rdx, pop_rcx, test_eax_eax, js_0x7@@ 6, cdqe, cmp_rax_r15, jae_0x@@ 6f, lea_r9_[r@@ bx+1], add_r13_rax, sub_r15@@ _rax, mov_edx_1, cmp_r12@@ _r9, ja_0xffffffffffffff@@ 20, mov_rdi_r13, sub_rdi_rdx, mov_byte_ptr_[rdi]_0, mov_rax_qword_ptr_[rsp+8], add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_r8_[rip+0x@@ 2b@@ e7], mov_rcx_-1, mov_edx_1, mov_rsi_r15, mov_rdi_r13, xor_eax_eax, mov_qword_ptr_[rsp]_r9, call_0xffffffffffff4a@@ 89, mov_r9_qword_ptr_[rsp], mov_rbx_r9, test_eax_eax, jns_0xffffffffffffff@@ 8e, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret, sub_rsp_8, push_rbx, lea_r8_[rip+0x@@ 2b@@ 96], jmp_0xffffffffffffff48, mov_rdi_qword_ptr_[rsp+8], jmp_0xffffffffffffff8@@ 8
endbr64, push_r12, lea_r9d_[r@@ cx@@ *@@ 8@@ -4], push_rbp, push_rbx, test_r9d_r9d, js_0x1@@ 3d, test_rsi_rsi, je_0x1@@ 34, mov_r10@@ _rcx, movsxd_r8@@ _r9d, mov_rbx_rdi, xor_r11d_r11d, jmp_0x5@@ 6, shr_rcx@@ _6, mov_rcx_qword_ptr_[r@@ dx@@ +rcx*8], lea_ebp_[r@@ 9@@ +3], bt@@ _rcx@@ _rbp, jae_0x@@ db, or_eax@@ _8, test_r11_r11, cmove@@ _r11@@ _rbx, movsx_ecx@@ _al, cmp_al_9, jle_0x@@ d4, lea_eax_[r@@ cx+0x@@ 57], mov_byte_ptr_[rbx]_al, lea_rcx_[r@@ bx+1], sub_r9d@@ _4, js_0x@@ d8, mov_rax_rcx, sub_rax_rdi, sub_r8@@ _4, cmp_rax_rsi, je_0xc5, mov_rbx_rcx, mov_rcx_r8, shr_rcx@@ _3, xor_eax_eax, cmp_rcx@@ _r10, jae_0x@@ 16, mov_rax_r8, shr_rax@@ _6, mov_rax_qword_ptr_[r@@ dx+rax*8], mov_ecx_r9d, shr_rax_cl, and_eax_1, lea_rcx_[r@@ 8+1], mov_rbp_rcx, shr@@ _rbp@@ _3, cmp_rbp@@ _r10, jae_0x@@ 1f, shr_rcx@@ _6, mov_rbp_rcx, mov_rbp_qword_ptr_[r@@ dx+r@@ bp*8], lea_ecx_[r@@ 9+1], shr@@ _rbp@@ _cl, mov_ecx_eax, or_ecx@@ _2, and_ebp@@ _1, cmovne_eax@@ _ecx, lea_rcx_[r@@ 8@@ +2], mov_rbp_rcx, shr@@ _rbp@@ _3, cmp_rbp@@ _r10, jae_0x@@ 1f, shr_rcx@@ _6, mov_rbp_rcx, mov_rbp_qword_ptr_[r@@ dx+r@@ bp*8], lea_ecx_[r@@ 9@@ +2], shr@@ _rbp@@ _cl, mov_ecx_eax, or_ecx@@ _4, and_ebp@@ _1, cmovne_eax@@ _ecx, lea_rcx_[r@@ 8@@ +3], test_r11_r11, mov_rbp_rcx, sete_r12b, shr@@ _rbp@@ _3, cmp_rbp@@ _r10, jb_0xffffffffffffff@@ 1b, movsx_ecx@@ _al, test_al_al, je_9, test_r12b_r12b, cmovne@@ _r11@@ _rbx, lea_eax_[r@@ cx+0x30], mov_byte_ptr_[rbx]_al, lea_rcx_[r@@ bx+1], sub_r9d@@ _4, jns_0xffffffffffffff@@ 38, mov_byte_ptr_[rcx@@ ]_0, test_r11_r11, je_0x11, pop_rbx, pop_rbp, mov_rax@@ _r11, pop_r12, ret, mov_byte_ptr_[rdi]_0, lea_rbx_[r@@ di-1], mov_r11@@ _rbx, pop_rbx, pop_rbp, mov_rax@@ _r11, pop_r12, ret
endbr64, push_r15, mov_r15_rdx, push_r14, mov_r14_rsi, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, call_0xffffffffffff4b@@ 15, movsxd_rdx_eax, lea_r13_[r@@ bx@@ +rdx@@ -1], cmp_eax_1, jle_0x@@ f, lea_rax_[r@@ bx+2], cmp_word_ptr_[r@@ bx]@@ _0x7@@ 8@@ 30, cmove_rbx_rax, mov_rdx_r15, xor_esi_esi, mov_rdi_r14, call_0xffffffffffff4c@@ 2e, xor_ebp_ebp, cmp_rbx_r13, ja@@ _0xf@@ 4, movsx@@ _r12@@ _byte_ptr_[r@@ 13], cmp_r12b@@ _0x2c, jne_0xa, movsx@@ _r12@@ _byte_ptr_[r@@ 13-1], dec@@ _r13, movsx_eax@@ _r12b, sub_eax_0x30, cmp_eax_9, jbe_0x@@ 1d, call_0xffffffffffff50@@ 69, mov_rax_qword_ptr_[rax], mov_eax_dword_ptr_[rax+r@@ 12*4], lea_ecx_[rax@@ -0x@@ 61], cmp_ecx@@ _5, ja_0x@@ cf, sub_eax@@ _0x57, mov_esi_eax, test_al_1, je_0x23, mov_rax_rbp, shr_rax@@ _3, cmp_rax_r15, jae_0x@@ 17, mov_rax_rbp, mov_edx_1, mov_ecx_ebp, shr_rax@@ _6, shl_rdx_cl, or_qword_ptr_[r@@ 14@@ +rax*@@ 8]_rdx, test_sil@@ _2, je_0x24, lea_eax_[r@@ bp+1], mov_rdi_rax, shr_rdi@@ _3, mov_rcx_rax, cmp_rdi_r15, jae_0x@@ 12, mov_edx_1, shr_rax@@ _6, shl_rdx_cl, or_qword_ptr_[r@@ 14@@ +rax*@@ 8]_rdx, test_sil@@ _4, je_0x24, lea_eax_[r@@ bp+2], mov_rdi_rax, shr_rdi@@ _3, mov_rcx_rax, cmp_rdi_r15, jae_0x@@ 12, mov_edx_1, shr_rax@@ _6, shl_rdx_cl, or_qword_ptr_[r@@ 14@@ +rax*@@ 8]_rdx, and_esi@@ _8, je_0x24, lea_eax_[r@@ bp+@@ 3], mov_rsi_rax, shr_rsi@@ _3, mov_rcx_rax, cmp_rsi@@ _r15, jae_0x@@ 12, mov_edx_1, shr_rax@@ _6, shl_rdx_cl, or_qword_ptr_[r@@ 14@@ +rax*@@ 8]_rdx, dec@@ _r13, add_rbp@@ _4, cmp_rbx_r13, jbe_0xffffffffffffff@@ 1e, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_0xffffffff, pop_r15, ret
endbr64, push_r15, mov_r15d_ecx, push_r14, mov_r14d_1, push_r13, mov_r13_rsi, xor_esi_esi, push_r12, mov_r12_rdi, mov_rdi_r13, push_rbp, mov_rbp_rdx, push_rbx, lea_rbx_[rdx@@ *8], sub_rsp_0x58, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x40]_0, call_0xffffffffffff4a@@ b6, lea_rax_[rsp+0x@@ 34], mov_qword_ptr_[rsp+0x28]_rax, lea_rax_[rsp+0x40], mov_qword_ptr_[rsp+0x20]_rax, test_r12_r12, je_0xed, mov_esi_0x2c, mov_rdi_r12, call_0xffffffffffff4@@ 9b@@ c, cmp_rax_1, mov_rdx_qword_ptr_[rsp+0x28], mov_rsi_qword_ptr_[rsp+0x20], sbb@@ _rax@@ _-1, mov_rdi_r12, mov_qword_ptr_[rsp+0x18]_rax, call_0xfffffffffffff8f@@ d, test_eax_eax, jne_0x12@@ d, mov_ecx_dword_ptr_[rsp+0x@@ 34], mov_rdi_qword_ptr_[rsp+0x40], mov_dword_ptr_[rsp+0x3@@ 8]_ecx, mov_dword_ptr_[rsp+0x@@ 3c]_1, test_rdi_rdi, je_0xe8, mov_esi_0x2d, mov_dword_ptr_[rsp+0x1@@ 4]_ecx, mov_qword_ptr_[rsp+8]_rdi, call_0xffffffffffff4@@ 9@@ 64, test_rax_rax, mov_ecx_dword_ptr_[rsp+0x14], je_0xc8, mov_rdi_qword_ptr_[rsp+8], mov_esi_0x2c, lea_r12@@ _[rax+1], call_0xffffffffffff4@@ 94@@ 4, mov_r8_rax, test_rax_rax, je_0x1@@ 53, mov_ecx_dword_ptr_[rsp+0x14], inc@@ _r8, mov_edx_ecx, mov_esi_1, cmp_r8@@ _r12, ja_0x@@ c0, mov_eax_ecx, test_r15d_r15d, je_7, cmp_rbx_rax, jbe_0x@@ 4e, mov_rdi_rax, shr_rdi@@ _3, cmp_rdi_rbp, jae_0x@@ 11, mov_rdi_r14, shr_rax@@ _6, shl_rdi@@ _cl, or_qword_ptr_[r@@ 13@@ +rax*@@ 8]_rdi, add_ecx@@ _esi, cmp_ecx_edx, jbe_0xffffffffffffff@@ d5, mov_r12_qword_ptr_[rsp+0x18], test_r12_r12, jne_0xffffffffffffff@@ 1f, mov_rax_qword_ptr_[rsp+0x40], test_rax_rax, je_0x1a, cmp_byte_ptr_[rax]_0, setne_al, movzx_eax_al, jmp_0xf, mov_eax_2, mov_rbx_qword_ptr_[rsp+0x48], xor_rbx_qword_ptr_fs:[0x28], jne_0xc2, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_edx_ecx, mov_esi_1, jmp_0xffffffffffffff71, mov_rsi_qword_ptr_[rsp+0x20], lea_rdx_[rsp+0x@@ 3c], call_0xfffffffffffff7d@@ a, test_eax_eax, jne_0xa, mov_eax_dword_ptr_[rsp+0x3c], test_eax_eax, jne_0x6b, mov_eax_1, jmp_0xffffffffffffffa9, mov_byte_ptr_[rsp+0x1@@ 4]_0, mov_rsi_qword_ptr_[rsp+0x20], lea_rdx_[rsp+0x@@ 38], mov_rdi_r12, mov_qword_ptr_[rsp+8]_r8, call_0xfffffffffffff7a@@ b, test_eax_eax, mov_r8_qword_ptr_[rsp+8], jne_0xffffffffffffffd6, mov_rdi_qword_ptr_[rsp+0x40], test_rdi_rdi, je_0x35, cmp_byte_ptr_[rdi]_0, mov_qword_ptr_[rsp+8]_r8, je_0x2b, mov_esi_0x3a, call_0xffffffffffff48@@ 24, test_rax_rax, je_0x1c, mov_r8_qword_ptr_[rsp+8], lea_rdi_[rax+1], cmp_rdi@@ _r8, jb_0xffffffffffffff@@ 8a, cmp_byte_ptr_[rsp+0x1@@ 4]_0, jne_0xffffffffffffff@@ 83, mov_ecx_dword_ptr_[rsp+0x@@ 34], mov_edx_dword_ptr_[rsp+0x38], cmp_ecx_edx, ja_0xffffffffffffff@@ 8d, mov_esi_dword_ptr_[rsp+0x@@ 3c], jmp_0xfffffffffffffed8, call_0xffffffffffff47@@ ab, mov_byte_ptr_[rsp+0x1@@ 4]_1, jmp_0xffffffffffffff8@@ 4
endbr64, push_r15, lea_r15_[rip+0x@@ 6a@@ d3], push_r14, mov_r14_rdx, push_r13, mov_r13_rsi, push_r12, mov_r12d_edi, push_rbp, lea_rbp_[rip+0x@@ 6a@@ c4], push_rbx, sub_rbp@@ _r15, sub_rsp_8, call_0xffffffffffff3c@@ 24, sar@@ _rbp@@ _3, je_0x21, xor_ebx_ebx, mov_rdx_r14, mov_rsi_r13, mov_edi_r12d, call_qword_ptr_[r@@ 15+r@@ bx*8], add_rbx_1, cmp_rbp_rbx, jne_0xffffffffffffffec, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
endbr64, ret
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 12@@ f@@ 1d], endbr64, mov_rdx_qword_ptr_[rip+0x@@ 7b@@ cd], xor_esi_esi, jmp_0xffffffffffff@@ 4c@@ 0@@ 3
endbr64, sub_rsp_8, add_rsp_8, ret
