endbr64, sub_rsp_8, mov_rax_qword_ptr_[rip+0x28@@ f7@@ 1], test_rax_rax, je_4, call_rax, add_rsp_8, ret
push_qword_ptr_[r@@ ip+0x2@@ 8b@@ 82], b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8b@@ 83@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 87@@ c5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 87@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 80@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 3c@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 3c@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 3b@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 3b@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 3a@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 3a@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 83@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 83@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 38@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 37@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 36@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 83@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 83@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 34@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 34@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 83@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 83@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 83@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 32@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 83@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 83@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 30@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 30@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 82@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 2f@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 2e@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 2e@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 82@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 82d@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 2c@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 2c@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 2b@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 2b@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 2a@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 82@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 82@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 82@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 28@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 827@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 827@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 26@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 82@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 82@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 24@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 24@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 82@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 82@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 22@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 22@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 82@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 82@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 20@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 20@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 1fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 1f@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 1e@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 1e@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 1c@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 1c@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 1b@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 1b@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 1a@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 1a@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 19d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 19@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 18d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 18@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 17@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 17@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 16@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 16@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 15@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 15@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 14@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 14@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 13@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 13@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 12@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 12@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 11d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 115@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 10@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 10@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ f5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ e5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ d5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ cd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ c5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ bd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ b5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ ad@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ a5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ 85@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ 7d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ 75@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ 6d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ 65@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ 1d@@ ]
u@@ d@@ 2
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x48, mov_dword_ptr_[rsp+0x1c]@@ _edi, mov_qword_ptr_[rsp+0x10]_rsi, lea_r13_[rsp+0x@@ 28], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x28]_0, call_0xfffffffffffffb@@ f7, lea_rsi_[rip+0x1@@ ff@@ ac], mov_edi_6, call_0xfffffffffffffe@@ f6, lea_rdi_[rip+0x@@ 1ff@@ 9b], call_0xfffffffffffffe@@ 3a, mov_rbp_rax, mov_rdi_rax, xor_edx_edx, lea_rsi_[rip+0x28@@ 0@@ 56], call_0xfffffffffffff9c@@ 6, lea_rdx_[rsp+0x10], lea_rsi_[r@@ sp+0x1c], mov_rcx_r13, mov_rdi_rbp, call_0xfffffffffffffb@@ 91, mov_rdi_rbp, call_0xfffffffffffff86@@ 9, mov_rax_qword_ptr_[rsp+0x28], test_rax_rax, jne_0x2@@ 9c, cmp_dword_ptr_[rip+0x2@@ 83@@ ff@@ ]_0, mov_dword_ptr_[rip+0x2@@ 84@@ 55@@ ]@@ _0xffffff@@ 5c, je_0xc, mov_dword_ptr_[rip+0x2@@ 8@@ 44@@ 9]@@ _0xffffff@@ dc, cmp_dword_ptr_[rip+0x2@@ 8@@ 3d@@ e]_0, jne_0x2@@ 66, mov_edi_0x18, call_0xfffffffffffff9b@@ 7, xor_esi_esi, lea_rdi_[rip+0x@@ 50@@ 9], call_0xfffffffffffffb@@ 69, mov_r14d@@ _dword_ptr_[rip+0x2@@ 8@@ 3b@@ 5], test_r14d_r14d, jne_0x30@@ b, cmp_qword_ptr_[rip+0x2@@ 8@@ 3c@@ c]_0, je_0x3@@ 39, mov_rdi_qword_ptr_[rip+0x2@@ 8@@ 3c@@ 7], xor_ecx_ecx, test_rdi_rdi, je_9, call_0xfffffffffffff99@@ 8, mov_ecx_eax, xor_eax_eax, lea_rdx_[rip+0x1c@@ fd@@ 1], mov_esi_0x80, xor_edi_edi, call_0xfffffffffffffe@@ 71, mov_rax_qword_ptr_[rip+0x2@@ 83@@ 9d], test_rax_rax, je_0x28, mov_rdi_qword_ptr_[rax], test_rdi_rdi, je_0x20, mov_ebx_8, call_0xfffffffffffff75@@ 3, mov_rax_qword_ptr_[rip+0x28@@ 37@@ f], mov_rdi_qword_ptr_[rax+r@@ bx], add_rbx_8, test_rdi_rdi, jne_0xffffffffffffffe9, call_0x86@@ 9a, mov_rsi_qword_ptr_[rip+0x2@@ 8@@ 36@@ 6], mov_rdi_rax, mov_rbp_rax, call_0x86@@ e8, mov_rax_qword_ptr_[rip+0x28@@ 34@@ c], mov_rdi_rbp, mov_rsi_qword_ptr_[rax], mov_rdx_r13, call_0xb@@ 30@@ 3, mov_rbp_rax, test_rax_rax, je_0x2@@ 36, xor_edi_edi, xor_eax_eax, lea_rdx_[rip+0x1c@@ f@@ 88], mov_esi_0x80, call_0xfffffffffffffd@@ f2, xor_edi_edi, xor_eax_eax, lea_rdx_[rip+0x1c@@ f8@@ 2], mov_esi_0x80, call_0xfffffffffffffdd@@ d, cmp_qword_ptr_[rip+0x2@@ 8@@ 2e@@ 8]_0, je_0x27, mov_rdi_qword_ptr_[rbp+0x10], test_rdi_rdi, je_7, call_0xfffffffffffff67@@ 5, mov_rsi_qword_ptr_[rip+0x2@@ 82d@@ 1], lea_rdi_[rip+0x1c@@ f6@@ 3], call_0xfffffffffffffb@@ 92, mov_qword_ptr_[rbp+0x10]_rax, mov_rcx_qword_ptr_[rbp], lea_rdx_[rip+0x1c@@ f5@@ 1], mov_esi_0x80, xor_edi_edi, xor_eax_eax, call_0xfffffffffffffd@@ 95, mov_rdi_rbp, call_0x7d@@ d, mov_r12_rax, test_rax_rax, je_0x1@@ 95, mov_rsi_r13, mov_rdi_rax, call_0xfffffffffffff8@@ 36, test_eax_eax, je_0x1@@ 5e, mov_r15_qword_ptr_[r@@ ip+0x2@@ 8@@ 28@@ a], mov_qword_ptr_[rsp+0x30]_0, test_r15_r15, je_0x1@@ d9, mov_rdi_r15, call_0xfffffffffffff7@@ 2d, mov_rdi_rax, mov_r13_rax, call_0xfffffffffffffc@@ 92, mov_r15_rax, mov_rsi_r13, lea_rdi_[rip+0x1c@@ ef@@ 8], xor_eax_eax, call_0xfffffffffffff8f@@ e, mov_rbp_rax, mov_rdi_rax, call_0xfffffffffffffc@@ 73, lea_rsi_[rip+0x1c@@ ee@@ 6], mov_rdi_rbp, mov_qword_ptr_[rsp+8]_rax, call_0xfffffffffffffc@@ 6f, mov_rbx_rax, test_rax_rax, je_0x2@@ 33, mov_rdx_qword_ptr_[r12+8], mov_rdi_qword_ptr_[r12], mov_rcx_rbx, mov_esi_1, call_0xfffffffffffffc@@ 6d, cmp_rax_qword_ptr_[r@@ 12+8], jb_0x1@@ ec, cmp_qword_ptr_[rip+0x2@@ 8@@ 1fd@@ ]_0, je_0xa, mov_rdi_rbx, call_0xfffffffffffffb@@ 90, test_rbp_rbp, je_0x2d, push_rax, xor_ecx_ecx, mov_edx_1, lea_rbx_[rsp+0x@@ 38], push_rbx, xor_r9d_r9d, xor_r8d_r8d, mov_rdi_qword_ptr_[rsp+0x18], mov_rsi_r15, call_0xfffffffffffff85@@ a, pop_rdx, pop_rcx, test_eax_eax, je_0x1@@ 63, mov_rdi_r13, call_0xfffffffffffff54@@ 8, mov_rdi_rbp, call_0xfffffffffffff54@@ 0, mov_rdi_r12, call_0xfffffffffffff70@@ 8, lea_rdx_[rip+0x1c@@ e6@@ 7], mov_esi_0x80, xor_edi_edi, xor_eax_eax, call_0xfffffffffffffc@@ 73, jmp_0x37, or_dword_ptr_[rip+0x2@@ 8@@ 1d@@ 5@@ ]_0x20, jmp_0xfffffffffffffd@@ 99, mov_rdx_qword_ptr_[rax+8], mov_rdi_qword_ptr_[rip+0x2@@ 8@@ 14@@ 5], lea_rsi_[rip+0x1c@@ d6@@ 2], xor_eax_eax, call_0xfffffffffffff84@@ c, mov_rdi_qword_ptr_[rsp+0x28], mov_r14d_1, call_0xfffffffffffffb@@ 5c, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ e6, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_eax_r14d, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[rsp+0x28], mov_rcx_qword_ptr_[rbp], mov_r8_qword_ptr_[rax+8], lea_rdx_[rip+0x1c@@ ec@@ 5], mov_esi_4, xor_edi_edi, xor_eax_eax, call_0xfffffffffffffb@@ f4, jmp@@ _0, mov_rcx_qword_ptr_[rbp], lea_rdx_[rip+0x1c@@ e7@@ a], mov_esi_4, xor_edi_edi, xor_eax_eax, call_0xfffffffffffffb@@ d9, jmp@@ _0, mov_rax_qword_ptr_[rsp+0x28], mov_rdi_qword_ptr_[rip+0x2@@ 80@@ b6], mov_rcx_qword_ptr_[rax+8], mov_rax_qword_ptr_[rip+0x2@@ 80@@ eb], lea_rsi_[rip+0x1c@@ d@@ 2a], mov_rdx_qword_ptr_[rax], xor_eax_eax, call_0xfffffffffffff7a@@ f, mov_r14d_1, jmp_0xffffffffffffff6d, xor_ecx_ecx, mov_edx_0x40, mov_esi_1, lea_rdi_[rip+0x1c@@ cb@@ d], xor_eax_eax, call_0xfffffffffffff6a@@ a, xor_r14d_r14d, jmp_0xffffffffffffff4b, mov_qword_ptr_[rsp+8]_0, mov_rbx_qword_ptr_[rip+0x2@@ 80@@ 65], xor_ebp_ebp, xor_r13d_r13d, jmp_0xfffffffffffffe@@ 6a, mov_rdi_qword_ptr_[rip+0x2@@ 80@@ 4c], lea_rsi_[rip+0x1c@@ c9@@ e], xor_eax_eax, call_0xfffffffffffff75@@ 3, mov_r14d_1, jmp_0xffffffffffffff11, call_0xfffffffffffff94@@ 3, mov_rax_qword_ptr_[rsp+0x30], mov_rdi_qword_ptr_[rip+0x2@@ 80@@ 22], mov_r8_qword_ptr_[rax+8], mov_rcx_r13, mov_rdx_rbp, lea_rsi_[rip+0x1c@@ e4@@ 1], xor_eax_eax, call_0xfffffffffffff7@@ 1f, mov_rdi_rbx, call_0xfffffffffffff50@@ 7, mov_rdi_r13, call_0xfffffffffffff3b@@ f, mov_rdi_rbp, call_0xfffffffffffff3b@@ 7, mov_r14d_1, jmp_0xfffffffffffffe@@ c5, call_0xfffffffffffff8b@@ 7, mov_edi_dword_ptr_[rax], call_0xfffffffffffff7b@@ 0, mov_rdi_qword_ptr_[rip+0x2@@ 7@@ fd@@ 4], mov_rdx_rax, lea_rsi_[rip+0x1c@@ dc@@ a], xor_eax_eax, call_0xfffffffffffff6d@@ 8, jmp_0xffffffffffffffc1, call_0xfffffffffffff8@@ 91, mov_edi_dword_ptr_[rax], call_0xfffffffffffff9a@@ a, mov_rdi_qword_ptr_[rip+0x2@@ 7@@ fa@@ e], mov_rcx_rax, mov_rdx_rbp, lea_rsi_[rip+0x1c@@ c8@@ 3], xor_eax_eax, call_0xfffffffffffff6a@@ f, jmp_0xffffffffffffff9@@ 8
endbr64, xor_ebp_ebp, mov_r9_rdx, pop_rsi, mov_rdx_rsp, and_rsp_0xfffffffffffffff0, push_rax, push_rsp, lea_r8_[rip+0x@@ 1c@@ 77@@ 6], lea_rcx_[rip+0x@@ 1c@@ 6@@ ff], lea_rdi_[rip-0x@@ 5@@ 18], call_qword_ptr_[rip+0x2@@ 7b@@ 12], hlt
lea_rdi_[rip+0x27@@ f5@@ 9], lea_rax_[rip+0x27@@ f5@@ 2], cmp_rax_rdi, je_0x17, mov_rax_qword_ptr_[rip+0x2@@ 7a@@ fe], test_rax_rax, je_0xb, jmp_rax, ret
lea_rdi_[rip+0x27@@ f2@@ 9], lea_rsi_[rip+0x27@@ f2@@ 2], sub_rsi_rdi, mov_rax_rsi, shr_rsi@@ _0x3f, sar_rax_3, add_rsi_rax, sar_rsi_1, je_0x16, mov_rax_qword_ptr_[rip+0x2@@ 7a@@ c5], test_rax_rax, je_0xa, jmp_rax, ret
endbr64, cmp_byte_ptr_[rip+0x2@@ 7e@@ f5@@ ]_0, jne_0x2d, push_rbp, cmp_qword_ptr_[rip+0x2@@ 7@@ aa@@ 2]_0, mov_rbp_rsp, je_0xe, mov_rdi_qword_ptr_[rip+0x2@@ 7a@@ f6], call_0xfffffffffffff29@@ e, call_0xffffffffffffff@@ 69, mov_byte_ptr_[rip+0x2@@ 7@@ ec@@ d]_1, pop_rbp, ret, ret
endbr64, jmp_0xffffffffffffff7@@ c
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 8@@ 26@@ 5], endbr64, test@@ _dword_ptr_[rip+0x2@@ 7f@@ 16@@ ]_esi, jne_6, ret, jmp_0xfffffffffffff@@ 56@@ 0
endbr64, mov_eax_dword_ptr_[rdi+0x18], sub_eax_dword_ptr_[r@@ si+0x18], ret
endbr64, push_r12, mov_r12_rsi, push_rbx, mov_rbx_rdx, sub_rsp_8, call_0xfffffffffffff@@ 34@@ f, mov_rdi_qword_ptr_[rbx+0x40], add_rsp_8, pop_rbx, mov_rdx_r12, mov_rsi_rax, pop_r12, jmp_0xfffffffffffff@@ 74@@ 9
endbr64, push_r12, push_rbp, mov_rbp_rdi, mov_rdi_rsi, push_rbx, mov_rbx_rdx, call_0xfffffffffffff3@@ 1f, mov_rdi_rbp, mov_r12_rax, call_0xfffffffffffff3@@ 14, mov_rdi_qword_ptr_[rbx+0x38], pop_rbx, pop_rbp, mov_rdx_r12, mov_rsi_rax, pop_r12, jmp_0xfffffffffffff7@@ 1@@ 1
endbr64, push_r12, mov_r12_rsi, push_rbp, push_rbx, mov_rbx_rdx, mov_rdx_qword_ptr_[rdx+0x@@ 20], mov_ebp_dword_ptr_[r@@ dx], mov_rax_rbp, add_eax@@ _0xc, add_rbp@@ _qword_ptr_[r@@ bx+8], mov_dword_ptr_[rdx]_eax, mov_rax_qword_ptr_[rbx+0x10], mov_eax_dword_ptr_[rax+0x18], mov_dword_ptr_[rbp]_eax, mov_rcx_qword_ptr_[r@@ bx+0x28], mov_rdx_qword_ptr_[rbx+8], mov_rsi_qword_ptr_[rbx+0x18], call_0x27@@ 9a, mov_dword_ptr_[rbp+@@ 4]_eax, mov_rdi_r12, mov_rcx_qword_ptr_[r@@ bx+0x28], mov_rdx_qword_ptr_[rbx+8], mov_rsi_qword_ptr_[rbx+0x18], call_0x2@@ 78@@ 3, mov_dword_ptr_[rbp+@@ 8]_eax, inc_dword_ptr_[r@@ bx], pop_rbx, pop_rbp, pop_r12, ret
endbr64, push_r15, mov_r15_rdi, mov_edi_0x4@@ 8, push_r14, mov_r14_rsi, push_r13, mov_r13_rcx, push_r12, push_rbp, mov_rbp_rdx, call_0xfffffffffffff8c@@ 2, mov_rdi_r15, mov_r12_rax, call_0xfffffffffffff26@@ 7, mov_rdi_r14, mov_qword_ptr_[r12]_rax, call_0xfffffffffffff25@@ b, mov_qword_ptr_[r12+8]_rax, test_rbp_rbp, je_0x4e, mov_rdi_rbp, call_0xfffffffffffff24@@ 9, mov_qword_ptr_[r12+0x10]_rax, mov_rdi_r13, call_0xfffffffffffff@@ 23@@ c, pop_rbp, mov_qword_ptr_[r12+0x1@@ 8]_rax, mov_qword_ptr_[r12+0x@@ 20]_0, mov_rax_r12, mov_qword_ptr_[r12+0x@@ 28]_0, mov_qword_ptr_[r12+0x@@ 30]_0, mov_qword_ptr_[r12+0x@@ 38]_0, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_qword_ptr_[r12+0x1@@ 0]_0, jmp_0xffffffffffffffb@@ 8
endbr64, push_r12, mov_r12_rdi, push_rbp, sub_rsp_8, mov_rdi_qword_ptr_[rdi], call_0xfffffffffffff0@@ af, mov_rbp_qword_ptr_[r@@ 12+0x28], test_rbp_rbp, je_0x19, mov_rdi_qword_ptr_[rbp], call_0x1@@ dc@@ c, mov_rbp_qword_ptr_[r@@ bp+8], test_rbp_rbp, jne_0xfffffffffffffff0, mov_rbp_qword_ptr_[r@@ 12+0x28], mov_rdi_rbp, call_0xfffffffffffff2@@ 16, mov_rdi_qword_ptr_[r12+0x30], call_0xfffffffffffff20@@ c, mov_rdi_qword_ptr_[r12+0x@@ 38], call_0xfffffffffffff@@ 102, mov_rdi_qword_ptr_[r12+0x@@ 40], call_0xfffffffffffff0@@ f8, add_rsp_8, pop_rbp, mov_rsi_r12, mov_edi_0x4@@ 8, pop_r12, jmp_0xfffffffffffff77@@ 4
endbr64, push_r14, mov_r14d_esi, push_r13, push_r12, mov_r12_rdi, mov_rdi_rdx, push_rbp, push_rbx, sub_rsp_0xd0, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0x100], mov_qword_ptr_[rsp+8]_rax, mov_rsi_rsp, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffff38@@ 1, lea_rdi_[rip+0x@@ 1f7@@ 46], mov_r13_rax, call_0xfffffffffffff@@ 19@@ 2, mov_rbp_rax, test_r14d_r14d, jne_0x@@ bc, cmp_qword_ptr_[r12+0x@@ 30]_0, je_0x11, lea_rsi_[rip+0x1c@@ a5@@ e], mov_rdi_rbp, call_0xfffffffffffff6@@ 9f, mov_rdi_qword_ptr_[r12+0x30], call_0xfffffffffffff42@@ 5, mov_rbx_rax, test_rax_rax, je_0x41, lea_r14_[rip+0x@@ 1c@@ f7@@ e], jmp_0x1d, mov_rsi_r14, mov_rdi_rbp, call_0xfffffffffffff67@@ 2, mov_rbx_qword_ptr_[rbx+0x10], test_rbx_rbx, je_0x1d, mov_rax_qword_ptr_[rbx], mov_rsi_qword_ptr_[rax+8], test_rsi_rsi, je_0xa, mov_rdi_rbp, call_0xfffffffffffff65@@ 5, cmp_qword_ptr_[rbx+0x10]_0, jne_0xffffffffffffffd3, cmp_qword_ptr_[r12+0x@@ 30]_0, je_0x11, lea_rsi_[rip+0x1c@@ 9f@@ 3], mov_rdi_rbp, call_0xfffffffffffff6@@ 37, mov_rax_qword_ptr_[r12], mov_rcx_qword_ptr_[rbp], mov_rdx_qword_ptr_[rax+8], mov_rsi_qword_ptr_[rax], mov_r8_r13, lea_rdi_[rip+0x1c@@ 9d@@ 9], xor_eax_eax, call_0xfffffffffffff0@@ 87, mov_rdi_rbp, mov_esi_1, call_0xfffffffffffff2@@ 1a, mov_edi_1, call_0xffffffffffffe@@ ff0, mov_rdi_rax, mov_edx_r14d, lea_rsi_[rip+0x1c@@ 9a@@ 5], xor_eax_eax, call_0xfffffffffffff5f@@ c, jmp_0xffffffffffffff3@@ 6
endbr64, push_r12, mov_r12_rdi, push_rbx, mov_rbx_rsi, sub_rsp_8, mov_rdi_qword_ptr_[rdi+0x30], call_0xfffffffffffff44@@ b, mov_qword_ptr_[r12+0x@@ 30]_rax, mov_rdx_r12, lea_rsi_[rip-0x@@ 37@@ 9], mov_rdi_qword_ptr_[rbx+0x38], call_0xfffffffffffff@@ 23@@ 3, mov_rdi_qword_ptr_[rbx+0x40], add_rsp_8, pop_rbx, mov_rdx_r12, lea_rsi_[rip-0x@@ 3c@@ 5], pop_r12, jmp_0xfffffffffffff@@ 21@@ 9
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0xb8, mov_rdi_qword_ptr_[rdi+0x@@ 28], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xa8]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x68]_0, mov_dword_ptr_[rsp+0x5@@ c]@@ _0x70, call_0xfffffffffffff0@@ f0, lea_rdi_[rip+0x@@ 1f@@ 5c@@ 5], mov_dword_ptr_[rsp+0x40]_eax, call_0xfffffffffffff0@@ 10, mov_rbx_qword_ptr_[r@@ bp+0x20], mov_r12_rax, test_rbx_rbx, jne_0x40, jmp_0x6@@ 3, mov_rax_qword_ptr_[r12+8], lea_rdx_[rax+1], cmp_rdx_qword_ptr_[r@@ 12+0x10], jae_0x@@ 64@@ 3, mov_rcx_qword_ptr_[r12], mov_qword_ptr_[r12@@ +8]_rdx, mov_byte_ptr_[rcx@@ +rax]@@ _0x7c, mov_rdx_qword_ptr_[r12], mov_rax_qword_ptr_[r12+8], mov_byte_ptr_[rdx+rax]_0, mov_rbx_qword_ptr_[rbx+8], test_rbx_rbx, je_0x27, mov_r13_qword_ptr_[r@@ bx], mov_rsi_qword_ptr_[rbp], mov_rdi_r13, call_0xffffffffffffe@@ dd@@ 7, test_eax_eax, je_0xffffffffffffffe6, mov_rsi_r13, mov_rdi_r12, call_0xfffffffffffff4d@@ 8, cmp_qword_ptr_[rbx+8]_0, jne_0xffffffffffffffa6, xor_esi_esi, mov_rdi_r12, call_0xfffffffffffff0@@ d7, cmp_byte_ptr_[rax]_0, mov_qword_ptr_[rsp+0x10]_rax, je_0x5@@ fc, movzx_eax_word_ptr_[rsp+0x@@ 40], mov_word_ptr_[rsp+0x@@ 46@@ ]_ax, lea_rax_[rsp+0x@@ 5c], mov_qword_ptr_[rsp+0x28]_rax, lea_rax_[rsp+0x@@ 64], mov_qword_ptr_[rsp+0x48]_rax, call_0x87@@ 6, mov_rsi_qword_ptr_[rip+0x2@@ 7@@ 5a@@ a], mov_rdi_qword_ptr_[rip+0x2@@ 75@@ 2b], call_0xfffffffffffff0@@ c3, mov_rsi_qword_ptr_[rip+0x2@@ 75@@ 97], mov_rdi_qword_ptr_[rip+0x2@@ 75@@ 18], mov_r12_rax, call_0xfffffffffffff0@@ ad, mov_rdi_qword_ptr_[rbp+0x28], mov_qword_ptr_[rsp+0x18]_rax, call_0xffffffffffffe@@ fff, mov_rdi_qword_ptr_[rbp+0x20], mov_r15d_eax, call_0xffffffffffffe@@ ff@@ 3, mov_r8d_dword_ptr_[rsp+0x@@ 40], mov_r9d_eax, lea_rdx_[rip+0x1c@@ 89@@ f], mov_ecx_r15d, mov_esi_0x20, xor_edi_edi, xor_eax_eax, call_0xfffffffffffff45@@ 3, lea_eax_[r@@ 15+r@@ 15@@ *2], mov_r14d_dword_ptr_[rsp+0x@@ 5c], lea_r13d@@ _[rax@@ *4], mov_rdi_qword_ptr_[rbp], lea_ebx_[r@@ 14+r@@ 13], mov_dword_ptr_[rsp+8]@@ _ebx, call_0xffffffffffffe@@ fd@@ 1, add_eax_4, mov_rdx_qword_ptr_[rbp+0x@@ 28], and_eax_0xfffffffc, add_ebx_eax, test_rdx_rdx, je_0x4d, mov_qword_ptr_[rsp+8]@@ _rbp, mov_r14_rdx, mov_ebp_ebx, mov_rbx_qword_ptr_[r@@ 14], mov_rdi_rbx, call_0x20@@ bb, mov_dword_ptr_[rbx+0x1@@ 8]_0, add_ebp@@ _eax, mov_r14_qword_ptr_[r@@ 14+8], test_r14_r14, jne_0xffffffffffffffe5, mov_ebx_ebp, mov_rbp_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[rbp], call_0xffffffffffffef@@ 89, mov_r14d_dword_ptr_[rsp+0x@@ 5c], add_eax_4, lea_ecx_[r@@ 13+r@@ 14], mov_dword_ptr_[rsp+8]_ecx, and_eax_0xfffffffc, mov_rdi_qword_ptr_[rbp+0x10], add_ebx_eax, test_rdi_rdi, je_0xf, call_0xffffffffffffef@@ 65, add_eax_4, and_eax_0xfffffffc, add_ebx_eax, mov_rax_qword_ptr_[rsp+0x10], test_rax_rax, je_0x12, mov_rdi_rax, call_0xffffffffffffef@@ 4b, add_eax_4, and_eax_0xfffffffc, add_ebx_eax, mov_rdi_qword_ptr_[rbp+0x18], test_rdi_rdi, je_0xf, call_0xffffffffffffef@@ 35, add_eax_4, and_eax_0xfffffffc, add_ebx_eax, add_ebx@@ _0x10, sub_rsp_8, mov_eax_ebx, sub_eax_dword_ptr_[r@@ sp+0x10], push_rax, mov_r8d_r14d, mov_r9d_r13d, mov_ecx_ebx, lea_rdx_[rip+0x1c@@ 7d@@ 3], mov_esi_0x20, xor_edi_edi, xor_eax_eax, call_0xfffffffffffff@@ 36@@ 2, mov_edi_ebx, call_0xfffffffffffff@@ 1a@@ b, movdqa_xmm0_xmmword_ptr_[r@@ ip+0x@@ 1c@@ 85@@ e], mov_dword_ptr_[rax+0x1@@ 0@@ ]_4, mov_word_ptr_[rax+0x1@@ 4]@@ _r15w, movups_xmmword_ptr_[rax]_xmm0, mov_r14_rax, movzx_eax_word_ptr_[rsp+0x@@ 56], mov_qword_ptr_[r14+0x1@@ c]_0, mov_word_ptr_[r@@ 14+0x1@@ 6]_ax, pop_rdi, pop_r8, mov_rdi_qword_ptr_[rsp+0x10], test_rdi_rdi, je_0x4@@ 1b, mov_rcx_qword_ptr_[rsp+0x28], mov_rdx_r14, mov_rsi_r12, call_0x2@@ 1c@@ e, mov_dword_ptr_[r14+0x@@ 24]_eax, mov_rbx_qword_ptr_[rsp+0x28], mov_dword_ptr_[r14+0x@@ 28]_0, mov_rdi_qword_ptr_[rbp], mov_rcx_rbx, mov_rdx_r14, mov_rsi_r12, call_0x2@@ 1a@@ b, mov_dword_ptr_[r14+0x@@ 2c]_eax, mov_rdi_qword_ptr_[rbp+8], mov_rcx_rbx, mov_rdx_r14, mov_rsi_r12, call_0x2@@ 19@@ 5, mov_rdi_qword_ptr_[rbp+0x10], mov_dword_ptr_[r14+0x@@ 30]_eax, xor_eax_eax, test_rdi_rdi, je_0x10, mov_rcx_rbx, mov_rdx_r14, mov_rsi_r12, call_0x2@@ 178, mov_rdi_qword_ptr_[rbp+0x18], mov_dword_ptr_[r14+0x@@ 34]_eax, test_rdi_rdi, je_0x3@@ 97, mov_rcx_qword_ptr_[rsp+0x28], mov_rdx_r14, mov_rsi_r12, call_0x2@@ 15@@ 7, mov_dword_ptr_[r14+0x@@ 38]_eax, movabs_rax_0x1@@ 0000@@ c@@ 00@@ 14@@ 000@@ c, mov_qword_ptr_[r14+0x@@ 3c@@ ]_rax, movabs_rax_0x1@@ 000@@ 1@@ 000@@ 1@@ 000@@ 14, mov_qword_ptr_[r14+0x@@ 44@@ ]_rax, movabs_rax_0x1@@ 000@@ 18@@ 000@@ c@@ 000@@ c, mov_qword_ptr_[r14+0x@@ 4c@@ ]_rax, movabs_rax_0x3@@ c@@ 00@@ 2@@ 000@@ 18@@ 000@@ 8, mov_qword_ptr_[r14+0x@@ 54@@ ]_rax, mov_eax_dword_ptr_[rsp+0x@@ 5c], mov_dword_ptr_[r14+0x@@ 5c]@@ _0x2@@ 8@@ 00@@ 28, add_eax_3, and_eax_0xfffffffc, mov_edx_eax, lea_ebx_[r@@ ax+0x10], mov_dword_ptr_[r14+0x@@ 60]_eax, mov_qword_ptr_[r14@@ +rdx]_0, lea_edx_[rax@@ +8], mov_rax_rbx, add_eax@@ _r13d, mov_r13_qword_ptr_[r@@ bp+0x28], mov_qword_ptr_[r14@@ +rdx]_0, mov_dword_ptr_[rsp+0x@@ 64]_eax, mov_dword_ptr_[r14+0x1@@ 8]_ebx, add_rbx@@ _r14, test_r13_r13, je_0x1@@ 92, lea_rax_[r@@ 15+r@@ 15@@ *2], lea_rax_[r@@ bx+rax*4], mov_qword_ptr_[rsp+0x30]@@ _rbp, mov_qword_ptr_[rsp+0x20]_rax, mov_qword_ptr_[rsp+8]_0, mov_rbp@@ _qword_ptr_[rsp+0x48], jmp_0x@@ ed, mov_rdi_r15, mov_dword_ptr_[rsp+0x3c]@@ _r10d, call_0x1@@ bb@@ d, mov_edx_dword_ptr_[rsp+0x@@ 60], mov_rcx_rbp, add_eax_edx, mov_dword_ptr_[rsp+0x@@ 64]_eax, mov_rsi_r12, mov_eax_dword_ptr_[r15], or_byte_ptr_[r@@ bx+@@ 2]_1, mov_dword_ptr_[rbx+@@ 8]_edx, mov_word_ptr_[r@@ bx@@ ]_ax, mov_rdx_r14, mov_rdi_qword_ptr_[r15+8], call_0x20@@ 74, mov_dword_ptr_[rbx+4]_eax, mov_rax_qword_ptr_[rsp+0x30], pxor_xmm0_xmm0, mov_qword_ptr_[rsp+0x70]_rax, mov_rax_qword_ptr_[rsp+0x18], lea_rcx_[rsp+0x@@ 60], mov_qword_ptr_[rsp+0x80]_rax, mov_rax_qword_ptr_[rsp+8], lea_rdx_[rsp+0x70], mov_qword_ptr_[rsp+0x88]_rax, mov_eax_dword_ptr_[r@@ 14+0x1@@ c], xor_r9d_r9d, mov_r8_rbp, xor_esi_esi, mov_rdi_r15, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm0, mov_qword_ptr_[rsp+0xa0]_0, mov_dword_ptr_[rsp+0x9@@ 0]_eax, mov_qword_ptr_[rsp+0x7@@ 8]_r12, mov_qword_ptr_[rsp+0x9@@ 8]_r14, call_0x20@@ b3, mov_rax_qword_ptr_[rsp+0x88], mov_rdi_r15, mov_qword_ptr_[rsp+8]_rax, mov_eax_dword_ptr_[rsp+0x90], mov_dword_ptr_[r14+0x1@@ c]_eax, call_0x1@@ dd3, mov_r10d_dword_ptr_[rsp+0x@@ 3c], mov_ecx_dword_ptr_[rsp+0x@@ 64], add_eax@@ _r10d, cmp_eax_ecx, jb_0x2@@ 4a, mov_r13_qword_ptr_[r@@ 13+8], add_rbx@@ _0xc, test_r13_r13, je_0x7c, mov_r15_qword_ptr_[r@@ 13], mov_esi_0x2e, mov_rdi_qword_ptr_[r15+8], call_0xffffffffffffee@@ 80, test_rax_rax, jne_0x2@@ 60, cmp_rbx@@ _qword_ptr_[rsp+0x20], je_0x2@@ 6d, mov_r10d_dword_ptr_[rsp+0x@@ 64], mov_dword_ptr_[rsp+0x6@@ 0]@@ _r10d, cmp_dword_ptr_[r@@ 15]@@ _0x13, jne_0xfffffffffffffe@@ e4, mov_rdi_qword_ptr_[r15+0x@@ 28], xor_esi_esi, and_byte_ptr_[r@@ bx+@@ 2]@@ _0xfe, mov_word_ptr_[r@@ bx@@ ]_si, mov_rcx_rbp, mov_rdx_r14, mov_rsi_r12, call_0x1f@@ 6d, mov_dword_ptr_[rbx+8]_eax, mov_rcx_rbp, mov_rdx_r14, mov_rdi_qword_ptr_[r15+8], mov_rsi_r12, call_0x1f@@ 58, mov_dword_ptr_[rbx+4]_eax, add_rbx@@ _0xc, mov_r13_qword_ptr_[r@@ 13+8], test_r13_r13, jne_0xffffffffffffff@@ 88, mov_r13_qword_ptr_[rsp+8], lea_rsi_[rip-0x@@ 9@@ 19], mov_rdi_r13, call_0xffffffffffffe@@ dd@@ 4, movzx_ecx_word_ptr_[r@@ 14+0x14], mov_r8d_dword_ptr_[r@@ 14+0x1@@ c], mov_qword_ptr_[rsp+8]_rax, lea_rdx_[rip+0x1c@@ 53@@ 2], mov_esi_0x20, xor_edi_edi, mov_rbx_rax, xor_eax_eax, call_0xfffffffffffff0@@ 4e, call_0x4@@ 59, movzx_ecx_word_ptr_[r@@ 14+0x@@ 4e], mov_eax_dword_ptr_[rsp+0x@@ 64], imul_ecx@@ _dword_ptr_[r@@ 14+0x1@@ c], mov_dword_ptr_[rsp+0x60]_eax, mov_dword_ptr_[r14+0x@@ 20]_eax, add_ecx_eax, mov_dword_ptr_[rsp+0x6@@ 4]_ecx, test_rbx_rbx, je_0x6e, lea_rcx_[rsp+0x@@ 64], lea_r15_[rsp+0x@@ 70], lea_r13_[rsp+0x@@ 60], lea_rbp_[r@@ ip-0x@@ 90@@ 3], mov_rax_qword_ptr_[rbx], mov_qword_ptr_[rsp+0x9@@ 8]_rcx, mov_dword_ptr_[rsp+0x7@@ 0]_0, mov_qword_ptr_[rsp+0x7@@ 8]_r14, mov_qword_ptr_[rsp+0x80]_rax, mov_qword_ptr_[rsp+0x9@@ 0]_r13, mov_qword_ptr_[rsp+0x8@@ 8]_r12, mov_rdx_r15, mov_rsi_rbp, mov_rdi_qword_ptr_[rax+0x20], mov_qword_ptr_[rsp+0x10]_rcx, call_0xffffffffffffec@@ 2e, mov_rbx_qword_ptr_[rbx+8], mov_rcx_qword_ptr_[rsp+0x10], test_rbx_rbx, jne_0xffffffffffffffb0, mov_ecx_dword_ptr_[rsp+0x@@ 64], lea_rdx_[rip+0x1c@@ 39@@ a], mov_esi_0x20, xor_edi_edi, xor_eax_eax, call_0xffffffffffffe@@ fa@@ 7, mov_esi_dword_ptr_[rsp+0x@@ 64], mov_rdi_r14, call_0xffffffffffffed@@ 6b, mov_rbp_rax, call_0xa@@ 5d@@ 3, movzx_r13d_word_ptr_[r@@ bp+0x@@ 16], mov_r14_rax, xor_ebx_ebx, test_r13d_r13d, je_0x24, movzx_eax_word_ptr_[rbp+0x@@ 3c], mov_edx_ebx, imul_eax@@ _ebx, mov_rdi_r14, inc_ebx, add_eax_dword_ptr_[r@@ bp+0x18], mov_esi_dword_ptr_[r@@ bp@@ +rax+4], add_rsi@@ _rbp, call_0xa@@ 5f@@ 7, cmp_r13d@@ _ebx, jne_0xffffffffffffffe0, mov_rdi_r14, call_0xa@@ 6@@ 3a, test_eax_eax, je_0x1@@ 95, mov_eax_dword_ptr_[rbp+0x@@ 60], add_rax_rbp, mov_ecx_dword_ptr_[rax], test_ecx_ecx, je_0x136, mov_edx_dword_ptr_[rax+8], add_rax_8, test_edx_edx, je_0x12@@ 7, xor_r8d_r8d, lea_rcx_[rip+0x@@ 1c@@ 4@@ 24], mov_edx_0x@@ f5, lea_rsi_[rip+0x1c@@ 3@@ 1b], xor_edi_edi, call_0xffffffffffffea@@ 66, mov_dword_ptr_[r14+0x@@ 38]_0, jmp_0xfffffffffffffc@@ 7b, mov_dword_ptr_[r14+0x@@ 24]_0, jmp_0xfffffffffffffb@@ f7, mov_edx_0x7@@ c, mov_rsi@@ _-1, mov_rdi_r12, call_0xffffffffffffed@@ 58, jmp_0xfffffffffffff9c@@ 9, mov_rdi_qword_ptr_[rsp+0x10], call_0xffffffffffffe@@ 78@@ 9, mov_qword_ptr_[rsp+0x10]_0, jmp_0xfffffffffffff9f@@ 7, mov_rdi_r15, mov_dword_ptr_[rsp+0x10]_r10d, mov_dword_ptr_[rsp+8]_ecx, call_0x1b@@ 6a, mov_r10d_dword_ptr_[rsp+0x10], mov_ecx_dword_ptr_[rsp+8], add_r10@@ d_eax, sub_ecx@@ _r10d, lea_rdx_[rip+0x1c@@ 270], mov_esi_4, xor_edi_edi, xor_eax_eax, call_0xffffffffffffee@@ 96, jmp@@ _0, lea_rdx_[rip+0x1c@@ 238], mov_esi_4, xor_edi_edi, xor_eax_eax, call_0xffffffffffffee@@ 78, jmp@@ _0, mov_esi_0x20, xor_eax_eax, lea_rdx_[rip+0x1c@@ 30@@ a], xor_edi_edi, mov_rbp@@ _qword_ptr_[rsp+0x30], call_0xffffffffffffee@@ 5b, mov_rdi_r12, call_0xffffffffffffe7@@ 93, mov_rdi_qword_ptr_[rsp+0x18], call_0xffffffffffffe@@ 78@@ 9, mov_rsi_qword_ptr_[rsp+8], mov_rax_rsi, test_rsi_rsi, je_0x15, mov_rdx_qword_ptr_[rax], mov_dword_ptr_[rdx+0x1@@ 8]_0, mov_rax_qword_ptr_[rax+8], test_rax_rax, jne_0xffffffffffffffef, mov_rdi_qword_ptr_[rsp+8], call_0xffffffffffffe@@ 85@@ f, mov_rdi_r14, call_0xffffffffffffe@@ 6c@@ 7, jmp_0xfffffffffffff95@@ c, mov_edx_dword_ptr_[rsp+0x@@ 64], mov_dword_ptr_[rax]_1, mov_dword_ptr_[rax+4]_edx, mov_rdi_r14, call_0xa@@ 6cd, add_eax_3, mov_r13d_eax, and_eax@@ _0xfffc, add_eax@@ _dword_ptr_[rsp+0x@@ 64], mov_esi_eax, mov_rdi_rbp, mov_rbx_rsi, call_0xffffffffffffe@@ bb@@ 1, mov_esi_dword_ptr_[rsp+0x@@ 64], and_r13d@@ _0xfffffffc, add_rsi_rax, movzx_edx@@ _r13w, mov_rdi_r14, mov_rbp_rax, call_0xa@@ 7@@ 27, mov_dword_ptr_[rsp+0x6@@ 4]_ebx, mov_rdi_r14, call_0xa@@ 9@@ 1b, mov_esi_dword_ptr_[rsp+0x@@ 64], lea_rdx_[rsp+0x@@ 68], mov_dword_ptr_[rbp+0x@@ 28]@@ _esi, mov_rdi_rbp, call_0xffffffffffffe@@ 6b@@ 7, mov_r13_rax, test_rax_rax, je_0x46, mov_rdi_r12, call_0xffffffffffffe@@ 6d@@ 7, mov_rdi_qword_ptr_[rsp+0x18], call_0xffffffffffffe@@ 6cd, mov_rdi_qword_ptr_[rsp+8], call_0xffffffffffffe@@ 7c@@ 3, mov_rax_qword_ptr_[rsp+0xa8], xor_rax_qword_ptr_fs:[0x28], jne_0x37, add_rsp_0xb8, pop_rbx, pop_rbp, pop_r12, mov_rax_r13, pop_r13, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[rsp+0x68], lea_rdx_[rip+0x1c@@ 16@@ 9], mov_rcx_qword_ptr_[rax+8], mov_esi_4, xor_edi_edi, xor_eax_eax, call_0xffffffffffffed@@ 3d, jmp@@ _0, call_0xffffffffffffeb@@ 3@@ 6
endbr64, push_r13, mov_r13_rsi, push_r12, push_rbp, mov_rbp_rdx, push_rbx, sub_rsp_8, mov_eax_dword_ptr_[rdx], lea_r12d_[r@@ ax+0xc], mov_dword_ptr_[rdx@@ ]@@ _r12d, call_0xffffffffffffe@@ 8b@@ 3, lea_ebx@@ _[rax@@ +4], and_ebx@@ _0xfffffffc, add_ebx@@ _r12d, mov_dword_ptr_[rbp@@ ]_ebx, mov_rdi_r13, call_0xffffffffffffe8@@ 9f, add_eax_4, and_eax_0xfffffffc, add_ebx_eax, mov_dword_ptr_[rbp@@ ]_ebx, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret
push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, mov_rdi_qword_ptr_[rdi], call_0xffffffffffffe@@ 5a@@ 3, test_eax_eax, je_0x3a, mov_rbx_qword_ptr_[r@@ bp+0x30], test_rbx_rbx, je_0x43, mov_rbp_qword_ptr_[rbx], mov_rsi_r12, mov_rdi_qword_ptr_[rbp], call_0xffffffffffffe@@ 58@@ 7, test_eax_eax, je_0x1e, mov_rdi_rbp, mov_rsi_r12, call_0xffffffffffffff@@ c8, mov_rbp_rax, test_rax_rax, jne_0xb, mov_rbx_qword_ptr_[rbx+8], test_rbx_rbx, jne_0xffffffffffffffd3, pop_rbx, mov_rax_rbp, pop_rbp, pop_r12, ret, xor_ebp_ebp, jmp_0xffffffffffffffe@@ c
endbr64, mov_eax_dword_ptr_[rsi], cmp_dword_ptr_[r@@ di]_eax, jb@@ _0x20, jbe_0x@@ e, mov_eax_1, ret, mov_rsi_qword_ptr_[r@@ si+8], mov_rdi_qword_ptr_[rdi+8], jmp_0xffffffffffffe@@ 5@@ 20, mov_eax_0xffffffff, ret
endbr64, mov_qword_ptr_[rip+0x27@@ 19@@ 9]_0, mov_qword_ptr_[rip+0x27@@ 18@@ 6]_0, mov_qword_ptr_[rip+0x27@@ 17@@ 3]_0, mov_qword_ptr_[rip+0x27@@ 16@@ 0]_0, mov_qword_ptr_[rip+0x27@@ 14@@ d]_0, mov_qword_ptr_[rip+0x27@@ 13@@ a]_0, ret
endbr64, sub_rsp_0x10, push_qword_ptr_[r@@ ip+0x2@@ 7@@ 13@@ a], mov_r8_qword_ptr_[rip+0x2@@ 7@@ 14@@ 3], mov_rcx_qword_ptr_[rip+0x2@@ 7@@ 134], mov_r9_qword_ptr_[rip+0x2@@ 7@@ 1@@ 1d], lea_rdx_[rip+0x1c@@ 0@@ e6], mov_esi_0x20, xor_edi_edi, xor_eax_eax, call_0xffffffffffffe@@ bb@@ d, mov_r8_qword_ptr_[rip+0x2@@ 70@@ f9], mov_rcx_qword_ptr_[rip+0x2@@ 70@@ ea], lea_rdx_[rip+0x1c@@ 10@@ b], mov_esi_0x20, xor_edi_edi, xor_eax_eax, add_rsp_0x18, jmp_0xffffffffffffeb@@ 9@@ 6
endbr64, cmp_edi@@ _0x13, ja_0x1@@ 39, lea_rdx_[rip+0x1c@@ 5@@ 2c], mov_edi@@ _edi, movsxd_rax_dword_ptr_[r@@ dx+r@@ di*4], add_rax_rdx, jmp_rax, lea_rax_[rip+0x@@ 1c@@ 17@@ e], ret
push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rsi, sub_rsp_0x10, mov_rdx@@ _qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rdx, xor_edx_edx, test_rsi_rsi, jne_0x26, test_rdi_rdi, je_0x21, mov_rcx_qword_ptr_[r@@ di+8], lea_rdx_[rip+0x1c@@ 1a@@ 3], mov_esi_4, xor_edi_edi, xor_eax_eax, call_0xffffffffffffea@@ 03, jmp@@ _0, mov_edi_dword_ptr_[rbx], call_0xfffffffffffffe@@ 66, mov_r8_rax, mov_rcx_rbx, lea_rdx_[rip+0x1c@@ 19@@ 7], mov_esi_0x80, xor_edi_edi, xor_eax_eax, call_0xffffffffffffe@@ 9d@@ b, mov_ebp_dword_ptr_[r@@ bx], cmp_ebp@@ _0x13, ja_0x4@@ c3, lea_rdx_[rip+0x1c@@ 3c@@ 4], mov_eax_ebp, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_ecx_ebp, lea_rdx_[rip+0x1b@@ c@@ e0], mov_esi_4, xor_edi_edi, xor_eax_eax, call_0xffffffffffffe@@ 4f@@ c, jmp@@ _@@ 0
endbr64, push_r13, mov_r13d_edi, push_r12, push_rbx, cmp_edi@@ _0x13, ja@@ _0xfc, lea_rdx_[rip+0x@@ 1bb@@ 5c], mov_eax_edi, movsxd_rax_dword_ptr_[rdx+rax*4], mov_rbx_rsi, add_rax_rdx, jmp_rax, mov_ecx_r13d, lea_rdx_[rip+0x1b@@ 7e@@ b], mov_esi_4, xor_edi_edi, xor_eax_eax, call_0xffffffffffffd@@ ff@@ 2, jmp@@ _@@ 0
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x28, mov_qword_ptr_[rsp+8]_rdi, test_rsi_rsi, je_0xf1, cmp_byte_ptr_[rsi]_0, mov_r15_rsi, je_0xc4, mov_rax_qword_ptr_[rsp+8], lea_rsi_[rip+0x1b@@ 88@@ 9], mov_rdi_r15, mov_rbx_rdx, xor_edx_edx, mov_r14_qword_ptr_[rax], call_0xffffffffffffdd@@ d1, mov_rdi_rax, mov_rbp_rax, call_0xffffffffffffd@@ aa@@ 6, mov_r13d_eax, cmp_eax_2, jg_0x1@@ 72, mov_r8_qword_ptr_[r@@ 14+0x28], test_r8_r8, je_0xed, cdqe, lea_rax_[r@@ bp@@ +rax*8@@ -8], mov_qword_ptr_[rsp+0x10]_rax, mov_dword_ptr_[rsp+@@ 4]_1, jmp_0x37, mov_rax_qword_ptr_[rsp+0x10], mov_rdi_qword_ptr_[r12+8], mov_rsi_qword_ptr_[rax], mov_qword_ptr_[rsp+0x18]_r8, call_0xffffffffffffd8@@ 20, test_eax_eax, mov_r8_qword_ptr_[rsp+0x18], je_0x8c, mov_r8_qword_ptr_[r@@ 8+8], inc_dword_ptr_[r@@ sp+4], test_r8_r8, je_0xa2, mov_r12_qword_ptr_[r@@ 8], cmp_r13d_2, jne_0xffffffffffffffc4, cmp_dword_ptr_[r@@ 12]@@ _0x13, jne_0xffffffffffffffe1, mov_rdi_qword_ptr_[r12+0x@@ 28], test_rdi_rdi, je_0xffffffffffffffd7, mov_rsi_qword_ptr_[rbp], mov_qword_ptr_[rsp+0x18]_r8, call_0xffffffffffffd@@ 7d@@ a, test_eax_eax, mov_r8_qword_ptr_[rsp+0x18], je_0xffffffffffffff@@ 9c, jmp_0xffffffffffffffbe, lea_r8_[rip+0x@@ 1b@@ 7@@ 22], lea_rcx_[rip+0x@@ 1bb@@ 3c], mov_edx_0x40@@ e, lea_rsi_[rip+0x1b@@ 6f@@ 5], xor_edi_edi, call_0xffffffffffffda@@ 2e, lea_r8_[rip+0x@@ 1b@@ 6d@@ a], lea_rcx_[rip+0x@@ 1bb@@ 1b], mov_edx_0x40@@ d, lea_rsi_[rip+0x1b@@ 6d@@ 4], xor_edi_edi, call_0xffffffffffffd@@ a0@@ d, test_rbx_rbx, je_0xa, movzx_eax_word_ptr_[r@@ sp+4], mov_word_ptr_[r@@ bx@@ ]_ax, mov_rdi_rbp, call_0xffffffffffffdd@@ d8, add_rsp_0x28, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, cmp_r13d_2, jne_0x8b, mov_rsi_r14, mov_edi@@ _0x13, call_0xfffffffffffffd@@ 6f, mov_rdi_qword_ptr_[rbp], mov_r12_rax, call_0xffffffffffffd@@ 85@@ 3, mov_qword_ptr_[r12+0x@@ 28]_rax, mov_rdi_qword_ptr_[rbp+8], call_0xffffffffffffd@@ 84@@ 5, mov_qword_ptr_[r12+8]_rax, mov_rsi_r12, mov_rdi_qword_ptr_[r14+0x@@ 28], call_0xffffffffffffd@@ bd@@ 4, mov_qword_ptr_[r14+0x@@ 28]_rax, mov_rdi_rax, test_rbx_rbx, je_0xa, call_0xffffffffffffd@@ 9c@@ 3, mov_word_ptr_[r@@ bx@@ ]_ax, mov_r8_qword_ptr_[r@@ bp+8], mov_rcx_qword_ptr_[rbp], lea_rdx_[rip+0x1b@@ 68@@ 1], mov_esi_0x80, xor_edi_edi, xor_eax_eax, call_0xffffffffffffde@@ 23, jmp_0xffffffffffffff73, lea_rdx_[rip+0x1b@@ 65@@ 3], mov_esi_4, xor_edi_edi, xor_eax_eax, call_0xffffffffffffd@@ e0@@ 9, jmp@@ _0, mov_rdi_qword_ptr_[rsp+8], mov_rcx_r15, lea_rdx_[rip+0x1b@@ 65@@ d], or_esi_0xffffffff, xor_eax_eax, call_0xffffffffffffe@@ 65@@ e
push_r14, push_r13, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rsi, mov_edi_dword_ptr_[r@@ si+0x@@ 48], cmp_edi@@ _0xe, jle_0x@@ 49, cmp_edi@@ _0x15, je_0x44, cmp_edi@@ _0xf, je_0x7f, cmp_edi@@ _0x10, je_0xea, cmp_edi@@ _0x11, je_0x1@@ b1, cmp_edi@@ _0x12, je_0x1@@ c8, cmp_edi@@ _0x13, je_0x2@@ 2f, cmp_edi@@ _0x14, je_0x2@@ 9e, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_r11d_dword_ptr_[r@@ bx+0x28], lea_rcx_[rip+0x@@ 1dd@@ d6], test_r11d_r11d, lea_r12_[rip+0x@@ 1b@@ 5f@@ 3], cmove@@ _r12@@ _rcx, call_0xffffffffffffd@@ 8a@@ 7, mov_rdx_rax, mov_rcx_r12, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, lea_rsi_[rip+0x1b@@ 5d@@ 6], xor_eax_eax, pop_r14, jmp_0xffffffffffffdd@@ 38, mov_eax_dword_ptr_[rsi+0x@@ 6c], test_eax_eax, je_0xbb, lea_rsi_[rip+0x1b@@ 5e@@ d], cmp_eax_3, je_0x4a, cmp_eax_1, je_0x2@@ 16, lea_rsi_[rip+0x1b@@ 5@@ ea], mov_rdi_rdx, call_0xffffffffffffdc@@ f6, cmp_qword_ptr_[rbx+0x@@ 70]_0, je_0xffffffffffffff@@ 7c, lea_rsi_[rip+0x1c@@ 4e@@ 2], mov_rdi_rbp, call_0xffffffffffffd@@ cd@@ c, mov_rsi_qword_ptr_[rbx+0x@@ 70], mov_rdx_rbp, mov_rdi_r12, call_0xffffffffffffff@@ 0d, lea_rsi_[rip+0x1c@@ 24@@ 7], pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, pop_r14, jmp_0xffffffffffffd@@ cb@@ 6, mov_rsi_qword_ptr_[r@@ si+0x@@ 80], mov_rdi_r12, xor_edx_edx, call_0xfffffffffffffc@@ e4, mov_r12_rax, test_rax_rax, je_0x2@@ 71, cmp_dword_ptr_[rax]@@ _0x13, je_0x12@@ 0, mov_rdx_qword_ptr_[r12+8], mov_ecx_dword_ptr_[rbx+0x28], lea_rax_[rip+0x@@ 1d@@ cf@@ c], test_ecx_ecx, lea_rcx_[rip+0x@@ 1b@@ 5@@ 1a], cmove_rcx_rax, jmp_0xffffffffffffff32, mov_rsi_qword_ptr_[r@@ si+0x@@ 70], mov_rdi_r12, call_0xfffffffffffffe@@ 99, lea_rsi_[rip+0x1b@@ 4f@@ c], mov_rdi_rbp, call_0xffffffffffffdc@@ 4a, mov_r10d_dword_ptr_[r@@ bx+0x@@ 5c], test_r10d_r10d, jne_0x96, mov_r9d_dword_ptr_[r@@ bx+0x@@ 64], test_r9d_r9d, jne_0x1@@ e9, mov_eax_dword_ptr_[rbx+0x@@ 58], test_eax_eax, je_0x1a, lea_rdx_[rip+0x1d@@ c9@@ e], lea_rsi_[rip+0x1b@@ 4d@@ f], mov_rdi_rbp, xor_eax_eax, call_0xffffffffffffdc@@ 21, lea_rsi_[rip+0x1b@@ 4e@@ 2], mov_rdi_rbp, call_0xffffffffffffd@@ c0@@ 2, mov_esi_dword_ptr_[r@@ bx+0x28], test_esi_esi, je_0xfffffffffffffe@@ 88, lea_rsi_[rip+0x1b@@ 49@@ 3], jmp_0xffffffffffffff2a, lea_rsi_[rip+0x1b@@ 4d8], mov_rdi_rdx, call_0xffffffffffffd@@ bd@@ 6, cmp_qword_ptr_[rbx+0x@@ 70]_0, jne_0xfffffffffffffe@@ e6, jmp_0xfffffffffffffe@@ 56, lea_rsi_[rip+0x1b@@ 4b@@ e], mov_rdi_rdx, call_0xffffffffffffd@@ bb@@ 6, jmp_0xfffffffffffffe@@ c0, mov_edx_dword_ptr_[rbx+0x@@ 60], lea_rsi_[rip+0x1b@@ 44@@ f], mov_rdi_rbp, xor_eax_eax, call_0xffffffffffffd@@ ba@@ 9, mov_r8d_dword_ptr_[rbx+0x@@ 58], test_r8d_r8d, je_0xffffffffffffff@@ 81, mov_edi_dword_ptr_[rbx+0x@@ 5c], lea_rdx_[rip+0x1a@@ d@@ 4e], test_edi_edi, jne_0xffffffffffffff@@ 5e, jmp_0xffffffffffffff51, mov_rdx_qword_ptr_[rax+0x28], lea_rsi_[rip+0x1b@@ 460], mov_rdi_rbp, xor_eax_eax, call_0xffffffffffffdb@@ 70, jmp_0xfffffffffffffe@@ d1, lea_rsi_[rip+0x1b@@ 45@@ 5], mov_rdi_rdx, call_0xffffffffffffdb@@ 46, cmp_qword_ptr_[rbx+0x@@ 70]_0, je_0xfffffffffffffd@@ cc, mov_rdi_rbp, lea_rsi_[rip+0x1c@@ 32@@ f], call_0xffffffffffffdb@@ 2c, mov_rsi_qword_ptr_[rbx+0x@@ 70], mov_rdx_rbp, mov_rdi_r12, call_0xfffffffffffffd@@ 5d, mov_rdi_rbp, lea_rsi_[rip+0x1a@@ cd@@ f], call_0xffffffffffffd@@ b0@@ e, mov_rsi_qword_ptr_[rbx+0x@@ 78], mov_rdx_rbp, mov_rdi_r12, call_0xfffffffffffffd@@ 3f, jmp_0xfffffffffffffe@@ 32, lea_rsi_[rip+0x1b@@ 3d@@ 3], mov_rdi_rdx, call_0xffffffffffffda@@ e6, jmp_0xfffffffffffffd@@ f0, lea_rsi_[rip+0x1b@@ 3e@@ 8], mov_rdi_rdx, call_0xffffffffffffda@@ ce, cmp_qword_ptr_[rbx+0x@@ 88]_0, je_0xfffffffffffffd@@ 51, lea_rsi_[rip+0x1c@@ 2b@@ 7], mov_rdi_rbp, call_0xffffffffffffda@@ b1, mov_rax_qword_ptr_[rbx+0x@@ 88], mov_r12d@@ _8, mov_rsi_qword_ptr_[rax], lea_r14_[rip+0x@@ 1a@@ c6@@ 6], test_rsi_rsi, jne_0x23, jmp_0xfffffffffffffd@@ c8, mov_rsi_r14, mov_rdi_rbp, call_0xffffffffffffda@@ 82, mov_rax_qword_ptr_[rbx+0x@@ 88], mov_rsi_qword_ptr_[rax+r@@ 12], mov_r12_r13, mov_rdi_rbp, call_0xffffffffffffda@@ 6c, mov_rax_qword_ptr_[rbx+0x@@ 88], lea_r13_[r@@ 12+8], cmp_qword_ptr_[r@@ ax+r@@ 12]_0, jne_0xffffffffffffffce, jmp_0xfffffffffffffd@@ 8c, mov_edx_dword_ptr_[rbx+0x@@ 68], lea_rsi_[rip+0x1b@@ 2f@@ 9], mov_rdi_rbp, xor_eax_eax, call_0xffffffffffffda@@ 49, jmp_0xfffffffffffffea@@ 0, mov_rcx_qword_ptr_[rbx+0x@@ 80], lea_rdx_[rip+0x1a@@ f@@ ea], mov_esi_0x10, xor_edi_edi, xor_eax_eax, call_0xffffffffffffda@@ 31, mov_rdx_qword_ptr_[rbx+0x@@ 80], jmp_0xfffffffffffffd@@ 8@@ 0
endbr64, test_rdi_rdi, je_0x3@@ d3, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, mov_ecx_dword_ptr_[r@@ di], cmp_ecx@@ _0x13, ja_0x3@@ bf, lea_rdx_[rip+0x1b@@ 4a@@ f], mov_eax_ecx, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, ret, lea_rdx_[rip+0x1a@@ e@@ 2e], mov_esi_4, xor_edi_edi, xor_eax_eax, call_0xffffffffffffd6@@ 35, jmp@@ _@@ 0
endbr64, push_r13, mov_r13_rdi, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_edi_dword_ptr_[r@@ di], cmp_edi@@ _0x13, ja_0x2@@ 4c, lea_rdx_[rip+0x1b@@ 10@@ 5], mov_eax_edi, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, call_0xffffffffffffe8@@ 2e, mov_rcx_rax, lea_rdx_[rip+0x1a@@ ca@@ d], mov_esi_4, xor_edi_edi, xor_eax_eax, call_0xffffffffffffd@@ 3a@@ 6, jmp@@ _@@ 0
endbr64, mov_rsi_rdi, xor_edi_edi, jmp_0xffffffffffffe@@ 90@@ 7
endbr64, cmp_dword_ptr_[rdi]@@ _0x13, ja_0x2@@ 7, mov_eax_dword_ptr_[rdi], lea_rdx_[rip+0x1a@@ e8@@ 6], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, push_rax, xor_r8d_r8d, lea_rcx_[rip+0x@@ 1a@@ fa@@ 7], mov_edx_0x3@@ 9f, lea_rsi_[rip+0x1a@@ b@@ 10], xor_edi_edi, call_0xffffffffffffc@@ e4@@ 9
endbr64, test_rdi_rdi, je_0x6b, test_rsi_rsi, je_0x51, push_rbx, mov_rbx_rdi, mov_ecx_dword_ptr_[r@@ di], cmp_ecx@@ _8, ja_0x2@@ b, cmp_ecx@@ _6, ja_0x@@ 9c, cmp_ecx_3, je_0x62, cmp_ecx@@ _4, jne_0x73, mov_rdi_qword_ptr_[rdi+0x@@ 48], lea_rdx_[rip-0x@@ 19@@ b7], call_0xffffffffffffc@@ fd@@ 9, mov_qword_ptr_[rbx+0x@@ 48]_rax, pop_rbx, ret, cmp_ecx@@ _0xb, jne_0x58, mov_rdi_qword_ptr_[rdi+0x30], lea_rdx_[rip-0x@@ 19d@@ 2], call_0xffffffffffffc@@ fb@@ e, mov_qword_ptr_[rbx+0x30]_rax, pop_rbx, ret, lea_rdx_[rip+0x1a@@ bc@@ b], lea_rsi_[rip+0x1a@@ f0@@ 5], xor_edi_edi, jmp_0xffffffffffffc@@ f7@@ 3, lea_rdx_[rip+0x1a@@ ba@@ 9], lea_rsi_[rip+0x1a@@ e@@ f0], xor_edi_edi, jmp_0xffffffffffff@@ cf@@ 5e, mov_rdi_qword_ptr_[rdi+0x@@ 50], lea_rdx_[rip-0x@@ 1a@@ 12], call_0xffffffffffffc@@ f7@@ e, mov_qword_ptr_[rbx+0x@@ 50]_rax, pop_rbx, ret, lea_rdx_[rip+0x1a@@ 8@@ 2c], mov_esi_4, xor_edi_edi, xor_eax_eax, call_0xffffffffffffd@@ 24@@ 3, jmp@@ _0, mov_rdi_qword_ptr_[rdi+0x@@ 90], lea_rdx_[rip-0x@@ 1a@@ 46], call_0xffffffffffffcf@@ 4a, mov_qword_ptr_[rbx+0x@@ 90]_rax, pop_rbx, ret
endbr64, mov_edx_dword_ptr_[rdi+0x@@ 2c], lea_rax_[rip+0x@@ 1b@@ 6@@ 2a], test_edx_edx, je_0x19, mov_eax_dword_ptr_[rdi+0x@@ 28], lea_rdx_[rip+0x1a@@ b4@@ 5], test_eax_eax, lea_rax_[rip+0x@@ 1a@@ b@@ 39], cmove_rax_rdx, ret
endbr64, push_r13, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rdx, mov_rdi_rbp, push_rbx, xor_edx_edx, mov_rbx_rsi, sub_rsp_8, lea_rsi_[rip+0x1a@@ a@@ 9a], call_0xffffffffffffc@@ fe@@ d, mov_rdi_rax, mov_r13_rax, call_0xffffffffffffc@@ cc@@ 2, cmp_eax_1, je_0x16, mov_rsi_qword_ptr_[r13], mov_rdi_qword_ptr_[r12], call_0xffffffffffffe@@ 4c0, mov_rbp_qword_ptr_[r@@ 13+8], mov_rbx_rax, test_rbx_rbx, je_0x49, mov_rbx_qword_ptr_[r@@ bx+0x28], test_rbx_rbx, jne_0x11, jmp_0x3e, mov_rbx_qword_ptr_[rbx+8], test_rbx_rbx, je_0x31, mov_r12_qword_ptr_[rbx], mov_rsi_rbp, mov_rdi_qword_ptr_[r12+8], call_0xffffffffffffca@@ 3c, test_eax_eax, jne_0xffffffffffffffe5, mov_rdi_r13, call_0xffffffffffffd0@@ 90, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, xor_r12d_r12d, jmp_0xffffffffffffffe@@ 2
endbr64, push_r13, mov_r13_rcx, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rdx, sub_rsp_8, inc@@ _qword_ptr_[rip+0x2@@ 56@@ 87], call_0xffffffffffffc@@ cb@@ f, mov_rsi_rbp, mov_rdi_r12, add_qword_ptr_[r@@ ip+0x2@@ 5@@ 66@@ 5]_rax, call_0xffffffffffffcf@@ 4d, test_rax_rax, je_0x15, add_rsp_8, pop_rbx, mov_r12d_eax, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, mov_rdi_rbp, inc@@ _qword_ptr_[rip+0x2@@ 56@@ 46], call_0xffffffffffffcc@@ 86, mov_edx_dword_ptr_[r13], mov_rsi_rbp, mov_rdi_r12, add_qword_ptr_[r@@ ip+0x2@@ 56@@ 20]_rax, call_0xffffffffffffcb@@ 00, mov_r12d_dword_ptr_[r@@ 13], mov_rdi_rbp, call_0xffffffffffffcc@@ 64, lea_eax_[r@@ 12@@ +rax+4], and_eax_0xfffffffc, mov_dword_ptr_[r13]_eax, mov_edi_r12d, add_rdi_rbx, mov_rsi_rbp, call_0xffffffffffffc@@ ec@@ a, add_rsp_8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x48, mov_qword_ptr_[rsp+0x18]_rsi, mov_qword_ptr_[rsp+0x10]_r9, mov_r10_qword_ptr_[r@@ dx+8], mov_r15_qword_ptr_[r@@ dx+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_eax_dword_ptr_[rcx], mov_qword_ptr_[rsp+8]_r10, mov_dword_ptr_[rsp]_eax, mov_eax_dword_ptr_[r@@ 8], mov_r13_qword_ptr_[r@@ dx+0x28], mov_dword_ptr_[rsp+4]_eax, test_rdi_rdi, je_0x1@@ 1e, mov_rbp_rdi, mov_edi_dword_ptr_[r@@ di], mov_rbx_rcx, mov_r12_r8, mov_r14_rdx, call_0xffffffffffffe@@ 4a0, mov_rcx_qword_ptr_[r@@ bp+8], mov_r10_qword_ptr_[rsp+8], test_rcx_rcx, mov_r9_rax, lea_r8_[rip+0x@@ 1b@@ 6c@@ 4], je_0xe0, xor_edi_edi, xor_eax_eax, lea_rdx_[rip+0x1a@@ 95@@ 9], mov_esi_0x80, mov_qword_ptr_[rsp+8]_r10, call_0xffffffffffffc@@ ff@@ a, mov_rdi_qword_ptr_[r14+0x30], mov_r10_qword_ptr_[rsp+8], test_rdi_rdi, je_0xf, mov_dword_ptr_[rsp+8]_0, cmp_qword_ptr_[rdi]@@ _rbp, je_0x20, mov_rsi_rbp, mov_qword_ptr_[rsp+0x20]_r10, call_0xffffffffffffce@@ 32, mov_qword_ptr_[r14+0x@@ 30]_rax, mov_dword_ptr_[rsp+8]_1, mov_r10_qword_ptr_[rsp+0x20], mov_rsi_rbp, mov_rdi_r14, mov_qword_ptr_[rsp+0x20]_r10, call_0x1e@@ 11, mov_esi_dword_ptr_[r@@ bp+0x18], mov_r10_qword_ptr_[rsp+0x20], test_esi_esi, jne_0x4c, mov_eax_dword_ptr_[rbx], mov_rsi_rbp, mov_dword_ptr_[rbp+0x@@ 18]_eax, mov_qword_ptr_[rsp+0x20]_r10, mov_rdi_qword_ptr_[r@@ 14+0x18], call_0xffffffffffffcd@@ ef, mov_qword_ptr_[r14+0x1@@ 8]_rax, mov_rdi_qword_ptr_[rbp+0x20], call_0xffffffffffffcb@@ 92, add_dword_ptr_[r@@ 14+0x@@ 20]_eax, cmp_dword_ptr_[r@@ bp]@@ _0x12, ja_0x1@@ 7f@@ e, mov_eax_dword_ptr_[rbp], lea_rdx_[rip+0x1a@@ b0@@ d], movsxd_rax_dword_ptr_[rdx+rax*4], mov_r10_qword_ptr_[rsp+0x20], add_rax_rdx, jmp_rax, lea_r8_[rip+0x@@ 1a@@ 8b@@ c], lea_rcx_[rip+0x@@ 1a@@ b@@ a8], mov_edx_0x5@@ 87, lea_rsi_[rip+0x1a@@ 75@@ 1], xor_edi_edi, call_0xffffffffffffca@@ 8a, lea_r8_[rip+0x@@ 1c@@ f8@@ f], mov_rcx_r8, jmp_0xffffffffffffff1c, lea_r8_[rip+0x@@ 1a@@ 85@@ 1], lea_rcx_[rip+0x@@ 1a@@ b@@ 78], mov_edx_0x5@@ 74, lea_rsi_[rip+0x1a@@ 7@@ 21], xor_edi_edi, call_0xffffffffffffca@@ 5a, xor_r8d_r8d, lea_rcx_[rip+0x@@ 19@@ 3c@@ d], mov_edx_0x@@ 90@@ f, lea_rsi_[rip+0x18@@ f7@@ 6], xor_edi_edi, call_0xffffffffffffb@@ 2a@@ f
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x18, mov_rbx_qword_ptr_[rdi], test_rbx_rbx, je_0x6f, mov_r14_rdx, mov_r13_rdi, mov_ebp_esi, mov_r10@@ _rcx, mov_rdx_r8, mov_r15_r9, jmp_0xe, test_rbx_rbx, je_0x50, mov_rdi_qword_ptr_[rbx], mov_r12_rbx, mov_rbx_qword_ptr_[rbx+8], cmp_dword_ptr_[rdi]@@ _ebp, jne_0xffffffffffffffef, inc@@ _word_ptr_[r@@ 14], mov_r9@@ _qword_ptr_[rsp+0x58], mov_r8_qword_ptr_[rsp+0x50], mov_rsi_r10, mov_rcx_r15, mov_qword_ptr_[rsp+8]_rdx, mov_qword_ptr_[rsp]_r10, call_0xffffffffffffe@@ 190, mov_rdi_qword_ptr_[r13], mov_rsi_r12, call_0xffffffffffffaf@@ 64, mov_qword_ptr_[r13]_rax, mov_rdx_qword_ptr_[rsp+8], mov_r10_qword_ptr_[rsp], test_rbx_rbx, jne_0xffffffffffffffb4, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
mov_rax_qword_ptr_[rsi], test_rax_rax, je_0x32, xor_edx_edx, mov_rcx_qword_ptr_[rax], mov_rax_qword_ptr_[rax+8], mov_rcx_qword_ptr_[rcx+0x@@ 30], cmp_rdx_rcx, cmovg@@ _rdx_rcx, test_rax_rax, jne_0xffffffffffffffeb, xor_eax_eax, test_rdx_rdx, sete_al, add_eax@@ _6, mov_dword_ptr_[rdi]_eax, ret, mov_eax_7, mov_dword_ptr_[rdi]_eax, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_0x28, mov_rdi_qword_ptr_[rdi+0x30], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, test_rdi_rdi, je_7, cmp_qword_ptr_[rdi]@@ _rsi, je_0x2c, mov_rsi_rbp, call_0xffffffffffffa@@ fc@@ 7, mov_qword_ptr_[rbx+0x30]_rax, mov_eax_dword_ptr_[rbp], sub_eax_3, cmp_eax_8, ja_0x7@@ a, lea_rdx_[rip+0x18@@ eb@@ c], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_eax_dword_ptr_[rsi], sub_eax_3, cmp_eax_8, ja@@ _0x70, lea_rdx_[rip+0x18@@ ec@@ 3], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_rdi_qword_ptr_[rbx+0x30], mov_rsi_rdi, call_0xffffffffffffae@@ 24, mov_qword_ptr_[rbx+0x30]_rax, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ 1d, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xffffffffffffa@@ c9@@ d
push_r15, push_r14, mov_r14_rdx, push_r13, push_r12, push_rbp, mov_rbp_rcx, push_rbx, sub_rsp_0x28, mov_r12d_dword_ptr_[r@@ si+0x28], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, test_r12d_r12d, jne_0x6d, mov_r13_r8, mov_r8d_dword_ptr_[r@@ si+0x@@ 48], mov_rbx_rsi, cmp_r8d@@ _0xf, je_0xa5, cmp_r8d@@ _0x10, je_0xd3, xor_esi_esi, mov_edi_r8d, call_0xffffffffffffa@@ 860, cmp_rax_qword_ptr_[r@@ ip+0x2@@ 2e@@ f4], je_0x2@@ 3c, cmp_rax_qword_ptr_[r@@ ip+0x2@@ 2f@@ 17], je_0x2@@ 5f, test_rax_rax, jne_0x2d, lea_r8_[rip+0x@@ 18@@ c@@ 2e], lea_rcx_[rip+0x@@ 18@@ b@@ fe], mov_edx_0x1@@ 41, lea_rsi_[rip+0x18@@ c@@ 24], xor_edi_edi, call_0xffffffffffffa@@ 950, mov_rax_qword_ptr_[rip+0x2@@ 2e@@ e1], mov_rdx_qword_ptr_[rax], mov_r12d_1, mov_dword_ptr_[r@@ 14@@ ]_edx, movzx_eax_word_ptr_[r@@ ax+8], mov_dword_ptr_[rbp]_eax, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ 68, add_rsp_0x28, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_eax_dword_ptr_[rsi+0x@@ 64], test_eax_eax, je_0x1c, mov_rsi_qword_ptr_[r@@ si+0x@@ 70], lea_rcx_[r@@ sp+0x14], lea_rdx_[rsp+0x10], mov_r8_r13, call_0xffffffffffffff@@ 08, test_eax_eax, jne_0x69, mov_dword_ptr_[r14]@@ _0xffffffff, mov_dword_ptr_[rbp]@@ _0xffffffff, jmp_0xffffffffffffffa3, mov_rdx_qword_ptr_[r@@ si+0x@@ 80], mov_rsi_qword_ptr_[r@@ si+0x10], mov_qword_ptr_[rsp+8]_rdi, call_0xffffffffffffdb@@ 88, test_rax_rax, mov_rdi_qword_ptr_[rsp+8], mov_r15_rax, je_0x1@@ f5, mov_rsi_rax, call_0xfffffffffffffb@@ af, mov_edi_dword_ptr_[r@@ 15], cmp_edi@@ _0xb, ja_0x1@@ 24, lea_rcx_[rip+0x@@ 18@@ ae@@ f], mov_edx_edi, movsxd_rax_dword_ptr_[r@@ cx+rdx*4], add_rax_rcx, jmp_rax, mov_eax_dword_ptr_[rbx+0x@@ 68], mov_r12d_1, imul_eax@@ _dword_ptr_[r@@ sp+0x10], mov_dword_ptr_[r14]_eax, mov_eax_dword_ptr_[rsp+0x14], mov_dword_ptr_[rbp]_eax, jmp_0xffffffffffffff32, call_0xffffffffffffc0@@ 90, mov_r8_rax, mov_rcx_r13, lea_rdx_[rip+0x18@@ 94@@ 6], mov_esi_0x10, xor_edi_edi, xor_eax_eax, call_0xffffffffffffa@@ c0@@ 5, jmp_0xfffffffffffffe@@ 71, mov_rcx_r13, lea_rdx_[rip+0x18@@ 9f@@ 6], mov_esi_0x10, xor_edi_edi, xor_eax_eax, call_0xffffffffffffa@@ be@@ 5, mov_dword_ptr_[r14]@@ _0xffffffff, mov_dword_ptr_[rbp]@@ _0xffffffff, jmp_0xfffffffffffffd@@ f4, mov_edi_dword_ptr_[rbx+0x@@ 48], call_0xffffffffffffa@@ 705, jmp_0xffffffffffffffa5, call_0xffffffffffffa@@ 968, mov_rcx_qword_ptr_[rbx+0x@@ 80], mov_r8_r13, lea_rdx_[rip+0x18@@ 84@@ a], xor_esi_esi, xor_eax_eax, call_0xffffffffffffb@@ 3b@@ e
push_r14, mov_r14_r8, push_r13, mov_r13_rcx, push_r12, mov_r12_rdi, push_rbp, push_rbx, mov_rbx_rsi, mov_rax_qword_ptr_[rdi], mov_rcx_qword_ptr_[r@@ si+8], mov_rsi_qword_ptr_[rax], lea_rdi_[rip+0x18@@ 95@@ a], xor_eax_eax, call_0xffffffffffffa@@ 6e@@ 9, cmp_qword_ptr_[rbx+0x@@ 38]_0, mov_rbp_rax, je_0x34, mov_rax_qword_ptr_[rip+0x2@@ 2b@@ f3], mov_r12d_1, mov_rdx_qword_ptr_[rax], mov_dword_ptr_[r13@@ ]_edx, movzx_eax_word_ptr_[r@@ ax+8], mov_dword_ptr_[r14]_eax, mov_rdi_rbp, call_0xffffffffffffa@@ 3@@ 9c, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, ret, mov_rsi_qword_ptr_[rbx+0x@@ 40], mov_rdi_r12, mov_r8_rax, mov_rcx_r14, mov_rdx_r13, call_0xfffffffffffffc@@ 38, mov_r12d_eax, jmp_0xffffffffffffffd@@ 1
push_r15, mov_r9_rcx, mov_r15_r8, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_dword_ptr_[r@@ 8]@@ _0xfffffffe, test_rdx_rdx, je_0x1@@ 42, mov_r10_rsi, mov_rbx_rdx, xor_r14d_r14d, mov_r12d_1, xor_r13d_r13d, jmp_0x39, cmp_eax_2, jne_0x23, mov_rdx_qword_ptr_[rip+0x2@@ 2b@@ 44], movzx_eax_word_ptr_[r@@ dx+8], cmp_r12d_eax, cmovl@@ _r12d_eax, lea_r13d@@ _[rax+r@@ 13-1], neg_eax, and_eax@@ _r13d, add_eax_dword_ptr_[r@@ dx], mov_r13d_eax, mov_rbx_qword_ptr_[rbx+8], test_rbx_rbx, je_0x2b, mov_rbp_qword_ptr_[rbx], mov_eax_dword_ptr_[rbp], cmp_eax_0x1@@ 2, jne_0xffffffffffffffc8, test_r14d_r14d, je_0x5b, mov_dword_ptr_[rbp+0x@@ 34]@@ _0xffffffff, mov_r14d_1, mov_rbx_qword_ptr_[rbx+8], test_rbx_rbx, jne_0xffffffffffffffdc, test_r14d_r14d, je_0xa5, mov_dword_ptr_[r@@ 9]@@ _0xffffffff, mov_dword_ptr_[r15@@ ]_0xffffffff, xor_eax_eax, mov_rsi_qword_ptr_[rsp+0x28], xor_rsi_qword_ptr_fs:[0x28], jne_0xa@@ b, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdx_qword_ptr_[r@@ 10+8], lea_rcx_[rsp+0x20], lea_r8_[rsp+0x@@ 24], mov_rsi_rbp, mov_qword_ptr_[rsp+0x18]_r9, mov_qword_ptr_[rsp+0x10]_r10, mov_qword_ptr_[rsp+8]_rdi, call_0xfffffffffffffe@@ 68, test_eax_eax, mov_rdi_qword_ptr_[rsp+8], mov_r10_qword_ptr_[rsp+0x10], mov_r9_qword_ptr_[rsp+0x18], je_0xffffffffffffff@@ 71, mov_eax_dword_ptr_[rsp+0x24], lea_edx_[rax@@ +r@@ 13-1], mov_r13d_eax, neg@@ _r13d, and_r13d@@ _edx, cmp_r12d_eax, mov_dword_ptr_[rbp+0x@@ 34]@@ _r13d, cmovl@@ _r12d_eax, add_r13d@@ _dword_ptr_[rsp+0x20], jmp_0xffffffffffffff30, mov_eax_r12d, lea_edx_[r@@ 13+r@@ 12-1], neg_eax, and_eax_edx, mov_dword_ptr_[r@@ 9]_eax, mov_dword_ptr_[r15@@ ]@@ _r12d, mov_eax_1, jmp_0xffffffffffffff5a, mov_r12d_1, xor_eax_eax, jmp_0xffffffffffffffe4, call_0xffffffffffffa@@ 73@@ 6
endbr64, ret
endbr64, push_rbp, push_rbx, mov_rbx_rdx, sub_rsp_8, mov_rbp_qword_ptr_[r@@ dx+0x18], test_rbp_rbp, je_0x22, mov_rdi_qword_ptr_[rbp], call_0xffffffffffffb0@@ ec, mov_rbp_qword_ptr_[r@@ bp+8], test_rbp_rbp, jne_0xfffffffffffffff0, mov_rbp_qword_ptr_[r@@ bx+0x18], mov_rdi_rbp, call_0xffffffffffffa@@ 32@@ 7, mov_qword_ptr_[rbx+0x18]_0, mov_qword_ptr_[rbx+0x@@ 58]_0, add_rsp_8, pop_rbx, pop_rbp, ret
push_r13, push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_8, mov_rdi_qword_ptr_[rsi], test_rdi_rdi, je_0x2c, mov_rbp_rsi, mov_r13_rdx, xor_ebx_ebx, jmp_0x11, add_rbx_8, mov_rdi_qword_ptr_[r@@ bp+r@@ bx], test_rdi_rdi, je_0x13, mov_rsi_r12, call_0xffffffffffffa@@ 15@@ f, test_eax_eax, jne_0xffffffffffffffe8, mov_rdi_qword_ptr_[r@@ 13+r@@ bx], add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_rax_rdi, pop_r13, ret
push_r15, push_r14, mov_r14_rdx, push_r13, mov_r13_rdi, push_r12, mov_r12_rcx, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0x68, mov_qword_ptr_[rsp+0x50]_r8, mov_qword_ptr_[rsp+0x58]_r9, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, lea_rax_[rsp+0xa0], mov_qword_ptr_[rsp+0x18]_rax, lea_rax_[rsp+0x30], mov_dword_ptr_[rsp+0x10]@@ _0x20, mov_qword_ptr_[rsp+0x20]_rax, mov_rbx_rax, jmp_0x2e, mov_edx_eax, add_rdx_rbx, mov_rdi_qword_ptr_[rdx], add_eax_8, mov_dword_ptr_[rsp+0x10]_eax, test_rdi_rdi, je_0x31, mov_rsi_r14, call_0xffffffffffffa0@@ c9, test_eax_eax, je_0xa2, mov_eax_dword_ptr_[rsp+0x10], cmp_eax_0x2f, jbe_0xffffffffffffff@@ d5, mov_rdx_qword_ptr_[rsp+0x18], mov_rdi_qword_ptr_[rdx], lea_rax_[rdx+8], mov_qword_ptr_[rsp+0x18]_rax, test_rdi_rdi, jne_0xffffffffffffffd3, lea_rdx_[rsp+0xc], lea_rsi_[rsp+8], mov_rdi_r13, call_0xffffffffffffa6@@ 90, mov_r15d_dword_ptr_[r@@ bp+0x10], mov_ebx_dword_ptr_[r@@ sp+8], mov_r13d_dword_ptr_[r@@ bp+8], mov_ebp@@ _dword_ptr_[rsp+0xc], call_0xffffffffffffa@@ 7f@@ b, sub_rsp_8, push_r15, mov_esi_eax, mov_r9d_ebx, push_r13, xor_eax_eax, mov_r8_r14, push_rbp, lea_rcx_[rip+0x@@ 18@@ 5d@@ c], mov_edx_5, mov_rdi_r12, call_0xffffffffffffa@@ 4b@@ 4, add_rsp_0x20, xor_eax_eax, mov_rcx_qword_ptr_[rsp+0x28], xor_rcx_qword_ptr_fs:[0x28], jne_0x22, add_rsp_0x68, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_eax_1, jmp_0xffffffffffffffd2, call_0xffffffffffffa@@ 54@@ 9
push_rbp, mov_rbp_rcx, sub_rsp_0x10, test_rdx_rdx, je_0xb5, mov_r8_rdi, mov_r9_rsi, mov_ecx_5, lea_rdi_[rip+0x18@@ b@@ 68], mov_rsi_rdx, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x39, mov_ecx_0xa, lea_rdi_[rip+0x18@@ 9@@ 98], mov_rsi_rdx, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x3f, mov_dword_ptr_[r@@ 8]_0, mov_dword_ptr_[r@@ 9]_1, mov_eax_1, add_rsp_0x10, pop_rbp, ret, mov_dword_ptr_[r@@ 8]_0, mov_dword_ptr_[r@@ 9]_0, add_rsp_0x10, mov_eax_1, pop_rbp, ret, mov_ecx_5, lea_rdi_[rip+0x18@@ 94@@ b], mov_rsi_rdx, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x48, mov_dword_ptr_[r@@ 8]_1, mov_dword_ptr_[r@@ 9]_0, add_rsp_0x10, mov_eax_1, pop_rbp, ret, call_0xffffffffffffa@@ 6d@@ 0, mov_esi_eax, lea_rcx_[rip+0x@@ 18@@ 50@@ a], xor_eax_eax, mov_edx_5, mov_rdi_rbp, call_0xffffffffffffa@@ 3@@ 98, xor_eax_eax, jmp_0xffffffffffffff7f, mov_qword_ptr_[rsp+8]_rdx, call_0xffffffffffffa@@ 6a@@ 3, mov_rdx_qword_ptr_[rsp+8], mov_esi_eax, mov_r8_rdx, xor_eax_eax, lea_rcx_[rip+0x@@ 18@@ 50@@ 3], mov_edx_5, mov_rdi_rbp, call_0xffffffffffffa@@ 36@@ 3, xor_eax_eax, jmp_0xffffffffffffff4@@ a
push_r13, mov_r13_rdi, push_r12, lea_r12_[rip+0x@@ 22@@ 90@@ 2], push_rbp, mov_rbp_r12, push_rbx, xor_ebx_ebx, sub_rsp_8, mov_rsi_qword_ptr_[rbp], mov_rdi_r13, call_0xffffffffffff9@@ ec@@ 9, test_eax_eax, je_0x52, inc_ebx, add_rbp_0x10, cmp_ebx@@ _0x11, jne_0xffffffffffffffe7, lea_rbp_[rip+0x@@ 21@@ f7@@ e], lea_rsi_[rip+0x18@@ 87@@ b], xor_ebx_ebx, jmp_0xd, mov_rsi_qword_ptr_[rbp], add_rbp_0x10, mov_rdi_r13, call_0xffffffffffff9e@@ 95, test_eax_eax, je_0x36, inc_ebx, cmp_ebx@@ _0xc, jne_0xffffffffffffffe7, xor_eax_eax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, add_rsp_8, shl_rbx_4, lea_rax_[r@@ 12+r@@ bx], pop_rbx, pop_rbp, pop_r12, pop_r13, ret, lea_rax_[rip+0x2@@ 1f@@ 11], shl_rbx_4, add_rbx_rax, mov_eax_dword_ptr_[rbx+8], cmp_eax_4, je_0x5c, ja_0x2@@ 1, cmp_eax_1, je_0x3d, cmp_eax_2, jne_0x68, lea_rax_[rip+0x2@@ 28@@ 9f], test_byte_ptr_[rbx+0x@@ c]_1, lea_rbx_[r@@ ax+0x10], cmove_rax@@ _rbx, jmp_0xffffffffffffffa0, cmp_eax_8, jne_0x4e, lea_rax_[rip+0x2@@ 28@@ c5], test_byte_ptr_[rbx+0x@@ c]_1, lea_rbx_[r@@ ax+0x10], cmove_rax@@ _rbx, jmp_0xffffffffffffff86, lea_rax_[rip+0x2@@ 28@@ 49], test_byte_ptr_[rbx+0x@@ c]_1, lea_rbx_[r@@ ax+0x10], cmove_rax@@ _rbx, jmp_0xffffffffffffff6a, lea_rax_[rip+0x2@@ 28@@ 71], test_byte_ptr_[rbx+0x@@ c]_1, lea_rbx_[r@@ ax+0x10], cmove_rax@@ _rbx, jmp_0xffffffffffffff52, xor_r8d_r8d, lea_rcx_[rip+0x@@ 19@@ 12@@ e], mov_edx_0x1@@ d7, lea_rsi_[rip+0x18@@ 7@@ 94], xor_edi_edi, call_0xffffffffffffa0@@ 3@@ 8
push_rax, pop_rax, lea_r8_[rip+0x@@ 18@@ 7@@ 9d], lea_rcx_[rip+0x@@ 190@@ b8], mov_edx_0x1@@ 57, lea_rsi_[rip+0x18@@ 76@@ e], xor_edi_edi, sub_rsp_8, call_0xffffffffffffa@@ 00@@ e
endbr64, push_rbx, mov_ecx_6, lea_rdi_[rip+0x18@@ 77@@ c], mov_rax_rsi, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], mov_rbx_rdx, seta_dl, sbb_dl_0, test_dl_dl, jne_0x2f, mov_eax_dword_ptr_[rbx+8], cmp_eax_7, je_0x67, mov_dword_ptr_[rbx+0x1@@ 0]_eax, mov_dword_ptr_[rbx+@@ 8@@ ]_7, mov_rdi_qword_ptr_[rbx+0x@@ 68], call_0xffffffffffff9d@@ 27, mov_qword_ptr_[rbx+0x@@ 68]_0, pop_rbx, ret, mov_rsi_rax, mov_ecx_5, lea_rdi_[rip+0x18@@ 26@@ 5], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0xffffffffffffffde, cmp_dword_ptr_[rbx+@@ 8]_0x20, jne_0xffffffffffffffd8, mov_eax_dword_ptr_[rbx+0x10], cmp_eax_0x20, je_0x1a, mov_dword_ptr_[rbx+0x1@@ 0]_0x20, mov_dword_ptr_[rbx+8]_eax, cmp_eax_0x22, jne_0xffffffffffffffc1, mov_dword_ptr_[rbx+0x@@ c]_1, pop_rbx, ret, call_0xffffffffffffff@@ 4@@ 0
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_r15d_dword_ptr_[r@@ dx+8], cmp_r15d@@ _0x22, je_0x9a, mov_rbp_rdi, mov_r12_rsi, mov_rbx_rdx, mov_rdx_rsi, mov_rsi_rdi, lea_rdi_[rip+0x18@@ 6c@@ 1], mov_r14d_ecx, call_0xfffffffffffffb@@ 1b, mov_rsi_rbp, mov_rdx_r12, lea_rdi_[rip+0x18@@ 6@@ bb], mov_r13_rax, call_0xfffffffffffffb0@@ 6, mov_rbp_rax, test_r13_r13, je_0x2b, mov_edx_0xa, xor_esi_esi, mov_rdi_r13, call_0xffffffffffffa0@@ ef, mov_r15d_dword_ptr_[r@@ bx+8], test_eax_eax, je_7, test_rbp_rbp, je_0x67, cmp_r15d@@ _0x22, jne_0xe, call_0xfffffffffffffeb@@ 7, test_rax_rax, je_0x55, movabs_rax_0x1@@ 0000@@ 00@@ 22, mov_qword_ptr_[rbx+8]_rax, mov_dword_ptr_[rbx+0x1@@ 0]@@ _r15d, add_rsp_8, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_r8_[rip+0x@@ 18@@ 25@@ 1], lea_rcx_[rip+0x@@ 18@@ f@@ 12], mov_edx_0x2@@ d2, lea_rsi_[rip+0x18@@ 5@@ f0], xor_edi_edi, call_0xffffffffffff9e@@ 94, cmp_r15d@@ _r14d, je_0xffffffffffffff@@ 9e, mov_dword_ptr_[rbx+0x1@@ 0]@@ _r15d, mov_dword_ptr_[rbx+@@ 8]_r14d, add_rsp_8, mov_eax_1, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
push_r12, push_rbp, push_rbx, mov_rbp_qword_ptr_[rdi], test_rbp_rbp, je_0x46, mov_r12_qword_ptr_[r@@ bp], mov_rbx_rdi, mov_r8_qword_ptr_[r@@ 12+8], mov_ecx_dword_ptr_[r@@ 12], lea_rdx_[rip+0x18@@ 5e@@ b], mov_esi_0x80, xor_edi_edi, xor_eax_eax, call_0xffffffffffffa@@ 2e@@ 4, mov_rax_qword_ptr_[rbp+8], mov_rdi_rbp, mov_qword_ptr_[rbx]_rax, call_0xffffffffffffa0@@ e5, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, lea_r8_[rip+0x@@ 18@@ 5c@@ a], lea_rcx_[rip+0x@@ 18@@ f0@@ a], mov_edx_0x1@@ 64, lea_rsi_[rip+0x18@@ 550], xor_edi_edi, call_0xffffffffffff9d@@ f@@ 4
push_r13, mov_r13_rdi, lea_rdi_[r@@ si+0x@@ 60], push_r12, mov_r12_rdx, push_rbp, mov_rbp_rcx, push_rbx, mov_rbx_rsi, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xffffffffffffff@@ 56, mov_rax_qword_ptr_[rbx+0x60], test_rax_rax, je_0x7a, mov_rax_qword_ptr_[rax], mov_eax_dword_ptr_[rax], cmp_eax_3, je_0x30, cmp_eax_0xb, je_0x93, cmp_eax_7, jne_0xaa, mov_eax_dword_ptr_[rbx+8], cmp_eax@@ _0xe, je_0x5e, mov_dword_ptr_[rbx+0x1@@ 0]_eax, mov_dword_ptr_[rbx+@@ 8]@@ _0xe, mov_eax_1, jmp_0x1c, mov_eax_dword_ptr_[rbx+8], cmp_eax@@ _0x18, je_0x42, mov_dword_ptr_[rbx+@@ 8]@@ _0x18, mov_dword_ptr_[rbx+0x1@@ 0]_eax, mov_eax_1, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0xad, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_eax_dword_ptr_[rbx+8], cmp_eax_7, jne_0xa, call_0xfffffffffffffc@@ f8, mov_dword_ptr_[rbx+0x1@@ 0]_eax, mov_dword_ptr_[rbx+@@ 8@@ ]_7, mov_eax_1, jmp_0xffffffffffffffb8, mov_eax_dword_ptr_[rbx+8], cmp_eax_0x1@@ a, je_0xffffffffffffffda, mov_dword_ptr_[rbx+0x1@@ 0]_eax, mov_dword_ptr_[rbx+@@ 8]@@ _0x1a, mov_eax_1, jmp_0xffffffffffffff98, lea_rdx_[rsp+4], mov_rsi_rsp, mov_rdi_r13, call_0xffffffffffffa0@@ 5d, mov_r13d_dword_ptr_[r@@ sp+4], mov_ebx_dword_ptr_[r@@ sp], call_0xffffffffffffa@@ 1d0, sub_rsp_8, push_r13, mov_esi_eax, mov_edx_5, xor_eax_eax, mov_r9d_ebx, mov_r8_r12, lea_rcx_[rip+0x@@ 180@@ 77], mov_rdi_rbp, call_0xffffffffffff9e@@ 8c, pop_rax, pop_rdx, xor_eax_eax, jmp_0xffffffffffffff4a, call_0xffffffffffff9f@@ 4@@ e
push_rbp, push_rbx, sub_rsp_8, test_rsi_rsi, je_0x3f, mov_r8_qword_ptr_[r@@ si+8], mov_ecx_dword_ptr_[rsi], mov_rbx_rdi, mov_rbp_rsi, lea_rdx_[rip+0x18@@ 4@@ 48], mov_esi_0x80, xor_edi_edi, xor_eax_eax, call_0xffffffffffffa@@ 119, mov_rdi_qword_ptr_[rbx], mov_rsi_rbp, call_0xffffffffffff9d@@ 7e, mov_qword_ptr_[rbx]_rax, add_rsp_8, pop_rbx, pop_rbp, ret, lea_r8_[rip+0x@@ 17@@ a@@ 23], lea_rcx_[rip+0x@@ 18@@ c9@@ a], mov_edx_0x1@@ 72, lea_rsi_[rip+0x18@@ 38@@ 8], xor_edi_edi, call_0xffffffffffff9c@@ 2@@ c
push_r15, mov_r15_rdi, lea_rdi_[rip+0x18@@ 3@@ fd], push_r14, mov_r14_rsi, push_r13, mov_r13_rcx, mov_ecx_6, push_r12, push_rbp, push_rbx, sub_rsp_0x68, mov_qword_ptr_[rsp+8]_r9, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x58]_rax, xor_eax_eax, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta@@ _r12b, sbb@@ _r12@@ b@@ _0, movsx@@ _r12d@@ _r12b, test_r12d_r12d, jne_0x2@@ 9f, cmp_dword_ptr_[r@@ 8+@@ 8@@ ]_7, mov_rbx_r8, je_0x29, mov_rax_qword_ptr_[rsp+0x58], xor_rax_qword_ptr_fs:[0x28], jne_0x3@@ 78, add_rsp_0x68, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rbp_rdx, mov_ecx_0xe, mov_rdx_r8, mov_rsi_r13, mov_rdi_rbp, call_0xfffffffffffffc@@ 2f, test_eax_eax, je_0x2@@ 58, mov_rdx_r13, mov_rsi_rbp, lea_rdi_[rip+0x18@@ 36@@ e], call_0xfffffffffffff76@@ 5, mov_rdx_r13, mov_rsi_rbp, lea_rdi_[rip+0x18@@ 35@@ 2], mov_qword_ptr_[rsp+0x18]_rax, call_0xfffffffffffff74@@ e, cmp_qword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rsp+0x10]_rax, je_0x2@@ ae, cmp_qword_ptr_[rsp+0x10]_0, je_0x2@@ d2, mov_rdx_r13, mov_rsi_rbp, lea_rdi_[rip+0x18@@ 32@@ d], call_0xfffffffffffff7@@ 1f, mov_r11_rax, test_rax_rax, je_0x2@@ 04, mov_rdx_r13, mov_rsi_rbp, lea_rdi_[rip+0x18@@ 32@@ 5], mov_qword_ptr_[rsp+0x4@@ 8]_r11, call_0xfffffffffffff6f@@ c, mov_rdx_r13, mov_rsi_rbp, lea_rdi_[rip+0x18@@ 3@@ 15], mov_qword_ptr_[rsp+0x40]_rax, call_0xfffffffffffff6e@@ 5, mov_rdx_r13, mov_rsi_rbp, lea_rdi_[rip+0x18@@ 6@@ 68], mov_qword_ptr_[rsp+0x38]_rax, call_0xfffffffffffff6c@@ e, mov_rdx_r13, mov_rsi_rbp, lea_rdi_[rip+0x18@@ 2f@@ 8], mov_qword_ptr_[rsp+8]_rax, call_0xfffffffffffff6b@@ 7, mov_rdx_r13, mov_rsi_rbp, lea_rdi_[rip+0x18@@ 2@@ ea], mov_qword_ptr_[rsp+0x30]_rax, call_0xfffffffffffff6a@@ 0, mov_rdx_r13, mov_rsi_rbp, lea_rdi_[rip+0x18@@ 2e@@ 4], mov_qword_ptr_[rsp+0x20]_rax, call_0xfffffffffffff68@@ 9, mov_rdx_r13, mov_rsi_rbp, lea_rdi_[rip+0x18@@ 2d@@ b], mov_qword_ptr_[rsp+0x28]_rax, call_0xfffffffffffff67@@ 2, mov_rdx_r13, mov_rsi_rbp, lea_rdi_[rip+0x18@@ 2d@@ 4], mov_r15_rax, call_0xfffffffffffff65@@ d, mov_rdx_r13, mov_rsi_rbp, lea_rdi_[rip+0x18@@ 2d@@ 3], mov_r14_rax, call_0xfffffffffffff64@@ 8, mov_rsi_qword_ptr_[rbx+0x@@ 58], mov_edi_7, mov_r13_rax, call_0xffffffffffffbd@@ e7, mov_rdi_qword_ptr_[rsp+0x18], mov_rbp_rax, call_0xffffffffffff98@@ ca, mov_qword_ptr_[rbp+8]_rax, mov_rdi_qword_ptr_[rsp+0x10], call_0xffffffffffff98@@ bc, mov_qword_ptr_[rbp+0x@@ 38]_rax, mov_r11@@ _qword_ptr_[rsp+0x48], mov_rdi_r11, call_0xffffffffffff98@@ ab, mov_qword_ptr_[rbp+0x@@ 40]_rax, mov_r9_qword_ptr_[rsp+0x40], mov_rdi_r9, call_0xffffffffffff98@@ 9a, mov_qword_ptr_[rbp+0x@@ 68]_rax, mov_r8_qword_ptr_[rsp+0x38], mov_rdi_r8, call_0xffffffffffff9@@ 889, mov_rcx_qword_ptr_[rsp+0x30], mov_qword_ptr_[rbp+0x@@ 70]_rax, xor_eax_eax, cmp_qword_ptr_[rsp+8]_0, setne_al, test_rcx_rcx, mov_dword_ptr_[rbp+0x@@ 2c]_eax, mov_r10_qword_ptr_[rsp+0x28], je_0x17, movzx_eax_byte_ptr_[rcx], sub_eax@@ _0x31, je_0x11d, xor_r12d_r12d, test_eax_eax, sete_r12b, cmp_qword_ptr_[rsp+0x20]_0, mov_dword_ptr_[rbp+0x@@ 28]@@ _r12d, je_9, mov_dword_ptr_[rbp+0x@@ 30]_1, test_r10_r10, je_0xe, mov_rdi_r10, call_0xffffffffffff98@@ 33, mov_qword_ptr_[rbp+0x@@ 48]_rax, test_r15_r15, je_0xe, mov_rdi_r15, call_0xffffffffffff98@@ 22, mov_qword_ptr_[rbp+0x@@ 50]_rax, test_r14_r14, je_0xe, mov_rdi_r14, call_0xffffffffffff98@@ 11, mov_qword_ptr_[rbp+0x@@ 58]_rax, test_r13_r13, je_0xe, mov_rdi_r13, call_0xffffffffffff98@@ 00, mov_qword_ptr_[rbp+0x@@ 60]_rax, lea_rdi_[rbx+0x@@ 60], mov_rsi_rbp, call_0xfffffffffffffc@@ d0, mov_rbx_qword_ptr_[r@@ bx+0x@@ 58], mov_rsi_rbp, mov_rdi_qword_ptr_[rbx+0x28], mov_r12d_1, call_0xffffffffffff9b@@ 7a, mov_qword_ptr_[rbx+0x28]_rax, jmp_0xfffffffffffffd@@ 7a, xor_r12d_r12d, jmp_0xfffffffffffffd@@ 6e, mov_r12d_1, jmp_0xfffffffffffffd@@ 63, mov_rsi_qword_ptr_[rsp+0x10], mov_ecx_8, lea_rdi_[rip+0x18@@ 11@@ b], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0xfffffffffffffd@@ e8, lea_rsi_[rsp+0x50], lea_rdx_[rsp+0x@@ 54], mov_rdi_r15, call_0xffffffffffff9c@@ 73, mov_ebp_dword_ptr_[rsp+0x@@ 54], mov_ebx_dword_ptr_[rsp+0x@@ 50], call_0xffffffffffff9d@@ e6, push_r14, mov_esi_eax, lea_rax_[rip+0x@@ 180@@ d4], push_rax, mov_edx_5, xor_eax_eax, mov_rdi_qword_ptr_[rsp+0x18], mov_r9d_ebp, mov_r8d_ebx, lea_rcx_[rip+0x@@ 17@@ cb@@ 4], call_0xffffffffffff9a@@ 9c, pop_rax, pop_rdx, jmp_0xfffffffffffffc@@ ee, movzx_eax_byte_ptr_[r@@ cx+1], jmp_0xfffffffffffffee5, lea_rsi_[rsp+0x50], lea_rdx_[rsp+0x@@ 54], mov_rdi_r15, call_0xffffffffffff9c@@ 13, mov_ebp_dword_ptr_[rsp+0x@@ 54], mov_ebx_dword_ptr_[rsp+0x@@ 50], call_0xffffffffffff9d@@ 86, mov_esi_eax, push_r14, lea_rax_[rip+0x@@ 180@@ 6f], jmp_0xffffffffffffffa0, lea_rsi_[rsp+0x50], lea_rdx_[rsp+0x@@ 54], mov_rdi_r15, call_0xffffffffffff9b@@ e3, mov_ebp_dword_ptr_[rsp+0x@@ 54], mov_ebx_dword_ptr_[rsp+0x@@ 50], call_0xffffffffffff9d@@ 56, mov_esi_eax, push_r14, lea_rax_[rip+0x@@ 180@@ 35], jmp_0xffffffffffffff70, call_0xffffffffffff9a@@ f@@ 1
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x38, mov_qword_ptr_[rsp]_rdi, mov_qword_ptr_[rsp+8]_r9, mov_r14d_dword_ptr_[r@@ 8+8], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, lea_eax_[r@@ 14@@ -7], cmp_eax_0x1@@ 3, ja_0x1@@ 76, mov_r12_rdx, lea_rdx_[rip+0x18@@ 63@@ e], movsxd_rax_dword_ptr_[rdx+rax*4], mov_rbp_rsi, add_rax_rdx, mov_r13_rcx, mov_rbx_r8, jmp_rax, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x28], xor_rbx_qword_ptr_fs:[0x28], jne_0x3@@ 18, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xffffffffffff96@@ 1@@ 0
push_r15, lea_r15_[rip+0x@@ 17@@ bf@@ b], push_r14, mov_r14_r8, push_r13, push_r12, mov_r12_rcx, mov_ecx_0xc, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rsi, sub_rsp_0x48, mov_qword_ptr_[rsp+8]_rdi, mov_qword_ptr_[rsp+0x10]_r9, mov_rdi_r15, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x1f, mov_ecx_9, lea_rdi_[rip+0x17@@ bb@@ 6], mov_rsi_rbx, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_dl, sbb_dl_0, xor_eax_eax, test_dl_dl, jne_0xb, xor_eax_eax, cmp_dword_ptr_[r@@ 14+@@ 8@@ ]_7, je_0x2e, mov_rbx_qword_ptr_[rsp+0x38], xor_rbx_qword_ptr_fs:[0x28], jne_0x1@@ bb, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_ecx_8, mov_rdx_r14, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffff@@ 34@@ 2, mov_r13d_eax, mov_eax_1, test_r13d_r13d, je_0xffffffffffffff@@ b6, mov_rdx_r12, mov_rsi_rbp, lea_rdi_[rip+0x17@@ a@@ 7c], call_0xffffffffffffee@@ 73, mov_rdx_r12, mov_rsi_rbp, lea_rdi_[rip+0x17@@ a@@ 60], mov_r13_rax, call_0xffffffffffffee@@ 5e, mov_rdx_r12, mov_rsi_rbp, lea_rdi_[rip+0x17@@ a5@@ a], mov_qword_ptr_[rsp+0x18]_rax, call_0xffffffffffffee@@ 47, mov_rdx_r12, mov_rsi_rbp, lea_rdi_[rip+0x17@@ b0@@ e], mov_qword_ptr_[rsp+0x20]_rax, call_0xffffffffffffee@@ 30, mov_rdx_r12, mov_rsi_rbp, lea_rdi_[rip+0x17@@ db@@ 3], mov_qword_ptr_[rsp+0x28]_rax, call_0xffffffffffffee@@ 19, mov_r12_rax, test_r13_r13, je_0xb6, mov_rsi_rbx, mov_ecx_0xc, mov_rdi_r15, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], mov_rsi_qword_ptr_[r14+0x@@ 58], seta_al, sbb_al_0, test_al_al, jne_0x80, mov_edi_5, call_0xffffffffffffb5@@ 99, mov_rbp_rax, mov_rdi_r13, call_0xffffffffffff90@@ 7e, mov_qword_ptr_[rbp+8]_rax, mov_rdi_qword_ptr_[rsp+0x18], call_0xffffffffffff90@@ 70, mov_qword_ptr_[rbp+0x@@ 30]_rax, mov_rdi_qword_ptr_[rsp+0x20], call_0xffffffffffff90@@ 62, mov_qword_ptr_[rbp+0x@@ 38]_rax, mov_rdi_qword_ptr_[rsp+0x28], call_0xffffffffffff90@@ 54, test_r12_r12, mov_qword_ptr_[rbp+0x@@ 40]_rax, setne_al, movzx_eax_al, mov_dword_ptr_[rbp+0x@@ 28]_eax, lea_rdi_[r@@ 14+0x@@ 60], mov_rsi_rbp, call_0xfffffffffffff5@@ 18, mov_rbx_qword_ptr_[r@@ 14+0x@@ 58], mov_rsi_rbp, mov_rdi_qword_ptr_[rbx+0x28], call_0xffffffffffff9@@ 3c8, mov_qword_ptr_[rbx+0x28]_rax, mov_eax_1, jmp_0xfffffffffffffea@@ e, mov_edi_6, call_0xffffffffffffb5@@ 1b, mov_rbp_rax, jmp_0xffffffffffffff82, mov_rdi_qword_ptr_[rsp+8], lea_rdx_[rsp+0x@@ 34], lea_rsi_[rsp+0x30], call_0xffffffffffff94@@ d9, mov_r13d_dword_ptr_[rsp+0x@@ 34], mov_r12d_dword_ptr_[rsp+0x@@ 30], call_0xffffffffffff96@@ 4a, push_rbx, mov_esi_eax, lea_rax_[rip+0x@@ 17@@ 9@@ 34], push_rax, mov_edx_5, xor_eax_eax, mov_rdi_qword_ptr_[rsp+0x20], mov_r9d_r13d, mov_r8d_r12d, lea_rcx_[rip+0x@@ 17@@ 5@@ 19], call_0xffffffffffff9@@ 30@@ 1, pop_rax, pop_rdx, xor_eax_eax, jmp_0xfffffffffffffe@@ 3c, call_0xffffffffffff9@@ 3c@@ 3
push_r15, mov_r9_rdi, lea_rdi_[rip+0x17@@ d@@ 7c], push_r14, push_r13, push_r12, mov_r12_rcx, mov_ecx_0xa, push_rbp, mov_rbp_rsi, mov_rsi_r9, push_rbx, sub_rsp_0x68, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta@@ _bl, sbb@@ _bl@@ _0, movsx_ebx@@ _bl, test_ebx_ebx, jne_0x3@@ 65, cmp_dword_ptr_[r12+@@ 8]_0xc, jne_0x3@@ 59, mov_r15_rdx, mov_rsi_rbp, lea_rdi_[rip+0x17@@ 8a@@ 7], mov_r13_r8, call_0xffffffffffffec@@ 9b, mov_rsi_rbp, mov_rdx_r15, lea_rdi_[rip+0x17@@ 97@@ 4], mov_r14_rax, call_0xffffffffffffec@@ 86, mov_rsi_rbp, mov_rdx_r15, lea_rdi_[rip+0x17@@ 96@@ 9], mov_qword_ptr_[rsp+0x40]_rax, call_0xffffffffffffec@@ 6f, mov_rsi_rbp, mov_rdx_r15, lea_rdi_[rip+0x17@@ 95@@ 9], mov_qword_ptr_[rsp+0x38]_rax, call_0xffffffffffffec@@ 58, mov_rsi_rbp, mov_rdx_r15, lea_rdi_[rip+0x17@@ 94@@ b], mov_qword_ptr_[rsp+0x30]_rax, call_0xffffffffffffec@@ 41, mov_rsi_rbp, mov_rdx_r15, lea_rdi_[rip+0x17@@ 93@@ f], mov_qword_ptr_[rsp+0x28]_rax, call_0xffffffffffffec@@ 2a, mov_rsi_rbp, mov_rdx_r15, lea_rdi_[rip+0x17@@ 93@@ 9], mov_qword_ptr_[rsp+0x58]_rax, call_0xffffffffffffec@@ 13, mov_rsi_rbp, mov_rdx_r15, lea_rdi_[rip+0x17@@ 93@@ 5], mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffeb@@ fc, mov_rsi_rbp, mov_rdx_r15, lea_rdi_[rip+0x17@@ c@@ 1a], mov_qword_ptr_[rsp+8]_rax, call_0xffffffffffffe@@ be@@ 5, mov_rsi_rbp, mov_rdx_r15, lea_rdi_[rip+0x17@@ 90@@ d], mov_qword_ptr_[rsp+0x48]_rax, call_0xffffffffffffe@@ bc@@ e, mov_rsi_rbp, mov_rdx_r15, lea_rdi_[rip+0x17@@ 8@@ fe], mov_qword_ptr_[rsp+0x50]_rax, call_0xffffffffffffe@@ bb@@ 7, mov_rdx_r15, mov_rsi_rbp, lea_rdi_[rip+0x17@@ 8e@@ c], mov_qword_ptr_[rsp+0x18]_rax, call_0xffffffffffffe@@ ba@@ 0, mov_rsi_qword_ptr_[r12+0x@@ 58], test_r14_r14, mov_qword_ptr_[rsp+0x20]_rax, mov_edi@@ _0xc, lea_rax_[rip+0x16@@ b7@@ 7], cmove@@ _r14@@ _rax, call_0xffffffffffffb@@ 32@@ e, mov_qword_ptr_[r12+0x@@ 70]_rax, mov_rdi_r14, mov_rbp_rax, call_0xffffffffffff8e@@ 0e, mov_qword_ptr_[rbp+8]_rax, mov_eax_dword_ptr_[r12+8], cmp_eax_0xd, je_0x2@@ 95, mov_r11@@ _qword_ptr_[rsp+0x40], mov_dword_ptr_[r12+0x1@@ 0]_eax, test_r11_r11, mov_dword_ptr_[r12+@@ 8]@@ _0xd, mov_rdx_qword_ptr_[rsp+0x20], mov_r8_qword_ptr_[rsp+0x28], mov_r9_qword_ptr_[rsp+0x30], mov_r10_qword_ptr_[rsp+0x38], je_0x2@@ 4d, mov_ecx_4, lea_rdi_[rip+0x16@@ d@@ 2c], mov_rsi_r11, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x1@@ cf, mov_ecx_6, lea_rdi_[rip+0x17@@ 84@@ d], mov_rsi_r11, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x2@@ 11, movabs_rax_0x1@@ 0000@@ 0001, mov_qword_ptr_[rbp+0x@@ 28]_rax, mov_dword_ptr_[rbp+0x@@ 30]_0, xor_eax_eax, test_r10_r10, je_0x18, movzx_eax_byte_ptr_[r@@ 10], sub_eax@@ _0x31, jne_7, movzx_eax_byte_ptr_[r@@ 10+1], test_eax_eax, sete_al, movzx_eax_al, mov_dword_ptr_[rbp+0x@@ 38]_eax, xor_eax_eax, test_r9_r9, je_0x18, movzx_eax_byte_ptr_[r@@ 9], sub_eax@@ _0x31, jne_7, movzx_eax_byte_ptr_[r@@ 9+1], test_eax_eax, sete_al, movzx_eax_al, mov_dword_ptr_[rbp+0x@@ 34]_eax, xor_eax_eax, test_rdx_rdx, je_0x16, movzx_eax_byte_ptr_[rdx], sub_eax@@ _0x31, jne_6, movzx_eax_byte_ptr_[rdx+1], test_eax_eax, sete_al, movzx_eax_al, mov_dword_ptr_[rbp+0x@@ 3c]_eax, test_r8_r8, je_0x25, cmp_byte_ptr_[r@@ 8]@@ _0x31, jne_0x1f, cmp_byte_ptr_[r@@ 8+@@ 1]_0, jne_0x18, mov_eax_dword_ptr_[rbp+0x@@ 2c], test_eax_eax, je_0x2@@ 31, mov_dword_ptr_[rbp+0x@@ 34]_1, mov_rax_qword_ptr_[rsp+0x18], test_rax_rax, je_0x18, mov_rbx_rax, movzx_eax_byte_ptr_[rax], sub_eax@@ _0x31, jne_6, movzx_eax_byte_ptr_[rbx+1], xor_ebx_ebx, test_eax_eax, sete_bl, mov_dword_ptr_[rbp+0x@@ 40]@@ _ebx, mov_rdx_qword_ptr_[rsp+0x10], lea_rsi_[rbp+0x@@ 48], lea_rdi_[rbp+0x@@ 44], mov_rcx_r13, call_0xffffffffffffeb@@ 9d, test_eax_eax, je_0xbe, mov_rsi_qword_ptr_[rsp+8], test_rsi_rsi, je_0x1@@ a8, mov_ecx_5, lea_rdi_[rip+0x17@@ 7@@ 4c], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x12@@ d, mov_dword_ptr_[rbp+0x@@ 4c]_1, mov_rcx_qword_ptr_[rsp+0x48], mov_eax_0xffffffff, test_rcx_rcx, je_0x11, mov_edx_0xa, xor_esi_esi, mov_rdi_rcx, call_0xffffffffffff8@@ fc@@ 7, mov_rbx_qword_ptr_[rsp+0x@@ 50], mov_byte_ptr_[rbp+0x@@ 50@@ ]_al, mov_eax_0xffffffff, test_rbx_rbx, je_0x11, mov_edx_0xa, xor_esi_esi, mov_rdi_rbx, call_0xffffffffffff8@@ fa@@ 6, mov_byte_ptr_[rbp+0x@@ 5@@ 1]_al, mov_rdi_r14, call_0xffffffffffff8c@@ 3b, mov_qword_ptr_[rbp+8]_rax, mov_rax_qword_ptr_[r12+0x@@ 60], mov_rbx_qword_ptr_[rax], mov_eax_dword_ptr_[rbx], cmp_eax_0xf, je_0x1@@ 35, ja@@ _0x7f, dec_eax, cmp_eax_1, ja_0x1@@ 61, mov_rdi_qword_ptr_[rbx+0x@@ 60], mov_rsi_rbp, call_0xffffffffffff8@@ fa@@ b, mov_qword_ptr_[rbx+0x@@ 60]_rax, mov_eax_1, jmp_7, xor_eax_eax, add_rsp_0x68, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, movabs_rax_0x1@@ 00000000, cmp_qword_ptr_[rsp+0x@@ 58]_0, mov_qword_ptr_[rbp+0x@@ 28]_rax, je_0x54, mov_rcx_qword_ptr_[rsp+0x58], movzx_eax_byte_ptr_[rcx], sub_eax@@ _0x31, je_0xff, test_eax_eax, sete_al, movzx_eax_al, mov_dword_ptr_[rbp+0x@@ 30]_eax, jmp_0xfffffffffffffe@@ 38, cmp_eax_0x1@@ 1, jne_0x@@ e6, mov_rdi_qword_ptr_[rbx+0x50], mov_rsi_rbp, call_0xffffffffffff8f@@ 30, mov_qword_ptr_[rbx+0x@@ 50]_rax, mov_eax_1, jmp_0xffffffffffffff8c, mov_qword_ptr_[rbp+0x@@ 28]_1, mov_dword_ptr_[rbp+0x@@ 30]_0, jmp_0xfffffffffffffd@@ fb, call_0xffffffffffffeca@@ 8, mov_rsi_qword_ptr_[rsp+8], mov_ecx_6, lea_rdi_[rip+0x17@@ 60@@ a], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x16, mov_dword_ptr_[rbp+0x@@ 4c@@ ]_2, jmp_0xfffffffffffffebd, mov_rsi_qword_ptr_[rsp+8], mov_ecx_9, lea_rdi_[rip+0x17@@ 5@@ e0], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x16, mov_dword_ptr_[rbp+0x@@ 4c@@ ]_3, jmp_0xfffffffffffffe@@ 8d, mov_dword_ptr_[rbp+0x@@ 4c]_0, jmp_0xfffffffffffffe@@ 79, mov_rdi_qword_ptr_[rbx+0x@@ 58], mov_rsi_rbp, call_0xffffffffffff8e@@ 89, mov_qword_ptr_[rbx+0x@@ 58]_rax, mov_eax_1, jmp_0xfffffffffffffee5, mov_dword_ptr_[rbp+0x@@ 3c]_1, jmp_0xfffffffffffffdd@@ 9, movzx_eax_byte_ptr_[r@@ cx+1], jmp_0xffffffffffffff03, xor_r8d_r8d, lea_rcx_[rip+0x@@ 17@@ c@@ 1d], mov_edx_0x4@@ ec, lea_rsi_[rip+0x17@@ 36@@ b], xor_edi_edi, call_0xffffffffffff8c@@ 0@@ f
push_r15, mov_ecx_5, push_r14, push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x48, mov_r13_qword_ptr_[r@@ di+0x@@ 48], lea_rdi_[rip+0x17@@ 53@@ 6], mov_rsi_r13, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], mov_ecx_8, lea_rdi_[rip+0x17@@ 3c@@ 7], mov_rsi_r13, seta@@ _r14b, sbb@@ _r14@@ b@@ _0, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], mov_rdi_r12, movsx@@ _r14d@@ _r14b, seta@@ _bl, sbb@@ _bl@@ _0, call_0xffffffffffffea@@ 31, mov_qword_ptr_[rsp+8]_rax, movsx_ebx@@ _bl, test_rax_rax, je_0x1@@ c9, mov_rsi_qword_ptr_[rbp+0x@@ 58], mov_edi_0xd, call_0xffffffffffffaf@@ 22, mov_rdi_r12, mov_r13_rax, call_0xffffffffffff8a@@ 07, mov_qword_ptr_[r13+0x@@ 50]_rax, test_ebx_ebx, jne_0x13@@ c, mov_ecx_5, lea_rdi_[rip+0x17@@ 4d@@ 2], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], mov_r15_r12, seta_al, sbb_al_0, xor_ebp_ebp, test_al_al, je_0x12@@ 9, mov_rdi_r15, call_0xffffffffffffe@@ 9d0, test_rax_rax, je_0x48, mov_dword_ptr_[r13+0x@@ 2c]_1, mov_edx_dword_ptr_[rax+8], mov_dword_ptr_[r13+0x@@ 4@@ 8]_edx, mov_eax_dword_ptr_[rax+0xc], mov_dword_ptr_[r13+0x@@ 28]_eax, cmp_edx@@ _0x15, jbe_0x@@ 9d, lea_r8_[rip+0x@@ 16@@ f@@ 58], lea_rcx_[rip+0x@@ 17@@ bd@@ 9], mov_edx_0x2@@ 63, lea_rsi_[rip+0x17@@ 25@@ 7], xor_edi_edi, call_0xffffffffffff8a@@ fb, test_r14d_r14d, je_0x1@@ f5, lea_rsi_[rip+0x17@@ 4e8], mov_rdi_r15, call_0xffffffffffff8d@@ 3d, test_eax_eax, jne_0x@@ d6, lea_rsi_[rip+0x17@@ 49@@ 6], mov_rdi_r15, call_0xffffffffffff8d@@ 26, test_eax_eax, jne_0x@@ bf, lea_rsi_[rip+0x17@@ 48@@ a], mov_rdi_r15, call_0xffffffffffff8d@@ 0f, test_eax_eax, je_0x2@@ 97, mov_dword_ptr_[r13+0x@@ 48]@@ _0x13, mov_dword_ptr_[r13+0x@@ 3c]_1, mov_dword_ptr_[r13+0x@@ 28]_1, mov_rdi_rbp, call_0xffffffffffff87@@ dd, mov_r8d_dword_ptr_[r@@ 13+0x@@ 48], xor_edi_edi, xor_eax_eax, mov_rcx_r12, lea_rdx_[rip+0x17@@ 4@@ 58], mov_esi_0x80, call_0xffffffffffff8f@@ 11, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x3@@ f0, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, mov_rax_r13, pop_r13, pop_r14, pop_r15, ret, mov_r15_r12, xor_ebp_ebp, jmp_0xfffffffffffffee8, lea_rdi_[rip+0x17@@ 38@@ c], call_0xffffffffffff88@@ a9, mov_r15_rax, mov_rbp_rax, jmp_0xfffffffffffffe@@ cb, lea_rdi_[r@@ 15+@@ 5], lea_rsi_[rip+0x17@@ 40@@ 2], call_0xffffffffffff8c@@ 55, test_eax_eax, je_0x1@@ 46, mov_dword_ptr_[r13+0x@@ 48]@@ _0x11, mov_dword_ptr_[r13+0x@@ 34]_1, mov_dword_ptr_[r13+0x@@ 28]_1, jmp_0xffffffffffffff50, mov_esi_0x2e, mov_rdi_r12, call_0xffffffffffff8c@@ 00, mov_r15_r12, test_rax_rax, je_0x1@@ 85, mov_rsi_r15, xor_edi_edi, call_0xffffffffffff8a@@ ca, mov_r13_rax, lea_rax_[rsp+0x30], mov_qword_ptr_[rsp+0x18]_rax, lea_rax_[rsp+0x28], mov_qword_ptr_[rsp+0x10]_rax, jmp_0x4d, mov_r8_qword_ptr_[rsp+0x30], xor_edi_edi, mov_rcx_r15, lea_rdx_[rip+0x17@@ 2d@@ 6], mov_esi_0x80, xor_eax_eax, call_0xffffffffffff8e@@ 20, mov_r15_qword_ptr_[rsp+0x30], mov_rdx_qword_ptr_[rip+0x20@@ ef@@ 7], mov_rsi_r15, mov_rdi_r13, call_0xffffffffffff8d@@ 99, test_rax_rax, jne_0x2e, mov_rdi_r13, mov_rsi_r15, call_0xffffffffffff8a@@ 69, mov_r13_rax, mov_rax_qword_ptr_[rbp+0x@@ 58], mov_rcx_qword_ptr_[rsp+0x18], mov_rdi_qword_ptr_[r@@ ax+0x38], mov_rdx_qword_ptr_[rsp+0x10], mov_rsi_r15, call_0xffffffffffff87@@ 7c, test_eax_eax, jne_0xffffffffffffff9d, mov_rdi_r13, call_0xffffffffffff87@@ 00, mov_rax_qword_ptr_[rsp+8], cmp_r15_rax, cmove@@ _r15@@ _r12, mov_rdi_rax, call_0xffffffffffff86@@ 6c, mov_r12_r15, jmp_0xfffffffffffffd@@ 79, lea_rsi_[rip+0x17@@ 27@@ b], mov_rdi_r15, call_0xffffffffffff8b@@ 4e, test_eax_eax, jne_0x1c, mov_ecx_5, lea_rdi_[rip+0x17@@ 2e@@ 6], mov_rsi_r15, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x45, lea_rsi_[r@@ 15+4], lea_rdi_[rip+0x17@@ 23@@ d], xor_eax_eax, call_0xffffffffffff8@@ 93@@ e, mov_r15_rax, mov_rbp_rax, jmp_0xfffffffffffffd@@ cc, mov_dword_ptr_[r13+0x@@ 48]@@ _0x12, mov_dword_ptr_[r13+0x@@ 38]_1, mov_dword_ptr_[r13+0x@@ 28]_1, jmp_0xfffffffffffffe@@ 10, lea_rsi_[rip+0x17@@ 20@@ a], mov_rdi_r15, call_0xffffffffffff8a@@ de, test_eax_eax, jne_0x20, mov_ecx_6, lea_rdi_[rip+0x17@@ 23@@ b], mov_rsi_r15, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x@@ cf, lea_rsi_[r@@ 15+@@ 5], lea_rdi_[rip+0x17@@ 1d@@ c], xor_eax_eax, call_0xffffffffffff88@@ ca, mov_r15_rax, mov_rbp_rax, jmp_0xfffffffffffffd@@ 58, mov_rdx_r12, mov_rsi_r13, lea_rdi_[rip+0x16@@ b@@ 1b], call_0xffffffffffff88@@ a3, mov_qword_ptr_[rsp+8]_rax, mov_r15_rax, jmp_0xfffffffffffffe@@ 67, lea_rsi_[rip+0x17@@ 1f@@ 1], mov_rdi_r15, call_0xffffffffffff8a@@ 67, test_eax_eax, je_0xc0, movabs_rax_0x1@@ 4@@ 0000@@ 0001, mov_qword_ptr_[r13+0x@@ 44@@ ]_rax, mov_dword_ptr_[r13+0x@@ 28]_1, cmp_byte_ptr_[r@@ 15+0x@@ a]@@ _0x3c, jne_0xfffffffffffffd@@ 5f, add_r15@@ _0xb, mov_esi_0x3@@ e, mov_rdi_r15, call_0xffffffffffff8a@@ 0d, sub_rax@@ _r15, mov_rsi_rax, mov_rdi_r15, call_0xffffffffffff87@@ 6f, mov_rdi_rax, xor_edx_edx, lea_rsi_[rip+0x15@@ e0@@ f], mov_r14_rax, call_0xffffffffffff8a@@ 8b, mov_qword_ptr_[r13+0x@@ 88]_rax, mov_rdi_r14, call_0xffffffffffff84@@ fc, mov_edx_dword_ptr_[r13+0x@@ 48], jmp_0xfffffffffffffc@@ 73, lea_rsi_[rip+0x17@@ 124], mov_rdi_r15, call_0xffffffffffff8@@ 9e@@ 4, test_eax_eax, jne_0x20, mov_ecx_0xa, lea_rdi_[rip+0x17@@ 14@@ c], mov_rsi_r15, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x@@ be, lea_rsi_[r@@ 15+@@ 9], lea_rdi_[rip+0x@@ 170@@ fa], xor_eax_eax, call_0xffffffffffff87@@ d0, mov_r15_rax, mov_rbp_rax, jmp_0xfffffffffffffc@@ 5e, mov_dword_ptr_[r13+0x@@ 4@@ 8]_0x10, mov_dword_ptr_[r13+0x@@ 40]_1, mov_rax_qword_ptr_[rip+0x20@@ ca@@ 1], movzx_edx_byte_ptr_[r@@ 15], mov_rdi_qword_ptr_[rax], mov_rax_rdx, movzx_edx_word_ptr_[r@@ di@@ +rdx*2], lea_ecx_[rax@@ -0x@@ 2d], and_edx_1, cmp_cl@@ _0x32, ja_0x1@@ 4, movabs_rax@@ _0x4@@ 00000000@@ 200@@ 3, shr_rax_cl, and_eax_1, or_edx_eax, mov_rsi_r15, test_dl_dl, je_0x39, movabs@@ _r8@@ _0x4@@ 00000000@@ 200@@ 3, movzx_eax_byte_ptr_[r@@ si+1], inc@@ _rsi, mov_rcx_rax, movzx_eax_word_ptr_[r@@ di@@ +rax*2], sub_ecx@@ _0x2d, and_eax_1, cmp_cl@@ _0x32, ja@@ _0xd, mov_rdx_r8, shr_rdx@@ _cl, and_edx_1, or_eax_edx, test_al_al, jne_0xffffffffffffffda, sub_rsi@@ _r15, mov_rdi_r15, call_0xffffffffffff86@@ 6a, mov_qword_ptr_[r13+0x@@ 80]_rax, mov_edx_dword_ptr_[r13+0x@@ 48], jmp_0xfffffffffffffb@@ 8a, lea_rsi_[rip+0x1@@ 70@@ 57], mov_rdi_r15, call_0xffffffffffff88@@ fb, test_eax_eax, jne_0x19, lea_rsi_[rip+0x1@@ 70@@ 77], mov_rdi_r15, call_0xffffffffffff8@@ 40@@ 8, test_eax_eax, jne_0xfffffffffffffb@@ 9a, lea_rsi_[r@@ 15+@@ 5], lea_rdi_[rip+0x@@ 170@@ 30], xor_eax_eax, call_0xffffffffffff86@@ ee, mov_r15_rax, mov_rbp_rax, jmp_0xfffffffffffffb@@ 7c, call_0xffffffffffff8@@ 90@@ e
endbr64, push_r14, mov_r14_rcx, mov_rcx_rsi, push_r13, mov_r13_rdi, xor_edi_edi, push_r12, mov_r12_rsi, mov_esi_0x80, push_rbp, mov_rbp_rdx, lea_rdx_[rip+0x@@ 170@@ 3a], sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xffffffffffff8a@@ c4, mov_r8d_dword_ptr_[r@@ bp+8], cmp_r8d@@ _0x22, ja_0x7@@ 77, lea_rdx_[rip+0x17@@ 4b@@ e], mov_eax_r8d, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_ecx_r8d, lea_rdx_[rip+0x16@@ 30@@ 6], mov_esi_4, xor_edi_edi, xor_eax_eax, call_0xffffffffffff8@@ 32@@ d, jmp@@ _@@ 0
push_r15, mov_r15_rdx, mov_rdx_rcx, push_r14, mov_ecx_6, push_r13, mov_r13_r9, push_r12, mov_r12_rsi, push_rbp, push_rbx, mov_rbx_r8, sub_rsp_0x28, mov_qword_ptr_[rsp]_rdi, lea_rdi_[rip+0x16@@ 59@@ 7], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], mov_ecx_8, lea_rdi_[rip+0x16@@ 57@@ f], mov_rsi_r12, seta_al, sbb_al_0, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta@@ _bpl, sbb@@ _@@ bpl@@ _0, movsx@@ _ebp@@ _bpl, test_al_al, sete_cl, test_ebp_ebp, sete_al, or@@ _cl_al, mov_r14d_ecx, jne_0x23, mov_ecx_5, lea_rdi_[rip+0x15@@ d7@@ 6], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_cl, sbb_cl_0, xor_eax_eax, test_cl_cl, jne_0x1@@ 62, mov_eax_dword_ptr_[rbx+8], cmp_eax_0x20, je_0x2@@ 3f, cmp_eax@@ _0x1f, ja@@ _0x3d, mov_ecx_0x@@ fa@@ 8d@@ a8@@ 00, bt@@ _rcx_rax, jae_0x@@ 32, cmp_eax@@ _0x1f, je_0x1@@ 66, mov_dword_ptr_[rbx+0x1@@ 0]_eax, mov_dword_ptr_[rbx+@@ 8]_0x20, mov_dword_ptr_[rbx+0x@@ 88]_1, mov_qword_ptr_[rbx+0x@@ 78]_0, mov_qword_ptr_[rbx+0x@@ 80]_0, mov_qword_ptr_[rsp+8]_rdx, mov_rsi_r15, lea_rdi_[rip+0x16@@ 23@@ b], call_0xffffffffffffd6@@ 32, mov_rsi_qword_ptr_[rbx+0x@@ 58], mov_rdx_qword_ptr_[rsp+8], mov_r9_rax, test_rsi_rsi, je_0xe8, cmp_qword_ptr_[rbx+0x@@ 70]_0, je_0x4@@ 7b, test_ebp_ebp, je_0xd5, test_r14b_r14b, jne_0x2@@ 4a, test_r9_r9, je_0x1@@ e9, mov_rsi_r15, lea_rdi_[rip+0x16@@ 53@@ 2], mov_qword_ptr_[rsp]_r9, call_0xffffffffffffd@@ 5e@@ 5, test_rax_rax, mov_r9_qword_ptr_[rsp], mov_rbp_rax, je_0x3@@ d6, mov_rdi_rax, call_0xffffffffffff7a@@ 2d, lea_rdx_[r@@ bp@@ +rax-1], xor_r12d_r12d, cmp_rbp_rdx, mov_r9_qword_ptr_[rsp], jb@@ _0x11, jmp_0x18, inc_r12d, cmp_rbp_rdx, je_0xb, dec@@ _rdx, cmp_byte_ptr_[rdx+@@ 1]@@ _0x2a, je_0xfffffffffffffff1, lea_rsi_[rip+0x16@@ 44@@ a], mov_rdi_rbp, mov_qword_ptr_[rsp]_r9, call_0xffffffffffff7@@ c0@@ 1, test_eax_eax, mov_r9_qword_ptr_[rsp], je_0x2@@ 76, inc_r12d, mov_rax_qword_ptr_[rbx+0x@@ 70], cmp_dword_ptr_[rax]@@ _0xc, je_0x2@@ 46, mov_rsi_r9, mov_rdi_rbx, call_0xffffffffffffed@@ 7a, cmp_dword_ptr_[r@@ ax+0x4@@ 8]_0x10, mov_rbp_rax, je_0x3@@ 79, test_r12d_r12d, je_9, mov_dword_ptr_[rbp+0x@@ 28]_1, mov_rdi_qword_ptr_[rbx+0x@@ 80], mov_rsi_rbp, call_0xffffffffffff7b@@ 82, mov_qword_ptr_[rbx+0x@@ 80]_rax, mov_eax_1, mov_rbx_qword_ptr_[rsp+0x18], xor_rbx_qword_ptr_fs:[0x28], jne_0x4@@ 6e, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_r14_qword_ptr_[r@@ bx+0x@@ 68], mov_dword_ptr_[rbx+0x1@@ 0]@@ _0x1f, mov_dword_ptr_[rbx+@@ 8]_0x20, mov_dword_ptr_[rbx+0x@@ 88]_1, mov_qword_ptr_[rbx+0x@@ 78]_0, mov_qword_ptr_[rbx+0x@@ 80]_0, test_r14_r14, je_0xffffffffffffff@@ a0, mov_rsi_r15, lea_rdi_[rip+0x16@@ 0@@ d3], call_0xffffffffffffd@@ 4c@@ a, mov_rbp_rax, test_rax_rax, je_0xaf, mov_rsi_qword_ptr_[rbx+0x@@ 48], mov_rdx_r14, lea_rdi_[rip+0x15@@ bb@@ 3], xor_eax_eax, call_0xffffffffffff7@@ 93@@ 9, mov_rdi_rbp, mov_esi_0x2e, mov_r12_rax, call_0xffffffffffff7a@@ e9, mov_rdi_rbp, test_rax_rax, je_0x26, call_0xffffffffffff7@@ 7@@ 2c, mov_rdx_rax, mov_rdi_qword_ptr_[rbx+0x30], mov_rsi_r12, call_0xffffffffffff7b@@ 2d, mov_eax_1, jmp_0xffffffffffffff42, call_0xffffffffffffd@@ 708, test_rax_rax, je_0x1@@ 78, mov_rdi_rbp, call_0xffffffffffff7@@ 6f@@ 7, mov_rdx_rax, jmp_0xffffffffffffffcb, inc@@ _dword_ptr_[rbx+0x@@ 88], mov_rsi_qword_ptr_[rbx+0x@@ 80], mov_rdi_qword_ptr_[rbx+0x@@ 78], mov_qword_ptr_[rsp+8]_rdx, call_0xffffffffffff7b@@ 52, mov_qword_ptr_[rbx+0x@@ 78]_rax, mov_qword_ptr_[rbx+0x@@ 80]_0, mov_rdx_qword_ptr_[rsp+8], jmp_0xfffffffffffffdd@@ d, mov_rdi_qword_ptr_[rsp], lea_rdx_[r@@ sp+0x14], lea_rsi_[rsp+0x10], call_0xffffffffffff7b@@ 92, mov_ebp_dword_ptr_[r@@ sp+0x14], mov_ebx_dword_ptr_[r@@ sp+0x10], call_0xffffffffffff7@@ d0@@ 5, push_r12, mov_esi_eax, lea_rax_[rip+0x15@@ fe@@ e], push_rax, lea_rcx_[rip+0x15@@ be@@ 5], mov_edx_5, xor_eax_eax, mov_r9d_ebp, mov_r8d_ebx, mov_rdi_r13, call_0xffffffffffff7@@ 9b@@ d, pop_rdx, pop_rcx, xor_eax_eax, jmp_0xfffffffffffffe@@ 93, mov_edi_0xd, mov_qword_ptr_[rsp+8]_rdx, mov_qword_ptr_[rsp]_r9, call_0xffffffffffff9b@@ 5a, mov_r9_qword_ptr_[rsp], mov_dword_ptr_[rax+0x4@@ 8]@@ _0xf, test_r9_r9, mov_dword_ptr_[rax+0x@@ 28]_1, mov_dword_ptr_[rax+0x@@ 30]_1, mov_rdx_qword_ptr_[rsp+8], mov_rbp_rax, je_0xb9, mov_ecx_0xb, lea_rdi_[rip+0x16@@ 26@@ e], mov_rsi_r9, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x1@@ f3, mov_dword_ptr_[rbp+0x@@ 6c]_1, mov_eax_0xffffffff, mov_qword_ptr_[rbp+0x@@ 58]_0, mov_qword_ptr_[rbp+0x@@ 60]_rax, mov_dword_ptr_[rbp+0x@@ 6@@ 8]_0xffffffff, jmp_0xfffffffffffffd@@ f2, mov_eax_dword_ptr_[rax+0x@@ 2c], test_eax_eax, je_0xfffffffffffffd@@ bb, test_r12d_r12d, je_0x12@@ 2, dec@@ _r12d, jmp_0xfffffffffffffd@@ a9, lea_rsi_[rip+0x16@@ 25@@ 9], mov_rdi_rbp, mov_qword_ptr_[rsp]_r9, call_0xffffffffffff7@@ 97@@ 2, test_eax_eax, mov_r9_qword_ptr_[rsp], jne_0xfffffffffffffd@@ 77, jmp_0xfffffffffffffd@@ 74, mov_rsi_qword_ptr_[rbx+0x@@ 48], mov_rdx_rbp, lea_rdi_[rip+0x15@@ 9e@@ 2], call_0xffffffffffff7@@ 76@@ a, mov_rdx_rax, jmp_0xfffffffffffffe@@ 4e, mov_dword_ptr_[rbp+0x@@ 6c]_0, mov_rsi_r15, lea_rdi_[rip+0x16@@ 1d@@ e], mov_qword_ptr_[rsp]_rdx, call_0xffffffffffffd@@ 2b@@ 3, mov_rdx_qword_ptr_[rsp], mov_rsi_r15, lea_rdi_[rip+0x16@@ 1d@@ 7], mov_r13_rax, call_0xffffffffffffd@@ 29@@ d, mov_rdx_qword_ptr_[rsp], mov_rsi_r15, lea_rdi_[rip+0x16@@ 1c8], mov_r14_rax, call_0xffffffffffffd@@ 28@@ 7, mov_r12_rax, xor_eax_eax, test_r14_r14, setne_al, mov_dword_ptr_[rbp+0x@@ 5c]_eax, mov_eax_0xffffffff, jne_0x1@@ 70, mov_dword_ptr_[rbp+0x@@ 60]_eax, xor_eax_eax, test_r12_r12, setne_al, mov_dword_ptr_[rbp+0x@@ 64]_eax, mov_edx_0, mov_eax_0xffffffff, jne_0x13@@ b, mov_dword_ptr_[rbp+0x@@ 6@@ 8]_eax, test_r13_r13, je_0x1@@ 5a, movzx_eax_byte_ptr_[r13], sub_eax@@ _0x31, jne_7, movzx_eax_byte_ptr_[r@@ 13+1], test_eax_eax, sete_al, movzx_eax_al, mov_dword_ptr_[rbp+0x@@ 58]_eax, test_edx_edx, je_0xfffffffffffffc@@ d7, mov_rax_qword_ptr_[rbx+0x@@ 70], cmp_dword_ptr_[rax]@@ _0x12, jne_0xfffffffffffffc@@ ca, mov_dword_ptr_[rbp+0x@@ 28]_0, jmp_0xfffffffffffffc@@ bd, mov_rsi_r9, mov_rdi_rbx, call_0xffffffffffffea@@ 0a, cmp_dword_ptr_[r@@ ax+0x4@@ 8]_0x10, mov_rbp_rax, jne_0xfffffffffffffc@@ a2, xor_r12d_r12d, mov_r13_qword_ptr_[r@@ bp+0x@@ 80], mov_esi_0x2e, mov_rdi_r13, call_0xffffffffffff7@@ 8@@ 26, xor_r14d_r14d, test_rax_rax, je_0xf8, mov_rax_qword_ptr_[rbx+0x58], mov_rsi_r13, mov_rdi_qword_ptr_[rax+0x40], call_0xffffffffffff7@@ 8b@@ a, mov_r13_rax, mov_rdi_r14, call_0xffffffffffff7@@ 3@@ 1f, test_r13_r13, jne_0xfffffffffffffc@@ 54, jmp_0xfffffffffffffc@@ 49, call_0xffffffffffff7@@ aa@@ 8, mov_esi_eax, lea_rcx_[rip+0x15@@ a4@@ a], xor_eax_eax, mov_edx_5, mov_rdi_r13, call_0xffffffffffff7@@ 77@@ 0, xor_eax_eax, jmp_0xfffffffffffffc@@ 48, mov_ecx_0xf, lea_rdi_[rip+0x16@@ 0@@ 6e], mov_rsi_r9, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x18, mov_dword_ptr_[rbp+0x@@ 6c@@ ]_3, jmp_0xfffffffffffffd@@ f9, mov_ecx_0xe, lea_rdi_[rip+0x16@@ 0@@ 4d], mov_rsi_r9, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0xfffffffffffffe@@ 60, mov_dword_ptr_[rbp+0x@@ 6c@@ ]_2, jmp_0xfffffffffffffd@@ c5, mov_edx_0xa, xor_esi_esi, mov_rdi_r12, call_0xffffffffffff7@@ 70@@ c, mov_edx_dword_ptr_[rbp+0x@@ 64], jmp_0xfffffffffffffeb9, mov_edx_0xa, xor_esi_esi, mov_rdi_r14, call_0xffffffffffff7@@ 6f@@ 5, jmp_0xfffffffffffffe@@ 87, mov_esi_dword_ptr_[rbp+0x@@ 5c], xor_eax_eax, test_esi_esi, jne_9, xor_eax_eax, test_edx_edx, sete_al, mov_dword_ptr_[rbp+0x@@ 58]_eax, jmp_0xfffffffffffffe@@ b3, mov_rsi_qword_ptr_[rbx+0x@@ 48], mov_rdx_r13, lea_rdi_[rip+0x15@@ 7c@@ d], call_0xffffffffffff7@@ 555, mov_r13_rax, mov_r14_rax, jmp_0xfffffffffffffe@@ f5, call_0xffffffffffff7@@ 77@@ 5
endbr64, push_r15, mov_r15_r9, push_r14, mov_r14_rdi, lea_rdi_[rip+0x15@@ c@@ 38], push_r13, mov_r13_rcx, mov_ecx_6, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_r8, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x9f, cmp_dword_ptr_[r@@ 8+@@ 8]@@ _0x1f, je_0x64, mov_ecx_7, lea_rdi_[rip+0x15@@ ed@@ 3], mov_rsi_rbp, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x22, mov_rdx_r13, mov_rsi_r12, lea_rdi_[rip+0x15@@ f@@ 91], call_0xffffffffffffd0@@ 33, test_rax_rax, je_0xb, cmp_byte_ptr_[rax]@@ _0x31, je_0x9e, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x12@@ 5, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_ecx_5, lea_rdi_[rip+0x15@@ 6c0], mov_rsi_rbp, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0xffffffffffffff@@ 86, mov_rcx_r13, mov_rsi_rbp, mov_rdi_r14, call_0xfffffffffffff8b@@ 5, jmp_0xffffffffffffffb0, lea_rdi_[rip+0x15@@ bc@@ a], mov_rdx_r13, mov_rsi_r12, call_0xffffffffffffc@@ fb@@ b, mov_rdi_rax, test_rax_rax, je_0x78, call_0xffffffffffff7@@ 24@@ e, mov_qword_ptr_[rbx+0x@@ 68]_rax, mov_eax_dword_ptr_[rbx+8], cmp_eax@@ _0x1f, je_0x5f, mov_dword_ptr_[rbx+0x1@@ 0]_eax, mov_dword_ptr_[rbx+@@ 8]@@ _0x1f, jmp_0xffffffffffffff73, cmp_byte_ptr_[rax+1]_0, jne_0xffffffffffffff@@ 64, mov_rdx_r13, mov_rsi_r12, lea_rdi_[rip+0x15@@ b7@@ a], call_0xffffffffffffc@@ f7@@ 1, mov_rsi_qword_ptr_[rbx+0x@@ 48], mov_rdx_rax, lea_rdi_[rip+0x15@@ 66@@ 6], xor_eax_eax, call_0xffffffffffff7@@ 3e@@ c, mov_rdi_qword_ptr_[rbx+0x38], mov_rsi_rax, mov_edx_1, call_0xffffffffffff7@@ 5f@@ b, jmp_0xffffffffffffff26, call_0xffffffffffffd@@ 320, lea_rdx_[rsp+4], mov_rsi_rsp, mov_rdi_r14, call_0xffffffffffff7@@ 6b@@ d, mov_r12d_dword_ptr_[r@@ sp+4], mov_ebx_dword_ptr_[r@@ sp], call_0xffffffffffff7@@ 8@@ 30, push_rbp, mov_esi_eax, lea_rax_[rip+0x15@@ b@@ 1a], push_rax, mov_edx_5, xor_eax_eax, mov_r9d_r12d, mov_r8d_ebx, lea_rcx_[rip+0x15@@ 70@@ 4], mov_rdi_r15, call_0xffffffffffff7@@ 4e@@ 9, pop_rax, pop_rdx, jmp_0xfffffffffffffe@@ d2, call_0xffffffffffff7@@ 5a@@ d
endbr64, mov_edi_0x10, jmp_0xffffffffffff@@ 7@@ 7c@@ 7
endbr64, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, mov_rdi_qword_ptr_[rdi], test_rdi_rdi, je_7, call_0xffffffffffff7@@ 6a@@ b, mov_rbx_qword_ptr_[r@@ bp+8], test_rbx_rbx, je_0x18, mov_rdi_qword_ptr_[rbx], call_0xffffffffffff7f@@ 55, mov_rbx_qword_ptr_[rbx+8], test_rbx_rbx, jne_0xfffffffffffffff1, add_rsp_8, pop_rbx, mov_rsi_rbp, mov_edi_0x10, pop_rbp, jmp_0xffffffffffff@@ 77@@ 1@@ 9
endbr64, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rdi_qword_ptr_[rdi], test_rdi_rdi, je_7, call_0xffffffffffff7@@ 65@@ 8, mov_rdi_rbp, call_0xffffffffffff70@@ 10, mov_qword_ptr_[rbx]_rax, add_rsp_8, pop_rbx, pop_rbp, ret
endbr64, push_r15, push_r14, push_r13, mov_r13_r8, push_r12, mov_r12_rcx, xor_ecx_ecx, push_rbp, mov_rbp_r9, push_rbx, mov_rbx_rdi, sub_rsp_0xa8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, lea_r8_[r@@ sp+8], mov_edi_eax, add_eax@@ _0x20, mov_qword_ptr_[rsp+r@@ di+@@ 8]_rcx, mov_qword_ptr_[rsp+r@@ di+0x1@@ 0]_rcx, mov_qword_ptr_[rsp+r@@ di+0x1@@ 8]_rcx, mov_qword_ptr_[rsp+r@@ di+0x@@ 20]_rcx, cmp_eax@@ _0x80, jb_0xffffffffffffff@@ e2, mov_r14_qword_ptr_[r@@ ip+0x@@ 1f7@@ 2e], mov_r15_qword_ptr_[r@@ ip+0x@@ 1f7@@ 2f], mov_qword_ptr_[r@@ 8@@ +rax]_0, mov_qword_ptr_[rsp+0x4@@ 8]_rsi, mov_rsi_qword_ptr_[rip+0x@@ 1f7@@ 93], mov_rcx_r14, mov_rdi_r15, mov_qword_ptr_[rsp+0x40]_rdx, mov_rdx_r14, mov_qword_ptr_[rsp]_rbx, mov_dword_ptr_[rsp+8]_1, mov_qword_ptr_[rsp+0x20]_0, call_0xffffffffffff7@@ 2c0, mov_rsi_qword_ptr_[rip+0x@@ 1f7@@ 64], xor_ecx_ecx, mov_rdx_r14, mov_rdi_r15, mov_r15@@ _rsp, mov_qword_ptr_[rsp+0x30]_rax, call_0xffffffffffff7@@ 2a@@ 4, xor_ecx_ecx, xor_esi_esi, mov_rdx_r15, lea_rdi_[rip+0x@@ 1fa@@ 51], mov_qword_ptr_[rsp+0x38]_rax, mov_dword_ptr_[rsp+0x8@@ 8]_0, mov_qword_ptr_[rsp+0x28]_0, mov_qword_ptr_[rsp+0x58]_0, call_0xffffffffffff6f@@ 9f, mov_rdi_rax, mov_rcx_rbp, mov_rdx_r13, mov_rsi_r12, mov_r14_rax, call_0xffffffffffff7@@ 16@@ b, test_eax_eax, jne_0x54, cmp_qword_ptr_[rsp+0x18]_0, je_0x10@@ c, mov_rdi_r14, call_0xffffffffffff70@@ 63, mov_r12_qword_ptr_[rsp+0x18], test_r12_r12, je_0xbe, mov_r12_qword_ptr_[r12], mov_rax_qword_ptr_[rsp+0x98], xor_rax_qword_ptr_fs:[0x28], jne_0x10@@ 8, add_rsp_0xa8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rsi_rbp, mov_rdi_r14, call_0xffffffffffff70@@ 3a, test_eax_eax, je_0xffffffffffffff@@ a1, mov_rdi_r14, call_0xffffffffffff7@@ 00@@ e, xor_ecx_ecx, xor_esi_esi, mov_rdx_r15, lea_rdi_[rip+0x@@ 1f@@ 9d@@ b], mov_dword_ptr_[rsp+8]_1, call_0xffffffffffff6@@ f0@@ 3, mov_rdi_rax, mov_rcx_rbp, mov_rdx_r13, mov_rsi_r12, mov_r14_rax, call_0xffffffffffff70@@ cf, test_eax_eax, je_0xffffffffffffff@@ 66, mov_rsi_rbp, mov_rdi_r14, call_0xffffffffffff6@@ fe@@ c, test_eax_eax, je_0xffffffffffffff@@ 53, mov_rdi_qword_ptr_[rsp+0x18], mov_r12_qword_ptr_[r@@ bx+8], call_0xffffffffffff70@@ 16, mov_rdi_rax, mov_rsi_r12, call_0xffffffffffff7@@ 24@@ b, mov_qword_ptr_[rbx+8]_rax, jmp_0xffffffffffffff30, test_rbp_rbp, je_0xffffffffffffff@@ 49, cmp_qword_ptr_[rbp]_0, jne_0xffffffffffffff@@ 3e, call_0xffffffffffff7@@ 5@@ 64, mov_esi_eax, lea_rcx_[rip+0x15@@ 5@@ 2e], mov_edx_5, mov_rdi_rbp, xor_eax_eax, call_0xffffffffffff7@@ 22@@ c, jmp_0xffffffffffffff1b, mov_rdi_qword_ptr_[rsp+0x30], test_rdi_rdi, je_7, call_0xffffffffffff6e@@ 26, mov_rdi_qword_ptr_[rsp+0x38], test_rdi_rdi, je_7, call_0xffffffffffff6e@@ 17, mov_rdi_qword_ptr_[rsp+0x20], call_0xffffffffffff6@@ f0@@ d, jmp_0xfffffffffffffe@@ d2, call_0xffffffffffff7@@ 2c@@ 3
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_r8, sub_rsp_0x78, mov_qword_ptr_[rsp+0x18]_rdi, mov_qword_ptr_[rsp+0x10]_rdx, mov_qword_ptr_[rsp+0x20]_rcx, mov_qword_ptr_[rsp+8]_r9, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x68]_rax, xor_eax_eax, lea_rax_[rip+0x@@ 1f@@ 9@@ dd], test_byte_ptr_[r@@ ax]@@ _0x80, jne_0x10@@ 2, mov_edx_dword_ptr_[rbx+8], mov_r8d_edx, cmp_edx@@ _0x22, je_0x1@@ 9b, movzx_eax_byte_ptr_[rbp], sub_eax@@ _0x61, cmp_al@@ _0x15, ja_0x7@@ 4, lea_rcx_[rip+0x15@@ ee@@ 3], movzx_eax_al, movsxd_rax_dword_ptr_[r@@ cx+rax*4], add_rax_rcx, jmp_rax, mov_rax_qword_ptr_[rsp+8], cmp_qword_ptr_[rax]_0, je_0x11f, mov_rdi_qword_ptr_[rsp+0x18], lea_rdx_[rsp+0x60], lea_rsi_[rsp+0x@@ 58], call_0xffffffffffff7@@ 28@@ a, mov_rax_qword_ptr_[rsp+8], mov_rsi_qword_ptr_[rbx+0x@@ 40], mov_rax_qword_ptr_[rax], mov_ecx_dword_ptr_[rsp+0x@@ 60], mov_r8_qword_ptr_[rax+8], mov_edx_dword_ptr_[rsp+0x@@ 58], lea_rdi_[rip+0x15@@ b4@@ a], xor_eax_eax, call_0xffffffffffff6d@@ e4, mov_rax_qword_ptr_[rsp+0x68], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ 80@@ 5, add_rsp_0x78, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rdi_[rip+0x17@@ 3c@@ 2], call_0xffffffffffff6e@@ 11, mov_r14_rax, mov_rax_qword_ptr_[rsp+0x10], mov_rdx_qword_ptr_[rax], test_rdx_rdx, je_0x57, mov_r12_qword_ptr_[rsp+0x20], lea_r13@@ _[rax+8], lea_r15_[rip+0x@@ 15@@ 9e@@ 4], mov_rcx_qword_ptr_[r12], mov_rsi_r15, mov_rdi_r14, xor_eax_eax, call_0xffffffffffff7@@ 3@@ 1c, mov_rdx_qword_ptr_[r13], add_r12_8, add_r13_8, test_rdx_rdx, jne_0xffffffffffffffe0, xor_esi_esi, mov_rdi_r14, mov_edx_0x20, call_0xffffffffffff7@@ 17@@ c, mov_rax_qword_ptr_[r14+8], mov_rdi_r14, lea_rsi@@ _[rax-1], call_0xffffffffffff7@@ 1e@@ c, mov_r8_qword_ptr_[r@@ 14], lea_rdx_[rip+0x15@@ 99@@ e], mov_rcx_rbp, mov_esi_0x80, xor_edi_edi, xor_eax_eax, call_0xffffffffffff7@@ 2e@@ 1, mov_esi_1, mov_rdi_r14, call_0xffffffffffff6@@ ec@@ 4, mov_edx_dword_ptr_[rbx+8], mov_r8d_edx, cmp_edx@@ _0x22, jne_0xfffffffffffffe@@ 71, inc@@ _dword_ptr_[rbx+0x@@ c], jmp_0xffffffffffffff2e, cmp_dword_ptr_[rbx+@@ 8]@@ _0x22, je_0xffffffffffffff@@ 1d, mov_rdi_qword_ptr_[rsp+0x18], lea_rsi_[rsp+0x@@ 58], lea_rdx_[rsp+0x60], call_0xffffffffffff7@@ 167, lea_rsi_[rip+0x15@@ b4@@ d], mov_rdi_rbp, call_0xffffffffffff70@@ 38, test_eax_eax, je_0x12@@ 06, mov_eax_dword_ptr_[rbx+8], cmp_eax_0x22, je_0x1@@ 1f@@ 5, mov_dword_ptr_[rbx+0x1@@ 0]_eax, movabs_rax_0x1@@ 0000@@ 00@@ 22, mov_qword_ptr_[rbx+8]_rax, mov_rax_qword_ptr_[rsp+8], cmp_qword_ptr_[rax]_0, je_0xfffffffffffffe@@ c0, jmp_0xfffffffffffffe@@ 80, call_0xffffffffffffbb@@ a0, mov_rsi_qword_ptr_[rbx+0x@@ 40], mov_r9d_dword_ptr_[r@@ bx+8], mov_ecx_dword_ptr_[rsp+0x@@ 60], mov_edx_dword_ptr_[rsp+0x@@ 58], mov_r8_rbp, lea_rdi_[rip+0x14@@ 28@@ 9], call_0xffffffffffff5a@@ b1, jmp_0xffffffffffffed@@ e1, call_0xffffffffffff4@@ 97@@ c
endbr64, push_r15, push_r14, mov_r14_rdi, push_r13, mov_r13_rdx, push_r12, mov_r12_rsi, mov_rdi_r12, push_rbp, lea_rsi_[rip+0x13@@ 278], sub_rsp_0x20, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xffffffffffff4a@@ 1c, test_eax_eax, je_0xe5, xor_edi_edi, mov_esi_0x80, xor_eax_eax, mov_rcx_r12, lea_rdx_[rip+0x13@@ 38@@ 1], call_0xffffffffffff4a@@ bc, lea_rsi_[rip+0x14@@ aa@@ a], mov_rdi_r12, call_0xffffffffffff44@@ 5d, test_rax_rax, je_0xa5, lea_rdi_[rax+1], call_0xffffffffffff4@@ 47@@ b, mov_rbp_rax, mov_rdi_rbp, call_0xffffffffffff@@ 46@@ 30, mov_byte_ptr_[rbp@@ +rax@@ -@@ 4]_0, mov_esi_0x2d, mov_rdi_rbp, call_0xffffffffffff4@@ 80@@ e, test_rax_rax, je_5, mov_byte_ptr_[rax]_0, lea_rdx_[rsp+0x10], lea_rsi_[rsp+8], mov_rcx_r13, mov_rdi_r12, call_0xffffffffffff4@@ 9@@ 11, xor_r15d_r15d, test_eax_eax, je_0x32, mov_r8_qword_ptr_[rsp+0x10], mov_rcx_qword_ptr_[rsp+8], mov_r9_r13, mov_rdx_r12, mov_rsi_rbp, mov_rdi_r14, call_0xffffffffffffd@@ 32@@ f, mov_rdi_rbp, mov_r15_rax, call_0xffffffffffff4@@ 2e@@ 4, mov_rdi_qword_ptr_[rsp+8], call_0xffffffffffff4@@ 2d@@ a, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x49, add_rsp_0x20, pop_rbp, pop_r12, pop_r13, pop_r14, mov_rax_r15, pop_r15, ret, mov_rdi_r12, call_0xffffffffffff4@@ 3d@@ d, mov_rbp_rax, jmp_0xffffffffffffff62, call_0xffffffffffff4a@@ 40, mov_esi_eax, lea_rcx_[rip+0x12@@ c5@@ 2], mov_edx_5, mov_rdi_r13, xor_eax_eax, call_0xffffffffffff4@@ 708, xor_r15d_r15d, jmp_0xffffffffffffffab, call_0xffffffffffff47@@ c@@ e
endbr64, push_r12, mov_edi_0x20, call_0xffffffffffff4@@ 9e@@ 5, mov_qword_ptr_[rax+8]_0, mov_rdx_qword_ptr_[rip+0x@@ 1c@@ a@@ 21], mov_rsi_qword_ptr_[rip+0x@@ 1c@@ a@@ 9a], mov_rdi_qword_ptr_[rip+0x@@ 1c@@ a@@ 1b], xor_ecx_ecx, mov_r12_rax, call_0xffffffffffff4@@ 5d@@ e, mov_qword_ptr_[r12+0x10]_rax, mov_rax_r12, pop_r12, ret
endbr64, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, cmp_qword_ptr_[rdi+@@ 8]_0, je_0x1e, add_rsp_8, pop_rbx, lea_rdx_[rip+0x13@@ 5d@@ 4], lea_rsi_[rip+0x13@@ 79@@ 9], xor_edi_edi, pop_rbp, jmp_0xffffffffffff@@ 46@@ 36, mov_rdi_rsi, mov_ebp_edx, call_0xffffffffffff4@@ 3@@ 1b, mov_rdi_qword_ptr_[rbx+0x10], add_rsp_8, pop_rbx, movzx_edx@@ _bp, mov_rsi_rax, pop_rbp, jmp_0xffffffffffff@@ 4@@ 35@@ 6
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x58, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, mov_eax_dword_ptr_[rdi], test_eax_eax, jne_0x1@@ 63, cmp_qword_ptr_[rdi+@@ 8]_0, je_0x2c, lea_r8_[rip+0x13@@ 56@@ 7], lea_rcx_[rip+0x13@@ 6e@@ c], mov_edx_0x6@@ 0, lea_rsi_[rip+0x13@@ 56@@ 7], xor_edi_edi, call_0xffffffffffff44@@ 1e, mov_rdi_qword_ptr_[rdi+0x10], call_0xffffffffffff4@@ 4c@@ c, mov_dword_ptr_[rsp+0xc]_eax, cmp_eax_0x1@@ 0000, ja_0x1@@ 3e, mov_eax_dword_ptr_[rsp+0xc], mov_esi_8, lea_edi_[rax+1], call_0xffffffffffff4@@ 80@@ c, lea_r13_[rsp+0x20], mov_rsi_qword_ptr_[rbp+0x10], mov_rdi_r13, mov_qword_ptr_[rsp]_rax, xor_ebx_ebx, call_0xffffffffffff4@@ 4c@@ 5, lea_r15_[r@@ sp+0x18], lea_r14_[rsp+0x10], jmp_0x16, mov_rdi_qword_ptr_[rsp+0x10], inc_ebx, call_0xffffffffffff4@@ 24@@ 9, mov_qword_ptr_[r12]_rax, mov_rdx_r15, mov_rsi_r14, mov_rdi_r13, call_0xffffffffffff4@@ 48@@ 7, mov_rcx_qword_ptr_[rsp], mov_edx_ebx, lea_r12_[r@@ cx@@ +rdx*8], test_eax_eax, jne_0xffffffffffffffd6, mov_qword_ptr_[r12]_0, mov_esi_dword_ptr_[rsp+0xc], mov_rdi_rcx, call_0xb@@ 55, mov_rdi_rax, mov_r13_rax, call_0xbb@@ a, mov_r12_rax, mov_rdi_rax, mov_esi_5, call_0xb@@ fa, mov_rdi_r12, call_0x@@ fb@@ 2, mov_qword_ptr_[rbp+8]_rax, mov_dword_ptr_[rbp@@ ]_1, mov_rdi_rax, test_rax_rax, je_0xb4, mov_dword_ptr_[rbp+@@ 4]_1, call_0x1@@ 30@@ f, cmp_eax@@ _dword_ptr_[rsp+0xc], je_0x26, lea_r8_[rip+0x13@@ 53@@ d], lea_rcx_[rip+0x13@@ 5e@@ 6], mov_edx_0x7@@ d, lea_rsi_[rip+0x13@@ 46@@ 1], xor_edi_edi, call_0xffffffffffff4@@ 3@@ 18, mov_rdi_qword_ptr_[rbp+8], call_0x1@@ 40@@ c, add_eax@@ _7, mov_esi_dword_ptr_[rsp+0xc], and_eax_0xfffffffc, mov_dword_ptr_[rbp+0x@@ 18]_eax, lea_eax@@ _[rax+r@@ si*2], mov_dword_ptr_[rbp+0x@@ 1c]_eax, mov_rdi_r12, call_0x@@ dc@@ 1, mov_rdi_r13, call_0xa@@ f9, mov_rsi_qword_ptr_[rsp+0x48], xor_rsi_qword_ptr_fs:[0x28], mov_eax_dword_ptr_[rbp+4], jne_0x44, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_r8_[rip+0x13@@ 4@@ 19], lea_rcx_[rip+0x13@@ 57@@ 2], mov_edx_0x6@@ 3, lea_rsi_[rip+0x13@@ 3e@@ d], xor_edi_edi, call_0xffffffffffff4@@ 2a@@ 4, mov_dword_ptr_[rbp+@@ 4]_0, jmp_0xffffffffffffff9d, call_0xffffffffffff@@ 45@@ 3@@ f
endbr64, sub_rsp_8, test_rdi_rdi, je_0x5d, mov_edx_dword_ptr_[rdi], test_edx_edx, je_0x17, mov_eax_dword_ptr_[rdi+4], test_eax_eax, je_0x30, mov_eax_dword_ptr_[rdi+0x1@@ c], add_rsp_8, ret, lea_rdx_[rip+0x13@@ 3d@@ 3], lea_rsi_[rip+0x13@@ 4c@@ a], xor_edi_edi, call_0xffffffffffff4@@ 3e8, xor_eax_eax, add_rsp_8, ret, lea_rdx_[rip+0x13@@ 3c@@ 5], lea_rsi_[rip+0x13@@ 4a@@ a], xor_edi_edi, call_0xffffffffffff4@@ 3c8, xor_eax_eax, add_rsp_8, ret, lea_rdx_[rip+0x13@@ 38@@ 3], lea_rsi_[rip+0x13@@ 48@@ a], xor_edi_edi, call_0xffffffffffff4@@ 3a8, xor_eax_eax, add_rsp_8, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x68, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x58]_rax, xor_eax_eax, test_rdi_rdi, je_0x1@@ b3, mov_ecx_dword_ptr_[r@@ di], mov_rbp_rdi, test_ecx_ecx, jne_0x3e, lea_rdx_[rip+0x13@@ 33@@ 7], lea_rsi_[rip+0x13@@ 40@@ e], xor_edi_edi, call_0xffffffffffff4@@ 34c, mov_rax_qword_ptr_[rsp+0x58], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ 9b, add_rsp_0x68, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_eax_dword_ptr_[rdi+4], test_eax_eax, je_0xf3, cmp_dword_ptr_[rdi+0x1@@ c]_edx, ja_0x10@@ a, mov_rbx_rsi, test_sil@@ _3, jne_0x12@@ 5, mov_edx_edx, xor_esi_esi, mov_rdi_rbx, call_0xffffffffffff3f@@ 28, mov_eax_dword_ptr_[rbp+0x@@ 18], lea_r13_[r@@ bx+4], mov_dword_ptr_[rbx]_eax, mov_rsi_r13, lea_r12_[rsp+0x@@ 30], mov_rdi_qword_ptr_[rbp+8], lea_r15_[rsp+0x@@ 28], call_0x1@@ 1a@@ 9, mov_eax_dword_ptr_[rbp+0x@@ 18], mov_rdi_qword_ptr_[rbp+0x10], mov_qword_ptr_[rsp+0x18]_rax, call_0xffffffffffff4@@ 1e8, mov_rsi_qword_ptr_[rbp+0x10], mov_rdi_r12, mov_dword_ptr_[rsp+0x14]_eax, lea_r14_[rsp+0x20], call_0xffffffffffff4@@ 20@@ 3, mov_rdx_r15, mov_rsi_r14, mov_rdi_r12, call_0xffffffffffff4@@ 1d@@ f, test_eax_eax, je_0xffffffffffffff@@ 51, mov_rsi_qword_ptr_[rsp+0x20], mov_rbp_qword_ptr_[rsp+0x28], mov_rdi_rsi, mov_qword_ptr_[rsp+8]_rsi, call_0xffffffffffff4@@ 130, mov_rsi_qword_ptr_[rsp+8], mov_rdx_rax, mov_rdi_r13, call_0x1@@ 260, cmp_dword_ptr_[rsp+0x1@@ 4]_eax, ja_0x2@@ 7, lea_r8_[rip+0x13@@ 29@@ c], lea_rcx_[rip+0x13@@ 3@@ 17], mov_edx_0x@@ b4, lea_rsi_[rip+0x13@@ 1f@@ 2], xor_edi_edi, call_0xffffffffffff40@@ a9, mov_rcx_qword_ptr_[rsp+0x18], mov_eax_eax, lea_rax_[r@@ bx@@ +rax*2], mov_word_ptr_[rax@@ +rcx@@ ]_bp, jmp_0xffffffffffffff89, lea_rdx_[rip+0x13@@ 2@@ 15], lea_rsi_[rip+0x13@@ 2d@@ a], xor_edi_edi, call_0xffffffffffff@@ 42@@ 18, jmp_0xfffffffffffffecc, lea_r8_[rip+0x13@@ 208], lea_rcx_[rip+0x13@@ 2b@@ a], mov_edx_0x@@ a0, lea_rsi_[rip+0x13@@ 19@@ 5], xor_edi_edi, call_0xffffffffffff40@@ 4c, lea_r8_[rip+0x13@@ 1f@@ c], lea_rcx_[rip+0x13@@ 29@@ 2], mov_edx_0x@@ a1, lea_rsi_[rip+0x13@@ 16@@ d], xor_edi_edi, call_0xffffffffffff40@@ 24, lea_rdx_[rip+0x13@@ 18@@ 3], lea_rsi_[rip+0x13@@ 26@@ a], xor_edi_edi, call_0xffffffffffff4@@ 1a8, jmp_0xfffffffffffffe@@ 5c, call_0xffffffffffff4@@ 2a@@ e
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x2@@ 80@@ 5d], endbr64, push_rbp, mov_rbp_rdi, mov_rdi_qword_ptr_[rdi+8], test_rdi_rdi, je_0xf, call_0x@@ fb@@ f, mov_qword_ptr_[rbp@@ +8]_0, mov_rdi_qword_ptr_[rbp+0x10], call_0xffffffffffff3d@@ be, mov_rsi_rbp, mov_edi_0x20, pop_rbp, jmp_0xffffffffffff@@ 44@@ 4@@ 0
endbr64, push_r13, mov_r13_rdi, push_r12, push_rbp, push_rbx, sub_rsp_8, and_r13d@@ _3, je_0x2b, lea_r8_[rip+0x13@@ 18@@ 1], lea_rcx_[rip+0x13@@ 1c@@ b], mov_edx_0x@@ cd, lea_rsi_[rip+0x13@@ 0@@ c6], xor_edi_edi, call_0xffffffffffff3@@ f7@@ d, mov_rbx_rdi, mov_rdi_rsi, mov_r12d_edx, mov_rbp_rsi, call_0xffffffffffff3@@ fb@@ 4, mov_rdx_rax, lea_rdi_[r@@ bx+4], mov_rsi_rbp, call_0x10@@ e5, mov_edx_eax, add_rdx_rdx, cmp_eax_r12d, cmovb@@ _r13@@ _rdx, mov_eax_dword_ptr_[rbx], add_rbx@@ _r13, movzx_eax_word_ptr_[r@@ bx+rax], add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret
endbr64, mov_dword_ptr_[rdi+@@ 8]_0, ret
endbr64, mov_dword_ptr_[rdi+@@ 8]_0, ret
endbr64, jmp_0xffffffffffff@@ 40@@ b@@ c
endbr64, mov_rdi_rsi, jmp_0xffffffffffff@@ 3f@@ 3@@ 9
push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x10, xor_r12d_r12d, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x2@@ 00@@ 8]_rax, xor_eax_eax, mov_rbp_rdi, mov_rbx_rsp, call_0xffffffffffff40@@ 64, jmp_0x4@@ f, mov_rdx_rbx, mov_ecx_dword_ptr_[rdx], add_rdx_4, lea_eax_[rcx-0x1010101], not_ecx, and_eax_ecx, and_eax_0x80808080, je_0xffffffffffffffeb, mov_ecx_eax, shr_ecx_0x10, test_eax_0x8080, cmove_eax_ecx, lea_rcx_[rdx+2], cmove_rdx_rcx, mov_esi_eax, add_sil@@ _al, sbb_rdx_3, sub_rdx_rbx, xor_eax_eax, cmp_byte_ptr_[r@@ sp@@ +rdx@@ -1]_0xa, sete_al, add_r12d_eax, mov_rdi_rbx, mov_rdx_rbp, mov_esi_0x2000, call_0xffffffffffff3d@@ e5, mov_rdi_rbp, call_0xffffffffffff4@@ 19@@ d, test_eax_eax, je_0xffffffffffffff@@ 9e, mov_rdi_rbp, call_0xffffffffffff3@@ ff@@ 1, mov_rax_qword_ptr_[rsp+0x@@ 200@@ 8], xor_rax_qword_ptr_fs:[0x28], jne_0x11, add_rsp@@ _0x20@@ 10, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, call_0xffffffffffff40@@ c@@ a
endbr64, push_r14, push_r13, mov_r13_rsi, push_r12, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, mov_r14_qword_ptr_[r@@ di], mov_eax_dword_ptr_[rdi+8], mov_rax_qword_ptr_[r@@ 14@@ +rax*8], mov_r12d_dword_ptr_[rax], mov_dword_ptr_[rdx@@ ]@@ _r12d, mov_rdi_r12, call_0xffffffffffff3c@@ f8, mov_qword_ptr_[r13]_rax, mov_rdi_rax, mov_rdx_r12, mov_eax_dword_ptr_[rbx+8], mov_rsi_qword_ptr_[r@@ 14@@ +rax*8], mov_r13_rax, inc_r13d, add_rsi_4, call_0xffffffffffff4@@ 288, mov_dword_ptr_[rbx+@@ 8]_r13d, pop_rbx, mov_eax_dword_ptr_[rbp], pop_rbp, pop_r12, pop_r13, pop_r14, ret
endbr64, push_r14, push_r13, mov_r13_rsi, push_r12, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, mov_r12d_dword_ptr_[r@@ di+0x14], mov_r14_qword_ptr_[r@@ di], mov_dword_ptr_[rdx@@ ]@@ _r12d, mov_rdi_r12, call_0xffffffffffff3c@@ 9e, mov_qword_ptr_[r13]_rax, mov_rdi_rax, mov_rdx_r12, mov_r13d_dword_ptr_[r@@ bx+8], mov_eax_dword_ptr_[rbx+0x10], mov_esi_r13d, imul_esi@@ _dword_ptr_[rbx+0x@@ c], inc_r13d, add_rsi_rax, add_rsi@@ _r14, call_0xffffffffffff4@@ 228, mov_dword_ptr_[rbx+@@ 8]_r13d, pop_rbx, mov_eax_dword_ptr_[rbp], pop_rbp, pop_r12, pop_r13, pop_r14, ret
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x2@@ 00@@ 8]_rax, xor_eax_eax, mov_qword_ptr_[rsi]_0, mov_dword_ptr_[rdx@@ ]_0, mov_r12_rdi, mov_rbp_rsi, mov_rbx_rdx, mov_r13_rsp, mov_rdx_r12, mov_esi_0x2000, mov_rdi_r13, call_0xffffffffffff3c@@ 83, test_rax_rax, je_0x1@@ 4b, mov_rdi_r12, call_0xffffffffffff40@@ 32, test_eax_eax, jne_0x13@@ b, mov_rdx_r13, mov_ecx_dword_ptr_[rdx], add_rdx_4, lea_eax_[rcx-0x1010101], not_ecx, and_eax_ecx, and_eax_0x80808080, je_0xffffffffffffffeb, mov_ecx_eax, shr_ecx_0x10, test_eax_0x8080, cmove_eax_ecx, lea_rcx_[rdx+2], cmove_rdx_rcx, mov_esi_eax, add_sil@@ _al, sbb_rdx_3, mov_eax_dword_ptr_[rbx], sub_rdx@@ _r13, mov_rdi_qword_ptr_[rbp], lea_rsi_[rdx@@ +rax+1], call_0xffffffffffff40@@ df, mov_qword_ptr_[rbp]_rax, mov_r8_r13, mov_ecx_dword_ptr_[r@@ 8], add_r8@@ _4, lea_edx_[r@@ cx-0x1010101], not_ecx, and_edx@@ _ecx, and_edx@@ _0x80808080, je_0xffffffffffffffe9, mov_ecx_edx, shr_ecx_0x10, test_edx@@ _0x8080, cmove@@ _edx_ecx, lea_rcx_[r@@ 8@@ +2], cmove@@ _r8@@ _rcx, mov_esi_edx, add_sil@@ _dl, sbb@@ _r8@@ _3, mov_edi_dword_ptr_[rbx], sub_r8@@ _r13, mov_rdx_r8, add_rdi_rax, mov_rsi_r13, call_0xffffffffffff40@@ fd, mov_rdx_r13, mov_ecx_dword_ptr_[rdx], add_rdx_4, lea_eax_[rcx-0x1010101], not_ecx, and_eax_ecx, and_eax_0x80808080, je_0xffffffffffffffeb, mov_ecx_eax, shr_ecx_0x10, test_eax_0x8080, cmove_eax_ecx, lea_rcx_[rdx+2], cmove_rdx_rcx, mov_edi_eax, add@@ _dil@@ _al, sbb_rdx_3, mov_eax_dword_ptr_[rbx], sub_rdx@@ _r13, add_eax_edx, cmp_byte_ptr_[r@@ sp@@ +rdx@@ -1]_0xa, mov_dword_ptr_[rbx]_eax, jne_0xfffffffffffffe@@ f4, test_eax_eax, jne_0x2a, mov_rbx_qword_ptr_[rsp+0x@@ 200@@ 8], xor_rbx_qword_ptr_fs:[0x28], jne_0x3e, add_rsp@@ _0x20@@ 18, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, lea_edx_[rax-1], add_rdx_qword_ptr_[r@@ bp], cmp_byte_ptr_[rdx]@@ _0xa, jne_0xffffffffffffffce, mov_byte_ptr_[rdx]_0, mov_eax_dword_ptr_[rbx], dec_eax, mov_dword_ptr_[rbx]_eax, jmp_0xffffffffffffffc3, mov_eax_0xffffffff, jmp_0xffffffffffffffb3, call_0xffffffffffff3e@@ 4@@ 9
endbr64, push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_r13_qword_ptr_[rdi], mov_eax_dword_ptr_[rdi+8], mov_rdi_qword_ptr_[r@@ 13+rax*8], call_0xffffffffffff3@@ bb@@ e, mov_dword_ptr_[rbp]_eax, mov_eax_eax, lea_rdi_[rax+1], call_0xffffffffffff3a@@ 70, mov_qword_ptr_[r12]_rax, mov_rdi_rax, mov_eax_dword_ptr_[rbx+8], mov_rsi_qword_ptr_[r@@ 13+rax*8], mov_r12_rax, inc_r12d, call_0xffffffffffff3e@@ 16, mov_dword_ptr_[rbx+@@ 8]_r12d, mov_eax_dword_ptr_[rbp], add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret
push_r12, push_rbp, mov_ebp_esi, push_rbx, mov_rbx_rdi, mov_edi_0x28, call_0xffffffffffff3a@@ 22, mov_r12_rax, mov_edi_0x10, call_0xffffffffffff3a@@ 15, test_r12_r12, je_0x22, test_rax_rax, je_0x3c, mov_qword_ptr_[rax]_rbx, mov_dword_ptr_[rax+8]_0, mov_dword_ptr_[r12+@@ 8]_ebp, mov_qword_ptr_[r12]_rax, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, lea_rcx_[rip+0x13@@ 134], mov_edx_0x@@ e6, lea_rsi_[rip+0x12@@ de@@ c], lea_rdi_[rip+0x12@@ e0@@ 1], call_0xffffffffffff3@@ 97@@ 1, lea_rcx_[rip+0x13@@ 1@@ 15], mov_edx_0x@@ e7, lea_rsi_[rip+0x12@@ dc@@ d], lea_rdi_[rip+0x12@@ de@@ d], call_0xffffffffffff3@@ 95@@ 2
endbr64, mov_rdi_rsi, jmp_0xffffffffffff@@ 3a@@ c@@ 9
endbr64, push_r12, push_rbp, mov_rbp_rdi, mov_edi_0x28, sub_rsp_8, call_0xffffffffffff3@@ 97@@ d, test_rax_rax, je_0x44, mov_qword_ptr_[rax]_rbp, mov_rdi_rbp, mov_r12_rax, call_0xfffffffffffffb@@ 6a, mov_dword_ptr_[r12+@@ 8]_eax, lea_rax_[rip-0x@@ 30@@ 7], mov_qword_ptr_[r12+0x10]_rax, lea_rax_[rip-0x@@ 4c@@ 3], mov_qword_ptr_[r12+0x1@@ 8]_rax, lea_rax_[rip-0x@@ 4d@@ f], mov_qword_ptr_[r12+0x@@ 20]_rax, add_rsp_8, mov_rax_r12, pop_rbp, pop_r12, ret, lea_rcx_[rip+0x@@ 130@@ ba], mov_edx_0x@@ aa, lea_rsi_[rip+0x12@@ d@@ 32], lea_rdi_[rip+0x12@@ d@@ 47], call_0xffffffffffff38@@ b@@ 7
endbr64, jmp_0xffffffffffff@@ 3a@@ 3@@ c
endbr64, push_rbp, mov_rbp_rdi, mov_edi_0x28, push_rbx, mov_ebx_esi, sub_rsp_8, call_0xffffffffffff38@@ ec, test_rax_rax, je_0x30, lea_rdx_[rip-0x@@ 38@@ 5], mov_qword_ptr_[rax+0x10]_rdx, lea_rcx_[rip-0x@@ 540], lea_rdx_[rip-0x@@ 55@@ 7], mov_qword_ptr_[rax]_rbp, mov_dword_ptr_[rax+@@ 8]_ebx, mov_qword_ptr_[rax+0x1@@ 8]_rcx, mov_qword_ptr_[rax+0x20]_rdx, add_rsp_8, pop_rbx, pop_rbp, ret, lea_rcx_[rip+0x@@ 130@@ 1d], mov_edx_0x@@ bb, lea_rsi_[rip+0x12@@ cb@@ 5], lea_rdi_[rip+0x12@@ cc@@ a], call_0xffffffffffff38@@ 3@@ a
endbr64, jmp_0xffffffffffff@@ 3@@ 9b@@ c
endbr64, sub_rsp_8, call_0xfffffffffffffe@@ 48, lea_rdx_[rip-0x@@ 4b@@ 4], mov_qword_ptr_[rax+0x10]_rdx, lea_rcx_[rip-0x@@ 13@@ f], lea_rdx_[rip-0x@@ 5d@@ 6], mov_qword_ptr_[rax+0x1@@ 8]_rcx, mov_qword_ptr_[rax+0x20]_rdx, add_rsp_8, ret
endbr64, push_r15, mov_r15_rdi, mov_edi_0x28, push_r14, mov_r14d_esi, push_r13, mov_r13d_edx, push_r12, push_rbp, mov_ebp_ecx, push_rbx, mov_ebx_r8d, sub_rsp_8, call_0xffffffffffff38@@ 1b, mov_r12_rax, mov_edi_0x18, call_0xffffffffffff38@@ 0e, test_r12_r12, je_0x5b, test_rax_rax, je_0x75, mov_qword_ptr_[rax]@@ _r15, mov_dword_ptr_[rax+8]_0, mov_dword_ptr_[rax+0x@@ c]@@ _r14d, mov_dword_ptr_[rax+0x1@@ 0]@@ _r13d, mov_dword_ptr_[rax+0x1@@ 4]_ebp, mov_qword_ptr_[r12]_rax, lea_rax_[rip-0x@@ 4e@@ 1], mov_qword_ptr_[r12+0x10]_rax, lea_rax_[rip-0x@@ 1c@@ d], mov_qword_ptr_[r12+0x1@@ 8]_rax, lea_rax_[rip-0x@@ 67@@ 9], mov_dword_ptr_[r12+@@ 8]_ebx, mov_qword_ptr_[r12+0x@@ 20]_rax, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rcx_[rip+0x12@@ ed@@ 4], mov_edx_0x@@ ce, lea_rsi_[rip+0x12@@ ba@@ c], lea_rdi_[rip+0x12@@ bc@@ 1], call_0xffffffffffff37@@ 31, lea_rcx_[rip+0x12@@ eb@@ 5], mov_edx_0x@@ cf, lea_rsi_[rip+0x12@@ b@@ 8d], lea_rdi_[rip+0x12@@ bb@@ 9], call_0xffffffffffff37@@ 1@@ 2
endbr64, push_rbp, mov_rbp_rdi, mov_rdi_qword_ptr_[rdi], call_0xffffffffffff38@@ 85, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffff@@ 38@@ 7@@ c
endbr64, sub_rsp_8, call_0xfffffffffffffd@@ 08, lea_rdx_[rip-0x@@ 37@@ 4], mov_qword_ptr_[rax+0x10]_rdx, lea_rcx_[rip-0x@@ 27@@ f], lea_rdx_[rip-0x@@ 7@@ 16], mov_qword_ptr_[rax+0x1@@ 8]_rcx, mov_qword_ptr_[rax+0x20]_rdx, add_rsp_8, ret
endbr64, push_rbp, mov_rbp_rdi, mov_rdi_qword_ptr_[rdi], call_0xffffffffffff38@@ 25, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffff@@ 38@@ 1@@ c
endbr64, jmp_0xffffffffffffffd@@ c
endbr64, push_r12, call_0xa@@ 2a, test_rax_rax, je_0x1b, mov_dword_ptr_[rax]_2, mov_r12_rax, call_0xc@@ f@@ 67, mov_qword_ptr_[r12+0x@@ 20]_rax, mov_rax_r12, pop_r12, ret, lea_rcx_[rip+0x12@@ d@@ c0], mov_edx_0x1@@ 24, lea_rsi_[rip+0x12@@ aa@@ 8], lea_rdi_[rip+0x13@@ c9@@ 5], call_0xffffffffffff36@@ 2@@ d
endbr64, push_rbp, mov_ebp_esi, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_eax_dword_ptr_[rdi], cmp_eax_esi, je_0x26, cmp_eax_8, ja_0x1@@ 38, lea_rdx_[rip+0x12@@ ae@@ b], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_dword_ptr_[rbx]@@ _ebp, add_rsp_8, pop_rbx, pop_rbp, ret, lea_rcx_[rip+0x12@@ c@@ 29], mov_edx_0x1@@ 4c, lea_rsi_[rip+0x12@@ 93@@ 1], lea_rdi_[rip+0x11@@ dd@@ a], call_0xffffffffffff34@@ b@@ 6
endbr64, cmp_dword_ptr_[r@@ di@@ ]_3, je_9, ret, jmp_0x8@@ a8@@ 0
endbr64, cmp_dword_ptr_[r@@ di@@ ]_3, je_9, ret, jmp_0x8@@ b0@@ 0
endbr64, mov_eax_dword_ptr_[rdi], cmp_eax_3, je_0x17, cmp_eax_5, je_0x22, cmp_eax_7, je_0x25, cmp_eax_8, je_0x10, ret, jmp_0x8@@ b@@ 10, jmp_0x@@ b0@@ 58, jmp_0x2@@ b@@ 50, jmp_0xb@@ 65@@ 8
endbr64, mov_eax_dword_ptr_[rdi], cmp_eax_7, je_0xf, cmp_eax_8, je_0x12, ret, jmp_0xb@@ 67@@ 8, jmp_0x@@ b0@@ 3@@ 0
endbr64, cmp_dword_ptr_[r@@ di@@ ]_3, je_9, ret, jmp_0x8@@ 9b@@ 0
endbr64, test_rdi_rdi, je_0x29, push_rbp, mov_rbp_rdi, cmp_dword_ptr_[r@@ di@@ ]_8, ja_0x@@ ba, mov_eax_dword_ptr_[rdi], lea_rdx_[rip+0x12@@ 8f@@ 9], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, ret, lea_rcx_[rip+0x12@@ a4@@ f], mov_edx_0x1@@ ce, lea_rsi_[rip+0x12@@ 77@@ 7], lea_rdi_[rip+0x11@@ c@@ 20], call_0xffffffffffff@@ 32@@ f@@ c
endbr64, mov_dword_ptr_[rdi+0x1@@ 0]_esi, ret
endbr64, cmp_dword_ptr_[r@@ di@@ ]_8, ja_0x5@@ e, mov_eax_dword_ptr_[rdi], lea_rdx_[rip+0x12@@ 8@@ 2a], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, ret
endbr64, movsd_qword_ptr_[r@@ di+0x1@@ 8]_xmm0, ret
endbr64, sub_rsp_0x18, cmp_dword_ptr_[r@@ di@@ ]_8, movsd_xmm0_qword_ptr_[r@@ di+0x18], ja@@ _0xf@@ 2, mov_eax_dword_ptr_[rdi], lea_rdx_[rip+0x12@@ 7c@@ 1], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, lea_rcx_[rip+0x12@@ 87@@ f], mov_edx_0x2@@ 32, lea_rsi_[rip+0x12@@ 5b@@ f], lea_rdi_[rip+0x11@@ a@@ 68], call_0xffffffffffff3@@ 14@@ 4
endbr64, cmp_dword_ptr_[r@@ di@@ ]_8, ja_0x5@@ e, mov_eax_dword_ptr_[rdi], lea_rdx_[rip+0x12@@ 6c@@ 2], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, push_rax, lea_rcx_[rip+0x12@@ 7d@@ b], mov_edx_0x2@@ 4e, lea_rsi_[rip+0x12@@ 5@@ 2b], lea_rdi_[rip+0x11@@ 9d@@ 4], call_0xffffffffffff30@@ b@@ 0
endbr64, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, call_0x54@@ 2, mov_r12_rax, test_rax_rax, je_0x2c, cmp_dword_ptr_[rax@@ ]_8, ja_0x@@ b2, mov_eax_dword_ptr_[rax], lea_rdx_[rip+0x12@@ 63@@ b], movsxd_rax_dword_ptr_[rdx+rax*4], mov_rsi_r12, add_rax_rdx, mov_rdi_rbp, jmp_rax, add_rsp_8, pop_rbp, mov_rax_r12, pop_r12, ret, lea_rcx_[rip+0x12@@ 6d@@ 1], mov_edx_0x2@@ 81, lea_rsi_[rip+0x12@@ 43@@ 1], lea_rdi_[rip+0x11@@ 8d@@ a], call_0xffffffffffff2@@ fb@@ 6
endbr64, sub_rsp_8, cmp_dword_ptr_[r@@ di@@ ]_8, ja_0xa@@ 6, mov_eax_dword_ptr_[rdi], lea_rcx_[rip+0x12@@ 58@@ 2], movsxd_rax_dword_ptr_[r@@ cx+rax*4], add_rax_rcx, jmp_rax, lea_rcx_[rip+0x12@@ 5@@ f0], mov_edx_0x2@@ a8, lea_rsi_[rip+0x12@@ 360], lea_rdi_[rip+0x11@@ 80@@ 9], call_0xffffffffffff2e@@ e@@ 5
endbr64, mov_eax_dword_ptr_[rdi+4], ret
endbr64, cmp_dword_ptr_[r@@ di@@ ]_8, ja_0x5@@ e, mov_eax_dword_ptr_[rdi], lea_rdx_[rip+0x12@@ 4c@@ e], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, push_rax, lea_rcx_[rip+0x12@@ 54@@ b], mov_edx_0x2@@ d3, lea_rsi_[rip+0x12@@ 2c@@ b], lea_rdi_[rip+0x11@@ 77@@ 4], call_0xffffffffffff2e@@ 5@@ 0
endbr64, mov_eax_dword_ptr_[rdi], mov_dword_ptr_[rsi]_eax, cmp_eax_8, ja_0x6@@ 2, lea_rdx_[rip+0x12@@ 460], movsxd_rax_dword_ptr_[rdx+rax*4], lea_r8_[r@@ si+4], add_rax_rdx, mov_rsi_r8, jmp_rax, push_rax, lea_rcx_[rip+0x12@@ 4a@@ 3], mov_edx_0x3@@ 03, lea_rsi_[rip+0x12@@ 23@@ 3], lea_rdi_[rip+0x11@@ 6d@@ c], call_0xffffffffffff2d@@ b@@ 8
endbr64, cmp_dword_ptr_[r@@ di@@ ]_8, ja_0x5@@ e, mov_eax_dword_ptr_[rdi], lea_rdx_[rip+0x12@@ 3f@@ 6], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, push_rax, lea_rcx_[rip+0x12@@ 40@@ 3], mov_edx_0x3@@ 24, lea_rsi_[rip+0x12@@ 1a@@ b], lea_rdi_[rip+0x11@@ 65@@ 4], call_0xffffffffffff2d@@ 3@@ 0
endbr64, sub_rsp_8, cmp_dword_ptr_[r@@ di@@ ]_8, ja_0xa@@ e, mov_eax_dword_ptr_[rdi], lea_rcx_[rip+0x12@@ 38@@ 2], movsxd_rax_dword_ptr_[r@@ cx+rax*4], add_rdi_4, add_rax_rcx, jmp_rax, lea_rcx_[rip+0x12@@ 300], mov_edx_0x3@@ 49, lea_rsi_[rip+0x12@@ 0@@ c8], lea_rdi_[rip+0x@@ 115@@ 71], call_0xffffffffffff2c@@ 4@@ d
endbr64, push_rbx, mov_esi_1, mov_rbx_rdi, mov_edi_0x28, call_0xffffffffffff30@@ ae, mov_qword_ptr_[rax+8]_rbx, mov_dword_ptr_[rax+0x1@@ 0]_0, mov_qword_ptr_[rax+0x20]_0, mov_qword_ptr_[rax+0x18]_0, pop_rbx, ret
endbr64, jmp_0xffffffffffff@@ 2d@@ 8@@ c
endbr64, push_r12, lea_rax_[rip+0x@@ 1b@@ 67@@ 3], push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, mov_edx_dword_ptr_[rdi], mov_r12_qword_ptr_[r@@ ax+rdx*8], mov_rdi_r12, call_0xffffffffffff2d@@ 72, lea_rsi_[rax+1], mov_rcx_rbp, mov_edx_1, mov_rdi_r12, call_0xffffffffffff3@@ 13@@ e, lea_rdi_[r@@ bx+4], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xffffffffffff3@@ 128, test_rax_rax, je_0x10, pop_rbx, pop_rbp, pop_r12, ret, mov_rdi_rbp, call_0xffffffffffff2d@@ 6d, test_eax_eax, je_0xffffffffffffffe8, call_0xffffffffffff2f@@ 44, mov_edi_dword_ptr_[rax], call_0xffffffffffff2e@@ 3d, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 1b@@ 26@@ 6], pop_rbx, mov_rdi_qword_ptr_[rax], pop_rbp, lea_rdx_[rip+0x12@@ 37@@ 2], mov_esi_1, xor_eax_eax, pop_r12, jmp_0xffffffffffff@@ 2a@@ c@@ 9
endbr64, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x10, mov_r13_rsp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x2@@ 00@@ 8]_rax, xor_eax_eax, mov_rbp_rdi, mov_rbx_r13, jmp_0x14, cmp_byte_ptr_[rbx]_0, je_0x4d, inc_rbx, mov_rcx_rbp, mov_edx_1, mov_esi_1, mov_rdi_rbx, call_0xffffffffffff2e@@ 88, cmp_rax_1, je_0xffffffffffffffdf, xor_r13d_r13d, mov_rax_qword_ptr_[rsp+0x@@ 200@@ 8], xor_rax_qword_ptr_fs:[0x28], jne_0xc2, add_rsp@@ _0x20@@ 10, pop_rbx, pop_rbp, pop_r12, mov_rax_r13, pop_r13, pop_r14, ret, lea_r14_[rip+0x@@ 1b@@ 53@@ 9], xor_ebx_ebx, mov_r12d@@ _9, mov_rsi_qword_ptr_[r@@ 14+r@@ bx*8], mov_rdi_r13, call_0xffffffffffff2@@ 96@@ 9, test_eax_eax, cmove@@ _r12d@@ _ebx, inc_rbx, cmp_rbx@@ _9, jne_0xffffffffffffffe7, cmp_r12d@@ _9, je_0xffffffffffffff@@ a4, mov_edi_0x18, call_0xffffffffffff2a@@ da, mov_dword_ptr_[rax]@@ _r12d, lea_rdi_[rax+4], mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_r13_rax, call_0xffffffffffff2d@@ fe, mov_qword_ptr_[r13+0x1@@ 0]_0, test_rax_rax, jne_0xffffffffffffff@@ 74, mov_rdi_rbp, call_0xffffffffffff2c@@ 25, test_eax_eax, je_0xffffffffffffff@@ 64, call_0xffffffffffff2d@@ f8, mov_edi_dword_ptr_[rax], call_0xffffffffffff2c@@ f1, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 1b@@ 11@@ a], lea_rdx_[rip+0x12@@ 22@@ b], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xffffffffffff2@@ 98@@ 1, jmp_0xffffffffffffff32, call_0xffffffffffff2e@@ 0@@ 7
endbr64, sub_rsp_8, mov_edi_0x4@@ 8, call_0xffffffffffff2a@@ 53, test_rax_rax, je_0x4a, pxor_xmm0_xmm0, movups_xmmword_ptr_[r@@ ax+@@ 8]_xmm0, movups_xmmword_ptr_[rax+0x1@@ 8]_xmm0, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+0x28]_0, mov_qword_ptr_[rax+0x20]_0, mov_qword_ptr_[rax+0x10]_0, mov_qword_ptr_[rax+0x@@ 30]_0, mov_qword_ptr_[rax+0x@@ 38]_0, mov_qword_ptr_[rax+0x@@ 40]_0, add_rsp_8, ret, lea_rcx_[rip+0x12@@ 27@@ 2], mov_edx_0x1@@ c, lea_rsi_[rip+0x12@@ 1a@@ 9], lea_rdi_[rip+0x11@@ e5@@ 2], call_0xffffffffffff2@@ 98@@ 7
endbr64, mov_rdi_qword_ptr_[rdi+0x20], jmp_0xffffffffffff@@ 2b@@ 0@@ 8
endbr64, mov_eax_dword_ptr_[rsi], mov_rdx_qword_ptr_[r@@ di+0x20], cmp_eax_1, je_0xf, mov_dword_ptr_[rdx]_eax, mov_eax_dword_ptr_[rsi+4], cmp_eax_1, je_5, mov_dword_ptr_[rdx+@@ 4]_eax, ret
endbr64, mov_edx_esi, movapd@@ _xmm2_xmm0, pxor_xmm0_xmm0, cvtsi2sd_xmm0_rdx, mov_rax_rdx, xor_edx_edx, cvttsd2si@@ _rcx@@ _xmm1, comisd@@ _xmm2_xmm0, jbe_0x@@ f, div_ecx, mov_r8d_edx, mov_eax_r8d, ret, div@@ _edi, pxor_xmm0_xmm0, mov_eax_edx, cvtsi2sd_xmm0_rax, lea_eax_[rdx@@ +rcx], comisd@@ _xmm1_xmm0, cmova@@ _edx_eax, mov_r8d_edx, mov_eax_r8d, ret
endbr64, mov_edi@@ _edi, pxor_xmm1_xmm1, cvtsi2sd_xmm1@@ _rdi, sub_rsp_0x18, movsd_qword_ptr_[r@@ sp]_xmm0, movapd_xmm0_xmm1, movsd_qword_ptr_[rsp+8@@ ]_xmm1, call_0xffffffffffff2a@@ 4e, movsd_xmm1@@ _qword_ptr_[rsp+8], movsd_xmm4@@ _qword_ptr_[rip+0x@@ 12@@ 1@@ bb], mul@@ sd_xmm1@@ _qword_ptr_[rsp], div@@ sd_xmm0_qword_ptr_[rip+0x@@ 12@@ 1a@@ 6], addsd@@ _xmm0_xmm4, movsd_xmm3@@ _qword_ptr_[rip+0x@@ 12@@ 1e@@ 2], movsd@@ _xmm5@@ _qword_ptr_[rip+0x@@ 12@@ 1a@@ 2], divsd@@ _xmm1_xmm0, movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm5@@ _xmm2, movapd_xmm0_xmm1, jbe_0x@@ 25, cvttsd2si@@ _rax@@ _xmm1, pxor_xmm2_xmm2, and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, cvttsd2si_rax_xmm0, add_rsp_0x18, ret
endbr64, mov_edi@@ _edi, pxor_xmm1_xmm1, cvtsi2sd_xmm1@@ _rdi, movsd_xmm3@@ _qword_ptr_[rip+0x@@ 12@@ 17@@ 9], movsd_xmm4@@ _qword_ptr_[rip+0x@@ 12@@ 13@@ 9], mul@@ sd_xmm1@@ _qword_ptr_[rip+0x@@ 12@@ 13@@ 9], movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm4@@ _xmm2, movapd_xmm0_xmm1, jbe_0x@@ 2d, cvttsd2si@@ _rax@@ _xmm1, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ 12@@ 10@@ 6], and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, ret
endbr64, mov_edi@@ _edi, pxor_xmm1_xmm1, cvtsi2sd_xmm1@@ _rdi, movsd_xmm3@@ _qword_ptr_[rip+0x@@ 12@@ 10@@ 9], movsd_xmm4@@ _qword_ptr_[rip+0x@@ 120@@ c9], mul@@ sd_xmm1@@ _qword_ptr_[rip+0x@@ 120@@ d1], movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm4@@ _xmm2, movapd_xmm0_xmm1, jbe_0x@@ 2d, cvttsd2si@@ _rax@@ _xmm1, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ 120@@ 96], and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x88, mov_qword_ptr_[rsp+8]_rdi, movsd_xmm1_qword_ptr_[rip+0x@@ 11@@ f6@@ 6], mov_rax_qword_ptr_[rdi+8], mov_rcx_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x7@@ 8]_rcx, xor_ecx_ecx, comisd@@ _xmm1_xmm0, mov_rbx_qword_ptr_[r@@ di+0x20], mov_eax_dword_ptr_[rax+8], mov_dword_ptr_[rbx+8]_eax, jb@@ _0xa, movsd_xmm0_qword_ptr_[rip+0x@@ 120@@ 42], lea_rax_[rsp+0x@@ 6c], mov_qword_ptr_[rbx+0x@@ 38]_0, mov_qword_ptr_[rbx+0x@@ 40]_0, mov_qword_ptr_[rbx+0x@@ 30]_0, mov_qword_ptr_[rsp+0x58]_rax, mov_rax_qword_ptr_[rsp+8], movsd_qword_ptr_[r@@ bx+0x1@@ 0]_xmm0, mov_r9d_dword_ptr_[r@@ ax+0x10], mov_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0x5@@ 4]@@ _0x64, xor_r13d_r13d, test_r9d_r9d, jne_0x4@@ 68, test_r13_r13, je_0xa, mov_rdi_r13, call_0xe@@ 208, mov_rax_qword_ptr_[rsp+8], mov_r14_qword_ptr_[r@@ ax+0x20], mov_rdi_qword_ptr_[r14+0x@@ 38], test_rdi_rdi, je_7, call_0x1@@ 18@@ 1, mov_esi_dword_ptr_[r@@ 14+8], mov_edi_dword_ptr_[r@@ 14], call_0xf@@ 35, mov_qword_ptr_[r14+0x@@ 38]_rax, mov_edi_dword_ptr_[r@@ 14+8], movsd_xmm0_qword_ptr_[r@@ 14+0x10], call_0xfffffffffffffd@@ a2, mov_dword_ptr_[r14+0x1@@ 8]_eax, mov_edi_eax, mov_eax_dword_ptr_[r@@ 14+8], pxor_xmm0_xmm0, cvtsi2sd_xmm0_rax, movsd_xmm1_qword_ptr_[rip+0x@@ 11@@ f@@ 9a], movsd_xmm3@@ _qword_ptr_[rip+0x@@ 11@@ f7@@ 2], mulsd_xmm0_qword_ptr_[rip+0x@@ 11@@ f7@@ 2], and@@ pd@@ _xmm1_xmm0, ucomisd@@ _xmm3@@ _xmm1, movapd@@ _xmm2_xmm0, jbe_0x@@ 35, cvttsd2si_rax_xmm0, pxor_xmm1_xmm1, movsd@@ _xmm5@@ _qword_ptr_[rip+0x@@ 11@@ f4@@ 3], cvtsi2sd_xmm1_rax, cmp@@ n@@ l@@ e@@ sd_xmm0_xmm1, and@@ pd@@ _xmm0_xmm5, addsd_xmm0_xmm1, movsd_xmm1_qword_ptr_[rip+0x@@ 11@@ f5@@ 1], and@@ n@@ pd@@ _xmm1_xmm2, or@@ pd@@ _xmm0_xmm1, movsd_qword_ptr_[r@@ 14+0x@@ 20]_xmm0, mov_eax_edi, pxor_xmm0_xmm0, cvtsi2sd_xmm0_rax, movsd_xmm1_qword_ptr_[rip+0x@@ 11@@ f@@ 30], movsd_xmm4@@ _qword_ptr_[rip+0x@@ 11@@ f0@@ 8], mulsd_xmm0_qword_ptr_[rip+0x@@ 11@@ f@@ 10], and@@ pd@@ _xmm1_xmm0, ucomisd@@ _xmm4@@ _xmm1, movapd@@ _xmm2_xmm0, jbe_0x@@ 35, cvttsd2si_rax_xmm0, pxor_xmm1_xmm1, movsd@@ _xmm6@@ _qword_ptr_[rip+0x@@ 11@@ ed@@ 9], cvtsi2sd_xmm1_rax, cmp@@ n@@ l@@ e@@ sd_xmm0_xmm1, and@@ pd@@ _xmm0_xmm@@ 6, addsd_xmm0_xmm1, movsd_xmm1_qword_ptr_[rip+0x@@ 11@@ ee@@ 7], and@@ n@@ pd@@ _xmm1_xmm2, or@@ pd@@ _xmm0_xmm1, movsd_qword_ptr_[r@@ 14+0x@@ 28]_xmm0, call_0xdb@@ 81, mov_r13_rax, mov_rax_qword_ptr_[rsp+8], xor_ebp_ebp, mov_rax_qword_ptr_[rax+8], lea_r12_[rsp+0x@@ 70], mov_rdi_qword_ptr_[rax], call_qword_ptr_[rax+0x20], mov_r8d_dword_ptr_[r@@ 14+8], mov_r15_qword_ptr_[rsp+8], test_r8d_r8d, jne_0x28, jmp_0x@@ a5, div_ecx, mov_esi_edx, mov_ecx_dword_ptr_[rsp+0x@@ 6c], mov_rdx_qword_ptr_[rsp+0x70], mov_rdi_r13, inc_ebp, call_0xd@@ ca@@ e, cmp_ebp_dword_ptr_[r@@ 14+8], jae_0x@@ 85, mov_qword_ptr_[rsp+0x70]_0, mov_rax_qword_ptr_[r15+8], mov_rdx_qword_ptr_[rsp+0x58], mov_rdi_qword_ptr_[rax], mov_rsi_r12, call_qword_ptr_[rax+0x10], mov_edx_dword_ptr_[rsp+0x@@ 6c], mov_rsi_qword_ptr_[rsp+0x70], mov_rdi_qword_ptr_[r14+0x@@ 38], call_0xe0@@ 7, xor_edx_edx, div_dword_ptr_[r@@ 14+8], movsd_xmm2@@ _qword_ptr_[r@@ 14+0x20], movsd_xmm1_qword_ptr_[r@@ 14+0x28], mov_esi_dword_ptr_[r@@ 14+0x18], pxor_xmm0_xmm0, cvttsd2si@@ _rcx@@ _xmm1, mov_eax_edx, cvtsi2sd_xmm0_rax, mov_eax_edx, xor_edx_edx, comisd@@ _xmm2_xmm0, ja_0xffffffffffffff@@ 84, div_esi, pxor_xmm0_xmm0, mov_eax_edx, cvtsi2sd_xmm0_rax, add_ecx@@ _edx, mov_esi_edx, comisd@@ _xmm1_xmm0, cmova@@ _esi@@ _ecx, jmp_0xffffffffffffff6e, mov_rax_qword_ptr_[rsp+8], mov_edi_dword_ptr_[r@@ ax+0x10], test_edi_edi, jne_0x@@ 58@@ 6, mov_rax_qword_ptr_[rsp+0x10], test_rax_rax, je_0xa, mov_rdi_rax, call_0xffffffffffff26@@ 63, mov_rdi_r13, call_0xd@@ ea@@ b, mov_qword_ptr_[rsp+0x10]_rax, mov_rax_qword_ptr_[rsp+8], mov_esi_dword_ptr_[r@@ ax+0x10], test_esi_esi, jne_0x5@@ 2f, mov_ebp_dword_ptr_[r@@ bx+8], mov_esi_4, mov_rdi_rbp, call_0xffffffffffff2@@ 92@@ 6, mov_esi_4, mov_rdi_rbp, mov_r15_rax, call_0xffffffffffff@@ 29@@ 16, mov_rdi_r13, mov_qword_ptr_[rsp+0x18]_rax, call_0xd@@ e@@ 59, mov_rdi_qword_ptr_[rbx+0x30], mov_dword_ptr_[rsp+0x24]_eax, test_rdi_rdi, je_7, call_0xffffffffffff2@@ 607, mov_edi_dword_ptr_[r@@ bx+0x18], mov_esi_4, call_0xffffffffffff28@@ ea, mov_r14d_dword_ptr_[r@@ bx+8], mov_qword_ptr_[rbx+0x30]_rax, test_r14d_r14d, je_0x71, lea_edx_[r@@ 14-1], xor_eax_eax, mov_rcx_rax, mov_dword_ptr_[r15@@ +rax*@@ 4]_eax, inc_rax, cmp_rdx_rcx, jne_0xfffffffffffffff3, mov_r12_r15, lea_rbp_[r@@ 15@@ +rdx*4@@ +4], call_0xffffffffffff2@@ 9f0, xor_edx_edx, div@@ _r14d, mov_ecx_dword_ptr_[r@@ 12], add_r12@@ _4, lea_rax_[r@@ 15@@ +rdx*4], mov_edx_dword_ptr_[rax], mov_dword_ptr_[r12@@ -@@ 4]_edx, mov_dword_ptr_[rax]@@ _ecx, cmp_rbp_r12, jne_0xffffffffffffffde, mov_eax_dword_ptr_[rbx+8], test_eax_eax, je_0x1e, lea_ecx_[rax-1], xor_eax_eax, mov_edx_dword_ptr_[r@@ 15@@ +rax*4], mov_rsi_qword_ptr_[rsp+0x18], mov_dword_ptr_[rsi@@ +rdx*@@ 4]_eax, mov_rdx_rax, inc_rax, cmp_rdx_rcx, jne_0xffffffffffffffeb, mov_rax_qword_ptr_[rsp+0x10], mov_dword_ptr_[rsp+0x20]_0, lea_rcx_[rax@@ +4], mov_eax_dword_ptr_[rsp+0x24], mov_qword_ptr_[rsp+0x30]_rcx, dec_eax, lea_rax_[rcx@@ +rax*4], mov_qword_ptr_[rsp+0x38]_rax, xor_r14d_r14d, mov_rdi_qword_ptr_[rbx+0x40], test_rdi_rdi, je_7, call_0xe@@ 77, mov_esi_dword_ptr_[r@@ bx+8], mov_edi_dword_ptr_[r@@ bx+4], call_0xc@@ 2c, mov_qword_ptr_[rbx+0x40]_rax, mov_edi_dword_ptr_[r@@ bx+8], mov_esi_1, call_0xffffffffffff28@@ 1b, mov_rdi_r13, mov_rbp_rax, call_0xdd@@ 60, test_eax_eax, je_0x1@@ 4b, mov_rcx_qword_ptr_[rsp+0x30], dec_eax, lea_rax_[rcx@@ +rax*4], mov_qword_ptr_[rsp+0x40]_rax, mov_qword_ptr_[rsp+0x2@@ 8]_r15, mov_dword_ptr_[rsp+0x4@@ 8]_r14d, mov_r12_qword_ptr_[rsp+0x10], mov_esi_dword_ptr_[r@@ 12], mov_rdi_r13, call_0xd@@ ba@@ d, mov_edx_dword_ptr_[rbx+8], mov_r14d_eax, xor_esi_esi, mov_rdi_rbp, call_0xffffffffffff22@@ 6d, xor_r15d_r15d, test_r14d_r14d, je_0xf0, mov_dword_ptr_[rsp+0x50]@@ _r14d, mov_r14_rbp, mov_rbp_r12, jmp_0x1a, inc@@ _r15d, mov_byte_ptr_[rdx@@ ]_1, cmp_dword_ptr_[rsp+0x@@ 50]@@ _r15d, je_0xc5, mov_esi_dword_ptr_[r@@ bp], mov_edx_r15d, mov_rdi_r13, call_0xd@@ ba@@ e, mov_esi_dword_ptr_[r@@ bp], mov_edx_r15d, mov_rdi_r13, mov_r12_rax, call_0x@@ dc@@ 2d, mov_rdi_qword_ptr_[rbx+0x40], mov_edx_eax, mov_rsi_r12, call_0xb@@ af, xor_edx_edx, div_dword_ptr_[r@@ bx+8], add_rdx@@ _r14, cmp_byte_ptr_[rdx]_0, je_0xffffffffffffff@@ b7, mov_rbp_r14, mov_r14d_dword_ptr_[rsp+0x@@ 48], mov_rdi_rbp, mov_r15_qword_ptr_[rsp+0x28], inc@@ _r14d, call_0xffffffffffff24@@ 5a, cmp_dword_ptr_[rsp+0x@@ 20@@ ]_9, ja@@ _0xf, cmp_r14d@@ _0x3@@ e7, jbe_0xfffffffffffffe@@ f7, mov_rdi_qword_ptr_[rsp+0x18], call_0xffffffffffff24@@ 3c, mov_rdi_r15, call_0xffffffffffff24@@ 34, dec@@ _dword_ptr_[rsp+0x@@ 54], je_0x2@@ 24, mov_rax_qword_ptr_[rsp+8], mov_r9d_dword_ptr_[r@@ ax+0x10], test_r9d_r9d, je_0xfffffffffffffb@@ a9, mov_rax_qword_ptr_[rip+0x@@ 1a@@ 97@@ 4], mov_ecx_dword_ptr_[r@@ bx+8], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x11@@ ad@@ 7], mov_esi_1, xor_eax_eax, call_0xffffffffffff2@@ 1d8, jmp_0xfffffffffffffb@@ 83, mov_r12_rbp, mov_rbp_r14, add_r12@@ _4, cmp_r12@@ _qword_ptr_[rsp+0x40], jne_0xfffffffffffffe@@ e5, mov_r15_qword_ptr_[rsp+0x28], mov_rdi_rbp, call_0xffffffffffff2@@ 3c@@ b, mov_ecx_dword_ptr_[rsp+0x24], test_ecx_ecx, je_0x1@@ a3, mov_r12_qword_ptr_[rsp+0x10], xor_ebp_ebp, mov_r14_r15, mov_esi_dword_ptr_[r@@ 12], mov_rdi_r13, call_0xda@@ 69, mov_dword_ptr_[rsp+0x28]_eax, test_eax_eax, je_0x1@@ 7e, cmp_ebp_dword_ptr_[r@@ bx+8], je_0x1@@ 44, mov_esi_dword_ptr_[r@@ 12], mov_r8d_ebp, xor_r15d_r15d, xor_edx_edx, mov_rdi_r13, mov_dword_ptr_[rsp+0x40]@@ _r8d, call_0xda@@ 86, mov_esi_dword_ptr_[r@@ 12], xor_edx_edx, mov_rdi_r13, mov_rbp_rax, call_0xd@@ b0@@ 5, mov_rdi_qword_ptr_[rbx+0x40], mov_rsi_rbp, mov_edx_eax, call_0xa@@ 87, mov_ecx_dword_ptr_[r@@ bx+8], xor_edx_edx, div_ecx, mov_r8d_dword_ptr_[rsp+0x@@ 40], mov_rsi_qword_ptr_[rbx+0x@@ 30], mov_edi_dword_ptr_[r@@ 12], mov_dword_ptr_[rsp+0x40]@@ _r15d, mov_eax_ecx, lea_r9d_[r@@ 8+r@@ 15], mov_ebp_r8d, xor_r8d_r8d, mov_r15d_r8d, sub_eax_edx, add_eax_dword_ptr_[r@@ 14+r@@ 9*4], xor_edx_edx, div_ecx, xor_r9d_r9d, mov_dword_ptr_[rsi@@ +r@@ di*@@ 4]_edx, mov_esi_dword_ptr_[r@@ 12], jmp_0x40, mov_eax_edx, mov_edi_ebp, lea_rcx_[r@@ 14@@ +rax*4], lea_rdi_[r@@ 14+r@@ di*4], mov_eax_dword_ptr_[rcx], mov_r10d_dword_ptr_[r@@ di], inc@@ _r9d, mov_dword_ptr_[rcx@@ ]@@ _r10d, mov_dword_ptr_[rdi]_eax, mov_ecx_dword_ptr_[r@@ cx], mov_dword_ptr_[r@@ 11@@ +rcx*@@ 4]_edx, mov_dword_ptr_[r@@ 11@@ +rax*@@ 4]_ebp, xor_edx_edx, lea_eax_[r@@ 15+1], div@@ _dword_ptr_[rsp+0x28], inc_ebp, mov_r15d_edx, test_edx_edx, je_0xac, mov_edx_r15d, mov_rdi_r13, mov_dword_ptr_[rsp+0x50]@@ _r9d, call_0xd@@ 9d@@ b, mov_esi_dword_ptr_[r@@ 12], mov_edx_r15d, mov_rdi_r13, mov_qword_ptr_[rsp+0x48]_rax, call_0xda@@ 57, mov_r10@@ _qword_ptr_[rsp+0x48], mov_rdi_qword_ptr_[rbx+0x40], mov_rsi_r10, mov_edx_eax, call_0x9d@@ 4, mov_ecx_dword_ptr_[r@@ bx+8], xor_edx_edx, div_ecx, mov_r10d_dword_ptr_[r@@ 12], mov_rdi_qword_ptr_[rbx+0x30], mov_r11_qword_ptr_[rsp+0x18], mov_eax_dword_ptr_[r@@ di+r@@ 10@@ *4], mov_r9d_dword_ptr_[rsp+0x@@ 50], mov_rsi_r10, add_eax_edx, xor_edx_edx, div_ecx, mov_edx_dword_ptr_[r@@ 11+rdx*4], cmp_edx@@ _ebp, jae_0xffffffffffffff@@ 63, mov_r15d_dword_ptr_[rsp+0x@@ 40], add_ecx@@ _r9d, mov_r8d_ebp, inc@@ _r15d, sub_ecx@@ _ebp, sub_r8d@@ _r9d, cmp_ecx@@ _r15d, ja_0xfffffffffffffe@@ d7, inc@@ _dword_ptr_[rsp+0x20], mov_r15_r14, mov_eax_dword_ptr_[rsp+0x20], cmp_eax_9, ja_0xfffffffffffffe@@ 02, xor_r14d_r14d, jmp_0xfffffffffffffc@@ ea, add_r12@@ _4, cmp_qword_ptr_[rsp+0x@@ 3@@ 8]_r12, jne_0xfffffffffffffe@@ 77, mov_r15_r14, mov_rdi_qword_ptr_[rsp+0x18], call_0xffffffffffff22@@ 18, mov_rdi_r15, call_0xffffffffffff22@@ 10, dec@@ _dword_ptr_[rsp+0x@@ 54], test_r13_r13, je_0xa, mov_rdi_r13, call_0xdb@@ 9f, mov_rax_qword_ptr_[rsp+0x10], test_rax_rax, je_0xa, mov_rdi_rax, call_0xffffffffffff2@@ 1e@@ d, mov_edx_dword_ptr_[rsp+0x@@ 54], xor_r12d_r12d, test_edx_edx, je_0x9b, mov_edi_0x18, call_0xffffffffffff20@@ a4, mov_r15_qword_ptr_[rsp+8], mov_r12_rax, mov_eax_dword_ptr_[r15], mov_edi_0x40, mov_dword_ptr_[r12]_eax, call_0xffffffffffff20@@ 8b, mov_rdx_qword_ptr_[rbx+0x30], mov_qword_ptr_[rax+0x28]_rdx, mov_qword_ptr_[rbx+0x@@ 30]_0, mov_rdx_qword_ptr_[rbx+0x@@ 38], mov_qword_ptr_[rax+0x30]_rdx, mov_qword_ptr_[rbx+0x@@ 38]_0, mov_rdx_qword_ptr_[rbx+0x@@ 40], mov_qword_ptr_[rax+0x38]_rdx, mov_qword_ptr_[rbx+0x@@ 40]_0, movsd_xmm0_qword_ptr_[r@@ bx+0x28], movsd_qword_ptr_[r@@ ax+0x@@ 20]_xmm0, movsd_xmm0_qword_ptr_[r@@ bx+0x20], movsd_qword_ptr_[r@@ ax+0x1@@ 8]_xmm0, mov_edx_dword_ptr_[r@@ bx+0x18], mov_dword_ptr_[rax+0x10]_edx, movsd_xmm0_qword_ptr_[r@@ bx+0x10], movsd_qword_ptr_[r@@ ax+@@ 8]_xmm0, mov_edx_dword_ptr_[rbx+8], mov_qword_ptr_[r12+0x10]_rax, mov_dword_ptr_[rax]_edx, mov_eax_dword_ptr_[rbx+8], mov_dword_ptr_[r12+@@ 4]_eax, mov_eax_dword_ptr_[r@@ 15+0x10], test_eax_eax, jne_0x@@ 82, mov_rax_qword_ptr_[rsp+0x78], xor_rax_qword_ptr_fs:[0x28], jne_0x93, add_rsp_0x88, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[rip+0x@@ 1a@@ 67@@ 9], mov_edx_0x1@@ 9, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x11@@ 7@@ bb], call_0xffffffffffff24@@ ed, jmp_0xfffffffffffffa@@ b7, mov_rax_qword_ptr_[rip+0x@@ 1a@@ 65@@ 1], mov_edx_0x1@@ 7, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x11@@ 77@@ b], call_0xffffffffffff24@@ c5, jmp_0xfffffffffffffa@@ 60, mov_rax_qword_ptr_[rip+0x@@ 1a@@ 6@@ 29], mov_edx_0x3@@ 5, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x11@@ 7b@@ d], call_0xffffffffffff24@@ 9d, jmp_0xffffffffffffff64, call_0xffffffffffff@@ 23@@ 1@@ 3
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0x28, mov_rbx_qword_ptr_[rdi+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_r12_[rsp+0x@@ c], lea_r13_[rsp+0x10], mov_qword_ptr_[rsp+0x10]_0, call_0xfffffffffffff2d@@ 8, mov_rdi_qword_ptr_[rbx+0x30], mov_rdx_r12, mov_rsi_r13, call_0x7e@@ 9, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r12, call_0xffffffffffff24@@ 24, mov_esi_dword_ptr_[rsp+0xc], mov_rdi_qword_ptr_[rsp+0x10], mov_rcx_rbp, mov_edx_1, call_0xffffffffffff24@@ 0e, mov_rdi_qword_ptr_[rsp+0x10], call_0xffffffffffff20@@ 14, mov_rdi_qword_ptr_[rbx+0x38], mov_rdx_r12, mov_rsi_r13, call_0x7a@@ 5, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r12, call_0xffffffffffff2@@ 3e0, mov_esi_dword_ptr_[rsp+0xc], mov_rdi_qword_ptr_[rsp+0x10], mov_rcx_rbp, mov_edx_1, call_0xffffffffffff2@@ 3c@@ a, mov_rdi_qword_ptr_[rsp+0x10], call_0xffffffffffff@@ 1fd@@ 0, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_rbx, call_0xffffffffffff2@@ 3a@@ b, lea_rdi_[rbx+8], mov_rcx_rbp, mov_edx_1, mov_esi_8, call_0xffffffffffff@@ 23@@ 95, lea_rdi_[r@@ bx+0x10], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xffffffffffff2@@ 37@@ f, lea_rdi_[r@@ bx+0x18], mov_rcx_rbp, mov_edx_1, mov_esi_8, call_0xffffffffffff2@@ 36@@ 9, lea_rdi_[r@@ bx+0x20], mov_rcx_rbp, mov_edx_1, mov_esi_8, call_0xffffffffffff2@@ 35@@ 3, mov_esi_dword_ptr_[r@@ bx+0x10], mov_rdi_qword_ptr_[rbx+0x28], shl_rsi@@ _2, mov_rcx_rbp, mov_edx_1, call_0xffffffffffff2@@ 33@@ b, test_rax_rax, je_0x23, mov_eax_1, mov_rbx_qword_ptr_[rsp+0x18], xor_rbx_qword_ptr_fs:[0x28], jne_0x4a, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_rdi_rbp, call_0xffffffffffff1f@@ 6d, test_eax_eax, je_0xffffffffffffff@@ d5, call_0xffffffffffff2@@ 144, mov_edi_dword_ptr_[rax], call_0xffffffffffff20@@ 3d, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 1a@@ 46@@ 6], lea_rdx_[rip+0x@@ 115@@ 77], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xffffffffffff1c@@ cd, xor_eax_eax, jmp_0xffffffffffffffaa, call_0xffffffffffff2@@ 15@@ 4
endbr64, push_r15, push_r14, push_r13, mov_r13_rsi, push_r12, push_rbp, mov_rbp_rdi, mov_edi_0x40, push_rbx, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xffffffffffff1d@@ 73, mov_qword_ptr_[r13+0x1@@ 0]_rax, mov_qword_ptr_[rax+0x@@ 30]_0, lea_r14_[r@@ sp+4], mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r14, mov_rbx_rax, call_0xffffffffffff20@@ 8a, mov_r15d_dword_ptr_[r@@ sp+4], mov_rdi_r15, call_0xffffffffffff1d@@ 3d, mov_rdi_rax, mov_rcx_rbp, mov_edx_1, mov_rsi_r15, mov_r12_rax, call_0xffffffffffff20@@ 67, mov_esi_dword_ptr_[rsp+4], mov_rdi_r12, call_0x7@@ 2b, mov_rdi_r12, mov_qword_ptr_[rbx+0x30]_rax, call_0xffffffffffff1e@@ 3f, mov_qword_ptr_[r13+0x1@@ 0]_rbx, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r14, mov_qword_ptr_[rbx+0x@@ 38]_0, call_0xffffffffffff20@@ 2e, mov_r13d_dword_ptr_[r@@ sp+4], mov_rdi_r13, call_0xffffffffffff1c@@ e1, mov_rdi_rax, mov_rcx_rbp, mov_edx_1, mov_rsi_r13, mov_r12_rax, call_0xffffffffffff2@@ 00@@ b, mov_esi_dword_ptr_[rsp+4], mov_rdi_r12, call_0x6c@@ f, mov_rdi_r12, mov_qword_ptr_[rbx+0x38]_rax, call_0xffffffffffff1d@@ e3, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_rbx, call_0xffffffffffff@@ 1fd@@ e, lea_rdi_[rbx+8], mov_rcx_rbp, mov_edx_1, mov_esi_8, call_0xffffffffffff@@ 1fc@@ 8, lea_rdi_[r@@ bx+0x10], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xffffffffffff@@ 1fb@@ 2, lea_rdi_[r@@ bx+0x18], mov_rcx_rbp, mov_edx_1, mov_esi_8, call_0xffffffffffff1f@@ 9c, mov_rcx_rbp, mov_edx_1, mov_esi_8, lea_rdi_[r@@ bx+0x20], call_0xffffffffffff1f@@ 86, mov_r12d_dword_ptr_[r@@ bx+0x10], shl_r12@@ _2, mov_rdi_r12, call_0xffffffffffff1c@@ 36, mov_rdi_rax, mov_rcx_rbp, mov_edx_1, mov_rsi_r12, mov_qword_ptr_[rbx+0x28]_rax, call_0xffffffffffff1f@@ 5f, test_rax_rax, je_0x27, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x51, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_rbp, call_0xffffffffffff1d@@ 6d, test_eax_eax, je_0xffffffffffffffd1, call_0xffffffffffff1f@@ 44, mov_edi_dword_ptr_[rax], call_0xffffffffffff1e@@ 3d, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 1a@@ 26@@ 6], lea_rdx_[rip+0x@@ 113@@ 77], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xffffffffffff1a@@ cd, jmp_0xffffffffffffffa3, call_0xffffffffffff1f@@ 5@@ 6
endbr64, push_r13, mov_r13d_edx, push_r12, mov_r12_rsi, push_rbp, push_rbx, sub_rsp_8, mov_rbx_qword_ptr_[rdi+0x10], mov_rdi_qword_ptr_[rbx+0x30], call_0x3f@@ 4, xor_edx_edx, div_dword_ptr_[r@@ bx], mov_rdi_qword_ptr_[rbx+0x38], mov_rsi_r12, mov_ebp_edx, mov_edx_r13d, call_0x3d@@ f, mov_edi_dword_ptr_[rbx], xor_edx_edx, div@@ _edi, movsd_xmm2@@ _qword_ptr_[r@@ bx+0x18], movsd_xmm1_qword_ptr_[r@@ bx+0x20], mov_r8d_dword_ptr_[r@@ bx+0x10], mov_eax_ebp, pxor_xmm0_xmm0, cvtsi2sd_xmm0_rax, cvttsd2si@@ _rcx@@ _xmm1, comisd@@ _xmm2_xmm0, mov_esi_edx, jbe_0x@@ 28, mov_eax_ebp, xor_edx_edx, div_ecx, mov_rax_qword_ptr_[rbx+0x28], mov_edx_edx, add_esi@@ _dword_ptr_[r@@ ax+rdx*4], mov_eax_esi, xor_edx_edx, div@@ _edi, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_eax_edx, ret, xor_edx_edx, mov_eax_ebp, div@@ _r8d, pxor_xmm0_xmm0, mov_eax_edx, cvtsi2sd_xmm0_rax, add_ecx@@ _edx, comisd@@ _xmm1_xmm0, cmova@@ _edx_ecx, jmp_0xffffffffffffffc@@ 5
endbr64, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, mov_r12_qword_ptr_[r@@ di+0x10], mov_rdi_qword_ptr_[r12+0x@@ 28], call_0xffffffffffff1c@@ 19, mov_rdi_qword_ptr_[r12+0x30], call_0x5@@ 3f, mov_rdi_qword_ptr_[r12+0x@@ 38], call_0x5@@ 35, mov_rdi_r12, call_0xffffffffffff1b@@ fd, add_rsp_8, mov_rdi_rbp, pop_rbp, pop_r12, jmp_0xffffffffffff@@ 1b@@ e@@ e
endbr64, push_r12, push_rbp, push_rbx, mov_rbx_rsi, add_rbx_4, mov_rbp_qword_ptr_[r@@ di+0x10], mov_rdi_qword_ptr_[rbp+0x30], call_0x60@@ 9, mov_dword_ptr_[rbx@@ -4]_eax, mov_r12d_eax, mov_rsi_rbx, mov_rdi_qword_ptr_[rbp+0x30], call_0x5@@ 17, mov_edi_r12d, call_0x5@@ 3f, mov_edi_eax, add_rbx@@ _rdi, mov_rdi_qword_ptr_[rbp+0x@@ 38], add_rbx_4, call_0x5d@@ d, mov_dword_ptr_[rbx@@ -4]_eax, mov_r12d_eax, mov_rsi_rbx, mov_rdi_qword_ptr_[rbp+0x@@ 38], call_0x4@@ eb, mov_edi_r12d, call_0x5@@ 13, mov_edi_eax, mov_eax_dword_ptr_[rbp], add_rdi_rbx, mov_dword_ptr_[rdi]_eax, movsd_xmm1_qword_ptr_[rip+0x@@ 112@@ fc], mov_eax_dword_ptr_[rbp+0x10], mov_dword_ptr_[rdi+@@ 4]_eax, movsd_xmm0_qword_ptr_[r@@ bp+0x18], comi@@ sd_xmm0_xmm1, jae_0x@@ 3d, cvttsd2si_rax_xmm0, mov_qword_ptr_[rdi@@ +8]_rax, movsd_xmm0_qword_ptr_[r@@ bp+0x20], comi@@ sd_xmm0_xmm1, jae_0x@@ 47, cvttsd2si_rax_xmm0, mov_qword_ptr_[rdi+0x1@@ 0]_rax, mov_edx_dword_ptr_[rbp+0x10], pop_rbx, mov_rsi_qword_ptr_[rbp+0x@@ 28], pop_rbp, add_rdi@@ _0x18, shl_rdx_2, pop_r12, jmp_0xffffffffffff@@ 1fa@@ b, subsd_xmm0_xmm1, cvttsd2si_rax_xmm0, mov_qword_ptr_[rdi@@ +8]_rax, bt@@ c@@ _qword_ptr_[r@@ di+@@ 8]@@ _0x3f, movsd_xmm0_qword_ptr_[r@@ bp+0x20], comi@@ sd_xmm0_xmm1, jb_0xffffffffffffff@@ bd, subsd_xmm0_xmm1, cvttsd2si_rax_xmm0, mov_qword_ptr_[rdi+0x1@@ 0]_rax, bt@@ c@@ _qword_ptr_[r@@ di+0x1@@ 0]@@ _0x3f, jmp_0xffffffffffffffb@@ 1
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_rbp_qword_ptr_[r@@ di+0x10], mov_rdi_qword_ptr_[rbp+0x30], call_0x50@@ a, mov_rdi_qword_ptr_[rbp+0x@@ 38], mov_r13d_eax, call_0x4@@ fe, mov_r12d_eax, mov_edi_r13d, call_0x4@@ 43, mov_edi_r12d, mov_ebx_eax, call_0x4@@ 39, mov_r8d_eax, mov_eax_dword_ptr_[rbp+0x10], add_rsp_8, lea_eax_[r@@ bx@@ +rax*4+0x@@ 24], pop_rbx, pop_rbp, pop_r12, add_eax@@ _r8d, pop_r13, ret
endbr64, push_r15, mov_r15_rsi, push_r14, push_r13, push_r12, lea_r12_[r@@ di+4], push_rbp, push_rbx, mov_ebx_edx, sub_rsp_0x28, mov_esi_dword_ptr_[r@@ di], mov_edi_esi, mov_dword_ptr_[rsp]@@ _esi, call_0x3e@@ e, mov_ebp_eax, add_rbp@@ _r12, mov_r14d_dword_ptr_[r@@ bp], add_rbp@@ _4, mov_edi_r14d, call_0x3d@@ 9, mov_eax_eax, add_rax_rbp, mov_rdx_qword_ptr_[rax+8], mov_ecx_dword_ptr_[rax+4], test_rdx_rdx, mov_dword_ptr_[rsp+0x1@@ c]_ecx, mov_r13d_dword_ptr_[r@@ ax], mov_esi_dword_ptr_[r@@ sp], js_0x@@ d3, pxor_xmm1_xmm1, cvtsi2sd_xmm1@@ _rdx, mov_rdx_qword_ptr_[rax+0x10], test_rdx_rdx, js_0x@@ e3, pxor_xmm0_xmm0, cvtsi2sd_xmm0_rdx, add_rax_0x18, mov_rdi_r12, mov_ecx_ebx, mov_rdx_r15, movsd_qword_ptr_[r@@ sp+0x10]_xmm0, movsd_qword_ptr_[rsp+8@@ ]_xmm1, mov_qword_ptr_[rsp]_rax, call_0x3a@@ a, xor_edx_edx, div@@ _r13d, mov_ecx_ebx, mov_esi_r14d, mov_rdi_rbp, mov_r12d_edx, mov_rdx_r15, call_0x3@@ 92, xor_edx_edx, div@@ _r13d, movsd_xmm1@@ _qword_ptr_[rsp+8], movsd_xmm0_qword_ptr_[r@@ sp+0x10], mov_eax_r12d, pxor_xmm2_xmm2, cvtsi2sd@@ _xmm2@@ _rax, cvttsd2si@@ _rcx@@ _xmm0, mov_eax_r12d, mov_esi_edx, xor_edx_edx, comisd@@ _xmm1_xmm2, jbe_0x@@ 28, div_ecx, mov_rbx_qword_ptr_[rsp], mov_edx_edx, mov_eax_dword_ptr_[r@@ bx@@ +rdx*4], xor_edx_edx, add_eax_esi, div@@ _r13d, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, mov_eax_edx, ret, div_dword_ptr_[r@@ sp+0x1c], pxor_xmm1_xmm1, mov_eax_edx, cvtsi2sd_xmm1_rax, add_ecx@@ _edx, comi@@ sd_xmm0_xmm1, cmova@@ _edx_ecx, jmp_0xffffffffffffffc4, mov_rdi_rdx, shr_rdi@@ _1, and_edx_1, or@@ _rdi@@ _rdx, pxor_xmm1_xmm1, cvtsi2sd_xmm1@@ _rdi, mov_rdx_qword_ptr_[rax+0x10], addsd@@ _xmm1_xmm1, test_rdx_rdx, jns_0xffffffffffffff@@ 29, mov_rdi_rdx, shr_rdi@@ _1, and_edx_1, or@@ _rdi@@ _rdx, pxor_xmm0_xmm0, cvtsi2sd_xmm0@@ _rdi, addsd_xmm0_xmm0, jmp_0xffffffffffffff1@@ 3
endbr64, sub_rsp_8, test_edi_edi, jne_0x14, mov_edi_esi, call_0x35@@ 2, mov_dword_ptr_[rax]_0, add_rsp_8, ret, lea_rcx_[rip+0x@@ 11@@ 18@@ 3], mov_edx_0x1@@ 7, lea_rsi_[rip+0x1@@ 10@@ 8f], lea_rdi_[rip+0x@@ 100@@ 6c], call_0xffffffffffff17@@ 4@@ 8
endbr64, mov_ecx_dword_ptr_[r@@ di], test_ecx_ecx, jne_7, jmp_0x3@@ 66, push_rax, lea_rcx_[rip+0x@@ 11@@ 14@@ 5], mov_edx_0x2@@ 3, lea_rsi_[rip+0x1@@ 10@@ 5d], lea_rdi_[rip+0x@@ 100@@ 3a], call_0xffffffffffff17@@ 1@@ 6
endbr64, mov_r8d_dword_ptr_[r@@ di], test_r8d_r8d, jne_7, jmp_0x5@@ 64, push_rax, lea_rcx_[rip+0x@@ 11@@ 10@@ 7], mov_edx_0x3@@ 1, lea_rsi_[rip+0x1@@ 10@@ 2b], lea_rdi_[rip+0x@@ 1@@ 000@@ 8], call_0xffffffffffff16@@ e@@ 4
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_eax_dword_ptr_[rdi], test_eax_eax, jne_0x@@ b3, mov_r13_rdx, mov_r12_rsi, mov_rsi_rsp, mov_rbx_rdi, call_0x7@@ 98, mov_ebp_dword_ptr_[r@@ 13], cmp_ebp_-1, je_0x76, mov_eax_dword_ptr_[rbx], lea_r14_[rip+0x@@ 1a@@ 16@@ 1], mov_rdi_qword_ptr_[r@@ 14@@ +rax*8], call_0xffffffffffff18@@ 1d, lea_rdi_[r@@ bp@@ +rax+1], call_0xffffffffffff16@@ d3, mov_qword_ptr_[r12]_rax, mov_rbp_rax, mov_eax_dword_ptr_[rbx], mov_r12_qword_ptr_[r@@ 14@@ +rax*8], mov_rdi_r12, call_0xffffffffffff17@@ fe, lea_rbx_[rax+1], mov_rdx_rbx, mov_rsi_r12, mov_rdi_rbp, call_0xffffffffffff1c@@ 5c, mov_r14_qword_ptr_[r@@ sp], mov_edx_dword_ptr_[r13], lea_rdi_[r@@ bp+r@@ bx], mov_rsi_r14, mov_r15_rdx, call_0xffffffffffff1c@@ 44, mov_rdi_r12, call_0xffffffffffff17@@ cc, lea_eax_[r@@ 15@@ +rax+1], mov_dword_ptr_[r13]_eax, mov_rdi_r14, call_0xffffffffffff17@@ ab, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x30, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rcx_[rip+0x10@@ ff@@ 0], mov_edx_0x4@@ 1, lea_rsi_[rip+0x10@@ f@@ 24], lea_rdi_[rip+0x@@ ff@@ 01], call_0xffffffffffff15@@ dd, call_0xffffffffffff@@ 19d@@ 8
endbr64, push_rbx, mov_eax_dword_ptr_[rdi], test_eax_eax, jne_0x10, mov_rbx_rdi, call_0x70@@ 2, mov_edx_dword_ptr_[rbx], mov_dword_ptr_[rax]_edx, pop_rbx, ret, lea_rcx_[rip+0x10@@ fa@@ 0], mov_edx_0x5@@ 6, lea_rsi_[rip+0x10@@ ee@@ 4], lea_rdi_[rip+0x@@ fe@@ c1], call_0xffffffffffff15@@ 9@@ d
endbr64, push_r12, mov_r12_qword_ptr_[rip+0x@@ 1a0@@ 63], push_rbp, mov_ebp_esi, mov_rsi_r12, push_rbx, mov_rbx_rdi, call_0xffffffffffff14@@ 49, test_eax_eax, je_0x12, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret, mov_rdi_r12, call_0xffffffffffff16@@ fd, inc_eax, lea_rdi_[r@@ bx+rax], pop_rbx, mov_esi_ebp, pop_rbp, sub_esi_eax, pop_r12, jmp_0x6@@ a@@ a
endbr64, mov_edx_dword_ptr_[rdi], test_edx_edx, jne_7, jmp_0x1@@ 56, push_rax, lea_rcx_[rip+0x10@@ ef@@ 9], mov_edx_0x7@@ c, lea_rsi_[rip+0x10@@ e5@@ d], lea_rdi_[rip+0x@@ fe@@ 3a], call_0xffffffffffff15@@ 1@@ 6
endbr64, mov_edx_dword_ptr_[rdi], test_edx_edx, jne_7, jmp_0x6@@ 86, push_rax, lea_rcx_[rip+0x10@@ eb@@ 9], mov_edx_0x@@ 92, lea_rsi_[rip+0x10@@ e@@ 2d], lea_rdi_[rip+0x@@ fe@@ 0a], call_0xffffffffffff14@@ e@@ 6
endbr64, test_edi_edi, jne_7, jmp_0x6@@ 78, push_rax, lea_rcx_[rip+0x10@@ e6@@ b], mov_edx_0x@@ a5, lea_rsi_[rip+0x10@@ d@@ ff], lea_rdi_[rip+0xf@@ dd@@ c], call_0xffffffffffff14@@ b@@ 8
endbr64, test_esi_esi, jne_0xc, mov_rsi_rdx, mov_edx_ecx, jmp_0x6@@ 53, push_rax, lea_rcx_[rip+0x10@@ e@@ 1e], mov_edx_0x@@ b8, lea_rsi_[rip+0x10@@ dc@@ a], lea_rdi_[rip+0x@@ fd@@ a7], call_0xffffffffffff14@@ 8@@ 3
endbr64, test_esi_esi, jne_0xf, mov_rsi_rdx, mov_edx_ecx, mov_rcx_r8, jmp_0x8@@ 40, push_rax, lea_rcx_[rip+0x10@@ dc@@ 3], mov_edx_0x@@ cc, lea_rsi_[rip+0x10@@ d8@@ 7], lea_rdi_[rip+0x@@ fd@@ 64], call_0xffffffffffff14@@ 4@@ 0
endbr64, mov_eax_dword_ptr_[rdi], ret
endbr64, push_r12, push_rbx, mov_ebx_edi, mov_edi_8, sub_rsp_8, call_0xffffffffffff14@@ 6e, mov_r12_rax, call_0xffffffffffff19@@ c6, xor_edx_edx, div@@ _ebx, mov_rax_r12, mov_dword_ptr_[r12+@@ 4]_edx, add_rsp_8, pop_rbx, pop_r12, ret
endbr64, jmp_0xffffffffffff@@ 15@@ 6@@ c
endbr64, mov_edi_dword_ptr_[r@@ di+4], cmp_edx@@ _0xb, jbe_0x@@ 20@@ e, mov_r9d_edx, mov_eax_0x@@ 9e@@ 37@@ 7@@ 9b@@ 9, mov_ecx_0x@@ 9e@@ 37@@ 7@@ 9b@@ 9, movsx_r8d@@ _byte_ptr_[rsi@@ +5], movsx@@ _r10d@@ _byte_ptr_[rsi@@ +4], mov_r11d@@ _r8d, movsx_r8d@@ _byte_ptr_[rsi@@ +6], shl@@ _r11d@@ _8, shl_r8d@@ _0x10, add_r8d@@ _r11d, add_r10d@@ _r8d, movsx_r8d@@ _byte_ptr_[rsi@@ +7], movsx@@ _r11d@@ _byte_ptr_[rsi@@ +@@ 9], shl_r8d@@ _0x18, add_r8d@@ _r10d, mov_r10d@@ _r11d, movsx@@ _r11d@@ _byte_ptr_[r@@ si+0x@@ a], add_eax@@ _r8d, shl@@ _r10d@@ _8, movsx_r8d@@ _byte_ptr_[rsi@@ +8], shl@@ _r11d@@ _0x10, add_r11d@@ _r10d, add_r8d@@ _r11d, movsx@@ _r11d@@ _byte_ptr_[r@@ si+0x@@ b], shl@@ _r11d@@ _0x18, add_r11d@@ _r8d, add_r11d@@ _edi, movsx_edi@@ _byte_ptr_[rsi@@ +1], movsx_r8d@@ _byte_ptr_[r@@ si], shl_edi@@ _8, mov_r10d@@ _edi, movsx_edi@@ _byte_ptr_[rsi@@ +2], shl_edi@@ _0x10, add_edi@@ _r10d, add_r8d@@ _edi, movsx_edi@@ _byte_ptr_[rsi@@ +3], shl_edi@@ _0x18, add_edi@@ _r8d, sub_edi_eax, sub_edi@@ _r11d, add_ecx@@ _edi, mov_edi@@ _r11d, shr_edi@@ _0xd, xor_ecx@@ _edi, sub_eax@@ _r11d, mov_edi_ecx, sub_eax_ecx, shl_edi@@ _8, xor_eax@@ _edi, mov_edi@@ _r11d, sub_edi@@ _ecx, mov_r8d_eax, sub_edi_eax, shr_r8d@@ _0xd, xor_edi@@ _r8d, mov_r8d_edi, sub_ecx_eax, sub_ecx@@ _edi, shr_r8d@@ _0xc, xor_ecx@@ _r8d, sub_eax_edi, mov_r8d_ecx, sub_eax_ecx, shl_r8d@@ _0x10, xor_eax@@ _r8d, sub_edi@@ _ecx, mov_r8d_eax, sub_edi_eax, shr_r8d@@ _5, xor_edi@@ _r8d, sub_ecx_eax, mov_r8d_edi, sub_ecx@@ _edi, shr_r8d@@ _3, xor_ecx@@ _r8d, sub_eax_edi, mov_r8d_ecx, sub_eax_ecx, shl_r8d@@ _0xa, xor_eax@@ _r8d, sub_edi@@ _ecx, mov_r11d_eax, sub_edi_eax, shr@@ _r11d@@ _0xf, sub_r9d@@ _0xc, xor_edi@@ _r11d, add_rsi@@ _0xc, cmp_r9d@@ _0xb, ja_0xfffffffffffffe@@ f1, add_edx@@ _edi, cmp_r9d@@ _0xb, ja_0x7@@ 1, lea_r8_[rip+0x10@@ cc@@ 4], movsxd_rdi_dword_ptr_[r@@ 8+r@@ 9*4], add_rdi@@ _r8, jmp@@ _rdi, lea_esi_[rax@@ +rdx], sub_ecx@@ _esi, mov_esi_edx, shr_esi@@ _0xd, xor_ecx@@ _esi, sub_eax_edx, mov_esi_ecx, sub_eax_ecx, shl_esi@@ _8, xor_eax@@ _esi, sub_edx_ecx, mov_esi_eax, sub_edx_eax, shr_esi@@ _0xd, xor_esi@@ _edx, sub_ecx_eax, mov_edx_esi, sub_ecx@@ _esi, shr_edx@@ _0xc, xor_ecx@@ _edx, sub_eax_esi, mov_edx_eax, mov_eax_ecx, sub_edx_ecx, shl_eax_0x10, xor_edx_eax, sub_esi@@ _ecx, mov_eax_edx, sub_esi@@ _edx, shr_eax@@ _5, xor_esi@@ _eax, sub_ecx_edx, mov_eax_esi, sub_ecx@@ _esi, shr_eax_3, xor_ecx@@ _eax, sub_edx_esi, mov_eax_ecx, sub_edx_ecx, shl_eax@@ _0xa, xor_edx_eax, mov_eax_esi, sub_eax_ecx, sub_eax_edx, shr_edx@@ _0xf, xor_eax_edx, ret, mov_r9d_edx, mov_eax_0x@@ 9e@@ 37@@ 7@@ 9b@@ 9, mov_ecx_0x@@ 9e@@ 37@@ 7@@ 9b@@ 9, jmp_0xffffffffffffff1@@ 0
endbr64, push_rbx, movabs_rax@@ _0x@@ 9e@@ 37@@ 7@@ 9b@@ 9@@ 9e@@ 37@@ 7@@ 9b@@ 9, mov_r9d_edx, mov_edi_dword_ptr_[r@@ di+4], mov_qword_ptr_[rcx]_rax, mov_dword_ptr_[rcx+@@ 8]_edi, cmp_edx@@ _0xb, jbe_0x@@ 26@@ a, mov_r10d@@ _edx, mov_eax_0x@@ 9e@@ 37@@ 7@@ 9b@@ 9, mov_edx_0x@@ 9e@@ 37@@ 7@@ 9b@@ 9, movsx_r8d@@ _byte_ptr_[rsi@@ +1], movsx@@ _r11d@@ _byte_ptr_[r@@ si], mov_ebx_r8d, movsx_r8d@@ _byte_ptr_[rsi@@ +2], shl_ebx@@ _8, shl_r8d@@ _0x10, add_r8d@@ _ebx, add_r11d@@ _r8d, movsx_r8d@@ _byte_ptr_[rsi@@ +3], shl_r8d@@ _0x18, add_r8d@@ _r11d, add_eax@@ _r8d, mov_dword_ptr_[rcx]_eax, movsx_r8d@@ _byte_ptr_[rsi@@ +5], movsx@@ _r11d@@ _byte_ptr_[rsi@@ +4], mov_ebx_r8d, movsx_r8d@@ _byte_ptr_[rsi@@ +6], shl_ebx@@ _8, shl_r8d@@ _0x10, add_r8d@@ _ebx, add_r11d@@ _r8d, movsx_r8d@@ _byte_ptr_[rsi@@ +7], shl_r8d@@ _0x18, add_r8d@@ _r11d, add_edx@@ _r8d, mov_dword_ptr_[rcx+@@ 4]_edx, movsx_r8d@@ _byte_ptr_[rsi@@ +@@ 9], movsx@@ _r11d@@ _byte_ptr_[rsi@@ +8], mov_ebx_r8d, movsx_r8d@@ _byte_ptr_[r@@ si+0x@@ a], shl_ebx@@ _8, shl_r8d@@ _0x10, add_r8d@@ _ebx, add_r11d@@ _r8d, movsx_r8d@@ _byte_ptr_[r@@ si+0x@@ b], shl_r8d@@ _0x18, add_r8d@@ _r11d, add_edi@@ _r8d, lea_r8d@@ _[rdx+r@@ di], sub_eax@@ _r8d, mov_r8d_edi, shr_r8d@@ _0xd, xor_eax@@ _r8d, sub_edx@@ _edi, mov_r8d_eax, shl_r8d@@ _8, sub_edx_eax, xor_edx@@ _r8d, sub_edi_eax, mov_r8d_edx, sub_edi@@ _edx, shr_r8d@@ _0xd, xor_edi@@ _r8d, mov_r8d_edi, sub_eax_edx, sub_eax_edi, shr_r8d@@ _0xc, xor_eax@@ _r8d, sub_edx@@ _edi, mov_r8d_eax, sub_edx_eax, shl_r8d@@ _0x10, xor_edx@@ _r8d, sub_edi_eax, mov_r8d_edx, sub_edi@@ _edx, shr_r8d@@ _5, xor_edi@@ _r8d, sub_eax_edx, mov_r8d_edi, sub_eax_edi, shr_r8d@@ _3, xor_eax@@ _r8d, sub_edx@@ _edi, mov_r8d_eax, shl_r8d@@ _0xa, sub_edx_eax, xor_edx@@ _r8d, sub_edi_eax, mov_r8d_edx, sub_edi@@ _edx, shr_r8d@@ _0xf, xor_edi@@ _r8d, sub_r10d@@ _0xc, mov_dword_ptr_[rcx]_eax, mov_dword_ptr_[rcx+@@ 4]_edx, mov_dword_ptr_[rcx+@@ 8]_edi, add_rsi@@ _0xc, cmp_r10d@@ _0xb, ja_0xfffffffffffffe@@ dd, add_r9d@@ _edi, mov_dword_ptr_[rcx+@@ 8]_r9d, cmp_r10d@@ _0xb, ja_0x@@ 99, lea_r8_[rip+0x10@@ a8@@ f], movsxd_rdi_dword_ptr_[r@@ 8+r@@ 10@@ *4], add_rdi@@ _r8, jmp@@ _rdi, lea_esi@@ _[rdx+r@@ 9], sub_eax_esi, mov_esi_r9d, shr_esi@@ _0xd, xor_eax@@ _esi, sub_edx_r9d, mov_esi_eax, sub_edx_eax, shl_esi@@ _8, xor_edx@@ _esi, sub_r9d@@ _eax, mov_edi_edx, sub_r9d@@ _edx, shr_edi@@ _0xd, xor_r9d@@ _edi, sub_eax_edx, mov_esi_r9d, sub_eax@@ _r9d, shr_esi@@ _0xc, xor_eax@@ _esi, sub_edx_r9d, mov_esi_eax, sub_edx_eax, shl_esi@@ _0x10, xor_edx@@ _esi, sub_r9d@@ _eax, mov_esi_edx, sub_r9d@@ _edx, shr_esi@@ _5, xor_r9d@@ _esi, sub_eax_edx, mov_esi_r9d, sub_eax@@ _r9d, shr_esi@@ _3, xor_eax@@ _esi, sub_edx_r9d, mov_esi_eax, sub_edx_eax, shl_esi@@ _0xa, xor_edx@@ _esi, sub_r9d@@ _eax, sub_r9d@@ _edx, mov_dword_ptr_[rcx+@@ 4]_edx, shr_edx@@ _0xf, xor_edx@@ _r9d, mov_dword_ptr_[rcx]_eax, mov_dword_ptr_[rcx+@@ 8]_edx, pop_rbx, ret, mov_r10d@@ _edx, mov_eax_0x@@ 9e@@ 37@@ 7@@ 9b@@ 9, mov_edx_0x@@ 9e@@ 37@@ 7@@ 9b@@ 9, jmp_0xfffffffffffffec@@ c
endbr64, push_r12, mov_r12_rdi, mov_edi_4, push_rbp, mov_rbp_rsi, push_rbx, mov_dword_ptr_[rdx@@ ]_4, mov_rbx_rdx, call_0xffffffffffff0@@ f@@ 44, mov_qword_ptr_[rbp]_rax, test_rax_rax, je_0xe, mov_edx_dword_ptr_[r@@ 12+4], mov_dword_ptr_[rax]_edx, pop_rbx, pop_rbp, pop_r12, ret, mov_dword_ptr_[rbx]@@ _0xffffffff, jmp_0xfffffffffffffff@@ 5
endbr64, push_rbx, mov_rbx_rdi, mov_edi_8, call_0xffffffffffff0@@ f@@ 13, mov_rdx_qword_ptr_[rbx], mov_qword_ptr_[rax]_rdx, pop_rbx, ret
endbr64, push_rbx, mov_rbx_rdi, mov_edi_8, call_0xffffffffffff0@@ ef@@ 3, mov_edx_dword_ptr_[rbx], mov_dword_ptr_[rax]_0, mov_dword_ptr_[rax+4]_edx, pop_rbx, ret
endbr64, test_rdi_rdi, je_7, test_rsi_rsi, jne_4, ret, mov_eax_dword_ptr_[rdi+4], mov_dword_ptr_[rsi]_eax, ret
endbr64, mov_eax_4, ret
endbr64, mov_edi_dword_ptr_[r@@ di], cmp_edx@@ _0xb, jbe_0x@@ 20@@ f, mov_r9d_edx, mov_eax_0x@@ 9e@@ 37@@ 7@@ 9b@@ 9, mov_ecx_0x@@ 9e@@ 37@@ 7@@ 9b@@ 9, movsx_r8d@@ _byte_ptr_[rsi@@ +5], movsx@@ _r10d@@ _byte_ptr_[rsi@@ +4], mov_r11d@@ _r8d, movsx_r8d@@ _byte_ptr_[rsi@@ +6], shl@@ _r11d@@ _8, shl_r8d@@ _0x10, add_r8d@@ _r11d, add_r10d@@ _r8d, movsx_r8d@@ _byte_ptr_[rsi@@ +7], movsx@@ _r11d@@ _byte_ptr_[rsi@@ +@@ 9], shl_r8d@@ _0x18, add_r8d@@ _r10d, mov_r10d@@ _r11d, movsx@@ _r11d@@ _byte_ptr_[r@@ si+0x@@ a], add_eax@@ _r8d, shl@@ _r10d@@ _8, movsx_r8d@@ _byte_ptr_[rsi@@ +8], shl@@ _r11d@@ _0x10, add_r11d@@ _r10d, add_r8d@@ _r11d, movsx@@ _r11d@@ _byte_ptr_[r@@ si+0x@@ b], shl@@ _r11d@@ _0x18, add_r11d@@ _r8d, add_r11d@@ _edi, movsx_edi@@ _byte_ptr_[rsi@@ +1], movsx_r8d@@ _byte_ptr_[r@@ si], shl_edi@@ _8, mov_r10d@@ _edi, movsx_edi@@ _byte_ptr_[rsi@@ +2], shl_edi@@ _0x10, add_edi@@ _r10d, add_r8d@@ _edi, movsx_edi@@ _byte_ptr_[rsi@@ +3], shl_edi@@ _0x18, add_edi@@ _r8d, sub_edi_eax, sub_edi@@ _r11d, add_ecx@@ _edi, mov_edi@@ _r11d, shr_edi@@ _0xd, xor_ecx@@ _edi, sub_eax@@ _r11d, mov_edi_ecx, sub_eax_ecx, shl_edi@@ _8, xor_eax@@ _edi, mov_edi@@ _r11d, sub_edi@@ _ecx, mov_r8d_eax, sub_edi_eax, shr_r8d@@ _0xd, xor_edi@@ _r8d, mov_r8d_edi, sub_ecx_eax, sub_ecx@@ _edi, shr_r8d@@ _0xc, xor_ecx@@ _r8d, sub_eax_edi, mov_r8d_ecx, sub_eax_ecx, shl_r8d@@ _0x10, xor_eax@@ _r8d, sub_edi@@ _ecx, mov_r8d_eax, sub_edi_eax, shr_r8d@@ _5, xor_edi@@ _r8d, sub_ecx_eax, mov_r8d_edi, sub_ecx@@ _edi, shr_r8d@@ _3, xor_ecx@@ _r8d, sub_eax_edi, mov_r8d_ecx, sub_eax_ecx, shl_r8d@@ _0xa, xor_eax@@ _r8d, sub_edi@@ _ecx, mov_r11d_eax, sub_edi_eax, shr@@ _r11d@@ _0xf, sub_r9d@@ _0xc, xor_edi@@ _r11d, add_rsi@@ _0xc, cmp_r9d@@ _0xb, ja_0xfffffffffffffe@@ f1, add_edx@@ _edi, cmp_r9d@@ _0xb, ja_0x7@@ 1, lea_r8_[rip+0x10@@ 7a@@ 4], movsxd_rdi_dword_ptr_[r@@ 8+r@@ 9*4], add_rdi@@ _r8, jmp@@ _rdi, lea_esi_[rax@@ +rdx], sub_ecx@@ _esi, mov_esi_edx, shr_esi@@ _0xd, xor_ecx@@ _esi, sub_eax_edx, mov_esi_ecx, sub_eax_ecx, shl_esi@@ _8, xor_eax@@ _esi, sub_edx_ecx, mov_esi_eax, sub_edx_eax, shr_esi@@ _0xd, xor_esi@@ _edx, sub_ecx_eax, mov_edx_esi, sub_ecx@@ _esi, shr_edx@@ _0xc, xor_ecx@@ _edx, sub_eax_esi, mov_edx_eax, mov_eax_ecx, sub_edx_ecx, shl_eax_0x10, xor_edx_eax, sub_esi@@ _ecx, mov_eax_edx, sub_esi@@ _edx, shr_eax@@ _5, xor_esi@@ _eax, sub_ecx_edx, mov_eax_esi, sub_ecx@@ _esi, shr_eax_3, xor_ecx@@ _eax, sub_edx_esi, mov_eax_ecx, sub_edx_ecx, shl_eax@@ _0xa, xor_edx_eax, mov_eax_esi, sub_eax_ecx, sub_eax_edx, shr_edx@@ _0xf, xor_eax_edx, ret, mov_r9d_edx, mov_eax_0x@@ 9e@@ 37@@ 7@@ 9b@@ 9, mov_ecx_0x@@ 9e@@ 37@@ 7@@ 9b@@ 9, jmp_0xffffffffffffff1@@ 0
endbr64, push_rbx, movabs_rax@@ _0x@@ 9e@@ 37@@ 7@@ 9b@@ 9@@ 9e@@ 37@@ 7@@ 9b@@ 9, mov_r9d_edx, mov_edi_dword_ptr_[r@@ di], mov_qword_ptr_[rcx]_rax, mov_dword_ptr_[rcx+@@ 8]_edi, cmp_edx@@ _0xb, jbe_0x@@ 26@@ 3, mov_r10d@@ _edx, mov_eax_0x@@ 9e@@ 37@@ 7@@ 9b@@ 9, mov_edx_0x@@ 9e@@ 37@@ 7@@ 9b@@ 9, movsx_r8d@@ _byte_ptr_[rsi@@ +1], movsx@@ _r11d@@ _byte_ptr_[r@@ si], mov_ebx_r8d, movsx_r8d@@ _byte_ptr_[rsi@@ +2], shl_ebx@@ _8, shl_r8d@@ _0x10, add_r8d@@ _ebx, add_r11d@@ _r8d, movsx_r8d@@ _byte_ptr_[rsi@@ +3], shl_r8d@@ _0x18, add_r8d@@ _r11d, add_eax@@ _r8d, mov_dword_ptr_[rcx]_eax, movsx_r8d@@ _byte_ptr_[rsi@@ +5], movsx@@ _r11d@@ _byte_ptr_[rsi@@ +4], mov_ebx_r8d, movsx_r8d@@ _byte_ptr_[rsi@@ +6], shl_ebx@@ _8, shl_r8d@@ _0x10, add_r8d@@ _ebx, add_r11d@@ _r8d, movsx_r8d@@ _byte_ptr_[rsi@@ +7], shl_r8d@@ _0x18, add_r8d@@ _r11d, add_edx@@ _r8d, mov_dword_ptr_[rcx+@@ 4]_edx, movsx_r8d@@ _byte_ptr_[rsi@@ +@@ 9], movsx@@ _r11d@@ _byte_ptr_[rsi@@ +8], mov_ebx_r8d, movsx_r8d@@ _byte_ptr_[r@@ si+0x@@ a], shl_ebx@@ _8, shl_r8d@@ _0x10, add_r8d@@ _ebx, add_r11d@@ _r8d, movsx_r8d@@ _byte_ptr_[r@@ si+0x@@ b], shl_r8d@@ _0x18, add_r8d@@ _r11d, add_edi@@ _r8d, lea_r8d@@ _[rdx+r@@ di], sub_eax@@ _r8d, mov_r8d_edi, shr_r8d@@ _0xd, xor_eax@@ _r8d, sub_edx@@ _edi, mov_r8d_eax, shl_r8d@@ _8, sub_edx_eax, xor_edx@@ _r8d, sub_edi_eax, mov_r8d_edx, sub_edi@@ _edx, shr_r8d@@ _0xd, xor_edi@@ _r8d, mov_r8d_edi, sub_eax_edx, sub_eax_edi, shr_r8d@@ _0xc, xor_eax@@ _r8d, sub_edx@@ _edi, mov_r8d_eax, sub_edx_eax, shl_r8d@@ _0x10, xor_edx@@ _r8d, sub_edi_eax, mov_r8d_edx, sub_edi@@ _edx, shr_r8d@@ _5, xor_edi@@ _r8d, sub_eax_edx, mov_r8d_edi, sub_eax_edi, shr_r8d@@ _3, xor_eax@@ _r8d, sub_edx@@ _edi, mov_r8d_eax, shl_r8d@@ _0xa, sub_edx_eax, xor_edx@@ _r8d, sub_edi_eax, mov_r8d_edx, sub_edi@@ _edx, shr_r8d@@ _0xf, xor_edi@@ _r8d, sub_r10d@@ _0xc, mov_dword_ptr_[rcx]_eax, mov_dword_ptr_[rcx+@@ 4]_edx, mov_dword_ptr_[rcx+@@ 8]_edi, add_rsi@@ _0xc, cmp_r10d@@ _0xb, ja_0xfffffffffffffe@@ dd, add_r9d@@ _edi, mov_dword_ptr_[rcx+@@ 8]_r9d, cmp_r10d@@ _0xb, ja_0x@@ 99, lea_r8_[rip+0x10@@ 57@@ 7], movsxd_rdi_dword_ptr_[r@@ 8+r@@ 10@@ *4], add_rdi@@ _r8, jmp@@ _rdi, lea_esi@@ _[rdx+r@@ 9], sub_eax_esi, mov_esi_r9d, shr_esi@@ _0xd, xor_eax@@ _esi, sub_edx_r9d, mov_esi_eax, sub_edx_eax, shl_esi@@ _8, xor_edx@@ _esi, sub_r9d@@ _eax, mov_edi_edx, sub_r9d@@ _edx, shr_edi@@ _0xd, xor_r9d@@ _edi, sub_eax_edx, mov_esi_r9d, sub_eax@@ _r9d, shr_esi@@ _0xc, xor_eax@@ _esi, sub_edx_r9d, mov_esi_eax, sub_edx_eax, shl_esi@@ _0x10, xor_edx@@ _esi, sub_r9d@@ _eax, mov_esi_edx, sub_r9d@@ _edx, shr_esi@@ _5, xor_r9d@@ _esi, sub_eax_edx, mov_esi_r9d, sub_eax@@ _r9d, shr_esi@@ _3, xor_eax@@ _esi, sub_edx_r9d, mov_esi_eax, sub_edx_eax, shl_esi@@ _0xa, xor_edx@@ _esi, sub_r9d@@ _eax, sub_r9d@@ _edx, mov_dword_ptr_[rcx+@@ 4]_edx, shr_edx@@ _0xf, xor_edx@@ _r9d, mov_dword_ptr_[rcx]_eax, mov_dword_ptr_[rcx+@@ 8]_edx, pop_rbx, ret, mov_r10d@@ _edx, mov_eax_0x@@ 9e@@ 37@@ 7@@ 9b@@ 9, mov_edx_0x@@ 9e@@ 37@@ 7@@ 9b@@ 9, jmp_0xfffffffffffffec@@ c
endbr64, sub_rsp_8, mov_esi_1, mov_edi_0x40, call_0xffffffffffff0d@@ ee, test_rax_rax, je_0x38, mov_dword_ptr_[rax+0x@@ 38]_0, mov_qword_ptr_[rax+0x10]_0, mov_qword_ptr_[rax+0x18]_0, mov_dword_ptr_[rax+0x@@ 20]_0, mov_byte_ptr_[rax+0x@@ 24@@ ]_7, mov_dword_ptr_[rax+0x@@ 28]_0, mov_qword_ptr_[rax+0x@@ 30]_0, add_rsp_8, ret, lea_rcx_[rip+0x10@@ 5d@@ 7], mov_edx_0x@@ e0, lea_rsi_[rip+0x10@@ 4@@ 13], lea_rdi_[rip+0x@@ fd@@ e3], call_0xffffffffffff0@@ 9@@ 1@@ 4
endbr64, mov_rdi_qword_ptr_[rdi+0x20], jmp_0xffffffffffff@@ 0@@ a8@@ 8
endbr64, lea_edx_[r@@ si@@ -3], cmp_edx@@ _8, mov_edx_7, mov_rax_qword_ptr_[rdi+0x20], cmovae@@ _esi@@ _edx, mov_byte_ptr_[rax+0x@@ 24@@ ]_sil, ret
endbr64, mov_eax_dword_ptr_[rsi], cmp_eax_1, jne_7, ret, mov_rdx_qword_ptr_[r@@ di+0x20], mov_dword_ptr_[rdx+0x@@ 38]_eax, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x98, mov_qword_ptr_[rsp+0x10]_rdi, mov_r14_qword_ptr_[r@@ di+0x20], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, ucomi@@ sd_xmm0_qword_ptr_[rip+0x@@ 10@@ 65@@ f], jp@@ _0xc, jne_0xa, movsd_xmm0_qword_ptr_[rip+0x@@ 10@@ 64@@ b], mov_rdi_qword_ptr_[rsp+0x10], pxor_xmm1_xmm1, mov_rax_qword_ptr_[rdi+8], movsd_xmm3@@ _qword_ptr_[rip+0x@@ 10@@ 18@@ 6], mov_r12d_dword_ptr_[r@@ ax+8], movsd@@ _xmm5@@ _qword_ptr_[rip+0x@@ 10@@ 14@@ 2], mov_dword_ptr_[r14]@@ _r12d, mov_rax_qword_ptr_[rdi+8], mov_eax_dword_ptr_[rax+8], cvtsi2sd_xmm1_rax, mulsd@@ _xmm1_xmm0, div@@ sd_xmm1@@ _qword_ptr_[rip+0x@@ 10@@ 6@@ 1f], movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm5@@ _xmm2, movapd_xmm0_xmm1, jbe_0x@@ 2d, cvttsd2si@@ _rax@@ _xmm1, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ 100@@ fc], and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, cvttsd2si_rax_xmm0, mov_edx_eax, test_al_1, je_0xc@@ 59, mov_dword_ptr_[r14+@@ 8]_eax, movzx_ecx_byte_ptr_[r@@ 14+0x@@ 24], mov_eax_1, lea_ebp@@ _[rdx@@ +rdx*2], shl_eax_cl, pxor_xmm0_xmm0, pxor_xmm1_xmm1, cvtsi2sd_xmm1_rax, cvtsi2sd_xmm0@@ _rbp, movsd_xmm2_qword_ptr_[rip+0x@@ 100@@ e6], movsd@@ _xmm6@@ _qword_ptr_[rip+0x@@ 100@@ a6], mov_dword_ptr_[r14+@@ 4]_ebp, divsd_xmm0_xmm1, mov_dword_ptr_[r14+0x@@ 20]_eax, mov_rbx_rbp, movapd_xmm1_xmm0, and@@ pd@@ _xmm1_xmm2, ucomisd@@ _xmm6@@ _xmm1, movapd@@ _xmm3@@ _xmm0, jbe_0x@@ 2d, cvttsd2si_rax_xmm0, pxor_xmm1_xmm1, movsd_xmm4@@ _qword_ptr_[rip+0x@@ 100@@ 6c], and@@ n@@ pd@@ _xmm2@@ _xmm3, cvtsi2sd_xmm1_rax, cmp@@ n@@ l@@ e@@ sd_xmm0_xmm1, and@@ pd@@ _xmm0_xmm4, addsd_xmm0_xmm1, or@@ pd@@ _xmm0_xmm2, cvttsd2si_rax_xmm0, mov_r15d@@ _r12d, lea_rdi_[r@@ 15+r@@ 15@@ *2], shl_rdi_3, mov_dword_ptr_[r14+0x@@ 28]_eax, call_0xffffffffffff0@@ 7a@@ e, lea_rdi_[r@@ bp*4], mov_qword_ptr_[rsp]_rax, call_0xffffffffffff0@@ 7@@ 9d, mov_rdi_rbp, mov_r13_rax, call_0xffffffffffff0@@ 7@@ 92, lea_rdi_[r@@ 15*4], mov_rbp_rax, call_0xffffffffffff0@@ 78@@ 2, mov_qword_ptr_[rsp+8]_rax, mov_rax_qword_ptr_[rsp+0x10], mov_r8d_dword_ptr_[r@@ ax+0x10], test_r8d_r8d, jne_0xc@@ 5c, mov_dword_ptr_[rsp+0x38]@@ _0x3e8, mov_qword_ptr_[rsp+0x4@@ 0]_r14, mov_r14_r13, mov_rbx_qword_ptr_[rsp+0x40], mov_esi@@ _0xf, mov_edi_dword_ptr_[r@@ bx+0x38], call_0xffffffffffffef@@ 63, mov_qword_ptr_[rbx+0x18]_rax, mov_rbx_qword_ptr_[rsp+0x10], mov_esi_0xff, mov_r15_qword_ptr_[r@@ bx+0x20], mov_rdi_r14, mov_r12d_dword_ptr_[r@@ 15+4], lea_rdx_[r@@ 12*4], call_0xffffffffffff0@@ 5d@@ d, mov_rdx_r12, xor_esi_esi, mov_rdi_rbp, call_0xffffffffffff0@@ 5d0, mov_rax_qword_ptr_[rbx+8], mov_rdi_qword_ptr_[rax], call_qword_ptr_[rax+0x20], mov_rax_qword_ptr_[rbx+8], mov_r12d_dword_ptr_[r@@ ax+8], test_r12d_r12d, je_0x11c, lea_r13_[rsp+0x@@ 7c], mov_rdi_r13, xor_r12d_r12d, mov_r13_r15, lea_r10_[rsp+0x@@ 6c], mov_r15_r14, lea_r9_[rsp+0x@@ 70], mov_r14_rdi, mov_qword_ptr_[rsp+0x70]_0, mov_rdx_r10, mov_rsi_r9, mov_rdi_qword_ptr_[rax], mov_qword_ptr_[rsp+0x30]@@ _r10, mov_qword_ptr_[rsp+0x28]_r9, call_qword_ptr_[rax+0x10], mov_rdi_qword_ptr_[r@@ 13+0x18], mov_edx_dword_ptr_[rsp+0x@@ 6c], mov_rsi_qword_ptr_[rsp+0x70], mov_rcx_r14, call_0xffffffffffffef@@ 31, mov_ecx_dword_ptr_[r@@ 13+8], mov_eax_dword_ptr_[rsp+0x@@ 7c], xor_edx_edx, div_ecx, mov_eax_dword_ptr_[rsp+0x80], mov_rsi_qword_ptr_[rsp+0x70], mov_dword_ptr_[rsp+0x20]@@ _edx, xor_edx_edx, div_ecx, mov_eax_dword_ptr_[rsp+0x@@ 84], lea_ebx@@ _[rdx@@ +rcx], xor_edx_edx, div_ecx, mov_rax_qword_ptr_[rsp+0x10], mov_rax_qword_ptr_[rax+8], mov_rdi_qword_ptr_[rax], lea_ecx_[rdx@@ +rcx*2], mov_edx_dword_ptr_[rsp+0x@@ 6c], mov_dword_ptr_[rsp+0x18]_ecx, call_qword_ptr_[rax+0x18], mov_eax_r12d, mov_rsi_qword_ptr_[rsp], mov_r11d_dword_ptr_[rsp+0x@@ 20], mov_ecx_dword_ptr_[rsp+0x18], lea_rax_[rax+rax*2], lea_rsi_[r@@ si+rax*8], mov_dword_ptr_[rsi@@ ]@@ _r11d, mov_dword_ptr_[rsi+@@ 4]_ebx, mov_dword_ptr_[rsi+@@ 8]_ecx, lea_rax_[r@@ 15+r@@ 11@@ *4], mov_r9_qword_ptr_[rsp+0x28], mov_edx_dword_ptr_[rax], mov_r10_qword_ptr_[rsp+0x30], mov_dword_ptr_[rsi+0x@@ c]_edx, lea_rdx_[r@@ 15+r@@ bx*4], mov_edi_dword_ptr_[r@@ dx], mov_dword_ptr_[rsi+0x1@@ 0]_edi, lea_rdi_[r@@ 15@@ +rcx*4], mov_r8d_dword_ptr_[r@@ di], mov_dword_ptr_[rsi+0x1@@ 4]_r8d, mov_dword_ptr_[rdi]@@ _r12d, mov_dword_ptr_[rdx@@ ]@@ _r12d, mov_dword_ptr_[rax]@@ _r12d, mov_rax_qword_ptr_[rsp+0x10], inc_r12d, inc@@ _byte_ptr_[r@@ bp+r@@ 11], inc@@ _byte_ptr_[r@@ bp+r@@ bx], inc@@ _byte_ptr_[r@@ bp@@ +rcx], mov_rax_qword_ptr_[rax+8], cmp_dword_ptr_[rax+@@ 8]_r12d, ja_0xffffffffffffff@@ 16, mov_r14_r15, mov_r15_r13, mov_ebx_dword_ptr_[r@@ 15], mov_esi_1, mov_edi_ebx, shr_edi@@ _3, inc_rdi, mov_dword_ptr_[rsp+0x18]@@ _ebx, call_0xffffffffffff0@@ 9e@@ 6, mov_rdi_rax, test_ebx_ebx, je_0x4@@ 1c, mov_r9_qword_ptr_[rsp], xor_ebx_ebx, mov_qword_ptr_[rsp+0x20]_r9, xor_edx_edx, jmp_0x2b, mov_eax_dword_ptr_[r@@ 9+4], cmp_byte_ptr_[rbp@@ +rax@@ ]_1, je_0x23, mov_eax_dword_ptr_[r@@ 9+8], cmp_byte_ptr_[rbp@@ +rax@@ ]_1, je_0x18, inc_edx, add_r9@@ _0x18, cmp_dword_ptr_[rsp+0x1@@ 8]_edx, je_0x59, mov_eax_dword_ptr_[r@@ 9], cmp_byte_ptr_[rbp@@ +rax@@ ]_1, jne_0xffffffffffffffd6, mov_eax_edx, shr_eax_3, mov_ecx_edx, and_ecx_7, add_rax_rdi, mov_esi_ecx, movzx_r8d_byte_ptr_[r@@ ax], lea_r15_[rip+0x@@ 10@@ 2d@@ 2], movzx_r10d_byte_ptr_[r@@ 15+r@@ si], mov_esi_r8d, and_esi@@ _r10d, movzx_esi_sil, sar_esi@@ _cl, test_esi_esi, jne_0xffffffffffffffbd, mov_rsi_qword_ptr_[rsp+8], mov_ecx_ebx, mov_dword_ptr_[rsi@@ +rcx*@@ 4]_edx, or_r8d@@ _r10d, inc_edx, mov_byte_ptr_[rax]@@ _r8b, inc_ebx, add_r9@@ _0x18, cmp_dword_ptr_[rsp+0x1@@ 8]_edx, jne_0xffffffffffffffab, test_ebx_ebx, je_0xa@@ 05, xor_r8d_r8d, mov_rsi_qword_ptr_[rsp+8], mov_eax_r8d, mov_eax_dword_ptr_[r@@ si@@ +rax*4], mov_rsi_qword_ptr_[rsp], mov_r10_rax, lea_rax_[rax+rax*2], lea_r9_[r@@ si+rax*8], inc@@ _r8d, xor_esi_esi, mov_r13d_dword_ptr_[r@@ 9+r@@ si*4], mov_ecx_esi, lea_rdx_[r@@ 14+r@@ 13*4], mov_eax_dword_ptr_[rdx], mov_r15_r13, cmp_r10@@ d_eax, jne_0x33, jmp_0x@@ fd, mov_rdx_qword_ptr_[rsp], lea_rax_[rax+rax*2], lea_r11@@ _[rdx@@ +rax*8], xor_edx_edx, cmp_r15d@@ _dword_ptr_[r@@ 11], je_0xd, xor_edx_edx, cmp_r15d@@ _dword_ptr_[r@@ 11@@ +4], setne_dl, inc_edx, mov_eax_dword_ptr_[r@@ 11@@ +rdx*4@@ +0x@@ c], cmp_r10@@ d_eax, je_0x2@@ ca, cmp_eax_-1, jne_0xffffffffffffffd1, mov_ebp_r12d, mov_edx_r10d, lea_rsi_[rip+0x@@ ff@@ da], mov_edi_1, xor_eax_eax, shr@@ _ebp@@ _2, mov_r13_r14, call_0xffffffffffff0@@ 44@@ 5, add_ebp@@ _r12d, mov_r15_qword_ptr_[rsp+0x20], xor_ebx_ebx, lea_r14_[rip+0x@@ ff@@ 32], test_r12d_r12d, je_0x4c, mov_r9d_dword_ptr_[r@@ 15+8], mov_r8d_dword_ptr_[r@@ 15+4], mov_ecx_dword_ptr_[r15], mov_edx_ebx, mov_rsi_r14, mov_edi_1, xor_eax_eax, call_0xffffffffffff0@@ 4@@ 13, mov_ecx_dword_ptr_[r@@ 15+0x10], mov_edx_dword_ptr_[r15+0x@@ c], mov_r8d_dword_ptr_[r@@ 15+0x14], lea_rsi_[rip+0x@@ ff@@ 11], mov_edi_1, xor_eax_eax, inc_ebx, call_0xffffffffffff0@@ 3f@@ 2, add_r15@@ _0x18, cmp_r12d_ebx, jne_0xffffffffffffffbc, lea_r14d_[r@@ bp-1], xor_ebx_ebx, lea_r12_[rip+0x@@ fe@@ f9], test_ebp_ebp, je_0x2a, mov_ecx_dword_ptr_[r@@ 13+r@@ bx*4], mov_edx_ebx, mov_rsi_r12, mov_edi_1, xor_eax_eax, call_0xffffffffffff0@@ 3b@@ 7, mov_rax_rbx, inc_rbx, cmp_r14_rax, jne_0xffffffffffffffe1, mov_edi_0xffffffff, call_0xffffffffffff0@@ 36@@ 2, cmp_eax_-1, je_0xffffffffffffff@@ 36, mov_r15_qword_ptr_[r@@ sp], lea_rax_[rax+rax*2], lea_rax_[r@@ 15@@ +rax*8], mov_eax_dword_ptr_[r@@ ax@@ +rcx@@ *4+0x@@ c], mov_dword_ptr_[rdx]_eax, inc@@ _rsi, dec@@ _byte_ptr_[r@@ bp+r@@ 13], cmp_rsi@@ _3, jne_0xfffffffffffffe@@ c8, mov_eax_dword_ptr_[r@@ 9], mov_r10d_dword_ptr_[r@@ 9+4], cmp_byte_ptr_[rbp@@ +rax@@ ]_1, mov_esi_dword_ptr_[r@@ 9+8], je_0x1@@ 6b, cmp_byte_ptr_[r@@ bp+r@@ 10]_1, je_0x10@@ f, cmp_byte_ptr_[r@@ bp+r@@ si@@ ]_1, je_0xb4, cmp_ebx@@ _r8d, jne_0xfffffffffffffe@@ 73, call_0xffffffffffff0@@ 4b@@ 5, cmp_dword_ptr_[rsp+0x1@@ 8]_ebx, je_0x8@@ 94, mov_rbx_qword_ptr_[rsp+0x40], dec@@ _dword_ptr_[rsp+0x@@ 38], mov_rdi_qword_ptr_[rbx+0x18], call_0xffffffffffffe@@ dc@@ 9, mov_qword_ptr_[rbx+0x18]_0, mov_rax_qword_ptr_[rsp+0x10], mov_edi_dword_ptr_[r@@ ax+0x10], test_edi_edi, jne_0x1@@ 8a, mov_esi_dword_ptr_[rsp+0x@@ 38], test_esi_esi, jne_0xfffffffffffffb@@ f6, mov_rdi_qword_ptr_[rsp+8], xor_r12d_r12d, call_0xffffffffffff0@@ 46@@ 8, mov_rdi_qword_ptr_[rsp], call_0xffffffffffff0@@ 45@@ f, mov_rdi_r14, call_0xffffffffffff0@@ 45@@ 7, mov_rdi_rbp, call_0xffffffffffff0@@ 44@@ f, mov_rax_qword_ptr_[rsp+0x88], xor_rax_qword_ptr_fs:[0x28], jne_0x8@@ 24, add_rsp_0x98, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_r9d_dword_ptr_[r@@ 14+r@@ si*4], lea_r11_[rip+0x@@ 100@@ 4d], mov_eax_r9d, shr_eax_3, mov_ecx_r9d, and_ecx_7, add_rax_rdi, mov_edx_ecx, movzx_esi_byte_ptr_[r@@ ax], movzx_r10d_byte_ptr_[r@@ 11@@ +rdx], mov_edx_esi, and_edx@@ _r10d, movzx_edx_dl, sar_edx@@ _cl, test_edx_edx, jne_0xffffffffffffff@@ 22, mov_rcx_qword_ptr_[rsp+8], mov_edx_ebx, or_esi@@ _r10d, mov_dword_ptr_[rcx@@ +rdx*@@ 4]@@ _r9d, inc_ebx, mov_byte_ptr_[rax@@ ]_sil, jmp_0xffffffffffffff09, mov_r10d_dword_ptr_[r@@ 14+r@@ 10@@ *4], lea_r15_[rip+0x@@ fff@@ d], mov_eax_r10d, shr_eax_3, mov_ecx_r10d, and_ecx_7, add_rax_rdi, mov_edx_ecx, movzx_r9d_byte_ptr_[r@@ ax], movzx_r11d_byte_ptr_[r@@ 15@@ +rdx], mov_edx_r9d, and_edx@@ _r11d, movzx_edx_dl, sar_edx@@ _cl, test_edx_edx, jne_0xfffffffffffffe@@ c5, mov_rcx_qword_ptr_[rsp+8], mov_edx_ebx, or_r9d@@ _r11d, mov_dword_ptr_[rcx@@ +rdx*@@ 4]@@ _r10d, inc_ebx, mov_byte_ptr_[rax]@@ _r9b, jmp_0xfffffffffffffea@@ c, mov_r11d_dword_ptr_[r@@ 14@@ +rax*4], lea_r15_[rip+0x@@ ff@@ ad], mov_eax_r11d, shr_eax_3, mov_ecx_r11d, and_ecx_7, add_rax_rdi, mov_edx_ecx, movzx_r9d_byte_ptr_[r@@ ax], movzx_r13d_byte_ptr_[r@@ 15@@ +rdx], mov_edx_r9d, and_edx@@ _r13d, movzx_edx_dl, sar_edx@@ _cl, test_edx_edx, jne_0xfffffffffffffe@@ 69, mov_rcx_qword_ptr_[rsp+8], mov_edx_ebx, or_r9d@@ _r13d, mov_dword_ptr_[rcx@@ +rdx*@@ 4]@@ _r11d, inc_ebx, mov_byte_ptr_[rax]@@ _r9b, jmp_0xfffffffffffffe@@ 50, cmp_eax_-1, je_0xfffffffffffffd@@ 3e, mov_r15_qword_ptr_[r@@ sp], lea_rax_[rax+rax*2], lea_rax_[r@@ 15@@ +rax*8], mov_eax_dword_ptr_[r@@ ax@@ +rcx@@ *4+0x@@ c], mov_dword_ptr_[r@@ 11@@ +rdx*4@@ +0x@@ c]_eax, jmp_0xfffffffffffffe@@ 05, mov_rax_qword_ptr_[rip+0x@@ 18@@ 85@@ 9], mov_ecx_dword_ptr_[rsp+0x38], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x@@ fd@@ 13], mov_esi_1, xor_eax_eax, call_0xffffffffffff00@@ bc, jmp_0xfffffffffffffe@@ 5b, mov_r13_r14, mov_r14@@ _qword_ptr_[rsp+0x40], call_0xffffffffffff0@@ 2c8, mov_rdi_r13, call_0xffffffffffff0@@ 2c0, mov_rdi_rbp, call_0xffffffffffff0@@ 2b@@ 8, mov_rax_qword_ptr_[rsp+0x10], mov_eax_dword_ptr_[rax+0x10], test_eax_eax, jne_0x6@@ 29, mov_ebx_dword_ptr_[r@@ 14+4], mov_eax_ebx, shr_eax_3, lea_r15@@ _[rax+1], mov_rdi_r15, call_0xffffffffffff0@@ 16@@ 3, pxor_xmm0_xmm0, cvtsi2sd_xmm0@@ _rbx, movsd_xmm2_qword_ptr_[rip+0x@@ fa@@ 1d], movsd@@ _xmm7@@ _qword_ptr_[rip+0x@@ f9@@ dd], mov_qword_ptr_[rsp+0x58]_rax, mulsd_xmm0_qword_ptr_[rip+0x@@ fe@@ d0], movapd_xmm1_xmm0, and@@ pd@@ _xmm1_xmm2, ucomisd@@ _xmm7@@ _xmm1, movapd@@ _xmm3@@ _xmm0, ja_0x5@@ 78, cvttsd2si@@ _r13@@ _xmm0, mov_esi_1, mov_r13d@@ _r13d, mov_rdi_r13, call_0xffffffffffff0@@ 5@@ 32, mov_qword_ptr_[r14+0x1@@ 0]_rax, mov_rdi_qword_ptr_[rsp+0x58], mov_rbp_rax, mov_rdx_r15, xor_esi_esi, call_0xfffffffffffeff@@ bc, mov_rdx_r13, mov_esi_0xff, mov_rdi_rbp, call_0xfffffffffffeff@@ ac, lea_eax_[r@@ 12-1], test_r12d_r12d, je_0x2@@ c4, mov_qword_ptr_[rsp+0x4@@ 8]_r14, mov_r12d_eax, jmp_0x1@@ 00, test_r10d_r10d, jne_0x37, movzx_ecx_byte_ptr_[rsp+0x@@ 20], mov_r11d@@ _3, shl@@ _r11d@@ _cl, and_r8d@@ _3, mov_ecx_r11d, lea_r11_[rip+0x@@ fe@@ 17], or@@ _cl@@ _byte_ptr_[r@@ 11+r@@ 8], mov_r8_qword_ptr_[rsp+0x18], and_byte_ptr_[r@@ 9+r@@ 8@@ ]_cl, or_byte_ptr_[r@@ ax]@@ _r14b, mov_rax_qword_ptr_[rsp+0x48], mov_r9_qword_ptr_[r@@ ax+0x10], movzx_r8d_byte_ptr_[r@@ dx], mov_r14@@ _qword_ptr_[rsp+0x30], movzx_ecx_byte_ptr_[rsp+0x@@ 54], and_r8d@@ _r15d, movzx_r8d@@ _r8b, lea_r10_[r@@ 9+r@@ 14], sar@@ _r8d@@ _cl, movzx_eax_byte_ptr_[r@@ 10], test_r8d_r8d, jne_0x34, mov_ecx_ebx, mov_r8d_3, shl_r8d@@ _cl, mov_ecx_r8d, and_esi@@ _3, lea_r8_[rip+0x@@ fd@@ c1], or@@ _cl@@ _byte_ptr_[r@@ 8+r@@ si], and_eax_ecx, mov_byte_ptr_[r@@ 10@@ ]_al, mov_rax_qword_ptr_[rsp+0x48], or_byte_ptr_[r@@ dx@@ ]@@ _r15b, mov_r9_qword_ptr_[r@@ ax+0x10], movzx_eax_byte_ptr_[r@@ 9+r@@ 14], mov_rsi_qword_ptr_[rsp+0x18], movzx_ecx_byte_ptr_[rsp+0x@@ 20], movzx_edx_byte_ptr_[r@@ 9+r@@ si], mov_esi_0x@@ aaaaaaab, sar_edx@@ _cl, mov_ecx_ebx, sar_eax@@ _cl, and_eax_3, and_edx_3, add_edx_eax, mov_eax@@ _6, sub_eax_edx, mov_edx_eax, imul_rdx@@ _rsi, movzx_ecx_byte_ptr_[rsp+0x@@ 40], and_edi@@ _3, shr_rdx@@ _0x21, lea_edx_[rdx@@ +rdx*2], sub_eax_edx, shl_eax_cl, lea_rsi_[rip+0x@@ fd@@ 5e], or_al@@ _byte_ptr_[rsi@@ +r@@ di], mov_rdi_qword_ptr_[rsp+0x38], and_byte_ptr_[r@@ 9+r@@ di@@ ]_al, or_byte_ptr_[r@@ bp]@@ _r13b, dec@@ _r12d, cmp_r12d_-1, je_0x1@@ b7, mov_rdi_qword_ptr_[rsp+8], mov_eax_r12d, mov_eax_dword_ptr_[r@@ di@@ +rax*4], mov_rdi_qword_ptr_[rsp], lea_rax_[rax+rax*2], lea_rax_[r@@ di+rax*8], mov_edi_dword_ptr_[rax], mov_r8d_dword_ptr_[rax+4], mov_esi_dword_ptr_[rax+8], mov_r15@@ _qword_ptr_[rsp+0x58], mov_eax_edi, shr_eax_3, lea_rbp_[r@@ 15+rax], mov_ebx_r8d, mov_eax_edi, lea_r11_[rip+0x@@ fd@@ 0f], and_eax_7, shr_ebx@@ _3, mov_ecx_r8d, movzx_r13d_byte_ptr_[r@@ 11@@ +rax], and_ecx_7, mov_dword_ptr_[rsp+0x28]_eax, mov_eax_ebx, mov_edx_ecx, add_rax_r15, movzx_r14d_byte_ptr_[r@@ 11@@ +rdx], movzx_r10d@@ _byte_ptr_[rax], mov_edx_esi, and_r10d@@ _r14d, shr_edx@@ _2, movzx_r10d@@ _r10b, sar@@ _r10d@@ _cl, mov_ecx_edx, mov_edx_edi, shr_edx@@ _2, mov_qword_ptr_[rsp+0x30]_rcx, mov_ecx_edx, lea_edx_[r@@ di+r@@ di], and_edx@@ _6, mov_dword_ptr_[rsp+0x4@@ 0]_edx, mov_edx_r8d, shr_edx@@ _2, mov_qword_ptr_[rsp+0x38]_rcx, mov_ecx_edx, mov_qword_ptr_[rsp+0x18]_rcx, lea_edx_[r@@ 8+r@@ 8], mov_ecx_esi, and_edx@@ _6, shr_ecx_3, mov_dword_ptr_[rsp+0x20]@@ _edx, mov_edx_ecx, mov_ecx_esi, and_ecx_7, add_rdx@@ _r15, movzx_r15d_byte_ptr_[r@@ 11@@ +rcx], movzx_r11d_byte_ptr_[r@@ bp], mov_rbx_qword_ptr_[rsp+0x48], mov_dword_ptr_[rsp+0x5@@ 4]_ecx, and_r11d@@ _r13d, movzx_ecx_byte_ptr_[rsp+0x@@ 28], movzx_r11d@@ _r11b, mov_r9_qword_ptr_[r@@ bx+0x10], sar@@ _r11d@@ _cl, lea_ebx_[r@@ si+r@@ si], and_ebx@@ _6, test_r11d_r11d, je_0xfffffffffffffe@@ 28, mov_rbp@@ _qword_ptr_[rsp+0x30], lea_r11_[r@@ 9+r@@ bp], movzx_edi_byte_ptr_[r@@ 11], test_r10d_r10d, jne_0x2@@ 7a, movzx_r10d_byte_ptr_[r@@ dx], movzx_ecx_byte_ptr_[rsp+0x@@ 54], and_r10d@@ _r15d, movzx_r10d@@ _r10b, sar@@ _r10d@@ _cl, test_r10d_r10d, jne_0x34, mov_ecx_ebx, mov_r10d@@ _3, shl@@ _r10d@@ _cl, mov_ecx_r10d, and_esi@@ _3, lea_r10_[rip+0x@@ fc@@ 14], or@@ _cl@@ _byte_ptr_[r@@ 10+r@@ si], and_edi@@ _ecx, mov_byte_ptr_[r@@ 11@@ ]_dil, mov_rdi_qword_ptr_[rsp+0x48], or_byte_ptr_[r@@ dx@@ ]@@ _r15b, mov_r9_qword_ptr_[r@@ di+0x10], movzx_edi_byte_ptr_[r@@ 9+r@@ bp], mov_rsi_qword_ptr_[rsp+0x38], movzx_ecx_byte_ptr_[rsp+0x@@ 40], movzx_edx_byte_ptr_[r@@ 9+r@@ si], and_r8d@@ _3, sar_edx@@ _cl, mov_ecx_ebx, sar@@ _edi@@ _cl, and_edi@@ _3, and_edx_3, add_edx@@ _edi, mov_edi_7, sub_edi@@ _edx, mov_ecx_edi, mov_edi_0x@@ aaaaaaab, mov_rdx_rcx, imul_rcx@@ _rdi, lea_rdi_[rip+0xf@@ bb@@ d], dec@@ _r12d, shr_rcx@@ _0x21, lea_ecx_[r@@ cx@@ +rcx*2], sub_edx_ecx, movzx_ecx_byte_ptr_[rsp+0x@@ 20], shl_edx_cl, or_dl@@ _byte_ptr_[r@@ di+r@@ 8], mov_rdi_qword_ptr_[rsp+0x18], and_byte_ptr_[r@@ 9+r@@ di@@ ]_dl, or_byte_ptr_[r@@ ax]@@ _r14b, cmp_r12d_-1, jne_0xfffffffffffffe@@ 55, mov_r14@@ _qword_ptr_[rsp+0x48], mov_rdi_qword_ptr_[rsp+0x58], call_0xfffffffffffeff@@ 46, mov_rdi_qword_ptr_[rsp+8], call_0xfffffffffffeff@@ 3c, mov_rdi_qword_ptr_[rsp], call_0xfffffffffffeff@@ 33, mov_rax_qword_ptr_[rsp+0x10], mov_ecx_dword_ptr_[r@@ ax+0x10], test_ecx_ecx, jne_0x2@@ 74, mov_eax_dword_ptr_[r@@ 14+4], pxor_xmm0_xmm0, cvtsi2sd_xmm0_rax, movsd_xmm2_qword_ptr_[rip+0x@@ f@@ 6a@@ 9], mov_ebp_dword_ptr_[r@@ 14+0x20], movsd@@ _xmm7@@ _qword_ptr_[rip+0x@@ f@@ 66@@ 5], mulsd_xmm0_qword_ptr_[rip+0x@@ fb@@ 5d], shr@@ _ebp@@ _2, movapd_xmm1_xmm0, and@@ pd@@ _xmm1_xmm2, ucomisd@@ _xmm7@@ _xmm1, movapd@@ _xmm3@@ _xmm0, ja_0x1@@ d2, mov_edi_dword_ptr_[r@@ 14+0x28], mov_esi_4, cvttsd2si@@ _rbx@@ _xmm0, call_0xffffffffffff0@@ 1b@@ e, mov_qword_ptr_[r14+0x@@ 30]_rax, mov_dword_ptr_[rax]_0, xor_edx_edx, xor_r9d_r9d, cmp_dword_ptr_[r14+0x@@ 28]_1, mov_edi_1, lea_r10_[rip+0x@@ f@@ 9e@@ 9], je_0x59, cmp_ebx@@ _ebp, mov_r8d_ebp, cmovbe@@ _r8d@@ _ebx, test_r8d_r8d, je_0x2e, mov_rsi_qword_ptr_[r@@ 14+0x10], mov_ecx_r9d, lea_rax_[r@@ si+rcx], lea_rsi_[r@@ si+rcx@@ +1], lea_ecx_[r@@ 8-1], add_rsi_rcx, movzx_ecx_byte_ptr_[rax], inc_rax, movzx_ecx_byte_ptr_[r@@ 10@@ +rcx], add_edx_ecx, cmp_rsi_rax, jne_0xfffffffffffffff0, mov_rax_qword_ptr_[r14+0x@@ 30], mov_ecx_edi, mov_dword_ptr_[rax@@ +rcx*@@ 4]_edx, inc@@ _edi, add_r9d@@ _r8d, sub_ebx@@ _ebp, cmp_dword_ptr_[r14+0x@@ 28]@@ _edi, jne_0xffffffffffffffb2, mov_edi_0x18, call_0xfffffffffffefd@@ 1b, mov_rbx_qword_ptr_[rsp+0x10], mov_r12_rax, mov_eax_dword_ptr_[rbx], mov_edi_0x38, mov_dword_ptr_[r12]_eax, call_0xfffffffffffefd@@ 03, mov_rdx_qword_ptr_[r@@ 14+0x10], mov_qword_ptr_[rax+0x10]_rdx, mov_qword_ptr_[r14+0x1@@ 0]_0, mov_rdx_qword_ptr_[r14+0x18], mov_qword_ptr_[rax+0x18]_rdx, mov_qword_ptr_[r14+0x1@@ 8]_0, mov_rdx_qword_ptr_[r14+0x@@ 30], mov_qword_ptr_[rax+0x30]_rdx, mov_qword_ptr_[r14+0x@@ 30]_0, mov_edx_dword_ptr_[r@@ 14+0x28], mov_dword_ptr_[rax+0x28]_edx, mov_edx_dword_ptr_[r@@ 14+0x20], mov_dword_ptr_[rax+0x20]_edx, movzx_edx_byte_ptr_[r@@ 14+0x@@ 24], mov_byte_ptr_[rax+0x@@ 24]@@ _dl, mov_edx_dword_ptr_[r@@ 14+4], mov_dword_ptr_[rax+4]_edx, mov_edx_dword_ptr_[r14], mov_dword_ptr_[rax]_edx, mov_edx_dword_ptr_[r@@ 14+8], mov_qword_ptr_[r12+0x10]_rax, mov_dword_ptr_[rax+8]_edx, mov_edx_dword_ptr_[rbx+0x10], mov_eax_dword_ptr_[r14], mov_dword_ptr_[r12+@@ 4]_eax, test_edx_edx, je_0xfffffffffffff@@ 98@@ 3, mov_rax_qword_ptr_[rip+0x@@ 18@@ 3@@ 1e], mov_edx_0x3@@ 5, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0xf@@ 4b@@ 2], call_0xffffffffffff0@@ 19@@ 2, jmp_0xfffffffffffff95@@ d, mov_rax_qword_ptr_[rsp+0x38], movzx_ecx_byte_ptr_[rsp+0x@@ 40], movzx_eax_byte_ptr_[r@@ 9@@ +rax], and_esi@@ _3, sar_eax@@ _cl, mov_rcx_qword_ptr_[rsp+0x18], and_eax_3, movzx_r8d_byte_ptr_[r@@ 9@@ +rcx], movzx_ecx_byte_ptr_[rsp+0x@@ 20], sar@@ _r8d@@ _cl, and_r8d@@ _3, add_eax@@ _r8d, mov_ecx_8, sub_ecx_eax, mov_r8d_0x@@ aaaaaaab, mov_eax_ecx, imul_rcx@@ _r8, shr_rcx@@ _0x21, lea_ecx_[r@@ cx@@ +rcx*2], sub_eax_ecx, mov_ecx_ebx, shl_eax_cl, lea_rbx_[rip+0x@@ f@@ 97@@ 9], or_al@@ _byte_ptr_[r@@ bx+r@@ si], and_edi@@ _eax, mov_byte_ptr_[r@@ 11@@ ]_dil, or_byte_ptr_[r@@ dx@@ ]@@ _r15b, jmp_0xfffffffffffffc@@ 20, lea_edx_[rax+1], mov_dword_ptr_[r14+@@ 8]_edx, jmp_0xfffffffffffff@@ 3a@@ a, cvttsd2si_rax_xmm0, pxor_xmm1_xmm1, movsd_xmm4@@ _qword_ptr_[rip+0x@@ f@@ 45@@ f], and@@ n@@ pd@@ _xmm2@@ _xmm3, cvtsi2sd_xmm1_rax, cmp@@ n@@ l@@ e@@ sd_xmm0_xmm1, and@@ pd@@ _xmm0_xmm4, addsd_xmm0_xmm1, or@@ pd@@ _xmm0_xmm2, jmp_0xfffffffffffffe@@ 09, cvttsd2si_rax_xmm0, pxor_xmm1_xmm1, movsd_xmm4@@ _qword_ptr_[rip+0x@@ f@@ 42@@ f], and@@ n@@ pd@@ _xmm2@@ _xmm3, cvtsi2sd_xmm1_rax, cmp@@ n@@ l@@ e@@ sd_xmm0_xmm1, and@@ pd@@ _xmm0_xmm4, addsd_xmm0_xmm1, or@@ pd@@ _xmm0_xmm2, jmp_0xfffffffffffffa@@ 63, mov_rax_qword_ptr_[rip+0x@@ 18@@ 2@@ 11], mov_r8d_dword_ptr_[r@@ 14+4], mov_rdi_qword_ptr_[rax], mov_ecx_dword_ptr_[r@@ 14], lea_rdx_[rip+0x@@ f7@@ 58], mov_esi_1, xor_eax_eax, call_0xfffffffffffefa@@ 71, jmp_0xfffffffffffffd@@ 6e, mov_rax_qword_ptr_[rip+0x@@ 18@@ 1e@@ 1], mov_r8d_dword_ptr_[r@@ 14+4], mov_rdi_qword_ptr_[rax], mov_ecx_dword_ptr_[r@@ 14], lea_rdx_[rip+0xf@@ 6d@@ 8], mov_esi_1, xor_eax_eax, call_0xfffffffffffefa@@ 41, jmp_0xfffffffffffff9b@@ 9, call_0xfffffffffffefc@@ 50, jmp_0xfffffffffffff7a@@ 5, mov_rax_qword_ptr_[rip+0x@@ 18@@ 1a@@ 1], mov_r8d_ebx, mov_rdi_qword_ptr_[rax], mov_ecx_r12d, lea_rdx_[rip+0xf@@ 5e@@ 9], mov_esi_1, xor_eax_eax, call_0xfffffffffffefa@@ 02, jmp_0xfffffffffffff@@ 38@@ 7, mov_r13_r14, mov_r14@@ _qword_ptr_[rsp+0x40], jmp_0xfffffffffffff94@@ d, call_0xfffffffffffefe@@ 7@@ b
endbr64, push_r12, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0x20, mov_rbx_qword_ptr_[rdi+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_r12_[rsp+0x@@ c], mov_qword_ptr_[rsp+0x10]_0, call_0xffffffffffffce@@ 4f, mov_rdi_qword_ptr_[rbx+0x18], lea_rsi_[rsp+0x10], mov_rdx_r12, call_0xffffffffffffe@@ 35@@ e, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r12, call_0xfffffffffffeff@@ 99, mov_esi_dword_ptr_[rsp+0xc], mov_rdi_qword_ptr_[rsp+0x10], mov_rcx_rbp, mov_edx_1, call_0xfffffffffffeff@@ 83, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffefb@@ 89, lea_rdi_[r@@ bx+4], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffeff@@ 63, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_rbx, call_0xfffffffffffeff@@ 4e, lea_rdi_[rbx+8], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffeff@@ 38, mov_eax_dword_ptr_[rbx+4], pxor_xmm1_xmm1, cvtsi2sd_xmm1_rax, movsd_xmm3@@ _qword_ptr_[rip+0x@@ f@@ 2c@@ f], movsd_xmm4@@ _qword_ptr_[rip+0x@@ f@@ 28@@ f], mul@@ sd_xmm1@@ _qword_ptr_[rip+0x@@ f7@@ 87], movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm4@@ _xmm2, movapd_xmm0_xmm1, jbe_0x@@ 2d, cvttsd2si@@ _rax@@ _xmm1, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ f@@ 25@@ c], and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, cvttsd2si@@ _rsi@@ _xmm0, mov_rdi_qword_ptr_[rbx+0x10], mov_rcx_rbp, mov_edx_1, mov_esi_esi, call_0xfffffffffffefe@@ bf, lea_rdi_[r@@ bx+0x20], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffef@@ ea@@ 9, lea_rdi_[rbx+0x@@ 24], mov_rcx_rbp, mov_edx_1, mov_esi_1, call_0xfffffffffffefe@@ 93, lea_rdi_[r@@ bx+0x28], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffefe@@ 7d, mov_esi_dword_ptr_[r@@ bx+0x28], mov_rdi_qword_ptr_[rbx+0x30], shl_rsi@@ _2, mov_rcx_rbp, mov_edx_1, call_0xfffffffffffefe@@ 65, test_rax_rax, je_0x25, mov_eax_1, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x4c, add_rsp_0x20, pop_rbx, pop_rbp, pop_r12, ret, mov_rdi_rbp, call_0xfffffffffffefa@@ 95, test_eax_eax, je_0xffffffffffffffd3, call_0xfffffffffffefc@@ 6c, mov_edi_dword_ptr_[rax], call_0xfffffffffffefb@@ 65, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 17@@ f8@@ e], lea_rdx_[rip+0x@@ f0@@ 9f], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffef7@@ f5, xor_eax_eax, jmp_0xffffffffffffffa8, call_0xfffffffffffefc@@ 7@@ c
endbr64, push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, mov_edi_0x38, push_rbx, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xfffffffffffef@@ 8a@@ 7, mov_qword_ptr_[r12+0x10]_rax, mov_rcx_rbp, mov_edx_1, mov_esi_4, lea_rdi_[r@@ sp+4], mov_rbx_rax, call_0xfffffffffffefb@@ c8, mov_r13d_dword_ptr_[r@@ sp+4], mov_rdi_r13, call_0xfffffffffffef@@ 87@@ b, mov_rdi_rax, mov_rcx_rbp, mov_edx_1, mov_rsi_r13, mov_r12_rax, call_0xfffffffffffefb@@ a5, mov_esi_dword_ptr_[rsp+4], mov_rdi_r12, call_0xffffffffffffe@@ 26@@ 9, mov_rdi_r12, mov_qword_ptr_[rbx+0x18]_rax, call_0xfffffffffffef@@ 97@@ d, lea_rdi_[r@@ bx+4], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffefb@@ 77, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_rbx, call_0xfffffffffffefb@@ 62, lea_rdi_[rbx+8], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffefb@@ 4c, mov_eax_dword_ptr_[rbx+4], pxor_xmm1_xmm1, cvtsi2sd_xmm1_rax, movsd_xmm3@@ _qword_ptr_[rip+0x@@ f0@@ c3], movsd_xmm4@@ _qword_ptr_[rip+0x@@ f0@@ 83], mul@@ sd_xmm1@@ _qword_ptr_[rip+0x@@ f@@ 57@@ b], movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm4@@ _xmm2, movapd_xmm0_xmm1, jbe_0x@@ 2d, cvttsd2si@@ _rax@@ _xmm1, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ f0@@ 50], and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, cvttsd2si@@ _r12@@ _xmm0, mov_esi_1, mov_r12d@@ _r12d, mov_rdi_r12, call_0xfffffffffffef@@ bb@@ 6, mov_rdi_rax, mov_rsi_r12, mov_rcx_rbp, mov_edx_1, mov_qword_ptr_[rbx+0x10]_rax, call_0xfffffffffffefa@@ bf, lea_rdi_[r@@ bx+0x20], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffefa@@ a9, lea_rdi_[rbx+0x@@ 24], mov_rcx_rbp, mov_edx_1, mov_esi_1, call_0xfffffffffffefa@@ 93, mov_rcx_rbp, mov_edx_1, lea_rdi_[r@@ bx+0x28], mov_esi_4, call_0xfffffffffffefa@@ 7d, mov_r12d_dword_ptr_[r@@ bx+0x28], mov_esi_4, mov_rdi_r12, call_0xfffffffffffefb@@ 4c, mov_rdi_rax, lea_rsi_[r@@ 12*4], mov_rcx_rbp, mov_edx_1, mov_qword_ptr_[rbx+0x30]_rax, call_0xfffffffffffefa@@ 50, test_rax_rax, je_0x20, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x4a, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_rdi_rbp, call_0xfffffffffffef@@ 86@@ 5, test_eax_eax, je_0xffffffffffffffd8, call_0xfffffffffffefa@@ 3c, mov_edi_dword_ptr_[rax], call_0xfffffffffffef@@ 93@@ 5, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 17@@ d5@@ e], lea_rdx_[rip+0x@@ ee@@ 6f], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffef@@ 5c@@ 5, jmp_0xffffffffffffffaa, call_0xfffffffffffefa@@ 4@@ e
endbr64, push_rbx, sub_rsp_0x20, mov_rbx_qword_ptr_[rdi+0x10], lea_rcx_[rsp+0x@@ c], mov_rdi_qword_ptr_[rbx+0x18], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xffffffffffffd@@ f0@@ a, mov_esi_dword_ptr_[r@@ bx+8], mov_eax_dword_ptr_[rsp+0xc], xor_edx_edx, div_esi, mov_eax_dword_ptr_[rsp+0x10], mov_dword_ptr_[rsp+0xc]_edx, mov_ecx_edx, xor_edx_edx, div_esi, mov_eax_dword_ptr_[rsp+0x14], lea_edi@@ _[rdx+r@@ si], xor_edx_edx, div_esi, mov_dword_ptr_[rsp+0x10]@@ _edi, mov_eax_ecx, shr_eax@@ _2, add@@ _ecx_ecx, and_ecx@@ _6, lea_r9d@@ _[rdx+r@@ si*2], mov_dword_ptr_[rsp+0x14]@@ _r9d, mov_r8_qword_ptr_[r@@ bx+0x10], movzx_edx_byte_ptr_[r@@ 8+rax], mov_eax_edi, shr_eax@@ _2, sar_edx@@ _cl, movzx_eax_byte_ptr_[r@@ 8+rax], lea_ecx_[r@@ di+r@@ di], and_ecx@@ _6, mov_esi_edx, sar_eax@@ _cl, and_esi@@ _3, and_eax_3, lea_edx_[r@@ si+rax], mov_eax_r9d, shr_eax@@ _2, lea_ecx_[r@@ 9+r@@ 9], movzx_eax_byte_ptr_[r@@ 8+rax], and_ecx@@ _6, sar_eax@@ _cl, and_eax_3, add_edx_eax, mov_ecx_0x@@ aaaaaaab, mov_rax_rdx, imul@@ _rdx_rcx, movzx_ecx_byte_ptr_[r@@ bx+0x24], shr_rdx@@ _0x21, lea_edx_[rdx@@ +rdx*2], sub_eax_edx, cdqe, mov_esi_dword_ptr_[r@@ sp@@ +rax*4+0x@@ c], mov_rax_qword_ptr_[rbx+0x30], mov_edx_esi, shr_edx_cl, mov_edi_edx, mov_r9d_dword_ptr_[r@@ ax+r@@ di*4], shl_edx_cl, mov_eax_esi, shr_edx@@ _2, shr_eax@@ _2, cmp_edx_eax, jae_0x@@ 90, lea_r10d@@ _[rax-1], mov_ebx@@ _r10d, mov_edi_edx, sub_ebx@@ _edx, lea_rcx_[r@@ 8+r@@ di], mov_rdx_rbx, lea_rdi_[r@@ 8+r@@ di+1], add_rdx@@ _rdi, lea_r10_[rip+0x@@ f@@ 20@@ 9], movzx_edi_byte_ptr_[r@@ cx], inc_rcx, movzx_edi_byte_ptr_[r@@ 10+r@@ di], add_r9d@@ _edi, cmp_rdx_rcx, jne_0xffffffffffffffef, shl_eax_2, cmp_esi_eax, jbe_0x@@ 2f, mov_edx_eax, shr_edx@@ _2, lea_ecx_[rax@@ +rax], movzx_edx_byte_ptr_[r@@ 8@@ +rdx], and_ecx@@ _6, sar_edx@@ _cl, and_edx_3, cmp_edx_3, setne_dl, movzx_edx_dl, inc_eax, add_r9d@@ _edx, cmp_esi_eax, jne_0xffffffffffffffdb, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xf, add_rsp_0x20, mov_eax_r9d, pop_rbx, ret, mov_eax_edx, jmp_0xffffffffffffffb1, call_0xfffffffffffef@@ 8c@@ c
endbr64, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, mov_r12_qword_ptr_[r@@ di+0x10], mov_rdi_qword_ptr_[r12+0x10], call_0xfffffffffffef@@ 6@@ 39, mov_rdi_qword_ptr_[r@@ 12+0x18], call_0xffffffffffffdf@@ 5f, mov_rdi_qword_ptr_[r12+0x30], call_0xfffffffffffef@@ 6@@ 25, mov_rdi_r12, call_0xfffffffffffef@@ 6@@ 1d, add_rsp_8, mov_rdi_rbp, pop_rbp, pop_r12, jmp_0xfffffffffff@@ ef@@ 60@@ e
endbr64, push_r12, push_rbp, push_rbx, mov_rbx_rsi, add_rbx_4, mov_rbp_qword_ptr_[r@@ di+0x10], mov_rdi_qword_ptr_[rbp+0x18], call_0xffffffffffffe0@@ 29, mov_dword_ptr_[rbx@@ -4]_eax, mov_r12d_eax, mov_rsi_rbx, mov_rdi_qword_ptr_[rbp+0x18], call_0xffffffffffffdf@@ 37, mov_edi_r12d, call_0xffffffffffffdf@@ 5f, mov_eax_eax, mov_edx_dword_ptr_[r@@ bp+8], add_rax_rbx, mov_dword_ptr_[rax]_edx, lea_rcx_[rax+8], mov_rdi_rcx, mov_edx_dword_ptr_[rbp+0x@@ 28], mov_dword_ptr_[rax+4]_edx, shl_rdx_2, mov_rsi_qword_ptr_[rbp+0x@@ 30], call_0xfffffffffffefa@@ 2b, mov_rcx_rax, mov_eax_dword_ptr_[rbp+0x@@ 28], pxor_xmm1_xmm1, lea_rdi_[r@@ cx+rax*4], movzx_eax_byte_ptr_[rbp+0x@@ 24], movsd_xmm3@@ _qword_ptr_[rip+0x@@ ed@@ 2c], mov_byte_ptr_[rdi]_al, movsd_xmm4@@ _qword_ptr_[rip+0x@@ ec@@ ea], mov_eax_dword_ptr_[rbp+4], cvtsi2sd_xmm1_rax, mul@@ sd_xmm1@@ _qword_ptr_[rip+0x@@ f@@ 1d@@ a], movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm4@@ _xmm2, movapd_xmm0_xmm1, jbe_0x@@ 2d, cvttsd2si@@ _rax@@ _xmm1, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ ec@@ af], and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, cvttsd2si@@ _rdx@@ _xmm0, pop_rbx, mov_rsi_qword_ptr_[rbp+0x10], pop_rbp, inc_rdi, mov_edx_edx, pop_r12, jmp_0xfffffffffff@@ ef@@ 9a@@ 3
endbr64, push_rbx, mov_rbx_qword_ptr_[rdi+0x10], mov_rdi_qword_ptr_[rbx+0x18], call_0xffffffffffffdf@@ 43, mov_edi_eax, call_0xffffffffffffde@@ 8c, mov_edx_dword_ptr_[rbx+4], pxor_xmm1_xmm1, cvtsi2sd_xmm1@@ _rdx, movsd_xmm3@@ _qword_ptr_[rip+0x@@ ec@@ 83], movsd_xmm4@@ _qword_ptr_[rip+0x@@ ec@@ 43], mul@@ sd_xmm1@@ _qword_ptr_[rip+0x@@ f@@ 13@@ b], movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm4@@ _xmm2, movapd_xmm0_xmm1, jbe_0x@@ 2d, cvttsd2si@@ _rdx@@ _xmm1, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ ec@@ 10], and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rdx, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, mov_edx_dword_ptr_[r@@ bx+0x28], pop_rbx, lea_edx_[rax@@ +rdx*4@@ +0x1@@ 1], cvttsd2si_rax_xmm0, add_eax_edx, ret
endbr64, push_r15, lea_r15_[r@@ di+4], push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x38, mov_qword_ptr_[rsp+8]_rsi, mov_dword_ptr_[rsp+4]_edx, mov_esi_dword_ptr_[r@@ di], mov_edi_esi, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_dword_ptr_[rsp]@@ _esi, call_0xffffffffffffdd@@ da, mov_eax_eax, add_rax_r15, mov_r14d_dword_ptr_[r@@ ax], lea_r12@@ _[rax+8], mov_r9_qword_ptr_[rsp+8], mov_eax_dword_ptr_[rax+4], mov_ecx_dword_ptr_[rsp+4], mov_esi_dword_ptr_[r@@ sp], lea_rbx_[r@@ 12@@ +rax*4], lea_r8_[r@@ sp+0x1c], mov_rdx_r9, mov_rdi_r15, movzx_ebp@@ _byte_ptr_[rbx], call_0xffffffffffffde@@ 18, mov_eax_dword_ptr_[rsp+0x1c], xor_edx_edx, div@@ _r14d, mov_eax_dword_ptr_[rsp+0x20], lea_r13_[r@@ bx+1], mov_ecx_edx, mov_dword_ptr_[rsp+0x1@@ c]_edx, xor_edx_edx, div@@ _r14d, mov_eax_dword_ptr_[rsp+0x24], lea_edi@@ _[rdx+r@@ 14], xor_edx_edx, div@@ _r14d, mov_dword_ptr_[rsp+0x20]@@ _edi, mov_eax_ecx, shr_eax@@ _2, add@@ _ecx_ecx, and_ecx@@ _6, lea_r8d@@ _[rdx+r@@ 14@@ *2], movzx_edx_byte_ptr_[r@@ bx+rax+1], mov_eax_edi, shr_eax@@ _2, sar_edx@@ _cl, movzx_eax_byte_ptr_[r@@ bx+rax+1], lea_ecx_[r@@ di+r@@ di], and_ecx@@ _6, mov_esi_edx, sar_eax@@ _cl, and_esi@@ _3, and_eax_3, lea_edx_[r@@ si+rax], mov_eax_r8d, shr_eax@@ _2, lea_ecx_[r@@ 8+r@@ 8], movzx_eax_byte_ptr_[r@@ bx+rax+1], and_ecx@@ _6, sar_eax@@ _cl, and_eax_3, add_edx_eax, mov_ecx_0x@@ aaaaaaab, mov_rax_rdx, imul@@ _rdx_rcx, mov_dword_ptr_[rsp+0x2@@ 4]_r8d, mov_ecx_ebp, shr_rdx@@ _0x21, lea_edx_[rdx@@ +rdx*2], sub_eax_edx, cdqe, mov_esi_dword_ptr_[r@@ sp@@ +rax*4@@ +0x1@@ c], mov_edx_esi, shr_edx_cl, mov_eax_edx, mov_r8d_dword_ptr_[r@@ 12@@ +rax*4], shl_edx_cl, mov_eax_esi, shr_edx@@ _2, shr_eax@@ _2, cmp_edx_eax, jae_0x@@ 9b, mov_edi_edx, lea_r9d@@ _[rax-1], lea_rcx_[r@@ bx+r@@ di+1], lea_rdi_[r@@ bx+r@@ di+2], mov_ebx@@ _r9d, sub_ebx@@ _edx, mov_rdx_rbx, add_rdx@@ _rdi, lea_r9_[rip+0x@@ ee@@ 7b], movzx_edi_byte_ptr_[r@@ cx], inc_rcx, movzx_edi_byte_ptr_[r@@ 9+r@@ di], add_r8d@@ _edi, cmp_rdx_rcx, jne_0xffffffffffffffef, shl_eax_2, cmp_esi_eax, jbe_0x@@ 30, mov_edx_eax, shr_edx@@ _2, lea_ecx_[rax@@ +rax], movzx_edx_byte_ptr_[r@@ 13@@ +rdx], and_ecx@@ _6, sar_edx@@ _cl, and_edx_3, cmp_edx_3, setne_dl, movzx_edx_dl, inc_eax, add_r8d@@ _edx, cmp_esi_eax, jne_0xffffffffffffffda, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x1e, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r8d, pop_r15, ret, mov_eax_edx, jmp_0xffffffffffffffa1, call_0xfffffffffffef@@ 53@@ 4
endbr64, sub_rsp_8, mov_esi_1, mov_edi_0x20, call_0xfffffffffffef@@ 58@@ e, test_rax_rax, je_0x1d, mov_dword_ptr_[rax]_0, mov_qword_ptr_[rax+0x10]_0, mov_qword_ptr_[rax+0x18]_0, add_rsp_8, ret, lea_rcx_[rip+0x@@ ef@@ 32], mov_edx_0x@@ d2, lea_rsi_[rip+0xe@@ ed@@ 6], lea_rdi_[rip+0xe@@ 5a@@ 2], call_0xfffffffffffef0@@ c@@ f
endbr64, mov_rdi_qword_ptr_[rdi+0x20], jmp_0xfffffffffff@@ ef@@ 24@@ 8
endbr64, mov_eax_dword_ptr_[rsi], cmp_eax_1, jne_7, ret, mov_rdx_qword_ptr_[r@@ di+0x20], mov_dword_ptr_[rdx]_eax, ret
endbr64, push_r15, mov_r15_rdi, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x88, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x78]_rax, xor_eax_eax, ucomi@@ sd_xmm0_qword_ptr_[rip+0x@@ ee@@ 48], mov_rax_qword_ptr_[rdi+0x20], mov_qword_ptr_[rsp+0x28]_rax, jp@@ _0xc, jne_0xa, movsd_xmm0_qword_ptr_[rip+0x@@ ee@@ 2b], mov_rax_qword_ptr_[r15+8], pxor_xmm1_xmm1, mov_r14d_dword_ptr_[r@@ ax+8], mov_rax_qword_ptr_[rsp+0x28], movsd_xmm3@@ _qword_ptr_[rip+0x@@ e@@ 96@@ 2], mov_dword_ptr_[rax+@@ 4]_r14d, movsd@@ _xmm5@@ _qword_ptr_[rip+0x@@ e9@@ 1e], mov_rax_qword_ptr_[r15+8], mov_eax_dword_ptr_[rax+8], cvtsi2sd_xmm1_rax, mulsd@@ _xmm1_xmm0, div@@ sd_xmm1@@ _qword_ptr_[rip+0x@@ ed@@ fe], movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm5@@ _xmm2, movapd_xmm0_xmm1, jbe_0x@@ 2d, cvttsd2si@@ _rax@@ _xmm1, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ e@@ 8d@@ b], and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, cvttsd2si_rax_xmm0, mov_edx_eax, test_al_1, je_0xa@@ f0, mov_rbx_qword_ptr_[rsp+0x28], mov_dword_ptr_[rbx+0x@@ c]_eax, mov_rax_qword_ptr_[rsp+0x28], lea_ebp@@ _[rdx@@ +rdx*2], mov_dword_ptr_[rax+@@ 8]_ebp, mov_r13d@@ _r14d, lea_rdi_[r@@ 13+r@@ 13@@ *2], shl_rdi_3, call_0xfffffffffffef@@ 003, lea_rdi_[r@@ bp*4], mov_qword_ptr_[rsp+0x48]_rax, call_0xfffffffffffee@@ ff@@ 1, mov_rdi_rbp, mov_r12_rax, call_0xfffffffffffee@@ fe@@ 6, lea_rdi_[r@@ 13*4], mov_rbx_rbp, mov_rbp_rax, call_0xfffffffffffee@@ fd@@ 3, mov_r8d_dword_ptr_[r@@ 15+0x10], mov_qword_ptr_[rsp]_rax, test_r8d_r8d, jne_0xb@@ 73, mov_dword_ptr_[rsp+0x38]@@ _0x64, mov_r14@@ _qword_ptr_[rsp+0x48], mov_rbx_qword_ptr_[rsp+0x28], mov_esi@@ _0xf, mov_edi_dword_ptr_[rbx], call_0xffffffffffffd@@ 7c@@ 4, mov_qword_ptr_[rbx+0x18]_rax, mov_esi_0xff, mov_rdi_r12, mov_rbx_qword_ptr_[r@@ 15+0x20], mov_r13d_dword_ptr_[r@@ bx+8], lea_rdx_[r@@ 13*4], call_0xfffffffffffeee@@ 43, mov_rdx_r13, xor_esi_esi, mov_rdi_rbp, call_0xfffffffffffeee@@ 36, mov_rax_qword_ptr_[r15+8], mov_rdi_qword_ptr_[rax], call_qword_ptr_[rax+0x20], mov_rax_qword_ptr_[r15+8], mov_r13d_dword_ptr_[r@@ ax+8], test_r13d_r13d, je_0x1@@ 17, lea_rsi_[rsp+0x@@ 6c], mov_qword_ptr_[rsp+0x4@@ 0]_rsi, mov_qword_ptr_[rsp+8]@@ _r14, xor_r13d_r13d, lea_r9_[rsp+0x@@ 5c], lea_r8_[rsp+0x@@ 60], mov_r14_rbx, mov_qword_ptr_[rsp+0x60]_0, mov_rdx_r9, mov_rsi_r8, mov_rdi_qword_ptr_[rax], mov_qword_ptr_[rsp+0x30]_r9, mov_qword_ptr_[rsp+0x20]_r8, call_qword_ptr_[rax+0x10], mov_rdi_qword_ptr_[r@@ 14+0x18], mov_rcx_qword_ptr_[rsp+0x40], mov_edx_dword_ptr_[rsp+0x@@ 5c], mov_rsi_qword_ptr_[rsp+0x60], call_0xffffffffffffd@@ 78@@ f, mov_ecx_dword_ptr_[r@@ 14+0xc], mov_eax_dword_ptr_[rsp+0x@@ 6c], xor_edx_edx, div_ecx, mov_eax_dword_ptr_[rsp+0x70], mov_rsi_qword_ptr_[rsp+0x60], mov_dword_ptr_[rsp+0x18]_edx, xor_edx_edx, div_ecx, mov_eax_dword_ptr_[rsp+0x@@ 74], lea_ebx@@ _[rdx@@ +rcx], xor_edx_edx, div_ecx, mov_rax_qword_ptr_[r15+8], mov_rdi_qword_ptr_[rax], lea_ecx_[rdx@@ +rcx*2], mov_edx_dword_ptr_[rsp+0x@@ 5c], mov_dword_ptr_[rsp+0x10]_ecx, call_qword_ptr_[rax+0x18], mov_eax_r13d, mov_rsi_qword_ptr_[rsp+8], mov_r11d_dword_ptr_[rsp+0x18], mov_ecx_dword_ptr_[rsp+0x10], lea_rax_[rax+rax*2], lea_rsi_[r@@ si+rax*8], mov_dword_ptr_[rsi@@ ]@@ _r11d, mov_dword_ptr_[rsi+@@ 4]_ebx, mov_dword_ptr_[rsi+@@ 8]_ecx, lea_rax_[r@@ 12+r@@ 11@@ *4], mov_r8_qword_ptr_[rsp+0x20], mov_edx_dword_ptr_[rax], mov_r9_qword_ptr_[rsp+0x30], mov_dword_ptr_[rsi+0x@@ c]_edx, lea_rdx_[r@@ 12+r@@ bx*4], mov_edi_dword_ptr_[r@@ dx], mov_dword_ptr_[rsi+0x1@@ 0]_edi, lea_rdi_[r@@ 12@@ +rcx*4], mov_r10d_dword_ptr_[r@@ di], mov_dword_ptr_[rsi+0x1@@ 4]@@ _r10d, mov_dword_ptr_[rdi]@@ _r13d, mov_dword_ptr_[rdx@@ ]@@ _r13d, mov_dword_ptr_[rax]@@ _r13d, inc_r13d, inc@@ _byte_ptr_[r@@ bp+r@@ 11], inc@@ _byte_ptr_[r@@ bp+r@@ bx], inc@@ _byte_ptr_[r@@ bp@@ +rcx], mov_rax_qword_ptr_[r15+8], cmp_dword_ptr_[rax+@@ 8]_r13d, ja_0xffffffffffffff@@ 23, mov_rbx_r14, mov_r14_qword_ptr_[rsp+8], mov_ebx_dword_ptr_[r@@ bx+4], mov_esi_1, mov_edi_ebx, shr_edi@@ _3, inc_rdi, mov_dword_ptr_[rsp+0x20]@@ _ebx, call_0xfffffffffffef@@ 25@@ 1, mov_r11_rax, test_ebx_ebx, je_0x4@@ 47, mov_qword_ptr_[rsp+0x4@@ 0]_r14, mov_rdi_r14, xor_ebx_ebx, xor_edx_edx, jmp_0x25, mov_eax_dword_ptr_[rdi+4], cmp_byte_ptr_[rbp@@ +rax@@ ]_1, je_0x21, mov_eax_dword_ptr_[rdi+8], cmp_byte_ptr_[rbp@@ +rax@@ ]_1, je_0x17, inc_edx, add_rdi@@ _0x18, cmp_dword_ptr_[rsp+0x@@ 20]_edx, je_0x57, mov_eax_dword_ptr_[rdi], cmp_byte_ptr_[rbp@@ +rax@@ ]_1, jne_0xffffffffffffffd9, mov_eax_edx, shr_eax_3, mov_ecx_edx, and_ecx_7, add_rax@@ _r11, mov_esi_ecx, movzx_r8d_byte_ptr_[r@@ ax], lea_r10_[rip+0x@@ f0@@ e5], movzx_r9d_byte_ptr_[r@@ 10+r@@ si], mov_esi_r8d, and_esi@@ _r9d, movzx_esi_sil, sar_esi@@ _cl, test_esi_esi, jne_0xffffffffffffffbe, mov_rsi_qword_ptr_[rsp], mov_ecx_ebx, mov_dword_ptr_[rsi@@ +rcx*@@ 4]_edx, or_r8d@@ _r9d, inc_edx, mov_byte_ptr_[rax]@@ _r8b, inc_ebx, add_rdi@@ _0x18, cmp_dword_ptr_[rsp+0x@@ 20]_edx, jne_0xffffffffffffffad, test_ebx_ebx, je_0x@@ 93@@ 9, mov_dword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x30]@@ _r15, mov_r15@@ _r11, mov_esi_dword_ptr_[rsp+8], xor_edi_edi, mov_eax_esi, inc@@ _esi, mov_dword_ptr_[rsp+8]_esi, mov_rsi_qword_ptr_[rsp], mov_eax_dword_ptr_[r@@ si@@ +rax*4], mov_dword_ptr_[rsp+0x10]_eax, lea_rax_[rax+rax*2], lea_r8_[r@@ 14@@ +rax*8], mov_r9d_dword_ptr_[r@@ 8+r@@ di*4], mov_dword_ptr_[rsp+0x18]@@ _edi, lea_r11_[r@@ 12+r@@ 9*4], mov_eax_dword_ptr_[r@@ 11], mov_r10@@ _r9, cmp_dword_ptr_[rsp+0x1@@ 0]_eax, je_0x109, cmp_eax_-1, jne_0xa, jmp_0x37, mov_eax_edx, mov_edx_eax, lea_rdx_[rdx@@ +rdx*2], lea_rsi_[r@@ 14@@ +rdx*8], xor_ecx_ecx, cmp_r10d@@ _dword_ptr_[rsi], je_0xd, xor_ecx_ecx, cmp_r10d@@ _dword_ptr_[r@@ si+4], setne_cl, inc@@ _ecx, mov_edx_dword_ptr_[r@@ si+rcx@@ *4+0x@@ c], cmp_dword_ptr_[rsp+0x1@@ 0]_edx, je_0x2@@ d2, cmp_edx_-1, jne_0xffffffffffffffd1, mov_edx_dword_ptr_[rsp+0x10], mov_ebp_r13d, lea_rsi_[rip+0x@@ e8@@ 31], mov_edi_1, xor_eax_eax, shr@@ _ebp@@ _2, call_0xfffffffffffeec@@ 9f, add_ebp@@ _r13d, mov_r15@@ _qword_ptr_[rsp+0x40], xor_ebx_ebx, lea_r14_[rip+0x@@ e@@ 78@@ c], test_r13d_r13d, je_0x4c, mov_r9d_dword_ptr_[r@@ 15+8], mov_r8d_dword_ptr_[r@@ 15+4], mov_ecx_dword_ptr_[r15], mov_edx_ebx, mov_rsi_r14, mov_edi_1, xor_eax_eax, call_0xfffffffffffeec@@ 69, mov_ecx_dword_ptr_[r@@ 15+0x10], mov_edx_dword_ptr_[r15+0x@@ c], mov_r8d_dword_ptr_[r@@ 15+0x14], lea_rsi_[rip+0xe@@ 76@@ 7], mov_edi_1, xor_eax_eax, inc_ebx, call_0xfffffffffffeec@@ 48, add_r15@@ _0x18, cmp_r13d@@ _ebx, jne_0xffffffffffffffbc, lea_r14d_[r@@ bp-1], xor_ebx_ebx, lea_r13_[rip+0x@@ e@@ 75@@ 3], test_ebp_ebp, je_0x2b, mov_ecx_dword_ptr_[r@@ 12+r@@ bx*4], mov_edx_ebx, mov_rsi_r13, mov_edi_1, xor_eax_eax, call_0xfffffffffffeec@@ 10, mov_rax_rbx, inc_rbx, cmp_r14_rax, jne_0xffffffffffffffe2, mov_edi_0xffffffff, call_0xfffffffffffee@@ bb@@ b, cmp_eax_-1, je_0xffffffffffffff@@ 36, lea_rax_[rax+rax*2], lea_rdx_[r@@ 14@@ +rax*8], mov_eax_dword_ptr_[rsp+0x18], mov_edx_dword_ptr_[r@@ dx@@ +rax*4+0x@@ c], mov_dword_ptr_[r@@ 11@@ ]_edx, inc_rdi, dec@@ _byte_ptr_[r@@ bp+r@@ 9], cmp_rdi@@ _3, jne_0xfffffffffffffe@@ b9, mov_eax_dword_ptr_[r@@ 8], mov_edi_dword_ptr_[r@@ 8+4], cmp_byte_ptr_[rbp@@ +rax@@ ]_1, mov_esi_dword_ptr_[r@@ 8+8], je_0x1@@ 72, cmp_byte_ptr_[r@@ bp+r@@ di@@ ]_1, je_0x1@@ 17, cmp_byte_ptr_[r@@ bp+r@@ si@@ ]_1, je_0xbc, cmp_ebx_dword_ptr_[r@@ sp+8], jne_0xfffffffffffffe@@ 62, mov_r11@@ _r15, mov_rdi_r11, mov_r15_qword_ptr_[rsp+0x30], call_0xfffffffffffeed@@ 01, cmp_dword_ptr_[rsp+0x@@ 20]@@ _ebx, je_0x1@@ f0, mov_rbx_qword_ptr_[rsp+0x28], dec@@ _dword_ptr_[rsp+0x@@ 38], mov_rdi_qword_ptr_[rbx+0x18], call_0xffffffffffffd6@@ 15, mov_qword_ptr_[rbx+0x18]_0, mov_edi_dword_ptr_[r@@ 15+0x10], test_edi_edi, jne_0x1@@ 92, mov_esi_dword_ptr_[rsp+0x@@ 38], test_esi_esi, jne_0xfffffffffffffb@@ e6, mov_rdi_qword_ptr_[rsp], call_0xfffffffffffeec@@ bc, mov_rdi_qword_ptr_[rsp+0x48], call_0xfffffffffffeec@@ b2, mov_rdi_r12, call_0xfffffffffffeec@@ aa, mov_rdi_rbp, call_0xfffffffffffeec@@ a2, xor_r12d_r12d, mov_rax_qword_ptr_[rsp+0x78], xor_rax_qword_ptr_fs:[0x28], jne_0x7@@ 2a, add_rsp_0x88, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_edi_dword_ptr_[r@@ 12+r@@ si*4], lea_r10_[rip+0x@@ ee@@ 3d], mov_eax_edi, shr_eax_3, mov_ecx_edi, and_ecx_7, add_rax_r15, mov_edx_ecx, movzx_esi_byte_ptr_[r@@ ax], movzx_r8d_byte_ptr_[r@@ 10@@ +rdx], mov_edx_esi, and_edx@@ _r8d, movzx_edx_dl, sar_edx@@ _cl, test_edx_edx, jne_0xffffffffffffff@@ 1c, mov_rcx_qword_ptr_[rsp], mov_edx_ebx, or_esi@@ _r8d, mov_dword_ptr_[rcx@@ +rdx*@@ 4]_edi, inc_ebx, mov_byte_ptr_[rax@@ ]_sil, jmp_0xffffffffffffff05, mov_r8d_dword_ptr_[r@@ 12+r@@ di*4], lea_r10_[rip+0x@@ ed@@ ed], mov_eax_r8d, shr_eax_3, mov_ecx_r8d, and_ecx_7, add_rax_r15, mov_edx_ecx, movzx_edi_byte_ptr_[r@@ ax], movzx_r9d_byte_ptr_[r@@ 10@@ +rdx], mov_edx_edi, and_edx@@ _r9d, movzx_edx_dl, sar_edx@@ _cl, test_edx_edx, jne_0xfffffffffffffe@@ bf, mov_rcx_qword_ptr_[rsp], mov_edx_ebx, or_edi@@ _r9d, mov_dword_ptr_[rcx@@ +rdx*@@ 4]_r8d, inc_ebx, mov_byte_ptr_[rax@@ ]_dil, jmp_0xfffffffffffffea@@ 7, mov_r9d_dword_ptr_[r@@ 12@@ +rax*4], lea_r10_[rip+0x@@ ed@@ 9d], mov_eax_r9d, shr_eax_3, mov_ecx_r9d, and_ecx_7, add_rax_r15, mov_edx_ecx, movzx_r8d_byte_ptr_[r@@ ax], movzx_r10d_byte_ptr_[r@@ 10@@ +rdx], mov_edx_r8d, and_edx@@ _r10d, movzx_edx_dl, sar_edx@@ _cl, test_edx_edx, jne_0xfffffffffffffe@@ 62, mov_rcx_qword_ptr_[rsp], mov_edx_ebx, or_r8d@@ _r10d, mov_dword_ptr_[rcx@@ +rdx*@@ 4]@@ _r9d, inc_ebx, mov_byte_ptr_[rax]@@ _r8b, jmp_0xfffffffffffffe@@ 4a, cmp_edx_-1, je_0xfffffffffffffd@@ 36, mov_r10d_dword_ptr_[rsp+0x18], lea_rdx_[rdx@@ +rdx*2], lea_rdx_[r@@ 14@@ +rdx*8], mov_edx_dword_ptr_[r@@ dx+r@@ 10@@ *4+0x@@ c], cmp_eax_-1, je_0xfffffffffffffd@@ fb, mov_dword_ptr_[rsi@@ +rcx@@ *4+0x@@ c]_edx, jmp_0xfffffffffffffd@@ f4, mov_rax_qword_ptr_[rip+0x@@ 170@@ a1], mov_ecx_dword_ptr_[rsp+0x38], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0xe@@ 55@@ b], mov_esi_1, xor_eax_eax, call_0xfffffffffffee@@ 90@@ 4, jmp_0xfffffffffffffe@@ 53, mov_rdi_rax, call_0xfffffffffffeeb@@ 0d, mov_rdi_r12, call_0xfffffffffffeeb@@ 05, mov_rdi_rbp, call_0xfffffffffffeea@@ fd, mov_eax_dword_ptr_[r@@ 15+0x10], test_eax_eax, jne_0x5@@ 2a, mov_rax_qword_ptr_[rsp+0x28], mov_ebx_dword_ptr_[r@@ ax+8], mov_r12d_ebx, shr@@ _r12d@@ _3, inc_r12, mov_rdi_r12, call_0xfffffffffffee@@ 9a7, pxor_xmm0_xmm0, cvtsi2sd_xmm0@@ _rbx, movsd_xmm2_qword_ptr_[rip+0x@@ e@@ 26@@ 1], movsd@@ _xmm6@@ _qword_ptr_[rip+0x@@ e@@ 22@@ 1], mov_qword_ptr_[rsp+0x38]_rax, mulsd_xmm0_qword_ptr_[rip+0x@@ e7@@ 14], movapd_xmm1_xmm0, and@@ pd@@ _xmm1_xmm2, ucomisd@@ _xmm6@@ _xmm1, movapd@@ _xmm3@@ _xmm0, ja_0x4@@ 7c, cvttsd2si@@ _rdi@@ _xmm0, mov_esi_1, lea_rbp_[rip+0x@@ ec@@ 6d], mov_edi@@ _edi, call_0xfffffffffffeed@@ 73, mov_rbx_qword_ptr_[rsp+0x28], mov_rdi_qword_ptr_[rsp+0x38], mov_qword_ptr_[rbx+0x10]_rax, mov_rdx_r12, xor_esi_esi, call_0xfffffffffffee@@ 7f@@ b, lea_eax_[r@@ 13-1], test_r13d_r13d, je_0x2@@ 03, mov_qword_ptr_[rsp+0x4@@ 0]_r15, mov_ebx_eax, jmp_0x@@ 9a, test_r9d_r9d, jne_8, or_r12d@@ _r14d, mov_byte_ptr_[r@@ di]@@ _r12b, movzx_r9d_byte_ptr_[r@@ 8], mov_ecx_edx, mov_edi@@ _r9d, and_edi@@ _r15d, movzx_edi@@ _dil, sar@@ _edi@@ _cl, test_edi_edi, jne_8, or@@ _r15d@@ _r9d, mov_byte_ptr_[r@@ 8]@@ _r15b, mov_rdi_qword_ptr_[rsp+0x28], movzx_ecx_byte_ptr_[rsp+0x@@ 20], mov_rdx_qword_ptr_[r@@ di+0x10], mov_rdi_qword_ptr_[rsp+0x18], mov_r14d@@ _0x@@ aaaaaaab, movzx_edi_byte_ptr_[r@@ dx+r@@ di], sar@@ _edi@@ _cl, mov_rcx_qword_ptr_[rsp+0x10], and_edi@@ _3, movzx_r8d_byte_ptr_[r@@ dx@@ +rcx], movzx_ecx_byte_ptr_[rsp+0x@@ 30], sar@@ _r8d@@ _cl, and_r8d@@ _3, add_edi@@ _r8d, mov_ecx_6, sub_ecx@@ _edi, mov_edi_ecx, imul_rdi@@ _r14, shr_rdi@@ _0x21, lea_edi_[r@@ di+r@@ di@@ *2], sub_ecx@@ _edi, mov_edi_ecx, mov_ecx_eax, shl_edi@@ _cl, or_byte_ptr_[r@@ dx+r@@ 11@@ ]_dil, or@@ _byte_ptr_[rsi@@ ]@@ _r13b, dec_ebx, cmp_ebx_-1, je_0x1@@ 5d, mov_rsi_qword_ptr_[rsp], mov_eax_ebx, mov_eax_dword_ptr_[r@@ si@@ +rax*4], mov_rsi_qword_ptr_[rsp+0x48], lea_rax_[rax+rax*2], lea_rdx_[r@@ si+rax*8], mov_eax_dword_ptr_[rdx], mov_r8d_dword_ptr_[r@@ dx+4], mov_edi_eax, and_edi@@ _7, mov_ecx_edi, movzx_r13d_byte_ptr_[r@@ bp@@ +rcx], mov_ecx_r8d, mov_r10_qword_ptr_[rsp+0x38], shr_ecx_3, mov_dword_ptr_[rsp+8]@@ _edi, mov_edi_ecx, mov_ecx_r8d, and_ecx_7, add_rdi@@ _r10, mov_r9d_ecx, movzx_r12d@@ _byte_ptr_[rdi], movzx_r14d_byte_ptr_[r@@ bp+r@@ 9], mov_r9d_r12d, mov_edx_dword_ptr_[r@@ dx+8], and_r9d@@ _r14d, movzx_r9d@@ _r9b, sar@@ _r9d@@ _cl, mov_ecx_edx, shr_ecx@@ _2, mov_qword_ptr_[rsp+0x10]_rcx, mov_ecx_r8d, add_r@@ 8d_r8d, mov_esi_eax, and_r8d@@ _6, shr_ecx@@ _2, mov_dword_ptr_[rsp+0x20]@@ _r8d, shr_esi@@ _3, mov_r8d_edx, mov_qword_ptr_[rsp+0x18]_rcx, add_rsi@@ _r10, lea_ecx_[rdx@@ +rdx], shr_r8d@@ _3, and_ecx@@ _6, add_r8@@ _r10, and_edx_7, movzx_r10d_byte_ptr_[r@@ si], mov_dword_ptr_[rsp+0x3@@ 0]_ecx, mov_ecx_edx, movzx_r15d_byte_ptr_[r@@ bp@@ +rcx], and_r10d@@ _r13d, movzx_ecx_byte_ptr_[r@@ sp+8], movzx_r10d@@ _r10b, mov_r11d_eax, sar@@ _r10d@@ _cl, add_eax_eax, shr@@ _r11d@@ _2, and_eax@@ _6, test_r10d_r10d, je_0xfffffffffffffea@@ 6, test_r9d_r9d, jne_0x2@@ 1d, movzx_r9d_byte_ptr_[r@@ 8], mov_ecx_edx, mov_esi_r9d, and_esi@@ _r15d, movzx_esi_sil, sar_esi@@ _cl, test_esi_esi, jne_8, or@@ _r15d@@ _r9d, mov_byte_ptr_[r@@ 8]@@ _r15b, mov_rsi_qword_ptr_[rsp+0x28], mov_ecx_eax, mov_rdx_qword_ptr_[r@@ si+0x10], mov_rax_qword_ptr_[rsp+0x10], movzx_esi_byte_ptr_[r@@ dx+r@@ 11], movzx_eax_byte_ptr_[rdx+rax], sar_esi@@ _cl, movzx_ecx_byte_ptr_[rsp+0x@@ 30], and_esi@@ _3, sar_eax@@ _cl, and_eax_3, add_esi@@ _eax, mov_eax_7, sub_eax_esi, mov_ecx_eax, mov_esi_0x@@ aaaaaaab, imul_rcx@@ _rsi, mov_rsi_qword_ptr_[rsp+0x18], dec_ebx, shr_rcx@@ _0x21, lea_ecx_[r@@ cx@@ +rcx*2], sub_eax_ecx, movzx_ecx_byte_ptr_[rsp+0x@@ 20], shl_eax_cl, or_byte_ptr_[r@@ dx+r@@ si@@ ]_al, or_byte_ptr_[r@@ di]@@ _r14b, cmp_ebx_-1, jne_0xfffffffffffffea@@ f, mov_r15@@ _qword_ptr_[rsp+0x40], mov_rdi_qword_ptr_[rsp+0x38], call_0xfffffffffffee@@ 85@@ 7, mov_rdi_qword_ptr_[rsp], call_0xfffffffffffee@@ 84@@ e, mov_rdi_qword_ptr_[rsp+0x48], call_0xfffffffffffee@@ 84@@ 4, mov_ecx_dword_ptr_[r@@ 15+0x10], test_ecx_ecx, jne_0x2@@ 49, mov_rax_qword_ptr_[rsp+0x28], pxor_xmm0_xmm0, mov_eax_dword_ptr_[rax+8], movsd_xmm2_qword_ptr_[rip+0x@@ d@@ fb@@ f], cvtsi2sd_xmm0_rax, movsd@@ _xmm7@@ _qword_ptr_[rip+0x@@ d@@ f7@@ a], mov_rbp_rax, div@@ sd_xmm0_qword_ptr_[rip+0x@@ e@@ 9f@@ 7], movapd_xmm1_xmm0, and@@ pd@@ _xmm1_xmm2, ucomisd@@ _xmm7@@ _xmm1, movapd@@ _xmm3@@ _xmm0, ja_0x1@@ a7, cvttsd2si@@ _rdi@@ _xmm0, mov_esi_1, mov_edi@@ _edi, call_0xfffffffffffeea@@ d5, mov_rbx_rax, test_ebp_ebp, je_0x6c, mov_r11_qword_ptr_[rsp+0x28], mov_edx_1, xor_edi_edi, xor_esi_esi, mov_r8d_0x@@ cccccccd, lea_r9_[rip+0x@@ e@@ 99@@ e], jmp_0x1f, mov_esi_edi, mov_rax_rsi, imul_rax@@ _r8, mov_ecx_edi, shr_rax@@ _0x22, lea_eax_[rax@@ +rax*4], sub_ecx_eax, movzx_edx_byte_ptr_[r@@ 9@@ +rcx], mov_rcx_qword_ptr_[r@@ 11@@ +0x10], mov_eax_edi, shr_eax@@ _2, movzx_r10d_byte_ptr_[r@@ cx+rax], lea_ecx_[r@@ di+r@@ di], and_ecx@@ _6, mov_eax_r10d, sar_eax@@ _cl, imul_rsi@@ _r8, and_eax_3, imul@@ _eax_edx, shr_rsi@@ _0x22, inc@@ _edi, add@@ _byte_ptr_[r@@ bx+r@@ si@@ ]_al, cmp_ebp@@ _edi, jne_0xffffffffffffffb9, mov_r14_qword_ptr_[rsp+0x28], mov_rdi_qword_ptr_[r14+0x10], call_0xfffffffffffee@@ 76@@ 6, mov_qword_ptr_[r14+0x1@@ 0]_rbx, mov_edi_0x18, call_0xfffffffffffee@@ 6@@ 28, mov_r12_rax, mov_eax_dword_ptr_[r15], mov_edi_0x20, mov_dword_ptr_[r12]_eax, call_0xfffffffffffee@@ 6@@ 14, mov_rdx_qword_ptr_[r@@ 14+0x10], mov_qword_ptr_[rax+0x10]_rdx, mov_qword_ptr_[r14+0x1@@ 0]_0, mov_rdx_qword_ptr_[r14+0x18], mov_qword_ptr_[rax+0x18]_rdx, mov_qword_ptr_[r14+0x1@@ 8]_0, mov_edx_dword_ptr_[r@@ 14+8], mov_dword_ptr_[rax+4]_edx, mov_edx_dword_ptr_[r@@ 14+4], mov_dword_ptr_[rax]_edx, mov_edx_dword_ptr_[r14+0x@@ c], mov_qword_ptr_[r12+0x10]_rax, mov_dword_ptr_[rax+8]_edx, mov_edx_dword_ptr_[r@@ 15+0x10], mov_eax_dword_ptr_[r@@ 14+8], mov_dword_ptr_[r12+@@ 4]_eax, test_edx_edx, je_0xfffffffffffffa@@ 67, mov_rax_qword_ptr_[rip+0x@@ 16@@ c5@@ 2], mov_edx_0x3@@ 5, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x@@ dd@@ e6], call_0xfffffffffffeea@@ c6, jmp_0xfffffffffffffa@@ 41, mov_rsi_qword_ptr_[rsp+0x28], mov_ecx_eax, mov_rdx_qword_ptr_[r@@ si+0x10], mov_rax_qword_ptr_[rsp+0x18], movzx_esi_byte_ptr_[r@@ dx+r@@ 11], movzx_eax_byte_ptr_[rdx+rax], sar_esi@@ _cl, movzx_ecx_byte_ptr_[rsp+0x@@ 20], and_esi@@ _3, sar_eax@@ _cl, and_eax_3, add_esi@@ _eax, mov_eax_8, sub_eax_esi, mov_ecx_eax, mov_esi_0x@@ aaaaaaab, imul_rcx@@ _rsi, mov_rsi_qword_ptr_[rsp+0x10], shr_rcx@@ _0x21, lea_ecx_[r@@ cx@@ +rcx*2], sub_eax_ecx, movzx_ecx_byte_ptr_[rsp+0x@@ 30], shl_eax_cl, or_byte_ptr_[r@@ dx+r@@ si@@ ]_al, or_byte_ptr_[r@@ 8]@@ _r15b, jmp_0xfffffffffffffc@@ ae, lea_edx_[rax+1], mov_rax_qword_ptr_[rsp+0x28], mov_dword_ptr_[rax+0x@@ c]_edx, jmp_0xfffffffffffff5@@ 13, cvttsd2si_rax_xmm0, pxor_xmm1_xmm1, movsd_xmm4@@ _qword_ptr_[rip+0x@@ dd@@ 9f], and@@ n@@ pd@@ _xmm2@@ _xmm3, cvtsi2sd_xmm1_rax, cmp@@ n@@ l@@ e@@ sd_xmm0_xmm1, and@@ pd@@ _xmm0_xmm4, addsd_xmm0_xmm1, or@@ pd@@ _xmm0_xmm2, jmp_0xfffffffffffffe@@ 34, cvttsd2si_rax_xmm0, pxor_xmm1_xmm1, movsd_xmm4@@ _qword_ptr_[rip+0x@@ dd@@ 6f], and@@ n@@ pd@@ _xmm2@@ _xmm3, cvtsi2sd_xmm1_rax, cmp@@ n@@ l@@ e@@ sd_xmm0_xmm1, and@@ pd@@ _xmm0_xmm4, addsd_xmm0_xmm1, or@@ pd@@ _xmm0_xmm2, jmp_0xfffffffffffffb@@ 5f, mov_rax_qword_ptr_[rip+0x@@ 16@@ b@@ 51], mov_edx_0x1@@ b, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0xe@@ 26@@ 3], call_0xfffffffffffee@@ 9c@@ 5, jmp_0xfffffffffffffd@@ 9d, mov_rax_qword_ptr_[rsp+0x28], lea_rdx_[rip+0x@@ e0@@ 2c], mov_ecx_dword_ptr_[rax+4], mov_r8d_dword_ptr_[r@@ ax+8], mov_rax_qword_ptr_[rip+0x@@ 16@@ b@@ 16], mov_esi_1, mov_rdi_qword_ptr_[rax], xor_eax_eax, call_0xfffffffffffee@@ 38@@ 4, jmp_0xfffffffffffffa@@ b3, mov_rdi_r11, call_0xfffffffffffee@@ 58@@ d, jmp_0xfffffffffffff8@@ 96, mov_rax_qword_ptr_[rip+0x@@ 16@@ ae@@ 1], mov_r8d_ebx, mov_rdi_qword_ptr_[rax], mov_ecx_r14d, lea_rdx_[rip+0xd@@ f2@@ 9], mov_esi_1, xor_eax_eax, call_0xfffffffffffee@@ 34@@ 2, jmp_0xfffffffffffff@@ 47@@ 0, call_0xfffffffffffee@@ 7c@@ 8
endbr64, push_r12, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0x20, mov_rbx_qword_ptr_[rdi+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_r12_[rsp+0x@@ c], mov_qword_ptr_[rsp+0x10]_0, call_0xffffffffffffb7@@ 9f, mov_rdi_qword_ptr_[rbx+0x18], lea_rsi_[rsp+0x10], mov_rdx_r12, call_0xffffffffffffc@@ ca@@ e, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r12, call_0xfffffffffffee@@ 8e@@ 9, mov_esi_dword_ptr_[rsp+0xc], mov_rdi_qword_ptr_[rsp+0x10], mov_rcx_rbp, mov_edx_1, call_0xfffffffffffee@@ 8d@@ 3, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffee@@ 4d@@ 9, lea_rdi_[r@@ bx+4], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffee@@ 8b@@ 3, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_rbx, call_0xfffffffffffee@@ 8@@ 9e, lea_rdi_[rbx+8], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffee@@ 88@@ 8, mov_eax_dword_ptr_[rbx+4], pxor_xmm1_xmm1, cvtsi2sd_xmm1_rax, movsd_xmm3@@ _qword_ptr_[rip+0x@@ dc@@ 1f], movsd_xmm4@@ _qword_ptr_[rip+0x@@ db@@ df], div@@ sd_xmm1@@ _qword_ptr_[rip+0x@@ e@@ 65@@ f], movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm4@@ _xmm2, movapd_xmm0_xmm1, jbe_0x@@ 2d, cvttsd2si@@ _rax@@ _xmm1, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ d@@ ba@@ c], and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, cvttsd2si@@ _rsi@@ _xmm0, mov_rdi_qword_ptr_[rbx+0x10], mov_rcx_rbp, mov_edx_1, mov_esi_esi, call_0xfffffffffffee@@ 80@@ f, test_rax_rax, je_0x27, mov_eax_1, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x4e, add_rsp_0x20, pop_rbx, pop_rbp, pop_r12, ret, mov_rdi_rbp, call_0xfffffffffffee@@ 4@@ 3d, test_eax_eax, je_0xffffffffffffffd1, call_0xfffffffffffee@@ 6@@ 14, mov_edi_dword_ptr_[rax], call_0xfffffffffffee@@ 50@@ d, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 16@@ 93@@ 6], lea_rdx_[rip+0x@@ da@@ 47], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffee@@ 19@@ d, xor_eax_eax, jmp_0xffffffffffffffa6, call_0xfffffffffffee@@ 62@@ 4
endbr64, push_r13, push_r12, mov_r12_rdi, mov_edi_0x20, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xfffffffffffee@@ 24@@ 7, mov_qword_ptr_[rbp+0x10]_rax, mov_rcx_r12, mov_edx_1, mov_esi_4, lea_rdi_[r@@ sp+4], mov_rbx_rax, call_0xfffffffffffee@@ 56@@ 9, mov_r13d_dword_ptr_[r@@ sp+4], mov_rdi_r13, call_0xfffffffffffee@@ 2@@ 1c, mov_rdi_rax, mov_rcx_r12, mov_edx_1, mov_rsi_r13, mov_rbp_rax, call_0xfffffffffffee@@ 54@@ 6, mov_esi_dword_ptr_[rsp+4], mov_rdi_rbp, call_0xffffffffffffc@@ c0@@ a, mov_rdi_rbp, mov_qword_ptr_[rbx+0x18]_rax, call_0xfffffffffffee@@ 3@@ 1e, lea_rdi_[r@@ bx+4], mov_rcx_r12, mov_edx_1, mov_esi_4, call_0xfffffffffffee@@ 5@@ 18, mov_rcx_r12, mov_edx_1, mov_esi_4, mov_rdi_rbx, call_0xfffffffffffee@@ 50@@ 3, lea_rdi_[rbx+8], mov_rcx_r12, mov_edx_1, mov_esi_4, call_0xfffffffffffee@@ 4e@@ d, mov_eax_dword_ptr_[rbx+4], pxor_xmm1_xmm1, cvtsi2sd_xmm1_rax, movsd_xmm3@@ _qword_ptr_[rip+0x@@ da@@ 64], movsd_xmm4@@ _qword_ptr_[rip+0x@@ da@@ 24], div@@ sd_xmm1@@ _qword_ptr_[rip+0x@@ e@@ 4a@@ 4], movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm4@@ _xmm2, movapd_xmm0_xmm1, jbe_0x@@ 2d, cvttsd2si@@ _rax@@ _xmm1, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ d@@ 9f@@ 1], and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, cvttsd2si@@ _rbp@@ _xmm0, mov_esi_1, mov_ebp@@ _ebp, mov_rdi_rbp, call_0xfffffffffffee@@ 55@@ 8, mov_rdi_rax, mov_rcx_r12, mov_edx_1, mov_rsi_rbp, mov_qword_ptr_[rbx+0x10]_rax, call_0xfffffffffffee@@ 46@@ 1, test_rax_rax, je_0x21, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x4b, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_rdi_r12, call_0xfffffffffffee@@ 27@@ 5, test_eax_eax, je_0xffffffffffffffd7, call_0xfffffffffffee@@ 44@@ c, mov_edi_dword_ptr_[rax], call_0xfffffffffffee@@ 34@@ 5, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 16@@ 76@@ e], lea_rdx_[rip+0xd@@ 87@@ f], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffed@@ fd@@ 5, jmp_0xffffffffffffffa9, call_0xfffffffffffee@@ 45@@ e
endbr64, push_rbp, push_rbx, sub_rsp_0x28, mov_rbx_qword_ptr_[rdi+0x10], lea_rcx_[rsp+0x@@ c], mov_rdi_qword_ptr_[rbx+0x18], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xffffffffffffc@@ 9@@ 19, mov_edi_dword_ptr_[r@@ bx+8], mov_eax_dword_ptr_[rsp+0xc], xor_edx_edx, div@@ _edi, mov_eax_dword_ptr_[rsp+0x10], mov_r8d_0x@@ cccccccd, mov_dword_ptr_[rsp+0xc]_edx, mov_esi_edx, xor_edx_edx, div@@ _edi, mov_eax_dword_ptr_[rsp+0x14], lea_r11d@@ _[rdx+r@@ di], xor_edx_edx, div@@ _edi, mov_dword_ptr_[rsp+0x10]_r11d, mov_eax_esi, imul_rax@@ _r8, mov_rcx_r11, imul@@ _r11@@ _r8, shr_rax@@ _0x22, mov_ebp_eax, lea_eax_[rax@@ +rax*4], shr@@ _r11@@ _0x22, sub_esi_eax, shl_rsi@@ _8, lea_edi@@ _[rdx+r@@ di@@ *2], mov_dword_ptr_[rsp+0x1@@ 4]_edi, mov_rdx_rdi, imul_rdi@@ _r8, mov_r9_qword_ptr_[r@@ bx+0x10], lea_r8_[rip+0x@@ de@@ 2b], mov_ebx@@ _r11d, movzx_ebp_byte_ptr_[r@@ 9+r@@ bp], lea_r11d_[r@@ 11+r@@ 11@@ *4], add_rsi@@ _r8, sub_ecx@@ _r11d, movzx_eax_byte_ptr_[r@@ si+r@@ bp], shl_rcx@@ _8, movzx_esi_byte_ptr_[r@@ 9+r@@ bx], shr_rdi@@ _0x22, add_rcx@@ _r8, movzx_ecx_byte_ptr_[r@@ cx+r@@ si], lea_esi_[r@@ di+r@@ di*4], sub_edx_esi, mov_r10d@@ _edi, add_eax_ecx, shl_rdx@@ _8, movzx_ecx_byte_ptr_[r@@ 9+r@@ 10], add_rdx@@ _r8, movzx_edx_byte_ptr_[r@@ dx@@ +rcx], mov_ecx_0x@@ aaaaaaab, add_edx_eax, mov_rax_rdx, imul@@ _rdx_rcx, shr_rdx@@ _0x21, lea_edx_[rdx@@ +rdx*2], sub_eax_edx, mov_rbx_qword_ptr_[rsp+0x18], xor_rbx_qword_ptr_fs:[0x28], cdqe, mov_eax_dword_ptr_[r@@ sp@@ +rax*4+0x@@ c], jne_9, add_rsp_0x28, pop_rbx, pop_rbp, ret, call_0xfffffffffffee@@ 34@@ 3
endbr64, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, mov_r12_qword_ptr_[r@@ di+0x10], mov_rdi_qword_ptr_[r12+0x10], call_0xfffffffffffee0@@ a9, mov_rdi_qword_ptr_[r@@ 12+0x18], call_0xffffffffffffc@@ 9c@@ f, mov_rdi_r12, call_0xfffffffffffee0@@ 97, add_rsp_8, mov_rdi_rbp, pop_rbp, pop_r12, jmp_0xfffffffffff@@ ee@@ 0@@ 8@@ 8
endbr64, push_r12, push_rbp, push_rbx, mov_rbx_rsi, add_rbx_4, mov_rbp_qword_ptr_[r@@ di+0x10], mov_rdi_qword_ptr_[rbp+0x18], call_0xffffffffffffc@@ aa@@ 9, mov_dword_ptr_[rbx@@ -4]_eax, mov_r12d_eax, mov_rsi_rbx, mov_rdi_qword_ptr_[rbp+0x18], call_0xffffffffffffc@@ 9b@@ 7, mov_edi_r12d, call_0xffffffffffffc@@ 9d@@ f, mov_eax_eax, add_rbx_rax, mov_eax_dword_ptr_[rbp+8], pxor_xmm1_xmm1, mov_dword_ptr_[rbx]_eax, movsd_xmm3@@ _qword_ptr_[rip+0x@@ d@@ 7d@@ 4], movsd_xmm4@@ _qword_ptr_[rip+0x@@ d7@@ 94], mov_eax_dword_ptr_[rbp+4], cvtsi2sd_xmm1_rax, div@@ sd_xmm1@@ _qword_ptr_[rip+0x@@ e@@ 20c], movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm4@@ _xmm2, movapd_xmm0_xmm1, jbe_0x@@ 2d, cvttsd2si@@ _rax@@ _xmm1, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ d@@ 75@@ 9], and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, cvttsd2si@@ _rdx@@ _xmm0, lea_rdi_[r@@ bx+4], pop_rbx, mov_rsi_qword_ptr_[rbp+0x10], pop_rbp, mov_edx_edx, pop_r12, jmp_0xfffffffffff@@ ee@@ 44@@ c
endbr64, push_rbx, sub_rsp_0x10, mov_rbx_qword_ptr_[rdi+0x10], mov_rdi_qword_ptr_[rbx+0x18], call_0xffffffffffffc@@ 9e@@ f, mov_edx_dword_ptr_[rbx+4], pxor_xmm1_xmm1, cvtsi2sd_xmm1@@ _rdx, movsd_xmm3@@ _qword_ptr_[rip+0x@@ d7@@ 36], movsd_xmm4@@ _qword_ptr_[rip+0x@@ d@@ 6f@@ 6], mov_edi_eax, div@@ sd_xmm1@@ _qword_ptr_[rip+0x@@ e@@ 17@@ 4], movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm4@@ _xmm2, movapd_xmm0_xmm1, jbe_0x@@ 2d, cvttsd2si@@ _rdx@@ _xmm1, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ d@@ 6c@@ 1], and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rdx, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, movsd_qword_ptr_[rsp+8]_xmm0, call_0xffffffffffffc@@ 8d@@ 1, movsd_xmm0_qword_ptr_[rsp+8], mov_r8d_eax, cvttsd2si_rax_xmm0, add_rsp_0x10, pop_rbx, lea_eax_[r@@ 8+r@@ ax+0xc], ret
endbr64, push_r15, push_r14, mov_r14d_edx, push_r13, mov_r13_rsi, push_r12, lea_r12_[r@@ di+4], push_rbp, push_rbx, sub_rsp_0x28, mov_r15d_dword_ptr_[r@@ di], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_edi_r15d, call_0xffffffffffffc@@ 87@@ e, mov_ebx_eax, add_rbx@@ _r12, lea_r8_[rsp+0x@@ c], mov_ecx_r14d, mov_rdx_r13, mov_esi_r15d, mov_rdi_r12, mov_ebp_dword_ptr_[r@@ bx], call_0xffffffffffffc@@ 8d@@ 1, mov_eax_dword_ptr_[rsp+0xc], xor_edx_edx, div@@ _ebp, mov_eax_dword_ptr_[rsp+0x10], mov_edi_0x@@ cccccccd, mov_dword_ptr_[rsp+0xc]_edx, mov_esi_edx, xor_edx_edx, div@@ _ebp, mov_eax_dword_ptr_[rsp+0x14], lea_r10d@@ _[rdx+r@@ bp], xor_edx_edx, div@@ _ebp, mov_dword_ptr_[rsp+0x10]_r10d, mov_eax_esi, imul_rax@@ _rdi, mov_rcx_r10, imul@@ _r10@@ _rdi, shr_rax@@ _0x22, shr@@ _r10@@ _0x22, mov_r11d@@ _r10d, lea_r10d_[r@@ 10+r@@ 10@@ *4], sub_ecx@@ _r10d, shl_rcx@@ _8, lea_r8d@@ _[rdx+r@@ bp@@ *2], mov_ebp_eax, lea_eax_[rax@@ +rax*4], sub_esi_eax, mov_dword_ptr_[rsp+0x14]@@ _r8d, movzx_ebp_byte_ptr_[r@@ bx+r@@ bp+4], mov_rdx_r8, shl_rsi@@ _8, imul@@ _r8@@ _rdi, lea_rdi_[rip+0x@@ db@@ 36], add_rsi_rdi, movzx_eax_byte_ptr_[r@@ si+r@@ bp], movzx_esi_byte_ptr_[r@@ bx+r@@ 11@@ +4], shr_r8@@ _0x22, add_rcx@@ _rdi, movzx_ecx_byte_ptr_[r@@ cx+r@@ si], lea_esi_[r@@ 8+r@@ 8*4], sub_edx_esi, mov_r9d_r8d, add_eax_ecx, shl_rdx@@ _8, movzx_ecx_byte_ptr_[r@@ bx+r@@ 9+4], add_rdx@@ _rdi, movzx_edx_byte_ptr_[r@@ dx@@ +rcx], mov_ecx_0x@@ aaaaaaab, add_edx_eax, mov_rax_rdx, imul@@ _rdx_rcx, shr_rdx@@ _0x21, lea_edx_[rdx@@ +rdx*2], sub_eax_edx, mov_rbx_qword_ptr_[rsp+0x18], xor_rbx_qword_ptr_fs:[0x28], cdqe, mov_eax_dword_ptr_[r@@ sp@@ +rax*4+0x@@ c], jne_0x11, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xfffffffffffee0@@ 5@@ 6
push_r15, mov_r15_rdi, push_r14, push_r13, mov_r13_r8, push_r12, lea_r12_[rip+0x@@ e@@ 19@@ b], push_rbp, mov_rbp_rsi, mov_esi_edx, push_rbx, mov_rbx_rcx, sub_rsp_0x28, mov_dword_ptr_[rsp+0xc]_edx, mov_rdi_qword_ptr_[rdi+0x10], lea_r14_[rsp+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xa@@ 1e0, mov_qword_ptr_[rsp+0x10]_rax, mov_rdi_qword_ptr_[r15+0x10], mov_rsi_r14, call_0xa@@ 1e@@ f, mov_edx_eax, cmp_eax_-1, je_0xcd, mov_eax_edx, mov_ecx_edx, and_ecx_7, shr_eax_3, mov_esi_ecx, add_rax_r13, movzx_r8d_byte_ptr_[r@@ 12+r@@ si], movzx_esi_byte_ptr_[r@@ ax], and_esi@@ _r8d, movzx_esi_sil, sar_esi@@ _cl, test_esi_esi, jne_0xffffffffffffffc7, movzx_edi_byte_ptr_[r@@ bx], movzx_r9d_byte_ptr_[r@@ 15+8], mov_esi_edi, cmp_edi@@ _r9d, jae_0x@@ b5, mov_r10d@@ _edi, shr@@ _r10d@@ _3, movzx_r10d_byte_ptr_[r@@ bp+r@@ 10], mov_r11@@ _rsi, and_r11d@@ _7, mov_ecx_edi, and_r10@@ b@@ _byte_ptr_[r@@ 12+r@@ 11], and_ecx_7, movzx_r10d@@ _r10b, sar@@ _r10d@@ _cl, test_r10d_r10d, je_0x32, inc@@ _edi, cmp_r9d@@ _edi, jbe_0x@@ 7a, mov_esi_edi, mov_ecx_edi, shr_esi@@ _3, and_ecx_7, movzx_esi_byte_ptr_[r@@ bp+r@@ si], mov_r10d@@ _ecx, and@@ _sil@@ _byte_ptr_[r@@ 12+r@@ 10], movzx_esi_sil, sar_esi@@ _cl, test_esi_esi, jne_0xffffffffffffffdb, mov_esi_edi, mov_byte_ptr_[rbx@@ ]_sil, mov_r9d_dword_ptr_[rsp+0xc], mov_edi_edx, mov_rcx_qword_ptr_[r@@ 15+0x18], sub@@ _sil@@ _byte_ptr_[r@@ cx+r@@ 9], mov_byte_ptr_[r@@ cx+r@@ di@@ ]_sil, mov_rcx_rbx, mov_rsi_rbp, or_byte_ptr_[r@@ ax]@@ _r8b, mov_rdi_r15, mov_r8_r13, inc@@ _byte_ptr_[rbx], call_0xfffffffffffffee@@ 8, jmp_0xffffffffffffff2d, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x30, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rcx_[rip+0x@@ e0@@ 22], mov_edx_0x1@@ 73, lea_rsi_[rip+0xd@@ e7@@ e], lea_rdi_[rip+0x@@ de@@ 93], call_0xfffffffffffeda@@ ef, call_0xfffffffffffed@@ ee@@ a
endbr64, sub_rsp_8, mov_edi_0x28, call_0xfffffffffffedb@@ 33, test_rax_rax, je_0x2e, pxor_xmm0_xmm0, movups_xmmword_ptr_[r@@ ax+@@ 8]_xmm0, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+0x18]_0, mov_qword_ptr_[rax+0x10]_0, mov_qword_ptr_[rax+0x20]_0, add_rsp_8, ret, lea_rcx_[rip+0xd@@ fe@@ 6], mov_edx_0x1@@ b, lea_rsi_[rip+0xd@@ e@@ 12], lea_rdi_[rip+0x@@ cf@@ 41], call_0xfffffffffffeda@@ 8@@ 3
endbr64, mov_rdi_qword_ptr_[rdi+0x20], jmp_0xfffffffffff@@ ed@@ bf@@ 8
endbr64, mov_eax_dword_ptr_[rsi], mov_rdx_qword_ptr_[r@@ di+0x20], cmp_eax_1, je_0xf, mov_dword_ptr_[rdx]_eax, mov_eax_dword_ptr_[rsi+4], cmp_eax_1, je_5, mov_dword_ptr_[rdx+@@ 4]_eax, ret
endbr64, push_r15, mov_r15_rdi, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x88, movsd_qword_ptr_[rsp+0x@@ 50]_xmm0, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x78]_rax, xor_eax_eax, mov_rax_qword_ptr_[rdi+8], mov_r14_qword_ptr_[r@@ di+0x20], mov_esi_dword_ptr_[rax+8], cmp_esi@@ _0xff, ja_0x@@ fa@@ e, movsd@@ _xmm6@@ _qword_ptr_[rsp+0x50], ucomisd@@ _xmm6@@ _qword_ptr_[rip+0x@@ d@@ 7d@@ 5], jp@@ _0x12, jne_0x10, movsd@@ _xmm7@@ _qword_ptr_[rip+0x@@ df@@ 49], movsd_qword_ptr_[rsp+0x@@ 50@@ ]_xmm7, mov_byte_ptr_[r14+@@ 8@@ ]_sil, pxor_xmm1_xmm1, movsd_xmm3@@ _qword_ptr_[rip+0x@@ d@@ 2f@@ b], mov_rax_qword_ptr_[r15+8], movsd@@ _xmm6@@ _qword_ptr_[rip+0x@@ d@@ 2b@@ 7], mov_eax_dword_ptr_[rax+8], cvtsi2sd_xmm1_rax, mul@@ sd_xmm1@@ _qword_ptr_[rsp+0x50], movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm6@@ _xmm2, movapd_xmm0_xmm1, ja@@ _0xf@@ 1e, cvttsd2si@@ _edi@@ _xmm0, mov_byte_ptr_[r14+@@ 9@@ ]_dil, movzx_edi@@ _dil, call_0x9b@@ 6f, mov_qword_ptr_[r14+0x1@@ 0]_rax, mov_edi_0x18, call_0xfffffffffffed@@ 9e@@ 1, mov_qword_ptr_[r14+0x@@ 20]_rax, mov_qword_ptr_[rax]_0, mov_dword_ptr_[rsp+0x5@@ 8]@@ _0x13, mov_byte_ptr_[rsp+0x1@@ 8]_0, mov_rax_qword_ptr_[r14+0x20], mov_qword_ptr_[rsp+0x4@@ 0]_r15, mov_qword_ptr_[rax+8]_0, mov_r15_r14, mov_rax_qword_ptr_[r14+0x20], mov_qword_ptr_[rax+0x10]_0, mov_rax_qword_ptr_[rsp+0x40], movzx_esi_byte_ptr_[r@@ 15+@@ 9], mov_ebx_dword_ptr_[r@@ ax+0x10], test_ebx_ebx, jne_0xd@@ 99, lea_rax_[rsp+0x@@ 68], mov_qword_ptr_[rsp+8]_rax, lea_rax_[rsp+0x70], mov_dword_ptr_[rsp]@@ _0x63, mov_qword_ptr_[rsp+0x10]_rax, mov_r14@@ _qword_ptr_[rsp+0x40], mov_edi_dword_ptr_[r@@ 15], mov_rbx_qword_ptr_[r@@ 15+0x20], call_0xffffffffffffc@@ 18@@ 1, mov_qword_ptr_[rbx]_rax, movzx_esi_byte_ptr_[r@@ 15+@@ 9], mov_edi_dword_ptr_[r@@ 15+4], mov_rbx_qword_ptr_[r@@ 15+0x20], call_0xffffffffffffc@@ 16@@ c, mov_qword_ptr_[rbx+8]_rax, mov_r12_qword_ptr_[r@@ 14+0x20], mov_rdi_qword_ptr_[r12+0x10], call_0x9a@@ 5a, mov_rax_qword_ptr_[r14+8], mov_rdi_qword_ptr_[rax], call_qword_ptr_[rax+0x20], mov_rax_qword_ptr_[r14+8], mov_r11d_dword_ptr_[r@@ ax+8], test_r11d_r11d, je_0x1@@ 80, xor_ebx_ebx, jmp_0x31, test_al_al, jne_0x@@ ee, mov_rdi_qword_ptr_[r12+0x10], mov_edx_r13d, mov_esi_ebp, call_0x97@@ de, inc_ebx, mov_rax_qword_ptr_[r14+8], movzx_edx@@ _bl, cmp_edx_dword_ptr_[r@@ ax+8], jae_0x@@ 14d, mov_qword_ptr_[rsp+0x70]_0, mov_rdx_qword_ptr_[rsp+8], mov_rsi_qword_ptr_[rsp+0x10], mov_rdi_qword_ptr_[rax], call_qword_ptr_[rax+0x10], mov_rax_qword_ptr_[r12+0x20], mov_edx_dword_ptr_[rsp+0x@@ 68], mov_rsi_qword_ptr_[rsp+0x70], mov_rdi_qword_ptr_[rax], call_0xffffffffffffc@@ 11@@ d, movzx_esi_byte_ptr_[r@@ 12+@@ 9], xor_edx_edx, div_esi, mov_rax_qword_ptr_[r12+0x20], mov_rsi_qword_ptr_[rsp+0x70], mov_rdi_qword_ptr_[rax+8], mov_ebp_edx, mov_edx_dword_ptr_[rsp+0x@@ 68], call_0xffffffffffffc0@@ fa, movzx_esi_byte_ptr_[r@@ 12+@@ 9], xor_edx_edx, div_esi, mov_r13d_edx, cmp_bpl@@ _dl, je_0x45, mov_rax_qword_ptr_[r14+8], mov_edx_dword_ptr_[rsp+0x@@ 68], mov_rdi_qword_ptr_[rax], mov_rsi_qword_ptr_[rsp+0x70], call_qword_ptr_[rax+0x18], mov_rdi_qword_ptr_[r12+0x10], mov_edx_r13d, mov_esi_ebp, call_0x9c@@ d6, mov_r9d_dword_ptr_[r@@ 14+0x10], test_r9d_r9d, jne_0xffffffffffffff@@ 4a, test_al_al, je_0xffffffffffffff@@ 4a, jmp_0x4c, lea_edx_[r@@ bp+1], cmp_sil@@ _dl, mov_eax_0, cmovbe@@ _edx_eax, cmp_bpl@@ _dl, je_0x@@ 70f, movzx_r13d@@ _dl, jmp_0xffffffffffffffa2, mov_rax_qword_ptr_[rip+0x@@ 15@@ eb@@ 1], mov_edx_0x2@@ 1, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x@@ db@@ d5], call_0xfffffffffffedd@@ 25, mov_rax_qword_ptr_[r15+0x20], mov_rdi_qword_ptr_[rax], call_0xffffffffffffc@@ 25@@ 9, mov_rax_qword_ptr_[r15+0x20], mov_qword_ptr_[rax]_0, mov_rax_qword_ptr_[r15+0x20], mov_rdi_qword_ptr_[rax+8], call_0xffffffffffffc@@ 24@@ 1, mov_rax_qword_ptr_[r15+0x20], mov_qword_ptr_[rax+8]_0, mov_r8d_dword_ptr_[r@@ 14+0x10], test_r8d_r8d, jne_0x@@ 6d@@ 1, dec_dword_ptr_[r@@ sp], mov_eax_dword_ptr_[rsp], cmp_eax_-1, je_0x6@@ f1, movzx_esi_byte_ptr_[r@@ 15+@@ 9], jmp_0xfffffffffffffe@@ 47, mov_rax_qword_ptr_[rsp+0x40], mov_edi_dword_ptr_[r@@ ax+0x10], test_edi_edi, jne_0x@@ bd@@ 6, mov_rdi_qword_ptr_[r15+0x10], call_0x9a@@ 8c, mov_rax_qword_ptr_[rsp+0x40], mov_esi_dword_ptr_[r@@ ax+0x10], test_esi_esi, jne_0x@@ be@@ 5, movzx_edi_byte_ptr_[r@@ 15+@@ 9], mov_esi_1, shr@@ _dil@@ _3, movzx_edi@@ _dil, inc_rdi, call_0xfffffffffffedb@@ 82, movzx_edi_byte_ptr_[r@@ 15+8], mov_esi_1, shr@@ _dil@@ _3, movzx_edi@@ _dil, inc_rdi, mov_qword_ptr_[rsp]_rax, call_0xfffffffffffedb@@ 64, mov_rdi_qword_ptr_[r15+0x18], mov_qword_ptr_[rsp+8]_rax, call_0xfffffffffffed@@ 86@@ 6, movzx_edi_byte_ptr_[r@@ 15+@@ 9], mov_esi_1, mov_rbp_rdi, call_0xfffffffffffedb@@ 44, mov_qword_ptr_[r15+0x1@@ 8]_rax, test_rax_rax, je_0xc@@ bb, xor_ebx_ebx, mov_byte_ptr_[rsp+0x@@ 5d@@ ]_1, mov_byte_ptr_[rsp+0x@@ 28]_0, mov_r14d_ebx, test_bpl_bpl, je_0x2@@ 9d, mov_rdi_qword_ptr_[r15+0x10], movzx_esi@@ _r14b, movzx_ebp@@ _r14b, call_0x9@@ 9b@@ 4, test_al_al, je_0x2@@ 6d, mov_eax_r14d, mov_rdx_qword_ptr_[rsp], shr_al@@ _3, movzx_eax_al, movzx_eax_byte_ptr_[rdx+rax], mov_rsi_r14, lea_r12_[rip+0x@@ d@@ bb@@ c], and_esi@@ _7, mov_ecx_r14d, and_al@@ _byte_ptr_[r@@ 12+r@@ si], and_ecx_7, movzx_eax_al, mov_ebx_r14d, sar_eax@@ _cl, and_ebx@@ _7, test_eax_eax, jne_0x2@@ 32, movsd@@ _xmm5@@ _qword_ptr_[rsp+0x50], mov_eax_ebp, shr_eax_3, add_rdx_rax, comisd@@ _xmm5@@ _xmmword_ptr_[r@@ ip+0x@@ db@@ 96], mov_qword_ptr_[rsp+0x10]_rdx, mov_rdi_qword_ptr_[r15+0x10], movzx_r13d@@ _r14b, jbe_0x@@ 5f@@ 1, call_0x9b@@ d3, mov_edi_eax, call_0xa@@ 48@@ c, mov_qword_ptr_[rsp+0x20]_rax, movzx_eax_byte_ptr_[rsp+0x@@ 5d], pxor_xmm0_xmm0, cvtsi2sd_xmm0_eax, movsd_xmm3@@ _qword_ptr_[rip+0x@@ cf@@ 1d], movsd@@ _xmm6@@ _qword_ptr_[rip+0x@@ ce@@ dd], movsd_xmm1_qword_ptr_[rip+0x@@ c@@ ec@@ d], mulsd_xmm0_qword_ptr_[rip+0x@@ db@@ 4d], mov_rdx_qword_ptr_[rsp+0x10], movapd@@ _xmm2_xmm0, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm6@@ _xmm2, movapd@@ _xmm4@@ _xmm0, jbe_0x@@ 25, cvttsd2si_rax_xmm0, pxor_xmm2_xmm2, and@@ n@@ pd@@ _xmm3@@ _xmm4, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm1, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, subsd_xmm0_xmm1, mov_rcx_qword_ptr_[r@@ 15+0x18], mov_rdi_qword_ptr_[rsp+0x20], cvttsd2si_eax_xmm0, mov_esi_ebp, mov_byte_ptr_[r@@ cx+r@@ 13@@ ]_al, movzx_eax_byte_ptr_[r@@ 12+r@@ bx], lea_r13_[rsp+0x@@ 70], or_byte_ptr_[r@@ dx@@ ]_al, call_0xa@@ 47@@ 8, lea_rax_[rsp+0x@@ 68], mov_qword_ptr_[rsp+0x18]_rax, mov_byte_ptr_[rsp+0x@@ 38]@@ _r14b, mov_qword_ptr_[rsp+0x10]@@ _r13, movzx_r13d@@ _byte_ptr_[rsp+0x@@ 28], mov_rdi_qword_ptr_[rsp+0x20], call_0xa@@ 44@@ 4, test_al_al, jne_0xa@@ 82, mov_rdi_qword_ptr_[rsp+0x20], call_0xa@@ 48@@ 2, mov_rdi_qword_ptr_[r15+0x10], mov_esi_eax, call_0x9b@@ 07, mov_qword_ptr_[rsp+0x68]_rax, mov_rdi_qword_ptr_[r15+0x10], mov_rsi_qword_ptr_[rsp+0x18], call_0x9b@@ 0f, mov_ebp_eax, cmp_eax_-1, je_0xffffffffffffff@@ bc, mov_rdi_qword_ptr_[r15+0x10], mov_esi_ebp, call_0x98@@ 3d, test_al_al, je_0xffffffffffffffde, mov_ecx_ebp, and_ecx_7, mov_rbx_qword_ptr_[rsp], mov_r14d@@ _ebp, mov_eax_ecx, movzx_eax_byte_ptr_[r@@ 12+rax], shr@@ _r14d@@ _3, add_rbx@@ _r14, mov_byte_ptr_[rsp+0x@@ 30@@ ]_al, and_al@@ _byte_ptr_[rbx], movzx_eax_al, sar_eax@@ _cl, mov_qword_ptr_[rsp+0x2@@ 8]_rbx, test_eax_eax, jne_0xffffffffffffffb0, mov_r14_r15, mov_r15d_ebp, mov_rdi_qword_ptr_[r14+0x10], mov_esi_r15d, call_0x9a@@ 99, mov_qword_ptr_[rsp+0x70]_rax, lea_ebx_[r@@ 13+1], mov_rdi_qword_ptr_[r14+0x10], mov_rsi_qword_ptr_[rsp+0x10], call_0x9a@@ 9f, mov_ebp_eax, cmp_ebp_-1, je_0x3@@ 15, mov_rdi_qword_ptr_[r14+0x10], mov_esi_ebp, call_0x97@@ c9, test_al_al, je_0xffffffffffffffda, mov_rsi_qword_ptr_[rsp], mov_eax_ebp, mov_ecx_ebp, shr_eax_3, and_ecx_7, movzx_eax_byte_ptr_[r@@ si+rax], mov_edx_ecx, and_al@@ _byte_ptr_[r@@ 12@@ +rdx], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, je_0xffffffffffffff@@ b9, mov_rax_qword_ptr_[r@@ 14+0x18], movzx_ecx_byte_ptr_[r@@ ax+r@@ bp], movzx_eax@@ _bl, mov_edx_ecx, add_eax_ecx, movzx_ecx_byte_ptr_[r@@ 14+8], cmp_eax_ecx, jge_0x@@ 7e@@ 9, mov_rsi_qword_ptr_[rsp+8], sar_eax@@ _3, cdqe, add_edx@@ _ebx, movzx_eax_byte_ptr_[r@@ si+rax], mov_ecx_edx, and_edx_7, and_al@@ _byte_ptr_[r@@ 12@@ +rdx], and_ecx_7, movzx_eax_al, sar_eax@@ _cl, test_eax_eax, je_0xffffffffffffff@@ 78, cmp_bl@@ _r13b, jbe_0x@@ a@@ 49, mov_r13d_ebx, jmp_0xffffffffffffff4e, inc@@ _r14d, cmp_byte_ptr_[r15+@@ 9]@@ _r14b, ja_0xfffffffffffffd@@ 79, cmp_byte_ptr_[rsp+0x1@@ 8]_0, jne_0x7@@ 35, mov_r14_r15, mov_r15@@ _qword_ptr_[rsp+0x40], mov_ecx_dword_ptr_[r@@ 15+0x10], test_ecx_ecx, jne_0x@@ 8f@@ a, mov_byte_ptr_[rsp+0x@@ 70]_0, xor_ebx_ebx, lea_rbp_[rip+0x@@ d@@ 93@@ 6], cmp_byte_ptr_[r14+@@ 8]_0, lea_r12_[rsp+0x@@ 70], je_0x101, mov_qword_ptr_[rsp+0x10]@@ _r15, mov_r15_r14, mov_r14_qword_ptr_[r@@ sp], jmp_0x4b, mov_edx_eax, shr_dl@@ _3, movzx_edx_dl, movzx_edx_byte_ptr_[r@@ 14@@ +rdx], mov_esi_eax, and_esi@@ _7, and_dl@@ _byte_ptr_[r@@ bp+r@@ si], movzx_edx_dl, sar_edx@@ _cl, test_edx_edx, je_0x18, mov_rsi_qword_ptr_[rsp+8], mov_r8_r14, mov_rcx_r12, movzx_edx_al, mov_rdi_r15, call_0xfffffffffffff7@@ 30, inc_ebx, cmp_bl@@ _byte_ptr_[r@@ 15+8], jae_0x@@ a2, mov_rdi_qword_ptr_[r15+0x10], xor_edx_edx, movzx_esi@@ _bl, call_0x9@@ 906, mov_rdi_qword_ptr_[r15+0x10], mov_r13d_eax, mov_edx_1, movzx_esi@@ _bl, call_0x98@@ f2, mov_edx_r13d, shr_dl@@ _3, movzx_edx_dl, movzx_esi_byte_ptr_[r@@ 14@@ +rdx], mov_edi_r13d, and_edi@@ _7, mov_ecx_r13d, and@@ _sil@@ _byte_ptr_[r@@ bp+r@@ di], and_ecx_7, movzx_esi_sil, sar_esi@@ _cl, mov_ecx_eax, and_ecx_7, test_esi_esi, je_0xffffffffffffff@@ 71, mov_esi_eax, shr@@ _sil@@ _3, movzx_esi_sil, mov_edx_eax, movzx_eax_byte_ptr_[r@@ 14+r@@ si], and_edx_7, and_al@@ _byte_ptr_[r@@ bp@@ +rdx], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, jne_0xffffffffffffff@@ 81, mov_rsi_qword_ptr_[rsp+8], mov_r8_r14, mov_rcx_r12, movzx_edx@@ _r13b, mov_rdi_r15, inc_ebx, call_0xfffffffffffff6@@ 92, cmp_bl@@ _byte_ptr_[r@@ 15+8], jb_0xffffffffffffff@@ 6a, mov_r14_r15, mov_r15_qword_ptr_[rsp+0x10], xor_ebx_ebx, cmp_byte_ptr_[r14+@@ 9]_0, mov_r13_qword_ptr_[r@@ sp], mov_r12_qword_ptr_[rsp+8], mov_esi_1, lea_rbp_[rip+0x@@ d@@ 80@@ f], jne_0x1a, jmp_0x6@@ 2, inc_ebx, cmp_bl@@ _byte_ptr_[r@@ 14+@@ 9], jae_0x@@ 57, mov_rax_rbx, and_eax_7, movzx_esi_byte_ptr_[r@@ bp+rax], mov_eax_ebx, shr_al@@ _3, movzx_eax_al, add_rax_r13, movzx_edx_byte_ptr_[rax], mov_ecx_ebx, and_edx@@ _esi, movzx_edx_dl, and_ecx_7, sar_edx@@ _cl, test_edx_edx, jne_0xffffffffffffffd1, mov_rcx_qword_ptr_[r@@ 14+0x18], movzx_edx@@ _bl, mov_byte_ptr_[rcx@@ +rdx]_0, mov_r8_r13, movzx_edx@@ _bl, or_byte_ptr_[r@@ ax@@ ]_sil, lea_rcx_[rsp+0x@@ 70], mov_rsi_r12, mov_rdi_r14, inc_ebx, call_0xfffffffffffff60@@ 6, cmp_bl@@ _byte_ptr_[r@@ 14+@@ 9], jb_0xffffffffffffff@@ ad, mov_rdi_qword_ptr_[rsp+8], call_0xfffffffffffed@@ 3d@@ 6, mov_rdi_qword_ptr_[rsp], call_0xfffffffffffed@@ 3c@@ d, mov_rdi_qword_ptr_[r14+0x10], call_0x90@@ 94, mov_qword_ptr_[r14+0x1@@ 0]_0, mov_edi_0x18, call_0xfffffffffffed@@ 28@@ 2, mov_r12_rax, mov_eax_dword_ptr_[r15], mov_edi_0x18, mov_dword_ptr_[r12]_eax, call_0xfffffffffffed@@ 26@@ e, mov_rdx_qword_ptr_[r14+0x18], mov_qword_ptr_[rax+8]_rdx, mov_qword_ptr_[r14+0x1@@ 8]_0, mov_rdx_qword_ptr_[r@@ 14+0x20], mov_qword_ptr_[rax+0x10]_rdx, mov_qword_ptr_[r14+0x@@ 20]_0, movzx_edx_byte_ptr_[r@@ 14+@@ 9], mov_byte_ptr_[rax+@@ 1]_dl, movzx_edx_byte_ptr_[r@@ 14+8], mov_qword_ptr_[r12+0x10]_rax, mov_byte_ptr_[rax]_dl, movzx_eax_byte_ptr_[r@@ 14+8], mov_dword_ptr_[r12+@@ 4]_eax, mov_eax_dword_ptr_[r@@ 15+0x10], test_eax_eax, jne_0x7@@ 81, mov_rax_qword_ptr_[rsp+0x78], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ 7d@@ e, add_rsp_0x88, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_ebp@@ _r15d, mov_r15_r14, cmp_bl@@ _r13b, ja_0x5@@ a7, xor_ebx_ebx, mov_r13d_0xffffffff, mov_rdi_qword_ptr_[r15+0x10], mov_esi_ebp, call_0x97@@ 43, mov_qword_ptr_[rsp+0x70]_rax, mov_rdi_qword_ptr_[r15+0x10], mov_rsi_qword_ptr_[rsp+0x10], call_0x97@@ 47, mov_r14d_eax, cmp_r14d@@ _-1, je_0x5@@ 3b, mov_rdi_qword_ptr_[r15+0x10], mov_esi_r14d, call_0x94@@ 6e, test_al_al, je_0xffffffffffffffd7, mov_rsi_qword_ptr_[rsp], mov_eax_r14d, mov_ecx_r14d, shr_eax_3, and_ecx_7, movzx_eax_byte_ptr_[r@@ si+rax], mov_edx_ecx, and_al@@ _byte_ptr_[r@@ 12@@ +rdx], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, je_0xffffffffffffff@@ b4, mov_rax_qword_ptr_[r15+0x18], movzx_esi@@ _bl, movzx_edx_byte_ptr_[r@@ ax+r@@ 14], mov_ecx_edx, add_ecx@@ _ebx, add_edx@@ _esi, and_ecx_7, movzx_eax_byte_ptr_[r@@ 12@@ +rcx], sar_edx@@ _3, mov_rcx_qword_ptr_[rsp+8], movsxd_rdx_edx, or_byte_ptr_[r@@ cx@@ +rdx@@ ]_al, mov_rax_qword_ptr_[r15+0x18], movzx_edx_byte_ptr_[r@@ ax+r@@ 14], mov_eax_edx, add_esi@@ _edx, movzx_edx_byte_ptr_[rsp+0x@@ 5d], add_eax_ebx, mov_ecx_edx, cmp_esi_edx, cmovg@@ _ecx_eax, mov_byte_ptr_[rsp+0x@@ 5d@@ ]_cl, jmp_0xffffffffffffff6b, mov_r10d_dword_ptr_[r@@ 14+0x10], test_r10d_r10d, jne_0x69, mov_rax_qword_ptr_[r14+8], mov_edx_dword_ptr_[rsp+0x@@ 68], mov_rsi_qword_ptr_[rsp+0x70], mov_rdi_qword_ptr_[rax], call_qword_ptr_[rax+0x18], jmp_0xfffffffffffff90@@ 4, mov_rax_qword_ptr_[rip+0x@@ 15@@ 78@@ 9], mov_ecx_dword_ptr_[rsp], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0xd@@ 4d@@ c], mov_esi_1, xor_eax_eax, call_0xfffffffffffec@@ fe@@ d, dec_dword_ptr_[r@@ sp], mov_eax_dword_ptr_[rsp], cmp_eax_-1, jne_0xfffffffffffff@@ 9@@ 1b, mov_rdi_qword_ptr_[r15+0x10], xor_r12d_r12d, call_0x8@@ ec@@ 2, jmp_0xfffffffffffffe@@ 9e, mov_rax_qword_ptr_[rip+0x@@ 15@@ 74@@ 1], movzx_ecx@@ _bl, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0xd@@ 3f@@ c], mov_esi_1, xor_eax_eax, call_0xfffffffffffec@@ fa@@ 5, jmp_0xffffffffffffff79, call_0x9@@ 5e8, mov_edi_eax, call_0x9@@ ea@@ 1, mov_qword_ptr_[rsp+0x38]_rax, movzx_eax_byte_ptr_[rsp+0x@@ 5d], pxor_xmm0_xmm0, cvtsi2sd_xmm0_eax, movsd_xmm3@@ _qword_ptr_[rip+0x@@ c@@ 93@@ 2], movsd@@ _xmm7@@ _qword_ptr_[rip+0x@@ c@@ 8f@@ 2], movsd_xmm1_qword_ptr_[rip+0x@@ c@@ 8e@@ 2], mulsd_xmm0_qword_ptr_[rip+0x@@ d@@ 56@@ 2], mov_rdx_qword_ptr_[rsp+0x10], movapd@@ _xmm2_xmm0, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm7@@ _xmm2, movapd@@ _xmm4@@ _xmm0, jbe_0x@@ 25, cvttsd2si_rax_xmm0, pxor_xmm2_xmm2, and@@ n@@ pd@@ _xmm3@@ _xmm4, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm1, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, subsd_xmm0_xmm1, mov_rcx_qword_ptr_[r@@ 15+0x18], mov_rdi_qword_ptr_[rsp+0x38], cvttsd2si_eax_xmm0, mov_esi_ebp, mov_byte_ptr_[r@@ cx+r@@ 13@@ ]_al, movzx_eax_byte_ptr_[r@@ 12+r@@ bx], or_byte_ptr_[r@@ dx@@ ]_al, call_0x9e@@ 92, lea_rax_[rsp+0x@@ 68], mov_byte_ptr_[rsp+0x1@@ 0]_0, mov_qword_ptr_[rsp+0x30]_0, mov_qword_ptr_[rsp+0x20]_rax, mov_byte_ptr_[rsp+0x@@ 5f@@ ]@@ _r14b, mov_rdi_qword_ptr_[rsp+0x38], call_0x9e@@ 5b, test_al_al, jne_0x@@ 4c@@ 5, mov_rdi_qword_ptr_[rsp+0x38], call_0x9e@@ 99, mov_rdi_qword_ptr_[r15+0x10], mov_esi_eax, call_0x@@ 95@@ 1e, mov_qword_ptr_[rsp+0x68]_rax, lea_rax_[rsp+0x70], mov_qword_ptr_[rsp+0x18]_rax, mov_rdi_qword_ptr_[r15+0x10], mov_rsi_qword_ptr_[rsp+0x20], call_0x@@ 95@@ 17, mov_ebp_eax, cmp_eax_-1, je_0xffffffffffffff@@ ad, mov_rdi_qword_ptr_[r15+0x10], mov_esi_ebp, call_0x9@@ 24@@ 5, test_al_al, je_0xffffffffffffffde, mov_ecx_ebp, and_ecx_7, mov_rbx_qword_ptr_[rsp], mov_r13d_ebp, mov_eax_ecx, movzx_eax_byte_ptr_[r@@ 12+rax], shr@@ _r13d@@ _3, add_rbx@@ _r13, mov_byte_ptr_[rsp+0x@@ 5e@@ ]_al, and_al@@ _byte_ptr_[rbx], movzx_eax_al, sar_eax@@ _cl, mov_qword_ptr_[rsp+0x4@@ 8]_rbx, test_eax_eax, jne_0xffffffffffffffb0, mov_r13_r15, xor_r14d_r14d, mov_r15d_ebp, cmp_byte_ptr_[rsp+0x1@@ 0]@@ _r14b, jbe_0x@@ f9, mov_rbx_qword_ptr_[rsp+0x30], movzx_eax@@ _r14b, movzx_ebx_byte_ptr_[r@@ bx+rax], inc@@ _r14d, mov_rdi_qword_ptr_[r13+0x10], mov_esi_r15d, call_0x94@@ 83, mov_qword_ptr_[rsp+0x70]_rax, mov_rdi_qword_ptr_[r13+0x10], mov_rsi_qword_ptr_[rsp+0x18], call_0x94@@ 87, mov_ebp_eax, cmp_ebp_-1, je_0xcd, mov_rdi_qword_ptr_[r13+0x10], mov_esi_ebp, call_0x9@@ 1b1, test_al_al, je_0xffffffffffffffda, mov_rsi_qword_ptr_[rsp], mov_eax_ebp, mov_ecx_ebp, shr_eax_3, and_ecx_7, movzx_eax_byte_ptr_[r@@ si+rax], mov_edx_ecx, and_al@@ _byte_ptr_[r@@ 12@@ +rdx], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, je_0xffffffffffffff@@ b9, mov_rax_qword_ptr_[r@@ 13+0x18], movzx_ecx_byte_ptr_[r@@ ax+r@@ bp], movzx_eax@@ _bl, mov_edx_ecx, add_eax_ecx, movzx_ecx_byte_ptr_[r@@ 13+8], cmp_eax_ecx, jge_0x@@ 16@@ 1, mov_rsi_qword_ptr_[rsp+8], sar_eax@@ _3, cdqe, add_edx@@ _ebx, movzx_eax_byte_ptr_[r@@ si+rax], mov_ecx_edx, and_edx_7, and_al@@ _byte_ptr_[r@@ 12@@ +rdx], and_ecx_7, movzx_eax_al, sar_eax@@ _cl, test_eax_eax, je_0xffffffffffffff@@ 78, cmp_bl@@ _byte_ptr_[rsp+0x@@ 28], jbe_0xffffffffffffff@@ 39, cmp_byte_ptr_[rsp+0x1@@ 0]_0, je_0x1@@ d3, movzx_eax_byte_ptr_[r@@ sp+0x10], mov_rcx_qword_ptr_[rsp+0x30], mov_rsi_rax, inc@@ _esi, mov_byte_ptr_[rsp+0x10@@ ]_sil, mov_byte_ptr_[rcx@@ +rax@@ ]_bl, mov_byte_ptr_[rsp+0x@@ 28@@ ]_bl, cmp_byte_ptr_[rsp+0x1@@ 0]@@ _r14b, ja_0xffffffffffffff@@ 13, movzx_eax_byte_ptr_[rsp+0x@@ 28], mov_r14d@@ _0xffffffff, lea_ebx@@ _[rax+1], jmp_0xffffffffffffff0f, dec@@ _r14d, mov_ebp@@ _r15d, mov_r15_r13, cmp_r14b@@ _byte_ptr_[r@@ sp+0x10], jae_0x@@ 22, dec@@ _byte_ptr_[r@@ sp+0x10], mov_rsi_qword_ptr_[rsp+0x30], movzx_r14d@@ _r14b, movzx_eax_byte_ptr_[r@@ sp+0x10], movzx_eax_byte_ptr_[r@@ si+rax], mov_byte_ptr_[r@@ si+r@@ 14@@ ]_al, mov_rdi_qword_ptr_[r15+0x10], mov_esi_ebp, call_0x9@@ 35@@ a, mov_qword_ptr_[rsp+0x70]_rax, mov_r14_qword_ptr_[rsp+0x18], mov_rdi_qword_ptr_[r15+0x10], mov_rsi_r14, call_0x9@@ 36@@ 1, mov_r13d_eax, cmp_r13d_-1, je_0x1@@ 95, mov_rdi_qword_ptr_[r15+0x10], mov_esi_r13d, call_0x90@@ 88, test_al_al, je_0xffffffffffffffd9, mov_rsi_qword_ptr_[rsp], mov_eax_r13d, mov_ecx_r13d, shr_eax_3, and_ecx_7, movzx_eax_byte_ptr_[r@@ si+rax], mov_edx_ecx, and_al@@ _byte_ptr_[r@@ 12@@ +rdx], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, je_0xffffffffffffff@@ b6, mov_rax_qword_ptr_[r15+0x18], movzx_esi@@ _bl, movzx_edx_byte_ptr_[r@@ ax+r@@ 13], mov_ecx_edx, add_ecx@@ _ebx, add_edx@@ _esi, and_ecx_7, movzx_eax_byte_ptr_[r@@ 12@@ +rcx], sar_edx@@ _3, mov_rcx_qword_ptr_[rsp+8], movsxd_rdx_edx, or_byte_ptr_[r@@ cx@@ +rdx@@ ]_al, mov_rax_qword_ptr_[r15+0x18], movzx_edx_byte_ptr_[r@@ ax+r@@ 13], mov_eax_edx, add_esi@@ _edx, movzx_edx_byte_ptr_[rsp+0x@@ 5d], add_eax_ebx, mov_ecx_edx, cmp_esi_edx, cmovg@@ _ecx_eax, mov_byte_ptr_[rsp+0x@@ 5d@@ ]_cl, jmp_0xffffffffffffff6d, mov_rdi_qword_ptr_[rsp+0x38], mov_r15_r13, call_0x9c@@ d8, mov_rdi_qword_ptr_[rsp+0x30], call_0xfffffffffffec@@ e@@ 5e, mov_rax_qword_ptr_[rsp+0x40], mov_edx_dword_ptr_[rax+0x10], test_edx_edx, jne_0x68, mov_rdi_qword_ptr_[rsp+8], call_0xfffffffffffec@@ e@@ 43, mov_rdi_qword_ptr_[rsp], call_0xfffffffffffec@@ e@@ 3a, dec@@ _dword_ptr_[rsp+0x@@ 58], mov_byte_ptr_[rsp+0x1@@ 8]_1, mov_eax_dword_ptr_[rsp+0x58], cmp_eax_-1, jne_0xfffffffffffff@@ 35@@ 5, mov_rdi_qword_ptr_[r15+0x10], call_0x8a@@ eb, mov_qword_ptr_[r15+0x1@@ 0]_0, jmp_0x2@@ 32, mov_rdi_qword_ptr_[rsp+0x20], mov_r15_r14, call_0x9c@@ 68, mov_rax_qword_ptr_[rsp+0x40], mov_edx_dword_ptr_[rax+0x10], test_edx_edx, je_0xffffffffffffff@@ a1, mov_rax_qword_ptr_[rip+0x@@ 15@@ 3@@ 48], mov_ecx_dword_ptr_[rsp+0x@@ 58], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0xd@@ 12@@ 2], mov_esi_1, xor_eax_eax, call_0xfffffffffffecb@@ ab, jmp_0xffffffffffffff7e, mov_rdi_qword_ptr_[rsp+0x30], mov_esi_0x2000, call_0xfffffffffffed@@ 1c@@ 6, mov_qword_ptr_[rsp+0x30]_rax, jmp_0xfffffffffffffe@@ 1f, mov_rcx_qword_ptr_[r@@ 15+0x18], mov_eax_ebp, mov_byte_ptr_[rcx@@ +rax@@ ]_bl, mov_rax_qword_ptr_[rsp+0x28], movzx_ebx@@ _byte_ptr_[rsp+0x@@ 30], mov_rdi_qword_ptr_[rsp+0x20], or_byte_ptr_[r@@ ax@@ ]_bl, mov_esi_ebp, call_0x9a@@ f4, jmp_0xfffffffffffff@@ 6c@@ 7, mov_r13d_ebx, jmp_0xfffffffffffffa@@ 64, movzx_eax_byte_ptr_[rsp+0x@@ 28], mov_rcx_qword_ptr_[r@@ 15+0x18], cmp_al@@ _bl, cmovb@@ _eax@@ _ebx, mov_rdi_qword_ptr_[rsp+0x38], mov_byte_ptr_[rsp+0x@@ 28@@ ]_al, mov_eax_ebp, mov_byte_ptr_[rcx@@ +rax@@ ]_bl, mov_rax_qword_ptr_[rsp+0x48], movzx_ebx@@ _byte_ptr_[rsp+0x@@ 5e], mov_esi_ebp, or_byte_ptr_[r@@ ax@@ ]_bl, call_0x9a@@ a6, jmp_0xfffffffffffffc@@ 71, mov_rax_qword_ptr_[rip+0x@@ 15@@ 28@@ 9], movzx_ecx_byte_ptr_[r@@ 15+8], mov_rdi_qword_ptr_[rax], movzx_r8d@@ _sil, lea_rdx_[rip+0xc@@ 6c@@ e], mov_esi_1, xor_eax_eax, call_0xfffffffffffeca@@ e7, movzx_esi_byte_ptr_[r@@ 15+@@ 9], jmp_0xfffffffffffff@@ 24@@ 2, mov_rax_qword_ptr_[rip+0x@@ 15@@ 25@@ 1], mov_edx_0x1@@ 7, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0xc@@ 37@@ b], call_0xfffffffffffed0@@ c5, jmp_0xfffffffffffff4@@ 10, mov_rbx_qword_ptr_[rip+0x@@ 15@@ 22@@ 9], mov_edx_0x1@@ 9, mov_rcx_qword_ptr_[rbx], mov_esi_1, lea_rdi_[rip+0xc@@ ef@@ 3], call_0xfffffffffffed0@@ 9d, mov_rcx_qword_ptr_[rbx], mov_edx_0x1@@ f, mov_esi_1, lea_rdi_[rip+0x@@ cf@@ 9c], call_0xfffffffffffed0@@ 84, jmp_0xfffffffffffff@@ 3e8, mov_rax_qword_ptr_[rip+0x@@ 15@@ 1e@@ 1], mov_edx_0x2@@ 3, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x@@ cf@@ 8d], call_0xfffffffffffed0@@ 55, jmp_0xfffffffffffff@@ 6e@@ c, mov_rdi_qword_ptr_[rsp+0x20], mov_byte_ptr_[rsp+0x@@ 28]@@ _r13b, movzx_r14d@@ _byte_ptr_[rsp+0x@@ 38], call_0x9a@@ bb, inc@@ _r14d, cmp_byte_ptr_[r15+@@ 9]@@ _r14b, jbe_0xfffffffffffff@@ 6b@@ 7, mov_byte_ptr_[rsp+0x1@@ 8]_0, jmp_0xfffffffffffff4@@ 14, mov_rdi_qword_ptr_[rsp+0x38], movzx_r14d@@ _byte_ptr_[rsp+0x@@ 5f], call_0x9a@@ 94, mov_rdi_qword_ptr_[rsp+0x30], call_0xfffffffffffecc@@ 1a, jmp_0xffffffffffffffcf, cvttsd2si@@ _rax@@ _xmm1, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ c@@ 36@@ 2], and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, jmp_0xfffffffffffff0@@ bd, mov_ebp_dword_ptr_[r@@ di+0x10], test_ebp_ebp, jne_0x2f, xor_r12d_r12d, jmp_0xfffffffffffff88@@ a, mov_rax_qword_ptr_[rip+0x@@ 15@@ 13@@ 5], mov_edx_0x3@@ 5, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0xc@@ 2c@@ 9], call_0xfffffffffffec@@ fa@@ 9, jmp_0xfffffffffffff86@@ 5, mov_rax_qword_ptr_[rip+0x@@ 15@@ 110], mov_edx_0x3@@ 3, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x@@ cd@@ fc], call_0xfffffffffffec@@ f@@ 84, jmp_0xffffffffffffffb3, lea_rcx_[rip+0xc@@ f2@@ e], mov_edx_0x@@ 93, lea_rsi_[rip+0x@@ cd@@ 72], lea_rdi_[rip+0xc@@ dd@@ 3], call_0xfffffffffffec@@ 9e@@ 3, mov_r13d_0xffffffff, jmp_0xfffffffffffff@@ 50@@ 8, call_0xfffffffffffec@@ dd@@ 3
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0x28, mov_rbx_qword_ptr_[rdi+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x10]_0, mov_byte_ptr_[rsp+0x@@ b@@ ]_2, call_0xffffffffffff9d@@ 9d, mov_rcx_rbp, lea_rdi_[rsp+0x@@ b], mov_edx_1, mov_esi_1, call_0xfffffffffffec@@ ef@@ 6, mov_rax_qword_ptr_[rbx+0x10], lea_r12_[rsp+0x@@ c], mov_rdi_qword_ptr_[rax], lea_r13_[rsp+0x10], mov_rdx_r12, mov_rsi_r13, call_0xffffffffffffb@@ 28@@ a, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r12, call_0xfffffffffffec@@ ec@@ 5, mov_esi_dword_ptr_[rsp+0xc], mov_rdi_qword_ptr_[rsp+0x10], mov_rcx_rbp, mov_edx_1, call_0xfffffffffffec@@ ea@@ f, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffeca@@ b5, mov_rax_qword_ptr_[rbx+0x10], mov_rdx_r12, mov_rdi_qword_ptr_[rax+8], mov_rsi_r13, call_0xffffffffffffb@@ 24@@ 2, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r12, call_0xfffffffffffec@@ e@@ 7d, mov_esi_dword_ptr_[rsp+0xc], mov_rdi_qword_ptr_[rsp+0x10], mov_rcx_rbp, mov_edx_1, call_0xfffffffffffec@@ e@@ 67, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffeca@@ 6d, lea_rdi_[r@@ bx+1], mov_rcx_rbp, mov_edx_1, mov_esi_1, call_0xfffffffffffec@@ e@@ 47, mov_rcx_rbp, mov_edx_1, mov_esi_1, mov_rdi_rbx, call_0xfffffffffffec@@ e@@ 32, movzx_esi_byte_ptr_[r@@ bx+1], mov_rdi_qword_ptr_[rbx+8], mov_rcx_rbp, mov_edx_1, call_0xfffffffffffec@@ e@@ 1d, test_rax_rax, je_0x25, mov_eax_1, mov_rbx_qword_ptr_[rsp+0x18], xor_rbx_qword_ptr_fs:[0x28], jne_0x4c, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_rdi_rbp, call_0xfffffffffffeca@@ 4d, test_eax_eax, je_0xffffffffffffffd3, call_0xfffffffffffecc@@ 24, mov_edi_dword_ptr_[rax], call_0xfffffffffffecb@@ 1d, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 14@@ f4@@ 6], lea_rdx_[rip+0x@@ c0@@ 57], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffec@@ 7a@@ d, xor_eax_eax, jmp_0xffffffffffffffa8, call_0xfffffffffffecc@@ 3@@ 4
endbr64, push_r15, mov_r15_rdi, mov_edi_0x18, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rsi, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xfffffffffffec@@ 85@@ 3, mov_qword_ptr_[rbx+0x10]_rax, mov_edx_1, lea_rdi_[r@@ sp+@@ 3], mov_rcx_r15, mov_esi_1, mov_r13_rax, call_0xfffffffffffecb@@ 75, movzx_eax_byte_ptr_[r@@ sp+@@ 3], mov_rbx_rax, lea_rdi_[rax@@ *8+8], call_0xfffffffffffec@@ 8@@ 20, movzx_edx@@ _bl, mov_qword_ptr_[r13+0x1@@ 0]_rax, mov_qword_ptr_[rax+rdx*@@ 8]_0, test_bl_bl, je_0x69, xor_ebx_ebx, lea_r14_[r@@ sp+4], mov_rcx_r15, mov_edx_1, mov_esi_4, mov_rdi_r14, call_0xfffffffffffecb@@ 30, mov_r12d_dword_ptr_[r@@ sp+4], mov_rdi_r12, call_0xfffffffffffec@@ 7e@@ 3, mov_rdi_rax, mov_rcx_r15, mov_edx_1, mov_rsi_r12, mov_rbp_rax, call_0xfffffffffffec@@ b0@@ d, mov_esi_dword_ptr_[rsp+4], mov_rdi_rbp, call_0xffffffffffffb@@ 1d@@ 1, mov_rcx_qword_ptr_[r@@ 13+0x10], movzx_edx@@ _bl, mov_qword_ptr_[rcx@@ +rdx*@@ 8]_rax, mov_rdi_rbp, inc_ebx, call_0xfffffffffffec@@ 8d@@ c, cmp_byte_ptr_[r@@ sp+@@ 3@@ ]_bl, ja_0xffffffffffffff@@ a3, lea_rdi_[r@@ 13+1], mov_rcx_r15, mov_edx_1, mov_esi_1, call_0xfffffffffffeca@@ d0, mov_rcx_r15, mov_edx_1, mov_esi_1, mov_rdi_r13, call_0xfffffffffffeca@@ bb, movzx_ebp_byte_ptr_[r@@ 13+1], mov_rdi_rbp, call_0xfffffffffffec@@ 76@@ e, mov_rdi_rax, mov_rcx_r15, mov_edx_1, mov_rsi_rbp, mov_qword_ptr_[r13+8]_rax, call_0xfffffffffffeca@@ 97, test_rax_rax, je_0x27, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x51, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_r15, call_0xfffffffffffec@@ 8a@@ 5, test_eax_eax, je_0xffffffffffffffd1, call_0xfffffffffffeca@@ 7c, mov_edi_dword_ptr_[rax], call_0xfffffffffffec@@ 97@@ 5, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 14@@ d@@ 9e], lea_rdx_[rip+0xb@@ ea@@ f], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffec@@ 60@@ 5, jmp_0xffffffffffffffa3, call_0xfffffffffffeca@@ 8@@ e
endbr64, push_r13, mov_r13d_edx, push_r12, mov_r12_rsi, push_rbp, push_rbx, sub_rsp_8, mov_rbx_qword_ptr_[rdi+0x10], mov_rax_qword_ptr_[rbx+0x10], mov_rdi_qword_ptr_[rax], call_0xffffffffffffaf@@ 21, movzx_ecx_byte_ptr_[r@@ bx+1], xor_edx_edx, div_ecx, mov_rax_qword_ptr_[rbx+0x10], mov_rdi_qword_ptr_[rax+8], mov_rsi_r12, mov_ebp_edx, mov_edx_r13d, call_0xffffffffffffa@@ f0@@ 4, movzx_ecx_byte_ptr_[r@@ bx+1], xor_edx_edx, div_ecx, movzx_eax@@ _dl, cmp_dl@@ _bpl, jne_0x12, inc_edx, movzx_eax@@ _dl, cmp_cl@@ _dl, mov_edx_0, cmovb@@ _rax_rdx, mov_rdx_qword_ptr_[rbx+8], movzx_eax_byte_ptr_[rdx+rax], add_al@@ _byte_ptr_[r@@ dx+r@@ bp], add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret
endbr64, push_r12, mov_r12_rdi, push_rbp, sub_rsp_8, mov_rbp_qword_ptr_[r@@ di+0x10], mov_rdi_qword_ptr_[rbp+8], call_0xfffffffffffec@@ 77@@ a, mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax], call_0xffffffffffffb0@@ 9e, mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax+8], call_0xffffffffffffb0@@ 91, mov_rdi_qword_ptr_[rbp+0x10], call_0xfffffffffffec@@ 7@@ 58, mov_rdi_rbp, call_0xfffffffffffec@@ 7@@ 50, add_rsp_8, pop_rbp, mov_rdi_r12, pop_r12, jmp_0xfffffffffff@@ ec@@ 74@@ 1
endbr64, push_r12, push_rbp, push_rbx, mov_rbx_rsi, add_rbx_4, mov_rbp_qword_ptr_[r@@ di+0x10], mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax], call_0xffffffffffffb@@ 15@@ 6, mov_dword_ptr_[rbx@@ -4]_eax, mov_r12d_eax, mov_rsi_rbx, mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax], call_0xffffffffffffb0@@ 61, mov_edi_r12d, call_0xffffffffffffb0@@ 89, mov_eax_eax, add_rbx_rax, mov_rax_qword_ptr_[rbp+0x10], add_rbx_4, mov_rdi_qword_ptr_[rax+8], call_0xffffffffffffb@@ 12@@ 3, mov_dword_ptr_[rbx@@ -4]_eax, mov_r12d_eax, mov_rsi_rbx, mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax+8], call_0xffffffffffffb0@@ 2d, mov_edi_r12d, call_0xffffffffffffb0@@ 55, mov_eax_eax, add_rbx_rax, movzx_eax_byte_ptr_[r@@ bp+1], lea_rdx_[r@@ bx+1], mov_byte_ptr_[rbx]_al, mov_rcx_qword_ptr_[r@@ bp+8], cmp_eax_0x20, jae_0x@@ 2a, test_al_0x10, jne_0x@@ d6, test_al_8, jne_0x@@ ee, test_al_4, jne_0x10@@ 6, test_eax_eax, jne_0x96, pop_rbx, pop_rbp, pop_r12, ret, mov_rsi_qword_ptr_[rcx], lea_rdi_[r@@ cx@@ +rax+8], mov_qword_ptr_[rbx+@@ 1]@@ _rsi, lea_rsi_[rdx@@ +rax+8], add_rbx@@ _9, mov_r8_qword_ptr_[r@@ di-0x@@ 28], and@@ _rbx@@ _0xfffffffffffffff8, mov_qword_ptr_[r@@ si-0x@@ 2@@ 8]_r8, sub_rdx_rbx, add_eax_edx, mov_r8_qword_ptr_[r@@ di-0x@@ 20], and_eax_0xffffff@@ e0, mov_qword_ptr_[r@@ si-0x@@ 20]@@ _r8, sub_rcx_rdx, mov_r8_qword_ptr_[r@@ di@@ -0x18], mov_qword_ptr_[r@@ si-0x@@ 1@@ 8]_r8, mov_rdi_qword_ptr_[r@@ di-0x@@ 10], mov_qword_ptr_[r@@ si-0x@@ 1@@ 0]_rdi, cmp_eax_0x20, jb_0xffffffffffffff@@ b1, and_eax_0xffffff@@ e0, xor_esi_esi, mov_edx_esi, mov_r10_qword_ptr_[r@@ cx+rdx], mov_r9_qword_ptr_[r@@ cx@@ +rdx@@ +8], mov_r8_qword_ptr_[r@@ cx@@ +rdx@@ +0x10], mov_rdi_qword_ptr_[r@@ cx@@ +rdx@@ +0x18], add_esi@@ _0x20, mov_qword_ptr_[rbx@@ +rdx]@@ _r10, mov_qword_ptr_[rbx@@ +rdx+@@ 8]_r9, mov_qword_ptr_[rbx@@ +rdx+0x1@@ 0]_r8, mov_qword_ptr_[rbx@@ +rdx+0x1@@ 8]_rdi, cmp_esi_eax, jb_0xffffffffffffff@@ d3, pop_rbx, pop_rbp, pop_r12, ret, movzx_esi_byte_ptr_[r@@ cx], mov_byte_ptr_[rbx+@@ 1]_sil, test_al_2, je_0xffffffffffffff@@ 67, movzx_ecx_word_ptr_[r@@ cx@@ +rax@@ -2], mov_word_ptr_[r@@ dx@@ +rax@@ -@@ 2]_cx, jmp_0xffffffffffffff57, movdqu_xmm0_xmmword_ptr_[r@@ cx], movups_xmmword_ptr_[r@@ bx+@@ 1@@ ]_xmm0, movdqu_xmm1_xmmword_ptr_[r@@ cx@@ +rax@@ -0x10], movups_xmmword_ptr_[r@@ dx@@ +rax-0x@@ 10]_xmm1, jmp_0xffffffffffffff35, mov_rsi_qword_ptr_[rcx], mov_qword_ptr_[rbx+@@ 1]@@ _rsi, mov_rcx_qword_ptr_[r@@ cx@@ +rax@@ -8], mov_qword_ptr_[rdx@@ +rax@@ -@@ 8]_rcx, jmp_0xffffffffffffff17, mov_esi_dword_ptr_[r@@ cx], mov_dword_ptr_[rbx+@@ 1]@@ _esi, mov_ecx_dword_ptr_[r@@ cx@@ +rax@@ -4], mov_dword_ptr_[rdx@@ +rax@@ -@@ 4]_ecx, jmp_0xfffffffffffffef@@ b
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_rbp_qword_ptr_[r@@ di+0x10], mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax], call_0xffffffffffffaf@@ 97, mov_r13d_eax, mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax+8], call_0xffffffffffffaf@@ 87, mov_r12d_eax, mov_edi_r13d, call_0xffffffffffffa@@ ec@@ c, mov_edi_r12d, mov_ebx_eax, call_0xffffffffffffa@@ ec@@ 2, mov_r8d_eax, movzx_eax_byte_ptr_[r@@ bp+1], add_rsp_8, lea_eax_[r@@ bx+r@@ ax+0x@@ d], pop_rbx, pop_rbp, pop_r12, add_eax@@ _r8d, pop_r13, ret
endbr64, push_r15, mov_r15d_edx, push_r14, push_r13, mov_r13_rsi, push_r12, lea_r12_[r@@ di+4], push_rbp, push_rbx, sub_rsp_0x18, mov_esi_dword_ptr_[r@@ di], mov_edi_esi, mov_dword_ptr_[rsp+8]_esi, call_0xffffffffffffae@@ 7c, mov_ebp_eax, add_rbp@@ _r12, mov_r8d_dword_ptr_[r@@ bp], add_rbp@@ _4, mov_edi_r8d, mov_dword_ptr_[rsp+0xc]_r8d, call_0xffffffffffffae@@ 62, mov_ebx_eax, add_rbx@@ _rbp, movzx_r14d@@ _byte_ptr_[rbx], mov_esi_dword_ptr_[rsp+8], lea_r9_[r@@ bx+1], mov_rdi_r12, mov_ecx_r15d, mov_rdx_r13, mov_qword_ptr_[rsp]_r9, call_0xffffffffffffae@@ 6f, movzx_r10d@@ _r14b, xor_edx_edx, div@@ _r10d, mov_r8d_dword_ptr_[rsp+0xc], mov_dword_ptr_[rsp+8]_r10d, mov_ecx_r15d, mov_esi_r8d, mov_rdi_rbp, mov_r12d_edx, mov_rdx_r13, call_0xffffffffffffae@@ 48, mov_r10d_dword_ptr_[rsp+8], xor_edx_edx, div@@ _r10d, mov_r9_qword_ptr_[rsp], cmp_dl@@ _r12b, je_0x22, movzx_eax@@ _dl, add_r9@@ _rax, movzx_eax_byte_ptr_[r@@ 9], add_al@@ _byte_ptr_[r@@ bx+r@@ 12+1], add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, inc_edx, movzx_eax@@ _dl, add_rax@@ _r9, cmp_r14b@@ _dl, cmovae@@ _r9_rax, jmp_0xffffffffffffffd@@ 7
push_r15, push_r14, mov_r14_rdi, push_r13, mov_r13d_edx, push_r12, lea_r12_[rip+0x@@ c@@ 87@@ b], push_rbp, mov_rbp_rsi, mov_esi_r13d, push_rbx, mov_rbx_rcx, shl_r13@@ _2, sub_rsp_0x28, mov_qword_ptr_[rsp+8]_r8, mov_rdi_qword_ptr_[rdi+0x10], lea_r15_[r@@ sp+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0x88@@ 2a, mov_qword_ptr_[rsp+0x10]_rax, mov_rdi_qword_ptr_[r14+0x10], mov_rsi_r15, call_0x88@@ 39, mov_edx_eax, cmp_eax_-1, je_0x97, mov_eax_edx, mov_ecx_edx, and_ecx_7, shr_eax_3, mov_esi_ecx, add_rax_qword_ptr_[r@@ sp+8], movzx_r8d_byte_ptr_[r@@ 12+r@@ si], movzx_esi_byte_ptr_[r@@ ax], and_esi@@ _r8d, movzx_esi_sil, sar_esi@@ _cl, test_esi_esi, jne_0xffffffffffffffc5, mov_esi_dword_ptr_[rbx], mov_r10d_dword_ptr_[r@@ 14+8], cmp_esi@@ _r10d, jb@@ _0x11, jmp@@ _0x7f, inc@@ _esi, cmp_r10d@@ _esi, jbe_0x@@ 72, mov_edi_esi, mov_ecx_esi, shr_edi@@ _3, and_ecx_7, movzx_edi_byte_ptr_[r@@ bp+r@@ di], mov_r11d@@ _ecx, and@@ _dil@@ _byte_ptr_[r@@ 12+r@@ 11], movzx_edi@@ _dil, sar@@ _edi@@ _cl, test_edi_edi, jne_0xffffffffffffffdb, mov_dword_ptr_[rbx]@@ _esi, mov_edi_edx, mov_rcx_qword_ptr_[r@@ 14+0x18], sub_esi@@ _dword_ptr_[r@@ cx+r@@ 13], mov_dword_ptr_[r@@ cx+r@@ di*@@ 4]_esi, mov_rcx_rbx, mov_rsi_rbp, or_byte_ptr_[r@@ ax]@@ _r8b, mov_r8_qword_ptr_[rsp+8], mov_rdi_r14, inc_dword_ptr_[r@@ bx], call_0xffffffffffffff@@ 17, jmp_0xffffffffffffff62, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x30, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rcx_[rip+0xc@@ 74@@ 2], mov_edx_0x1@@ 66, lea_rsi_[rip+0xc@@ 6f@@ 6], lea_rdi_[rip+0xc@@ 70@@ a], call_0xfffffffffffec@@ 16@@ f, call_0xfffffffffffec@@ 56@@ a
endbr64, sub_rsp_8, mov_edi_0x28, call_0xfffffffffffec@@ 1b@@ 3, test_rax_rax, je_0x2e, pxor_xmm0_xmm0, movups_xmmword_ptr_[r@@ ax+@@ 8]_xmm0, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+0x18]_0, mov_qword_ptr_[rax+0x10]_0, mov_qword_ptr_[rax+0x20]_0, add_rsp_8, ret, lea_rcx_[rip+0xc@@ 6f@@ 6], mov_edx_0x1@@ c, lea_rsi_[rip+0xc@@ 68@@ a], lea_rdi_[rip+0xb@@ 5b@@ d], call_0xfffffffffffec@@ 10@@ 3
endbr64, mov_rdi_qword_ptr_[rdi+0x20], jmp_0xfffffffffff@@ ec@@ 27@@ 8
endbr64, mov_eax_dword_ptr_[rsi], mov_rdx_qword_ptr_[r@@ di+0x20], cmp_eax_1, je_0xf, mov_dword_ptr_[rdx]_eax, mov_eax_dword_ptr_[rsi+4], cmp_eax_1, je_5, mov_dword_ptr_[rdx+@@ 4]_eax, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x98, mov_qword_ptr_[rsp+0x4@@ 8]_rdi, movsd_qword_ptr_[rsp+0x@@ 60]_xmm0, mov_r13_qword_ptr_[r@@ di+0x20], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, ucomi@@ sd_xmm0_qword_ptr_[rip+0x@@ be@@ 69], jp@@ _0x12, jne_0x10, movsd_xmm4@@ _qword_ptr_[rip+0x@@ c5@@ dd], movsd_qword_ptr_[rsp+0x@@ 60@@ ]_xmm4, mov_rbx_qword_ptr_[rsp+0x48], pxor_xmm1_xmm1, mov_rax_qword_ptr_[rbx+8], movsd_xmm3@@ _qword_ptr_[rip+0x@@ b@@ 98@@ a], mov_esi_dword_ptr_[rax+8], movsd@@ _xmm7@@ _qword_ptr_[rip+0x@@ b@@ 94@@ 7], mov_dword_ptr_[r13+@@ 8]_esi, mov_rax_qword_ptr_[rbx+8], mov_eax_dword_ptr_[rax+8], cvtsi2sd_xmm1_rax, mul@@ sd_xmm1@@ _qword_ptr_[rsp+0x60], movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm7@@ _xmm2, movapd_xmm0_xmm1, jbe_0x@@ 2d, cvttsd2si@@ _rax@@ _xmm1, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ b@@ 90@@ 6], and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, cvttsd2si@@ _rdi@@ _xmm0, mov_r14_r13, mov_dword_ptr_[r13+0x@@ c]_edi, call_0x8@@ 1d0, mov_qword_ptr_[r13+0x1@@ 0]_rax, mov_edi_0x18, call_0xfffffffffffec0@@ 42, mov_qword_ptr_[r13+0x@@ 20]_rax, mov_qword_ptr_[rax]_0, mov_byte_ptr_[rsp+0x@@ 28]_0, mov_dword_ptr_[rsp+0x6@@ c]@@ _0x14, mov_rax_qword_ptr_[r13+0x@@ 20], mov_qword_ptr_[rax+8]_0, mov_rax_qword_ptr_[r13+0x@@ 20], mov_qword_ptr_[rax+0x10]_0, lea_rax_[rsp+0x@@ 78], mov_qword_ptr_[rsp+0x10]_rax, mov_rax_qword_ptr_[rsp+0x48], mov_esi_dword_ptr_[r@@ 14+0xc], mov_edi_dword_ptr_[r@@ ax+0x10], test_edi_edi, jne_0xd@@ 12, lea_rax_[rsp+0x80], mov_dword_ptr_[rsp]@@ _0x64, mov_qword_ptr_[rsp+8]_rax, mov_rbx_qword_ptr_[rsp+0x48], mov_r15_r14, mov_edi_dword_ptr_[r@@ 15], mov_r12_qword_ptr_[r@@ 15+0x20], call_0xffffffffffffa@@ 7e@@ 9, mov_qword_ptr_[r12]_rax, mov_esi_dword_ptr_[r@@ 15+0xc], mov_edi_dword_ptr_[r@@ 15+4], mov_r12_qword_ptr_[r@@ 15+0x20], call_0xffffffffffffa@@ 7d@@ 4, mov_qword_ptr_[r12+8]_rax, mov_r14_qword_ptr_[r@@ bx+0x20], mov_rdi_qword_ptr_[r14+0x10], call_0x80@@ c2, mov_rax_qword_ptr_[rbx+8], mov_rdi_qword_ptr_[rax], call_qword_ptr_[rax+0x20], mov_rax_qword_ptr_[rbx+8], mov_esi_dword_ptr_[rax+8], test_esi_esi, je_0x1@@ 9a, xor_r13d_r13d, jmp_0x30, test_al_al, jne_0x15@@ e, mov_rdi_qword_ptr_[r14+0x10], mov_edx_r12d, mov_esi_ebp, call_0x7e@@ 47, mov_rax_qword_ptr_[rbx+8], inc_r13d, cmp_r13d@@ _dword_ptr_[r@@ ax+8], jae_0x@@ 167, mov_qword_ptr_[rsp+0x80]_0, mov_rdx_qword_ptr_[rsp+0x10], mov_rsi_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[rax], call_qword_ptr_[rax+0x10], mov_rax_qword_ptr_[r14+0x20], mov_edx_dword_ptr_[rsp+0x@@ 78], mov_rsi_qword_ptr_[rsp+0x80], mov_rdi_qword_ptr_[rax], call_0xffffffffffffa@@ 78@@ 2, xor_edx_edx, div_dword_ptr_[r@@ 14+0xc], mov_rax_qword_ptr_[r14+0x20], mov_rsi_qword_ptr_[rsp+0x80], mov_rdi_qword_ptr_[rax+8], mov_ebp_edx, mov_edx_dword_ptr_[rsp+0x@@ 78], call_0xffffffffffffa@@ 76@@ 1, mov_ecx_dword_ptr_[r@@ 14+0xc], xor_edx_edx, div_ecx, mov_r12d_edx, cmp_ebp@@ _edx, je_0x3f, mov_rax_qword_ptr_[rbx+8], mov_edx_dword_ptr_[rsp+0x@@ 78], mov_rdi_qword_ptr_[rax], mov_rsi_qword_ptr_[rsp+0x80], call_qword_ptr_[rax+0x18], mov_rdi_qword_ptr_[r14+0x10], mov_edx_r12d, mov_esi_ebp, call_0x8@@ 33@@ e, mov_edx_dword_ptr_[rbx+0x10], test_edx_edx, jne_0xffffffffffffff@@ 4c, test_al_al, je_0xffffffffffffff@@ 4c, jmp_0x4@@ 6, lea_r12d_[r@@ bp+1], cmp_ecx@@ _r12d, mov_eax_0, cmovbe@@ _r12d_eax, cmp_ebp@@ _r12d, jne_0xffffffffffffffb0, mov_ecx_dword_ptr_[r@@ bx+0x10], test_ecx_ecx, jne_0x@@ 706, mov_rax_qword_ptr_[rbx+8], mov_edx_dword_ptr_[rsp+0x@@ 78], mov_rsi_qword_ptr_[rsp+0x80], mov_rdi_qword_ptr_[rax], call_qword_ptr_[rax+0x18], mov_rax_qword_ptr_[r15+0x20], dec_dword_ptr_[r@@ sp], mov_rdi_qword_ptr_[rax], call_0xffffffffffffa@@ 8c@@ 6, mov_rax_qword_ptr_[r15+0x20], mov_qword_ptr_[rax]_0, mov_rax_qword_ptr_[r15+0x20], mov_rdi_qword_ptr_[rax+8], call_0xffffffffffffa@@ 8a@@ e, mov_rax_qword_ptr_[r15+0x20], mov_qword_ptr_[rax+8]_0, mov_ebp_dword_ptr_[r@@ bx+0x10], test_ebp_ebp, jne_0x@@ 660, mov_r11d_dword_ptr_[r@@ sp], test_r11d_r11d, je_0x6@@ 80, mov_esi_dword_ptr_[r@@ 15+0xc], jmp_0xfffffffffffffe@@ 51, mov_rax_qword_ptr_[rip+0x@@ 14@@ 4a@@ 9], mov_edx_0x2@@ 1, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0xc@@ 1c@@ d], call_0xfffffffffffec@@ 3@@ 1d, jmp_0xffffffffffffff88, mov_rax_qword_ptr_[rsp+0x48], mov_r14_r15, mov_ebx_dword_ptr_[r@@ ax+0x10], test_ebx_ebx, jne_0xb@@ 73, mov_rdi_qword_ptr_[r14+0x10], call_0x80@@ d9, mov_rax_qword_ptr_[rsp+0x48], mov_r10d_dword_ptr_[r@@ ax+0x10], test_r10d_r10d, jne_0xb@@ 18, mov_edi_dword_ptr_[r@@ 14+0xc], mov_esi_1, shr_edi@@ _3, inc_rdi, call_0xfffffffffffec@@ 1d@@ 3, mov_edi_dword_ptr_[r@@ 14+8], mov_esi_1, shr_edi@@ _3, inc_rdi, mov_qword_ptr_[rsp]_rax, call_0xfffffffffffec@@ 1b@@ b, mov_rdi_qword_ptr_[r@@ 14+0x18], mov_qword_ptr_[rsp+0x18]_rax, call_0xfffffffffffeb@@ eb@@ d, mov_edi_dword_ptr_[r@@ 14+0xc], mov_esi_4, mov_rbp_rdi, call_0xfffffffffffec@@ 19@@ c, mov_qword_ptr_[r14+0x1@@ 8]_rax, test_rax_rax, je_0xb@@ c0, mov_dword_ptr_[rsp+0x@@ 58]_1, mov_dword_ptr_[rsp+0x24]_0, mov_dword_ptr_[rsp+8]_0, test_ebp_ebp, je_0x2@@ 62, mov_ebx_dword_ptr_[r@@ sp+8], mov_rdi_qword_ptr_[r14+0x10], mov_esi_ebx, call_0x8@@ 006, test_al_al, je_0x2@@ 2f, mov_edx_ebx, mov_ecx_edx, and_ecx_7, shr_ebx@@ _3, mov_eax_ecx, add_rbx@@ _qword_ptr_[rsp], lea_r15_[rip+0x@@ c@@ 2a@@ 2], movzx_ebp_byte_ptr_[r@@ 15+rax], movzx_eax_byte_ptr_[rbx], and_eax@@ _ebp, movzx_eax_al, sar_eax@@ _cl, test_eax_eax, jne_0x20@@ 1, movsd@@ _xmm5@@ _qword_ptr_[rsp+0x60], mov_rdi_qword_ptr_[r14+0x10], comisd@@ _xmm5@@ _xmmword_ptr_[r@@ ip+0x@@ c@@ 1f@@ 9], mov_r12d_edx, jbe_0x@@ 57@@ e, call_0x8@@ 240, lea_edi_[rax+1], call_0x8a@@ f8, mov_qword_ptr_[rsp+0x28]_rax, mov_eax_dword_ptr_[rsp+0x58], pxor_xmm0_xmm0, cvtsi2sd_xmm0_rax, movsd_xmm2_qword_ptr_[rip+0x@@ b@@ 58@@ 9], movsd@@ _xmm6@@ _qword_ptr_[rip+0x@@ b@@ 54@@ 9], mulsd_xmm0_qword_ptr_[rip+0x@@ c@@ 1c@@ 1], movapd_xmm1_xmm0, and@@ pd@@ _xmm1_xmm2, ucomisd@@ _xmm6@@ _xmm1, movapd@@ _xmm3@@ _xmm0, jbe_0x@@ 2d, cvttsd2si_rax_xmm0, pxor_xmm1_xmm1, movsd_xmm4@@ _qword_ptr_[rip+0x@@ b5@@ 16], and@@ n@@ pd@@ _xmm2@@ _xmm3, cvtsi2sd_xmm1_rax, cmp@@ n@@ l@@ e@@ sd_xmm0_xmm1, and@@ pd@@ _xmm0_xmm4, addsd_xmm0_xmm1, or@@ pd@@ _xmm0_xmm2, cvttsd2si_rax_xmm0, mov_rcx_qword_ptr_[r@@ 14+0x18], mov_esi_dword_ptr_[rsp+8], mov_rdi_qword_ptr_[rsp+0x28], dec_eax, mov_dword_ptr_[r@@ cx+r@@ 12*@@ 4]_eax, lea_r13_[rsp+0x@@ 80], or_byte_ptr_[r@@ bx@@ ]_bpl, call_0x8a@@ e9, mov_rdi_qword_ptr_[rsp+0x28], call_0x8a@@ cf, mov_rdi_qword_ptr_[rsp+0x28], test_al_al, jne_0xa@@ 10, call_0x8b@@ 0d, mov_rdi_qword_ptr_[r14+0x10], mov_esi_eax, call_0x8@@ 19@@ 2, mov_qword_ptr_[rsp+0x78]_rax, mov_rdi_qword_ptr_[r14+0x10], mov_rsi_qword_ptr_[rsp+0x10], call_0x8@@ 19@@ 7, mov_ebp_eax, cmp_eax_-1, je_0xffffffffffffff@@ b9, mov_rdi_qword_ptr_[r14+0x10], mov_esi_ebp, call_0x7@@ ec@@ 5, test_al_al, je_0xffffffffffffffde, mov_ecx_ebp, and_ecx_7, mov_rdx_qword_ptr_[rsp], mov_ebx_ebp, mov_eax_ecx, movzx_eax_byte_ptr_[r@@ 15+rax], shr_ebx@@ _3, add_rdx_rbx, mov_byte_ptr_[rsp+0x@@ 38@@ ]_al, and_al@@ _byte_ptr_[r@@ dx], movzx_eax_al, sar_eax@@ _cl, mov_qword_ptr_[rsp+0x30]_rdx, test_eax_eax, jne_0xffffffffffffffb2, mov_rbx_r14, mov_r14d@@ _ebp, mov_eax_dword_ptr_[rsp+0x24], mov_rdi_qword_ptr_[rbx+0x10], mov_esi_r14d, lea_r12d@@ _[rax+1], call_0x8@@ 11b, mov_qword_ptr_[rsp+0x80]_rax, mov_rdi_qword_ptr_[rbx+0x10], mov_rsi_r13, call_0x8@@ 12@@ 1, mov_ebp_eax, cmp_ebp_-1, je_0x2@@ ef, mov_rdi_qword_ptr_[rbx+0x10], mov_esi_ebp, call_0x7e@@ 4b, test_al_al, je_0xffffffffffffffdc, mov_rsi_qword_ptr_[rsp], mov_eax_ebp, mov_ecx_ebp, shr_eax_3, and_ecx_7, movzx_eax_byte_ptr_[r@@ si+rax], mov_edx_ecx, and_al@@ _byte_ptr_[r@@ 15@@ +rdx], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, je_0xffffffffffffff@@ bb, mov_rdx_qword_ptr_[rbx+0x18], mov_eax_dword_ptr_[r@@ dx+r@@ bp*4], add_eax@@ _r12d, cmp_eax_dword_ptr_[r@@ bx+8], jae_0x@@ 6f@@ c, mov_rsi_qword_ptr_[rsp+0x18], mov_ecx_eax, shr_eax_3, and_ecx_7, movzx_eax_byte_ptr_[r@@ si+rax], mov_edx_ecx, and_al@@ _byte_ptr_[r@@ 15@@ +rdx], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, je_0xffffffffffffff@@ 88, cmp_r12d@@ _dword_ptr_[rsp+0x@@ 24], jbe_0x@@ 95@@ 3, mov_dword_ptr_[rsp+0x2@@ 4]_r12d, jmp_0xffffffffffffff54, inc_dword_ptr_[r@@ sp+8], mov_eax_dword_ptr_[rsp+8], cmp_dword_ptr_[r14+0x@@ c]_eax, ja_0xfffffffffffffd@@ b4, cmp_byte_ptr_[rsp+0x@@ 28]_0, jne_0x@@ 6a@@ e, mov_rax_qword_ptr_[rsp+0x48], mov_r13_r14, mov_r9d_dword_ptr_[r@@ ax+0x10], mov_r14_qword_ptr_[r@@ sp], test_r9d_r9d, jne_0x@@ 88@@ 8, mov_dword_ptr_[rsp+0x8@@ 0]_0, xor_r15d_r15d, lea_rbx_[rip+0x@@ c0@@ 45], mov_r8d_dword_ptr_[r@@ 13+8], lea_rbp_[rsp+0x@@ 80], test_r8d_r8d, je_0xcf, mov_r12_r14, mov_r14_r13, mov_r13d@@ _r15d, jmp_0x3b, mov_eax_edx, shr_eax_3, movzx_eax_byte_ptr_[r@@ 12+rax], mov_esi_ecx, and_al@@ _byte_ptr_[r@@ bx+r@@ si], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, je_0x15, mov_rsi_qword_ptr_[rsp+0x18], mov_r8_r12, mov_rcx_rbp, mov_rdi_r14, call_0xfffffffffffff76@@ a, inc_r13d, cmp_r13d@@ _dword_ptr_[r@@ 14+8], jae_0x@@ 81, mov_rdi_qword_ptr_[r14+0x10], xor_edx_edx, mov_esi_r13d, call_0x7f@@ 93, mov_rdi_qword_ptr_[r14+0x10], mov_edx_1, mov_esi_r13d, mov_r15d_eax, call_0x7@@ f7@@ f, mov_edx_eax, mov_eax_r15d, mov_ecx_r15d, shr_eax_3, and_ecx_7, movzx_esi_byte_ptr_[r@@ 12+rax], mov_edi_ecx, and@@ _sil@@ _byte_ptr_[r@@ bx+r@@ di], movzx_esi_sil, sar_esi@@ _cl, mov_ecx_edx, and_ecx_7, test_esi_esi, je_0xffffffffffffff@@ 84, shr_edx@@ _3, movzx_eax_byte_ptr_[r@@ 12@@ +rdx], mov_esi_ecx, and_al@@ _byte_ptr_[r@@ bx+r@@ si], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, jne_0xffffffffffffff@@ 99, mov_rsi_qword_ptr_[rsp+0x18], mov_r8_r12, mov_rcx_rbp, mov_edx_r15d, mov_rdi_r14, inc_r13d, call_0xfffffffffffff6e@@ 8, cmp_r13d@@ _dword_ptr_[r@@ 14+8], jb_0xffffffffffffff@@ 83, mov_r13_r14, mov_r14_r12, mov_edi_dword_ptr_[r@@ 13+0xc], mov_r12_qword_ptr_[rsp+0x18], mov_esi_1, xor_ebx_ebx, lea_rbp_[rip+0x@@ bf@@ 50], test_edi_edi, jne_0x20, jmp_0x6@@ 9, inc_ebx, cmp_ebx_dword_ptr_[r@@ 13+0xc], jae_0x@@ 57, mov_eax_ebx, and_eax_7, movzx_esi_byte_ptr_[r@@ bp+rax], mov_eax_ebx, shr_eax_3, add_rax_r14, movzx_edx_byte_ptr_[rax], mov_ecx_ebx, and_edx@@ _esi, movzx_edx_dl, and_ecx_7, sar_edx@@ _cl, test_edx_edx, jne_0xffffffffffffffd5, mov_rcx_qword_ptr_[r@@ 13+0x18], mov_edx_ebx, mov_dword_ptr_[rcx@@ +rdx*@@ 4]_0, mov_r8_r14, mov_edx_ebx, or_byte_ptr_[r@@ ax@@ ]_sil, lea_rcx_[rsp+0x@@ 80], mov_rsi_r12, mov_rdi_r13, inc_ebx, call_0xfffffffffffff65@@ e, cmp_ebx_dword_ptr_[r@@ 13+0xc], jb_0xffffffffffffff@@ ad, mov_rdi_qword_ptr_[rsp+0x18], call_0xfffffffffffeba@@ 7e, mov_rdi_r14, call_0xfffffffffffeba@@ 76, mov_rdi_qword_ptr_[r13+0x10], call_0x77@@ 3d, mov_qword_ptr_[r13+0x1@@ 0]_0, mov_edi_0x18, call_0xfffffffffffeb@@ 92@@ b, mov_rbx_qword_ptr_[rsp+0x48], mov_r12_rax, mov_eax_dword_ptr_[rbx], mov_edi_0x18, mov_dword_ptr_[r12]_eax, call_0xfffffffffffeb@@ 9@@ 13, mov_rdx_qword_ptr_[r@@ 13+0x18], mov_qword_ptr_[rax+8]_rdx, mov_qword_ptr_[r13+0x1@@ 8]_0, mov_rdx_qword_ptr_[r@@ 13+0x20], mov_qword_ptr_[rax+0x10]_rdx, mov_qword_ptr_[r13+0x@@ 20]_0, mov_edx_dword_ptr_[r13+0x@@ c], mov_ecx_dword_ptr_[r@@ bx+0x10], mov_dword_ptr_[rax+4]_edx, mov_edx_dword_ptr_[r@@ 13+8], mov_qword_ptr_[r12+0x10]_rax, mov_dword_ptr_[rax]_edx, mov_eax_dword_ptr_[r13+8], mov_dword_ptr_[r12+@@ 4]_eax, test_ecx_ecx, jne_0x@@ 6d@@ e, mov_rax_qword_ptr_[rsp+0x88], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ 6e@@ c, add_rsp_0x98, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_eax_r14d, mov_r14_rbx, mov_ebx_ebp, mov_ebp_eax, cmp_r12d@@ _dword_ptr_[rsp+0x@@ 24], ja_0x5@@ 29, xor_r12d_r12d, mov_rdi_qword_ptr_[r14+0x10], mov_esi_ebp, call_0x7d@@ ea, mov_dword_ptr_[rsp+0x2@@ 4]_ebx, mov_qword_ptr_[rsp+0x80]_rax, mov_eax_ebp, mov_rbp_r14, mov_r14d_eax, mov_rdi_qword_ptr_[rbp+0x10], mov_rsi_r13, call_0x7d@@ e9, mov_ebx_eax, cmp_ebx_-1, je_0x4@@ b7, mov_rdi_qword_ptr_[rbp+0x10], mov_esi_ebx, call_0x7b@@ 13, test_al_al, je_0xffffffffffffffdc, mov_rdx_qword_ptr_[rsp], mov_eax_ebx, mov_ecx_ebx, shr_eax_3, and_ecx_7, movzx_eax_byte_ptr_[rdx+rax], mov_esi_ecx, and_al@@ _byte_ptr_[r@@ 15+r@@ si], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, je_0xffffffffffffff@@ bb, mov_rax_qword_ptr_[rbp+0x18], mov_rdx_qword_ptr_[rsp+0x18], mov_esi_dword_ptr_[r@@ ax+r@@ bx*4], add_esi@@ _r12d, mov_ecx_esi, and_esi@@ _7, movzx_eax_byte_ptr_[r@@ 15+r@@ si], shr_ecx_3, or_byte_ptr_[r@@ dx@@ +rcx@@ ]_al, mov_rax_qword_ptr_[rbp+0x18], mov_edx_dword_ptr_[r@@ ax+r@@ bx*4], mov_ebx_dword_ptr_[rsp+0x@@ 58], add_edx@@ _r12d, mov_eax_edx, cmp_ebx@@ _edx, cmovae@@ _eax@@ _ebx, mov_dword_ptr_[rsp+0x58]_eax, jmp_0xffffffffffffff81, mov_rax_qword_ptr_[rip+0x@@ 13@@ e6@@ 9], mov_ecx_dword_ptr_[rsp], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x@@ bb@@ bc], mov_esi_1, xor_eax_eax, call_0xfffffffffffeb@@ 6cd, mov_r11d_dword_ptr_[r@@ sp], test_r11d_r11d, jne_0xfffffffffffff@@ 98@@ c, mov_rdi_qword_ptr_[r15+0x10], xor_r12d_r12d, call_0x7@@ 5a@@ 4, jmp_0xfffffffffffffed7, mov_rax_qword_ptr_[rip+0x@@ 13@@ e@@ 21], mov_ecx_r13d, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x@@ ba@@ dc], mov_esi_1, xor_eax_eax, call_0xfffffffffffeb@@ 68@@ 5, jmp_0xfffffffffffff8e@@ 0, call_0x7@@ cc@@ 8, mov_eax_eax, pxor_xmm0_xmm0, cvtsi2sd_xmm0_rax, mulsd_xmm0_qword_ptr_[rip+0x@@ bc@@ 68], cvttsd2si@@ _rdi@@ _xmm0, inc@@ _edi, call_0x8@@ 56@@ 9, mov_qword_ptr_[rsp+0x40]_rax, mov_eax_dword_ptr_[rsp+0x58], pxor_xmm0_xmm0, cvtsi2sd_xmm0_rax, movsd_xmm2_qword_ptr_[rip+0x@@ a@@ ff@@ a], movsd@@ _xmm7@@ _qword_ptr_[rip+0x@@ afb@@ a], mulsd_xmm0_qword_ptr_[rip+0x@@ bc@@ 32], movapd_xmm1_xmm0, and@@ pd@@ _xmm1_xmm2, ucomisd@@ _xmm7@@ _xmm1, movapd@@ _xmm3@@ _xmm0, jbe_0x@@ 2d, cvttsd2si_rax_xmm0, pxor_xmm1_xmm1, movsd_xmm4@@ _qword_ptr_[rip+0x@@ af@@ 87], and@@ n@@ pd@@ _xmm2@@ _xmm3, cvtsi2sd_xmm1_rax, cmp@@ n@@ l@@ e@@ sd_xmm0_xmm1, and@@ pd@@ _xmm0_xmm4, addsd_xmm0_xmm1, or@@ pd@@ _xmm0_xmm2, cvttsd2si_rax_xmm0, mov_rcx_qword_ptr_[r@@ 14+0x18], mov_esi_dword_ptr_[rsp+8], mov_rdi_qword_ptr_[rsp+0x40], dec_eax, mov_dword_ptr_[r@@ cx+r@@ 12*@@ 4]_eax, or_byte_ptr_[r@@ bx@@ ]_bpl, call_0x8@@ 56@@ 2, mov_dword_ptr_[rsp+0x28]_0, mov_dword_ptr_[rsp+0x@@ 68]_0, mov_qword_ptr_[rsp+0x38]_0, mov_rdi_qword_ptr_[rsp+0x40], call_0x85@@ 2f, mov_rdi_qword_ptr_[rsp+0x40], test_al_al, jne_0x4@@ 91, call_0x8@@ 56@@ d, mov_rdi_qword_ptr_[r14+0x10], mov_esi_eax, call_0x7b@@ f2, mov_qword_ptr_[rsp+0x78]_rax, lea_r13_[rsp+0x@@ 80], mov_rdi_qword_ptr_[r14+0x10], mov_rsi_qword_ptr_[rsp+0x10], call_0x7b@@ f7, mov_ebp_eax, cmp_eax_-1, je_0xffffffffffffff@@ b9, mov_rdi_qword_ptr_[r14+0x10], mov_esi_ebp, call_0x7@@ 925, test_al_al, je_0xffffffffffffffde, mov_eax_ebp, shr_eax_3, mov_ecx_ebp, add_rax_qword_ptr_[r@@ sp], and_ecx_7, mov_rdx_rax, mov_qword_ptr_[rsp+0x50]_rax, mov_eax_ecx, movzx_eax_byte_ptr_[r@@ 15+rax], mov_byte_ptr_[rsp+0x@@ 5f@@ ]_al, and_al@@ _byte_ptr_[r@@ dx], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, jne_0xffffffffffffffb2, mov_dword_ptr_[rsp+0x30]@@ _ebp, xor_ebx_ebx, mov_rbp_r14, cmp_dword_ptr_[rsp+0x@@ 28]@@ _ebx, jbe_0x@@ e7, mov_rsi_qword_ptr_[rsp+0x38], mov_eax_ebx, mov_r12d_dword_ptr_[r@@ si@@ +rax*4], inc_ebx, mov_rdi_qword_ptr_[rbp+0x10], mov_esi_dword_ptr_[rsp+0x@@ 30], call_0x7b@@ 68, mov_qword_ptr_[rsp+0x80]_rax, mov_rdi_qword_ptr_[rbp+0x10], mov_rsi_r13, call_0x7b@@ 71, mov_r14d_eax, cmp_r14d@@ _-1, je_0xc5, mov_rdi_qword_ptr_[rbp+0x10], mov_esi_r14d, call_0x7@@ 8@@ 98, test_al_al, je_0xffffffffffffffd9, mov_rsi_qword_ptr_[rsp], mov_eax_r14d, mov_ecx_r14d, shr_eax_3, and_ecx_7, movzx_eax_byte_ptr_[r@@ si+rax], mov_edx_ecx, and_al@@ _byte_ptr_[r@@ 15@@ +rdx], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, je_0xffffffffffffff@@ b6, mov_rdx_qword_ptr_[rbp+0x18], mov_eax_dword_ptr_[r@@ dx+r@@ 14*4], add_eax@@ _r12d, cmp_eax_dword_ptr_[r@@ bp+8], jae_0x@@ 1a@@ 6, mov_rsi_qword_ptr_[rsp+0x18], mov_ecx_eax, shr_eax_3, and_ecx_7, movzx_eax_byte_ptr_[r@@ si+rax], mov_edx_ecx, and_al@@ _byte_ptr_[r@@ 15@@ +rdx], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, je_0xffffffffffffff@@ 82, cmp_r12d@@ _dword_ptr_[rsp+0x@@ 24], jbe_0xffffffffffffff@@ 4c, mov_esi_dword_ptr_[rsp+0x@@ 68], cmp_dword_ptr_[rsp+0x@@ 28]@@ _esi, je_0x2@@ 45, mov_eax_dword_ptr_[rsp+0x28], mov_rsi_qword_ptr_[rsp+0x38], mov_dword_ptr_[rsp+0x2@@ 4]_r12d, mov_dword_ptr_[rsi@@ +rax*@@ 4]_r12d, lea_eax@@ _[rax+1], mov_dword_ptr_[rsp+0x28]_eax, cmp_dword_ptr_[rsp+0x@@ 28]@@ _ebx, ja_0xffffffffffffff@@ 25, mov_eax_dword_ptr_[rsp+0x24], mov_ebx_0xffffffff, lea_r12d@@ _[rax+1], jmp_0xffffffffffffff1f, dec_ebx, mov_r14_rbp, mov_ebp_dword_ptr_[rsp+0x@@ 30], cmp_ebx@@ _dword_ptr_[rsp+0x28], jae_0x@@ 1b, dec@@ _dword_ptr_[rsp+0x28], mov_rsi_qword_ptr_[rsp+0x38], mov_eax_dword_ptr_[rsp+0x28], mov_eax_dword_ptr_[r@@ si@@ +rax*4], mov_dword_ptr_[rsi@@ +r@@ bx*@@ 4]_eax, mov_rdi_qword_ptr_[r14+0x10], mov_esi_ebp, call_0x7a@@ 52, mov_qword_ptr_[rsp+0x80]_rax, mov_rdi_qword_ptr_[r14+0x10], mov_rsi_r13, call_0x7a@@ 59, mov_ebx_eax, cmp_ebx_-1, je_0x1@@ 6f, mov_rdi_qword_ptr_[r14+0x10], mov_esi_ebx, call_0x77@@ 83, test_al_al, je_0xffffffffffffffdc, mov_rsi_qword_ptr_[rsp], mov_eax_ebx, mov_ecx_ebx, shr_eax_3, and_ecx_7, movzx_eax_byte_ptr_[r@@ si+rax], mov_edx_ecx, and_al@@ _byte_ptr_[r@@ 15@@ +rdx], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, je_0xffffffffffffff@@ bb, mov_rax_qword_ptr_[r@@ 14+0x18], mov_rsi_qword_ptr_[rsp+0x18], mov_ecx_dword_ptr_[r@@ ax+r@@ bx*4], add_ecx@@ _r12d, mov_edx_ecx, and_ecx_7, movzx_eax_byte_ptr_[r@@ 15@@ +rcx], shr_edx@@ _3, or@@ _byte_ptr_[rsi@@ +rdx@@ ]_al, mov_rax_qword_ptr_[r@@ 14+0x18], mov_esi_dword_ptr_[r@@ ax+r@@ bx*4], mov_ebx_dword_ptr_[rsp+0x@@ 58], add_esi@@ _r12d, mov_eax_esi, cmp_ebx@@ _esi, cmovae@@ _eax@@ _ebx, mov_dword_ptr_[rsp+0x58]_eax, jmp_0xffffffffffffff81, mov_rdi_qword_ptr_[rsp+0x28], mov_r14_rbx, call_0x8@@ 3e0, mov_rax_qword_ptr_[rsp+0x48], dec@@ _dword_ptr_[rsp+0x@@ 6c], mov_edx_dword_ptr_[rax+0x10], test_edx_edx, jne_0x6c, mov_rdi_qword_ptr_[rsp+0x18], call_0xfffffffffffeb@@ 55@@ 3, mov_rdi_qword_ptr_[rsp], call_0xfffffffffffeb@@ 54@@ a, mov_eax_dword_ptr_[rsp+0x@@ 6c], mov_byte_ptr_[rsp+0x@@ 28]_1, test_eax_eax, jne_0xfffffffffffff@@ 40@@ a, mov_rdi_qword_ptr_[r14+0x10], xor_r12d_r12d, call_0x7@@ 1f@@ d, mov_qword_ptr_[r14+0x1@@ 0]_0, jmp_0xfffffffffffffb@@ 28, mov_rdi_qword_ptr_[rsp+0x40], mov_r14_rbp, call_0x8@@ 380, mov_rdi_qword_ptr_[rsp+0x38], call_0xfffffffffffeb@@ 50@@ 6, mov_rax_qword_ptr_[rsp+0x48], dec@@ _dword_ptr_[rsp+0x@@ 6c], mov_edx_dword_ptr_[rax+0x10], test_edx_edx, je_0xffffffffffffff@@ 9b, mov_rax_qword_ptr_[rip+0x@@ 13@@ a5@@ 2], mov_ecx_dword_ptr_[rsp+0x@@ 6c], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x@@ b8@@ 2c], mov_esi_1, xor_eax_eax, call_0xfffffffffffeb@@ 2b@@ 5, jmp_0xffffffffffffff78, mov_eax_r14d, mov_ecx_eax, mov_rax_qword_ptr_[rbp+0x18], movzx_edx_byte_ptr_[rsp+0x@@ 38], mov_dword_ptr_[rax@@ +rcx*@@ 4]_r12d, mov_rax_qword_ptr_[rsp+0x30], mov_ebx_dword_ptr_[rsp+0x@@ 24], or_byte_ptr_[r@@ ax]@@ _dl, mov_rdi_qword_ptr_[rsp+0x28], mov_esi_ecx, mov_r14_rbp, call_0x8@@ 2@@ 11, mov_dword_ptr_[rsp+0x2@@ 4]_ebx, jmp_0xfffffffffffff7@@ 58, mov_ebx_r12d, jmp_0xfffffffffffffa@@ dd, mov_eax_dword_ptr_[rsp+0x24], mov_edx_ebp, cmp_eax_r12d, cmovb@@ _eax@@ _r12d, movzx_ebx@@ _byte_ptr_[rsp+0x@@ 5f], mov_dword_ptr_[rsp+0x24]_eax, mov_rax_qword_ptr_[r@@ 14+0x18], mov_rdi_qword_ptr_[rsp+0x40], mov_dword_ptr_[rax@@ +rdx*@@ 4]_r12d, mov_rax_qword_ptr_[rsp+0x50], mov_esi_ebp, or_byte_ptr_[r@@ ax@@ ]_bl, call_0x8@@ 1c@@ 4, jmp_0xfffffffffffffc@@ af, mov_eax_dword_ptr_[rsp+0x28], mov_rdi_qword_ptr_[rsp+0x38], lea_esi_[r@@ ax+0x@@ 200@@ 0], mov_dword_ptr_[rsp+0x6@@ 8]_esi, shl_rsi@@ _2, call_0xfffffffffffeb@@ 8@@ 39, mov_qword_ptr_[rsp+0x38]_rax, jmp_0xfffffffffffffd@@ a0, mov_rax_qword_ptr_[rip+0x@@ 13@@ 97@@ 1], mov_ecx_dword_ptr_[r@@ 14+8], mov_rdi_qword_ptr_[rax], mov_r8d_esi, lea_rdx_[rip+0x@@ ad@@ b8], mov_esi_1, xor_eax_eax, call_0xfffffffffffeb@@ 1d@@ 1, mov_esi_dword_ptr_[r@@ 14+0xc], jmp_0xfffffffffffff@@ 2c@@ c, mov_rbp_qword_ptr_[rip+0x@@ 13@@ 94@@ 1], mov_edx_0x1@@ 9, mov_rcx_qword_ptr_[rbp], mov_esi_1, lea_rdi_[rip+0xb@@ 60@@ a], call_0xfffffffffffeb@@ 7b@@ 4, mov_rcx_qword_ptr_[rbp], mov_edx_0x1@@ f, mov_esi_1, lea_rdi_[rip+0xb@@ 6b@@ 2], call_0xfffffffffffeb@@ 7@@ 9a, jmp_0xfffffffffffff@@ 4b@@ 3, mov_rax_qword_ptr_[rip+0x@@ 13@@ 90@@ 1], mov_edx_0x1@@ 7, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x@@ aa@@ 2b], call_0xfffffffffffeb@@ 77@@ 5, jmp_0xfffffffffffff@@ 47@@ 3, mov_rax_qword_ptr_[rip+0x@@ 13@@ 8d@@ 9], mov_edx_0x2@@ 3, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0xb@@ 68@@ 5], call_0xfffffffffffeb@@ 74@@ d, jmp_0xfffffffffffff75@@ e, call_0x8@@ 1c@@ 3, inc_dword_ptr_[r@@ sp+8], mov_eax_dword_ptr_[rsp+8], cmp_dword_ptr_[r14+0x@@ c]_eax, jbe_0xffffffffffff@@ f7@@ 2f, mov_byte_ptr_[rsp+0x@@ 28]_0, jmp_0xfffffffffffff@@ 4c@@ 7, call_0x8@@ 1a@@ 2, mov_rdi_qword_ptr_[rsp+0x38], call_0xfffffffffffeb@@ 328, jmp_0xffffffffffffffd5, mov_rax_qword_ptr_[rip+0x@@ 13@@ 88@@ 1], mov_edx_0x3@@ 5, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x@@ aa@@ 15], call_0xfffffffffffeb@@ 6f@@ 5, jmp_0xfffffffffffff90@@ 8, call_0xfffffffffffeb@@ 56@@ b, mov_dword_ptr_[rsp+0x2@@ 4]_0xffffffff, jmp_0xfffffffffffff@@ 60@@ 4, lea_rcx_[rip+0x@@ b7@@ 21], mov_edx_0x8@@ d, lea_rsi_[rip+0xb@@ 6b@@ d], lea_rdi_[rip+0xb@@ 6e@@ c], call_0xfffffffffffeb@@ 13@@ 6
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0x28, mov_rbx_qword_ptr_[rdi+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0x@@ c]_2, call_0xffffffffffff8@@ 50@@ a, mov_rcx_rbp, lea_rdi_[rsp+0x@@ c], mov_edx_1, mov_esi_4, call_0xfffffffffffeb@@ 66@@ 3, mov_rax_qword_ptr_[rbx+0x10], lea_r12_[r@@ sp+8], mov_rdi_qword_ptr_[rax], lea_r13_[rsp+0x10], mov_rdx_r12, mov_rsi_r13, call_0xffffffffffff99@@ f7, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r12, call_0xfffffffffffeb@@ 6@@ 32, mov_esi_dword_ptr_[rsp+8], mov_rdi_qword_ptr_[rsp+0x10], mov_rcx_rbp, mov_edx_1, call_0xfffffffffffeb@@ 6@@ 1c, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffeb@@ 22@@ 2, mov_rax_qword_ptr_[rbx+0x10], mov_rdx_r12, mov_rdi_qword_ptr_[rax+8], mov_rsi_r13, call_0xffffffffffff9@@ 9a@@ f, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r12, call_0xfffffffffffeb@@ 5@@ ea, mov_esi_dword_ptr_[rsp+8], mov_rdi_qword_ptr_[rsp+0x10], mov_rcx_rbp, mov_edx_1, call_0xfffffffffffeb@@ 5d@@ 4, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffeb@@ 1d@@ a, lea_rdi_[r@@ bx+4], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffeb@@ 5b@@ 4, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_rbx, call_0xfffffffffffeb@@ 5@@ 9f, mov_esi_dword_ptr_[r@@ bx+4], mov_rdi_qword_ptr_[rbx+8], shl_rsi@@ _2, mov_rcx_rbp, mov_edx_1, call_0xfffffffffffeb@@ 58@@ 7, test_rax_rax, je_0x27, mov_eax_1, mov_rbx_qword_ptr_[rsp+0x18], xor_rbx_qword_ptr_fs:[0x28], jne_0x4e, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_rdi_rbp, call_0xfffffffffffeb@@ 1b@@ 5, test_eax_eax, je_0xffffffffffffffd1, call_0xfffffffffffeb@@ 38@@ c, mov_edi_dword_ptr_[rax], call_0xfffffffffffeb@@ 28@@ 5, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 13@@ 6a@@ e], lea_rdx_[rip+0xa@@ 7b@@ f], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffea@@ f@@ 15, xor_eax_eax, jmp_0xffffffffffffffa6, call_0xfffffffffffeb@@ 39@@ c
endbr64, push_r15, mov_r15_rdi, mov_edi_0x18, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rsi, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xfffffffffffea@@ fc@@ 3, mov_qword_ptr_[rbx+0x10]_rax, mov_edx_1, mov_rdi_rsp, mov_rcx_r15, mov_esi_4, mov_r13_rax, call_0xfffffffffffeb@@ 2e@@ 7, mov_ebx_dword_ptr_[r@@ sp], lea_edi_[r@@ bx+1], shl_rdi_3, call_0xfffffffffffea@@ f@@ 98, mov_edx_ebx, mov_qword_ptr_[r13+0x1@@ 0]_rax, mov_qword_ptr_[rax+rdx*@@ 8]_0, test_ebx_ebx, je_0x70, xor_ebx_ebx, lea_r14_[r@@ sp+4], mov_rcx_r15, mov_edx_1, mov_esi_4, mov_rdi_r14, call_0xfffffffffffeb@@ 2a0, mov_r12d_dword_ptr_[r@@ sp+4], mov_rdi_r12, call_0xfffffffffffea@@ f@@ 53, mov_rdi_rax, mov_rcx_r15, mov_edx_1, mov_rsi_r12, mov_rbp_rax, call_0xfffffffffffeb@@ 27@@ d, mov_esi_dword_ptr_[rsp+4], mov_rdi_rbp, call_0xffffffffffff9@@ 94@@ 1, mov_rcx_qword_ptr_[r@@ 13+0x10], mov_edx_ebx, mov_qword_ptr_[rcx@@ +rdx*@@ 8]_rax, mov_rdi_rbp, inc_ebx, call_0xfffffffffffeb0@@ 4d, cmp_dword_ptr_[rsp@@ ]_ebx, ja_0xffffffffffffff@@ a5, lea_rdi_[r@@ 13+4], mov_rcx_r15, mov_edx_1, mov_esi_4, call_0xfffffffffffeb@@ 24@@ 2, mov_rcx_r15, mov_edx_1, mov_esi_4, mov_rdi_r13, call_0xfffffffffffeb@@ 22@@ d, mov_ebp_dword_ptr_[r@@ 13+4], shl_rbp@@ _2, mov_rdi_rbp, call_0xfffffffffffea@@ ed@@ d, mov_rdi_rax, mov_rcx_r15, mov_edx_1, mov_rsi_rbp, mov_qword_ptr_[r13+8]_rax, call_0xfffffffffffeb@@ 20@@ 6, test_rax_rax, je_0x26, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x50, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_r15, call_0xfffffffffffeb0@@ 15, test_eax_eax, je_0xffffffffffffffd2, call_0xfffffffffffeb@@ 1e@@ c, mov_edi_dword_ptr_[rax], call_0xfffffffffffeb0@@ e5, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 13@@ 50@@ e], lea_rdx_[rip+0x@@ a6@@ 1f], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffea@@ d@@ 75, jmp_0xffffffffffffffa4, call_0xfffffffffffeb@@ 1f@@ e
endbr64, push_r13, mov_r13d_edx, push_r12, mov_r12_rsi, push_rbp, push_rbx, sub_rsp_8, mov_rbx_qword_ptr_[rdi+0x10], mov_rax_qword_ptr_[rbx+0x10], mov_rdi_qword_ptr_[rax], call_0xffffffffffff96@@ 91, xor_edx_edx, div_dword_ptr_[r@@ bx+4], mov_rax_qword_ptr_[rbx+0x10], mov_rdi_qword_ptr_[rax+8], mov_rsi_r12, mov_ebp_edx, mov_edx_r13d, call_0xffffffffffff96@@ 77, mov_esi_dword_ptr_[r@@ bx+4], xor_edx_edx, div_esi, cmp_ebp@@ _edx, je_0x29, mov_edx_edx, lea_rcx_[rdx@@ *4], mov_rdx_qword_ptr_[rbx+8], mov_eax_dword_ptr_[r@@ dx@@ +rcx], add_eax_dword_ptr_[r@@ dx+r@@ bp*4], add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, lea_ecx_[r@@ bp+1], mov_rax_rcx, mov_edx_0, shl_rcx@@ _2, cmp_esi_eax, cmovb@@ _rcx_rdx, jmp_0xffffffffffffffc@@ e
endbr64, push_r12, mov_r12_rdi, push_rbp, sub_rsp_8, mov_rbp_qword_ptr_[r@@ di+0x10], mov_rdi_qword_ptr_[rbp+8], call_0xfffffffffffea@@ ed@@ a, mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax], call_0xffffffffffff97@@ fe, mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax+8], call_0xffffffffffff97@@ f1, mov_rdi_qword_ptr_[rbp+0x10], call_0xfffffffffffea@@ eb@@ 8, mov_rdi_rbp, call_0xfffffffffffea@@ eb@@ 0, add_rsp_8, pop_rbp, mov_rdi_r12, pop_r12, jmp_0xfffffffffff@@ ea@@ ea@@ 1
endbr64, push_r12, push_rbp, push_rbx, mov_rbx_rsi, add_rbx_4, mov_rbp_qword_ptr_[r@@ di+0x10], mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax], call_0xffffffffffff98@@ b6, mov_dword_ptr_[rbx@@ -4]_eax, mov_r12d_eax, mov_rsi_rbx, mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax], call_0xffffffffffff97@@ c1, mov_edi_r12d, call_0xffffffffffff97@@ e9, mov_eax_eax, add_rbx_rax, mov_rax_qword_ptr_[rbp+0x10], add_rbx_4, mov_rdi_qword_ptr_[rax+8], call_0xffffffffffff9@@ 88@@ 3, mov_dword_ptr_[rbx@@ -4]_eax, mov_r12d_eax, mov_rsi_rbx, mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax+8], call_0xffffffffffff97@@ 8d, mov_edi_r12d, call_0xffffffffffff97@@ b5, mov_eax_eax, mov_edx_dword_ptr_[r@@ bp+4], add_rbx_rax, mov_dword_ptr_[rbx]_edx, lea_rdi_[r@@ bx+4], shl_rdx_2, pop_rbx, mov_rsi_qword_ptr_[rbp+8], pop_rbp, pop_r12, jmp_0xfffffffffff@@ eb@@ 28@@ 6
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_rbp_qword_ptr_[r@@ di+0x10], mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax], call_0xffffffffffff98@@ 27, mov_r13d_eax, mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax+8], call_0xffffffffffff98@@ 17, mov_r12d_eax, mov_edi_r13d, call_0xffffffffffff97@@ 5c, mov_edi_r12d, mov_ebx_eax, call_0xffffffffffff97@@ 52, mov_r8d_eax, mov_eax_dword_ptr_[rbp+4], add_rsp_8, lea_eax_[r@@ bx@@ +rax*4@@ +0x10], pop_rbx, pop_rbp, pop_r12, add_eax@@ _r8d, pop_r13, ret
endbr64, push_r15, push_r14, mov_r14d_edx, push_r13, mov_r13_rsi, push_r12, lea_r12_[r@@ di+4], push_rbp, push_rbx, sub_rsp_0x18, mov_esi_dword_ptr_[r@@ di], mov_edi_esi, mov_dword_ptr_[rsp+0xc]_esi, call_0xffffffffffff9@@ 70@@ c, mov_ebp_eax, add_rbp@@ _r12, mov_r15d_dword_ptr_[r@@ bp], add_rbp@@ _4, mov_edi_r15d, call_0xffffffffffff96@@ f7, mov_eax_eax, add_rax_rbp, mov_esi_dword_ptr_[rsp+0xc], lea_r8@@ _[rax@@ +4], mov_ebx_dword_ptr_[rax], mov_rdi_r12, mov_ecx_r14d, mov_rdx_r13, mov_qword_ptr_[rsp]_r8, call_0xffffffffffff9@@ 706, xor_edx_edx, div@@ _ebx, mov_ecx_r14d, mov_esi_r15d, mov_rdi_rbp, mov_r12d_edx, mov_rdx_r13, call_0xffffffffffff96@@ ee, xor_edx_edx, div@@ _ebx, mov_r8_qword_ptr_[rsp], cmp_r12d_edx, je_0x1e, mov_eax_edx, lea_rax_[r@@ 8@@ +rax*4], mov_eax_dword_ptr_[rax], add_eax_dword_ptr_[r@@ 8+r@@ 12*4], add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_edx_[r@@ 12+1], mov_rax_r8, cmp_ebx@@ _edx, jb_0xffffffffffffff@@ e0, lea_rax_[r@@ 8@@ +rdx*4], jmp_0xffffffffffffffd@@ a
endbr64, push_r12, mov_edi@@ _0x70, call_0xfffffffffffea@@ ba@@ 5, mov_byte_ptr_[rax+0x@@ 38]@@ _0x80, mov_qword_ptr_[rax]_0, mov_r12_rax, mov_esi_1, movabs_rax@@ _0x4@@ 00000000, mov_edi_0xa, mov_qword_ptr_[r12+8]_rax, mov_qword_ptr_[r12+0x@@ 20]_0, mov_qword_ptr_[r12+0x@@ 28]_0, mov_qword_ptr_[r12+0x@@ 30]_0, mov_qword_ptr_[r12+0x@@ 40]_0, mov_qword_ptr_[r12+0x@@ 48]_0, mov_qword_ptr_[r12+0x@@ 50]_0, mov_dword_ptr_[r12+0x@@ 58]@@ _0x100000, call_0xfffffffffffea@@ f@@ 5a, movabs_rdx@@ _0x7@@ 0@@ 6d@@ 7@@ 42@@ f7@@ 26@@ 17@@ 6@@ 2f, mov_qword_ptr_[rax]_rdx, mov_edx_0x2@@ f, mov_word_ptr_[rax+@@ 8]_dx, mov_qword_ptr_[r12+0x@@ 60]_rax, mov_qword_ptr_[r12+0x@@ 68]_0, mov_rax_r12, pop_r12, ret
endbr64, push_rbp, mov_rbp_qword_ptr_[r@@ di+0x20], mov_rdi_qword_ptr_[rbp+0x@@ 60], call_0xfffffffffffea@@ c@@ 23, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffff@@ ea@@ c@@ 1@@ a
endbr64, mov_edx_dword_ptr_[rsi], cmp_edx_1, je_0x28, mov_r8_qword_ptr_[r@@ di+0x20], mov_eax_1, mov_dword_ptr_[r@@ 8@@ +rax*4@@ -@@ 4]_edx, cmp_eax_3, sete_dil, mov_edx_dword_ptr_[r@@ si@@ +rax*4], cmp_edx_1, sete_cl, inc_rax, or@@ _dil@@ _cl, je_0xffffffffffffffe5, ret
endbr64, test_esi_esi, je_0xc, mov_rax_qword_ptr_[rdi+0x20], shl_esi@@ _0x14, mov_dword_ptr_[rax+0x@@ 5@@ 8]_esi, ret
endbr64, test_rsi_rsi, je_0x69, push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_r12_qword_ptr_[r@@ di+0x20], mov_rdi_rsi, call_0xfffffffffffea@@ ba@@ 9, mov_rdi_qword_ptr_[r12+0x@@ 60], mov_rbx_rax, call_0xfffffffffffea@@ b@@ 8c, cmp_byte_ptr_[r@@ bp+r@@ bx@@ -1]_0x2f, je_0x4a, lea_rdi_[r@@ bx+2], mov_esi_1, call_0xfffffffffffea@@ e@@ 67, mov_qword_ptr_[r12+0x@@ 60]_rax, mov_r8_rbp, mov_rdi_rax, pop_rbx, pop_rbp, lea_rcx_[rip+0xa@@ fc@@ 6], mov_rdx_-1, mov_esi_1, xor_eax_eax, pop_r12, jmp_0xfffffffffff@@ ea@@ ec@@ e, ret, lea_rdi_[r@@ bx+1], mov_esi_1, call_0xfffffffffffea@@ e@@ 1f, mov_qword_ptr_[r12+0x@@ 60]_rax, mov_rsi_rbp, mov_rdi_rax, pop_rbx, pop_rbp, pop_r12, jmp_0xfffffffffff@@ ea@@ da@@ b
endbr64, mov_rax_qword_ptr_[rdi+0x20], mov_qword_ptr_[rax+0x6@@ 8]_rsi, test_rsi_rsi, je_@@ 3, ret, push_rax, lea_rcx_[rip+0xb@@ 13@@ 6], mov_edx_0x6@@ 7, lea_rsi_[rip+0xa@@ f5@@ 6], lea_rdi_[rip+0x@@ af@@ 6a], call_0xfffffffffffea@@ 95@@ 3
endbr64, lea_edx_[r@@ si-0x@@ 41], cmp_edx@@ _0x6e, mov_edx_0x80, mov_rax_qword_ptr_[rdi+0x20], cmovae@@ _esi@@ _edx, mov_byte_ptr_[rax+0x@@ 38@@ ]_sil, ret
endbr64, cmp_esi_1, je_9, cmp_esi@@ _4, je_4, ret, mov_rax_qword_ptr_[rdi+0x20], mov_dword_ptr_[rax+0x@@ c]_esi, ret
endbr64, push_r15, mov_r15_rdi, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0xb8, mov_r13_qword_ptr_[r@@ di+0x20], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xa8]_rax, xor_eax_eax, mov_eax_dword_ptr_[r13+0x@@ c], cmp_eax_1, je_0x10@@ da, cmp_eax_4, jne_0x13@@ 2b, movsd_xmm1_qword_ptr_[rip+0x@@ a0@@ bb], comisd@@ _xmm1_xmm0, jb@@ _0xa, movsd_xmm0_qword_ptr_[rip+0x@@ a@@ 1b@@ 5], movsd_qword_ptr_[r@@ 13+0x1@@ 0]_xmm0, mov_rax_qword_ptr_[r15+8], pxor_xmm1_xmm1, mov_eax_dword_ptr_[rax+8], pxor_xmm0_xmm0, cvtsi2sd_xmm1_rax, mov_dword_ptr_[r13+0x1@@ 8]_eax, movzx_eax_byte_ptr_[r@@ 13+0x38], movsd_xmm3@@ _qword_ptr_[rip+0x@@ a@@ 1a@@ a], cvtsi2sd_xmm0_eax, movsd@@ _xmm7@@ _qword_ptr_[rip+0x@@ a@@ 16@@ 6], divsd@@ _xmm1_xmm0, movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm7@@ _xmm2, movapd_xmm0_xmm1, ja_0x10@@ 3a, cvttsd2si@@ _rdi@@ _xmm0, mov_esi_1, mov_dword_ptr_[r13+0x@@ 3c]@@ _edi, mov_ebp_edi, mov_edi@@ _edi, call_0xfffffffffffea@@ cc@@ 2, mov_qword_ptr_[r13+0x@@ 20]_rax, mov_ebx_dword_ptr_[r@@ 15+0x10], test_ebx_ebx, jne_0x10@@ 83, mov_dword_ptr_[rsp+0x4@@ 4]@@ _0x14, mov_qword_ptr_[rsp+0x30]@@ _r13, mov_qword_ptr_[rsp+8]@@ _r15, mov_esi_ebp, mov_rbx_qword_ptr_[rsp+0x30], mov_edi_dword_ptr_[r@@ bx+8], call_0xffffffffffff90@@ 88, mov_qword_ptr_[rbx+0x@@ 50]_rax, mov_r15_qword_ptr_[rsp+8], mov_rbx_qword_ptr_[r@@ 15+0x20], mov_edi_dword_ptr_[rbx+0x@@ 58], call_0xfffffffffffea@@ 85@@ 3, mov_edi_dword_ptr_[rbx+0x@@ 3c], mov_esi_4, mov_r12_rax, call_0xfffffffffffea@@ c@@ 63, mov_qword_ptr_[rsp+0x90]_0, mov_rbp_rax, mov_rax_qword_ptr_[r15+8], mov_rdi_qword_ptr_[rax], call_qword_ptr_[rax+0x20], mov_eax_dword_ptr_[rbx+0x18], mov_dword_ptr_[rsp+4]_eax, test_eax_eax, je_0x@@ ff@@ 4, lea_rax_[rsp+0x@@ 84], mov_qword_ptr_[rsp+0x20]_rax, lea_rax_[rsp+0x90], mov_dword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+4]_0, mov_qword_ptr_[rsp+0x28]_rax, xor_r14d_r14d, xor_r13d_r13d, jmp_0x41, inc@@ _ecx, mov_byte_ptr_[rsi@@ ]_cl, mov_rax_qword_ptr_[rsp+8], inc_dword_ptr_[r@@ bp@@ +rdx*4], mov_rax_qword_ptr_[rax+8], mov_edx_dword_ptr_[rsp+0x@@ 84], mov_rdi_qword_ptr_[rax], mov_rsi_qword_ptr_[rsp+0x90], lea_r14d_[r@@ 15+1], call_qword_ptr_[rax+0x18], inc_dword_ptr_[r@@ sp+0x10], mov_eax_dword_ptr_[rsp+0x10], cmp_eax_dword_ptr_[r@@ bx+0x18], jae_0x@@ 30@@ 3, mov_rax_qword_ptr_[rsp+8], mov_rdx_qword_ptr_[rsp+0x20], mov_rax_qword_ptr_[rax+8], mov_rsi_qword_ptr_[rsp+0x28], mov_rdi_qword_ptr_[rax], call_qword_ptr_[rax+0x10], mov_r8d_dword_ptr_[rsp+0x@@ 84], mov_edx_dword_ptr_[rbx+0x@@ 58], lea_eax_[r@@ 8+r@@ 13], mov_rcx_rax, add_rax_4, cmp_rax_rdx, ja@@ _0xfb, lea_rax_[r@@ 12+r@@ 13], mov_r15d_r14d, add_r13@@ _4, mov_r14@@ _qword_ptr_[rsp+0x90], mov_dword_ptr_[rax]@@ _r8d, lea_rdi_[r@@ 12+r@@ 13], mov_edx_r8d, mov_rsi_r14, mov_dword_ptr_[rsp+0x4@@ 0]_ecx, mov_dword_ptr_[rsp+0x18]_r8d, call_0xfffffffffffea@@ c@@ f4, mov_r8d_dword_ptr_[rsp+0x18], mov_ecx_dword_ptr_[rsp+0x@@ 40], mov_rdi_qword_ptr_[rbx+0x50], mov_edx_r8d, mov_rsi_r14, lea_r13d_[r@@ cx+4], call_0xffffffffffff8f@@ 88, xor_edx_edx, div@@ _dword_ptr_[rbx+0x@@ 3c], mov_rsi_qword_ptr_[rbx+0x20], add_rsi_rdx, movzx_ecx_byte_ptr_[r@@ si], cmp_cl@@ _0xff, je_0x41, cmp_dword_ptr_[rbx+0x@@ c]_1, jne_0xffffffffffffff@@ 2b, movsd_xmm1_qword_ptr_[r@@ bx+0x10], comisd@@ _xmm1_xmmword_ptr_[r@@ ip+0x@@ 9f@@ 88], jb_0xffffffffffffff@@ 18, movzx_eax@@ _cl, pxor_xmm0_xmm0, cvtsi2sd_xmm0_eax, mulsd_xmm0_xmm1, cvttsd2si_eax_xmm0, cmp_cl@@ _al, jbe_0xfffffffffffffe@@ fd, mov_rdi_r12, call_0xfffffffffffea@@ 7f@@ d, mov_rdi_rbp, call_0xfffffffffffea@@ 7f@@ 5, mov_rbx_qword_ptr_[rsp+0x30], dec@@ _dword_ptr_[rsp+0x@@ 44], mov_rdi_qword_ptr_[rbx+0x50], call_0xffffffffffff9@@ 11@@ 3, mov_qword_ptr_[rbx+0x@@ 50]_0, mov_rax_qword_ptr_[rsp+8], mov_ecx_dword_ptr_[r@@ ax+0x10], test_ecx_ecx, jne_0xd@@ 54, mov_edx_dword_ptr_[rsp+0x@@ 44], test_edx_edx, je_0xd@@ 75, mov_rax_qword_ptr_[rsp+0x30], mov_esi_dword_ptr_[rax+0x@@ 3c], jmp_0xfffffffffffffe@@ 12, mov_rax_qword_ptr_[rsp+8], mov_r11d_dword_ptr_[r@@ ax+0x10], test_r11d_r11d, jne_0x1@@ 9c, mov_edx_dword_ptr_[rbx+0x@@ 3c], mov_ecx_dword_ptr_[r@@ bp], mov_dword_ptr_[rbp]_0, cmp_edx_1, jbe_0x@@ 2b, sub_edx_2, lea_rdi_[r@@ bp@@ +rdx*4@@ +8], lea_rax_[r@@ bp+4], xor_edx_edx, mov_esi_dword_ptr_[rax], test_esi_esi, je_8, add_edx_ecx, mov_dword_ptr_[rax]_edx, mov_ecx_esi, add_rax_4, cmp_rdi_rax, jne_0xffffffffffffffed, mov_edi_r14d, mov_esi_4, call_0xfffffffffffeaa@@ 43, mov_r13_rax, xor_r10d_r10d, xor_r15d_r15d, test_r14d_r14d, je_0xc@@ 62, mov_dword_ptr_[rsp+0x18]@@ _r14d, mov_r13_rbp, mov_r14_rax, mov_eax_r15d, mov_ebp_dword_ptr_[r@@ 12+rax], mov_rdi_qword_ptr_[rbx+0x50], lea_rsi_[r@@ 12@@ +rax+4], mov_edx_ebp, mov_dword_ptr_[rsp+0x40]@@ _r10d, call_0xffffffffffff8e@@ 49, xor_edx_edx, div@@ _dword_ptr_[rbx+0x@@ 3c], mov_r10d_dword_ptr_[rsp+0x@@ 40], inc@@ _r10d, lea_rdx_[r@@ 13@@ +rdx*4], mov_esi_dword_ptr_[r@@ dx], mov_rax_rsi, inc_eax, mov_dword_ptr_[r@@ 14+r@@ si*@@ 4]_r15d, mov_dword_ptr_[rdx]_eax, lea_r15d_[r@@ 15+r@@ bp+4], cmp_r10d@@ _dword_ptr_[r@@ sp+0x18], jne_0xffffffffffffffbb, mov_rbp_r13, mov_r13_r14, mov_r14_qword_ptr_[r@@ bx+0x60], mov_dword_ptr_[rsp+0x18]_r10d, mov_rdi_r14, call_0xfffffffffffea@@ 6e@@ 7, lea_rdi_[rax+0x@@ b], mov_esi_1, call_0xfffffffffffea@@ 9b@@ 9, mov_r9d_dword_ptr_[r@@ sp+4], mov_r15_rax, mov_r8_r14, lea_rcx_[rip+0x@@ ab@@ 84], mov_rdx_-1, mov_rdi_rax, mov_esi_1, xor_eax_eax, call_0xfffffffffffeaa@@ 21, mov_rdi_r15, lea_rsi_[rip+0x7c@@ d1], call_0xfffffffffffeaa@@ 62, mov_rdi_r15, mov_r14_rax, call_0xfffffffffffea@@ 68@@ 7, mov_r10d_dword_ptr_[rsp+0x18], mov_r15_r13, lea_eax_[r@@ 10@@ -1], lea_rax_[r@@ 13@@ +rax*4@@ +4], mov_qword_ptr_[rsp+0x18]_rax, mov_edi_dword_ptr_[r@@ 15], mov_rcx_r14, add_rdi@@ _r12, mov_edx_dword_ptr_[rdi], mov_esi_1, add_rdx_4, add_r15@@ _4, call_0xfffffffffffeaa@@ 40, cmp_qword_ptr_[rsp+0x1@@ 8]_r15, jne_0xffffffffffffffde, mov_edx_dword_ptr_[rbx+0x@@ 3c], xor_esi_esi, shl_rdx_2, mov_rdi_rbp, call_0xfffffffffffea@@ 3c8, mov_rdi_r13, inc_dword_ptr_[r@@ sp+4], call_0xfffffffffffea@@ 6@@ 2c, mov_rdi_r14, call_0xfffffffffffea@@ 95@@ 4, mov_r8d_dword_ptr_[rsp+0x@@ 84], mov_rax_r12, mov_r13d@@ _4, xor_r15d_r15d, mov_ecx_r8d, jmp_0xfffffffffffffd@@ 76, mov_rax_qword_ptr_[rip+0x@@ 12@@ b6@@ 1], mov_ecx_r14d, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x@@ aa@@ 9d], mov_esi_1, xor_eax_eax, call_0xfffffffffffea@@ 3c@@ 5, jmp_0xfffffffffffffe@@ 4a, test_r13d_r13d, je_0x1@@ 8b, mov_rax_qword_ptr_[rsp+8], mov_r10d_dword_ptr_[r@@ ax+0x10], test_r10d_r10d, jne_0x@@ be@@ b, mov_edx_dword_ptr_[rbx+0x@@ 3c], mov_esi_dword_ptr_[r@@ bp], mov_dword_ptr_[rbp]_0, cmp_edx_1, jbe_0x@@ 2a, sub_edx_2, lea_rdi_[r@@ bp@@ +rdx*4@@ +8], lea_rax_[r@@ bp+4], xor_edx_edx, mov_ecx_dword_ptr_[rax], test_ecx_ecx, je_8, add_edx@@ _esi, mov_dword_ptr_[rax]_edx, mov_esi_ecx, add_rax_4, cmp_rdi_rax, jne_0xffffffffffffffed, mov_edi_r14d, mov_esi_4, call_0xfffffffffffea@@ 86@@ b, mov_r13_rax, xor_r8d_r8d, xor_ecx_ecx, test_r14d_r14d, je_0xc@@ d3, mov_qword_ptr_[rsp+0x10]@@ _rbp, mov_dword_ptr_[rsp+0x18]@@ _r15d, mov_r14d_ecx, mov_r15_r12, mov_r12d_r8d, mov_eax_r14d, mov_ebp_dword_ptr_[r@@ 15+rax], mov_rdi_qword_ptr_[rbx+0x50], lea_rsi_[r@@ 15@@ +rax+4], mov_edx_ebp, call_0xffffffffffff8c@@ 6e, xor_edx_edx, div@@ _dword_ptr_[rbx+0x@@ 3c], mov_rax_qword_ptr_[rsp+0x10], lea_rdx_[rax@@ +rdx*4], mov_esi_dword_ptr_[r@@ dx], mov_rax_rsi, inc_eax, mov_dword_ptr_[rdx]_eax, mov_eax_r12d, mov_dword_ptr_[r@@ 13+r@@ si*@@ 4]_r14d, inc_r12d, lea_r14d_[r@@ bp+r@@ 14+4], cmp_dword_ptr_[rsp+0x1@@ 8]_eax, jne_0xffffffffffffffbe, mov_r14_qword_ptr_[r@@ bx+0x60], mov_rbp_qword_ptr_[rsp+0x10], mov_rdi_r14, call_0xfffffffffffea@@ 5@@ 10, lea_rdi_[rax+0x@@ b], mov_esi_1, mov_r12_r15, mov_r15d_dword_ptr_[r@@ sp+0x18], call_0xfffffffffffea@@ 7d@@ a, mov_r9d_dword_ptr_[r@@ sp+4], mov_r8_r14, mov_rdi_rax, lea_rcx_[rip+0xa@@ 9a@@ 5], mov_rdx_-1, mov_qword_ptr_[rsp+0x10]_rax, mov_esi_1, xor_eax_eax, call_0xfffffffffffea@@ 840, mov_rdi_qword_ptr_[rsp+0x10], lea_rsi_[rip+0x7a@@ ee], call_0xfffffffffffea@@ 87@@ f, mov_rdi_qword_ptr_[rsp+0x10], mov_r14_rax, lea_r15_[r@@ 13+r@@ 15@@ *4+4], call_0xfffffffffffea@@ 4@@ 9d, mov_qword_ptr_[rsp+0x10]_rbx, mov_rbx_r14, mov_r14_r13, mov_edi_dword_ptr_[r@@ 14], mov_rcx_rbx, add_rdi@@ _r12, mov_edx_dword_ptr_[rdi], mov_esi_1, add_rdx_4, add_r14@@ _4, call_0xfffffffffffea@@ 860, cmp_r15@@ _r14, jne_0xffffffffffffffe0, mov_r14_rbx, mov_rbx_qword_ptr_[rsp+0x10], mov_rdi_r13, inc_dword_ptr_[r@@ sp+4], call_0xfffffffffffea@@ 45@@ 7, mov_rdi_r14, call_0xfffffffffffea@@ 77@@ f, mov_rdi_r12, call_0xfffffffffffea@@ 44@@ 7, mov_rdi_rbp, call_0xfffffffffffea@@ 4@@ 3f, cmp_dword_ptr_[rsp+@@ 4]@@ _0x400, ja_0xfffffffffffffc@@ 42, mov_rax_qword_ptr_[rsp+8], mov_r9d_dword_ptr_[r@@ ax+0x10], test_r9d_r9d, jne_0xa@@ 20, lea_rax_[rip+0x@@ 12@@ d@@ 13], mov_rbp_qword_ptr_[r@@ ax+0x18], mov_rdi_rbp, call_0xfffffffffffea@@ 4@@ 1c, mov_rcx_qword_ptr_[rbx+0x@@ 68], lea_rsi_[rax+1], mov_edx_1, mov_rdi_rbp, call_0xfffffffffffea@@ 7e@@ 7, mov_rcx_qword_ptr_[rbx+0x@@ 68], lea_rdi_[r@@ bx+0x18], mov_edx_1, mov_esi_4, call_0xfffffffffffea@@ 7d@@ 0, mov_rcx_qword_ptr_[rbx+0x@@ 68], lea_rdi_[r@@ bx+0x10], mov_edx_1, mov_esi_8, call_0xfffffffffffea@@ 7b@@ 9, mov_rcx_qword_ptr_[rbx+0x@@ 68], lea_rdi_[rbx+0x@@ c], mov_edx_1, mov_esi_4, call_0xfffffffffffea@@ 7a@@ 2, mov_rcx_qword_ptr_[rbx+0x@@ 68], lea_rdi_[rbx+0x@@ 3c], mov_edx_1, mov_esi_4, call_0xfffffffffffea@@ 78@@ b, mov_rcx_qword_ptr_[rbx+0x@@ 68], mov_esi_dword_ptr_[rbx+0x@@ 3c], mov_rdi_qword_ptr_[rbx+0x20], mov_edx_1, call_0xfffffffffffea@@ 77@@ 6, test_rax_rax, jne_0x13, mov_rdi_qword_ptr_[rbx+0x@@ 68], call_0xfffffffffffea@@ 3c8, test_eax_eax, jne_0xa@@ 61, mov_ebp_dword_ptr_[r@@ sp+4], mov_edi_dword_ptr_[rbx+0x@@ 58], mov_esi_ebp, call_0x1b@@ 52, mov_esi_8, mov_rdi_rbp, mov_qword_ptr_[rsp+0x38]_rax, call_0xfffffffffffea@@ 640, mov_esi_4, mov_rdi_rbp, mov_qword_ptr_[rsp+0x28]_rax, call_0xfffffffffffea@@ 6@@ 2e, mov_qword_ptr_[rsp+0x18]_rax, test_ebp_ebp, je_0xec, mov_eax_dword_ptr_[rsp+4], mov_r13@@ _qword_ptr_[rsp+0x38], lea_r12d@@ _[rax-1], lea_rax_[rsp+0x@@ 84], mov_r14_rbx, xor_ebp_ebp, mov_rbx_rax, mov_r8_qword_ptr_[r@@ 14+0x@@ 60], mov_rdi_r8, mov_qword_ptr_[rsp+0x10]_r8, call_0xfffffffffffea@@ 30@@ c, lea_rdi_[rax+0x@@ b], mov_esi_1, call_0xfffffffffffea@@ 5d@@ e, mov_r8_qword_ptr_[rsp+0x10], mov_r9d_ebp, lea_rcx_[rip+0xa@@ 7a@@ c], mov_r15_rax, mov_rdi_rax, mov_rdx_-1, mov_esi_1, xor_eax_eax, call_0xfffffffffffea@@ 64@@ 6, mov_esi_ebp, mov_rdx_r15, mov_rdi_r13, call_0x1b@@ 79, mov_rdi_r15, call_0xfffffffffffea@@ 2b@@ 1, mov_esi_ebp, mov_rdx_rbx, mov_rdi_r13, call_0x1b@@ 84, mov_edx_dword_ptr_[rsp+0x@@ 84], mov_rdi_qword_ptr_[r14+0x@@ 50], lea_rsi_[rax@@ +4], mov_qword_ptr_[rsp+0x90]_rax, call_0xffffffffffff8@@ 9b8, xor_edx_edx, div_dword_ptr_[r@@ 14+0x@@ 3c], mov_rax_qword_ptr_[rsp+0x18], mov_rcx_qword_ptr_[rsp+0x28], mov_dword_ptr_[rax+r@@ bp*@@ 4]_edx, mov_rax_qword_ptr_[rsp+0x90], mov_qword_ptr_[rsp+0x90]_0, mov_qword_ptr_[rcx@@ +r@@ bp*@@ 8]_rax, mov_rax_rbp, inc_rbp, cmp_r12_rax, jne_0xffffffffffffff@@ 47, mov_rbx_r14, mov_esi_8, mov_edi@@ _0xff, call_0xfffffffffffea@@ 5@@ 2c, mov_r8d_dword_ptr_[r@@ bx+0x18], mov_qword_ptr_[rsp+0x10]_rax, test_r8d_r8d, je_0x113, lea_rax_[rsp+0x@@ 84], mov_qword_ptr_[rsp+0x20]_rax, mov_eax_dword_ptr_[rsp+4], mov_dword_ptr_[rsp+0x40]_0, sub_eax_2, add_rax_2, mov_qword_ptr_[rsp+0x50]_rax, xor_ebp_ebp, mov_rax_qword_ptr_[rsp+0x18], xor_r15d_r15d, xor_r14d_r14d, cmp_dword_ptr_[rsp+@@ 4]_1, mov_r12d_dword_ptr_[rax], lea_rdx_[rax+4], mov_r13_qword_ptr_[r@@ sp+0x18], mov_eax_1, ja_0x2@@ 1, jmp_0x40, mov_rcx_qword_ptr_[rsp+0x18], mov_r14d@@ _r15d, inc_rax, lea_r13_[r@@ cx+r@@ 14*4], add_rdx_4, cmp_qword_ptr_[rsp+0x@@ 50]_rax, je_0x23, mov_ecx_dword_ptr_[rdx], mov_r13_rdx, cmp_ecx@@ _r12d, jae_0xffffffffffffff@@ de, mov_r14_rax, mov_r15d_eax, inc_rax, mov_r12d_ecx, add_rdx_4, cmp_qword_ptr_[rsp+0x@@ 50]_rax, jne_0xffffffffffffffe1, mov_rdx_qword_ptr_[rsp+0x20], mov_rdi_qword_ptr_[rsp+0x38], mov_esi_r15d, call_0x1a@@ 68, mov_qword_ptr_[rsp+0x90]_rax, test_rax_rax, jne_0x1@@ c0, mov_rax_qword_ptr_[rbx+0x20], mov_r15d@@ _r12d, cmp_byte_ptr_[r@@ ax+r@@ 15@@ ]_bpl, jbe_0x@@ a0@@ 3, mov_rax_qword_ptr_[rsp+0x28], mov_rsi_qword_ptr_[rsp+0x10], lea_rax_[rax+r@@ 14*8], mov_rcx_qword_ptr_[rax], movzx_edx@@ _bpl, mov_qword_ptr_[rsi@@ +rdx*@@ 8]_rcx, mov_qword_ptr_[rax]_0, inc_ebp, mov_rax_qword_ptr_[rbx+0x20], inc@@ _dword_ptr_[rsp+0x@@ 40], mov_dword_ptr_[r13@@ ]_0xffffffff, cmp_byte_ptr_[r@@ ax+r@@ 15@@ ]_bpl, je_0x2@@ 43, mov_eax_dword_ptr_[rsp+0x40], cmp_dword_ptr_[rbx+0x1@@ 8]_eax, ja_0xffffffffffffff@@ 26, mov_rdi_qword_ptr_[rsp+0x38], mov_r13_qword_ptr_[rsp+0x30], mov_r15_qword_ptr_[rsp+8], call_0x1a@@ 89, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffea@@ 0@@ ff, mov_rdi_qword_ptr_[rsp+0x28], call_0xfffffffffffea@@ 0@@ f5, mov_rdi_qword_ptr_[rsp+0x18], call_0xfffffffffffea@@ 0@@ eb, mov_edi_dword_ptr_[r@@ 13+0x@@ 3c], mov_esi_4, mov_rbx_rdi, call_0xfffffffffffea@@ 3c@@ a, mov_qword_ptr_[r13+0x@@ 28]_rax, mov_edx_1, cmp_ebx_1, ja@@ _0xd, jmp_0x26, mov_rax_qword_ptr_[r13+0x@@ 28], mov_rcx_qword_ptr_[r@@ 13+0x20], lea_esi_[rdx@@ -1], movzx_ecx_byte_ptr_[r@@ cx+r@@ si], mov_edi_edx, add_ecx_dword_ptr_[r@@ ax+r@@ si*4], mov_dword_ptr_[rax+r@@ di*@@ 4]_ecx, inc_edx, cmp_dword_ptr_[r13+0x@@ 3@@ c]_edx, ja_0xffffffffffffff@@ e3, mov_edi_0x18, call_0xfffffffffffe@@ 9f@@ 6c, mov_r12_rax, mov_eax_dword_ptr_[r15], mov_edi_0x4@@ 8, mov_dword_ptr_[r12]_eax, call_0xfffffffffffe@@ 9f@@ 58, mov_rdx_qword_ptr_[r13+0x@@ 30], mov_qword_ptr_[rax+0x20]_rdx, mov_qword_ptr_[r13+0x@@ 30]_0, mov_rdx_qword_ptr_[r13+0x@@ 40], mov_qword_ptr_[rax+0x30]_rdx, mov_qword_ptr_[r13+0x@@ 40]_0, mov_rdx_qword_ptr_[r13+0x@@ 48], mov_qword_ptr_[rax+0x38]_rdx, mov_qword_ptr_[r13+0x@@ 48]_0, mov_rdx_qword_ptr_[r13+0x@@ 50], mov_qword_ptr_[rax+0x40]_rdx, mov_qword_ptr_[r13+0x@@ 50]_0, mov_rdx_qword_ptr_[r@@ 13+0x20], mov_qword_ptr_[rax+0x10]_rdx, mov_qword_ptr_[r13+0x@@ 20]_0, mov_rdx_qword_ptr_[r@@ 13+0x28], mov_qword_ptr_[rax+0x18]_rdx, mov_qword_ptr_[r13+0x@@ 28]_0, mov_edx_dword_ptr_[r13+0x@@ 3c], mov_dword_ptr_[rax+0x28]_edx, movsd_xmm0_qword_ptr_[r@@ 13+0x10], movsd_qword_ptr_[r@@ ax+@@ 8]_xmm0, mov_edx_dword_ptr_[r@@ 13+0x18], mov_dword_ptr_[rax+4]_edx, mov_edx_dword_ptr_[r13+0x@@ c], mov_qword_ptr_[r12+0x10]_rax, mov_dword_ptr_[rax]_edx, mov_eax_dword_ptr_[r@@ 13+0x18], mov_dword_ptr_[r12+@@ 4]_eax, mov_eax_dword_ptr_[r@@ 15+0x10], test_eax_eax, jne_0x7@@ 18, mov_rax_qword_ptr_[rsp+0xa8], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ 8d@@ 2, add_rsp_0xb8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_dword_ptr_[rsp+0x4@@ 8]_r15d, jmp_0x5@@ 3, mov_rax_qword_ptr_[rsp+0x90], mov_rcx_qword_ptr_[rsp+0x10], lea_r15d_[r@@ bp+1], movzx_ebp@@ _bpl, mov_qword_ptr_[rcx@@ +r@@ bp*@@ 8]_rax, mov_rdx_qword_ptr_[rsp+0x20], mov_esi_dword_ptr_[rsp+0x@@ 48], mov_rdi_qword_ptr_[rsp+0x38], inc@@ _dword_ptr_[rsp+0x@@ 40], mov_qword_ptr_[rsp+0x90]_0, call_0x1@@ 85@@ 9, mov_qword_ptr_[rsp+0x90]_rax, test_rax_rax, je_0x3@@ 09, mov_ebp@@ _r15d, mov_edx_dword_ptr_[rsp+0x@@ 84], mov_rdi_qword_ptr_[rbx+0x50], lea_rsi_[rax@@ +4], call_0xffffffffffff86@@ 81, xor_edx_edx, div@@ _dword_ptr_[rbx+0x@@ 3c], cmp_edx@@ _r12d, je_0xffffffffffffff@@ 94, mov_rax_qword_ptr_[rbx+0x20], mov_rcx_qword_ptr_[rsp+0x@@ 90], mov_r15d@@ _r12d, movzx_esi_byte_ptr_[r@@ ax+r@@ 15], test_rcx_rcx, je_0xfffffffffffffd@@ c0, cmp_bpl@@ _sil, jae_0x@@ 7@@ 9f, mov_rax_qword_ptr_[rsp+0x28], mov_r11_qword_ptr_[rsp+0x10], lea_rax_[rax+r@@ 14*8], mov_rdi_qword_ptr_[rax], movzx_esi@@ _bpl, mov_qword_ptr_[r@@ 11+r@@ si*@@ 8]_rdi, mov_qword_ptr_[rax]_rcx, inc_ebp, mov_rax_qword_ptr_[rbx+0x20], inc@@ _dword_ptr_[rsp+0x@@ 40], mov_dword_ptr_[r13@@ ]_edx, cmp_byte_ptr_[r@@ ax+r@@ 15@@ ]_bpl, jne_0xfffffffffffffd@@ c9, mov_rdi_qword_ptr_[rsp+0x10], movzx_esi@@ _bpl, call_0xffffffffffff@@ 65@@ 2f, mov_rdi_rax, mov_qword_ptr_[rsp+0x48]_rax, call_0xffffffffffff66@@ d2, mov_esi_dword_ptr_[rbx+0x@@ c], mov_rdi_rax, mov_r13_rax, call_0xffffffffffff67@@ 14, movsd_xmm0_qword_ptr_[r@@ bx+0x10], mov_rdi_r13, call_0xffffffffffff6a@@ b7, mov_rdi_r13, call_0xffffffffffff6a@@ bf, mov_r14_rax, mov_rax_qword_ptr_[rsp+8], test_r14_r14, je_0x6@@ 6f, mov_esi_dword_ptr_[r@@ ax+0x10], test_esi_esi, je_0x17, imul_eax@@ _r12d@@ _0x2@@ 6e@@ 97@@ 8d@@ 5, ror_eax@@ _3, cmp_eax_0x4@@ 18@@ 93@@ 7, jbe_0x@@ 45@@ 3, mov_eax_dword_ptr_[rbx+0xc], cmp_eax_1, jne_0x2@@ 27, movsd_xmm1_qword_ptr_[r@@ bx+0x10], mov_rax_qword_ptr_[rbx+0x20], mov_r10_qword_ptr_[r@@ 14+0x10], mov_dword_ptr_[rsp+0x8@@ 8]_0, mov_dword_ptr_[rsp+0x@@ 8c]_0, mov_qword_ptr_[rsp+0x98]_0, mov_qword_ptr_[rsp+0xa0]_0, pxor_xmm0_xmm0, movsd_xmm2_qword_ptr_[rip+0x@@ 9@@ 5c@@ a], movzx_eax_byte_ptr_[r@@ ax+r@@ 15], movsd@@ _xmm5@@ _qword_ptr_[rip+0x@@ 9@@ 58@@ 5], cvtsi2sd_xmm0_eax, mulsd_xmm0_xmm1, movapd_xmm1_xmm0, and@@ pd@@ _xmm1_xmm2, ucomisd@@ _xmm5@@ _xmm1, movapd@@ _xmm3@@ _xmm0, jbe_0x@@ 2d, cvttsd2si_rax_xmm0, pxor_xmm1_xmm1, movsd@@ _xmm6@@ _qword_ptr_[rip+0x@@ 9@@ 55@@ 2], and@@ n@@ pd@@ _xmm2@@ _xmm3, cvtsi2sd_xmm1_rax, cmp@@ n@@ l@@ e@@ sd_xmm0_xmm1, and@@ pd@@ _xmm0_xmm@@ 6, addsd_xmm0_xmm1, or@@ pd@@ _xmm0_xmm2, mov_rax_qword_ptr_[r@@ 10@@ +0x10], lea_rdx_[rsp+0x@@ 88], mov_rdi_qword_ptr_[rax], lea_rsi_[rsp+0x@@ 98], cvttsd2si@@ _r12@@ _xmm0, mov_qword_ptr_[rsp+0x5@@ 8]_r10, call_0xffffffffffff8@@ 55@@ 7, mov_r10@@ _qword_ptr_[rsp+0x58], lea_rdx_[rsp+0x@@ 8c], mov_rax_qword_ptr_[r@@ 10@@ +0x10], lea_rsi_[rsp+0xa0], mov_rdi_qword_ptr_[rax+8], mov_qword_ptr_[rsp+0x7@@ 8]_r10, call_0xffffffffffff@@ 85@@ 30, mov_r15d_dword_ptr_[rsp+0x@@ 88], mov_r8d_dword_ptr_[rsp+0x@@ 8c], mov_qword_ptr_[rsp+0x5@@ 8]_r12, lea_eax_[r@@ 15+r@@ 8+8], lea_r9d@@ _[rax+r@@ 12], mov_rdi_r9, mov_qword_ptr_[rsp+0x7@@ 0]_r9, mov_dword_ptr_[rsp+0x6@@ 0]_r8d, call_0xfffffffffffe9c@@ 30, mov_dword_ptr_[rax]@@ _r15d, mov_r11@@ _qword_ptr_[rsp+0x98], lea_rdi_[rax+4], mov_rsi_r11, mov_rdx_r15, mov_qword_ptr_[rsp+0x6@@ 8]_r11, mov_r12_rax, call_0xfffffffffffea@@ 1b@@ e, mov_r8d_dword_ptr_[rsp+0x@@ 60], mov_rsi_qword_ptr_[rsp+0xa0], mov_dword_ptr_[r12@@ +r@@ 15+@@ 4]_r8d, mov_rdx_r8, lea_rdi_[r@@ 12+r@@ 15+8], mov_qword_ptr_[rsp+0x6@@ 0]_r8, call_0xfffffffffffea@@ 19@@ a, mov_r8@@ _qword_ptr_[rsp+0x60], mov_r10@@ _qword_ptr_[rsp+0x78], lea_rdi_[r@@ 15+r@@ 8+8], mov_edx_dword_ptr_[rsp+0x@@ 58], mov_rsi_qword_ptr_[r@@ 10+8], add_rdi@@ _r12, call_0xfffffffffffea@@ 17@@ b, mov_r11@@ _qword_ptr_[rsp+0x68], mov_rdi_r11, call_0xfffffffffffe9c@@ ee, mov_rdi_qword_ptr_[rsp+0xa0], call_0xfffffffffffe9c@@ e1, mov_r9@@ _qword_ptr_[rsp+0x70], mov_rcx_qword_ptr_[rbx+0x@@ 68], mov_edx_1, mov_rsi_r9, mov_rdi_r12, call_0xfffffffffffea@@ 0@@ b8, mov_rdi_r12, call_0xfffffffffffe9c@@ c0, mov_rdi_r13, call_0xffffffffffff67@@ 48, test_bpl_bpl, je_0x33, mov_rax_qword_ptr_[rsp+0x10], dec@@ _ebp, movzx_ebp@@ _bpl, mov_r12_rax, lea_rbp@@ _[rax+r@@ bp*@@ 8+8], mov_rdi_qword_ptr_[r12], add_r12_8, call_0xfffffffffffe9c@@ 90, mov_qword_ptr_[r12@@ -8]_0, cmp_rbp_r12, jne_0xffffffffffffffe7, mov_rdi_r14, call_0xffffffffffff6c@@ 1a, mov_rdi_qword_ptr_[rsp+0x48], xor_ebp_ebp, call_0xffffffffffff64@@ 5e, jmp_0xfffffffffffffb@@ 44, mov_ebp@@ _r15d, jmp_0xfffffffffffffa@@ eb, cmp_eax_4, jne_0x@@ 50@@ 8, mov_r8_qword_ptr_[r@@ 14+0x10], mov_dword_ptr_[rsp+0x8@@ 8]_0, mov_dword_ptr_[rsp+0x@@ 8c]_0, mov_qword_ptr_[rsp+0x98]_0, mov_qword_ptr_[rsp+0xa0]_0, lea_rdx_[rsp+0x@@ 88], lea_rsi_[rsp+0x@@ 98], mov_r10d_dword_ptr_[r@@ 8+0x10], mov_rdi_qword_ptr_[r@@ 8+0x@@ 30], mov_dword_ptr_[rsp+0x6@@ 0]@@ _r10d, mov_qword_ptr_[rsp+0x5@@ 8]_r8, call_0xffffffffffff8@@ 3@@ 93, mov_r8@@ _qword_ptr_[rsp+0x58], lea_rdx_[rsp+0x@@ 8c], mov_rdi_qword_ptr_[r@@ 8+0x@@ 38], lea_rsi_[rsp+0xa0], mov_qword_ptr_[rsp+0x7@@ 8]_r8, call_0xffffffffffff8@@ 370, mov_r15d_dword_ptr_[rsp+0x@@ 88], mov_ecx_dword_ptr_[rsp+0x@@ 8c], mov_r10d_dword_ptr_[rsp+0x@@ 60], lea_eax_[r@@ 15@@ +rcx@@ +8], lea_r9d@@ _[rax+r@@ 10], mov_rdi_r9, mov_dword_ptr_[rsp+0x7@@ 0]@@ _r10d, mov_qword_ptr_[rsp+0x6@@ 8]_r9, mov_dword_ptr_[rsp+0x5@@ 8]_ecx, call_0xfffffffffffe9a@@ 6d, mov_dword_ptr_[rax]@@ _r15d, mov_r11@@ _qword_ptr_[rsp+0x98], lea_rdi_[rax+4], mov_rsi_r11, mov_rdx_r15, mov_qword_ptr_[rsp+0x6@@ 0]_r11, mov_r12_rax, call_0xfffffffffffe9@@ ff@@ b, mov_ecx_dword_ptr_[rsp+0x@@ 58], mov_rsi_qword_ptr_[rsp+0xa0], mov_dword_ptr_[r12@@ +r@@ 15+@@ 4]_ecx, mov_rdx_rcx, lea_rdi_[r@@ 12+r@@ 15+8], mov_qword_ptr_[rsp+0x5@@ 8]_rcx, call_0xfffffffffffe9@@ fd8, mov_r10d_dword_ptr_[rsp+0x@@ 70], mov_rcx_qword_ptr_[rsp+0x58], test_r10d_r10d, mov_r11@@ _qword_ptr_[rsp+0x60], mov_r9@@ _qword_ptr_[rsp+0x68], mov_r8@@ _qword_ptr_[rsp+0x78], je_0x2e, add_rcx@@ _r15, lea_esi_[r@@ 10@@ -1], xor_eax_eax, add_rcx@@ _r12, mov_rdx_qword_ptr_[r@@ 8+0x@@ 28], movzx_edx_byte_ptr_[r@@ dx+rax*4], mov_byte_ptr_[rcx@@ +rax+@@ 8]_dl, mov_rdx_rax, inc_rax, cmp_rsi_rdx, jne_0xffffffffffffffeb, mov_rdi_r11, mov_qword_ptr_[rsp+0x58]_r9, call_0xfffffffffffe9b@@ 01, mov_rdi_qword_ptr_[rsp+0xa0], call_0xfffffffffffe9a@@ f4, mov_r9@@ _qword_ptr_[rsp+0x58], jmp_0xfffffffffffffe@@ 13, mov_r14_qword_ptr_[r@@ bx+0x60], mov_rdi_r14, call_0xfffffffffffe9a@@ e9, lea_rdi_[rax+0x@@ b], mov_esi_1, call_0xfffffffffffe9d@@ bb, mov_r9d_dword_ptr_[r@@ sp+4], mov_r15_rax, mov_r8_r14, lea_rcx_[rip+0x@@ 9f@@ 86], mov_rdx_-1, mov_rdi_rax, mov_esi_1, xor_eax_eax, call_0xfffffffffffe9e@@ 23, mov_rdi_r15, lea_rsi_[rip+0x70@@ d3], call_0xfffffffffffe9e@@ 64, mov_rdi_r15, mov_r14_rax, call_0xfffffffffffe9a@@ 89, jmp_0xfffffffffffff@@ 440, mov_rax_qword_ptr_[rip+0x@@ 11@@ fd@@ 9], mov_ecx_dword_ptr_[rsp+0x@@ 44], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x9@@ fd@@ 3], mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 98@@ 3c, mov_edx_dword_ptr_[rsp+0x@@ 44], test_edx_edx, jne_0xfffffffffffff@@ 29@@ 7, mov_r13_qword_ptr_[rsp+0x30], xor_r12d_r12d, mov_rdi_qword_ptr_[r@@ 13+0x20], call_0xfffffffffffe9a@@ 3f, jmp_0xfffffffffffffa@@ 50, mov_rax_qword_ptr_[rip+0x@@ 11@@ f@@ 91], mov_r8d_dword_ptr_[rbx+0x@@ 3c], mov_rdi_qword_ptr_[rax], lea_ecx_[r@@ 12+1], lea_rdx_[rip+0x@@ 9f@@ 56], mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 97@@ ef, jmp_0xfffffffffffffb@@ 8d, mov_rax_qword_ptr_[rip+0x@@ 11@@ f6@@ 1], mov_edx_0x12, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x9@@ ea@@ 4], call_0xfffffffffffe9@@ dd@@ 5, jmp_0xfffffffffffff@@ 5c@@ 6, mov_rax_qword_ptr_[rip+0x@@ 11@@ f@@ 39], mov_ecx_r14d, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x@@ 9e@@ 75], mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 97@@ 9d, jmp_0xfffffffffffff@@ 3f@@ b, cvttsd2si@@ _rax@@ _xmm1, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ 90@@ ff], and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, jmp_0xffffffffffffe@@ fa@@ 1, ucomi@@ sd_xmm0_qword_ptr_[rip+0x@@ 9@@ 5d0], jp@@ _0x@@ c8, jne_0xc2, movsd_xmm0_qword_ptr_[rip+0x@@ 90@@ c4], jmp_0xffffffffffffef@@ 2f, mov_rdi_r12, call_0xfffffffffffe@@ 99@@ 55, mov_rdi_rbp, call_0xfffffffffffe9@@ 94@@ d, jmp_0xfffffffffffff5@@ 1c, mov_rax_qword_ptr_[rip+0x@@ 11@@ ea@@ 1], mov_edx_0x1@@ c, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x@@ 9d@@ b9], call_0xfffffffffffe9d@@ 15, mov_ebp_dword_ptr_[r@@ 13+0x@@ 3c], jmp_0xffffffffffffef@@ 5f, call_0xfffffffffffe9b@@ 40, mov_edi_dword_ptr_[rax], call_0xfffffffffffe9a@@ 39, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 11@@ e6@@ 2], lea_rdx_[rip+0x8@@ f7@@ 3], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffe9@@ 6c@@ 9, jmp_0xfffffffffffff0@@ f4, mov_rax_qword_ptr_[rip+0x@@ 11@@ e@@ 39], mov_edx_0x3@@ 5, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x8@@ fc@@ d], call_0xfffffffffffe9c@@ ad, jmp_0xfffffffffffff8c@@ e, comisd@@ _xmm0_xmmword_ptr_[r@@ ip+0x@@ 8f@@ 20], jb_0xffffffffffff@@ ee@@ 73, jmp_0xffffffffffffff36, mov_r14_qword_ptr_[r@@ bx+0x60], mov_rdi_r14, call_0xfffffffffffe@@ 98@@ a1, lea_rdi_[rax+0x@@ b], mov_esi_1, call_0xfffffffffffe9b@@ 73, mov_r9d_dword_ptr_[r@@ sp+4], mov_r15_rax, mov_r8_r14, lea_rcx_[rip+0x@@ 9d@@ 3e], mov_rdx_-1, mov_rdi_rax, mov_esi_1, xor_eax_eax, call_0xfffffffffffe9b@@ db, mov_rdi_r15, lea_rsi_[rip+0x@@ 6e@@ 8b], call_0xfffffffffffe9c@@ 1c, mov_rdi_r15, mov_r14_rax, call_0xfffffffffffe@@ 98@@ 41, jmp_0xfffffffffffff@@ 3d@@ e, mov_edi_dword_ptr_[r@@ ax+0x10], test_edi_edi, jne_0x7d, mov_rdi_r13, call_0xffffffffffff6@@ 2b@@ 6, test_bpl_bpl, je_0x39, mov_rax_qword_ptr_[rsp+0x10], dec@@ _ebp, movzx_ebp@@ _bpl, mov_r12_rax, lea_rbx@@ _[rax+r@@ bp*@@ 8+8], mov_rdi_qword_ptr_[r12], add_r12_8, call_0xfffffffffffe@@ 97@@ f8, mov_qword_ptr_[r12@@ -8]_0, cmp_rbx_r12, jne_0xffffffffffffffe7, mov_rdi_qword_ptr_[rsp+0x48], call_0xffffffffffff5@@ fd0, mov_rdi_qword_ptr_[rsp+0x38], call_0x1@@ 15@@ 6, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffe@@ 97@@ cc, mov_rdi_qword_ptr_[rsp+0x28], call_0xfffffffffffe@@ 97@@ c2, mov_rdi_qword_ptr_[rsp+0x18], call_0xfffffffffffe@@ 97@@ b8, jmp_0xffffffffffffe@@ fc@@ 3, mov_rax_qword_ptr_[rip+0x@@ 11d@@ 0f], mov_r8d_dword_ptr_[rbx+0x@@ 3c], mov_rdi_qword_ptr_[rax], lea_ecx_[r@@ 12+1], lea_rdx_[rip+0x@@ 9c@@ 9c], mov_esi_1, xor_eax_eax, call_0xfffffffffffe9@@ 56@@ d, jmp_0xffffffffffffff5f, lea_rcx_[rip+0x@@ 9d@@ 9c], mov_edx_0x1@@ a9, lea_rsi_[rip+0x@@ 9b@@ dc], lea_rdi_[rip+0x@@ 9c@@ 49], call_0xfffffffffffe9@@ 5d@@ 9, lea_rcx_[rip+0x@@ 9d@@ 7d], mov_edx_0x1@@ b3, lea_rsi_[rip+0x9@@ bb@@ d], lea_rdi_[rip+0x@@ 9c@@ 2a], call_0xfffffffffffe9@@ 5b@@ a, lea_rcx_[rip+0x@@ 9d@@ 5e], mov_edx_0x1@@ e8, lea_rsi_[rip+0x@@ 9b@@ 9e], lea_rdi_[rip+0x7@@ eb@@ f], call_0xfffffffffffe@@ 95@@ 9b, lea_rcx_[rip+0x@@ 9d@@ 4f], mov_edx_0x@@ 90, lea_rsi_[rip+0x@@ 9b@@ 7f], lea_rdi_[rip+0x7@@ ea@@ 0], call_0xfffffffffffe9@@ 57@@ c, call_0xfffffffffffe9@@ 97@@ 7
endbr64, push_r12, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0x20, mov_rbx_qword_ptr_[rdi+0x10], lea_r12_[rsp+0x@@ c], mov_rdi_qword_ptr_[rbx+0x40], lea_rsi_[rsp+0x10], mov_rdx_r12, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x10]_0, call_0xffffffffffff7e@@ 63, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r12, call_0xfffffffffffe9a@@ 9e, mov_esi_dword_ptr_[rsp+0xc], mov_rdi_qword_ptr_[rsp+0x10], mov_rcx_rbp, mov_edx_1, call_0xfffffffffffe9a@@ 88, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffe@@ 96@@ 8e, lea_rdi_[r@@ bx+4], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffe9a@@ 68, mov_esi_dword_ptr_[r@@ bx+0x28], mov_rdi_qword_ptr_[rbx+0x18], shl_rsi@@ _2, mov_rcx_rbp, mov_edx_1, call_0xfffffffffffe9a@@ 50, test_rax_rax, je_0x28, mov_eax_1, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x4f, add_rsp_0x20, pop_rbx, pop_rbp, pop_r12, ret, mov_rdi_rbp, call_0xfffffffffffe@@ 96@@ 7d, test_eax_eax, je_0xffffffffffffffd0, call_0xfffffffffffe@@ 98@@ 54, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 97@@ 4d, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 11@@ b7@@ 6], lea_rdx_[rip+0x@@ 8c@@ 87], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffe9@@ 3d@@ d, xor_eax_eax, jmp_0xffffffffffffffa5, call_0xfffffffffffe9@@ 86@@ 4
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12_rdi, mov_edi_0x4@@ 8, push_rbp, push_rbx, mov_rbx_rsi, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xfffffffffffe@@ 94@@ 83, mov_qword_ptr_[rbx+0x10]_rax, mov_r13_rax, lea_rdi_[rax+8], mov_rcx_r12, mov_edx_1, mov_esi_8, call_0xfffffffffffe@@ 97@@ a6, mov_rcx_r12, mov_edx_1, mov_esi_4, mov_rdi_r13, call_0xfffffffffffe@@ 97@@ 91, mov_rcx_r12, mov_edx_1, mov_esi_4, lea_rdi_[r@@ 13+0x28], call_0xfffffffffffe@@ 97@@ 7b, mov_ebp_dword_ptr_[r@@ 13+0x28], lea_r15_[r@@ sp+0x14], mov_rdi_rbp, call_0xfffffffffffe@@ 94@@ 2a, mov_rdi_rax, mov_rsi_rbp, mov_rcx_r12, mov_edx_1, mov_qword_ptr_[r13+0x1@@ 0]_rax, call_0xfffffffffffe@@ 97@@ 53, mov_ebp_dword_ptr_[r@@ 13+0x28], lea_r14_[r@@ bp*8], mov_rdi_r14, call_0xfffffffffffe@@ 93@@ ff, mov_rdi_r14, mov_qword_ptr_[r13+0x@@ 30]_rax, call_0xfffffffffffe9@@ 3f@@ 3, mov_esi_8, mov_rdi_rbp, mov_qword_ptr_[r13+0x@@ 38]_rax, call_0xfffffffffffe9@@ 80@@ 2, mov_qword_ptr_[r13+0x@@ 20]_rax, test_ebp_ebp, je_0x1@@ d7, mov_dword_ptr_[rsp+4]_0, lea_r15_[r@@ sp+0x14], jmp_0x@@ b9, mov_rax_qword_ptr_[r13+0x10], pxor_xmm0_xmm0, movzx_eax_byte_ptr_[r@@ ax+r@@ 14], movsd_xmm1_qword_ptr_[rip+0x@@ 8c@@ 5b], cvtsi2sd_xmm0_eax, movsd_xmm3@@ _qword_ptr_[rip+0x@@ 8c@@ 2f], mulsd_xmm0@@ _qword_ptr_[r@@ 13+8], and@@ pd@@ _xmm1_xmm0, ucomisd@@ _xmm3@@ _xmm1, movapd@@ _xmm2_xmm0, jbe_0x@@ 35, cvttsd2si_rax_xmm0, pxor_xmm1_xmm1, movsd_xmm4@@ _qword_ptr_[rip+0x@@ 8c@@ 02], cvtsi2sd_xmm1_rax, cmp@@ n@@ l@@ e@@ sd_xmm0_xmm1, and@@ pd@@ _xmm0_xmm4, addsd_xmm0_xmm1, movsd_xmm1_qword_ptr_[rip+0x@@ 8c@@ 10], and@@ n@@ pd@@ _xmm1_xmm2, or@@ pd@@ _xmm0_xmm1, cvttsd2si@@ _rbp@@ _xmm0, mov_ebp@@ _ebp, mov_esi_1, mov_rdi_rbp, add_rbx_qword_ptr_[r@@ 13+0x20], call_0xfffffffffffe@@ 97@@ 5d, mov_qword_ptr_[rbx]_rax, mov_rcx_r12, mov_edx_1, mov_rax_qword_ptr_[r13+0x@@ 20], mov_rsi_rbp, mov_rdi_qword_ptr_[rax+r@@ 14*8], call_0xfffffffffffe9@@ 66@@ 2, inc_dword_ptr_[r@@ sp+4], mov_eax_dword_ptr_[rsp+4], cmp_dword_ptr_[r13+0x@@ 28]_eax, jbe_0x@@ 11@@ 1, mov_rcx_r12, mov_edx_1, mov_esi_4, mov_rdi_r15, call_0xfffffffffffe@@ 96@@ 3b, mov_r14d_dword_ptr_[r@@ sp+0x14], mov_rdi_r14, call_0xfffffffffffe9@@ 2e@@ e, mov_rdi_rax, mov_rcx_r12, mov_rsi_r14, mov_edx_1, mov_rbp_rax, call_0xfffffffffffe@@ 96@@ 18, mov_r14d_dword_ptr_[r@@ sp+4], mov_rdx_qword_ptr_[r13+0x@@ 30], mov_esi_dword_ptr_[rsp+0x14], lea_rbx_[r@@ 14*8], add_rdx_rbx, mov_rdi_rbp, mov_qword_ptr_[rsp+8]_rdx, call_0xffffffffffff7@@ cc@@ 3, mov_rdx_qword_ptr_[rsp+8], mov_rdi_rbp, mov_qword_ptr_[rdx]_rax, call_0xfffffffffffe9@@ 3d@@ 3, mov_rcx_r12, mov_edx_1, mov_esi_4, mov_rdi_r15, call_0xfffffffffffe9@@ 5c@@ e, mov_esi_dword_ptr_[rsp+0x14], mov_rdi_rsi, mov_qword_ptr_[rsp+8]_rsi, call_0xfffffffffffe9@@ 27@@ d, mov_rsi_qword_ptr_[rsp+8], mov_rcx_r12, mov_edx_1, mov_rdi_rax, mov_rbp_rax, call_0xfffffffffffe9@@ 5a@@ 5, mov_rdx_qword_ptr_[r13+0x@@ 38], mov_esi_dword_ptr_[rsp+0x14], add_rdx_rbx, mov_rdi_rbp, mov_qword_ptr_[rsp+8]_rdx, call_0xffffffffffff7c@@ 5d, mov_rdx_qword_ptr_[rsp+8], mov_rdi_rbp, mov_qword_ptr_[rdx]_rax, call_0xfffffffffffe9@@ 36@@ d, mov_eax_dword_ptr_[r13], cmp_eax_1, je_0xfffffffffffffe@@ 79, cmp_eax_4, jne_0x1@@ 1a, mov_rax_qword_ptr_[r13+0x10], movsd_xmm0_qword_ptr_[r@@ 13+8], movzx_edi_byte_ptr_[r@@ ax+r@@ 14], call_0xffffffffffff6@@ 8b@@ 3, mov_ebp_eax, jmp_0xfffffffffffffe@@ c1, mov_rcx_r12, mov_edx_1, mov_esi_4, mov_rdi_r15, call_0xfffffffffffe@@ 95@@ 30, mov_r14d_dword_ptr_[r@@ sp+0x14], mov_rdi_r14, call_0xfffffffffffe9@@ 1e@@ 3, mov_rdi_rax, mov_rcx_r12, mov_edx_1, mov_rsi_r14, mov_rbp_rax, call_0xfffffffffffe9@@ 50@@ d, mov_esi_dword_ptr_[rsp+0x14], mov_rdi_rbp, call_0xffffffffffff7@@ bd@@ 1, mov_rdi_rbp, mov_qword_ptr_[r13+0x@@ 40]_rax, call_0xfffffffffffe9@@ 2e@@ 5, mov_rcx_r12, mov_edx_1, mov_esi_4, lea_rdi_[r@@ 13+4], call_0xfffffffffffe@@ 94@@ df, mov_ebp_dword_ptr_[r@@ 13+0x28], shl_rbp@@ _2, mov_rdi_rbp, call_0xfffffffffffe9@@ 18@@ f, mov_rdi_rax, mov_rcx_r12, mov_edx_1, mov_rsi_rbp, mov_qword_ptr_[r13+0x1@@ 8]_rax, call_0xfffffffffffe@@ 94@@ b8, test_rax_rax, je_0x28, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x71, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_r12, call_0xfffffffffffe9@@ 2c@@ 5, test_eax_eax, je_0xffffffffffffffd0, call_0xfffffffffffe@@ 94@@ 9c, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 93@@ 95, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 11@@ 7b@@ e], lea_rdx_[rip+0x@@ 88@@ cf], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 90@@ 25, jmp_0xffffffffffffffa2, lea_rcx_[rip+0x@@ 98@@ 47], mov_edx_0x2@@ 7d, lea_rsi_[rip+0x@@ 96@@ 97], lea_rdi_[rip+0x7@@ 9b@@ 8], call_0xfffffffffffe@@ 90@@ 94, call_0xfffffffffffe@@ 94@@ 8@@ f
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12d_edx, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0x48, mov_rbx_qword_ptr_[rdi+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_eax_dword_ptr_[rbx], cmp_eax_1, je_0xff, cmp_eax_4, jne_0x1@@ e7, mov_rdi_qword_ptr_[rbx+0x40], lea_rcx_[rsp+0x@@ 2c], call_0xffffffffffff7@@ 92@@ 7, mov_eax_dword_ptr_[rsp+0x34], xor_edx_edx, div_dword_ptr_[r@@ bx+0x28], mov_rax_qword_ptr_[rbx+0x10], movsd_xmm0_qword_ptr_[r@@ bx+8], movzx_r13d_byte_ptr_[r@@ ax+rdx], mov_r14_rdx, mov_edi_r13d, call_0xffffffffffff67@@ 15, mov_r15d_eax, mov_edi_r13d, call_0xffffffffffff67@@ aa, mov_edi_r15d, movsd_qword_ptr_[r@@ sp+0x1@@ 8]_xmm0, call_0xffffffffffff6@@ 80@@ c, mov_rax_qword_ptr_[rbx+0x30], mov_rsi_rbp, mov_rdi_qword_ptr_[rax+r@@ 14*8], mov_edx_r12d, movsd_qword_ptr_[r@@ sp+0x10]_xmm0, call_0xffffffffffff7@@ 8a@@ 3, xor_edx_edx, div@@ _r13d, mov_rax_qword_ptr_[rbx+0x38], mov_rdi_qword_ptr_[rax+r@@ 14*8], mov_rsi_rbp, mov_dword_ptr_[rsp+0xc]_edx, mov_edx_r12d, call_0xffffffffffff7@@ 88@@ 7, xor_edx_edx, div@@ _r13d, mov_r8d_dword_ptr_[rsp+0xc], movsd_xmm2@@ _qword_ptr_[rsp+0x18], movsd_xmm1@@ _qword_ptr_[rsp+0x10], mov_esi_r8d, movapd@@ _xmm0_xmm2, mov_edi_r15d, mov_ebp_edx, call_0xffffffffffff66@@ 50, mov_rdx_qword_ptr_[rbx+0x20], mov_eax_eax, mov_rdx_qword_ptr_[r@@ dx+r@@ 14*8], movzx_edx_byte_ptr_[r@@ dx+rax], lea_eax_[r@@ dx+r@@ bp], xor_edx_edx, div@@ _r13d, mov_rax_qword_ptr_[rbx+0x18], add_edx_dword_ptr_[r@@ ax+r@@ 14*4], mov_eax_edx, mov_rsi_qword_ptr_[rsp+0x38], xor_rsi_qword_ptr_fs:[0x28], jne_0x12@@ d, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_qword_ptr_[rbx+0x40], lea_rcx_[rsp+0x@@ 2c], call_0xffffffffffff7@@ 8@@ 37, mov_eax_dword_ptr_[rsp+0x34], xor_edx_edx, div_dword_ptr_[r@@ bx+0x28], mov_rax_qword_ptr_[rbx+0x10], movsd_xmm3@@ _qword_ptr_[rip+0x@@ 88@@ 5d], movsd_xmm4@@ _qword_ptr_[rip+0x@@ 88@@ 1d], pxor_xmm1_xmm1, mov_r14_rdx, movzx_edx_byte_ptr_[r@@ ax+rdx], cvtsi2sd_xmm1@@ _edx, mul@@ sd_xmm1@@ _qword_ptr_[r@@ bx+8], movapd@@ _xmm2_xmm1, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm4@@ _xmm2, movapd_xmm0_xmm1, jbe_0x@@ 2d, cvttsd2si@@ _rax@@ _xmm1, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ 87@@ de], and@@ n@@ pd@@ _xmm3@@ _xmm1, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm0_xmm2, and@@ pd@@ _xmm0_xmm4, addsd@@ _xmm0_xmm2, or@@ pd@@ _xmm0_xmm3, mov_rax_qword_ptr_[rbx+0x30], cvttsd2si@@ _r13@@ _xmm0, mov_rdi_qword_ptr_[rax+r@@ 14*8], mov_edx_r12d, mov_rsi_rbp, call_0xffffffffffff7@@ 78@@ 1, xor_edx_edx, div@@ _r13d, mov_rax_qword_ptr_[rbx+0x38], mov_rdi_qword_ptr_[rax+r@@ 14*8], mov_rsi_rbp, mov_dword_ptr_[rsp+0xc]_edx, mov_edx_r12d, call_0xffffffffffff7@@ 76@@ 5, xor_edx_edx, div@@ _r13d, mov_ecx_dword_ptr_[rsp+0xc], cmp_ecx_edx, je_0x25, mov_edx_edx, mov_rax_qword_ptr_[rbx+0x20], mov_rax_qword_ptr_[rax+r@@ 14*8], movzx_edx_byte_ptr_[r@@ ax+rdx], add@@ _dl@@ _byte_ptr_[r@@ ax+rcx], mov_rax_qword_ptr_[rbx+0x18], movzx_edx_dl, add_edx_dword_ptr_[r@@ ax+r@@ 14*4], mov_eax_edx, jmp_0xfffffffffffffefa, lea_edx_[r@@ cx+1], cmp_edx@@ _r13d, mov_eax_0, cmovae@@ _rdx_rax, jmp_0xffffffffffffffd0, lea_rcx_[rip+0x9@@ 5e8], mov_edx_0x2@@ cc, lea_rsi_[rip+0x@@ 94@@ 48], lea_rdi_[rip+0x@@ 77@@ 69], call_0xfffffffffffe@@ 8e@@ 45, call_0xfffffffffffe9@@ 24@@ 0
endbr64, push_r13, mov_r13_rdi, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_rbp_qword_ptr_[r@@ di+0x10], mov_rdi_qword_ptr_[rbp+0x20], test_rdi_rdi, je_0x5c, mov_eax_dword_ptr_[rbp+0x@@ 28], test_eax_eax, je_0x3e, xor_ebx_ebx, mov_r12d_ebx, mov_rdi_qword_ptr_[r@@ di+r@@ 12*8], inc_ebx, call_0xfffffffffffe@@ 8f@@ 87, mov_rax_qword_ptr_[rbp+0x30], mov_rdi_qword_ptr_[rax+r@@ 12*8], call_0xffffffffffff7@@ 8a@@ a, mov_rax_qword_ptr_[rbp+0x@@ 38], mov_rdi_qword_ptr_[rax+r@@ 12*8], call_0xffffffffffff7@@ 8@@ 9d, cmp_dword_ptr_[rbp+0x@@ 28]@@ _ebx, mov_rdi_qword_ptr_[rbp+0x20], ja_0xffffffffffffff@@ d1, call_0xfffffffffffe@@ 8f@@ 5f, mov_rdi_qword_ptr_[rbp+0x30], call_0xfffffffffffe@@ 8f@@ 56, mov_rdi_qword_ptr_[rbp+0x@@ 38], call_0xfffffffffffe@@ 8f@@ 4d, mov_rdi_qword_ptr_[rbp+0x@@ 40], call_0xffffffffffff7@@ 87@@ 4, mov_rdi_qword_ptr_[rbp+0x10], call_0xfffffffffffe@@ 8f@@ 3b, mov_rdi_qword_ptr_[rbp+0x18], call_0xfffffffffffe@@ 8f@@ 32, mov_rdi_rbp, call_0xfffffffffffe@@ 8f@@ 2a, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_rdi_r13, pop_r13, jmp_0xfffffffffffe@@ 8f@@ 1@@ 8
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rsi, add_rbx_8, sub_rsp_0x18, mov_r15_qword_ptr_[r@@ di+0x10], mov_eax_dword_ptr_[r15], mov_dword_ptr_[rsi]_eax, mov_rdi_qword_ptr_[r15+0x@@ 40], call_0xffffffffffff7@@ 92@@ a, mov_dword_ptr_[rbx@@ -4]_eax, mov_ebp_eax, mov_rsi_rbx, mov_rdi_qword_ptr_[r15+0x@@ 40], call_0xffffffffffff7@@ 8@@ 39, mov_edi_ebp, call_0xffffffffffff7@@ 86@@ 2, mov_eax_eax, add_rbx_rax, mov_eax_dword_ptr_[r15+0x@@ 28], movsd_xmm1_qword_ptr_[rip+0x@@ 86@@ 4c], mov_dword_ptr_[rbx]_eax, movsd_xmm0_qword_ptr_[r@@ 15+8], comi@@ sd_xmm0_xmm1, jae_0x@@ 190, cvttsd2si_rax_xmm0, mov_qword_ptr_[rbx+@@ 4]_rax, mov_rax_qword_ptr_[r15+0x@@ 30], add_rbx@@ _0x14, mov_rdi_qword_ptr_[rax], call_0xffffffffffff7@@ 8d@@ 6, mov_dword_ptr_[rbx@@ -@@ 8]_eax, mov_dword_ptr_[rsp+4]_eax, mov_rax_qword_ptr_[r15+0x@@ 38], mov_rdi_qword_ptr_[rax], call_0xffffffffffff7@@ 8c@@ 3, mov_dword_ptr_[rbx@@ -4]_eax, mov_rdi_rbx, mov_r13d_eax, mov_edx_dword_ptr_[r@@ 15+0x28], mov_rsi_qword_ptr_[r@@ 15+0x10], call_0xfffffffffffe9@@ 2e@@ d, mov_edx_dword_ptr_[r@@ 15+0x28], mov_rsi_qword_ptr_[r15+0x18], add_rbx@@ _rdx, mov_rdi_rbx, shl_rdx_2, call_0xfffffffffffe9@@ 2d@@ 6, mov_edx_dword_ptr_[r@@ 15+0x28], lea_rcx_[r@@ bx@@ +rdx*4], mov_qword_ptr_[rsp+8]_rcx, lea_rbx_[r@@ cx@@ +rdx*8], test_edx_edx, je_0x10e, xor_ebp_ebp, jmp_0x@@ 94, mov_rax_qword_ptr_[r15+0x10], pxor_xmm0_xmm0, movzx_eax_byte_ptr_[r@@ ax+r@@ 12], movsd_xmm1_qword_ptr_[rip+0x@@ 8@@ 5a@@ 3], cvtsi2sd_xmm0_eax, movsd_xmm3@@ _qword_ptr_[rip+0x@@ 8@@ 57@@ 7], mulsd_xmm0@@ _qword_ptr_[r@@ 15+8], and@@ pd@@ _xmm1_xmm0, ucomisd@@ _xmm3@@ _xmm1, movapd@@ _xmm2_xmm0, jbe_0x@@ 35, cvttsd2si_rax_xmm0, pxor_xmm1_xmm1, movsd_xmm4@@ _qword_ptr_[rip+0x@@ 8@@ 54@@ a], cvtsi2sd_xmm1_rax, cmp@@ n@@ l@@ e@@ sd_xmm0_xmm1, and@@ pd@@ _xmm0_xmm4, addsd_xmm0_xmm1, movsd_xmm1_qword_ptr_[rip+0x@@ 85@@ 58], and@@ n@@ pd@@ _xmm1_xmm2, or@@ pd@@ _xmm0_xmm1, cvttsd2si_rax_xmm0, mov_ebx_eax, mov_rax_qword_ptr_[r15+0x20], mov_rdx_rbx, mov_rsi_qword_ptr_[rax+r@@ 12*8], mov_rdi_r14, inc_rbp, call_0xfffffffffffe9@@ 230, add_rbx@@ _r14, cmp_dword_ptr_[r15+0x@@ 28]@@ _ebp, jbe_0x@@ 74, mov_rax_qword_ptr_[rsp+8], mov_r12d_ebp, mov_qword_ptr_[rax+r@@ bp*@@ 8]_rbx, mov_rsi_rbx, mov_rax_qword_ptr_[r15+0x@@ 30], mov_rdi_qword_ptr_[rax+r@@ 12*8], call_0xffffffffffff7@@ 6e@@ b, mov_edi_dword_ptr_[rsp+4], call_0xffffffffffff7@@ 7@@ 12, mov_eax_eax, add_rbx_rax, mov_rax_qword_ptr_[r15+0x@@ 38], mov_rsi_rbx, mov_rdi_qword_ptr_[rax+r@@ 12*8], call_0xffffffffffff7@@ 6cd, mov_edi_r13d, call_0xffffffffffff7@@ 6f@@ 5, mov_ecx_eax, mov_eax_dword_ptr_[r15], lea_r14_[r@@ bx@@ +rcx], cmp_eax_1, je_0xffffffffffffff@@ 24, cmp_eax_4, jne_0x43, mov_rax_qword_ptr_[r15+0x10], movsd_xmm0_qword_ptr_[r@@ 15+8], movzx_edi_byte_ptr_[r@@ ax+r@@ 12], call_0xffffffffffff6@@ 2a@@ a, jmp_0xffffffffffffff72, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, subsd_xmm0_xmm1, cvttsd2si_rax_xmm0, mov_qword_ptr_[rbx+@@ 4]_rax, bt@@ c@@ _qword_ptr_[r@@ bx+@@ 4]@@ _0x3f, jmp_0xfffffffffffffe@@ 6c, lea_rcx_[rip+0x9@@ 2f@@ 1], mov_edx_0x3@@ 40, lea_rsi_[rip+0x9@@ 16@@ 1], lea_rdi_[rip+0x7@@ 48@@ 2], call_0xfffffffffffe@@ 8b@@ 5@@ e
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_rbx_qword_ptr_[rdi+0x10], mov_rdi_qword_ptr_[rbx+0x40], call_0xffffffffffff7@@ 70@@ a, mov_ebp_eax, mov_rax_qword_ptr_[rbx+0x30], mov_rdi_qword_ptr_[rax], call_0xffffffffffff7@@ 6f@@ c, mov_r13d_eax, mov_rax_qword_ptr_[rbx+0x38], mov_rdi_qword_ptr_[rax], call_0xffffffffffff7@@ 6e@@ d, mov_edi_ebp, mov_r12d_eax, call_0xffffffffffff7@@ 6@@ 33, mov_r8d_eax, mov_eax_dword_ptr_[rbx+0x28], mov_edi_r13d, lea_edx_[rax@@ +rax*2], lea_ebp@@ _[rax@@ +rdx*4@@ +0x@@ 20], add_ebp@@ _r8d, call_0xffffffffffff7@@ 6@@ 1b, imul_eax@@ _dword_ptr_[r@@ bx+0x28], mov_edi_r12d, add_ebp@@ _eax, call_0xffffffffffff7@@ 60@@ d, mov_edx_dword_ptr_[r@@ bx+0x28], imul@@ _eax_edx, lea_r12d@@ _[rax+r@@ bp], test_edx_edx, je_0xad, xor_ebp_ebp, jmp_0x7@@ b, mov_rdx_qword_ptr_[rbx+0x10], mov_eax_ebp, movzx_eax_byte_ptr_[rdx+rax], pxor_xmm0_xmm0, cvtsi2sd_xmm0_eax, movsd_xmm1_qword_ptr_[rip+0x@@ 8@@ 3c@@ e], movsd_xmm3@@ _qword_ptr_[rip+0x@@ 8@@ 3a@@ 6], mulsd_xmm0@@ _qword_ptr_[r@@ bx+8], and@@ pd@@ _xmm1_xmm0, ucomisd@@ _xmm3@@ _xmm1, movapd@@ _xmm2_xmm0, jbe_0x@@ 35, cvttsd2si_rax_xmm0, pxor_xmm1_xmm1, movsd_xmm4@@ _qword_ptr_[rip+0x@@ 8@@ 37@@ a], cvtsi2sd_xmm1_rax, cmp@@ n@@ l@@ e@@ sd_xmm0_xmm1, and@@ pd@@ _xmm0_xmm4, addsd_xmm0_xmm1, movsd_xmm1_qword_ptr_[rip+0x@@ 8@@ 38@@ 8], and@@ n@@ pd@@ _xmm1_xmm2, or@@ pd@@ _xmm0_xmm1, cvttsd2si_rax_xmm0, inc_ebp, add_r12d_eax, cmp_dword_ptr_[rbx+0x@@ 28]@@ _ebp, jbe_0x@@ 2c, mov_eax_dword_ptr_[rbx], cmp_eax_1, je_0xffffffffffffff@@ 84, cmp_eax_4, jne_0x2e, mov_rdx_qword_ptr_[rbx+0x10], mov_eax_ebp, movzx_edi_byte_ptr_[r@@ dx+rax], movsd_xmm0_qword_ptr_[r@@ bx+8], inc_ebp, call_0xffffffffffff6@@ 13c, add_r12d_eax, cmp_dword_ptr_[rbx+0x@@ 28]@@ _ebp, ja_0xffffffffffffff@@ d8, add_rsp_8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, lea_rcx_[rip+0x9@@ 18@@ a], mov_edx_0x3@@ 6e, lea_rsi_[rip+0x9@@ 00@@ a], lea_rdi_[rip+0x7@@ 32@@ b], call_0xfffffffffffe8a@@ 0@@ 7
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12_rsi, push_rbp, push_rbx, sub_rsp_0x58, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, mov_eax_dword_ptr_[rdi], mov_dword_ptr_[rsp]_edx, cmp_eax_1, je_0x1@@ c3, cmp_eax_4, jne_0x3@@ 24, mov_r15d_dword_ptr_[r@@ di+4], lea_r13_[r@@ di+8], mov_edi_r15d, call_0xffffffffffff7@@ 4d@@ 9, mov_ebx_eax, add_rbx@@ _r13, mov_rax_qword_ptr_[r@@ bx+4], mov_r14d_dword_ptr_[r@@ bx], test_rax_rax, mov_ecx_dword_ptr_[rsp], js_0x1@@ 6a, pxor_xmm0_xmm0, cvtsi2sd_xmm0_rax, mov_ebp@@ _r14d, mov_r10d_dword_ptr_[r@@ bx+0x10], mov_r11d_dword_ptr_[r@@ bx+0xc], lea_rsi_[r@@ bx+r@@ bp+0x14], lea_r8_[rsp+0x@@ 3c], mov_rdx_r12, mov_rdi_r13, mov_qword_ptr_[rsp]_rsi, mov_esi_r15d, mov_dword_ptr_[rsp+0x10]_ecx, mov_dword_ptr_[rsp+0xc]@@ _r10d, mov_dword_ptr_[rsp+0x14]@@ _r11d, movsd_qword_ptr_[r@@ sp+0x1@@ 8]_xmm0, call_0xffffffffffff7@@ 4e@@ d, mov_eax_dword_ptr_[rsp+0x44], xor_edx_edx, div@@ _r14d, movsd_xmm0_qword_ptr_[r@@ sp+0x18], movzx_ebx_byte_ptr_[r@@ bx@@ +rdx+0x1@@ 4], mov_r13_rdx, mov_edi_ebx, call_0xffffffffffff60@@ 3f, mov_r14d_eax, mov_edi_ebx, call_0xffffffffffff60@@ d5, mov_edi_r14d, movsd_qword_ptr_[rsp+0x@@ 28]_xmm0, call_0xffffffffffff6@@ 13@@ 7, mov_r11d_dword_ptr_[r@@ sp+0x14], mov_rsi_qword_ptr_[rsp], lea_rax_[r@@ 13*8], mov_edi@@ _r11d, lea_rax_[rax+r@@ bp*4], mov_r15_qword_ptr_[r@@ si+rax], movsd_qword_ptr_[rsp+0x@@ 20]_xmm0, mov_dword_ptr_[rsp+0x18]@@ _r11d, call_0xffffffffffff7@@ 4@@ 1b, mov_r10d_dword_ptr_[rsp+0xc], mov_ebp_eax, mov_edi@@ _r10d, mov_dword_ptr_[rsp+0x14]@@ _r10d, call_0xffffffffffff7@@ 40@@ 7, mov_r11d_dword_ptr_[rsp+0x18], mov_ecx_dword_ptr_[rsp+0x10], mov_esi@@ _r11d, mov_rdx_r12, mov_rdi_r15, mov_dword_ptr_[rsp+0xc]_eax, call_0xffffffffffff7@@ 4@@ 1c, xor_edx_edx, div@@ _ebx, mov_r10d_dword_ptr_[r@@ sp+0x14], mov_ecx_dword_ptr_[rsp+0x10], add_rbp@@ _r15, mov_esi@@ _r10d, mov_rdi_rbp, mov_r15d_edx, mov_rdx_r12, call_0xffffffffffff7@@ 3f@@ b, xor_edx_edx, div@@ _ebx, movsd_xmm2@@ _qword_ptr_[rsp+0x28], movsd_xmm1@@ _qword_ptr_[rsp+0x20], mov_esi_r15d, movapd@@ _xmm0_xmm2, mov_edi_r14d, mov_dword_ptr_[rsp+0x10]_edx, call_0xffffffffffff5f@@ 38, mov_r12d@@ _dword_ptr_[rsp+0xc], mov_edx_eax, add_rbp@@ _r12, movzx_eax_byte_ptr_[r@@ bp@@ +rdx], xor_edx_edx, add_eax_dword_ptr_[r@@ sp+0x10], div@@ _ebx, mov_rsi_qword_ptr_[rsp], mov_eax_dword_ptr_[r@@ si+r@@ 13*4], add_eax_edx, mov_rsi_qword_ptr_[rsp+0x48], xor_rsi_qword_ptr_fs:[0x28], jne_0x1@@ cd, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdx_rax, shr_rdx_1, and_eax_1, or_rdx_rax, pxor_xmm0_xmm0, cvtsi2sd_xmm0_rdx, addsd_xmm0_xmm0, jmp_0xfffffffffffffe@@ 8c, mov_r15d_dword_ptr_[r@@ di+4], lea_r14_[r@@ di+8], mov_edi_r15d, call_0xffffffffffff7@@ 32@@ 5, mov_ebx_eax, add_rbx@@ _r14, mov_rax_qword_ptr_[r@@ bx+4], mov_r9d_dword_ptr_[r@@ bx], test_rax_rax, mov_ecx_dword_ptr_[rsp], js@@ _0x10@@ e, pxor@@ _xmm4@@ _xmm4, cvtsi2sd@@ _xmm4@@ _rax, movsd_qword_ptr_[r@@ sp+0x1@@ 8@@ ]_xmm4, mov_ebp@@ _r9d, mov_r11d_dword_ptr_[r@@ bx+0xc], lea_r8_[rsp+0x@@ 3c], lea_rax_[rbx+r@@ bp+0x14], mov_esi_r15d, mov_rdi_r14, mov_rdx_r12, mov_dword_ptr_[rsp+0x10]_ecx, mov_r13d_dword_ptr_[r@@ bx+0x10], mov_dword_ptr_[rsp+0x14]@@ _r11d, mov_dword_ptr_[rsp+0xc]_r9d, mov_qword_ptr_[rsp]_rax, call_0xffffffffffff7@@ 33@@ 9, mov_r9d_dword_ptr_[rsp+0xc], mov_eax_dword_ptr_[rsp+0x44], xor_edx_edx, div@@ _r9d, mov_r11d_dword_ptr_[r@@ sp+0x14], mov_rsi_qword_ptr_[rsp], pxor_xmm0_xmm0, mov_edi@@ _r11d, movzx_eax_byte_ptr_[r@@ bx@@ +rdx+0x1@@ 4], cvtsi2sd_xmm0_eax, lea_rax_[rdx@@ *8], lea_rax_[rax+r@@ bp*4], mov_r14_qword_ptr_[r@@ si+rax], mulsd_xmm0@@ _qword_ptr_[rsp+0x18], mov_qword_ptr_[rsp+0x18]_rdx, cvttsd2si@@ _rbx@@ _xmm0, mov_dword_ptr_[rsp+0xc]@@ _ebx, call_0xffffffffffff7@@ 27@@ 9, mov_edi_r13d, mov_ebp_eax, call_0xffffffffffff7@@ 26@@ f, mov_r11d_dword_ptr_[r@@ sp+0x14], mov_ecx_dword_ptr_[rsp+0x10], mov_esi@@ _r11d, mov_rdi_r14, mov_rdx_r12, mov_r15d_eax, call_0xffffffffffff7@@ 28@@ 5, xor_edx_edx, div@@ _dword_ptr_[rsp+0xc], mov_ecx_dword_ptr_[rsp+0x10], add_rbp@@ _r14, mov_esi_r13d, mov_rdi_rbp, add_r15@@ _rbp, mov_r14d_edx, mov_rdx_r12, call_0xffffffffffff7@@ 2@@ 64, xor_edx_edx, div@@ _dword_ptr_[rsp+0xc], mov_r8_qword_ptr_[rsp+0x18], cmp_r14d@@ _edx, je_0x49, mov_edx_edx, add_rdx@@ _r15, movzx_eax_byte_ptr_[rdx], mov_rbx_qword_ptr_[rsp], add_al@@ _byte_ptr_[r@@ 15+r@@ 14], movzx_eax_al, add_eax_dword_ptr_[r@@ bx+r@@ 8*4], jmp_0xfffffffffffffe@@ 86, mov_rdx_rax, shr_rdx_1, and_eax_1, or_rdx_rax, pxor_xmm0_xmm0, cvtsi2sd_xmm0_rdx, addsd_xmm0_xmm0, movsd_qword_ptr_[r@@ sp+0x1@@ 8]_xmm0, jmp_0xfffffffffffffee8, lea_edx_[r@@ 14+1], mov_rax_rdx, add_rdx@@ _r15, cmp_eax_ebx, cmovae@@ _rdx@@ _r15, jmp_0xffffffffffffffae, lea_rcx_[rip+0x@@ 8d@@ ef], mov_edx_0x40@@ 7, lea_rsi_[rip+0x@@ 8c@@ 8f], lea_rdi_[rip+0x6@@ fb@@ 0], call_0xfffffffffffe@@ 86@@ 8c, call_0xfffffffffffe8a@@ 8@@ 7
endbr64, push_r14, push_r13, mov_r13d_edi, mov_edi_0x28, push_r12, push_rbp, push_rbx, mov_ebx_esi, call_0xfffffffffffe8@@ 6c@@ a, test_rax_rax, je_0x8f, mov_dword_ptr_[rax]@@ _r13d, mov_r14d_ebx, mov_esi_8, mov_rdi_r14, mov_r12_rax, call_0xfffffffffffe8a@@ cb, mov_qword_ptr_[r12+8]_rax, mov_esi_4, mov_rdi_r14, mov_rbp_rax, call_0xfffffffffffe8a@@ b6, mov_qword_ptr_[r12+0x1@@ 8]_rax, xor_edx_edx, mov_eax_r13d, div@@ _ebx, mov_dword_ptr_[r12+0x@@ 20]@@ _0xffffffff, mov_dword_ptr_[r12+0x1@@ 0]_ebx, mov_r13d_eax, inc_r13d, test_ebx_ebx, je_0x30, xor_ebx_ebx, jmp_0x10, mov_rbp_qword_ptr_[r@@ 12+8], mov_eax_ebx, mov_edi_r13d, lea_rbp_[r@@ bp+rax*8], call_0x56@@ 71, mov_qword_ptr_[rbp]_rax, inc_ebx, cmp_dword_ptr_[r@@ 12+0x1@@ 0]_ebx, ja_0xffffffffffffff@@ e1, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, lea_rcx_[rip+0x@@ 8d@@ ec], mov_edx_0x1@@ 3, lea_rsi_[rip+0x@@ 8d@@ a8], lea_rdi_[rip+0x@@ 8d@@ c7], call_0xfffffffffffe8@@ 5b@@ 9
endbr64, mov_rax_qword_ptr_[rdi+8], mov_r8d_esi, mov_rdi_qword_ptr_[rax+r@@ 8@@ *8], mov_rsi_rdx, jmp_0x5@@ 67@@ e
endbr64, push_r12, mov_r12_rdx, push_rbp, mov_ebp_esi, push_rbx, mov_rbx_rdi, mov_rax_qword_ptr_[rdi+8], mov_ecx_dword_ptr_[r@@ bx+0x20], mov_rdi_qword_ptr_[rax+r@@ bp*8], test_ecx_ecx, js_0x3@@ 3, call_0x56@@ 81, mov_r8d_eax, movsxd_rax_dword_ptr_[r@@ bx+0x20], mov_rdx_qword_ptr_[rbx+0x18], lea_ecx_[rax-1], mov_dword_ptr_[rbx+0x@@ 20]_ecx, mov_esi_dword_ptr_[r@@ dx+rax*4], mov_rax_qword_ptr_[rbx+8], add_esi@@ _r8d, mov_rdi_qword_ptr_[rax+r@@ bp*8], call_0x56@@ 4d, mov_rax_qword_ptr_[rbx+8], mov_rdi_qword_ptr_[rax+r@@ bp*8], mov_rsi_r12, call_0x56@@ 5d, mov_r12_rax, test_rax_rax, je_0x12, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, mov_rax_qword_ptr_[rbx+8], mov_rdx_qword_ptr_[rbx+0x18], mov_rdi_qword_ptr_[rax+r@@ bp*8], mov_eax_dword_ptr_[rbx+0x20], inc_eax, mov_dword_ptr_[rbx+0x20]_eax, cdqe, lea_rax_[rdx@@ +rax*4], mov_rbx_rax, call_0x56@@ 13, mov_dword_ptr_[rbx]_eax, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret
endbr64, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, mov_eax_dword_ptr_[rdi+0x10], test_eax_eax, je_0x24, xor_ebx_ebx, mov_rax_qword_ptr_[rbp+8], mov_edx_ebx, mov_rdi_qword_ptr_[r@@ ax+rdx*8], inc_ebx, call_0x57@@ 14, cmp_dword_ptr_[rbp+0x@@ 10]@@ _ebx, ja_0xffffffffffffff@@ ec, mov_rdi_qword_ptr_[rbp+0x18], call_0xfffffffffffe@@ 86@@ 46, mov_rdi_qword_ptr_[rbp+8], call_0xfffffffffffe@@ 86@@ 3d, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffffe@@ 86@@ 2@@ f
endbr64, push_r12, mov_esi_1, push_rbp, sub_rsp_8, mov_rbp_qword_ptr_[r@@ di+8], mov_edi_8, call_0xfffffffffffe@@ 88@@ f7, test_rax_rax, je_0x29, mov_rdi_rbp, mov_r12_rax, call_0xffffffffffff4d@@ f7, mov_qword_ptr_[r12]_rax, mov_rdi_rax, mov_esi_7, call_0xffffffffffff4e@@ 36, add_rsp_8, pop_rbp, mov_rax_r12, pop_r12, ret, lea_rcx_[rip+0x@@ 8d@@ 2f], mov_edx_0x16, lea_rsi_[rip+0x@@ 8c@@ 66], lea_rdi_[rip+0x7@@ 90@@ d], call_0xfffffffffffe@@ 84@@ 2@@ c
endbr64, push_rbp, mov_rbp_qword_ptr_[r@@ di+0x20], mov_rdi_qword_ptr_[rbp], test_rdi_rdi, je_7, call_0xffffffffffff50@@ 2e, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffffe@@ 85@@ 9@@ 5
endbr64, mov_rax_qword_ptr_[rdi+0x20], mov_rdi_qword_ptr_[rax], jmp_0xffffffffffff@@ 5@@ 11@@ 5
endbr64, mov_rax_qword_ptr_[rdi+0x20], mov_rdi_qword_ptr_[rax], jmp_0xffffffffffff@@ 4@@ f7@@ 5
endbr64, mov_rax_qword_ptr_[rdi+0x20], mov_rdi_qword_ptr_[rax], jmp_0xffffffffffff@@ 4@@ fa@@ 5
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x58, mov_rbp_qword_ptr_[r@@ di+0x20], mov_esi_dword_ptr_[r@@ bx+0x10], mov_rdi_qword_ptr_[rbp], movsd_qword_ptr_[r@@ sp]_xmm0, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, mov_r15_qword_ptr_[r@@ di+0x20], call_0xffffffffffff50@@ a7, movsd_xmm0_qword_ptr_[r@@ sp], mov_rdi_qword_ptr_[rbp], call_0xffffffffffff5@@ 119, mov_ecx_dword_ptr_[r@@ bx+0x10], test_ecx_ecx, jne_0x1@@ 87, mov_rdi_qword_ptr_[rbp], call_0xffffffffffff5@@ 11@@ 5, mov_r14_rax, test_rax_rax, je_0x1@@ 45, mov_rdi_rax, call_0xffffffffffff5@@ 5b@@ 1, mov_edi_eax, mov_esi_1, mov_rbp_rdi, call_0xfffffffffffe@@ 87@@ d2, mov_rsi_rax, mov_rdi_r14, mov_r12_rax, call_0xffffffffffff5@@ 50@@ 4, mov_rdi_r14, call_0xffffffffffff54@@ 6c, mov_edx_dword_ptr_[rbx+0x10], test_edx_edx, jne_0x1@@ 92, lea_r14_[rsp+0x10], mov_rdi_r14, call_0x2@@ 7f@@ 4, mov_r8d_dword_ptr_[r@@ 15+0x14], mov_r13d_dword_ptr_[r@@ 15+0x20], mov_r9d_r8d, sub_r9d@@ _r13d, mov_edi@@ _r9d, mov_esi_4, mov_dword_ptr_[rsp+0xc]_r8d, mov_dword_ptr_[rsp]@@ _r9d, call_0xfffffffffffe@@ 87@@ 80, mov_r8d_dword_ptr_[rsp+0xc], mov_rdi_qword_ptr_[r15+0x30], test_r8d_r8d, mov_r9d_dword_ptr_[r@@ sp], mov_r10_rax, je_0x3a, mov_esi_1, xor_eax_eax, xor_edx_edx, lea_r11_[rip+0x@@ 8b@@ e6], jmp_0xf, mov_ecx_edx, and_ecx@@ _0x1f, mov_esi_dword_ptr_[r@@ 11@@ +rcx*4], mov_ecx_edx, shr_ecx@@ _5, test_dword_ptr_[r@@ di@@ +rcx*@@ 4]_esi, jne_0xa, mov_ecx_eax, mov_dword_ptr_[r@@ 10@@ +rcx*@@ 4]_edx, inc_eax, inc_edx, cmp_r8d@@ _edx, jne_0xffffffffffffffe0, mov_edx_r9d, mov_rsi_r10, mov_rdi_r14, mov_qword_ptr_[rsp]_r10, call_0x2@@ 7d@@ 1, mov_r10_qword_ptr_[rsp], mov_rdi_r10, call_0xfffffffffffe@@ 84@@ 25, mov_rdi_r14, call_0x2@@ d0@@ d, mov_edi_eax, mov_esi_1, mov_r15_rdi, call_0xfffffffffffe@@ 86@@ fe, mov_rsi_rax, mov_rdi_r14, mov_qword_ptr_[rsp]_rax, call_0x2c@@ 5f, mov_rdi_r14, call_0x2@@ 76@@ 7, mov_edi_0x18, call_0xfffffffffffe8@@ 2b@@ d, mov_r14_rax, mov_eax_dword_ptr_[rbx], mov_edi_0x20, mov_dword_ptr_[r14]_eax, call_0xfffffffffffe8@@ 2a@@ b, mov_rdx_qword_ptr_[rsp], mov_qword_ptr_[rax+0x1@@ 8]_r12, mov_qword_ptr_[rax+8]_rdx, mov_dword_ptr_[rax+0x1@@ 0]_ebp, mov_dword_ptr_[rax]@@ _r15d, mov_qword_ptr_[r14+0x1@@ 0]_rax, mov_eax_dword_ptr_[rbx+0x10], mov_dword_ptr_[r14+@@ 4]_r13d, test_eax_eax, jne_0x5f, mov_rax_qword_ptr_[rsp+0x48], xor_rax_qword_ptr_fs:[0x28], jne_0x9c, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_rax_r14, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[rip+0x@@ 10@@ 8e@@ 9], movsd_xmm0_qword_ptr_[r@@ sp], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x@@ 8a@@ 32], mov_esi_1, mov_eax_1, call_0xfffffffffffe8@@ 148, jmp_0xfffffffffffffe@@ 5a, mov_rax_qword_ptr_[rip+0x@@ 10@@ 8b@@ 9], mov_edx_0x3@@ 5, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x@@ 7a@@ 4d], call_0xfffffffffffe@@ 87@@ 2d, jmp_0xffffffffffffff83, mov_rax_qword_ptr_[rip+0x@@ 10@@ 89@@ 1], mov_edx_0x4@@ 4, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x@@ 8a@@ 25], call_0xfffffffffffe@@ 870@@ 5, jmp_0xfffffffffffffe@@ 54, call_0xfffffffffffe8@@ 57@@ b
endbr64, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, mov_edi_0x20, push_rbx, call_0xfffffffffffe8@@ 1bd, mov_qword_ptr_[r12+0x10]_rax, mov_rbx_rax, mov_rcx_rbp, mov_edx_1, lea_rdi_[rax+0x10], mov_esi_4, call_0xfffffffffffe8@@ 4d@@ f, mov_r12d_dword_ptr_[r@@ bx+0x10], mov_esi_1, mov_rdi_r12, call_0xfffffffffffe8@@ 5a@@ e, mov_rdi_rax, mov_rsi_r12, mov_rcx_rbp, mov_edx_1, mov_qword_ptr_[rbx+0x18]_rax, call_0xfffffffffffe8@@ 4b@@ 7, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_rbx, call_0xfffffffffffe8@@ 4a@@ 2, mov_r12d_dword_ptr_[r@@ bx], mov_esi_1, mov_rdi_r12, call_0xfffffffffffe8@@ 57@@ 2, mov_rdi_rax, mov_rcx_rbp, mov_edx_1, mov_rsi_r12, mov_qword_ptr_[rbx+8]_rax, call_0xfffffffffffe8@@ 47@@ b, test_rax_rax, je_0xb, pop_rbx, pop_rbp, pop_r12, ret, mov_rdi_rbp, call_0xfffffffffffe8@@ 2a@@ 5, test_eax_eax, je_0xffffffffffffffed, call_0xfffffffffffe8@@ 47@@ c, mov_edi_dword_ptr_[rax], call_0xfffffffffffe8@@ 37@@ 5, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 10@@ 79@@ e], pop_rbx, mov_rdi_qword_ptr_[rax], pop_rbp, lea_rdx_[rip+0x7@@ 8a@@ a], mov_esi_1, xor_eax_eax, pop_r12, jmp_0xfffffffffff@@ e8@@ 00@@ 1
endbr64, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_8, mov_rbx_qword_ptr_[rdi+0x10], call_0xffffffffffff54@@ 7f, lea_rdi_[r@@ bx+0x10], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffe8@@ 5d@@ 9, mov_esi_dword_ptr_[r@@ bx+0x10], mov_rdi_qword_ptr_[rbx+0x18], mov_rcx_rbp, mov_edx_1, call_0xfffffffffffe8@@ 5c@@ 5, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_rbx, call_0xfffffffffffe8@@ 5b0, mov_esi_dword_ptr_[rbx], mov_rdi_qword_ptr_[rbx+8], mov_rcx_rbp, mov_edx_1, call_0xfffffffffffe@@ 85@@ 9d, test_rax_rax, je_0x15, mov_eax_1, add_rsp_8, pop_rbx, pop_rbp, ret, mov_rdi_rbp, call_0xfffffffffffe8@@ 1d@@ d, test_eax_eax, je_0xffffffffffffffe3, call_0xfffffffffffe8@@ 3b@@ 4, mov_edi_dword_ptr_[rax], call_0xfffffffffffe8@@ 2a@@ d, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ 10@@ 6d@@ 6], lea_rdx_[rip+0x@@ 77@@ e7], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 7f@@ 3d, xor_eax_eax, jmp_0xffffffffffffffb@@ 8
endbr64, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, mov_r12_qword_ptr_[r@@ di+0x10], mov_rdi_qword_ptr_[r@@ 12+0x18], call_0xfffffffffffe8@@ 13@@ 9, mov_rdi_qword_ptr_[r12+8], call_0xfffffffffffe8@@ 12@@ f, mov_rdi_r12, call_0xfffffffffffe8@@ 12@@ 7, add_rsp_8, mov_rdi_rbp, pop_rbp, pop_r12, jmp_0xfffffffffff@@ e8@@ 11@@ 8
endbr64, push_rbp, push_rbx, sub_rsp_8, mov_rax_qword_ptr_[rdi+0x10], mov_rdi_qword_ptr_[rax+0x18], mov_rbp_qword_ptr_[r@@ ax+8], call_0xffffffffffff5@@ 24@@ a, mov_esi_eax, mov_rdi_rbp, mov_ebx_eax, call_0x2@@ a0@@ e, sub_ebx_eax, add_rsp_8, mov_eax_ebx, pop_rbx, pop_rbp, ret
endbr64, push_rbx, mov_rbx_qword_ptr_[rdi+0x10], lea_rdi_[r@@ si+4], mov_edx_dword_ptr_[rbx], mov_dword_ptr_[rsi@@ ]_edx, mov_rsi_qword_ptr_[rbx+8], call_0xfffffffffffe@@ 85@@ 3b, mov_esi_dword_ptr_[rbx], mov_edx_dword_ptr_[rbx+0x10], mov_rdi_rax, add_rdi@@ _rsi, mov_dword_ptr_[rdi@@ ]_edx, add_rdi_4, mov_rsi_qword_ptr_[rbx+0x18], pop_rbx, jmp_0xfffffffffffe@@ 85@@ 2@@ 0
endbr64, mov_rdx_qword_ptr_[r@@ di+0x10], mov_eax_dword_ptr_[r@@ dx+0x10], add_eax_dword_ptr_[r@@ dx], add_eax@@ _0xc, ret
endbr64, push_rbp, lea_rbp_[r@@ di+4], push_rbx, sub_rsp_8, mov_eax_dword_ptr_[rdi], lea_rdi_[r@@ di@@ +rax+8], call_0xffffffffffff5@@ 1a@@ b, mov_esi_eax, mov_rdi_rbp, mov_ebx_eax, call_0x2@@ 96@@ f, sub_ebx_eax, add_rsp_8, mov_eax_ebx, pop_rbx, pop_rbp, ret
endbr64, sub_rsp_8, mov_esi_1, mov_edi_0x38, call_0xfffffffffffe8@@ 30@@ e, test_rax_rax, je_0x46, movabs_rdx_0x4@@ 0000@@ 0001, mov_dword_ptr_[rax]_0, mov_qword_ptr_[rax+8]_0, mov_qword_ptr_[rax+0x10]_0, mov_qword_ptr_[rax+0x18]_0, mov_dword_ptr_[rax+0x@@ 20]_0, mov_byte_ptr_[rax+0x@@ 24]_1, mov_qword_ptr_[rax+0x28]_rdx, mov_qword_ptr_[rax+0x@@ 30]_0, add_rsp_8, ret, lea_rcx_[rip+0x8@@ 94@@ 9], mov_edx_0x@@ 95, lea_rsi_[rip+0x@@ 87@@ bd], lea_rdi_[rip+0x7@@ 300], call_0xfffffffffffe@@ 7e@@ 2@@ 6
endbr64, push_rbp, mov_rbp_qword_ptr_[r@@ di+0x20], mov_rdi_qword_ptr_[rbp+0x30], test_rdi_rdi, je_7, call_0xfffffffffffe@@ 7f@@ 9e, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffffe@@ 7f@@ 9@@ 5
endbr64, mov_eax_dword_ptr_[rsi], cmp_eax_1, jne_7, ret, mov_rdx_qword_ptr_[r@@ di+0x20], mov_dword_ptr_[rdx]_eax, ret
endbr64, test_rdi_rdi, je_0x18, lea_edx_[r@@ si-1], cmp_edx@@ _0xe, mov_edx_4, mov_rax_qword_ptr_[rdi+0x20], cmovae@@ _esi@@ _edx, mov_dword_ptr_[rax+0x2@@ c]_esi, ret, push_rax, lea_rcx_[rip+0x@@ 88@@ a9], mov_edx_0x@@ c5, lea_rsi_[rip+0x@@ 87@@ 3d], lea_rdi_[rip+0x8@@ 40@@ e], call_0xfffffffffffe@@ 7d@@ a@@ 6
endbr64, test_rdi_rdi, je_0x18, lea_edx_[r@@ si@@ -2], cmp_edx@@ _0x7e, mov_edx_1, mov_rax_qword_ptr_[rdi+0x20], cmovae@@ _esi@@ _edx, mov_dword_ptr_[rax+0x@@ 28]@@ _esi, ret, push_rax, lea_rcx_[rip+0x@@ 88@@ 49], mov_edx_0x@@ d2, lea_rsi_[rip+0x@@ 86@@ fd], lea_rdi_[rip+0x8@@ 3c@@ e], call_0xfffffffffffe@@ 7d@@ 6@@ 6
endbr64, push_r15, xor_edx_edx, movapd_xmm1_xmm0, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0xa8, mov_rax_qword_ptr_[rdi+8], mov_rbp_qword_ptr_[r@@ di+0x20], mov_ecx_dword_ptr_[rax+8], mov_qword_ptr_[rsp+0x18]_rdi, mov_eax_ecx, div_dword_ptr_[r@@ bp+0x@@ 2c], movsd_xmm0_qword_ptr_[rip+0x@@ 8@@ 2a0], mov_rbx@@ _qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x9@@ 8]_rbx, xor_ebx_ebx, mov_dword_ptr_[rbp+0x@@ 20]_ecx, inc_eax, comi@@ sd_xmm0_xmm1, mov_dword_ptr_[rbp+0x@@ 10]_eax, ja@@ _0x10, movsd_xmm0_qword_ptr_[rip+0x@@ 88@@ af], comisd@@ _xmm1_xmm0, jb@@ _6, movapd_xmm1_xmm0, mov_eax_dword_ptr_[rbp+0x@@ 28], pxor_xmm2_xmm2, cvtsi2sd@@ _xmm2@@ _rax, pxor_xmm0_xmm0, cvtsi2sd_xmm0@@ _rcx, mulsd@@ _xmm1_xmm2, divsd_xmm0_xmm1, cvttsd2si@@ _rdx@@ _xmm0, lea_eax_[rdx+1], test_dl_1, je_5, lea_eax_[rdx@@ +2], mov_dword_ptr_[rbp+0x@@ 14]_eax, jmp_0xe, mov_eax_dword_ptr_[rbp+0x@@ 14], add_eax_2, mov_dword_ptr_[rbp+0x@@ 14]_eax, mov_edi_eax, call_0x4@@ 2e@@ 5, cmp_al_1, jne_0xffffffffffffffee, cmp_dword_ptr_[rbp+0x@@ 28]_1, pxor_xmm0_xmm0, je_0xe@@ 9c, mov_rax_qword_ptr_[rsp+0x18], mov_r10d_dword_ptr_[r@@ ax+0x10], test_r10d_r10d, jne_0xe@@ 62, mov_edi_dword_ptr_[r@@ bp+0x10], mov_esi_8, call_0xfffffffffffe8@@ 104, mov_ebx_dword_ptr_[r@@ bp+0x20], mov_esi_8, mov_rdi_rbx, mov_r15_rax, call_0xfffffffffffe@@ 80@@ f1, pxor_xmm0_xmm0, cvtsi2sd_xmm0@@ _rbx, mov_qword_ptr_[rsp+0x20]_rax, call_0xfffffffffffe@@ 7d@@ ce, div@@ sd_xmm0_qword_ptr_[rip+0x@@ 75@@ 39], div@@ sd_xmm0_qword_ptr_[rip+0x@@ 8@@ 80@@ 1], mulsd_xmm0_qword_ptr_[rip+0x@@ 8@@ 80@@ 1], cmp_dword_ptr_[rbp+0x@@ 28]_1, cvttsd2si_rax_xmm0, mov_qword_ptr_[rsp+0x40]_rax, je_0xd@@ e3, mov_edi_dword_ptr_[r@@ bp+0x14], mov_esi_1, call_0xfffffffffffe@@ 80@@ a5, mov_qword_ptr_[rbp+0x@@ 30]_rax, mov_edi_dword_ptr_[r@@ bp+0x10], mov_esi_4, call_0xfffffffffffe@@ 80@@ 94, mov_qword_ptr_[rsp+0x38]_rax, mov_rax_qword_ptr_[rsp+0x18], mov_dword_ptr_[rsp+0x6@@ c]@@ _0x64, mov_r9d_dword_ptr_[r@@ ax+0x10], mov_qword_ptr_[rsp]_0, mov_r12_rbp, test_r9d_r9d, jne_0x@@ 6b@@ f, mov_rbx_qword_ptr_[rsp+0x18], mov_qword_ptr_[rsp+0x80]_0, mov_r14_qword_ptr_[r@@ bx+0x20], mov_dword_ptr_[rsp+0x@@ 7c]_0, mov_eax_dword_ptr_[r14+0x@@ 20], xor_r13d_r13d, lea_rdi_[rax@@ +rax*2], shl_rdi@@ _2, call_0xfffffffffffe@@ 7c@@ 14, mov_qword_ptr_[rsp+8]_rax, lea_rax_[rsp+0x@@ 7c], mov_dword_ptr_[rsp+0x4@@ 8]@@ _0x3e8, mov_qword_ptr_[rsp+0x50]_rax, mov_rdi_qword_ptr_[r@@ 14+0x18], test_rdi_rdi, je_7, call_0xffffffffffff66@@ 47, mov_esi_dword_ptr_[r@@ 14+0x20], mov_edi_dword_ptr_[r@@ 14], call_0xffffffffffff6@@ 3f@@ b, mov_qword_ptr_[r14+0x1@@ 8]_rax, mov_edx_dword_ptr_[r@@ 14+0x10], test_r15_r15, je_0xe@@ 18, test_edx_edx, je_0x22, dec@@ _edx, lea_rax_[r@@ 15+4], lea_rdx_[r@@ 15@@ +rdx*8+0x@@ c], mov_dword_ptr_[rax]_0, add_rax_8, cmp_rdx_rax, jne_0xfffffffffffffff3, mov_rax_qword_ptr_[rbx+8], xor_ebp_ebp, mov_rdi_qword_ptr_[rax], call_qword_ptr_[rax+0x20], mov_esi_dword_ptr_[r@@ 14+0x20], lea_rax_[rsp+0x@@ 8c], mov_qword_ptr_[rsp+0x10]_rax, lea_r9_[rsp+0x@@ 80], test_esi_esi, je_0x@@ 86@@ 2, mov_qword_ptr_[rsp+0x2@@ 8]_r12, mov_r12_r9, mov_rax_qword_ptr_[rbx+8], mov_rdx_qword_ptr_[rsp+0x50], mov_rdi_qword_ptr_[rax], mov_rsi_r12, call_qword_ptr_[rax+0x10], mov_rdi_qword_ptr_[r@@ 14+0x18], mov_rcx_qword_ptr_[rsp+0x10], mov_edx_dword_ptr_[rsp+0x@@ 7c], mov_rsi_qword_ptr_[rsp+0x80], call_0xffffffffffff6@@ 3d@@ 1, mov_rsi_qword_ptr_[rsp+8], mov_eax_ebp, lea_rax_[rax+rax*2], lea_rsi_[r@@ si@@ +rax*4], mov_eax_dword_ptr_[rsp+0x@@ 8c], xor_edx_edx, div_dword_ptr_[r@@ 14+0x10], mov_ecx_dword_ptr_[r@@ 14+0x14], mov_eax_dword_ptr_[rsp+0x90], mov_r9d_edx, xor_edx_edx, div_ecx, mov_eax_dword_ptr_[rsp+0x@@ 94], mov_dword_ptr_[rsi+@@ 8]_r9d, mov_dword_ptr_[rsp+0x30]@@ _r9d, dec@@ _ecx, mov_dword_ptr_[rsi@@ ]_edx, xor_edx_edx, div_ecx, mov_rax_qword_ptr_[rbx+8], mov_rdi_qword_ptr_[rax], inc_edx, mov_dword_ptr_[rsi+@@ 4]_edx, mov_edx_dword_ptr_[rsp+0x@@ 7c], mov_rsi_qword_ptr_[rsp+0x80], call_qword_ptr_[rax+0x18], mov_r9d_dword_ptr_[rsp+0x@@ 30], mov_esi_dword_ptr_[r@@ 14+0x20], lea_rdx_[r@@ 15+r@@ 9@@ *8], mov_eax_dword_ptr_[r@@ dx+4], inc_eax, cmp_r13d_eax, cmovb@@ _r13d_eax, inc_ebp, mov_dword_ptr_[rdx+@@ 4]_eax, cmp_ebp@@ _esi, jb_0xffffffffffffff@@ 53, mov_edx_dword_ptr_[r@@ 14+0x10], mov_dword_ptr_[r15@@ ]_0, mov_r12@@ _qword_ptr_[rsp+0x28], cmp_edx_1, jbe_0x@@ 7b@@ 2, lea_ecx_[rdx@@ -2], lea_rax_[r@@ 15+4], lea_rdi_[r@@ 15@@ +rcx@@ *8+0x@@ c], xor_edx_edx, jmp_9, mov_edx_dword_ptr_[r@@ ax@@ -4], add_edx_dword_ptr_[r@@ ax], mov_dword_ptr_[rax+4]_edx, mov_dword_ptr_[rax]_0, add_rax_8, cmp_rdi_rax, jne_0xffffffffffffffeb, lea_rax_[r@@ 15@@ +rcx*@@ 8+8], mov_dword_ptr_[rax+@@ 4]_0, test_esi_esi, je_0x12c, mov_rcx_qword_ptr_[rsp+8], xor_edi_edi, mov_eax_dword_ptr_[r@@ cx+8], mov_rdx_qword_ptr_[rsp+0x20], lea_r8_[r@@ 15@@ +rax*8], mov_eax_dword_ptr_[r@@ 8], mov_r10d_dword_ptr_[r@@ cx], lea_rax_[rdx@@ +rax*8], mov_edx_dword_ptr_[r@@ 8+4], mov_r9d_dword_ptr_[r@@ cx+4], test_edx_edx, je_0xd8, lea_r11d@@ _[rdx@@ -1], lea_r11@@ _[rax+r@@ 11@@ *8+8], jmp_0x16, add_rax_8, cmp_rax@@ _r11, je_0x7@@ 31, cmp_dword_ptr_[rax]@@ _r10d, jne_0xfffffffffffffff0, cmp_dword_ptr_[rax+@@ 4]@@ _r9d, jne_0xffffffffffffffea, dec@@ _dword_ptr_[rsp+0x@@ 48], jne_0xfffffffffffffe@@ 0c, mov_r13_qword_ptr_[rsp+8], mov_rbp_r12, mov_rdi_r13, call_0xfffffffffffe@@ 7b@@ 1b, mov_rdi_qword_ptr_[r@@ 14+0x18], call_0xffffffffffff6@@ 44@@ 2, mov_qword_ptr_[r14+0x1@@ 8]_0, mov_rax_qword_ptr_[rsp+0x18], mov_edi_dword_ptr_[r@@ ax+0x10], test_edi_edi, jne_0xb@@ f3, mov_rdi_r15, call_0xfffffffffffe@@ 7a@@ f2, mov_rdi_qword_ptr_[rsp+0x20], call_0xfffffffffffe@@ 7a@@ e8, mov_rdi_qword_ptr_[rsp], call_0xfffffffffffe@@ 7a@@ df, mov_rdi_qword_ptr_[rsp+0x38], call_0xfffffffffffe@@ 7a@@ d5, mov_rdi_qword_ptr_[rbp+0x18], test_rdi_rdi, je_7, call_0xffffffffffff6@@ 3f@@ 7, mov_qword_ptr_[rbp+0x@@ 18]_0, xor_r12d_r12d, mov_rax_qword_ptr_[rsp+0x98], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ be@@ 2, add_rsp_0xa8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_edx_1, inc@@ _edi, mov_dword_ptr_[rax]@@ _r10d, mov_dword_ptr_[rax+@@ 4]@@ _r9d, mov_dword_ptr_[r@@ 8+@@ 4]_edx, add_rcx@@ _0xc, cmp_esi@@ _edi, jne_0xfffffffffffffe@@ ed, mov_rdi_qword_ptr_[rsp+8], call_0xfffffffffffe@@ 7a@@ 62, mov_rax_qword_ptr_[rsp+0x18], mov_r8d_dword_ptr_[r@@ ax+0x10], test_r8d_r8d, jne_0x@@ 99@@ 1, mov_rax_qword_ptr_[rsp], test_rax_rax, je_0xa, mov_rdi_rax, call_0xfffffffffffe@@ 7a@@ 3f, mov_eax_dword_ptr_[r12+0x@@ 20], mov_esi_8, mov_ebp_dword_ptr_[r@@ 12+0x10], lea_edi_[r@@ 13+1], mov_dword_ptr_[rsp+8]_eax, call_0xfffffffffffe@@ 7d@@ 13, mov_qword_ptr_[rsp]_rax, mov_rsi_rax, test_ebp_ebp, je_0x@@ 9dd, lea_eax_[r@@ bp-1], lea_rdx_[r@@ 15+4], mov_r14_rax, lea_rcx_[r@@ 15@@ +rax*8+0x@@ c], mov_eax_dword_ptr_[rdx], test_eax_eax, je_6, inc_dword_ptr_[r@@ si@@ +rax*8@@ +4], add_rdx_8, cmp_rcx_rdx, jne_0xffffffffffffffef, mov_rax_qword_ptr_[rsp], mov_dword_ptr_[rax+8]_0, cmp_r13d_1, jbe_0x@@ 9d@@ e, mov_rdi_qword_ptr_[rsp], mov_eax_2, lea_edx_[rax-1], lea_rdx_[r@@ di@@ +rdx*8], mov_ecx_eax, lea_rsi_[r@@ di@@ +rcx*8], mov_ecx_dword_ptr_[rdx+4], inc_eax, add_ecx_dword_ptr_[r@@ dx], mov_dword_ptr_[rsi@@ ]_ecx, mov_dword_ptr_[rdx+@@ 4]_0, cmp_eax_r13d, jbe_0xffffffffffffff@@ e0, mov_dword_ptr_[rsi+@@ 4]_0, mov_edi_ebp, mov_esi_8, call_0xfffffffffffe@@ 7c@@ 88, mov_rdx_rax, mov_rbx_rax, lea_r14d_[r@@ bp-1], test_ebp_ebp, je_0x2@@ f7, xor_eax_eax, jmp_0xa, mov_rax_rdx, mov_edx_dword_ptr_[r@@ 15@@ +rax*8@@ +4], test_edx_edx, je_0x23, mov_rcx_qword_ptr_[rsp], lea_rcx_[rcx@@ +rdx*8], mov_edx_dword_ptr_[r@@ cx+4], mov_esi_edx, add_esi@@ _dword_ptr_[r@@ cx], lea_rsi_[r@@ bx+r@@ si*8], mov_dword_ptr_[rsi+@@ 4]_eax, inc_edx, mov_dword_ptr_[rcx+@@ 4]_edx, mov_edi_dword_ptr_[r@@ 15@@ +rax*8], mov_dword_ptr_[rsi@@ ]_edi, lea_rdx_[rax+1], cmp_r14_rax, jne_0xffffffffffffffcc, mov_rdi_r15, call_0xfffffffffffe7@@ 93@@ f, mov_edi_dword_ptr_[rsp+8], mov_esi_8, call_0xfffffffffffe@@ 7c@@ 21, mov_qword_ptr_[rsp+0x10]_rax, mov_r15_rbx, test_r13d_r13d, je_0xa1, xor_edi_edi, mov_edx_1, lea_r14_[r@@ 15+8], mov_rbx_qword_ptr_[rsp], mov_eax_edx, lea_rcx_[r@@ bx+rax*8], mov_eax_dword_ptr_[rcx], mov_ecx_dword_ptr_[r@@ cx+4], lea_esi_[rax@@ +rcx], cmp_eax_esi, jae_0x@@ 71, lea_r8d_[r@@ cx-1], lea_rsi_[r@@ 15@@ +rax*8], add_rax_r8, mov_rcx_r8, lea_r11_[r@@ 14@@ +rax*8], mov_r8d_edi, mov_eax_dword_ptr_[rsi], mov_dword_ptr_[rsp+8]_edx, mov_dword_ptr_[rsi@@ ]@@ _r8d, mov_ebx_r8d, lea_ebp@@ _[rax@@ +rdx], sub_ebx_eax, mov_r10_qword_ptr_[rsp+0x20], mov_r9d_eax, mov_rdx_qword_ptr_[rsp+0x10], lea_r10_[r@@ 10+r@@ 9@@ *8], lea_r9d_[r@@ bx+rax], lea_r9@@ _[rdx+r@@ 9@@ *8], mov_edx_dword_ptr_[r@@ 10], inc_eax, mov_dword_ptr_[r@@ 9@@ ]_edx, mov_r10d_dword_ptr_[r@@ 10@@ +4], mov_dword_ptr_[r@@ 9+@@ 4]@@ _r10d, cmp_eax_ebp, jne_0xffffffffffffffd5, mov_edx_dword_ptr_[rsp+8], add_rsi_8, add_r8d@@ _edx, cmp_r11@@ _rsi, jne_0xffffffffffffffb4, imul_ecx@@ _edx, add_edi@@ _edx, add_edi@@ _ecx, inc_edx, cmp_edx@@ _r13d, jbe_0xffffffffffffff@@ 76, mov_rdi_qword_ptr_[rsp+0x20], call_0xfffffffffffe7@@ 87@@ b, mov_rax_qword_ptr_[rsp+0x18], mov_esi_dword_ptr_[r@@ ax+0x10], test_esi_esi, jne_0x7@@ 84, cmp_byte_ptr_[r@@ 12+0x@@ 24]_0, jne_0x4@@ 60, test_r13d_r13d, je_0x2@@ 8d, mov_rbx_qword_ptr_[rsp], mov_eax_r13d, lea_rax_[r@@ bx+rax*8], mov_qword_ptr_[rsp+0x20]_rax, lea_rax_[r@@ 15+8], mov_qword_ptr_[rsp+0x48]_rax, mov_rbx_qword_ptr_[rsp+0x20], mov_eax_dword_ptr_[rbx], mov_edx_dword_ptr_[rbx+4], lea_ecx_[rax@@ +rdx], cmp_eax_ecx, jae_0x@@ 248, mov_rbx_qword_ptr_[rsp+0x48], dec@@ _edx, lea_r14_[r@@ 15@@ +rax*8], add_rax_rdx, lea_rax_[r@@ bx+rax*8], mov_qword_ptr_[rsp+0x30]_rax, mov_eax_dword_ptr_[r14], mov_rbx_qword_ptr_[rsp+0x10], mov_dword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x2@@ 8]_r14, mov_r10d_dword_ptr_[r@@ 12+0x14], mov_esi_dword_ptr_[r@@ 12+0x28], lea_r8_[r@@ bx+rax*8], xor_ebp_ebp, xor_edi_edi, mov_r9d_edi, mov_r11d@@ _ebp, cmp_esi_1, jbe_0x@@ 2@@ ff, mov_rbx_r8, xor_ecx_ecx, mov_eax_dword_ptr_[rbx+4], mov_edx_dword_ptr_[rbx], imul_rax@@ _r9, add_rdx@@ _r11, mov_r14d@@ _r10d, add_rax_rdx, xor_edx_edx, div@@ _r14, mov_rax_qword_ptr_[r12+0x@@ 30], add_rax_rdx, movzx_edx_byte_ptr_[rax], mov_r14d_edx, cmp_edx_esi, jae_0x@@ 18, inc@@ _r14d, inc@@ _ecx, mov_byte_ptr_[rax]@@ _r14b, cmp_ecx@@ _r13d, jb_0x3@@ 28, mov_r10d_dword_ptr_[r@@ 12+0x14], cmp_ecx@@ _r13d, je_0x1@@ 7a, mov_esi_dword_ptr_[r@@ 12+0x28], cmp_esi_1, jbe_0x@@ 10@@ c, test_ecx_ecx, je_0x47, lea_eax_[r@@ cx-1], lea_rsi_[r@@ 8@@ +rax*8+8], mov_rcx_r8, jmp_0xc, mov_r10d_dword_ptr_[r@@ 12+0x14], mov_eax_dword_ptr_[r@@ cx+4], mov_edx_dword_ptr_[r@@ cx], imul_rax@@ _r9, add_rdx@@ _r11, add_rcx_8, add_rax_rdx, xor_edx_edx, div@@ _r10, add_rdx_qword_ptr_[r@@ 12+0x30], dec@@ _byte_ptr_[r@@ dx], cmp_rcx_rsi, jne_0xffffffffffffffd9, mov_esi_dword_ptr_[r@@ 12+0x28], mov_r10d_dword_ptr_[r@@ 12+0x14], inc@@ _edi, cmp_edi@@ _r10d, jb@@ _7, sub_edi@@ _r10d, inc_ebp, inc_dword_ptr_[r@@ sp+8], mov_eax_dword_ptr_[rsp+8], cmp_dword_ptr_[rsp+0x@@ 40]_eax, jbe_0x@@ b, cmp_ebp@@ _r10d, jb_0xffffffffffffff@@ 30, mov_rdi_qword_ptr_[r12+0x30], cmp_esi_1, jbe_0x@@ 4a@@ 1, xor_esi_esi, mov_edx_r10d, call_0xfffffffffffe7@@ 47@@ 7, dec@@ _dword_ptr_[rsp+0x@@ 6c], je_0x4@@ a9, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rsp+0x20]_rax, mov_rax_qword_ptr_[rsp+0x18], mov_r9d_dword_ptr_[r@@ ax+0x10], test_r9d_r9d, je_0xfffffffffffff@@ 95@@ 2, mov_rax_qword_ptr_[rip+0x@@ fc@@ 1d], mov_ecx_dword_ptr_[r@@ 12+0x20], mov_rdi_qword_ptr_[rax], mov_r8d_dword_ptr_[r@@ 12+0x14], lea_rdx_[rip+0x@@ 7f@@ 39], mov_esi_1, xor_eax_eax, call_0xfffffffffffe7@@ 47@@ a, jmp_0xfffffffffffff92@@ 5, mov_rdi_r15, mov_qword_ptr_[rsp+0x28]_rdx, call_0xfffffffffffe7@@ 68@@ 8, mov_edi_dword_ptr_[rsp+8], mov_esi_8, call_0xfffffffffffe7@@ 96@@ a, mov_rdx_qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp+0x10]_rax, mov_r15_rdx, jmp_0xfffffffffffffd@@ 4d, test_ecx_ecx, je_0xffffffffffffff@@ 41, lea_eax_[r@@ cx-1], lea_rsi_[r@@ 8@@ +rax*8+8], mov_rcx_r8, jmp_0xa, mov_r10d_dword_ptr_[r@@ 12+0x14], mov_eax_dword_ptr_[rcx], add_rcx_8, lea_rdx_[rax+r@@ 11], mov_eax_dword_ptr_[r@@ cx@@ -4], imul_rax@@ _r9, add_rax_rdx, xor_edx_edx, div@@ _r10, mov_r10_qword_ptr_[r@@ 12+0x30], mov_rax_rdx, mov_rbx_rdx, and_eax_0x1f, lea_rdx_[rip+0x7@@ fb@@ 5], mov_eax_dword_ptr_[rdx+rax*4], shr@@ _rbx@@ _5, xor@@ _dword_ptr_[r@@ 10+r@@ bx*@@ 4]_eax, cmp_rcx_rsi, jne_0xffffffffffffffbf, jmp_0xfffffffffffffede, mov_r14_qword_ptr_[rsp+0x28], imul@@ _r10d@@ _ebp, mov_eax_dword_ptr_[r@@ 14+4], mov_rbx_qword_ptr_[rsp+0x38], add_edi@@ _r10d, add_r14_8, mov_dword_ptr_[rbx@@ +rax*@@ 4]_edi, cmp_qword_ptr_[rsp+0x@@ 30]@@ _r14, jne_0xfffffffffffffdd@@ f, sub@@ _qword_ptr_[rsp+0x@@ 20]_8, dec@@ _r13d, jne_0xfffffffffffffd@@ a0, mov_rax_qword_ptr_[rsp+0x18], mov_rbp_r12, mov_eax_dword_ptr_[rax+0x10], test_eax_eax, jne_0x55@@ d, mov_rdi_qword_ptr_[rbp+8], test_rdi_rdi, je_7, call_0xfffffffffffe7@@ 5a@@ e, mov_esi@@ _0x38, mov_edi_1, call_0xfffffffffffe7@@ 88@@ f, mov_qword_ptr_[rbp+8]_rax, mov_rdi_rax, call_0x2@@ 003, mov_rbx_qword_ptr_[rsp+0x38], mov_edx_dword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rbp+8], mov_rsi_rbx, call_0x20@@ 6f, mov_rdi_r15, call_0xfffffffffffe7@@ 577, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffe7@@ 56@@ d, mov_rdi_qword_ptr_[rsp], call_0xfffffffffffe@@ 75@@ 64, mov_rdi_rbx, call_0xfffffffffffe7@@ 55@@ c, mov_edi_0x18, call_0xfffffffffffe7@@ 42@@ 2, mov_rbx_qword_ptr_[rsp+0x18], mov_r12_rax, mov_eax_dword_ptr_[rbx], mov_edi_0x18, mov_dword_ptr_[r12]_eax, call_0xfffffffffffe7@@ 40@@ a, mov_rdx_qword_ptr_[rbp+8], mov_qword_ptr_[rax]_rdx, mov_qword_ptr_[rbp@@ +8]_0, mov_rdx_qword_ptr_[rbp+0x18], mov_qword_ptr_[rax+0x10]_rdx, mov_qword_ptr_[rbp+0x@@ 18]_0, mov_edx_dword_ptr_[rbp+0x@@ 14], mov_dword_ptr_[rax+0x@@ c]_edx, mov_edx_dword_ptr_[rbp+0x10], mov_qword_ptr_[r12+0x10]_rax, mov_dword_ptr_[rax+8]_edx, mov_edx_dword_ptr_[rbx+0x10], mov_eax_dword_ptr_[rbp+0x@@ 14], mov_dword_ptr_[r12+@@ 4]_eax, test_edx_edx, je_0xfffffffffffffa@@ 41, mov_rax_qword_ptr_[rip+0x@@ fa@@ 53], mov_edx_0x3@@ 5, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x@@ 6b@@ e7], call_0xfffffffffffe7@@ 8c@@ 7, jmp_0xfffffffffffffa@@ 1b, mov_rsi_r8, xor_ecx_ecx, mov_eax_dword_ptr_[rsi], mov_ebx@@ _r10d, lea_rdx_[rax+r@@ 11], mov_eax_dword_ptr_[rsi+4], imul_rax@@ _r9, add_rax_rdx, xor_edx_edx, div@@ _rbx, mov_rax_qword_ptr_[r12+0x@@ 30], mov_rbx_rdx, shr@@ _rbx@@ _5, lea_r14@@ _[rax+r@@ bx*4], mov_rax_rdx, and_eax_0x1f, lea_rdx_[rip+0x@@ 7e@@ 2e], mov_ebx_dword_ptr_[r@@ 14], mov_eax_dword_ptr_[rdx+rax*4], test@@ _ebx_eax, jne_0xfffffffffffffd@@ 09, or@@ _ebx_eax, inc@@ _ecx, mov_dword_ptr_[r14]@@ _ebx, cmp_ecx@@ _r13d, jae_0xffffffffffff@@ fc@@ f4, mov_r10d_dword_ptr_[r@@ 12+0x14], add_rsi_8, jmp_0xffffffffffffffa4, mov_r10d_dword_ptr_[r@@ 12+0x14], mov_esi_dword_ptr_[r@@ 12+0x28], add_rbx_8, jmp_0xfffffffffffffc@@ 96, mov_edx_dword_ptr_[r@@ 14+0x10], mov_dword_ptr_[r15@@ ]_0, cmp_edx_1, ja_0xfffffffffffff@@ 86@@ e, mov_dword_ptr_[r15+@@ 4]_0, jmp_0xfffffffffffff9c@@ 5, mov_rax_r15, jmp_0xfffffffffffff88@@ 1, inc_edx, jmp_0xfffffffffffff98@@ e, test_r13d_r13d, je_0xfffffffffffffe@@ 33, mov_rbx_qword_ptr_[rsp], mov_eax_r13d, mov_qword_ptr_[rsp+0x30]@@ _r15, lea_r11_[r@@ bx+rax*8], mov_dword_ptr_[rsp+0x20]@@ _r13d, mov_r14_r12, mov_r13@@ _r11, mov_eax_dword_ptr_[r@@ 13+4], mov_dword_ptr_[rsp+0x28]_0, mov_dword_ptr_[rsp+0x68]_eax, mov_edi_eax, xor_ebx_ebx, xor_r15d_r15d, test_edi_edi, je_0x3@@ 26, mov_eax_dword_ptr_[r13], mov_qword_ptr_[rsp+0x6@@ 0]_r13, mov_dword_ptr_[rsp+0x48]_eax, mov_dword_ptr_[rsp+8]_eax, add_edi@@ _eax, mov_r10d_dword_ptr_[r@@ 14+0x14], mov_dword_ptr_[rsp+0x5@@ c]_edi, mov_ebp@@ _r15d, mov_r12d_ebx, xor_edi_edi, mov_eax_dword_ptr_[rsp+8], mov_rsi_qword_ptr_[rsp+0x30], mov_rcx_qword_ptr_[rsp+0x10], lea_r9_[r@@ si+rax*8], mov_eax_dword_ptr_[r@@ 9], mov_r11d_dword_ptr_[r@@ 14+0x28], lea_rcx_[r@@ cx+rax*8], mov_dword_ptr_[rsp+0x50]_eax, mov_r8_rcx, xor_esi_esi, cmp_r11d@@ _1, jbe_0x@@ 17@@ e, mov_eax_dword_ptr_[r@@ 8+4], mov_edx_dword_ptr_[r@@ 8], imul_rax@@ _rbp, add_rdx@@ _r12, mov_r13d@@ _r10d, add_rax_rdx, xor_edx_edx, div@@ _r13, mov_rax_qword_ptr_[r14+0x@@ 30], add_rax_rdx, movzx_edx_byte_ptr_[rax], mov_r13d_edx, cmp_edx@@ _r11d, jae_0x@@ 18, inc_r13d, inc@@ _esi, mov_byte_ptr_[rax]@@ _r13b, cmp_esi@@ _dword_ptr_[rsp+0x20], jb_0x2@@ 29, mov_r10d_dword_ptr_[r@@ 14+0x14], cmp_esi@@ _dword_ptr_[rsp+0x20], je_0x1@@ fb, cmp_dword_ptr_[r14+0x@@ 28]_1, jbe_0x@@ 188, test_esi_esi, je_0x38, lea_eax_[r@@ si-1], lea_rsi_[r@@ cx@@ +rax*8+8], mov_eax_dword_ptr_[rcx], add_rcx_8, lea_rdx_[rax+r@@ 12], mov_eax_dword_ptr_[r@@ cx@@ -4], imul_rax@@ _rbp, add_rax_rdx, xor_edx_edx, div@@ _r10, add_rdx_qword_ptr_[r@@ 14+0x30], dec@@ _byte_ptr_[r@@ dx], mov_r10d_dword_ptr_[r@@ 14+0x14], cmp_rcx_rsi, jne_0xffffffffffffffda, mov_eax_dword_ptr_[rsp+0x48], mov_rcx_qword_ptr_[rsp+0x30], add_eax@@ _edi, mov_esi_dword_ptr_[rsp+0x@@ 50], lea_rax_[rcx@@ +rax*8], mov_dword_ptr_[rax]@@ _esi, inc@@ _edi, mov_edx_dword_ptr_[r@@ 9+4], mov_dword_ptr_[rax+4]_edx, inc_dword_ptr_[r@@ sp+8], mov_eax_dword_ptr_[rsp+8], cmp_eax_dword_ptr_[rsp+0x@@ 5c], jne_0xffffffffffffff@@ 16, mov_r13@@ _qword_ptr_[rsp+0x60], inc@@ _r15d, mov_dword_ptr_[r13+@@ 4]_edi, cmp_r15d@@ _r10d, jb@@ _7, sub_r15d@@ _r10d, inc_ebx, inc@@ _dword_ptr_[rsp+0x28], mov_eax_dword_ptr_[rsp+0x28], cmp_ebx@@ _r10d, jae_0x@@ c, cmp_dword_ptr_[rsp+0x@@ 40]_eax, ja_0xfffffffffffffe@@ b9, mov_eax_dword_ptr_[rsp+0x68], mov_esi_dword_ptr_[r@@ 14+0x28], mov_r12_r14, mov_dword_ptr_[r13+@@ 4]_eax, mov_r15_qword_ptr_[rsp+0x30], mov_rdi_qword_ptr_[r12+0x30], cmp_esi_1, ja_0xffffffffffff@@ fb@@ 6b, lea_edx_[r@@ 10+0x1@@ f], shr_edx@@ _5, shl_rdx_2, xor_esi_esi, call_0xfffffffffffe6@@ fd@@ 4, dec@@ _dword_ptr_[rsp+0x@@ 6c], jne_0xfffffffffffffb@@ 63, mov_rax_qword_ptr_[rsp+0x10], mov_rbp_r12, mov_qword_ptr_[rsp+0x20]_rax, mov_rax_qword_ptr_[rsp+0x18], mov_ecx_dword_ptr_[r@@ ax+0x10], test_ecx_ecx, je_0xfffffffffffff7@@ 29, mov_rax_qword_ptr_[rip+0x@@ f7@@ 79], mov_edx_0x2@@ c, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x@@ 7a@@ d5], call_0xfffffffffffe7@@ 5e@@ d, jmp_0xfffffffffffff@@ 70@@ 3, mov_r10d_dword_ptr_[r@@ 14+0x14], add_r8@@ _8, mov_eax_dword_ptr_[r@@ 8+4], mov_edx_dword_ptr_[r@@ 8], imul_rax@@ _rbp, add_rdx@@ _r12, mov_r11d@@ _r10d, add_rax_rdx, xor_edx_edx, div@@ _r11, mov_rax_qword_ptr_[r14+0x@@ 30], mov_r11@@ _rdx, shr@@ _r11@@ _5, lea_r13@@ _[rax+r@@ 11@@ *4], mov_rax_rdx, and_eax_0x1f, lea_rdx_[rip+0x@@ 7b@@ 53], mov_r11d_dword_ptr_[r@@ 13], mov_eax_dword_ptr_[rdx+rax*4], test@@ _r11d@@ _eax, jne_0xfffffffffffffe@@ 8a, or@@ _r11d@@ _eax, inc@@ _esi, mov_dword_ptr_[r13@@ ]@@ _r11d, cmp_esi@@ _dword_ptr_[rsp+0x20], jae_0xfffffffffffffe@@ 73, jmp_0xffffffffffffffa0, test_esi_esi, je_0xfffffffffffffe@@ b6, lea_eax_[r@@ si-1], lea_rsi_[r@@ cx@@ +rax*8+8], mov_eax_dword_ptr_[rcx], mov_r8_qword_ptr_[r@@ 14+0x30], lea_rdx_[rax+r@@ 12], mov_eax_dword_ptr_[r@@ cx+4], add_rcx_8, imul_rax@@ _rbp, add_rax_rdx, xor_edx_edx, div@@ _r10, mov_rax_rdx, mov_r10@@ _rdx, and_eax_0x1f, lea_rdx_[rip+0x@@ 7a@@ e3], mov_eax_dword_ptr_[rdx+rax*4], shr@@ _r10@@ _5, xor@@ _dword_ptr_[r@@ 8+r@@ 10@@ *@@ 4]_eax, mov_r10d_dword_ptr_[r@@ 14+0x14], cmp_rcx_rsi, jne_0xffffffffffffffc1, jmp_0xfffffffffffffe@@ 5f, imul@@ _r10d@@ _ebx, mov_eax_dword_ptr_[r@@ 9+4], mov_rsi_qword_ptr_[rsp+0x38], add_r10d@@ _r15d, mov_dword_ptr_[rsi@@ +rax*@@ 4]@@ _r10d, mov_r10d_dword_ptr_[r@@ 14+0x14], jmp_0xfffffffffffffe@@ 56, mov_r11d_dword_ptr_[r@@ 14+0x28], mov_r10d_dword_ptr_[r@@ 14+0x14], add_r8@@ _8, jmp_0xfffffffffffffd@@ 94, mov_rax_qword_ptr_[rip+0x@@ f@@ 64@@ 9], mov_edx_0x18, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x7@@ 90@@ 4], call_0xfffffffffffe7@@ 4b@@ d, jmp_0xfffffffffffff86@@ 2, mov_rax_qword_ptr_[rip+0x@@ f6@@ 21], mov_edx_0x1@@ 7, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x@@ 67@@ 4b], call_0xfffffffffffe@@ 74@@ 95, jmp_0xfffffffffffff65@@ 5, mov_eax_dword_ptr_[rsp+0x68], sub_r13@@ _8, mov_dword_ptr_[r13+0x@@ c]_eax, dec@@ _dword_ptr_[rsp+0x20], jne_0xfffffffffffffc@@ ac, mov_rax_qword_ptr_[rsp+0x18], mov_r15_qword_ptr_[rsp+0x30], mov_eax_dword_ptr_[rax+0x10], mov_rbp_r14, test_eax_eax, je_0xfffffffffffffa@@ b9, mov_rax_qword_ptr_[rip+0x@@ f@@ 5c@@ 1], mov_edx_0x1@@ a, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x@@ 78@@ 95], call_0xfffffffffffe@@ 74@@ 35, jmp_0xfffffffffffffa@@ 89, mov_rax_qword_ptr_[rsp], mov_dword_ptr_[rax+8]_0, cmp_r13d_1, ja_0xfffffffffffff@@ 65@@ 1, mov_rax_qword_ptr_[rsp], mov_esi_8, mov_dword_ptr_[rax+0x@@ c]_0, xor_edi_edi, call_0xfffffffffffe7@@ 30@@ 1, mov_rbx_rax, jmp_0xfffffffffffff@@ 6c@@ 7, mov_rax_qword_ptr_[rsp], mov_edi_ebp, mov_dword_ptr_[rax+0x@@ c]_0, mov_esi_8, call_0xfffffffffffe7@@ 2d@@ e, mov_rbx_rax, jmp_0xfffffffffffff@@ 66@@ 5, mov_eax_dword_ptr_[rbp+0x@@ 14], mov_esi_4, lea_edi_[r@@ ax+0x1@@ f], shr_edi@@ _5, call_0xfffffffffffe7@@ 2c@@ 2, mov_qword_ptr_[rbp+0x@@ 30]_rax, jmp_0xfffffffffffff@@ 2@@ 1d, mov_rax_qword_ptr_[rip+0x@@ f5@@ 21], lea_rdx_[rip+0x@@ 78@@ 22], mov_rdi_qword_ptr_[rax], mov_esi_1, mov_eax_1, call_0xfffffffffffe@@ 6d@@ 85, jmp_0xfffffffffffff@@ 18@@ 4, mov_eax_dword_ptr_[rbp+0x@@ 14], pxor_xmm1_xmm1, cvtsi2sd_xmm1_rax, mov_eax_dword_ptr_[rbp+0x@@ 20], pxor_xmm2_xmm2, cvtsi2sd@@ _xmm2@@ _rax, movsd_xmm3@@ _qword_ptr_[rip+0x@@ 66@@ d8], movsd_qword_ptr_[r@@ sp@@ ]_xmm1, movapd@@ _xmm4@@ _xmm3, movapd@@ _xmm0_xmm2, divsd_xmm0_xmm1, movsd_qword_ptr_[rsp+8@@ ]_xmm2, subsd@@ _xmm4@@ _xmm0, movapd@@ _xmm0_xmm4, call_0xfffffffffffe@@ 6f@@ 39, movsd_xmm2@@ _qword_ptr_[rsp+8], movsd_xmm1@@ _qword_ptr_[rsp], mov_rax_qword_ptr_[rip+0x@@ 66@@ a2], divsd@@ _xmm1_xmm2, addsd@@ _xmm2_xmm2, movq@@ _xmm5@@ _rax, movq@@ _xmm3@@ _rax, divsd@@ _xmm5@@ _xmm2, subsd@@ _xmm1_xmm3, addsd@@ _xmm1_xmm5, mulsd_xmm0_xmm1, addsd@@ _xmm0_xmm3, div@@ sd_xmm0_qword_ptr_[rip+0x@@ 66@@ 6c], jmp_0xfffffffffffff0@@ e6, mov_rax_qword_ptr_[rip+0x@@ f@@ 46@@ 9], mov_edx_0x18, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x7@@ 70@@ b], call_0xfffffffffffe7@@ 2d@@ d, jmp_0xfffffffffffff@@ 3f@@ 3, lea_rcx_[rip+0x@@ 77@@ fc], mov_edx_0x4@@ d, lea_rsi_[rip+0x7@@ 6d@@ 0], lea_rdi_[rip+0x@@ 7a@@ ed], call_0xfffffffffffe@@ 6d@@ 39, call_0xfffffffffffe7@@ 13@@ 4
endbr64, push_r14, push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, mov_edi_0x18, push_rbx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xfffffffffffe@@ 6d@@ 55, mov_qword_ptr_[r12+0x10]_rax, lea_r13_[r@@ sp+4], mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r13, mov_rbx_rax, call_0xfffffffffffe@@ 70@@ 73, mov_r14d_dword_ptr_[r@@ sp+4], mov_rdi_r14, call_0xfffffffffffe@@ 6d@@ 26, mov_rdi_rax, mov_rcx_rbp, mov_edx_1, mov_rsi_r14, mov_r12_rax, call_0xfffffffffffe@@ 70@@ 50, mov_esi_dword_ptr_[rsp+4], mov_rdi_r12, call_0xffffffffffff57@@ 14, mov_rdi_r12, mov_qword_ptr_[rbx+0x10]_rax, call_0xfffffffffffe@@ 6e@@ 28, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r13, call_0xfffffffffffe@@ 70@@ 23, mov_r13d_dword_ptr_[r@@ sp+4], mov_rdi_r13, call_0xfffffffffffe@@ 6c@@ d6, mov_rdi_rax, mov_rcx_rbp, mov_edx_1, mov_rsi_r13, mov_r12_rax, call_0xfffffffffffe7@@ 000, mov_esi@@ _0x38, mov_edi_1, call_0xfffffffffffe@@ 70@@ d1, mov_edx_dword_ptr_[rsp+4], mov_rdi_rax, mov_rsi_r12, mov_qword_ptr_[rbx]_rax, call_0x1e@@ 9f, mov_rdi_r12, call_0xfffffffffffe@@ 6d@@ c7, lea_rdi_[rbx+0x@@ c], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffe6@@ fc@@ 1, lea_rdi_[rbx+8], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffe6@@ fa@@ b, test_rax_rax, je_0x23, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x4d, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rdi_rbp, call_0xfffffffffffe@@ 6d@@ bd, test_eax_eax, je_0xffffffffffffff@@ d5, call_0xfffffffffffe@@ 6f@@ 94, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 6e@@ 8d, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ f@@ 2b@@ 6], lea_rdx_[rip+0x6@@ 3c@@ 7], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 6b@@ 1d, jmp_0xffffffffffffffa7, call_0xfffffffffffe6@@ fa@@ 6
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0x28, mov_rbx_qword_ptr_[rdi+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_r12_[rsp+0x@@ c], lea_r13_[rsp+0x10], mov_qword_ptr_[rsp+0x10]_0, call_0xffffffffffff3@@ f7@@ 8, mov_rdi_qword_ptr_[rbx+0x10], mov_rdx_r12, mov_rsi_r13, call_0xffffffffffff54@@ 89, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r12, call_0xfffffffffffe@@ 70@@ c4, mov_esi_dword_ptr_[rsp+0xc], mov_rdi_qword_ptr_[rsp+0x10], mov_rcx_rbp, mov_edx_1, call_0xfffffffffffe@@ 70@@ ae, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffe@@ 6c@@ b4, mov_rdi_qword_ptr_[rbx], mov_rdx_r12, mov_rsi_r13, call_0x1c@@ 46, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r12, call_0xfffffffffffe@@ 70@@ 81, mov_esi_dword_ptr_[rsp+0xc], mov_rdi_qword_ptr_[rsp+0x10], mov_rcx_rbp, mov_edx_1, call_0xfffffffffffe@@ 70@@ 6b, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffe@@ 6c@@ 71, lea_rdi_[rbx+0x@@ c], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffe@@ 70@@ 4b, lea_rdi_[rbx+8], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffe@@ 70@@ 35, test_rax_rax, je_0x25, mov_eax_1, mov_rbx_qword_ptr_[rsp+0x18], xor_rbx_qword_ptr_fs:[0x28], jne_0x4c, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_rdi_rbp, call_0xfffffffffffe@@ 6c@@ 65, test_eax_eax, je_0xffffffffffffffd3, call_0xfffffffffffe@@ 6e@@ 3c, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 6d@@ 35, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ f@@ 15@@ e], lea_rdx_[rip+0x6@@ 26@@ f], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffe6@@ 9c@@ 5, xor_eax_eax, jmp_0xffffffffffffffa8, call_0xfffffffffffe@@ 6e@@ 4@@ c
endbr64, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, mov_r12_qword_ptr_[r@@ di+0x10], mov_rdi_qword_ptr_[r12], call_0x1@@ 66@@ a, mov_rdi_qword_ptr_[r12], call_0xfffffffffffe6@@ bb@@ 1, mov_rdi_qword_ptr_[r12+0x10], call_0xffffffffffff54@@ d7, mov_rdi_r12, call_0xfffffffffffe@@ 6b@@ 9f, add_rsp_8, mov_rdi_rbp, pop_rbp, pop_r12, jmp_0xfffffffffffe@@ 6b@@ 9@@ 0
endbr64, push_r12, push_rbp, push_rbx, sub_rsp_0x20, mov_r12_qword_ptr_[r@@ di+0x10], lea_rcx_[rsp+0x@@ c], mov_rdi_qword_ptr_[r12+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xffffffffffff5@@ 2b@@ 6, mov_ecx_dword_ptr_[r@@ 12+0xc], mov_eax_dword_ptr_[rsp+0x10], xor_edx_edx, div_ecx, mov_eax_dword_ptr_[rsp+0x14], mov_rdi_qword_ptr_[r12], dec@@ _ecx, mov_ebp_edx, xor_edx_edx, div_ecx, mov_eax_dword_ptr_[rsp+0xc], lea_ebx@@ _[rdx+1], xor_edx_edx, div_dword_ptr_[r@@ 12+8], mov_esi_edx, call_0x19@@ 14, mov_ecx_dword_ptr_[r@@ 12+0xc], xor_edx_edx, div_ecx, imul@@ _rbx@@ _rdx, mov_eax_eax, add_rax_rbp, add_rax_rbx, xor_edx_edx, div_rcx, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xd, add_rsp_0x20, pop_rbx, pop_rbp, mov_eax_edx, pop_r12, ret, call_0xfffffffffffe@@ 6d@@ 5@@ a
endbr64, push_r12, push_rbp, push_rbx, mov_rbx_rsi, add_rbx_4, mov_rbp_qword_ptr_[r@@ di+0x10], mov_rdi_qword_ptr_[rbp+0x10], call_0xffffffffffff5@@ 50@@ 9, mov_dword_ptr_[rbx@@ -4]_eax, mov_r12d_eax, mov_rsi_rbx, mov_rdi_qword_ptr_[rbp+0x10], call_0xffffffffffff54@@ 17, mov_edi_r12d, call_0xffffffffffff54@@ 3f, mov_esi_eax, mov_eax_dword_ptr_[rbp+0x@@ c], add_rsi@@ _rbx, mov_dword_ptr_[rsi]_eax, add_rsi_8, mov_eax_dword_ptr_[rbp+8], mov_dword_ptr_[rsi@@ -4]_eax, pop_rbx, mov_rdi_qword_ptr_[rbp], pop_rbp, pop_r12, jmp_0x1@@ c@@ 2@@ e
endbr64, push_rbp, push_rbx, sub_rsp_8, mov_rbp_qword_ptr_[r@@ di+0x10], mov_rdi_qword_ptr_[rbp+0x10], call_0xffffffffffff5@@ 4a@@ e, mov_edi_eax, call_0xffffffffffff5@@ 3f@@ 7, mov_rdi_qword_ptr_[rbp], mov_ebx_eax, call_0x1c@@ 8c, add_rsp_8, lea_eax_[r@@ bx+r@@ ax+0x10], pop_rbx, pop_rbp, ret
endbr64, push_r15, mov_r15_rsi, push_r14, push_r13, lea_r13_[r@@ di+4], push_r12, push_rbp, push_rbx, mov_ebx_edx, sub_rsp_0x38, mov_esi_dword_ptr_[r@@ di], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_edi_esi, mov_dword_ptr_[rsp+0xc]_esi, call_0xffffffffffff5@@ 3@@ 9d, mov_r12d_eax, mov_esi_dword_ptr_[rsp+0xc], add_r12@@ _r13, mov_ecx_ebx, mov_rdi_r13, lea_r8_[r@@ sp+0x1c], mov_rdx_r15, mov_ebp_dword_ptr_[r@@ 12], mov_r14d_dword_ptr_[r@@ 12+4], call_0xffffffffffff5@@ 3e8, mov_eax_dword_ptr_[rsp+0x20], xor_edx_edx, div@@ _ebp, mov_eax_dword_ptr_[rsp+0x24], lea_ecx_[r@@ bp-1], lea_rdi_[r@@ 12+8], mov_r13d_edx, xor_edx_edx, div_ecx, mov_eax_dword_ptr_[rsp+0x1c], lea_ebx@@ _[rdx+1], xor_edx_edx, div@@ _r14d, mov_esi_edx, call_0x1c@@ 2a, xor_edx_edx, div@@ _ebp, imul@@ _rbx@@ _rdx, mov_eax_eax, add_rax_r13, add_rax_rbx, xor_edx_edx, div@@ _rbp, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x13, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_edx, pop_r15, ret, call_0xfffffffffffe@@ 6b@@ e@@ f
push_r15, mov_r15_rdi, push_r14, lea_r14_[rip+0x@@ 7@@ 44@@ a], push_r13, push_r12, push_rbp, mov_ebp_edx, push_rbx, mov_rbx_rsi, mov_esi_edx, sub_rsp_0x28, mov_rdi_qword_ptr_[rdi+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0x2d@@ 7d, mov_edx_ebp, and_edx_7, mov_qword_ptr_[rsp+0x10]_rax, movzx_edx_byte_ptr_[r@@ 14@@ +rdx], mov_eax_ebp, shr_eax_3, or_byte_ptr_[r@@ bx@@ +rax]_dl, mov_eax_ebp, shl_rax_2, mov_qword_ptr_[rsp+8]_rax, lea_r13_[rsp+0x10], mov_rdi_qword_ptr_[r15+0x10], mov_rsi_r13, call_0x2d@@ 6a, mov_r12d_eax, cmp_eax_-1, je_0x57, mov_eax_r12d, mov_ecx_r12d, shr_eax_3, and_ecx_7, movzx_eax_byte_ptr_[r@@ bx+rax], mov_edx_ecx, and_al@@ _byte_ptr_[r@@ 14@@ +rdx], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, jne_0xffffffffffffffcf, mov_rdi_qword_ptr_[r15+0x10], mov_edx_r12d, mov_esi_ebp, call_0x27@@ 95, mov_rdx_qword_ptr_[r15+0x18], mov_rsi_qword_ptr_[rsp+8], mov_ecx_r12d, sub_eax_dword_ptr_[r@@ dx+r@@ si], mov_dword_ptr_[rdx@@ +rcx*@@ 4]_eax, mov_rsi_rbx, mov_edx_r12d, mov_rdi_r15, call_0xffffffffffffff@@ 45, jmp_0xffffffffffffff9f, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x11, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xfffffffffffe@@ 6a@@ f@@ 9
endbr64, sub_rsp_8, mov_edi_0x28, call_0xfffffffffffe@@ 67@@ 43, test_rax_rax, je_0x2e, pxor_xmm0_xmm0, movups_xmmword_ptr_[r@@ ax+@@ 8]_xmm0, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+0x18]_0, mov_qword_ptr_[rax+0x10]_0, mov_qword_ptr_[rax+0x20]_0, add_rsp_8, ret, lea_rcx_[rip+0x7@@ 30@@ e], mov_edx_0x1@@ 9, lea_rsi_[rip+0x7@@ 26@@ 2], lea_rdi_[rip+0x@@ 5b@@ 56], call_0xfffffffffffe@@ 66@@ 9@@ 3
endbr64, mov_rdi_qword_ptr_[rdi+0x20], jmp_0xfffffffffff@@ e6@@ 80@@ 8
endbr64, mov_eax_dword_ptr_[rsi], mov_rdx_qword_ptr_[r@@ di+0x20], cmp_eax_1, je_0xf, mov_dword_ptr_[rdx]_eax, mov_eax_dword_ptr_[rsi+4], cmp_eax_1, je_5, mov_dword_ptr_[rdx+@@ 4]_eax, ret
endbr64, push_r15, movapd_xmm1_xmm0, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_rax_qword_ptr_[rdi+8], ucomi@@ sd_xmm0_qword_ptr_[rip+0x@@ 6@@ 40@@ 3], mov_r13_qword_ptr_[r@@ di+0x20], mov_esi_dword_ptr_[rax+8], mov_dword_ptr_[r13+@@ 8]_esi, jp@@ _0xc, jne_0xa, movsd_xmm1_qword_ptr_[rip+0x@@ 7@@ 28@@ 4], mov_rax_qword_ptr_[rbx+8], pxor_xmm0_xmm0, mov_eax_dword_ptr_[rax+8], movsd_xmm3@@ _qword_ptr_[rip+0x@@ 5f@@ 21], cvtsi2sd_xmm0_rax, movsd_xmm4@@ _qword_ptr_[rip+0x@@ 5e@@ dc], mulsd_xmm0_xmm1, movapd@@ _xmm2_xmm0, and@@ pd@@ _xmm2@@ _xmm3, ucomisd@@ _xmm4@@ _xmm2, movapd_xmm1_xmm0, jbe_0x@@ 2d, cvttsd2si_rax_xmm0, pxor_xmm2_xmm2, movsd_xmm4@@ _qword_ptr_[rip+0x@@ 5@@ ea@@ d], and@@ n@@ pd@@ _xmm3@@ _xmm0, cvtsi2sd@@ _xmm2@@ _rax, cmp@@ n@@ l@@ e@@ sd@@ _xmm1_xmm2, and@@ pd@@ _xmm1_xmm4, addsd@@ _xmm1_xmm2, or@@ pd@@ _xmm1_xmm3, cvttsd2si@@ _rdi@@ _xmm1, mov_dword_ptr_[r13+0x@@ c]_edi, call_0x2@@ 77@@ a, mov_qword_ptr_[r13+0x1@@ 0]_rax, mov_edi_0x18, call_0xfffffffffffe6@@ 5e@@ c, mov_qword_ptr_[r13+0x@@ 20]_rax, mov_qword_ptr_[rax]_0, mov_rax_qword_ptr_[r13+0x@@ 20], mov_qword_ptr_[rax+8]_0, mov_rax_qword_ptr_[r13+0x@@ 20], mov_qword_ptr_[rax+0x10]_0, mov_r8d_dword_ptr_[r@@ bx+0x10], test_r8d_r8d, jne_0x3@@ ad, lea_rax_[rsp+0x@@ 2c], mov_qword_ptr_[rsp+0x10]_rax, lea_rax_[rsp+0x30], mov_qword_ptr_[rsp+0x18]_rax, mov_ebp@@ _0x14, mov_esi_dword_ptr_[r@@ 13+0xc], mov_edi_dword_ptr_[r@@ 13], mov_r12_qword_ptr_[r@@ 13+0x20], call_0xffffffffffff4d@@ ac, mov_qword_ptr_[r12]_rax, mov_esi_dword_ptr_[r@@ 13+0xc], mov_edi_dword_ptr_[r@@ 13+4], mov_r12_qword_ptr_[r@@ 13+0x20], call_0xffffffffffff4d@@ 97, mov_qword_ptr_[r12+8]_rax, xor_r12d_r12d, mov_r14_qword_ptr_[r@@ bx+0x20], mov_rdi_qword_ptr_[r14+0x10], call_0x2@@ 68@@ 2, mov_rax_qword_ptr_[rbx+8], mov_rdi_qword_ptr_[rax], call_qword_ptr_[rax+0x20], mov_rax_qword_ptr_[rbx+8], mov_edi_dword_ptr_[r@@ ax+8], test_edi_edi, jne_0x47, jmp_0x1@@ 30, mov_rax_qword_ptr_[rbx+8], mov_edx_dword_ptr_[rsp+0x2c], mov_rdi_qword_ptr_[rax], mov_rsi_qword_ptr_[rsp+0x30], mov_dword_ptr_[rsp+0xc]_r8d, call_qword_ptr_[rax+0x18], mov_r8d_dword_ptr_[rsp+0xc], mov_rdi_qword_ptr_[r14+0x10], mov_edx_r8d, mov_esi_r15d, call_0x2@@ 3f@@ 9, mov_rax_qword_ptr_[rbx+8], inc_r12d, cmp_r12d_dword_ptr_[r@@ ax+8], jae_0x@@ f1, mov_rdx_qword_ptr_[rsp+0x10], mov_rsi_qword_ptr_[rsp+0x18], mov_rdi_qword_ptr_[rax], call_qword_ptr_[rax+0x10], mov_rax_qword_ptr_[r14+0x20], mov_edx_dword_ptr_[rsp+0x2c], mov_rsi_qword_ptr_[rsp+0x30], mov_rdi_qword_ptr_[rax], call_0xffffffffffff4d@@ 43, xor_edx_edx, div_dword_ptr_[r@@ 14+0xc], mov_rax_qword_ptr_[r14+0x20], mov_rsi_qword_ptr_[rsp+0x30], mov_rdi_qword_ptr_[rax+8], mov_r15d_edx, mov_edx_dword_ptr_[rsp+0x2c], call_0xffffffffffff4d@@ 24, mov_esi_dword_ptr_[r@@ 14+0xc], xor_edx_edx, div_esi, mov_r8d_edx, cmp_r15d@@ _edx, jne_0xffffffffffffff@@ 71, lea_r8d_[r@@ 15+1], cmp_esi@@ _r8d, mov_eax_0, cmovbe@@ _r8d_eax, cmp_r15d@@ _r8d, jne_0xffffffffffffff@@ 58, mov_ecx_dword_ptr_[r@@ bx+0x10], test_ecx_ecx, jne_0x2@@ 35, mov_rax_qword_ptr_[rbx+8], mov_edx_dword_ptr_[rsp+0x2c], mov_rsi_qword_ptr_[rsp+0x30], mov_rdi_qword_ptr_[rax], call_qword_ptr_[rax+0x18], mov_rax_qword_ptr_[r13+0x@@ 20], dec@@ _ebp, mov_rdi_qword_ptr_[rax], call_0xffffffffffff4@@ ec@@ b, mov_rax_qword_ptr_[r13+0x@@ 20], mov_qword_ptr_[rax]_0, mov_rax_qword_ptr_[r13+0x@@ 20], mov_rdi_qword_ptr_[rax+8], call_0xffffffffffff4@@ eb@@ 3, mov_rax_qword_ptr_[r13+0x@@ 20], mov_qword_ptr_[rax+8]_0, mov_edx_dword_ptr_[rbx+0x10], test_edx_edx, jne_0x1@@ bd, test_ebp_ebp, jne_0xfffffffffffffe@@ 9d, mov_rdi_qword_ptr_[r13+0x10], xor_r12d_r12d, call_0x2@@ 228, jmp_0x1@@ 6a, mov_rdi_qword_ptr_[r14+0x10], call_0x26@@ 24, mov_esi_dword_ptr_[r@@ bx+0x10], test_esi_esi, je_0x1@@ 7a, mov_rdx_qword_ptr_[rip+0x@@ ea@@ 95], mov_rcx_qword_ptr_[rdx], test_eax_eax, jne_0x1@@ c8, mov_edx_0x1@@ 9, mov_esi_1, lea_rdi_[rip+0x@@ 6f@@ 83], call_0xfffffffffffe6@@ 90@@ 1, mov_edi_dword_ptr_[r@@ 13+0xc], mov_esi_1, shr_edi@@ _3, inc@@ _edi, call_0xfffffffffffe@@ 67@@ ea, mov_rdi_qword_ptr_[r@@ 13+0x18], mov_r12_rax, call_0xfffffffffffe@@ 64@@ ee, mov_edi_dword_ptr_[r@@ 13+0xc], mov_r14_rdi, shl_rdi@@ _2, call_0xfffffffffffe6@@ 3a@@ e, mov_qword_ptr_[r13+0x1@@ 8]_rax, test_rax_rax, je_0x1@@ e7, mov_eax_1, xor_ebp_ebp, lea_r15_[rip+0x@@ 6@@ fa@@ 6], test_r14d_r14d, jne_0x1d, jmp_0x5@@ 4, inc_ebp, cmp_dword_ptr_[r13+0x@@ c]_ebp, jbe_0x@@ 45, mov_eax_ebp, and_eax_7, movzx_eax_byte_ptr_[r@@ 15+rax], mov_edx_ebp, shr_edx@@ _3, and_al@@ _byte_ptr_[r@@ 12@@ +rdx], mov_ecx_ebp, movzx_eax_al, and_ecx_7, sar_eax@@ _cl, test_eax_eax, jne_0xffffffffffffffd9, mov_rdx_qword_ptr_[r@@ 13+0x18], mov_eax_ebp, mov_dword_ptr_[rdx@@ +rax*@@ 4]_0, mov_rsi_r12, mov_edx_ebp, mov_rdi_r13, inc_ebp, call_0xfffffffffffffb@@ 00, cmp_dword_ptr_[r13+0x@@ c]_ebp, ja_0xffffffffffffff@@ bf, mov_rdi_qword_ptr_[r13+0x10], call_0x2@@ 13@@ 1, mov_rdi_r12, call_0xfffffffffffe@@ 64@@ 59, mov_qword_ptr_[r13+0x1@@ 0]_0, mov_edi_0x18, call_0xfffffffffffe@@ 63@@ 17, mov_r12_rax, mov_eax_dword_ptr_[rbx], mov_edi_0x18, mov_dword_ptr_[r12]_eax, call_0xfffffffffffe6@@ 30@@ 4, mov_rdx_qword_ptr_[r@@ 13+0x18], mov_qword_ptr_[rax+8]_rdx, mov_qword_ptr_[r13+0x1@@ 8]_0, mov_rdx_qword_ptr_[r@@ 13+0x20], mov_qword_ptr_[rax+0x10]_rdx, mov_qword_ptr_[r13+0x@@ 20]_0, mov_edx_dword_ptr_[r13+0x@@ c], mov_dword_ptr_[rax+4]_edx, mov_edx_dword_ptr_[r@@ 13+8], mov_qword_ptr_[r12+0x10]_rax, mov_dword_ptr_[rax]_edx, mov_eax_dword_ptr_[r13+8], mov_dword_ptr_[r12+@@ 4]_eax, mov_eax_dword_ptr_[rbx+0x10], test_eax_eax, jne_0x@@ df, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x10@@ f, add_rsp_0x48, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, test_eax_eax, je_0xfffffffffffffe@@ b6, jmp_0xfffffffffffffe@@ 14, mov_rax_qword_ptr_[rip+0x@@ e9@@ 11], mov_ecx_ebp, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x@@ 6e@@ 2d], mov_esi_1, xor_eax_eax, call_0xfffffffffffe6@@ 17@@ 6, jmp_0xfffffffffffffe@@ 2a, mov_rax_qword_ptr_[rip+0x@@ e@@ 8e@@ 9], mov_ecx_r12d, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x6@@ 5a4], mov_esi_1, xor_eax_eax, call_0xfffffffffffe6@@ 14d, jmp_0xfffffffffffffd@@ b1, mov_edx_0x1@@ 7, mov_esi_1, lea_rdi_[rip+0x@@ 6d@@ a2], call_0xfffffffffffe@@ 67@@ 3f, jmp_0xfffffffffffffd@@ a6, mov_rax_qword_ptr_[rip+0x@@ e@@ 8a@@ 1], mov_ecx_dword_ptr_[r@@ 13+8], mov_rdi_qword_ptr_[rax], mov_r8d_dword_ptr_[r@@ 13+0xc], lea_rdx_[rip+0x@@ 5c@@ e7], mov_esi_1, xor_eax_eax, call_0xfffffffffffe6@@ 100, jmp_0xfffffffffffffc@@ 34, mov_rax_qword_ptr_[rip+0x@@ e@@ 87@@ 1], mov_edx_0x3@@ 5, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x@@ 5a@@ 05], call_0xfffffffffffe@@ 66@@ e5, jmp_0xffffffffffffff07, lea_rcx_[rip+0x@@ 6d@@ b4], mov_edx_0x7@@ 3, lea_rsi_[rip+0x6d@@ 10], lea_rdi_[rip+0x@@ 6d@@ 3c], call_0xfffffffffffe6@@ 14@@ 1, call_0xfffffffffffe@@ 65@@ 3@@ c
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0x28, mov_rbx_qword_ptr_[rdi+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0x@@ c]_2, call_0xffffffffffff3@@ 50@@ a, mov_rcx_rbp, lea_rdi_[rsp+0x@@ c], mov_edx_1, mov_esi_4, call_0xfffffffffffe@@ 66@@ 63, mov_rax_qword_ptr_[rbx+0x10], lea_r12_[r@@ sp+8], mov_rdi_qword_ptr_[rax], lea_r13_[rsp+0x10], mov_rdx_r12, mov_rsi_r13, call_0xffffffffffff4@@ 9f@@ 7, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r12, call_0xfffffffffffe@@ 66@@ 32, mov_esi_dword_ptr_[rsp+8], mov_rdi_qword_ptr_[rsp+0x10], mov_rcx_rbp, mov_edx_1, call_0xfffffffffffe@@ 66@@ 1c, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffe6@@ 22@@ 2, mov_rax_qword_ptr_[rbx+0x10], mov_rdx_r12, mov_rdi_qword_ptr_[rax+8], mov_rsi_r13, call_0xffffffffffff4@@ 9a@@ f, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_r12, call_0xfffffffffffe@@ 65@@ ea, mov_esi_dword_ptr_[rsp+8], mov_rdi_qword_ptr_[rsp+0x10], mov_rcx_rbp, mov_edx_1, call_0xfffffffffffe6@@ 5d@@ 4, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffe6@@ 1d@@ a, lea_rdi_[r@@ bx+4], mov_rcx_rbp, mov_edx_1, mov_esi_4, call_0xfffffffffffe6@@ 5b@@ 4, mov_rcx_rbp, mov_edx_1, mov_esi_4, mov_rdi_rbx, call_0xfffffffffffe@@ 65@@ 9f, mov_esi_dword_ptr_[r@@ bx+4], mov_rdi_qword_ptr_[rbx+8], shl_rsi@@ _2, mov_rcx_rbp, mov_edx_1, call_0xfffffffffffe6@@ 58@@ 7, test_rax_rax, je_0x27, mov_eax_1, mov_rbx_qword_ptr_[rsp+0x18], xor_rbx_qword_ptr_fs:[0x28], jne_0x4e, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_rdi_rbp, call_0xfffffffffffe6@@ 1b@@ 5, test_eax_eax, je_0xffffffffffffffd1, call_0xfffffffffffe6@@ 38@@ c, mov_edi_dword_ptr_[rax], call_0xfffffffffffe6@@ 28@@ 5, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ e@@ 6a@@ e], lea_rdx_[rip+0x@@ 57@@ bf], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 5f@@ 15, xor_eax_eax, jmp_0xffffffffffffffa6, call_0xfffffffffffe6@@ 39@@ c
endbr64, push_r15, mov_r15_rdi, mov_edi_0x18, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rsi, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xfffffffffffe5@@ fc@@ 3, mov_qword_ptr_[rbx+0x10]_rax, mov_edx_1, mov_rdi_rsp, mov_rcx_r15, mov_esi_4, mov_r13_rax, call_0xfffffffffffe6@@ 2e@@ 7, mov_ebx_dword_ptr_[r@@ sp], lea_edi_[r@@ bx+1], shl_rdi_3, call_0xfffffffffffe@@ 5f@@ 98, mov_edx_ebx, mov_qword_ptr_[r13+0x1@@ 0]_rax, mov_qword_ptr_[rax+rdx*@@ 8]_0, test_ebx_ebx, je_0x70, xor_ebx_ebx, lea_r14_[r@@ sp+4], mov_rcx_r15, mov_edx_1, mov_esi_4, mov_rdi_r14, call_0xfffffffffffe6@@ 2a0, mov_r12d_dword_ptr_[r@@ sp+4], mov_rdi_r12, call_0xfffffffffffe@@ 5f@@ 53, mov_rdi_rax, mov_rcx_r15, mov_edx_1, mov_rsi_r12, mov_rbp_rax, call_0xfffffffffffe6@@ 27@@ d, mov_esi_dword_ptr_[rsp+4], mov_rdi_rbp, call_0xffffffffffff4@@ 94@@ 1, mov_rcx_qword_ptr_[r@@ 13+0x10], mov_edx_ebx, mov_qword_ptr_[rcx@@ +rdx*@@ 8]_rax, mov_rdi_rbp, inc_ebx, call_0xfffffffffffe@@ 60@@ 4d, cmp_dword_ptr_[rsp@@ ]_ebx, ja_0xffffffffffffff@@ a5, lea_rdi_[r@@ 13+4], mov_rcx_r15, mov_edx_1, mov_esi_4, call_0xfffffffffffe6@@ 24@@ 2, mov_rcx_r15, mov_edx_1, mov_esi_4, mov_rdi_r13, call_0xfffffffffffe6@@ 22@@ d, mov_ebp_dword_ptr_[r@@ 13+4], shl_rbp@@ _2, mov_rdi_rbp, call_0xfffffffffffe@@ 5e@@ dd, mov_rdi_rax, mov_rcx_r15, mov_edx_1, mov_rsi_rbp, mov_qword_ptr_[r13+8]_rax, call_0xfffffffffffe6@@ 20@@ 6, test_rax_rax, je_0x26, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x50, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_r15, call_0xfffffffffffe@@ 60@@ 15, test_eax_eax, je_0xffffffffffffffd2, call_0xfffffffffffe6@@ 1e@@ c, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 60@@ e5, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x@@ e@@ 50@@ e], lea_rdx_[rip+0x@@ 56@@ 1f], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 5d@@ 75, jmp_0xffffffffffffffa4, call_0xfffffffffffe6@@ 1f@@ e
endbr64, push_r13, mov_r13d_edx, push_r12, mov_r12_rsi, push_rbp, push_rbx, sub_rsp_8, mov_rbx_qword_ptr_[rdi+0x10], mov_rax_qword_ptr_[rbx+0x10], mov_rdi_qword_ptr_[rax], call_0xffffffffffff@@ 46@@ 91, xor_edx_edx, div_dword_ptr_[r@@ bx+4], mov_rax_qword_ptr_[rbx+0x10], mov_rdi_qword_ptr_[rax+8], mov_rsi_r12, mov_ebp_edx, mov_edx_r13d, call_0xffffffffffff4@@ 67@@ 7, mov_esi_dword_ptr_[r@@ bx+4], xor_edx_edx, div_esi, cmp_ebp@@ _edx, je_0x29, mov_edx_edx, lea_rcx_[rdx@@ *4], mov_rdx_qword_ptr_[rbx+8], mov_eax_dword_ptr_[r@@ dx@@ +rcx], add_eax_dword_ptr_[r@@ dx+r@@ bp*4], xor_edx_edx, div_dword_ptr_[r@@ bx], add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_eax_edx, ret, lea_ecx_[r@@ bp+1], mov_rax_rcx, mov_edx_0, shl_rcx@@ _2, cmp_esi_eax, cmovbe@@ _rcx_rdx, jmp_0xffffffffffffffc@@ e
endbr64, push_r12, mov_r12_rdi, push_rbp, sub_rsp_8, mov_rbp_qword_ptr_[r@@ di+0x10], mov_rdi_qword_ptr_[rbp+8], call_0xfffffffffffe@@ 5e@@ da, mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax], call_0xffffffffffff47@@ fe, mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax+8], call_0xffffffffffff47@@ f1, mov_rdi_qword_ptr_[rbp+0x10], call_0xfffffffffffe@@ 5e@@ b8, mov_rdi_rbp, call_0xfffffffffffe@@ 5e@@ b0, add_rsp_8, pop_rbp, mov_rdi_r12, pop_r12, jmp_0xfffffffffff@@ e5@@ ea@@ 1
endbr64, push_r12, push_rbp, push_rbx, mov_rbx_rsi, add_rbx_4, mov_rbp_qword_ptr_[r@@ di+0x10], mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax], call_0xffffffffffff48@@ b6, mov_dword_ptr_[rbx@@ -4]_eax, mov_r12d_eax, mov_rsi_rbx, mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax], call_0xffffffffffff47@@ c1, mov_edi_r12d, call_0xffffffffffff47@@ e9, mov_edi_eax, mov_rax_qword_ptr_[rbp+0x10], add_rbx@@ _rdi, mov_rdi_qword_ptr_[rax+8], add_rbx_4, call_0xffffffffffff4@@ 88@@ 3, mov_dword_ptr_[rbx@@ -4]_eax, mov_r12d_eax, mov_rsi_rbx, mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax+8], call_0xffffffffffff47@@ 8d, mov_edi_r12d, call_0xffffffffffff47@@ b5, mov_edi_eax, mov_eax_dword_ptr_[rbp+4], add_rdi_rbx, mov_dword_ptr_[rdi]_eax, add_rdi_8, mov_eax_dword_ptr_[rbp], mov_dword_ptr_[rdi-@@ 4]_eax, mov_edx_dword_ptr_[r@@ bp+4], pop_rbx, mov_rsi_qword_ptr_[rbp+8], pop_rbp, shl_rdx_2, pop_r12, jmp_0xfffffffffff@@ e6@@ 27@@ d
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_rbp_qword_ptr_[r@@ di+0x10], mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax], call_0xffffffffffff48@@ 17, mov_r13d_eax, mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax+8], call_0xffffffffffff4@@ 80@@ 7, mov_r12d_eax, mov_edi_r13d, call_0xffffffffffff47@@ 4c, mov_edi_r12d, mov_ebx_eax, call_0xffffffffffff47@@ 42, mov_r8d_eax, mov_eax_dword_ptr_[rbp+4], add_rsp_8, lea_eax_[r@@ bx@@ +rax*4@@ +0x1@@ 4], pop_rbx, pop_rbp, pop_r12, add_eax@@ _r8d, pop_r13, ret
endbr64, push_r15, push_r14, mov_r14d_edx, push_r13, mov_r13_rsi, push_r12, lea_r12_[r@@ di+4], push_rbp, push_rbx, sub_rsp_0x18, mov_esi_dword_ptr_[r@@ di], mov_edi_esi, mov_dword_ptr_[rsp+0xc]_esi, call_0xffffffffffff4@@ 6f@@ c, mov_ebp_eax, add_rbp@@ _r12, mov_r8d_dword_ptr_[r@@ bp], add_rbp@@ _4, mov_edi_r8d, mov_dword_ptr_[rsp+8]_r8d, call_0xffffffffffff4@@ 6e@@ 2, mov_eax_eax, add_rax_rbp, mov_ebx_dword_ptr_[rax], mov_esi_dword_ptr_[rsp+0xc], lea_r15@@ _[rax+8], mov_eax_dword_ptr_[rax+4], mov_rdi_r12, mov_ecx_r14d, mov_rdx_r13, mov_dword_ptr_[rsp+4]_eax, call_0xffffffffffff4@@ 6e@@ e, xor_edx_edx, div@@ _ebx, mov_r8d_dword_ptr_[rsp+8], mov_ecx_r14d, mov_esi_r8d, mov_rdi_rbp, mov_r12d_edx, mov_rdx_r13, call_0xffffffffffff4@@ 6d@@ 1, xor_edx_edx, div@@ _ebx, cmp_r12d_edx, je_0x25, mov_eax_edx, lea_rax_[r@@ 15@@ +rax*4], mov_eax_dword_ptr_[rax], xor_edx_edx, add_eax_dword_ptr_[r@@ 15+r@@ 12*4], div_dword_ptr_[r@@ sp+4], add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, mov_eax_edx, ret, lea_edx_[r@@ 12+1], mov_rax_r15, cmp_ebx@@ _edx, jbe_0xffffffffffffff@@ d9, lea_rax_[r@@ 15@@ +rdx*4], jmp_0xffffffffffffffd@@ 3
endbr64, push_rbx, mov_qword_ptr_[rdi]_0, mov_dword_ptr_[rdi+@@ 8]_0, mov_rbx_rdi, lea_rdi_[r@@ di+0x10], call_0x2@@ 38@@ 6, mov_qword_ptr_[rbx+0x28]_0, pop_rbx, ret
endbr64, push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+0x@@ 28], call_0xfffffffffffe@@ 5c@@ 84, mov_qword_ptr_[rbx+0x28]_0, lea_rdi_[r@@ bx+0x10], pop_rbx, jmp_0x2@@ 39@@ 2
endbr64, push_r15, lea_eax_[rdx-1], push_r14, push_r13, mov_r13d_edx, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0x18, mov_dword_ptr_[rdi+@@ 4]_edx, xor_edx_edx, mov_r9d_dword_ptr_[r@@ si@@ +rax*4], mov_eax_r9d, div@@ _r13d, mov_dword_ptr_[rdi]@@ _r9d, cmp_eax_1, jbe_0x@@ 17@@ 9, xor_ebx_ebx, shr_eax_1, inc_ebx, cmp_eax_1, jne_0xfffffffffffffff@@ 9, mov_dword_ptr_[r12+@@ 8]_ebx, test_ebx_ebx, je_0x1@@ 5c, mov_r15d@@ _r13d, mov_ecx_ebx, imul@@ _r15d@@ _ebx, shl_eax_cl, lea_r8d@@ _[rax-1], mov_ecx_ebx, shr_r9d_cl, add_r15d@@ _0x1f, mov_edi@@ _r9d, mov_esi_4, shr@@ _r15d@@ _5, mov_dword_ptr_[rsp+8]_r9d, mov_dword_ptr_[rsp+0xc]_r8d, call_0xfffffffffffe5@@ ec@@ c, mov_edi_r15d, mov_esi_4, mov_r14_rax, call_0xfffffffffffe@@ 5e@@ bc, test_r13d_r13d, mov_qword_ptr_[r12+0x@@ 28]_rax, mov_r9d_dword_ptr_[rsp+8], je_0x95, mov_r8d_dword_ptr_[rsp+0xc], xor_esi_esi, mov_r9d@@ _0x20, jmp_0xc, mov_rax_qword_ptr_[r12+0x@@ 28], mov_ecx_esi, imul_ecx@@ _ebx, mov_edx_esi, mov_edi_dword_ptr_[r@@ bp@@ +rdx*4], mov_r11d@@ _ecx, shr@@ _r11d@@ _5, mov_edx@@ _r11d, and_ecx@@ _0x1f, lea_r13_[rax@@ +rdx*4], mov_edx_r8d, and_edi@@ _r8d, shl_edx_cl, not_edx, mov_r15d@@ _edi, and_edx@@ _dword_ptr_[r@@ 13], mov_r10d@@ _r9d, shl@@ _r15d@@ _cl, or_edx@@ _r15d, sub_r10d@@ _ecx, mov_dword_ptr_[r13@@ ]_edx, cmp_r10d@@ _ebx, jae_0x@@ 1c, lea_edx_[r@@ 11@@ +1], lea_rdx_[rax@@ +rdx*4], mov_ecx_r10d, mov_eax_r8d, shr_eax@@ _cl, not_eax, and_eax@@ _dword_ptr_[r@@ dx], shr_edi@@ _cl, or_eax@@ _edi, mov_dword_ptr_[rdx]_eax, mov_r13d_dword_ptr_[r@@ 12+4], inc@@ _esi, mov_ebx_dword_ptr_[r@@ 12+8], cmp_r13d@@ _esi, ja_0xffffffffffffff@@ 90, mov_r9d_dword_ptr_[r@@ 12], mov_ecx_ebx, shr_r9d_cl, xor_esi_esi, mov_r8d_1, xor_edi_edi, test_r9d_r9d, je_0x3b, mov_eax_dword_ptr_[r@@ bp+r@@ di*4], mov_ecx_ebx, shr_eax@@ _cl, cmp_eax@@ _r8d, jae_0x@@ 18, lea_edi_[r@@ si+1], mov_edx_dword_ptr_[r@@ bp+r@@ di*4], mov_ecx_ebx, shr_edx_cl, mov_rsi_rdi, cmp_edx@@ _r8d, jb_0xffffffffffffff@@ ef, lea_eax_[r@@ 8-1], inc@@ _r8d, mov_dword_ptr_[r@@ 14@@ +rax*@@ 4]_esi, cmp_r8d@@ _r9d, jbe_0xffffffffffffff@@ cf, lea_rdi_[r@@ 12+0x10], mov_ecx_r13d, mov_rsi_r14, mov_edx_r9d, call_0x22@@ 1f, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_rdi_r14, pop_r14, pop_r15, jmp_0xfffffffffffe@@ 5a@@ b9, mov_dword_ptr_[r12+@@ 8]_1, mov_r15d@@ _r13d, mov_r8d_1, mov_ebx_1, jmp_0xfffffffffffffea@@ 2
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_8, cmp_dword_ptr_[rdi]@@ _esi, jb_0x1@@ 11, mov_ecx_dword_ptr_[r@@ di+8], mov_ebp_1, mov_r13d_esi, shl@@ _ebp@@ _cl, mov_ebx_esi, dec@@ _ebp, shr@@ _r13d@@ _cl, and_ebx@@ _ebp, test_r13d_r13d, jne_0x@@ ba, xor_r8d_r8d, mov_ecx_1, xor_edx_edx, mov_r11_qword_ptr_[r@@ 12+0x18], test_dword_ptr_[r@@ 11@@ +rdx@@ ]_ecx, jne_0x8b, mov_edi_dword_ptr_[r@@ 12+8], lea_r9d_[r@@ 13+1], mov_esi_edi, mov_r10_qword_ptr_[r@@ 12+0x28], imul_esi@@ _r8d, mov_r12d@@ _0x20, sub_r9d@@ _r8d, lea_r13_[rip+0x@@ 65@@ 17], jmp_0x2c, mov_eax_r15d, and_eax@@ _ebp, cmp_ebx_eax, jbe_0x@@ 53, lea_eax_[r@@ 9+r@@ 8], mov_edx_eax, shr_edx@@ _5, mov_edx_dword_ptr_[r@@ 11+rdx*4], and_eax_0x1f, inc@@ _r8d, add_esi@@ _edi, test_dword_ptr_[r@@ 13@@ +rax*@@ 4]_edx, jne_0x37, mov_r14d_esi, shr@@ _r14d@@ _5, mov_ecx_esi, mov_edx_r14d, and_ecx@@ _0x1f, mov_r15d_dword_ptr_[r@@ 10@@ +rdx*4], mov_eax_r12d, sub_eax_ecx, shr@@ _r15d@@ _cl, cmp_edi_eax, jbe_0xffffffffffffff@@ be, inc@@ _r14d, mov_edx_dword_ptr_[r@@ 10+r@@ 14*4], mov_ecx_eax, shl_edx_cl, mov_eax_edx, or_eax@@ _r15d, and_eax@@ _ebp, cmp_ebx_eax, ja_0xffffffffffffff@@ b1, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r8d, pop_r15, ret, lea_esi_[r@@ 13-1], lea_rdi_[r@@ di+0x10], call_0x2@@ 27@@ 8, inc_eax, mov_edx_eax, mov_esi_eax, mov_r8d_eax, shr_edx@@ _5, and_esi@@ _0x1f, lea_rcx_[rip+0x6@@ 47@@ d], sub_r8d@@ _r13d, mov_ecx_dword_ptr_[r@@ cx+r@@ si*4], shl_rdx_2, mov_r13d_eax, jmp_0xffffffffffffff26, mov_r8d_dword_ptr_[r@@ di+4], jmp_0xffffffffffffffa@@ e
endbr64, push_rbx, mov_rbx_rdi, lea_rdi_[r@@ di+0x10], call_0x20@@ 54, mov_r8d_eax, mov_eax_dword_ptr_[rbx+4], imul_eax@@ _dword_ptr_[r@@ bx+8], pop_rbx, add_eax@@ _0x1f, and_eax_0xffffff@@ e0, lea_eax@@ _[rax+r@@ 8+0x@@ 60], ret
endbr64, push_r14, lea_r14_[r@@ di+0x10], push_r13, mov_r13_rsi, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, mov_rdi_r14, push_rbx, sub_rsp_0x20, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0x2@@ 4c0, mov_ebx_dword_ptr_[r@@ bp+4], mov_esi_1, imul@@ _ebx@@ _dword_ptr_[r@@ bp+8], mov_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0xc]_0, add_ebx@@ _0x1f, shr_ebx@@ _5, shl_ebx@@ _2, lea_edi_[r@@ bx+r@@ ax+0x10], mov_dword_ptr_[r12]@@ _edi, call_0xfffffffffffe5@@ bb@@ d, mov_qword_ptr_[r13]_rax, test_rax_rax, je_0x7d, mov_rcx_qword_ptr_[rbp], mov_edx_dword_ptr_[r@@ bp+8], mov_qword_ptr_[rax]_rcx, mov_dword_ptr_[rax+8]_edx, mov_rdi_r14, lea_rdx_[rsp+0xc], lea_rsi_[rsp+0x10], call_0x2@@ 28@@ 5, mov_edx_dword_ptr_[rsp+0xc], mov_rax_qword_ptr_[r13], mov_r14_qword_ptr_[rsp+0x10], mov_dword_ptr_[rax+0x@@ c]_edx, mov_rsi_r14, mov_r12_rdx, mov_rax_qword_ptr_[r13], lea_rdi_[rax+0x10], call_0xfffffffffffe@@ 5d@@ 02, mov_rdi_r14, call_0xfffffffffffe@@ 58@@ 7a, lea_edi_[r@@ 12+0x10], mov_rsi_qword_ptr_[rbp+0x@@ 28], add_rdi_qword_ptr_[r@@ 13], mov_edx_ebx, call_0xfffffffffffe@@ 5c@@ e6, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x19, add_rsp_0x20, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_dword_ptr_[r12]@@ _0xffffffff, jmp_0xffffffffffffffdb, call_0xfffffffffffe@@ 5a@@ a@@ a
endbr64, push_r13, mov_r13_rdi, add_rdi_0x10, push_r12, mov_r12_rsi, add_rsi@@ _0x10, push_rbp, push_rbx, sub_rsp_8, mov_eax_dword_ptr_[r@@ si-0x@@ 10], mov_dword_ptr_[r@@ di-0x@@ 10]_eax, mov_eax_dword_ptr_[r@@ si-0x@@ c], mov_dword_ptr_[r@@ di-0x@@ c]_eax, mov_eax_dword_ptr_[r@@ si-8], mov_dword_ptr_[rdi-@@ 8]_eax, mov_ebp_dword_ptr_[r@@ si-4], mov_edx_ebp, call_0x2@@ 27@@ d, mov_rdi_qword_ptr_[r13+0x@@ 28], add_ebp@@ _0x10, test_rdi_rdi, je_7, call_0xfffffffffffe@@ 57@@ ec, mov_ebx_dword_ptr_[r@@ 13+4], mov_esi_4, imul@@ _ebx@@ _dword_ptr_[r@@ 13+8], add_ebx@@ _0x1f, shr_ebx@@ _5, mov_edi_ebx, call_0xfffffffffffe@@ 5a@@ c1, mov_qword_ptr_[r13+0x@@ 28]_rax, add_rsp_8, lea_edx_[r@@ bx*4], pop_rbx, mov_esi_ebp, pop_rbp, add_rsi@@ _r12, pop_r12, mov_rdi_rax, pop_r13, jmp_0xfffffffffffe@@ 5c@@ 2@@ f
endbr64, push_r12, push_rbp, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, test_rdi_rdi, je_0xa, mov_rbp_rsi, test_rsi_rsi, jne_0x1a, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x48, add_rsp_0x28, pop_rbp, pop_r12, ret, lea_rdx_[rsp+0xc], lea_rsi_[rsp+0x10], mov_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0xc]_0, call_0xfffffffffffffe@@ 15, mov_r12_qword_ptr_[rsp+0x10], mov_edx_dword_ptr_[rsp+0xc], mov_rdi_rbp, mov_rsi_r12, call_0xfffffffffffe5@@ bb@@ 1, mov_rdi_r12, call_0xfffffffffffe@@ 57@@ 29, jmp_0xffffffffffffffac, call_0xfffffffffffe5@@ 99@@ 2
endbr64, push_rbx, mov_rbx_rdi, lea_rdi_[r@@ di+0x10], call_0x2@@ 2c@@ 4, mov_r8d_eax, mov_eax_dword_ptr_[rbx+4], imul_eax@@ _dword_ptr_[r@@ bx+8], pop_rbx, add_eax@@ _0x1f, shr_eax@@ _5, lea_eax_[r@@ 8@@ +rax*4@@ +0x10], ret
endbr64, cmp_dword_ptr_[rdi]@@ _esi, jb_0x1@@ 3a, push_r15, lea_rdx_[rdi+0x10], push_r14, mov_r14d_esi, push_r13, mov_r13d_1, push_r12, mov_r12d_esi, push_rbp, lea_rbp_[r@@ di+0x18], push_rbx, sub_rsp_0x18, mov_ebx_dword_ptr_[r@@ di+8], mov_r15d_dword_ptr_[r@@ di+0xc], mov_ecx_ebx, shl@@ _r13d@@ _cl, dec@@ _r13d, shr@@ _r14d@@ _cl, and_r12d@@ _r13d, test_r14d_r14d, jne_0x@@ ba, mov_rcx_rbp, xor_r8d_r8d, mov_esi_1, test_dword_ptr_[r@@ cx@@ ]_esi, jne_0x8c, shr@@ _r15d@@ _2, mov_esi_ebx, lea_edi_[r@@ 14+1], imul_esi@@ _r8d, lea_r9@@ _[rdx+r@@ 15*4], mov_r10d@@ _0x20, sub_edi@@ _r8d, lea_r11_[rip+0x@@ 6@@ 15@@ f], jmp_0x2d, mov_eax_r15d, and_eax@@ _r13d, cmp_r12d_eax, jbe_0x@@ 54, lea_eax_[r@@ di+r@@ 8], mov_edx_eax, shr_edx@@ _5, mov_edx_dword_ptr_[r@@ bp@@ +rdx*4], and_eax_0x1f, inc@@ _r8d, add_esi@@ _ebx, test_dword_ptr_[r@@ 11@@ +rax*@@ 4]_edx, jne_0x39, mov_r14d_esi, shr@@ _r14d@@ _5, mov_ecx_esi, mov_edx_r14d, and_ecx@@ _0x1f, mov_r15d_dword_ptr_[r@@ 9@@ +rdx*4], mov_eax_r10d, sub_eax_ecx, shr@@ _r15d@@ _cl, cmp_ebx_eax, jbe_0xffffffffffffff@@ bd, inc@@ _r14d, mov_edx_dword_ptr_[r@@ 9+r@@ 14*4], mov_ecx_eax, shl_edx_cl, mov_eax_edx, or_eax@@ _r15d, and_eax@@ _r13d, cmp_r12d_eax, ja_0xffffffffffffff@@ b0, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r8d, pop_r15, ret, lea_esi_[r@@ 14-1], mov_rdi_rdx, mov_qword_ptr_[rsp+8]_rdx, call_0x2@@ 1b@@ 4, inc_eax, mov_ecx_eax, mov_edi_eax, mov_r8d_eax, shr_ecx@@ _5, and_edi@@ _0x1f, lea_rsi_[rip+0x60@@ b9], sub_r8d@@ _r14d, mov_esi_dword_ptr_[r@@ si+r@@ di*4], mov_rdx_qword_ptr_[rsp+8], lea_rcx_[r@@ bp@@ +rcx*4], mov_r14d_eax, jmp_0xffffffffffffff1d, mov_r8d_dword_ptr_[r@@ di+4], mov_eax_r8d, ret
endbr64, push_rbx, mov_rbx_rdi, lea_rdi_[r@@ di+0x10], call_0x1c@@ 64, mov_qword_ptr_[rbx+0x28]_0, mov_qword_ptr_[rbx]_0, mov_dword_ptr_[rbx+@@ 8]_0, mov_qword_ptr_[rbx+0x@@ 30]_0, pop_rbx, ret
endbr64, push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+0x30], call_0xfffffffffffe5@@ 544, mov_qword_ptr_[rbx+0x@@ 30]_0, mov_rdi_qword_ptr_[rbx+0x28], call_0xfffffffffffe@@ 55@@ 33, mov_qword_ptr_[rbx+0x28]_0, lea_rdi_[r@@ bx+0x10], pop_rbx, jmp_0x1@@ c4@@ 1
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12_rsi, mov_esi_4, push_rbp, push_rbx, mov_rbx_rdi, mov_edi_edx, sub_rsp_8, mov_r13_rdi, call_0xfffffffffffe@@ 57@@ de, mov_rbp_rax, mov_dword_ptr_[rbx]@@ _r13d, mov_dword_ptr_[rbx+@@ 8]_0, lea_esi_[r@@ 13-1], xor_ecx_ecx, test_r13d_r13d, jne_0x1f, jmp_0x4a, mov_dword_ptr_[rbp@@ +rcx*@@ 4]_0, lea_rax_[r@@ cx+1], cmp_rsi_rcx, je_0x32, mov_rcx_rax, mov_eax_dword_ptr_[r@@ 12@@ +rcx*4], test_eax_eax, je_0xffffffffffffffe6, inc_eax, xor_edx_edx, cmp_eax_1, jbe_0x@@ e, shr_eax_1, inc_edx, cmp_eax_1, jne_0xfffffffffffffff@@ 9, add_dword_ptr_[r@@ bx+@@ 8]_edx, mov_dword_ptr_[rbp@@ +rcx*@@ 4]_edx, lea_rax_[r@@ cx+1], cmp_rsi_rcx, jne_0xffffffffffffffd2, mov_rdi_qword_ptr_[rbx+0x30], test_rdi_rdi, je_7, call_0xfffffffffffe@@ 54@@ 7e, mov_eax_dword_ptr_[rbx+8], mov_esi_4, lea_edi_[r@@ ax+0x1@@ f], shr_edi@@ _5, call_0xfffffffffffe@@ 57@@ 5b, mov_qword_ptr_[rbx+0x30]_rax, mov_eax_dword_ptr_[rbx], mov_dword_ptr_[rbx+@@ 8]_0, test_eax_eax, j@@ e@@ _0xffffffff@@ fff@@ e5@@ 92@@ 7, xor_r9d_r9d, mov_edi@@ _r9d, xor_r8d_r8d, mov_r9_rbp, mov_rbp_r12, mov_edx_r8d, lea_r10@@ _[rdx@@ *4], mov_edx_dword_ptr_[r@@ bp@@ +rdx*4], test_edx_edx, je_0x70, add_r10@@ _r9, mov_r13d_dword_ptr_[r@@ 10], mov_r11d@@ _edi, mov_ecx_r13d, mov_esi_1, shl_esi@@ _cl, and_edi@@ _0x1f, mov_r12_qword_ptr_[r@@ bx+0x30], inc_edx, shr@@ _r11d@@ _5, mov_r15d@@ _0x20, mov_ecx_edi, sub_edx_esi, sub_r15d@@ _edi, dec@@ _esi, mov_edi@@ _r11d, lea_r14_[r@@ 12+r@@ di*4], mov_edi_esi, shl_edi@@ _cl, not@@ _edi, mov_eax_edx, and_edi@@ _dword_ptr_[r@@ 14], shl_eax_cl, or_edi@@ _eax, mov_dword_ptr_[r14]@@ _edi, cmp_r13d@@ _r15d, jbe_0x@@ 18, mov_ecx_r15d, inc@@ _r11d, shr_esi@@ _cl, lea_rdi_[r@@ 12+r@@ 11@@ *4], not_esi, and_esi@@ _dword_ptr_[r@@ di], shr_edx_cl, or_esi@@ _edx, mov_dword_ptr_[rdi]@@ _esi, mov_edi_dword_ptr_[r@@ bx+8], mov_ecx_dword_ptr_[r@@ 10], add_edi@@ _ecx, mov_dword_ptr_[rbx+@@ 8]_edi, mov_r13d_dword_ptr_[r@@ bx], inc@@ _r8d, cmp_r13d@@ _r8d, ja_0xffffffffffffff@@ 76, mov_eax_edi, xor_edx_edx, div@@ _r13d, mov_rbp_r9, xor_edx_edx, cmp_eax_1, jbe_0x@@ 14@@ 1, shr_eax_1, inc_edx, cmp_eax_1, jne_0xfffffffffffffff@@ 9, mov_dword_ptr_[rbx+@@ 4]_edx, test_edx_edx, je_0x12@@ a, mov_rdi_qword_ptr_[rbx+0x28], test_rdi_rdi, je_0xa, call_0xfffffffffffe5@@ 37@@ b, mov_r13d_dword_ptr_[r@@ bx], mov_r12d_dword_ptr_[r@@ bx+4], mov_esi_4, mov_edi_r12d, imul@@ _edi@@ _r13d, add_edi@@ _0x1f, shr_edi@@ _5, call_0xfffffffffffe@@ 56@@ 4d, mov_r8d_1, mov_ecx_r12d, shl_r8d@@ _cl, mov_qword_ptr_[rbx+0x28]_rax, mov_dword_ptr_[rbx+@@ 8]_0, dec@@ _r8d, test_r13d_r13d, je_0xa2, xor_edx_edx, xor_edi_edi, mov_r10d@@ _0x20, jmp_0xf, mov_rax_qword_ptr_[rbx+0x28], mov_ecx_edi, lea_r9_[r@@ bp@@ +rcx*4], mov_ecx_edi, imul_ecx@@ _r12d, add_edx_dword_ptr_[r@@ 9], mov_dword_ptr_[rbx+@@ 8]_edx, mov_r13d_ecx, shr@@ _r13d@@ _5, mov_esi_edx, mov_edx_r13d, and_ecx@@ _0x1f, lea_r14@@ _[rax@@ +rdx*4], mov_edx_r8d, and_esi@@ _r8d, shl_edx_cl, not_edx, mov_r15d_esi, and_edx@@ _dword_ptr_[r@@ 14], mov_r11d@@ _r10d, shl@@ _r15d@@ _cl, or_edx@@ _r15d, sub_r11d@@ _ecx, mov_dword_ptr_[r@@ 14@@ ]_edx, cmp_r11d@@ _r12d, jae_0x@@ 20, lea_edx_[r@@ 13+1], lea_r12_[rax@@ +rdx*4], mov_ecx_r11d, mov_eax_r8d, shr_eax@@ _cl, not_eax, and_eax@@ _dword_ptr_[r@@ 12], shr_esi@@ _cl, or_eax@@ _esi, mov_dword_ptr_[r12]_eax, mov_edx_dword_ptr_[rbx+8], mov_r12d_dword_ptr_[r@@ bx+4], mov_eax_edx, mov_ecx_r12d, shr_eax@@ _cl, inc@@ _edi, mov_dword_ptr_[r@@ 9]_eax, cmp_dword_ptr_[rbx]@@ _edi, ja_0xffffffffffffff@@ 7f, lea_r12_[r@@ bx+0x10], mov_rdi_r12, call_0x1@@ 97@@ 2, mov_ecx_dword_ptr_[rbx+4], mov_eax_dword_ptr_[rbx+8], mov_edx_dword_ptr_[rbx], shr_eax@@ _cl, mov_rdi_r12, mov_rsi_rbp, mov_ecx_eax, call_0x1@@ 9c@@ b, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, jmp_0xfffffffffff@@ e5@@ 26@@ 5, mov_dword_ptr_[rbx+@@ 4]_1, jmp_0xfffffffffffffed@@ 5
endbr64, push_rbx, mov_rbx_rdi, lea_rdi_[r@@ di+0x10], call_0x1@@ 94@@ 4, mov_r8d_eax, mov_eax_dword_ptr_[rbx], imul_eax@@ _dword_ptr_[r@@ bx+4], add_eax@@ _0x1f, shr_eax@@ _5, mov_edx_eax, mov_eax_dword_ptr_[rbx+8], pop_rbx, add_eax@@ _0x1f, shr_eax@@ _5, add_eax_edx, shl_eax@@ _5, lea_eax@@ _[rax+r@@ 8+0x@@ 80], ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, cmp_dword_ptr_[rdi]@@ _esi, jbe_0x@@ 17@@ 5, mov_ecx_dword_ptr_[r@@ di+4], mov_r13d_1, mov_edx_r13d, shl_edx_cl, mov_r12_rdi, mov_ebx_esi, lea_ebp@@ _[rdx@@ -1], lea_r15_[r@@ di+0x10], test_esi_esi, je_0x10@@ a, lea_r14d_[r@@ si-1], mov_esi_r14d, mov_rdi_r15, call_0x1@@ aa@@ a, sub_r13d@@ _ebx, mov_r8d_dword_ptr_[r@@ 12+4], add_r13@@ d_eax, mov_edx_r13d, mov_ecx_r8d, shl_edx_cl, mov_ecx_r14d, imul_ecx@@ _r8d, mov_r10_qword_ptr_[r@@ 12+0x28], mov_esi_eax, mov_r9d_ecx, shr_r9d@@ _5, mov_eax_r9d, mov_r13d_dword_ptr_[r@@ 10@@ +rax*4], and_ecx@@ _0x1f, mov_edi_0x20, mov_r11d@@ _r13d, sub_edi@@ _ecx, shr@@ _r11d@@ _cl, cmp_r8d@@ _edi, ja_0x@@ e3, and_r11d@@ _ebp, mov_r13d@@ _r11d, mov_rdi_r15, add_r13d@@ _edx, call_0x1a@@ e1, mov_edi_dword_ptr_[r@@ 12+4], sub_eax_ebx, imul@@ _ebx@@ _edi, mov_r8_qword_ptr_[r@@ 12+0x28], mov_ecx_edi, mov_esi_ebx, shr_esi@@ _5, mov_edx_esi, and_ebx@@ _0x1f, mov_edx_dword_ptr_[r@@ 8@@ +rdx*4], mov_r9d@@ _0x20, shl_eax_cl, sub_r9d@@ _ebx, mov_ecx_ebx, shr_edx_cl, cmp_edi@@ _r9d, jbe_0x@@ f, inc@@ _esi, mov_esi_dword_ptr_[r@@ 8+r@@ si*4], mov_ecx_r9d, shl_esi@@ _cl, or_edx@@ _esi, and_edx@@ _ebp, sub_eax@@ _r13d, add_eax_edx, je_0x3e, mov_r8d_r13d, mov_r10_qword_ptr_[r@@ 12+0x30], shr_r8d@@ _5, mov_edx_r8d, and_r13d@@ _0x1f, mov_ecx_eax, mov_edx_dword_ptr_[r@@ 10@@ +rdx*4], mov_esi_1, shl_esi@@ _cl, mov_edi_0x20, mov_ecx_r13d, shr_edx_cl, sub_edi@@ _r13d, dec@@ _esi, mov_r9d_edx, cmp_eax_edi, ja_0x3@@ 7, mov_eax_edx, and_eax@@ _esi, add_eax_esi, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, xor_esi_esi, mov_rdi_r15, call_0x1@@ 9a@@ b, xor_r13d_r13d, jmp_0xffffffffffffff57, inc@@ _r8d, mov_edx_dword_ptr_[r@@ 10+r@@ 8*4], mov_ecx_edi, mov_eax_edx, shl_eax_cl, or_eax@@ _r9d, and_eax@@ _esi, jmp_0xffffffffffffffbd, inc@@ _r9d, mov_eax_dword_ptr_[r@@ 10+r@@ 9*4], mov_ecx_edi, shl_eax_cl, mov_r13d_eax, or_r13d@@ _r11d, and_r13d@@ _ebp, jmp_0xffffffffffffff15, lea_rcx_[rip+0x@@ 5c@@ 40], mov_edx_0x8@@ 5, lea_rsi_[rip+0x5b@@ f4], lea_rdi_[rip+0x@@ 5c@@ 13], call_0xfffffffffffe4@@ ed@@ d
endbr64, push_r15, lea_r15_[r@@ di+0x10], push_r14, mov_r14_rsi, push_r13, mov_r13_rdx, push_r12, mov_r12_rdi, mov_rdi_r15, push_rbp, push_rbx, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0x1@@ be@@ e, mov_ebx_dword_ptr_[r@@ 12], mov_r8d_eax, imul@@ _ebx@@ _dword_ptr_[r@@ 12+4], mov_eax_dword_ptr_[r12+8], mov_esi_1, lea_ebp_[r@@ ax+0x1@@ f], add_ebx@@ _0x1f, shr_ebx@@ _5, shr@@ _ebp@@ _5, shl_ebx@@ _2, shl@@ _ebp@@ _2, lea_eax_[r@@ bx+r@@ bp+0x10], lea_edi@@ _[rax+r@@ 8], mov_dword_ptr_[r13@@ ]_edi, mov_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0xc]_0, call_0xfffffffffffe5@@ 2d@@ 3, mov_qword_ptr_[r14]_rax, test_rax_rax, je_0x98, mov_rcx_qword_ptr_[r12], mov_edx_dword_ptr_[r@@ 12+8], mov_qword_ptr_[rax]_rcx, mov_dword_ptr_[rax+8]_edx, mov_rdi_r15, lea_rdx_[rsp+0xc], lea_rsi_[rsp+0x10], call_0x1@@ 99@@ 6, mov_edx_dword_ptr_[rsp+0xc], mov_rax_qword_ptr_[r14], mov_r15_qword_ptr_[rsp+0x10], mov_dword_ptr_[rax+0x@@ c]_edx, mov_r13_rdx, mov_rsi_r15, mov_rax_qword_ptr_[r14], add_r13d@@ _0x10, lea_rdi_[rax+0x10], call_0xfffffffffffe@@ 54@@ 11, mov_rdi_r15, call_0xfffffffffffe@@ 4f@@ 89, mov_rsi_qword_ptr_[r@@ 12+0x28], mov_edi_r13d, add_rdi_qword_ptr_[r@@ 14], mov_edx_ebx, call_0xfffffffffffe5@@ 3f@@ 7, lea_edi_[r@@ bx+r@@ 13], mov_rsi_qword_ptr_[r@@ 12+0x30], add_rdi_qword_ptr_[r@@ 14], mov_edx_ebp, call_0xfffffffffffe5@@ 3e@@ 4, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x1b, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_dword_ptr_[r13@@ ]_0xffffffff, jmp_0xffffffffffffffd9, call_0xfffffffffffe5@@ 1a@@ 6
endbr64, push_r13, mov_r13_rsi, add_rsi@@ _0x10, push_r12, push_rbp, push_rbx, mov_rbx_rdi, add_rdi_0x10, sub_rsp_8, mov_eax_dword_ptr_[r@@ si-0x@@ 10], mov_dword_ptr_[r@@ di-0x@@ 10]_eax, mov_eax_dword_ptr_[r@@ si-0x@@ c], mov_dword_ptr_[r@@ di-0x@@ c]_eax, mov_eax_dword_ptr_[r@@ si-8], mov_dword_ptr_[rdi-@@ 8]_eax, mov_r12d_dword_ptr_[r@@ si-4], mov_edx_r12d, call_0x1@@ 97@@ b, mov_rdi_qword_ptr_[rbx+0x28], add_r12d@@ _0x10, test_rdi_rdi, je_7, call_0xfffffffffffe4@@ ee@@ 9, mov_ebp_dword_ptr_[r@@ bx], mov_esi_4, imul@@ _ebp@@ _dword_ptr_[r@@ bx+4], add_ebp@@ _0x1f, shr@@ _ebp@@ _5, mov_edi_ebp, call_0xfffffffffffe5@@ 1c@@ 1, mov_qword_ptr_[rbx+0x28]_rax, mov_esi_r12d, mov_rdi_rax, lea_edx_[r@@ bp*4], add_rsi@@ _r13, mov_rbp_rdx, call_0xfffffffffffe5@@ 33@@ 5, mov_eax_dword_ptr_[rbx+8], mov_rdi_qword_ptr_[rbx+0x30], add_ebp@@ _r12d, lea_r12d_[r@@ ax+0x1@@ f], shr@@ _r12d@@ _5, test_rdi_rdi, je_7, call_0xfffffffffffe@@ 4e@@ 99, mov_edi_r12d, mov_esi_4, call_0xfffffffffffe5@@ 17@@ c, mov_qword_ptr_[rbx+0x30]_rax, add_rsp_8, pop_rbx, lea_rsi_[r@@ 13+r@@ bp], pop_rbp, lea_edx_[r@@ 12*4], pop_r12, mov_rdi_rax, pop_r13, jmp_0xfffffffffff@@ e5@@ 2e@@ 9
endbr64, push_r12, push_rbp, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, test_rdi_rdi, je_0xa, mov_rbp_rsi, test_rsi_rsi, jne_0x1a, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x48, add_rsp_0x28, pop_rbp, pop_r12, ret, lea_rdx_[rsp+0xc], lea_rsi_[rsp+0x10], mov_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0xc]_0, call_0xfffffffffffffd@@ a5, mov_r12_qword_ptr_[rsp+0x10], mov_edx_dword_ptr_[rsp+0xc], mov_rdi_rbp, mov_rsi_r12, call_0xfffffffffffe5@@ 27@@ 1, mov_rdi_r12, call_0xfffffffffffe@@ 4d@@ e9, jmp_0xffffffffffffffac, call_0xfffffffffffe@@ 50@@ 5@@ 2
endbr64, push_rbx, mov_rbx_rdi, lea_rdi_[r@@ di+0x10], call_0x1@@ 98@@ 4, mov_r8d_eax, mov_eax_dword_ptr_[rbx], imul_eax@@ _dword_ptr_[r@@ bx+4], add_eax@@ _0x1f, shr_eax@@ _5, mov_edx_eax, mov_eax_dword_ptr_[rbx+8], pop_rbx, add_eax@@ _0x1f, shr_eax@@ _5, add_eax_edx, lea_eax_[r@@ 8@@ +rax*4@@ +0x10], ret
endbr64, push_r15, mov_edx_1, lea_r8_[r@@ di+0x10], push_r14, push_r13, push_r12, push_rbp, mov_ebp_edx, push_rbx, mov_ebx_esi, sub_rsp_0x18, mov_r15d_dword_ptr_[r@@ di+4], mov_r14d_dword_ptr_[r@@ di+0xc], mov_ecx_r15d, and_r14d@@ _0xfffffffc, shl@@ _ebp@@ _cl, mov_r12d_dword_ptr_[r@@ di], add_r14@@ _r8, dec@@ _ebp, test_esi_esi, jne_0x@@ be, xor_esi_esi, mov_rdi_r8, call_0x1@@ 92@@ b, xor_r13d_r13d, sub_eax_ebx, imul@@ _ebx@@ _r15d, mov_ecx_r15d, mov_edi_0x20, mov_edx_ebx, shr_edx@@ _5, mov_esi_edx, and_ebx@@ _0x1f, mov_esi_dword_ptr_[r@@ 14+r@@ si*4], shl_eax_cl, sub_edi@@ _ebx, mov_ecx_ebx, shr_esi@@ _cl, cmp_r15d@@ _edi, jbe_0x@@ e, inc_edx, mov_edx_dword_ptr_[r@@ 14@@ +rdx*4], mov_ecx_edi, shl_edx_cl, or_esi@@ _edx, and_ebp@@ _esi, sub_eax@@ _r13d, add_eax@@ _ebp, je_0x59, imul@@ _r12d@@ _r15d, mov_r8d_r13d, shr_r8d@@ _5, lea_ecx_[r@@ 12+0x1@@ f], shr_ecx@@ _5, lea_rsi_[r@@ 14@@ +rcx*4], mov_edx_1, mov_ecx_eax, shl_edx_cl, mov_ecx_r8d, mov_r9d_dword_ptr_[r@@ si@@ +rcx*4], and_r13d@@ _0x1f, mov_edi_0x20, mov_ecx_r13d, sub_edi@@ _r13d, dec@@ _edx, shr_r9d_cl, cmp_eax_edi, jbe_0x@@ a0, inc@@ _r8d, mov_esi_dword_ptr_[r@@ si+r@@ 8*4], mov_ecx_edi, mov_eax_esi, shl_eax_cl, or_eax@@ _r9d, and_eax_edx, add_eax_edx, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_r13d_[r@@ si-1], mov_esi_r13d, mov_rdi_r8, mov_qword_ptr_[rsp+8]_r8, call_0x1@@ 86@@ 9, mov_edx_1, sub_edx@@ _ebx, add_edx_eax, mov_ecx_r15d, shl_edx_cl, mov_ecx_r13d, imul_ecx@@ _r15d, mov_esi_eax, mov_edi_0x20, mov_r9d_ecx, shr_r9d@@ _5, mov_eax_r9d, mov_r13d_dword_ptr_[r@@ 14@@ +rax*4], and_ecx@@ _0x1f, sub_edi@@ _ecx, mov_r10d@@ _r13d, shr@@ _r10d@@ _cl, cmp_r15d@@ _edi, mov_r8_qword_ptr_[rsp+8], ja@@ _0x2f, and_r10d@@ _ebp, mov_r13d@@ _r10d, mov_rdi_r8, add_r13d@@ _edx, call_0x1@@ 8b@@ 9, jmp_0xfffffffffffffef1, mov_eax_r9d, and_eax_edx, add_eax_edx, jmp_0xffffffffffffff73, inc@@ _r9d, mov_eax_dword_ptr_[r@@ 14+r@@ 9*4], mov_ecx_edi, shl_eax_cl, mov_r13d_eax, or_r13d@@ _r10d, and_r13d@@ _ebp, jmp_0xffffffffffffffc@@ 5
push_rax, pop_rax, lea_rcx_[rip+0x5@@ 95@@ 7], mov_edx_0x4@@ f, lea_rsi_[rip+0x57@@ c3], lea_rdi_[rip+0x@@ 57@@ df], sub_rsp_8, call_0xfffffffffffe@@ 4a@@ 5@@ 0
endbr64, push_r12, push_rbx, mov_ebx_edi, mov_edi_0x10, sub_rsp_8, call_0xfffffffffffe@@ 4a@@ 8e, test_rax_rax, je_0x9b, mov_edi_ebx, mov_esi_0x10, mov_r12_rax, call_0xfffffffffffe@@ 4e@@ 96, mov_qword_ptr_[r12]_rax, test_ebx_ebx, je_0x43, test_rax_rax, je_0x5c, lea_ecx_[r@@ bx-1], inc_rcx, shl_rcx_4, mov_edx_0x10, jmp_0x15, mov_rax_qword_ptr_[r12], add_rax_rdx, add_rdx_0x10, test_rax_rax, je_0x38, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+8]_0, cmp_rcx_rdx, jne_0xffffffffffffffde, mov_rax_qword_ptr_[r12], test_rax_rax, je_0x59, mov_dword_ptr_[r12+@@ 8]_ebx, mov_dword_ptr_[r12+0x@@ c]_0, add_rsp_8, mov_rax_r12, pop_rbx, pop_r12, ret, lea_rcx_[rip+0x5@@ 93@@ b], mov_edx_0x1@@ 9, lea_rsi_[rip+0x56@@ ff], lea_rdi_[rip+0x@@ 57@@ 1b], call_0xfffffffffffe4@@ 990, lea_rcx_[rip+0x@@ 59@@ 34], mov_edx_0x7@@ 7, lea_rsi_[rip+0x56@@ e0], lea_rdi_[rip+0x@@ 57@@ 25], call_0xfffffffffffe4@@ 97@@ 1, lea_rcx_[rip+0x@@ 59@@ 15], mov_edx_0x7@@ a, lea_rsi_[rip+0x5@@ 6c@@ 1], lea_rdi_[rip+0x@@ 56@@ e4], call_0xfffffffffffe4@@ 95@@ 2
endbr64, sub_rsp_8, cmp_dword_ptr_[rdi+@@ 8]_esi, jbe_0x@@ 1a, mov_esi_esi, shl_rsi_4, add_rsi_qword_ptr_[r@@ di], je_0x2e, mov_eax_dword_ptr_[rsi+0x@@ c], test_eax_eax, sete_al, add_rsp_8, ret, lea_rcx_[rip+0x@@ 58@@ 94], mov_edx_0x8@@ 2, lea_rsi_[rip+0x56@@ 70], lea_rdi_[rip+0x@@ 56@@ a3], call_0xfffffffffffe4@@ 90@@ 1, lea_rcx_[rip+0x@@ 58@@ 55], mov_edx_0x4@@ 9, lea_rsi_[rip+0x56@@ 51], lea_rdi_[rip+0x5@@ 66@@ d], call_0xfffffffffffe@@ 48@@ e@@ 2
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, cmp_dword_ptr_[rdi+@@ 8]_esi, jbe_0x@@ c8, mov_ebx_esi, shl_rbx_4, mov_r13_rbx, mov_r12_rdi, add_r13@@ _qword_ptr_[r@@ di], je_0x94, mov_esi_dword_ptr_[r@@ 13+0xc], mov_ebp_dword_ptr_[r@@ 13+8], lea_eax_[r@@ si+1], mov_rdi_qword_ptr_[r13], mov_r14_rdx, mov_r15d_ecx, cmp_eax_ebp, jbe_0x@@ 32, inc_ebp, cmp_eax_ebp, jbe_@@ 9, add@@ _ebp_ebp, cmp_eax_ebp, ja@@ _0xfffffffffffffffc, mov_esi_ebp, shl_rsi_4, call_0xfffffffffffe@@ 4e@@ 14, mov_qword_ptr_[r13]_rax, mov_rdi_rax, test_rax_rax, je_0x91, mov_dword_ptr_[r13+@@ 8]_ebp, mov_esi_dword_ptr_[r@@ 13+0xc], shl_rsi_4, mov_qword_ptr_[rdi@@ +r@@ si@@ ]_r14, mov_eax_dword_ptr_[r13+0x@@ c], shl_rax_4, add_rax_qword_ptr_[r@@ 13], mov_dword_ptr_[rax+@@ 8]_r15d, inc_dword_ptr_[r@@ 13+0xc], add_rbx_qword_ptr_[r@@ 12], je_0x20, mov_eax_dword_ptr_[rbx+0xc], cmp_dword_ptr_[r12+0x@@ c]_eax, jae_@@ 7, mov_dword_ptr_[r12+0x@@ c]_eax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xfffffffffffffd@@ a7, lea_rcx_[rip+0x57@@ 2b], mov_edx@@ _0x3f, lea_rsi_[rip+0x5@@ 56@@ 7], lea_rdi_[rip+0x5@@ 58@@ 3], call_0xfffffffffffe@@ 47@@ f8, lea_rcx_[rip+0x57@@ 2c], mov_edx@@ _0x88, lea_rsi_[rip+0x@@ 55@@ 48], lea_rdi_[rip+0x5@@ 57@@ b], call_0xfffffffffffe@@ 47@@ d9, lea_rcx_[rip+0x5@@ 6c@@ d], mov_edx_0x3@@ 7, lea_rsi_[rip+0x@@ 55@@ 29], lea_rdi_[rip+0x5@@ 57@@ 6], call_0xfffffffffffe@@ 47@@ b@@ a
endbr64, sub_rsp_8, cmp_dword_ptr_[rdi+@@ 8]_esi, jbe_0x@@ 15, mov_esi_esi, shl_rsi_4, add_rsi_qword_ptr_[r@@ di], je_0x29, mov_eax_dword_ptr_[rsi+0x@@ c], add_rsp_8, ret, lea_rcx_[rip+0x@@ 56@@ 59], mov_edx_0x@@ 92, lea_rsi_[rip+0x54@@ e5], lea_rdi_[rip+0x@@ 55@@ 18], call_0xfffffffffffe@@ 47@@ 76, call_0xfffffffffffffd@@ 0@@ 1
endbr64, sub_rsp_8, cmp_dword_ptr_[rdi+@@ 8]_esi, jbe_0x@@ 23, mov_esi_esi, shl_rsi_4, add_rsi_qword_ptr_[r@@ di], je_0x56, cmp_edx_dword_ptr_[r@@ si+0xc], jae_0x@@ 32, mov_edx_edx, shl_rdx_4, add_rdx_qword_ptr_[r@@ si], mov_rax_qword_ptr_[rdx], add_rsp_8, ret, lea_rcx_[rip+0x5@@ 5d@@ b], mov_edx_0x@@ 99, lea_rsi_[rip+0x54@@ 87], lea_rdi_[rip+0x@@ 54@@ ba], call_0xfffffffffffe@@ 47@@ 18, lea_rcx_[rip+0x@@ 55@@ 9c], mov_edx_0x5@@ 5, lea_rsi_[rip+0x54@@ 68], lea_rdi_[rip+0x5@@ 4c@@ 5], call_0xfffffffffffe4@@ 6f@@ 9, lea_rcx_[rip+0x5@@ 57@@ d], mov_edx_0x5@@ 5, lea_rsi_[rip+0x54@@ 49], lea_rdi_[rip+0x@@ 54@@ 65], call_0xfffffffffffe4@@ 6d@@ a
endbr64, sub_rsp_8, cmp_dword_ptr_[rdi+@@ 8]_esi, jbe_0x@@ 23, mov_esi_esi, shl_rsi_4, add_rsi_qword_ptr_[r@@ di], je_0x56, cmp_edx_dword_ptr_[r@@ si+0xc], jae_0x@@ 32, mov_edx_edx, shl_rdx_4, add_rdx_qword_ptr_[r@@ si], mov_eax_dword_ptr_[rdx+8], add_rsp_8, ret, lea_rcx_[rip+0x5@@ 50@@ b], mov_edx_0x@@ 9f, lea_rsi_[rip+0x5@@ 3f@@ 7], lea_rdi_[rip+0x@@ 54@@ 2a], call_0xfffffffffffe@@ 46@@ 88, lea_rcx_[rip+0x5@@ 4c@@ c], mov_edx_0x5@@ b, lea_rsi_[rip+0x5@@ 3d@@ 8], lea_rdi_[rip+0x@@ 54@@ 35], call_0xfffffffffffe4@@ 66@@ 9, lea_rcx_[rip+0x5@@ 4a@@ d], mov_edx_0x5@@ b, lea_rsi_[rip+0x5@@ 3b@@ 9], lea_rdi_[rip+0x5@@ 3d@@ 5], call_0xfffffffffffe4@@ 64@@ a
endbr64, mov_eax_dword_ptr_[rdi+0x@@ c], ret
endbr64, mov_eax_dword_ptr_[rdi+8], ret
endbr64, push_rbx, mov_rbx_rdi, mov_esi_4, mov_edi_dword_ptr_[r@@ di+0xc], inc_rdi, call_0xfffffffffffe@@ 4a@@ 8d, mov_edx_dword_ptr_[rbx+8], test_edx_edx, je_0x30, mov_rcx_rax, mov_rax_qword_ptr_[rbx], test_rax_rax, je_0x27, dec@@ _edx, shl_rdx_4, add_rdx_rax, jmp_0xf, lea_rsi_[rax+0x10], cmp_rax_-0x@@ 10, je_0x12, mov_rax_rsi, mov_esi_dword_ptr_[r@@ ax+0xc], inc_dword_ptr_[r@@ cx+r@@ si*4], cmp_rdx_rax, jne_0xffffffffffffffea, jmp@@ _0, call_0xfffffffffffffb@@ 6@@ 1
endbr64, mov_edx_dword_ptr_[r@@ di+8], test_edx_edx, je_0xd7, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, mov_rbx_qword_ptr_[rdi], test_rbx_rbx, je_0x81, mov_r12_qword_ptr_[rip+0x@@ cc@@ 89], xor_r14d_r14d, lea_r13_[rip+0x@@ 5@@ 38@@ 4], mov_rdi_qword_ptr_[r12], mov_ecx_r14d, lea_rdx_[rip+0x5@@ 35@@ 7], mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 44@@ db, mov_eax_dword_ptr_[rbx+0xc], test_eax_eax, je_0x32, xor_r15d_r15d, mov_eax_r15d, shl_rax_4, add_rax_qword_ptr_[r@@ bx], mov_rcx_qword_ptr_[rax], mov_rdi_qword_ptr_[r12], mov_rdx_r13, mov_esi_1, xor_eax_eax, inc@@ _r15d, call_0xfffffffffffe4@@ 4a@@ a, cmp_r15d@@ _dword_ptr_[rbx+0x@@ c], jb_0xffffffffffffff@@ d9, inc@@ _r14d, cmp_dword_ptr_[rbp+@@ 8]_r14d, jbe_0x@@ 38, mov_ebx_r14d, shl_rbx_4, add_rbx_qword_ptr_[r@@ bp], jne_0xffffffffffffff@@ 9b, lea_rcx_[rip+0x5@@ 34@@ 2], mov_edx_0x6@@ 2, lea_rsi_[rip+0x5@@ 26@@ e], lea_rdi_[rip+0x5@@ 28@@ a], call_0xfffffffffffe@@ 44@@ ff, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, ret
endbr64, push_r13, push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_8, mov_edx_dword_ptr_[r@@ di+8], mov_rbp_qword_ptr_[rdi], test_edx_edx, je_0x8b, test_rbp_rbp, je_0x58, xor_ebx_ebx, mov_eax_dword_ptr_[rbp+0x@@ c], xor_r13d_r13d, test_eax_eax, je_0x24, mov_eax_r13d, shl_rax_4, add_rax_qword_ptr_[r@@ bp], mov_rdi_qword_ptr_[rax], inc_r13d, call_0xfffffffffffe4@@ 60@@ f, cmp_r13d@@ _dword_ptr_[r@@ bp+0xc], jb_0xffffffffffffff@@ e6, mov_rdi_qword_ptr_[rbp], inc_ebx, call_0xfffffffffffe4@@ 5f@@ e, cmp_dword_ptr_[r12+@@ 8]_ebx, jbe_0x@@ 34, mov_ebp_ebx, shl_rbp@@ _4, add_rbp@@ _qword_ptr_[r@@ 12], jne_0xffffffffffffffb8, lea_rcx_[rip+0x5@@ 25@@ f], mov_edx_0x2@@ 2, lea_rsi_[rip+0x5@@ 1a@@ b], lea_rdi_[rip+0x5@@ 1c@@ 7], call_0xfffffffffffe@@ 44@@ 3c, mov_rbp_qword_ptr_[r@@ 12], mov_rdi_rbp, call_0xfffffffffffe4@@ 5b@@ 9, add_rsp_8, pop_rbx, pop_rbp, mov_rdi_r12, pop_r12, pop_r13, jmp_0xfffffffffff@@ e4@@ 5a@@ 7
mov_rax_qword_ptr_[rdi+0x10], mov_esi_esi, mov_esi_dword_ptr_[r@@ ax+r@@ si*4], cmp_esi_-1, je_0xb4, mov_r10@@ _rdx, mov_eax_esi, xor_edx_edx, div_dword_ptr_[r@@ di+4], push_rbp, push_rbx, mov_rbx_rcx, lea_r11_[rip+0x@@ 54@@ 48], xor_r9d_r9d, mov_ecx_edx, shr_edx@@ _3, and_ecx_7, movzx_eax_byte_ptr_[r@@ 10@@ +rdx], mov_r8d_ecx, and_al@@ _byte_ptr_[r@@ 11+r@@ 8], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, je_0x5a, mov_r8_qword_ptr_[r@@ di+0x18], mov_esi_dword_ptr_[r@@ 8+r@@ si*4], cmp_esi_-1, je_0x42, mov_eax_esi, xor_edx_edx, div_dword_ptr_[r@@ di+4], mov_ecx_edx, shr_edx@@ _3, and_ecx_7, movzx_eax_byte_ptr_[r@@ 10@@ +rdx], mov_ebp_ecx, and_al@@ _byte_ptr_[r@@ 11+r@@ bp], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, jne_0x13, test_r9b_r9b, jne_0x32, mov_dword_ptr_[rbx]@@ _esi, mov_r9d_1, mov_r8_qword_ptr_[r@@ di+0x18], mov_esi_dword_ptr_[r@@ 8+r@@ si*4], cmp_esi_-1, jne_0xffffffffffffffc5, pop_rbx, mov_eax_r9d, pop_rbp, ret, mov_dword_ptr_[rbx]@@ _esi, mov_r9d_1, jmp_0xffffffffffffffa0, xor_r9d_r9d, pop_rbx, mov_eax_r9d, pop_rbp, ret, xor_r9d_r9d, mov_eax_r9d, ret
push_r13, mov_r13d_esi, push_r12, mov_r12_rdx, push_rbp, push_rbx, sub_rsp_0x18, lea_rbx_[r@@ sp+4], mov_rcx_rbx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_dword_ptr_[rsp+4]_0, call_0xffffffffffffff@@ 00, test_al_al, je_0x69, lea_rbp_[rip+0x@@ 53@@ 60], jmp_0x1d, mov_r13d_eax, mov_rcx_rbx, mov_rdx_r12, mov_esi_r13d, call_0xfffffffffffffed@@ c, test_al_al, je_0x45, mov_ecx_dword_ptr_[rsp+4], xor_edx_edx, mov_eax_ecx, div_dword_ptr_[r@@ di+4], mov_eax_edx, and_edx_7, movzx_edx_byte_ptr_[r@@ bp@@ +rdx], shr_eax_3, or_byte_ptr_[r@@ 12@@ +rax]_dl, mov_eax_ecx, xor_edx_edx, mov_esi_dword_ptr_[r@@ di+4], mov_r8_qword_ptr_[r@@ di+8], div_esi, mov_eax_edx, mov_eax_dword_ptr_[r@@ 8@@ +rax*4], cmp_r13d_eax, jne_0xffffffffffffffb9, lea_eax_[r@@ si+rdx], mov_r13d_dword_ptr_[r@@ 8@@ +rax*4], jmp_0xffffffffffffffb3, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0xd, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, call_0xfffffffffffe@@ 46@@ 8@@ 5
push_rbx, mov_r10d@@ _edx, mov_edx_esi, mov_rax_qword_ptr_[rdi+0x10], mov_r8d_dword_ptr_[r@@ di+4], lea_r11@@ _[rax@@ +rdx*4], mov_ecx_dword_ptr_[r@@ 11], xor_edx_edx, mov_eax_ecx, div@@ _r8d, mov_r9_qword_ptr_[r@@ di+8], mov_eax_edx, mov_eax_dword_ptr_[r@@ 9@@ +rax*4], cmp_esi_eax, je_0x70, cmp_r10@@ d_eax, je_0x8@@ 3, mov_r11_qword_ptr_[r@@ di+0x18], lea_rdi_[r@@ 11@@ +rcx*4], mov_ecx_dword_ptr_[r@@ di], cmp_ecx_-1, jne_0x18, jmp_0x7@@ e, cmp_r10@@ d_eax, je_0x35, lea_rdi_[r@@ 11@@ +rcx*4], mov_ecx_dword_ptr_[r@@ di], cmp_ecx_-1, je_0x6a, mov_eax_ecx, xor_edx_edx, div@@ _r8d, mov_eax_edx, mov_eax_dword_ptr_[r@@ 9@@ +rax*4], cmp_esi_eax, jne_0xffffffffffffffe1, lea_ebx_[r@@ 8@@ +rdx], cmp_r10d@@ _dword_ptr_[r@@ 9+r@@ bx*4], jne_0xffffffffffffffd7, mov_eax_dword_ptr_[r@@ 11@@ +rcx*4], mov_dword_ptr_[rdi]_eax, pop_rbx, ret, lea_eax_[r@@ 8@@ +rdx], cmp_esi_dword_ptr_[r@@ 9@@ +rax*4], jne_0xffffffffffffffc5, mov_eax_dword_ptr_[r@@ 11@@ +rcx*4], mov_dword_ptr_[rdi]_eax, jmp_0xffffffffffffff@@ e9, lea_ebx_[r@@ 8@@ +rdx], cmp_r10d@@ _dword_ptr_[r@@ 9+r@@ bx*4], jne_0xffffffffffffff8a, mov_rax_qword_ptr_[rdi+0x18], mov_eax_dword_ptr_[r@@ ax@@ +rcx*4], mov_dword_ptr_[r@@ 11@@ ]_eax, pop_rbx, ret, lea_eax_[r@@ 8@@ +rdx], cmp_esi_dword_ptr_[r@@ 9@@ +rax*4], jne_0xffffffffffffff@@ 7b, jmp_0xffffffffffffffe4, lea_rcx_[rip+0x5@@ 1e@@ 9], mov_edx_0x@@ 91, lea_rsi_[rip+0x5@@ 16@@ d], lea_rdi_[rip+0x5@@ 18@@ 3], call_0xfffffffffffe4@@ 1a@@ 6
endbr64, push_rbp, mov_rbp_rdi, mov_rdi_qword_ptr_[rdi+8], call_0xfffffffffffe4@@ 32@@ 4, mov_rdi_qword_ptr_[rbp+0x10], call_0xfffffffffffe@@ 43@@ 1b, mov_rdi_qword_ptr_[rbp+0x18], call_0xfffffffffffe@@ 43@@ 12, mov_rdi_qword_ptr_[rbp+0x20], call_0xfffffffffffe4@@ 30@@ 9, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffff@@ e4@@ 30@@ 0
endbr64, mov_eax_dword_ptr_[rdi], test_eax_eax, je_0x93, push_r13, mov_r13_rdi, push_r12, lea_r12_[rip+0x@@ 5@@ 12@@ c], push_rbp, xor_ebp_ebp, push_rbx, sub_rsp_8, jmp_0x14, inc_ebp, cmp_dword_ptr_[r@@ 13]@@ _ebp, jbe_0x@@ 5a, mov_rdx_qword_ptr_[r13+0x10], mov_eax_ebp, mov_ebx_dword_ptr_[r@@ dx+rax*4], cmp_ebx_-1, je_0xffffffffffffffec, mov_ecx_dword_ptr_[r@@ 13+4], mov_eax_ebx, xor_edx_edx, div_ecx, mov_rsi_qword_ptr_[r13+8], mov_edi_1, lea_eax_[r@@ cx+rdx], mov_edx_edx, mov_ecx_dword_ptr_[r@@ si@@ +rax*4], mov_edx_dword_ptr_[r@@ si@@ +rdx*4], xor_eax_eax, mov_rsi_r12, call_0xfffffffffffe@@ 40@@ fd, mov_rax_qword_ptr_[r@@ 13+0x18], mov_ebx_dword_ptr_[r@@ ax+r@@ bx*4], cmp_ebx_-1, jne_0xffffffffffffffce, jmp_0xffffffffffffffac, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, ret
endbr64, sub_rsp_8, mov_ecx_dword_ptr_[r@@ di], mov_eax_dword_ptr_[rdi+0x@@ 2c], cmp_ecx_esi, jbe_0x@@ 79, cmp_ecx_edx, jbe_0x@@ d2, cmp_dword_ptr_[rdi+@@ 4]_eax, jbe_0x@@ aa, mov_ecx_dword_ptr_[r@@ di+0x30], test_ecx_ecx, jne_0x80, mov_r9_qword_ptr_[r@@ di+0x10], mov_r8d_esi, mov_r10d_dword_ptr_[r@@ 9+r@@ 8*4], mov_r9_qword_ptr_[r@@ di+0x18], mov_ecx_eax, mov_dword_ptr_[r@@ 9@@ +rcx*@@ 4]@@ _r10d, mov_r9_qword_ptr_[r@@ di+0x10], mov_dword_ptr_[r@@ 9+r@@ 8@@ *@@ 4]_eax, mov_r8_qword_ptr_[r@@ di+8], mov_dword_ptr_[r@@ 8@@ +rcx*@@ 4]_edx, mov_edx_edx, mov_r8d_eax, mov_rcx_qword_ptr_[r@@ di+0x10], add_r8d@@ _dword_ptr_[r@@ di+4], mov_r9d_dword_ptr_[r@@ cx+rdx*4], mov_rcx_qword_ptr_[r@@ di+0x18], mov_dword_ptr_[r@@ cx+r@@ 8@@ *@@ 4]@@ _r9d, mov_r8d_dword_ptr_[r@@ di+4], mov_rcx_qword_ptr_[r@@ di+0x10], add_r8d@@ _eax, mov_dword_ptr_[rcx@@ +rdx*@@ 4]_r8d, mov_rdx_qword_ptr_[rdi+8], add_eax_dword_ptr_[r@@ di+4], mov_dword_ptr_[rdx@@ +rax*@@ 4]_esi, inc_dword_ptr_[r@@ di+0x@@ 2c], add_rsp_8, ret, lea_rcx_[rip+0x@@ 50@@ 81], mov_edx_0x5@@ 9, lea_rsi_[rip+0x4@@ fe@@ 5], lea_rdi_[rip+0x@@ 50@@ 10], call_0xfffffffffffe@@ 40@@ 1e, lea_rcx_[rip+0x@@ 50@@ 62], mov_edx_0x5@@ c, lea_rsi_[rip+0x4@@ fc@@ 6], lea_rdi_[rip+0x@@ 50@@ 1d], call_0xfffffffffffe3@@ fff, lea_rcx_[rip+0x@@ 50@@ 43], mov_edx_0x5@@ b, lea_rsi_[rip+0x4@@ fa@@ 7], lea_rdi_[rip+0x4@@ ff@@ 0], call_0xfffffffffffe3@@ fe0, lea_rcx_[rip+0x@@ 50@@ 24], mov_edx_0x5@@ a, lea_rsi_[rip+0x4f@@ 88], lea_rdi_[rip+0x4@@ fc@@ 2], call_0xfffffffffffe3@@ fc@@ 1
endbr64, push_rbx, mov_r10d@@ _edx, mov_edx_esi, mov_rax_qword_ptr_[rdi+0x10], mov_ecx_dword_ptr_[r@@ ax+rdx*4], cmp_ecx_-1, je_0xb6, mov_r8d_dword_ptr_[r@@ di+4], mov_eax_ecx, xor_edx_edx, div@@ _r8d, mov_r9_qword_ptr_[r@@ di+8], mov_eax_edx, mov_eax_dword_ptr_[r@@ 9@@ +rax*4], mov_r11d@@ _edx, cmp_esi_eax, je_0x5c, cmp_r10@@ d_eax, je_0x66, mov_rdi_qword_ptr_[rdi+0x18], mov_ecx_dword_ptr_[r@@ di@@ +rcx*4], cmp_ecx_-1, jne_0x18, jmp_0x6@@ 4, cmp_r10@@ d_eax, je_0x2d, mov_ecx_dword_ptr_[r@@ di@@ +rcx*4], cmp_ecx_-1, je_0x50, mov_eax_ecx, xor_edx_edx, div@@ _r8d, mov_eax_edx, mov_eax_dword_ptr_[r@@ 9@@ +rax*4], mov_r11d@@ _edx, cmp_esi_eax, jne_0xffffffffffffffe1, lea_ebx_[r@@ 8@@ +rdx], cmp_r10d@@ _dword_ptr_[r@@ 9+r@@ bx*4], jne_0xffffffffffffffd7, mov_eax_r11d, pop_rbx, ret, lea_eax_[r@@ 8@@ +rdx], cmp_esi_dword_ptr_[r@@ 9@@ +rax*4], jne_0xffffffffffffffcd, mov_eax_r11d, pop_rbx, ret, lea_ebx_[r@@ 8@@ +rdx], cmp_r10d@@ _dword_ptr_[r@@ 9+r@@ bx*4], je_0xffffffffffffffe3, cmp_r10@@ d_eax, jne_0xffffffffffffff@@ 9e, lea_eax_[r@@ 8@@ +rdx], cmp_esi_dword_ptr_[r@@ 9@@ +rax*4], jne_0xffffffffffffff@@ 94, jmp_0xffffffffffffffd2, lea_rcx_[rip+0x@@ 4f@@ 3e], mov_edx_0x7@@ a, lea_rsi_[rip+0x4@@ eb@@ 2], lea_rdi_[rip+0x4@@ ec@@ 8], call_0xfffffffffffe@@ 3e@@ eb, lea_rcx_[rip+0x@@ 4f@@ 1f], mov_edx_0x7@@ 5, lea_rsi_[rip+0x4e@@ 93], lea_rdi_[rip+0x4@@ ea@@ 9], call_0xfffffffffffe3@@ ec@@ c
endbr64, push_r13, mov_r13d_esi, push_r12, mov_r12d_edx, push_rbp, mov_dword_ptr_[rdi+0x@@ 30]_1, mov_rbp_rdi, call_0xfffffffffffffc@@ 27, mov_rdi_rbp, pop_rbp, mov_esi_r12d, pop_r12, mov_edx_r13d, pop_r13, jmp_0xfffffffffffffc@@ 1@@ 4
endbr64, mov_eax_dword_ptr_[rdi], test_eax_eax, je_0x1b, xor_eax_eax, mov_rdx_qword_ptr_[r@@ di+0x10], mov_ecx_eax, mov_dword_ptr_[rdx@@ +rcx*@@ 4]_0xffffffff, inc_eax, cmp_dword_ptr_[r@@ di]_eax, ja_0xffffffffffffff@@ ef, mov_eax_dword_ptr_[rdi+4], add_eax_eax, je_0x2c, xor_eax_eax, mov_rcx_qword_ptr_[r@@ di+8], mov_edx_eax, mov_dword_ptr_[rcx@@ +rdx*@@ 4]_0xffffffff, inc_eax, mov_rcx_qword_ptr_[r@@ di+0x18], mov_dword_ptr_[rcx@@ +rdx*@@ 4]_0xffffffff, mov_esi_dword_ptr_[r@@ di+4], lea_edx_[r@@ si+r@@ si], cmp_edx_eax, ja_0xffffffffffffff@@ de, mov_qword_ptr_[rdi+0x@@ 2c]_0, ret
endbr64, push_r13, push_r12, push_rbp, mov_ebp_edi, mov_edi_0x38, push_rbx, mov_ebx_esi, sub_rsp_8, call_0xfffffffffffe@@ 3e@@ 69, mov_r12_rax, test_rax_rax, je_0x56, mov_r13d_ebx, shl_r13@@ _3, mov_rdi_r13, call_0xfffffffffffe@@ 3e@@ 52, mov_rdi_r13, mov_qword_ptr_[r12+8]_rax, call_0xfffffffffffe@@ 3e@@ 45, mov_edi_ebp, shl_rdi@@ _2, mov_qword_ptr_[r12+0x1@@ 8]_rax, call_0xfffffffffffe@@ 3e@@ 35, mov_rdi_r12, mov_qword_ptr_[r12+0x10]_rax, mov_qword_ptr_[r12+0x@@ 20]_0, mov_dword_ptr_[r12+0x@@ 28]_0, mov_dword_ptr_[r12]@@ _ebp, mov_dword_ptr_[r12+@@ 4]_ebx, call_0xffffffffffffff@@ 2d, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret
endbr64, push_r12, mov_r12_rdi, push_rbp, push_rbx, mov_edi_dword_ptr_[r@@ di+4], mov_rbx_rdi, shr_rdi@@ _3, inc_rdi, call_0xfffffffffffe3@@ dd@@ 8, mov_edx_ebx, shr_edx@@ _3, inc_edx, xor_esi_esi, mov_rdi_rax, mov_rbp_rax, call_0xfffffffffffe@@ 3c@@ 84, mov_eax_dword_ptr_[r12], test_eax_eax, je_0x23, xor_ebx_ebx, mov_esi_ebx, mov_rdx_rbp, mov_rdi_r12, inc_ebx, call_0xfffffffffffffa0@@ 6, cmp_dword_ptr_[r@@ 12]@@ _ebx, ja_0xffffffffffffff@@ ed, mov_ebx_dword_ptr_[r@@ 12+4], test_ebx_ebx, je_0x37, test_byte_ptr_[r@@ bp@@ ]_1, je_0x46, xor_edx_edx, lea_rdi_[rip+0x@@ 4d@@ 83], jmp_0x20, mov_eax_edx, mov_ecx_edx, shr_eax_3, and_ecx_7, movzx_eax_byte_ptr_[r@@ bp+rax], mov_esi_ecx, and_al@@ _byte_ptr_[r@@ di+r@@ si], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, je_0x1d, inc_edx, cmp_ebx@@ _edx, jne_0xffffffffffffffdf, mov_rdi_rbp, call_0xfffffffffffe@@ 3e@@ 8a, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret, mov_rdi_rbp, call_0xfffffffffffe@@ 3e@@ 75, pop_rbx, pop_rbp, mov_eax_1, pop_r12, ret
endbr64, mov_rax_qword_ptr_[rdi+0x20], mov_ecx_esi, shr_esi@@ _3, movzx_eax_byte_ptr_[r@@ ax+r@@ si], and_ecx_7, mov_edx_ecx, lea_rsi_[rip+0x4d@@ 13], and_al@@ _byte_ptr_[rsi@@ +rdx], movzx_eax_al, sar_eax@@ _cl, ret
endbr64, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_edi_dword_ptr_[r@@ di+4], mov_rbp_rdi, shr_rdi@@ _3, inc_rdi, call_0xfffffffffffe@@ 3c@@ e2, shr@@ _ebp@@ _3, lea_edx_[r@@ bp+1], xor_esi_esi, mov_rdi_rax, mov_r12_rax, call_0xfffffffffffe@@ 3b@@ 8f, mov_rdi_qword_ptr_[rbx+0x20], xor_ebp_ebp, call_0xfffffffffffe@@ 3d@@ f4, mov_edi_dword_ptr_[rbx], mov_esi_1, mov_r13_rdi, shr_rdi@@ _3, inc_rdi, call_0xfffffffffffe@@ 40@@ ce, mov_qword_ptr_[rbx+0x20]_rax, mov_dword_ptr_[rbx+0x@@ 28]_0, test_r13d_r13d, je_0x1e, mov_esi_ebp, mov_rdx_r12, mov_rdi_rbx, inc_ebp, call_0xfffffffffffff8e@@ 6, cmp_dword_ptr_[rbx]@@ _ebp, ja_0xffffffffffffff@@ ef, mov_ecx_dword_ptr_[rbx+4], mov_eax_1, xor_edx_edx, lea_rsi_[rip+0x4c@@ 6c], test_ecx_ecx, jne_0x13, jmp_0x@@ c5, mov_eax_edx, and_eax_7, movzx_eax_byte_ptr_[r@@ si+rax], mov_ecx_edx, shr_ecx_3, and_al@@ _byte_ptr_[r@@ 12@@ +rcx], mov_ecx_edx, movzx_eax_al, and_ecx_7, sar_eax@@ _cl, test_eax_eax, jne_0x90, mov_r9_qword_ptr_[r@@ bx+8], mov_eax_edx, lea_r8_[r@@ 9@@ +rax*4], mov_eax_dword_ptr_[r@@ 8], mov_rdi_qword_ptr_[rbx+0x20], mov_ecx_eax, shr_eax_3, and_ecx_7, movzx_eax_byte_ptr_[r@@ di+rax], mov_r10d@@ _ecx, and_al@@ _byte_ptr_[rsi@@ +r@@ 10], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, jne_0x1f, inc_dword_ptr_[r@@ bx+0x28], mov_ecx_dword_ptr_[r@@ 8], mov_eax_ecx, and_ecx_7, movzx_ecx_byte_ptr_[rsi@@ +rcx], shr_eax_3, or_byte_ptr_[r@@ di@@ +rax@@ ]_cl, mov_rdi_qword_ptr_[rbx+0x20], mov_r9_qword_ptr_[r@@ bx+8], mov_r8d_dword_ptr_[r@@ bx+4], lea_eax_[r@@ 8@@ +rdx], lea_r9_[r@@ 9@@ +rax*4], mov_eax_dword_ptr_[r@@ 9], mov_ecx_eax, shr_eax_3, and_ecx_7, movzx_eax_byte_ptr_[r@@ di+rax], mov_r10d@@ _ecx, and_al@@ _byte_ptr_[rsi@@ +r@@ 10], movzx_eax_al, sar_eax@@ _cl, test_eax_eax, jne_0x1b, inc_dword_ptr_[r@@ bx+0x28], mov_ecx_dword_ptr_[r@@ 9], mov_eax_ecx, and_ecx_7, movzx_ecx_byte_ptr_[rsi@@ +rcx], shr_eax_3, or_byte_ptr_[r@@ di@@ +rax@@ ]_cl, mov_r8d_dword_ptr_[r@@ bx+4], inc_edx, cmp_edx@@ _r8d, jb_0xffffffffffffff@@ 49, add_rsp_8, pop_rbx, pop_rbp, mov_rdi_r12, pop_r12, pop_r13, jmp_0xfffffffffffe@@ 3c@@ c@@ 6
endbr64, mov_rax_qword_ptr_[rdi+0x10], mov_r9d_edx, mov_edx_esi, mov_ecx_dword_ptr_[r@@ ax+rdx*4], xor_eax_eax, cmp_ecx_-1, je_0xb3, push_rbx, mov_eax_ecx, xor_edx_edx, mov_r8d_dword_ptr_[r@@ di+4], mov_r10_qword_ptr_[r@@ di+8], div@@ _r8d, mov_eax_edx, mov_r11d_dword_ptr_[r@@ 10@@ +rax*4], cmp_esi@@ _r11d, je_0x7c, cmp_r9d@@ _r11d, je_0x67, mov_rdi_qword_ptr_[rdi+0x18], mov_ecx_dword_ptr_[r@@ di@@ +rcx*4], cmp_ecx_-1, jne_0x18, jmp_0x4b, cmp_r9d@@ _eax, je_0x2d, mov_ecx_dword_ptr_[r@@ di@@ +rcx*4], cmp_ecx_-1, je_0x37, mov_eax_ecx, xor_edx_edx, div@@ _r8d, mov_eax_edx, mov_eax_dword_ptr_[r@@ 10@@ +rax*4], cmp_esi_eax, jne_0xffffffffffffffe4, lea_r11d_[r@@ 8@@ +rdx], cmp_r9d@@ _dword_ptr_[r@@ 10+r@@ 11@@ *4], jne_0xffffffffffffffda, mov_eax_1, pop_rbx, ret, lea_eax_[r@@ 8@@ +rdx], cmp_esi_dword_ptr_[r@@ 10@@ +rax*4], je_0xfffffffffffffff@@ 0, mov_ecx_dword_ptr_[r@@ di@@ +rcx*4], cmp_ecx_-1, jne_0xffffffffffffffcd, xor_eax_eax, pop_rbx, ret, add_edx@@ _r8d, mov_eax_1, cmp_esi_dword_ptr_[r@@ 10@@ +rdx*4], jne_0xffffffffffffff8f, pop_rbx, ret, lea_ebx_[r@@ 8@@ +rdx], mov_eax_1, cmp_r9d@@ _dword_ptr_[r@@ 10+r@@ bx*4], jne_0xffffffffffffff@@ 79, pop_rbx, ret, ret
endbr64, imul_edx@@ _dword_ptr_[r@@ di+4], mov_rax_qword_ptr_[rdi+8], add_edx@@ _esi, mov_eax_dword_ptr_[r@@ ax+rdx*4], ret
endbr64, mov_eax_dword_ptr_[rdi+0x@@ 28], ret
endbr64, mov_rdx_qword_ptr_[r@@ di+0x10], mov_eax_esi, mov_esi_dword_ptr_[r@@ dx+rax*4], shl_rsi@@ _0x20, or_rax@@ _rsi, ret
endbr64, mov_eax_dword_ptr_[rsi+4], cmp_eax_-1, je_0x26, mov_rcx_qword_ptr_[r@@ di+8], mov_edx_eax, mov_r8d_dword_ptr_[r@@ cx+rdx*4], cmp_r8d@@ _dword_ptr_[rsi], jne_9, add_eax_dword_ptr_[r@@ di+4], mov_r8d_dword_ptr_[r@@ cx+rax*4], mov_rax_qword_ptr_[rdi+0x18], mov_eax_dword_ptr_[r@@ ax+rdx*4], mov_dword_ptr_[rsi+@@ 4]_eax, mov_eax_r8d, ret, mov_r8d_0xffffffff, mov_eax_r8d, ret
endbr64, xor_r8d_r8d, test_dil_1, je_0x10d, movabs_rax@@ _0x@@ aaaa@@ aaaa@@ aaaaaaab, imul_rax@@ _rdi, movabs_rdx@@ _0x5@@ 5555@@ 5555@@ 5555@@ 555, cmp_rax_rdx, jbe_0x@@ ec, movabs_rax@@ _0x@@ cccc@@ cccc@@ cccccccd, imul_rax@@ _rdi, movabs_rdx@@ _0x3@@ 33@@ 33@@ 33@@ 33@@ 33@@ 33@@ 33@@ 3, cmp_rax_rdx, jbe_0x@@ cb, movabs_rax_0x6@@ db@@ 6d@@ b6d@@ b6d@@ b6d@@ b7, imul_rax@@ _rdi, movabs_rdx@@ _0x2@@ 49@@ 24@@ 924@@ 924@@ 924@@ 92, cmp_rax_rdx, jbe_0x@@ aa, push_rbp, xor_r9d_r9d, push_rbx, lea_rbx_[r@@ di-1], mov_rcx_rbx, shr_rcx@@ _1, mov_r10@@ _rcx, mov_r11_r9, inc@@ _r9, and_r10d@@ _1, je_0xfffffffffffffff@@ 0, mov_rbp@@ _r10, mov_r8_rcx, mov_esi_2, test_r8b@@ _1, je_0x11, mov_rax_rbp, imul_rax@@ _rsi, xor_edx_edx, div@@ _rdi, mov_rbp_rdx, imul@@ _r@@ si_rsi, xor_edx_edx, mov_rax_rsi, div@@ _rdi, shr_r8@@ _1, mov_rsi_rdx, jne_0xffffffffffffffd9, cmp_rbp@@ _1, je_0x53, cmp_rbx_rbp, je_0x4e, cmp_r9@@ _1, jbe_0x@@ 34, mov_rax_rbp, imul_rax@@ _rbp, xor_edx_edx, div@@ _rdi, cmp_rbx_rdx, je_0x37, mov_rsi_r10, jmp_0x13, imul@@ _rdx_rdx, mov_rax_rdx, xor_edx_edx, div@@ _rdi, cmp_rbx_rdx, je_0x21, mov_rax_rsi, inc@@ _rsi, cmp_r11@@ _rax, jne_0xffffffffffffffe6, xor_r8d_r8d, pop_rbx, mov_eax_r8d, pop_rbp, ret, mov_eax_r8d, ret, mov_rbp@@ _r10, mov_r8_rcx, mov_esi_7, test_r8b@@ _1, je_0x11, mov_rax_rbp, imul_rax@@ _rsi, xor_edx_edx, div@@ _rdi, mov_rbp_rdx, imul@@ _r@@ si_rsi, xor_edx_edx, mov_rax_rsi, div@@ _rdi, shr_r8@@ _1, mov_rsi_rdx, jne_0xffffffffffffffd9, cmp_rbp@@ _1, je_0x4b, cmp_rbx_rbp, je_0x46, cmp_r9@@ _1, jbe_0xffffffffffffff@@ a4, mov_rax_rbp, imul_rax@@ _rbp, xor_edx_edx, div@@ _rdi, cmp_rbx_rdx, je_0x2f, mov_rsi_r10, jmp_0x13, imul@@ _rdx_rdx, mov_rax_rdx, xor_edx_edx, div@@ _rdi, cmp_rbx_rdx, je_0x19, mov_rax_rsi, inc@@ _rsi, cmp_r11@@ _rax, jne_0xffffffffffffffe6, jmp_0xffffffffffffff70, mov_r8@@ _r10, mov_esi_0x3d, test_cl@@ _1, je_0x11, mov_rax_r8, imul_rax@@ _rsi, xor_edx_edx, div@@ _rdi, mov_r8_rdx, imul@@ _r@@ si_rsi, xor_edx_edx, mov_rax_rsi, div@@ _rdi, shr_rcx@@ _1, mov_rsi_rdx, jne_0xffffffffffffffda, cmp_rbx@@ _r8, je_0x4d, cmp_r8@@ _1, je_0x47, cmp_r9@@ _1, jbe_0xffffffffffffff@@ 25, mov_rax_r8, imul_rax@@ _r8, xor_edx_edx, div@@ _rdi, cmp_rbx_rdx, jne_0x15, jmp_0x2a, imul@@ _rdx_rdx, mov_rax_rdx, xor_edx_edx, div@@ _rdi, cmp_rbx_rdx, je_0x19, mov_rax_r10, inc@@ _r10, cmp_r11@@ _rax, jne_0xffffffffffffffe6, jmp_0xfffffffffffffef0, mov_r8d_1, jmp_0xfffffffffffffee@@ 1
endbr64, mov_qword_ptr_[rdi]_0, mov_qword_ptr_[rdi+8]_0, mov_qword_ptr_[rdi+0x10]_0, ret
endbr64, mov_edx_dword_ptr_[rdi], mov_eax_dword_ptr_[rdi+4], add_eax_edx, add_eax@@ _0x1f, shr_eax@@ _5, shr_edx@@ _7, lea_eax_[rax@@ +rdx+1], shl_eax@@ _5, add_eax@@ _0x40, ret
endbr64, push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+8], call_0xfffffffffffe3@@ 8d@@ 4, mov_rdi_qword_ptr_[rbx+0x10], call_0xfffffffffffe@@ 38@@ cb, mov_qword_ptr_[rbx+8]_0, mov_qword_ptr_[rbx+0x10]_0, pop_rbx, ret
endbr64, push_r14, push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, mov_dword_ptr_[rdi@@ ]_edx, mov_dword_ptr_[rdi+@@ 4]_ecx, mov_rdi_qword_ptr_[rdi+8], lea_ebx@@ _[rdx@@ +rcx+0x1@@ f], shr_edx@@ _7, shr_ebx@@ _5, lea_r13d@@ _[rdx+1], test_rdi_rdi, je_7, call_0xfffffffffffe@@ 38@@ 82, mov_edi_ebx, mov_esi_4, call_0xfffffffffffe@@ 3b@@ 66, mov_rdi_qword_ptr_[rbp+0x10], mov_qword_ptr_[rbp+8]_rax, mov_rbx_rax, test_rdi_rdi, je_0xb, call_0xfffffffffffe@@ 38@@ 61, mov_rbx_qword_ptr_[r@@ bp+8], mov_edi_r13d, mov_esi_4, call_0xfffffffffffe@@ 3b@@ 40, mov_qword_ptr_[rbp+0x10]_rax, xor_edi_edi, xor_ecx_ecx, mov_edx_dword_ptr_[r12], xor_r9d_r9d, xor_eax_eax, cmp_eax_edx, jne_0x35, inc@@ _ecx, shr_edi@@ _1, mov_esi_ecx, or_edi@@ _0x80000000, and_esi@@ _0x1f, jne_0x10, mov_edx_ecx, shr_edx@@ _5, dec@@ _edx, mov_dword_ptr_[rbx@@ +rdx*@@ 4]_edi, mov_rbx_qword_ptr_[r@@ bp+8], inc@@ _r9d, cmp_dword_ptr_[r@@ bp]@@ _r9d, je_0x4e, mov_edx_r9d, mov_edx_dword_ptr_[r@@ 12@@ +rdx*4], cmp_eax_edx, je_0xffffffffffffffcf, cmp_dword_ptr_[rbp+@@ 4]_eax, je_0x39, cmp_eax_edx, jae_0xffffffffffffff@@ c2, mov_edx_r9d, lea_esi_[r@@ cx+1], lea_r8_[r@@ 12@@ +rdx*4], sub_esi_eax, lea_ecx_[r@@ si+rax], shr_edi@@ _1, test_cl@@ _0x1f, jne_0x10, mov_edx_ecx, shr_edx@@ _5, dec@@ _edx, mov_dword_ptr_[rbx@@ +rdx*@@ 4]_edi, mov_rbx_qword_ptr_[r@@ bp+8], mov_edx_dword_ptr_[r@@ 8], inc_eax, cmp_edx_eax, ja_0xffffffffffffff@@ e1, jmp_0xffffffffffffff8f, mov_esi_ecx, and_esi@@ _0x1f, test_esi_esi, je_0x1b, dec@@ _ecx, shr_ecx@@ _5, mov_edx_ecx, mov_ecx_0x20, sub_ecx@@ _esi, mov_eax_edi, shr_eax@@ _cl, mov_dword_ptr_[rbx@@ +rdx*@@ 4]_eax, mov_rbx_qword_ptr_[r@@ bp+8], mov_eax_dword_ptr_[rbp], test_eax_eax, je_0x61, xor_edx_edx, xor_eax_eax, xor_r10d_r10d, xor_r8d_r8d, lea_r9_[rip+0x@@ 4e@@ 63], lea_r13_[rip+0x@@ 46@@ 5c], mov_ecx_edx, movzx_ecx_byte_ptr_[r@@ bx@@ +rcx], mov_edi_eax, movzx_esi_byte_ptr_[r@@ 9@@ +rcx], add_eax_esi, mov_esi_edx, inc_edx, cmp_eax@@ _r8d, jbe_0xffffffffffffff@@ ea, mov_r14d_r8d, sub_r14d@@ _edi, lea_rcx_[r@@ 13@@ +rcx*8], movzx_ecx_byte_ptr_[r@@ cx+r@@ 14], mov_r11_qword_ptr_[r@@ bp+0x10], mov_r12d@@ _r10d, lea_ecx_[r@@ cx+r@@ si*8], mov_dword_ptr_[r@@ 11+r@@ 12*@@ 4]_ecx, sub_r8d@@ _-0x80, inc@@ _r10d, cmp_dword_ptr_[r@@ bp]@@ _r8d, ja_0xffffffffffffff@@ bf, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret
endbr64, mov_rdx_qword_ptr_[r@@ di+0x10], mov_eax_esi, shr_eax@@ _7, mov_ecx_dword_ptr_[r@@ dx+rax*4], mov_r9_qword_ptr_[r@@ di+8], mov_r8d_ecx, shr_r8d@@ _3, and_ecx_7, mov_edx_r8d, mov_eax_1, shl_eax_cl, movzx_edx_byte_ptr_[r@@ 9@@ +rdx], dec_eax, and_eax_edx, lea_r10_[rip+0x@@ 4d@@ c8], cdqe, mov_edi_esi, movzx_esi_byte_ptr_[r@@ 10@@ +rax], and_edi@@ _0x7f, add_esi@@ _edi, xor_ecx_ecx, jmp_0x14, mov_edx_edi, movzx_edx_byte_ptr_[r@@ 9@@ +rdx], mov_ecx_eax, mov_r8d_edi, movzx_eax_byte_ptr_[r@@ 10@@ +rdx], lea_edi_[r@@ 8+1], add_eax_ecx, cmp_esi_eax, jae_0xffffffffffffff@@ e7, lea_rax_[rip+0x4@@ 58@@ e], sub_esi@@ _ecx, lea_rax_[rax@@ +rdx*8], movzx_eax_byte_ptr_[r@@ ax+r@@ si], lea_eax@@ _[rax+r@@ 8@@ *8], ret
endbr64, mov_r8_qword_ptr_[r@@ di+8], mov_ecx_esi, shr_esi@@ _3, mov_edx_esi, and_ecx_7, mov_eax_0xffffffff, movzx_edx_byte_ptr_[r@@ 8@@ +rdx], shl_eax_cl, not_eax, lea_rdi_[rip+0x@@ 4d@@ 49], and_eax_edx, movzx_eax_byte_ptr_[r@@ di+rax], xor_r9d_r9d, inc_eax, jmp_0x14, mov_edx_r10d, movzx_edx_byte_ptr_[r@@ 8@@ +rdx], mov_r9d_ecx, mov_esi@@ _r10d, movzx_ecx_byte_ptr_[r@@ di+rdx], lea_r10d_[r@@ si+1], add_ecx@@ _r9d, cmp_eax_ecx, jae_0xffffffffffffff@@ e5, lea_rcx_[rip+0x@@ 45@@ 14], sub_eax@@ _r9d, lea_rdx_[rcx@@ +rdx*8], movzx_eax_byte_ptr_[rdx+rax], lea_eax@@ _[rax+r@@ si*8], ret
endbr64, push_r15, mov_r15_rdx, push_r14, mov_r14_rsi, mov_esi_1, push_r13, mov_r13_rdi, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_eax_dword_ptr_[rdi], mov_ebx_dword_ptr_[r@@ di+4], add_ebx_eax, add_ebx@@ _0x1f, shr_eax@@ _7, shr_ebx@@ _5, lea_r12d@@ _[rax@@ *4+4], shl_ebx@@ _2, lea_edi_[r@@ bx+r@@ 12+8], mov_dword_ptr_[rdx@@ ]_edi, call_0xfffffffffffe@@ 38@@ ce, mov_qword_ptr_[r14]_rax, test_rax_rax, je_0x3c, mov_rbp_rax, mov_rax_qword_ptr_[r13], mov_rsi_qword_ptr_[r13+8], mov_qword_ptr_[rbp]_rax, lea_rdi_[r@@ bp+8], mov_edx_ebx, call_0xfffffffffffe@@ 3a@@ 3c, mov_rsi_qword_ptr_[r@@ 13+0x10], add_rsp_8, lea_edi_[r@@ bx+8], pop_rbx, add_rdi_rbp, pop_rbp, mov_edx_r12d, pop_r12, pop_r13, pop_r14, pop_r15, jmp_0xfffffffffffe@@ 3a@@ 1c, mov_dword_ptr_[r15@@ ]_0xffffffff, pop_rax, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12_rsi, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_ebp_dword_ptr_[r@@ si], mov_dword_ptr_[rdi]@@ _ebp, mov_eax_dword_ptr_[rsi+4], lea_r14d_[r@@ bp+r@@ ax+0x1@@ f], mov_dword_ptr_[rdi+@@ 4]_eax, shr@@ _ebp@@ _7, mov_rdi_qword_ptr_[rdi+8], shr@@ _r14d@@ _5, inc_ebp, lea_r13d_[r@@ 14*4], lea_r15d_[r@@ bp*4], test_rdi_rdi, je_7, call_0xfffffffffffe@@ 35@@ 37, mov_edi_r14d, mov_esi_4, call_0xfffffffffffe@@ 38@@ 1a, mov_rdi_qword_ptr_[rbx+0x10], mov_qword_ptr_[rbx+8]_rax, test_rdi_rdi, je_7, call_0xfffffffffffe@@ 35@@ 18, mov_edi_ebp, mov_esi_4, call_0xfffffffffffe@@ 37@@ fc, mov_qword_ptr_[rbx+0x10]_rax, mov_rdi_qword_ptr_[rbx+8], mov_edx_r13d, lea_rsi_[r@@ 12+8], call_0xfffffffffffe3@@ 97@@ 7, mov_rdi_qword_ptr_[rbx+0x10], add_rsp_8, pop_rbx, pop_rbp, lea_esi_[r@@ 13+8], add_rsi@@ _r12, pop_r12, pop_r13, pop_r14, mov_edx_r15d, pop_r15, jmp_0xfffffffffffe@@ 3@@ 95@@ 6
endbr64, push_r12, push_rbp, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, test_rdi_rdi, je_0xa, mov_rbp_rsi, test_rsi_rsi, jne_0x1a, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x48, add_rsp_0x28, pop_rbp, pop_r12, ret, lea_rdx_[rsp+0xc], lea_rsi_[rsp+0x10], mov_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0xc]_0, call_0xfffffffffffffe@@ 55, mov_r12_qword_ptr_[rsp+0x10], mov_edx_dword_ptr_[rsp+0xc], mov_rdi_rbp, mov_rsi_r12, call_0xfffffffffffe@@ 38@@ e1, mov_rdi_r12, call_0xfffffffffffe@@ 34@@ 59, jmp_0xffffffffffffffac, call_0xfffffffffffe3@@ 6c@@ 2
endbr64, mov_edx_dword_ptr_[rdi], mov_eax_dword_ptr_[rdi+4], add_eax_edx, add_eax@@ _0x1f, shr_eax@@ _5, shr_edx@@ _7, lea_eax_[rax@@ +rdx+1], lea_eax_[rax@@ *4@@ +8], ret
endbr64, mov_eax_dword_ptr_[rdi+4], mov_ecx_esi, add_eax_dword_ptr_[r@@ di], add_eax@@ _0x1f, shr_ecx@@ _7, shr_eax@@ _5, lea_rdx_[r@@ di+8], add_rax_rcx, mov_ecx_dword_ptr_[r@@ dx+rax*4], and_esi@@ _0x7f, mov_r8d_ecx, shr_r8d@@ _3, mov_r10d@@ _esi, and_ecx_7, mov_esi_r8d, mov_eax_1, shl_eax_cl, movzx_ecx_byte_ptr_[r@@ di+r@@ si+8], dec_eax, and_eax_ecx, lea_r9_[rip+0x@@ 4a@@ b8], cdqe, movzx_esi_byte_ptr_[r@@ 9@@ +rax], xor_edi_edi, add_esi@@ _r10d, jmp_0x18, mov_ecx_r10d, movzx_ecx_byte_ptr_[r@@ dx@@ +rcx], mov_edi_eax, mov_r8d_r10d, movzx_eax_byte_ptr_[r@@ 9@@ +rcx], lea_r10d_[r@@ 8+1], add_eax@@ _edi, cmp_esi_eax, jae_0xffffffffffffff@@ e7, lea_rax_[rip+0x4@@ 27@@ e], sub_esi@@ _edi, lea_rax_[rax@@ +rcx*8], movzx_eax_byte_ptr_[r@@ ax+r@@ si], lea_eax@@ _[rax+r@@ 8@@ *8], ret
endbr64, mov_ecx_esi, shr_esi@@ _3, mov_edx_esi, and_ecx_7, mov_eax_0xffffffff, movzx_edx_byte_ptr_[r@@ di+rdx@@ +8], shl_eax_cl, not_eax, lea_r8_[rip+0x@@ 4a@@ 3d], and_eax_edx, movzx_eax_byte_ptr_[r@@ 8+rax], lea_r9_[r@@ di+8], inc_eax, xor_edi_edi, jmp_0x13, mov_edx_r10d, movzx_edx_byte_ptr_[r@@ 9@@ +rdx], mov_edi_ecx, mov_esi@@ _r10d, movzx_ecx_byte_ptr_[r@@ 8@@ +rdx], lea_r10d_[r@@ si+1], add_ecx@@ _edi, cmp_eax_ecx, jae_0xffffffffffffff@@ e6, lea_rcx_[rip+0x4@@ 20@@ 5], sub_eax_edi, lea_rdx_[rcx@@ +rdx*8], movzx_eax_byte_ptr_[rdx+rax], lea_eax@@ _[rax+r@@ si*8], ret
endbr64, push_r12, push_rbp, lea_ebp_[r@@ di+1], mov_edi_0x18, push_rbx, call_0xfffffffffffe3@@ 1d0, test_rax_rax, je_0x2c, mov_rdi_rbp, mov_esi_4, mov_r12_rax, call_0xfffffffffffe3@@ 5d@@ b, mov_qword_ptr_[r12]_rax, mov_qword_ptr_[r12@@ +8]_0, mov_dword_ptr_[r12+0x1@@ 0]_ebp, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret, lea_rcx_[rip+0x@@ 4b@@ 25], mov_edx_0xf, lea_rsi_[rip+0x4a@@ 99], lea_rdi_[rip+0x4a@@ b0], call_0xfffffffffffe3@@ 12@@ 2
endbr64, mov_eax_dword_ptr_[rdi+0x@@ c], cmp_dword_ptr_[rdi+@@ 8]_eax, sete_al, ret
endbr64, mov_eax_dword_ptr_[rdi+0x@@ c], xor_edx_edx, inc_eax, div_dword_ptr_[r@@ di+0x10], cmp_edx_dword_ptr_[r@@ di+8], je_0xe, mov_dword_ptr_[rdi+0x@@ c]_edx, mov_eax_edx, mov_rdx_qword_ptr_[rdi], mov_dword_ptr_[rdx@@ +rax*@@ 4]_esi, ret, push_rax, lea_rcx_[rip+0x@@ 4a@@ b9], mov_edx_0x1@@ d, lea_rsi_[rip+0x4a@@ 3d], lea_rdi_[rip+0x4a@@ 6e], call_0xfffffffffffe@@ 30@@ c@@ 6
endbr64, mov_eax_dword_ptr_[rdi+8], cmp_eax_dword_ptr_[r@@ di+0xc], je_0x15, inc_eax, xor_edx_edx, div_dword_ptr_[r@@ di+0x10], mov_dword_ptr_[rdi+@@ 8]_edx, mov_eax_edx, mov_rdx_qword_ptr_[rdi], mov_eax_dword_ptr_[rdx+rax*4], ret, push_rax, lea_rcx_[rip+0x@@ 4a@@ 69], mov_edx_0x2@@ 4, lea_rsi_[rip+0x4@@ 9@@ fd], lea_rdi_[rip+0x4a@@ 16], call_0xfffffffffffe@@ 30@@ 8@@ 6
endbr64, mov_edx_dword_ptr_[r@@ di+8], cmp_edx_dword_ptr_[r@@ di+0xc], je_0x66, push_r13, push_r12, lea_r12_[rip+0x@@ 36@@ b4], push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, mov_ecx_dword_ptr_[r@@ di+0x10], mov_r13_qword_ptr_[rip+0x@@ b@@ 74@@ e], lea_ebx@@ _[rdx+1], mov_eax_ebx, xor_edx_edx, div_ecx, mov_rax_qword_ptr_[rbp], mov_rdi_qword_ptr_[r13], mov_esi_1, mov_ecx_dword_ptr_[r@@ ax+rdx*4], mov_rdx_r12, xor_eax_eax, call_0xfffffffffffe2@@ fa@@ 2, mov_ecx_dword_ptr_[r@@ bp+0x10], mov_eax_ebx, xor_edx_edx, div_ecx, cmp_dword_ptr_[rbp+0x@@ c]_edx, jne_0xffffffffffffffd1, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, ret
endbr64, push_rbp, mov_rbp_rdi, mov_rdi_qword_ptr_[rdi], call_0xfffffffffffe3@@ 18@@ 5, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffffe@@ 3@@ 17@@ c
push_r12, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rdi_qword_ptr_[rdi+8], call_0xfffffffffffe3@@ 162, mov_r12d_dword_ptr_[r@@ bx+0x10], mov_esi_1, mov_rdi_r12, call_0xfffffffffffe@@ 34@@ 41, mov_qword_ptr_[rbx+8]_rax, mov_rcx_qword_ptr_[rbx], mov_rdi_rax, mov_rdx_r12, mov_esi_1, call_0xfffffffffffe3@@ 34@@ a, mov_dword_ptr_[rbx+0x1@@ 4]_eax, cmp_eax_dword_ptr_[r@@ bx+0x10], je_6, mov_byte_ptr_[rbx+0x1@@ c]_1, mov_dword_ptr_[rbx+0x1@@ 8]_0, add_rsp_8, pop_rbx, pop_r12, ret
endbr64, push_rbx, mov_ebx_edi, mov_edi_0x20, call_0xfffffffffffe2@@ fd@@ 4, test_rax_rax, je_0x20, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+8]_0, mov_dword_ptr_[rax+0x1@@ 0]_ebx, mov_dword_ptr_[rax+0x1@@ 4]_ebx, mov_dword_ptr_[rax+0x1@@ 8]_ebx, mov_byte_ptr_[rax+0x1@@ c]_0, pop_rbx, ret, lea_rcx_[rip+0x4@@ 98@@ 5], mov_edx_0x14, lea_rsi_[rip+0x4@@ 93@@ 9], lea_rdi_[rip+0x4@@ 95@@ 6], call_0xfffffffffffe@@ 2f@@ 3@@ 2
endbr64, push_rbx, mov_rbx_rdi, mov_rdi_rsi, lea_rsi_[rip+0x4@@ 93@@ d], call_0xfffffffffffe@@ 34@@ 6e, mov_qword_ptr_[rbx]_rax, pop_rbx, ret
endbr64, mov_dword_ptr_[rdi+0x1@@ 0]_esi, ret
endbr64, mov_eax_dword_ptr_[rdi+0x10], ret
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, cmp_byte_ptr_[rdi+0x1@@ c]_0, mov_eax_dword_ptr_[rdi+0x18], mov_edx_dword_ptr_[r@@ di+0x14], je_0xa, cmp_edx_eax, je_0xfa, lea_ebx@@ _[rax@@ +4], cmp_ebx@@ _edx, ja_0x@@ 97, mov_rdi_r12, mov_edx_4, mov_ebx@@ _4, mov_esi_eax, add_rsi_qword_ptr_[r@@ bp+8], call_0xfffffffffffe@@ 34@@ a6, add_ebx@@ _dword_ptr_[r@@ bp+0x18], mov_dword_ptr_[rbp+0x@@ 1@@ 8]_ebx, mov_r15d_dword_ptr_[r@@ 12], lea_rdi_[r@@ 15+4], call_0xfffffffffffe@@ 2e@@ e3, mov_dword_ptr_[rax]@@ _r15d, mov_r12_r15, mov_r13_rax, mov_eax_dword_ptr_[rbp+0x@@ 14], add_r12d@@ _ebx, mov_edi_4, cmp_r12d_eax, jbe_0x@@ 25, mov_edx_eax, sub_edx@@ _ebx, sub@@ _r12d_eax, mov_r14d_edx, test_edx_edx, jne_0x81, mov_rdi_rbp, call_0xfffffffffffffe@@ 74, mov_ebx_dword_ptr_[r@@ bp+0x18], mov_r15d@@ _r12d, lea_rdi_[r@@ 14+4], add_r12d@@ _ebx, mov_esi_ebx, add_rdi@@ _r13, add_rsi_qword_ptr_[r@@ bp+8], mov_rdx_r15, call_0xfffffffffffe@@ 34@@ 46, mov_dword_ptr_[rbp+0x@@ 18]@@ _r12d, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_rax_r13, pop_r13, pop_r14, pop_r15, ret, mov_ecx_edx, sub_ecx_eax, sub_ebx@@ _edx, mov_r13d_ecx, test_ecx_ecx, jne_0x1d, mov_rdi_rbp, call_0xfffffffffffffe@@ 28, mov_eax_dword_ptr_[rbp+0x@@ 18], mov_edx_ebx, lea_rdi_[r@@ 12+r@@ 13*4], jmp_0xffffffffffffff5e, mov_esi_eax, add_rsi_qword_ptr_[r@@ bp+8], mov_rdx_r13, mov_rdi_r12, call_0xfffffffffffe3@@ 3f@@ 4, jmp_0xffffffffffffffd4, mov_esi_ebx, lea_rdi_[r@@ 13+4], add_rsi_qword_ptr_[r@@ bp+8], mov_rdx_r14, call_0xfffffffffffe3@@ 3d@@ b, jmp_0xffffffffffffff6f, xor_r13d_r13d, jmp_0xffffffffffffff9@@ 0
endbr64, push_rbp, mov_rbp_rdi, mov_rdi_qword_ptr_[rdi], call_0xfffffffffffe3@@ 26@@ 5, mov_rdi_qword_ptr_[rbp+8], call_0xfffffffffffe@@ 2f@@ 2c, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffffe@@ 2f@@ 2@@ 3
endbr64, push_r15, lea_r15_[rip+0x@@ ac@@ f3], push_r14, mov_r14_rdx, push_r13, mov_r13_rsi, push_r12, mov_r12d_edi, push_rbp, lea_rbp_[rip+0x@@ ac@@ e4], push_rbx, sub_rbp@@ _r15, sub_rsp_8, call_0xfffffffffffe@@ 24@@ 64, sar@@ _rbp@@ _3, je_0x21, xor_ebx_ebx, mov_rdx_r14, mov_rsi_r13, mov_edi_r12d, call_qword_ptr_[r@@ 15+r@@ bx*8], add_rbx_1, cmp_rbp_rbx, jne_0xffffffffffffffec, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
endbr64, ret
endbr64, sub_rsp_8, add_rsp_8, ret
