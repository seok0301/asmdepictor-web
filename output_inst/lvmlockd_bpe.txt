endbr64, sub_rsp_8, mov_rax_qword_ptr_[rip+0x@@ 34@@ fa@@ 9], test_rax_rax, je_4, call_rax, add_rsp_8, ret
push_qword_ptr_[rip+0x@@ 34@@ a5@@ a], b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ a@@ 5b@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ 54@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ ff@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ fe@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ fe@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ fd@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ fc@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ fc@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ fb@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ fb@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ fa@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ fa@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 85@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ f7@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ f7@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 6d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 65@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 0@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3f@@ 0@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ f5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ e5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ d5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ ec@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ ec@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ bd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ b5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ ea@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ ea@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 85@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 7d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 75@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 6d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 65@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 0@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3e@@ 0@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ f5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ e5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ dd@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ dd@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ cd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ c5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ bd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ b5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ ad@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ a5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 85@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 7d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 75@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 6d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 65@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 0@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3d@@ 0@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ f5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ e5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ d5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ cd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ c5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ bd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ b5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ ad@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ a5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 85@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 7d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 75@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 6d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 65@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 0@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 0@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ f5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ e5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ d5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ cd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ c5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ bb@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ bb@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ ad@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ a5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 85@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 7d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 75@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 6d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 0@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3b@@ 0@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3a@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3a@@ f5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3a@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3a@@ e5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 33@@ add@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 3a@@ d5@@ ]
call_0xfffffffffffff67@@ 0
endbr64, mov_eax_dword_ptr_[rip+0x2@@ 37@@ 40@@ e], lea_edx_[rax+1], mov_dword_ptr_[rip+0x2@@ 37@@ 40@@ 5@@ ]_edx, test_eax_eax, je_@@ 3, ret, push_rdx, call_0x1@@ 3f@@ 87, mov_r9d_eax, test_eax_eax, je_0x29, lea_r10_[rip+0x@@ 3@@ 5d@@ 54], lea_r8_[rip+0x@@ 2b@@ a@@ fd], or_ecx_0xffffffff, mov_edx_0x8@@ 69, lea_rsi_[rip+0x2a@@ ef@@ 6], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], call_0x2@@ 2a@@ d4, call_0x1@@ 5b@@ 2f, mov_rdi_qword_ptr_[rip+0x2@@ 37@@ 3e@@ 3], test_rdi_rdi, je_7, call_0x2@@ 2e@@ 0e, mov_qword_ptr_[rip+0x2@@ 37@@ 3c@@ e]_0, call_0x1@@ e5@@ 9e, mov_dword_ptr_[rip+0x@@ 35@@ f@@ 5f@@ ]_1, mov_dword_ptr_[rip+0x2@@ 37@@ 3a@@ 5]_0, pop_rax, ret
endbr64, push_r15, xor_ecx_ecx, push_r14, push_r13, push_r12, mov_r12d_edi, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0xa8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, lea_r15_[rsp+0x20], mov_edx_eax, add_eax@@ _0x20, mov_qword_ptr_[rsp@@ +rdx+0x@@ 20]_rcx, mov_qword_ptr_[rsp@@ +rdx+0x@@ 28]_rcx, mov_qword_ptr_[rsp@@ +rdx+0x@@ 30]_rcx, mov_qword_ptr_[rsp@@ +rdx+0x@@ 3@@ 8]_rcx, cmp_eax@@ _0x60, jb_0xffffffffffffff@@ e4, add_rax_r15, lea_rbx_[rip+0x@@ 2@@ 3d@@ 33], lea_rdi_[rip+0x24@@ 4@@ 88], mov_qword_ptr_[rsp+0x2@@ 8]_rbx, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+8]_0, mov_qword_ptr_[rax+0x10]_0, call_0xfffffffffffffb@@ 60, lea_rdi_[rip+0x24@@ 47@@ 5], mov_qword_ptr_[rsp+8]_rax, call_0xfffffffffffffb@@ 4f, mov_qword_ptr_[rsp]_rax, lea_rax_[rip+0x24@@ 5f], mov_dword_ptr_[rsp+0x@@ 48]_1, mov_qword_ptr_[rsp+0x68]_rax, mov_qword_ptr_[rsp+0x4@@ 0]_rbx, lea_r13_[r@@ sp+0x1c], lea_rbx_[rip+0x@@ 24@@ 6e@@ 9], mov_r8_r13, lea_rcx_[rip+0x@@ 33@@ 9d@@ 7], lea_rdx_[rip+0x24@@ 44@@ 5], mov_rsi_rbp, mov_edi_r12d, mov_dword_ptr_[rsp+0x1c]_0, call_0xfffffffffffffa@@ b2, cmp_eax_-1, je_0x2@@ 48, sub_eax_0x30, cmp_eax_0x4@@ 3, ja_0x2@@ bf, movsxd_rax_dword_ptr_[r@@ bx+rax*4], add_rax_rbx, jmp_rax, cmp_qword_ptr_[rsp+8]_0, je_0xbb, cmp_qword_ptr_[rsp]_0, je_0xa0, mov_rax_qword_ptr_[rsp+8], add_rsp_-0x80, mov_qword_ptr_[rsp+0xb0]_rax, mov_rax_qword_ptr_[rsp+0x80], mov_ecx_0x1@@ e, mov_qword_ptr_[rsp+0xb8]_rax, mov_rsi_r15, mov_rdi_rsp, rep_@@ movsd@@ _dword_ptr_[r@@ di]@@ _dword_ptr_[rsi], call_0x@@ ef@@ 6d, sub_rsp@@ _-0x80, mov_rax_qword_ptr_[rsp+0x98], xor_rax_qword_ptr_fs:[0x28], jne_0xae, add_rsp_0xa8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret, mov_rdi_qword_ptr_[rbp], mov_rsi_qword_ptr_[rip+0x@@ 3@@ 5b@@ cc], call_0x3@@ 94, mov_edi_1, call_0xfffffffffffff2@@ ea, lea_rax_[rip+0x2@@ 37@@ f4], mov_qword_ptr_[rsp]_rax, jmp_0xffffffffffffff5b, lea_rax_[rip+0x2@@ 37@@ b5], mov_qword_ptr_[rsp+8]_rax, jmp_0xffffffffffffff3f, call_0xfffffffffffff8@@ 2@@ 5
endbr64, push_rbp, lea_rdi_[rip+0x27@@ f@@ 9b], call_0xfffffffffffff7@@ 94, test_rax_rax, je_0xc, mov_dword_ptr_[rip+0x23@@ 5e@@ e0@@ ]_1, lea_rdi_[rip+0x27@@ f@@ 90], mov_dword_ptr_[rip+0x3@@ 38@@ 47@@ ]_1, call_0xfffffffffffff76@@ f, mov_rbp_rax, test_rax_rax, je_0x1f, lea_rsi_[rip+0x2@@ 37@@ d8], mov_rdi_rax, call_0xfffffffffffff25@@ 8, test_eax_eax, jne_0xe, mov_dword_ptr_[rip+0x3@@ 38@@ 1d@@ ]_0, pop_rbp, ret, lea_rsi_[rip+0x27@@ f7@@ 1], mov_rdi_rbp, call_0xfffffffffffff@@ 23@@ 9, test_eax_eax, je_0xffffffffffffffed, lea_rsi_[rip+0x27@@ f6@@ 3], mov_rdi_rbp, call_0xfffffffffffff@@ 22@@ 6, test_eax_eax, jne_0xffffffffffffffda, mov_dword_ptr_[rip+0x3@@ 37@@ eb@@ ]_2, pop_rbp, ret
endbr64, xor_ebp_ebp, mov_r9_rdx, pop_rsi, mov_rdx_rsp, and_rsp_0xfffffffffffffff0, push_rax, push_rsp, lea_r8_[rip+0x2@@ 30@@ 36], lea_rcx_[rip+0x@@ 22@@ fb@@ f], lea_rdi_[rip-0x@@ 4f@@ 8], call_qword_ptr_[rip+0x@@ 33@@ 54@@ 2], hlt
lea_rdi_[rip+0x3@@ 5a@@ 59], lea_rax_[rip+0x3@@ 5a@@ 52], cmp_rax_rdi, je_0x17, mov_rax_qword_ptr_[rip+0x3@@ 35@@ 2e], test_rax_rax, je_0xb, jmp_rax, ret
lea_rdi_[rip+0x3@@ 5a@@ 29], lea_rsi_[rip+0x3@@ 5a@@ 22], sub_rsi_rdi, mov_rax_rsi, shr_rsi@@ _0x3f, sar_rax_3, add_rsi_rax, sar_rsi_1, je_0x16, mov_rax_qword_ptr_[rip+0x3@@ 34@@ f5], test_rax_rax, je_0xa, jmp_rax, ret
endbr64, cmp_byte_ptr_[rip+0x@@ 3@@ 5a@@ 15]_0, jne_0x2d, push_rbp, cmp_qword_ptr_[rip+0x@@ 3@@ 34@@ d@@ 2]_0, mov_rbp_rsp, je_0xe, mov_rdi_qword_ptr_[rip+0x3@@ 34@@ f6], call_0xffffffffffffef@@ 6e, call_0xffffffffffffff@@ 69, mov_byte_ptr_[rip+0x@@ 35@@ 9e@@ d]_1, pop_rbp, ret, ret
endbr64, jmp_0xffffffffffffff7@@ c
sub_edi@@ _3, cmp_edi@@ _0x15, ja_0x1@@ 72, lea_rdx_[rip+0x24@@ 00@@ 5], movsxd_rax_dword_ptr_[r@@ dx+r@@ di*4], add_rax_rdx, jmp_rax, lea_rax_[rip+0x@@ 23@@ 34@@ 5], ret
endbr64, mov_dword_ptr_[rip+0x2@@ 35@@ bb@@ 6]_1, ret
push_r13, mov_rcx_rsi, mov_r13_rdi, push_r12, mov_edx_7, mov_r12_rsi, sub_rsp_8, mov_esi_1, lea_rdi_[rip+0x2@@ 33@@ 97], call_0xfffffffffffff6e@@ e, mov_rcx_r13, mov_rdi_r12, lea_rdx_[rip+0x2@@ 33@@ 8d], mov_esi_1, xor_eax_eax, call_0xffffffffffffe@@ ea@@ 5, mov_rcx_r12, mov_edx_0xe, mov_esi_1, lea_rdi_[rip+0x@@ 23@@ 37@@ c], call_0xfffffffffffff6b@@ c, mov_rcx_r12, mov_edx_0x2@@ 4, mov_esi_1, lea_rdi_[rip+0x24@@ 0@@ fb], call_0xfffffffffffff6a@@ 3, mov_rcx_r12, mov_edx_0x11, mov_esi_1, lea_rdi_[rip+0x@@ 23@@ 35@@ 9], call_0xfffffffffffff68@@ a, mov_rcx_r12, mov_edx_0x2@@ 2, mov_esi_1, lea_rdi_[rip+0x24@@ 0@@ f1], call_0xfffffffffffff67@@ 1, mov_rcx_r12, mov_edx_0xe, mov_esi_1, lea_rdi_[rip+0x2@@ 33@@ 39], call_0xfffffffffffff65@@ 8, mov_rcx_r12, mov_edx_0x2@@ d, mov_esi_1, lea_rdi_[rip+0x24@@ 0@@ e7], call_0xfffffffffffff6@@ 3f, mov_rcx_r12, mov_edx_0x14, mov_esi_1, lea_rdi_[rip+0x2@@ 33@@ 16], call_0xfffffffffffff6@@ 26, mov_rcx_r12, mov_edx_0x14, mov_esi_1, lea_rdi_[rip+0x2@@ 33@@ 12], call_0xfffffffffffff60@@ d, mov_rcx_r12, mov_edx_0x16, mov_esi_1, lea_rdi_[rip+0x@@ 23@@ 30@@ e], call_0xfffffffffffff5f@@ 4, mov_rcx_r12, mov_edx_0x3@@ 2, mov_esi_1, lea_rdi_[rip+0x24@@ 0@@ b3], call_0xfffffffffffff5d@@ b, mov_rcx_r12, mov_edx_0x1@@ 9, mov_esi_1, lea_rdi_[rip+0x2@@ 32@@ f3], call_0xfffffffffffff5c@@ 2, mov_rdi_r12, lea_rcx_[rip+0x2@@ 32@@ fe], lea_rdx_[rip+0x24@@ 0@@ bc], mov_esi_1, xor_eax_eax, call_0xffffffffffffed@@ 75, mov_rcx_r12, mov_edx_0x1@@ c, mov_esi_1, lea_rdi_[rip+0x@@ 23@@ 2e@@ 9], call_0xfffffffffffff58@@ c, mov_rdi_r12, lea_rcx_[rip+0x2@@ 32@@ f7], lea_rdx_[rip+0x24@@ 0@@ ae], mov_esi_1, xor_eax_eax, call_0xffffffffffffed@@ 3f, mov_rcx_r12, mov_edx_0x2@@ b, mov_esi_1, lea_rdi_[rip+0x24@@ 0@@ c6], call_0xfffffffffffff@@ 556, mov_rdi_r12, lea_rcx_[rip+0x@@ 23@@ 2d@@ a], lea_rdx_[rip+0x24@@ 0@@ e0], mov_esi_1, xor_eax_eax, call_0xffffffffffffe@@ d0@@ 9, mov_rcx_r12, mov_edx_0x1@@ 7, mov_esi_1, lea_rdi_[rip+0x2@@ 32@@ bb], call_0xfffffffffffff5@@ 20, mov_rcx_r12, mov_edx@@ _0x30, mov_esi_1, lea_rdi_[rip+0x24@@ 0@@ e7], call_0xfffffffffffff50@@ 7, mov_rcx_r12, mov_edx_0x1@@ 7, mov_esi_1, lea_rdi_[rip+0x@@ 23@@ 2a@@ 1], call_0xfffffffffffff4e@@ e, mov_rcx_r12, mov_edx_0x2@@ 7, mov_esi_1, lea_rdi_[rip+0x24@@ 0@@ ed], call_0xfffffffffffff4d@@ 5, mov_rcx_r12, mov_edx_0x1@@ d, mov_esi_1, lea_rdi_[rip+0x@@ 23@@ 28@@ 7], call_0xfffffffffffff4b@@ c, mov_rcx_r12, mov_edx_0x3@@ 5, mov_esi_1, lea_rdi_[rip+0x24@@ 0@@ e3], call_0xfffffffffffff4a@@ 3, mov_rcx_r12, mov_edx_0x2@@ 3, mov_esi_1, lea_rdi_[rip+0x24@@ 10@@ 2], call_0xfffffffffffff48@@ a, mov_rcx_r12, mov_edx_0x2@@ f, mov_esi_1, lea_rdi_[rip+0x24@@ 11@@ 1], call_0xfffffffffffff47@@ 1, mov_rcx_r12, mov_edx_0x1@@ 3, mov_esi_1, lea_rdi_[rip+0x@@ 23@@ 24@@ 1], call_0xfffffffffffff45@@ 8, add_rsp_8, mov_rcx_r12, pop_r12, mov_edx_0x3@@ a, mov_esi_1, lea_rdi_[rip+0x24@@ 10@@ 9], pop_r13, jmp_0xfffffffffffff@@ 43@@ 7
push_rbx, mov_rbx_rdi, lea_rdi_[rip+0x13@@ 56@@ a5], call_0xfffffffffffff4@@ 35, mov_eax_dword_ptr_[rip+0x@@ 13@@ 56@@ 3e], test_eax_eax, je_0x18, lea_rdi_[rip+0x13@@ 56@@ 8f], pop_rbx, jmp_0xfffffffffffff@@ 47@@ e, mov_rax_qword_ptr_[rip+0x@@ 13@@ 56@@ 31], lea_rdx_[rip+0x13@@ 56@@ 22], mov_qword_ptr_[rip+0x@@ 13@@ 56@@ 23@@ ]_rbx, mov_qword_ptr_[rbx]_rdx, mov_qword_ptr_[rbx+8]_rax, mov_qword_ptr_[rax]_rbx, lea_rdi_[rip+0x13@@ 56@@ 1a], call_0xffffffffffffe@@ bd@@ a, lea_rdi_[rip+0x13@@ 56@@ 4e], pop_rbx, jmp_0xfffffffffffff@@ 43@@ d
push_rbp, mov_rbp_rdi, mov_rdi_qword_ptr_[rdi+0x@@ 40], test_rdi_rdi, je_0xf, call_0xffffffffffffee@@ 13, mov_qword_ptr_[rbp+0x@@ 40]_0, lea_rdi_[rip+0x3@@ 55@@ 3f], call_0xfffffffffffff3a@@ f, mov_eax_dword_ptr_[rip+0x3@@ 54@@ e8], cmp_eax@@ _0x3f, jg@@ _0x41, mov_rdx_qword_ptr_[rip+0x3@@ 55@@ 20], lea_rcx_[rip+0x3@@ 55@@ 11], mov_qword_ptr_[rip+0x3@@ 55@@ 12@@ ]_rbp, mov_qword_ptr_[rbp@@ ]_rcx, mov_qword_ptr_[rbp@@ +8]_rdx, mov_qword_ptr_[rdx@@ ]_rbp, inc_eax, lea_rdi_[rip+0x@@ 35@@ 50@@ 6], pop_rbp, mov_dword_ptr_[rip+0x3@@ 54@@ b@@ 3]_eax, jmp_0xfffffffffffff@@ 3c@@ f, mov_rdi_rbp, call_0xffffffffffffe@@ da@@ d, lea_rdi_[rip+0x3@@ 54@@ e1], pop_rbp, jmp_0xfffffffffffff@@ 3b@@ 0
push_rbp, mov_rbp_rdi, lea_rdi_[rip+0x@@ 35@@ 4c@@ 5], call_0xfffffffffffff33@@ 5, mov_eax_dword_ptr_[rip+0x3@@ 54@@ 6a], cmp_eax@@ _0x3f, jg@@ _0x37, mov_rdx_qword_ptr_[rip+0x3@@ 54@@ 96], lea_rcx_[rip+0x3@@ 54@@ 87], mov_qword_ptr_[rip+0x3@@ 54@@ 8@@ 8]_rbp, mov_qword_ptr_[rbp@@ ]_rcx, mov_qword_ptr_[rbp@@ +8]_rdx, mov_qword_ptr_[rdx@@ ]_rbp, inc_eax, lea_rdi_[rip+0x3@@ 54@@ 8c], pop_rbp, mov_dword_ptr_[rip+0x3@@ 54@@ 35@@ ]_eax, jmp_0xfffffffffffff@@ 35@@ 5, mov_rdi_rbp, call_0xffffffffffffed@@ 3d, lea_rdi_[rip+0x3@@ 54@@ 71], pop_rbp, jmp_0xfffffffffffff@@ 34@@ 0
push_rbp, mov_rbp_rdi, lea_rdi_[rip+0x3@@ 54@@ 55], call_0xfffffffffffff2c@@ 5, mov_eax_dword_ptr_[rip+0x@@ 35@@ 3f@@ 6], cmp_eax@@ _0x3f, jg@@ _0x37, mov_rdx_qword_ptr_[rip+0x3@@ 54@@ 16], lea_rcx_[rip+0x@@ 35@@ 40@@ 7], mov_qword_ptr_[rip+0x@@ 35@@ 40@@ 8]_rbp, mov_qword_ptr_[rbp@@ ]_rcx, mov_qword_ptr_[rbp@@ +8]_rdx, mov_qword_ptr_[rdx@@ ]_rbp, inc_eax, lea_rdi_[rip+0x3@@ 54@@ 1c], pop_rbp, mov_dword_ptr_[rip+0x@@ 35@@ 3c@@ 1]_eax, jmp_0xfffffffffffff@@ 2e@@ 5, mov_rdi_rbp, call_0xffffffffffffe@@ cc@@ d, lea_rdi_[rip+0x@@ 35@@ 40@@ 1], pop_rbp, jmp_0xfffffffffffff@@ 2d@@ 0
push_rbp, mov_rbp_rdi, lea_rdi_[rip+0x@@ 35@@ 3e@@ 5], call_0xfffffffffffff25@@ 5, mov_eax_dword_ptr_[rip+0x@@ 35@@ 38@@ 2], cmp_eax@@ _0x3f, jg@@ _0x37, mov_rdx_qword_ptr_[rip+0x@@ 35@@ 39@@ 6], lea_rcx_[rip+0x@@ 35@@ 38@@ 7], mov_qword_ptr_[rip+0x@@ 35@@ 38@@ 8]_rbp, mov_qword_ptr_[rbp@@ ]_rcx, mov_qword_ptr_[rbp@@ +8]_rdx, mov_qword_ptr_[rdx@@ ]_rbp, inc_eax, lea_rdi_[rip+0x@@ 35@@ 3a@@ c], pop_rbp, mov_dword_ptr_[rip+0x@@ 35@@ 34@@ d@@ ]_eax, jmp_0xfffffffffffff@@ 27@@ 5, mov_rdi_rbp, call_0xffffffffffffec@@ 5d, lea_rdi_[rip+0x@@ 35@@ 39@@ 1], pop_rbp, jmp_0xfffffffffffff@@ 26@@ 0
push_r15, push_r14, lea_r14_[rip+0x@@ 13@@ 5@@ 54@@ 5], push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_rbx_qword_ptr_[rip+0x@@ 13@@ 55@@ 34], mov_r13d@@ _dword_ptr_[rip+0x2@@ 36@@ 7f@@ 5], cmp_rbx_r14, je_0x86, mov_rbp_rdi, xor_r15d_r15d, xor_r12d_r12d, jmp_0x18, test_r12_r12, jne_0x49, mov_rbx_qword_ptr_[rbx], cmp_rbx_r14, je_0x31, lea_rdi_[r@@ bx+0x10], mov_rsi_rbp, call_0xffffffffffffef@@ 9c, test_eax_eax, cmove@@ _r12@@ _rbx, test_r13d_r13d, je_0xffffffffffffffde, movzx_eax_byte_ptr_[rbx+0x1@@ e0], mov_rbx_qword_ptr_[rbx], and_eax_0x20, cmp_al_1, sbb@@ _r15d@@ _-1, cmp_rbx_r14, jne_0xffffffffffffffd3, cmp_r15d_1, setl@@ e_al, test_r13d_r13d, je_6, test_al_al, jne_0x16, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_dword_ptr_[rip+0x2@@ 36@@ 7@@ 6e@@ ]_0, jmp_0xffffffffffffffe2, mov_eax_1, xor_r12d_r12d, jmp_0xffffffffffffffc@@ f
movzx_eax_byte_ptr_[r@@ di+0x1@@ 54], cmp_al_2, je_7, cmp_al_3, je_0xb, ret, jmp_0x@@ d@@ 210, jmp_0xb@@ 9e@@ 8
movzx_eax_byte_ptr_[r@@ di+0x1@@ 54], cmp_al_2, je_0x17, cmp_al_3, jne_0xb, jmp_0x@@ c@@ 7e@@ 1, mov_eax_0xffffffff, ret, jmp_0x@@ dc@@ 5@@ 0
mov_edx_dword_ptr_[rip+0x2@@ 36@@ 6@@ fe], test_edx_edx, jne_0x58, mov_eax_dword_ptr_[rip+0x2@@ 36@@ 6e@@ 8], test_eax_eax, je_0x36, movdqa_xmm1_xmmword_ptr_[r@@ ip+0x2@@ 36@@ 6@@ 34], movaps_xmmword_ptr_[rdi@@ ]_xmm1, movdqa_xmm2_xmmword_ptr_[r@@ ip+0x2@@ 36@@ 63@@ 9], movaps_xmmword_ptr_[r@@ di+0x10@@ ]_xmm2, movdqa_xmm3_xmmword_ptr_[r@@ ip+0x2@@ 36@@ 63@@ d], movaps_xmmword_ptr_[rdi+0x@@ 20@@ ]_xmm3, movdqa_xmm4@@ _xmmword_ptr_[r@@ ip+0x2@@ 36@@ 64@@ 1], movaps_xmmword_ptr_[rdi+0x@@ 30@@ ]_xmm4, ret, pxor_xmm0_xmm0, movaps_xmmword_ptr_[rdi@@ ]_xmm0, movaps_xmmword_ptr_[r@@ di+0x1@@ 0]_xmm0, movaps_xmmword_ptr_[rdi+0x@@ 20]_xmm0, movaps_xmmword_ptr_[rdi+0x@@ 30]_xmm0, ret, movdqa_xmm@@ 5@@ _xmmword_ptr_[r@@ ip+0x2@@ 36@@ 6@@ 48], movaps_xmmword_ptr_[rdi@@ ]_xmm5, movdqa_xmm@@ 6@@ _xmmword_ptr_[r@@ ip+0x2@@ 36@@ 64@@ d], movaps_xmmword_ptr_[r@@ di+0x10@@ ]_xmm6, movdqa_xmm7@@ _xmmword_ptr_[r@@ ip+0x2@@ 36@@ 65@@ 1], movaps_xmmword_ptr_[rdi+0x@@ 20@@ ]_xmm7, movdqa_xmm@@ 5@@ _xmmword_ptr_[r@@ ip+0x2@@ 36@@ 65@@ 5], movaps_xmmword_ptr_[rdi+0x@@ 30]_xmm5, ret
mov_rdx_rdi, test_rdi_rdi, je_0x6a, mov_ecx_5, lea_rdi_[rip+0x22@@ e@@ 29], mov_rsi_rdx, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, movsx_eax_al, test_eax_eax, je_0x4f, mov_ecx_8, lea_rdi_[rip+0x22@@ e@@ 11], mov_rsi_rdx, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], mov_eax_3, seta_cl, sbb_cl_0, test_cl_cl, je_0x2f, mov_ecx_4, lea_rdi_[rip+0x26@@ bd@@ 4], mov_rsi_rdx, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, movsx_eax_al, cmp_eax_1, sbb_eax_eax, and_eax_4, sub_eax_2, ret, xor_eax_eax, ret
push_r12, mov_rcx_rdi, mov_r9_rsi, push_rbp, movsxd_r8@@ _edx, push_rbx, lea_rbx_[rip+0x@@ 26@@ b@@ 91], movzx_eax_byte_ptr_[rdi+0x@@ 2b], mov_r11d_dword_ptr_[r@@ di+0x38], mov_r10d_dword_ptr_[r@@ di+0x@@ 34], cmp_al_2, je_0x21, lea_rbx_[rip+0x@@ 22@@ d@@ 97], cmp_al_3, je_0x16, test_al_al, lea_rbx_[rip+0x@@ 22@@ d@@ 92], lea_rax_[rip+0x22@@ d7@@ e], cmove_rbx_rax, movzx_eax_byte_ptr_[r@@ cx+0x@@ 2a], inc_eax, cmp_al_4, ja@@ _0xf@@ 1, lea_rdx_[rip+0x2@@ 37@@ 38], movzx_eax_al, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, movzx_eax_byte_ptr_[r@@ cx+0x@@ 29], lea_rbp_[rip+0x@@ 2@@ 34@@ 0a], cmp_al_2, je_0x21, lea_rbp_[rip+0x@@ 2@@ 30@@ 8b], cmp_al_3, je_0x16, cmp_al_1, lea_rbp_[rip+0x@@ 27@@ 3c@@ 4], lea_rax_[rip+0x@@ 23@@ 1b@@ c], cmove@@ _rbp_rax, movsx_edi_byte_ptr_[r@@ cx+0x28], call_0xfffffffffffff67@@ e, sub_rsp_8, push_r11, mov_esi_0x1@@ 00000, sub_esi@@ _r8d, push_r10, lea_rdi_[rip+0x13@@ 5@@ 3a@@ 2], add_rdi@@ _r8, push_rbx, movsxd_rsi_esi, lea_r8_[rip+0x2@@ 3c@@ 04], push_r12, mov_edx_1, push_rbp, push_rax, mov_eax_dword_ptr_[r@@ cx+0x18], push_rax, mov_eax_dword_ptr_[r@@ cx+0x1@@ 4], push_rax, mov_eax_dword_ptr_[r@@ cx+0x10], mov_rcx_-1, push_rax, xor_eax_eax, call_0xffffffffffffee@@ 56, add_rsp_0x50, pop_rbx, pop_rbp, pop_r12, ret, lea_r12_[rip+0x@@ 27@@ 3@@ 14], jmp_0xffffffffffffff2@@ d
endbr64, push_r14, mov_r14_rsi, push_r13, push_r12, mov_r12d_edi, push_rbp, push_rbx, sub_rsp_0x1@@ e0, mov_qword_ptr_[rsp+0x1@@ 40]_rdx, mov_qword_ptr_[rsp+0x1@@ 4@@ 8]_rcx, mov_qword_ptr_[rsp+0x1@@ 5@@ 0]_r8, mov_qword_ptr_[rsp+0x1@@ 5@@ 8]_r9, test_al_al, je_0x42, movaps_xmmword_ptr_[rsp+0x1@@ 60]_xmm0, movaps_xmmword_ptr_[rsp+0x1@@ 70]_xmm1, movaps_xmmword_ptr_[rsp+0x1@@ 80@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x1@@ 90@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0x1@@ a0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0x1@@ b0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0x1@@ c0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0x1@@ d0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 28]_rax, xor_eax_eax, lea_rbp_[rsp+0x20], xor_edx_edx, mov_ecx_eax, add_eax@@ _0x20, mov_qword_ptr_[rbp@@ +rcx@@ ]_rdx, mov_qword_ptr_[rbp@@ +rcx@@ +8]_rdx, mov_qword_ptr_[rbp@@ +rcx+0x1@@ 0]_rdx, mov_qword_ptr_[rbp@@ +rcx+0x1@@ 8]_rdx, cmp_eax_0x1@@ 00, jb_0xffffffffffffff@@ e2, xor_edi_edi, call_0xffffffffffffe@@ ea@@ 7, mov_r9_rax, lea_r8_[rip+0x@@ 22@@ bc@@ 9], mov_ecx_0x100, mov_edx_1, mov_esi_0xff, mov_rdi_rbp, xor_eax_eax, call_0xffffffffffffed@@ 14, movsxd_rdi_eax, mov_ebx@@ _0xff, sub_ebx@@ _edi, lea_rax_[rsp+0x@@ 210], mov_qword_ptr_[rsp+0x10]_rax, mov_r13_rdi, lea_rax_[rsp+0x1@@ 30], add_rdi_rbp, movsxd_rsi@@ _ebx, lea_r9_[r@@ sp+8], mov_r8_r14, mov_rcx_-1, mov_edx_1, mov_dword_ptr_[rsp+8]@@ _0x10, mov_dword_ptr_[rsp+0xc]@@ _0x30, mov_qword_ptr_[rsp+0x18]_rax, call_0xffffffffffffe@@ 6c@@ e, cmp_ebx_eax, jle_0x@@ e7, lea_ebx@@ _[rax+r@@ 13], lea_r14d_[r@@ bx+1], movsxd_rax_ebx, movsxd_r13@@ _r14d, lea_rdi_[rip+0x34@@ ef@@ c], mov_byte_ptr_[rsp+r@@ ax+0x@@ 20]@@ _0xa, mov_byte_ptr_[rsp+r@@ 13+0x@@ 20]_0, call_0xffffffffffffed@@ 21, mov_eax_dword_ptr_[rip+0x@@ 34@@ f@@ 12], mov_edx_0x1@@ 00000, sub_edx_eax, mov_ecx_dword_ptr_[rip+0x@@ 34@@ f0@@ 1], cmp_edx@@ _r14d, jg_0x1@@ 32, test_r14d_r14d, jle_0x@@ 45, mov_r11d@@ _ebp, mov_rdx_rbp, lea_r13_[rip+0x@@ 34@@ e@@ fe], not@@ _r11d, mov_r10d_1, xor_r9d_r9d, lea_esi_[rax+1], cmp_eax@@ _0xffff@@ f, mov_edi_eax, mov_eax_esi, movzx_r8d_byte_ptr_[r@@ dx], cmove@@ _ecx@@ _r10d, cmove_eax@@ _r9d, inc_rdx, lea_esi_[r@@ 11@@ +rdx], mov_byte_ptr_[r@@ 13+r@@ di]@@ _r8b, cmp_esi@@ _ebx, jl_0xffffffffffffff@@ da, lea_rdi_[rip+0x34@@ e8@@ 1], mov_dword_ptr_[rip+0x@@ 34@@ ea@@ 7@@ ]_eax, mov_dword_ptr_[rip+0x@@ 34@@ e@@ 9d@@ ]_ecx, call_0xffffffffffffe@@ d0@@ 5, cmp_dword_ptr_[rip+0x@@ 3@@ 28@@ b@@ 9]@@ _r12d, jge_0x@@ 91, mov_edx_dword_ptr_[rip+0x2@@ 36@@ 2a@@ d], test_edx_edx, jne_0x6b, mov_rax_qword_ptr_[rsp+0x1@@ 28], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ f4, add_rsp_0x1@@ e0, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_eax_0xa, lea_rdi_[rip+0x34@@ e@@ 24], mov_word_ptr_[rsp+0x1@@ 1e@@ ]_ax, call_0xffffffffffffec@@ 4c, mov_eax_dword_ptr_[rip+0x@@ 34@@ e@@ 3d], mov_edx_0x1@@ 00000, sub_edx_eax, mov_ecx_dword_ptr_[rip+0x@@ 34@@ e@@ 2c], cmp_edx@@ _0xff, jg_0x4@@ e, mov_ebx@@ _0xfe, jmp_0xffffffffffffff2c, mov_rsi_qword_ptr_[rip+0x@@ 34@@ d@@ 29], mov_rdi_rbp, call_0xffffffffffffe@@ 84@@ 6, jmp_0xffffffffffffff88, mov_rcx_rbp, lea_rdx_[rip+0x2@@ 9a@@ 24], mov_esi_1, mov_edi_r12d, xor_eax_eax, call_0xffffffffffffe@@ 8b@@ 4, jmp_0xffffffffffffff5c, mov_r14d@@ _0xff, mov_r13d@@ _0xff, mov_esi_eax, lea_rdx_[rip+0x34@@ dd@@ b], add_rdx_rsi, cmp_r13@@ _0x20, jae_0x@@ 44, test_r13b@@ _0x10, jne_0x@@ f6, test_r13b@@ _8, jne_0x10@@ 6, test_r13b@@ _4, jne_0x1@@ 12, test_r13_r13, jne_0x@@ b1, add_eax@@ _r14d, cmp_eax_0x1@@ 00000, jne_0xfffffffffffffe@@ db, mov_ecx_1, xor_eax_eax, jmp_0xfffffffffffffe@@ ce, mov_rsi_qword_ptr_[rsp+0x20], mov_rdi_rbp, mov_qword_ptr_[rdx@@ ]_rsi, mov_rsi_qword_ptr_[r@@ sp+r@@ 13], mov_qword_ptr_[rdx+r@@ 13@@ -0x@@ 20]_rsi, mov_rsi_qword_ptr_[r@@ sp+r@@ 13+8], mov_qword_ptr_[rdx+r@@ 13@@ -0x1@@ 8]_rsi, mov_rsi_qword_ptr_[r@@ sp+r@@ 13+0x10], mov_qword_ptr_[rdx+r@@ 13@@ -0x1@@ 0]_rsi, mov_rsi_qword_ptr_[r@@ sp+r@@ 13+0x18], mov_qword_ptr_[rdx+r@@ 13@@ -@@ 8]_rsi, lea_rsi_[r@@ dx+8], and_rsi@@ _0xfffffffffffffff8, sub_rdx_rsi, add_r13@@ _rdx, and@@ _r13@@ _0xffffffffffffff@@ e0, sub_rdi_rdx, cmp_r13@@ _0x20, jb_0xffffffffffffff@@ 9a, and@@ _r13@@ _0xffffffffffffff@@ e0, xor_edx_edx, mov_r11_qword_ptr_[r@@ di+rdx], mov_r10_qword_ptr_[r@@ di+rdx@@ +8], mov_r9_qword_ptr_[r@@ di+rdx@@ +0x10], mov_r8_qword_ptr_[r@@ di+rdx@@ +0x18], mov_qword_ptr_[rsi@@ +rdx]@@ _r11, mov_qword_ptr_[rsi@@ +rdx+@@ 8]_r10, mov_qword_ptr_[rsi@@ +rdx+0x1@@ 0]_r9, mov_qword_ptr_[rsi@@ +rdx+0x1@@ 8]_r8, add_rdx_0x20, cmp_rdx@@ _r13, jb_0xffffffffffffff@@ d3, jmp_0xffffffffffffff63, movzx_esi_byte_ptr_[r@@ bp], mov_byte_ptr_[rdx@@ ]_sil, test_r13b@@ _2, je_0xffffffffffffff@@ 4a, movzx_esi_word_ptr_[r@@ bp+r@@ 13@@ -2], mov_word_ptr_[r@@ dx+r@@ 13@@ -@@ 2@@ ]_si, jmp_0xffffffffffffff38, movdqu_xmm0_xmmword_ptr_[r@@ bp], movups_xmmword_ptr_[r@@ dx@@ ]_xmm0, movdqu_xmm1_xmmword_ptr_[r@@ bp+r@@ 13@@ -0x10], movups_xmmword_ptr_[r@@ dx+r@@ 13@@ -0x@@ 10]_xmm1, jmp_0xffffffffffffff18, mov_rsi_qword_ptr_[rbp], mov_qword_ptr_[rdx@@ ]_rsi, mov_rsi_qword_ptr_[r@@ bp+r@@ 13@@ -8], mov_qword_ptr_[rdx+r@@ 13@@ -@@ 8]_rsi, jmp_0xffffffffffffff02, mov_esi_dword_ptr_[r@@ bp], mov_dword_ptr_[rdx@@ ]_esi, mov_esi_dword_ptr_[r@@ bp+r@@ 13@@ -4], mov_dword_ptr_[r@@ dx+r@@ 13@@ -@@ 4]_esi, jmp_0xfffffffffffffeee, call_0xffffffffffffe@@ 87@@ 4
push_r12, lea_rdi_[rip+0x34@@ bf@@ 7], call_0xffffffffffffea@@ 67, mov_eax_dword_ptr_[rip+0x@@ 34@@ b@@ a0], test_eax_eax, je_0xc, mov_edx_dword_ptr_[rip+0x@@ 34@@ b8@@ 2], test_edx_edx, je_0x38, mov_edi_0x2@@ 10, call_0xffffffffffffe@@ 30@@ 9, mov_r12_rax, lea_rdi_[rip+0x34@@ bc@@ a], call_0xffffffffffffea@@ 9a, test_r12_r12, je_0x4a, mov_rdi_r12, mov_edx_0x2@@ 10, xor_esi_esi, call_0xffffffffffffe@@ 11@@ 6, mov_rax_r12, pop_r12, ret, mov_r12_qword_ptr_[rip+0x@@ 34@@ b@@ 91], dec_eax, mov_rcx_qword_ptr_[r12], mov_rdx_qword_ptr_[r12+8], lea_rdi_[rip+0x34@@ b8@@ f], mov_qword_ptr_[rcx@@ +8]_rdx, mov_qword_ptr_[rdx]_rcx, mov_dword_ptr_[rip+0x@@ 34@@ b@@ 36@@ ]_eax, call_0xffffffffffffea@@ 52, jmp_0xffffffffffffffbd, xor_eax_eax, lea_rsi_[rip+0x22@@ 7f@@ 6], mov_edi_3, call_0xfffffffffffffb@@ 5a, mov_rax_r12, pop_r12, ret
push_r12, lea_rdi_[rip+0x34@@ b4@@ 7], call_0xffffffffffffe@@ 9b@@ 7, mov_eax_dword_ptr_[rip+0x@@ 34@@ ae@@ c], test_eax_eax, je_0x10, mov_edx_dword_ptr_[rip+0x@@ 34@@ ad@@ 2], test_edx_edx, je_0xa0, mov_edi_0x@@ 90, call_0xffffffffffffe@@ 25@@ 5, mov_r12_rax, lea_rdi_[rip+0x34@@ b@@ 16], call_0xffffffffffffe@@ 9e@@ 6, test_r12_r12, je_0xae, lea_rax_[r@@ 12+8], and_rax@@ _0xfffffffffffffff8, mov_rdi_r12, sub_rdi_rax, mov_qword_ptr_[r12]_0, mov_qword_ptr_[r12+0x@@ 70]_0, mov_qword_ptr_[r12+0x@@ 78]_0, mov_qword_ptr_[r12+0x@@ 80]_0, mov_qword_ptr_[r12+0x@@ 88]_0, add_edi@@ _0x@@ 90, xor_esi_esi, and_edi@@ _0xffffff@@ e0, xor_ecx_ecx, mov_edx_ecx, add_ecx@@ _0x20, mov_qword_ptr_[rax@@ +rdx@@ ]_rsi, mov_qword_ptr_[rax@@ +rdx+@@ 8]_rsi, mov_qword_ptr_[rax@@ +rdx+0x1@@ 0]_rsi, mov_qword_ptr_[rax@@ +rdx+0x1@@ 8]_rsi, cmp_ecx@@ _edi, jb_0xffffffffffffff@@ e6, mov_rax_r12, pop_r12, ret, mov_r12_qword_ptr_[rip+0x@@ 34@@ a6@@ 9], dec_eax, mov_rcx_qword_ptr_[r12], mov_rdx_qword_ptr_[r12+8], lea_rdi_[rip+0x34@@ a7@@ 7], mov_qword_ptr_[rcx@@ +8]_rdx, mov_qword_ptr_[rdx]_rcx, mov_dword_ptr_[rip+0x@@ 34@@ a@@ 1a@@ ]_eax, call_0xffffffffffffe@@ 93@@ a, jmp_0xffffffffffffff5d, xor_eax_eax, lea_rsi_[rip+0x22@@ 6f@@ 7], mov_edi_3, call_0xfffffffffffffa@@ 42, mov_rax_r12, pop_r12, ret
push_r12, lea_rdi_[rip+0x34@@ a@@ 37], call_0xffffffffffffe@@ 8a@@ 7, mov_eax_dword_ptr_[rip+0x@@ 34@@ 9d@@ 8], test_eax_eax, je_0xc, mov_edx_dword_ptr_[rip+0x@@ 34@@ 9c@@ 2], test_edx_edx, je_0x70, movsxd_rdi@@ _dword_ptr_[rip+0x@@ 34@@ 9@@ bb], add_rdi@@ _0x@@ d0, call_0xffffffffffffe@@ 140, mov_r12_rax, lea_rdi_[rip+0x34@@ a0@@ 1], call_0xffffffffffffe@@ 8d@@ 1, test_r12_r12, je_0x79, movsxd_rdx@@ _dword_ptr_[rip+0x@@ 34@@ 99@@ 4], mov_rdi_r12, add_rdx@@ _0x@@ d0, xor_esi_esi, call_0xffffffffffffdf@@ 44, lea_rax_[r@@ 12+0x@@ 68], mov_qword_ptr_[r12+0x@@ 68]_rax, mov_qword_ptr_[r12+0x@@ 70]_rax, lea_rax_[r@@ 12+0x@@ 78], mov_qword_ptr_[r12+0x@@ 78]_rax, mov_qword_ptr_[r12+0x@@ 80]_rax, mov_rax_r12, pop_r12, ret, mov_r12_qword_ptr_[rip+0x@@ 34@@ 97@@ 9], dec_eax, mov_rcx_qword_ptr_[r12], mov_rdx_qword_ptr_[r12+8], lea_rdi_[rip+0x34@@ 99@@ 7], mov_qword_ptr_[rcx@@ +8]_rdx, mov_qword_ptr_[rdx]_rcx, mov_dword_ptr_[rip+0x@@ 34@@ 9@@ 36@@ ]_eax, call_0xffffffffffffe@@ 85@@ a, jmp_0xffffffffffffff8e, xor_eax_eax, lea_rsi_[rip+0x22@@ 6@@ 30], mov_edi_3, call_0xfffffffffffff96@@ 2, mov_rax_r12, pop_r12, ret
push_r15, mov_rcx_rdi, push_r14, push_r13, push_r12, push_rbp, lea_rbp_[r@@ di+0x1@@ f8], push_rbx, sub_rsp_0x28, mov_r12_qword_ptr_[r@@ di+0x1@@ f8], mov_qword_ptr_[rsp+0x18]_rsi, mov_dword_ptr_[rsp+0x1@@ 4]_edx, cmp_r12_rbp, je_0x95, movzx_ebx_byte_ptr_[r@@ si+0x@@ 29], lea_rsi_[r@@ si+0x1@@ 0a], cmp_bl@@ _1, sete@@ _r14b, cmp_bl@@ _2, sete@@ _r13b, cmp_bl@@ _3, sete@@ _r15b, jmp_0x10, mov_r12_qword_ptr_[r12], cmp_r12_rbp, je_0x61, movzx_eax_byte_ptr_[r@@ 12+0x@@ 51], cmp_al@@ _bl, jne_0xffffffffffffffef, cmp_bl@@ _1, jne_7, test_r14b_r14b, jne_0x34, cmp_al_2, jne_7, test_r13b_r13b, jne_0x2b, cmp_al_3, jne_0xffffffffffffffd8, test_r15b_r15b, je_0xffffffffffffffd3, lea_rdi_[r@@ 12+0x10], mov_qword_ptr_[rsp+8]_rcx, mov_qword_ptr_[rsp]_rsi, call_0xffffffffffffe5@@ 3b, test_eax_eax, mov_rsi_qword_ptr_[rsp], mov_rcx_qword_ptr_[rsp+8], jne_0xffffffffffffffb3, add_rsp_0x28, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_eax_dword_ptr_[rsp+0x14], test_eax_eax, jne_0x53, mov_qword_ptr_[rsp]_rcx, call_0xfffffffffffffe@@ 54, mov_r12_rax, test_rax_rax, je_0x42, mov_rax_qword_ptr_[rsp+0x18], mov_rcx_qword_ptr_[rsp], movzx_eax_byte_ptr_[rax+0x@@ 29], mov_byte_ptr_[r12+0x@@ 5@@ 2]_0, cmp_al_1, mov_byte_ptr_[r12+0x@@ 5@@ 1]_al, je_0x2b, cmp_al_2, je_0x57, cmp_al_3, je_0x5e, mov_rax_qword_ptr_[rcx+0x@@ 200], mov_qword_ptr_[rcx+0x@@ 20@@ 0]_r12, mov_qword_ptr_[r12@@ ]_rbp, mov_qword_ptr_[r12+8]_rax, mov_qword_ptr_[rax]_r12, jmp_0xffffffffffffff90, xor_r12d_r12d, jmp_0xffffffffffffff8b, mov_qword_ptr_[r12+0x1@@ 0]_0x4@@ b@@ 4c@@ 4c@@ 47, pxor_xmm0_xmm0, or_byte_ptr_[r@@ 12+0x@@ 60@@ ]_8, mov_qword_ptr_[r12+0x1@@ 8]_0, movups_xmmword_ptr_[r@@ 12+0x@@ 20]_xmm0, movups_xmmword_ptr_[r@@ 12+0x@@ 30]_xmm0, movups_xmmword_ptr_[r@@ 12+0x@@ 40]_xmm0, jmp_0xffffffffffffffb1, mov_qword_ptr_[r12+0x1@@ 0]_0x4@@ b@@ 4c@@ 47@@ 56, jmp_0xffffffffffffffd0, mov_rsi_qword_ptr_[rsp+0x18], lea_rdi_[r@@ 12+0x10], add_rsi@@ _0x10@@ a, mov_edx_0x40, mov_qword_ptr_[rsp]_rcx, call_0xffffffffffffe@@ 54@@ d, and_byte_ptr_[r@@ 12+0x@@ 60]@@ _0xf7, mov_rcx_qword_ptr_[rsp], jmp_0xffffffffffffff7@@ b
push_r12, lea_rdi_[rip+0x34@@ 7c@@ 7], call_0xffffffffffffe6@@ 37, mov_eax_dword_ptr_[rip+0x@@ 34@@ 76@@ 4], test_eax_eax, je_0xc, mov_edx_dword_ptr_[rip+0x@@ 34@@ 75@@ 2], test_edx_edx, je_0x38, mov_edi_0x20, call_0xffffffffffffd@@ ed@@ 9, mov_r12_rax, lea_rdi_[rip+0x34@@ 79@@ a], call_0xffffffffffffe@@ 66@@ a, test_r12_r12, je_0x4a, pxor_xmm0_xmm0, movups_xmmword_ptr_[r@@ 12@@ ]_xmm0, movups_xmmword_ptr_[r@@ 12+0x1@@ 0]_xmm0, mov_rax_r12, pop_r12, ret, mov_r12_qword_ptr_[rip+0x@@ 34@@ 7@@ 31], dec_eax, mov_rcx_qword_ptr_[r12], mov_rdx_qword_ptr_[r12+8], lea_rdi_[rip+0x34@@ 75@@ f], mov_qword_ptr_[rcx@@ +8]_rdx, mov_qword_ptr_[rdx]_rcx, mov_dword_ptr_[rip+0x@@ 34@@ 6@@ fa@@ ]_eax, call_0xffffffffffffe6@@ 22, jmp_0xffffffffffffffbd, xor_eax_eax, lea_rsi_[rip+0x2@@ 24@@ 13], mov_edi_3, call_0xfffffffffffff7@@ 2a, mov_rax_r12, pop_r12, ret
push_r13, push_r12, push_rbp, push_rbx, mov_ebx_edi, lea_rdi_[rip+0x13@@ 4@@ 95@@ 1], sub_rsp_8, call_0xffffffffffffe@@ 57@@ d, mov_ebp@@ _dword_ptr_[rip+0x@@ 13@@ 4@@ 92@@ 2], mov_rdi_qword_ptr_[rip+0x@@ 13@@ 4@@ 92@@ 3], test_ebp_ebp, jle_0x@@ 1d, mov_rax_rdi, xor_r12d_r12d, cmp_dword_ptr_[rax@@ ]_-1, je_0x9e, inc_r12d, add_rax_8, cmp_r12d@@ _ebp, jne_0xffffffffffffffed, lea_r13d_[r@@ bp+0x10], movsxd_rax_r13d, lea_r12_[rax@@ *8], mov_rsi_r12, call_0xffffffffffffe@@ 54@@ a, test_rax_rax, je_0xab, lea_rcx_[rax@@ +r@@ 12-0x@@ 80], mov_qword_ptr_[rip+0x@@ 13@@ 4@@ 8d@@ 8]_rax, mov_rdx_rcx, add_rax_r12, xor_esi_esi, xor_edi_edi, mov_dword_ptr_[rdx@@ ]_0xffffffff, mov_word_ptr_[r@@ dx+@@ 4@@ ]_si, mov_word_ptr_[r@@ dx+@@ 6@@ ]_di, add_rdx_8, cmp_rdx_rax, jne_0xffffffffffffffe7, mov_dword_ptr_[rcx@@ ]_ebx, mov_dword_ptr_[rcx+@@ 4]_1, lea_rdi_[rip+0x13@@ 48@@ b5], mov_dword_ptr_[rip+0x@@ 13@@ 4@@ 88@@ b@@ ]_ebp, mov_dword_ptr_[rip+0x@@ 13@@ 4@@ 88@@ 8]_r13d, call_0xffffffffffffe5@@ 38, add_rsp_8, pop_rbx, mov_r12d_ebp, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, cmp_dword_ptr_[rip+0x@@ 13@@ 4@@ 86@@ 5]@@ _r12d, mov_dword_ptr_[rax]@@ _ebx, mov_dword_ptr_[rax+@@ 4]_1, jl@@ _0x20, lea_rdi_[rip+0x13@@ 48@@ 77], call_0xffffffffffffe@@ 50@@ 7, add_rsp_8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, mov_dword_ptr_[rip+0x@@ 13@@ 48@@ 35@@ ]@@ _r12d, jmp_0xffffffffffffffdb, mov_edx_r13d, lea_rsi_[rip+0x23@@ 1@@ dd], mov_edi_3, call_0xfffffffffffff5f@@ 8, lea_rdi_[rip+0x13@@ 48@@ 3c], call_0xffffffffffffe@@ 4c@@ c, mov_r12d@@ _0xfffffff4, jmp_0xffffffffffffffb@@ f
movzx_ecx_byte_ptr_[r@@ di+0x@@ 48], test_cl@@ _2, jne_0x@@ d9, push_rbx, mov_rbx_rdi, mov_r8d_dword_ptr_[r@@ di+0x@@ 3c], mov_r9d_dword_ptr_[r@@ di+0x40], test_cl@@ _4, je_0x6c, cmp_r8d@@ _-1, je_0x66, cmp_r9d@@ _-1, je_0x60, lea_rdi_[rip+0x13@@ 47@@ ef], call_0xffffffffffffe4@@ 1f, movsxd_rdx_dword_ptr_[r@@ bx+0x40], mov_rax_qword_ptr_[rip+0x@@ 13@@ 47@@ c7], mov_rcx_rdx, lea_rax_[rax@@ +rdx*8], cmp_dword_ptr_[rax@@ ]_-2, jne_0x5d, mov_edx_dword_ptr_[rbx+0x@@ 3c], lea_rdi_[rip+0x13@@ 47@@ c9], mov_dword_ptr_[rax]_edx, mov_edx_1, mov_word_ptr_[rax+@@ 4]_dx, call_0xffffffffffffe@@ 44@@ e, mov_edi_dword_ptr_[rip+0x@@ 13@@ 47@@ 7f], mov_edx_1, lea_rsi_[rip+0x22@@ 25@@ 2], call_0xffffffffffffe@@ 40@@ 7, test_eax_eax, jle_0x@@ 68, pop_rbx, ret, mov_edx_dword_ptr_[rbx+0x@@ 44], shr@@ _cl@@ _2, and_ecx_1, lea_rsi_[rip+0x23@@ 140], mov_edi_3, xor_eax_eax, pop_rbx, jmp_0xfffffffffffff5@@ 30, mov_edx_dword_ptr_[rbx+0x@@ 44], mov_r8d_dword_ptr_[rbx+0x@@ 3c], xor_eax_eax, lea_rsi_[rip+0x23@@ 150], mov_edi_3, call_0xfffffffffffff5@@ 13, movsxd_rdx_dword_ptr_[r@@ bx+0x40], mov_rax_qword_ptr_[rip+0x@@ 13@@ 47@@ 3b], lea_rax_[rax@@ +rdx*8], jmp_0xffffffffffffff7c, ret, call_0xffffffffffffe0@@ f8, mov_edx_dword_ptr_[rax], lea_rsi_[rip+0x22@@ 1d@@ 7], mov_edi_7, xor_eax_eax, pop_rbx, jmp_0xfffffffffffff@@ 4d@@ 2
push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, sub_rsp_8, call_0xffffffffffffdd@@ 93, add_rax_4, cmp_rax@@ _0x40, ja_0x4@@ 6, sub_rsp_8, push_r12, mov_edx_1, lea_r9_[rip+0x@@ 22@@ 1b@@ 9], lea_r8_[rip+0x@@ 26@@ 6c@@ c], mov_rcx_-1, mov_esi_0x40, mov_rdi_rbp, xor_eax_eax, call_0xffffffffffffe@@ 26@@ a, pop_rax, pop_rdx, xor_eax_eax, add_rsp_8, pop_rbp, pop_r12, ret, xor_eax_eax, mov_rdx_r12, lea_rsi_[rip+0x22@@ 16@@ 7], mov_edi_3, call_0xfffffffffffff44@@ f, mov_eax_0xffffffff, jmp_0xffffffffffffffd@@ 4
push_rbp, mov_rbp_rdi, test_byte_ptr_[rdi+0x1@@ 4]_2, je_0x38, movzx_eax_byte_ptr_[rdi+0x@@ 2a], mov_r8d_dword_ptr_[r@@ di+0x@@ 34], inc_eax, lea_r9_[r@@ di+0x@@ 88], cmp_al_4, ja_0x10@@ c, lea_rdx_[rip+0x22@@ a6@@ a], movzx_eax_al, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, lea_rdi_[rip+0x13@@ 4@@ 5a@@ 9], call_0xffffffffffffe@@ 27@@ 9, test_byte_ptr_[rbp+0x@@ 16@@ ]_1, je_0x40, mov_rax_qword_ptr_[rip+0x@@ 13@@ 4@@ 50@@ f], lea_rsi_[rip+0x13@@ 4@@ 500], mov_qword_ptr_[rip+0x@@ 13@@ 4@@ 50@@ 1]@@ _rbp, mov_qword_ptr_[rbp@@ ]_rsi, mov_qword_ptr_[rbp+8]_rax, mov_qword_ptr_[rax]_rbp, lea_rdi_[rip+0x13@@ 45@@ 37], call_0xffffffffffffda@@ 37, lea_rdi_[rip+0x13@@ 4@@ 56@@ b], pop_rbp, jmp_0xffffffffffffe@@ 29@@ a, mov_rax_qword_ptr_[rip+0x@@ 13@@ 44@@ f1], lea_rsi_[rip+0x13@@ 44@@ e2], mov_qword_ptr_[rip+0x@@ 13@@ 44@@ e3@@ ]_rbp, mov_qword_ptr_[rbp@@ ]_rsi, mov_qword_ptr_[rbp+8]_rax, mov_qword_ptr_[rax]_rbp, jmp_0xffffffffffffffc2, movsx_edi_byte_ptr_[r@@ bp+0x28], call_0xffffffffffffe@@ 94@@ d, mov_rdx_rax, mov_edi_7, lea_rsi_[rip+0x22@@ fc@@ 9], xor_eax_eax, call_0xfffffffffffff@@ 36@@ 7, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffffee@@ 0e, lea_rcx_[rip+0x@@ 26@@ 6@@ 17], jmp_0xffffffffffffff8@@ f
push_r15, push_r14, mov_r14_rdi, push_r13, mov_r13_rdx, push_r12, mov_r12_rsi, push_rbp, push_rbx, lea_rbx_[r@@ si+0x@@ 68], sub_rsp_0x18, mov_eax_dword_ptr_[r@@ dx+0x14], mov_rbp_qword_ptr_[r@@ si+0x@@ 68], test_al_1, je_0x1@@ 7c, cmp_rbp_rbx, jne_0x4c, cmp_byte_ptr_[r@@ 13+0x@@ 28@@ ]_9, mov_r9d@@ _0xfffffffe, je_0x1@@ 4e, mov_r8d_dword_ptr_[r@@ 13+0x10], lea_rcx_[r@@ 12+0x10], lea_rdx_[r@@ 14+0x10], lea_rsi_[rip+0x22@@ f4@@ 3], mov_edi_7, xor_eax_eax, mov_dword_ptr_[rsp]@@ _r9d, call_0xfffffffffffff@@ 2a0, mov_r9d_dword_ptr_[r@@ sp], jmp_0x1@@ 20, mov_rbp_qword_ptr_[rbp], cmp_rbp_rbx, je_0xffffffffffffff@@ b9, test_byte_ptr_[rbp+0x@@ 18]_1, je_0xfffffffffffffff@@ 3, mov_r8d_dword_ptr_[r@@ 13+0x10], lea_r10_[r@@ 12+0x10], lea_r15_[r@@ 14+0x10], test_eax@@ _0x80000, je_0x10, mov_r9d_dword_ptr_[r@@ 12+0x@@ 5c], cmp_r9d@@ _r8d, jne_0x2@@ b8, mov_dword_ptr_[r12+0x@@ 5c]@@ _r8d, cmp_byte_ptr_[r@@ 13+0x@@ 28@@ ]_9, je_0x1@@ 45, cmp_byte_ptr_[r@@ 12+0x@@ 5@@ 1@@ ]_3, je_0x1@@ 99, mov_rcx_r10, mov_rdx_r15, lea_rsi_[rip+0x2@@ 1f@@ 62], mov_edi_7, xor_eax_eax, mov_qword_ptr_[rsp]_r10, call_0xfffffffffffff@@ 22@@ b, mov_r10_qword_ptr_[rsp], cmp_byte_ptr_[rbp+0x@@ 10@@ ]_2, je_0x1@@ 39, mov_eax_dword_ptr_[r12+0x@@ 50], and_eax_0xffff@@ 00, cmp_eax@@ _0x3@@ 0@@ 100, je_0x1@@ e9, xor_r8d_r8d, cmp_eax@@ _0x3@@ 0@@ 200, je_0x1@@ 7b, movzx_eax_byte_ptr_[r@@ 14+0x1@@ 54], cmp_al_2, je_0x2@@ 1e, cmp_al_3, jne_0x1@@ 7a, xor_ecx_ecx, mov_edx_r8d, mov_rsi_r12, mov_rdi_r14, mov_qword_ptr_[rsp]_r10, call_0xb@@ 4@@ 9e, mov_r10_qword_ptr_[rsp], mov_r9d_eax, mov_dword_ptr_[r13+0x@@ 38]@@ _r9d, test_r9d_r9d, js_0x1@@ 5b, mov_rcx_r10, mov_rdx_r15, lea_rsi_[rip+0x2@@ 1e@@ ef], mov_edi_7, xor_eax_eax, call_0xfffffffffffff@@ 1a@@ 1, mov_rdx_qword_ptr_[rbp], mov_rax_qword_ptr_[rbp+8], mov_rdi_rbp, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, call_0xffffffffffffe@@ da@@ a, xor_r9d_r9d, cmp_qword_ptr_[r12+0x@@ 6@@ 8]_rbx, je_0x1@@ 4d, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r9d, pop_r15, ret, mov_r8d_dword_ptr_[r@@ dx+0x10], cmp_rbp_rbx, je_0xfffffffffffffe@@ 89, cmp_r8d@@ _dword_ptr_[r@@ bp+0x@@ 1c], je_0xfffffffffffffe@@ d2, mov_rbp_qword_ptr_[rbp], cmp_rbp_rbx, je_0xfffffffffffffe@@ 69, cmp_r8d@@ _dword_ptr_[r@@ bp+0x@@ 1c], jne_0xffffffffffffffef, lea_r10_[r@@ 12+0x10], lea_r15_[r@@ 14+0x10], test_eax@@ _0x80000, je_0xfffffffffffffe@@ c0, jmp_0xfffffffffffffea@@ c, mov_rcx_r10, xor_eax_eax, mov_rdx_r15, lea_rsi_[rip+0x22@@ e0@@ 9], mov_edi_7, mov_qword_ptr_[rsp]_r10, call_0xfffffffffffff0@@ f8, cmp_byte_ptr_[rbp+0x@@ 10@@ ]_2, mov_r10_qword_ptr_[rsp], jne_0xfffffffffffffe@@ d3, mov_eax_dword_ptr_[r12+0x@@ 54], lea_r8d@@ _[rax-1], mov_dword_ptr_[r12+0x@@ 5@@ 4]_r8d, test_r8d_r8d, je_0xfffffffffffffe@@ bc, mov_rcx_r10, mov_rdx_r15, lea_rsi_[rip+0x22@@ e@@ 11], mov_edi_7, xor_eax_eax, call_0xfffffffffffff0@@ ba, jmp_0xffffffffffffff19, mov_rcx_r10, lea_r9_[r@@ 13+0x@@ c9], mov_rdx_r15, lea_rsi_[rip+0x22@@ dc@@ c], mov_edi_7, xor_eax_eax, mov_qword_ptr_[rsp]_r10, call_0xfffffffffffff0@@ 91, mov_r10_qword_ptr_[rsp], jmp_0xfffffffffffffe@@ 66, mov_r8d_dword_ptr_[r@@ bp+0x14], cmp_r8d@@ _dword_ptr_[r@@ 12+0x@@ 58], ja@@ _0xf7, xor_r8d_r8d, jmp_0xfffffffffffffe@@ 79, mov_r9d@@ _0xffffffff, mov_r8d@@ _r9d, mov_rcx_r10, mov_rdx_r15, lea_rsi_[rip+0x22@@ e@@ 18], mov_edi_3, xor_eax_eax, mov_dword_ptr_[rsp]@@ _r9d, call_0xfffffffffffff0@@ 45, mov_r9d_dword_ptr_[r@@ sp], jmp_0xfffffffffffffe@@ c5, mov_byte_ptr_[r12+0x@@ 5@@ 2]_0, jmp_0xfffffffffffffe@@ b3, mov_eax_dword_ptr_[r12+0x@@ 58], mov_qword_ptr_[rsp]_r10, lea_r8d@@ _[rax+1], mov_dword_ptr_[r12+0x@@ 5@@ 8]_r8d, mov_dword_ptr_[rbp+0x@@ 14]@@ _r8d, mov_dword_ptr_[rsp+0xc]_r8d, mov_rcx_r10, and_byte_ptr_[r@@ 12+0x@@ 60]@@ _0xfb, mov_rdx_r15, lea_rsi_[rip+0x22@@ d6@@ a], xor_eax_eax, mov_edi_7, call_0xffffffffffffe@@ fe@@ b, movzx_eax_byte_ptr_[r@@ 14+0x1@@ 54], mov_r10_qword_ptr_[rsp], mov_r8d_dword_ptr_[rsp+0xc], cmp_al_2, jne_0xfffffffffffffd@@ ee, xor_ecx_ecx, mov_edx_r8d, mov_rsi_r12, mov_rdi_r14, mov_qword_ptr_[rsp]_r10, call_0xc@@ 74@@ e, mov_r9d_eax, mov_r10_qword_ptr_[rsp], jmp_0xfffffffffffffd@@ f0, mov_rcx_r10, mov_rdx_r15, lea_rsi_[rip+0x2@@ 2c@@ 60], mov_edi_7, xor_eax_eax, call_0xffffffffffffef@@ 99, mov_r9d@@ _0xfffffffe, jmp_0xfffffffffffffe@@ 17, and_byte_ptr_[r@@ 12+0x@@ 60]@@ _0xfb, mov_dword_ptr_[r12+0x@@ 5@@ 8]_r8d, mov_dword_ptr_[rsp+0xc]_r8d, mov_qword_ptr_[rsp]_r10, mov_rcx_r10, mov_rdx_r15, lea_rsi_[rip+0x2@@ 2c@@ ff], jmp_0xffffffffffffff6@@ d
push_rbp, and_ecx_1, lea_rax_[r@@ si+0x@@ 78], mov_rbp_qword_ptr_[r@@ si+0x@@ 78], je_0x64, cmp_rbp_rax, je_0x58, test_byte_ptr_[rbp+0x@@ 14]_1, je_0x49, mov_r8d_dword_ptr_[r@@ bp+0x10], lea_rcx_[r@@ si+0x10], lea_rdx_[rdi+0x10], lea_rsi_[rip+0x2@@ 1c@@ 88], mov_edi_7, xor_eax_eax, call_0xffffffffffffef@@ 1d, mov_rax_qword_ptr_[rbp+8], mov_rdx_qword_ptr_[rbp], mov_dword_ptr_[rbp+0x@@ 34]@@ _0xffffff@@ 83, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_rdi_rbp, call_0xfffffffffffffa@@ bf, mov_eax@@ _0xffffff@@ 83, pop_rbp, ret, mov_rbp_qword_ptr_[rbp], cmp_rbp_rax, jne_0xffffffffffffffac, mov_eax_0xfffffffe, pop_rbp, ret, mov_r8d_edx, cmp_rbp_rax, je_0xfffffffffffffff@@ 3, cmp_dword_ptr_[rbp+0x@@ 10]@@ _r8d, je_0xffffffffffffff@@ a1, mov_rbp_qword_ptr_[rbp], cmp_rbp_rax, jne_0xfffffffffffffff3, jmp_0xffffffffffffffe@@ 2
sub_rsp_0x28, mov_rsi_rsp, mov_edi_1, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xffffffffffffd@@ 4d@@ 4, test_eax_eax, jne_0x1d, mov_rax_qword_ptr_[rsp], mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x2f, add_rsp_0x28, ret, call_0xffffffffffffda@@ 90, mov_edi_dword_ptr_[rax], call_0xffffffffffffd@@ 8a@@ 9, mov_rdx_rax, lea_rsi_[rip+0x2@@ 2c@@ 5a], xor_eax_eax, mov_edi_3, call_0xffffffffffffee@@ 63, xor_eax_eax, jmp_0xffffffffffffffc5, call_0xffffffffffffd@@ ac@@ a
push_r15, push_r14, push_r13, push_r12, mov_r12d_esi, push_rbp, push_rbx, mov_ebx_edi, sub_rsp_0x28, mov_dword_ptr_[rsp+0x1c]@@ _edi, lea_rdi_[rip+0x13@@ 40@@ 22], call_0xffffffffffffd@@ cb@@ 2, test_ebx_ebx, je_0xcb, mov_rbx_qword_ptr_[rip+0x@@ 13@@ 3@@ ff@@ e], lea_rbp_[rip+0x@@ 13@@ 3@@ ff@@ 7], cmp_rbx_rbp, je_0x2@@ 9c, mov_dword_ptr_[rsp+0xc]_0, mov_dword_ptr_[rsp+0x10]_0, jmp_0x2d, or_byte_ptr_[r@@ bx+0x1@@ e@@ 0]@@ _0xc, lea_rdi_[rbx+0x1@@ 88], call_0xffffffffffffd@@ 45@@ a, inc@@ _dword_ptr_[rsp+0xc], mov_rdi_r14, call_0xffffffffffffd@@ cb@@ e, mov_rbx_qword_ptr_[rbx], cmp_rbx_rbp, je_0x5b, lea_r14_[r@@ bx+0x1@@ b8], mov_rdi_r14, call_0xffffffffffffdc@@ 47, test_byte_ptr_[rbx+0x1@@ e0@@ ]_8, jne_0xffffffffffffffda, test_r12d_r12d, jne_0xffffffffffffffbe, mov_rax_qword_ptr_[rbx+0x1@@ f8], lea_rdx_[r@@ bx+0x1@@ f8], cmp_rdx_rax, je_0xffffffffffffff@@ ab, lea_rcx_[rax+0x@@ 68], cmp_qword_ptr_[rax+0x@@ 6@@ 8]_rcx, je_0x2@@ 8e, mov_rdi_r14, inc_dword_ptr_[r@@ sp+0x10], call_0xffffffffffffdc@@ 6c, mov_rbx_qword_ptr_[rbx], cmp_rbx_rbp, jne_0xffffffffffffffb0, mov_eax_dword_ptr_[rsp+0x10], or_eax@@ _dword_ptr_[rsp+0xc], mov_dword_ptr_[rsp+0x14]_eax, jmp_0x2b, mov_dword_ptr_[rsp+0x14]_0, mov_dword_ptr_[rsp+0xc]_0, mov_dword_ptr_[rsp+0x10]_0, lea_rbp_[rip+0x@@ 13@@ 3f@@ 21], mov_r15_qword_ptr_[r@@ ip+0x@@ 13@@ 3f@@ 1a], mov_rbx_qword_ptr_[r@@ 15], cmp_r15@@ _rbp, je_0x2@@ 14, mov_dword_ptr_[rsp+0x18]_0, xor_r12d_r12d, jmp_0x18, inc_r12d, mov_rax_qword_ptr_[rbx], mov_r15_rbx, cmp_rbx_rbp, je_0x104, mov_rbx_rax, lea_rdi_[r@@ 15+0x1@@ b8], mov_qword_ptr_[rsp]_rdi, call_0xffffffffffffdb@@ 80, movzx_r14d_byte_ptr_[r@@ 15+0x1@@ e0], mov_rdi_qword_ptr_[rsp], mov_r13d@@ _r14d, shr@@ _r14@@ b@@ _3, shr@@ _r13@@ b@@ _4, and_r14d@@ _1, and_r13d@@ _1, call_0xffffffffffffd@@ bb@@ c, test_r14b_r14b, je_0xffffffffffffff@@ b7, test_r13b_r13b, je_0xffffffffffffff@@ af, mov_rdi_qword_ptr_[r15+0x1@@ 80], xor_esi_esi, call_0xffffffffffffd6@@ 94, test_eax_eax, jne_0x12@@ 5, mov_rdx_qword_ptr_[r15], mov_rax_qword_ptr_[r15+8], lea_rsi_[rip+0x2@@ 1a@@ 3e], mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_edi_7, xor_eax_eax, lea_rdx_[r@@ 15+0x10], call_0xffffffffffffec@@ 97, cmp_byte_ptr_[r@@ 15+0x1@@ e0]_0, jns_0xffffffffffffff@@ 6d, mov_r14_qword_ptr_[r@@ 15+0x1@@ f8], lea_rax_[r@@ 15+0x1@@ f8], mov_qword_ptr_[rsp]_rax, mov_r13_qword_ptr_[r@@ 14], cmp_rax_r14, je_0x3a, mov_rsi_r14, mov_rdi_r15, call_0xffffffffffffe@@ 9a@@ a, mov_rcx_qword_ptr_[r@@ 14], mov_rdx_qword_ptr_[r@@ 14+8], mov_rdi_r14, mov_qword_ptr_[rcx@@ +8]_rdx, mov_qword_ptr_[rdx]_rcx, mov_r14_r13, call_0xffffffffffffe@@ 7f@@ 1, mov_r13_qword_ptr_[r@@ 13], cmp_r14@@ _qword_ptr_[rsp], jne_0xffffffffffffffd4, mov_rdi_r15, call_0xffffffffffffd4@@ ff, mov_r15_rbx, inc_dword_ptr_[r@@ sp+0x18], mov_rax_qword_ptr_[rbx], cmp_rbx_rbp, jne_0xffffffffffffff@@ 0f, mov_r15_rax, mov_eax_dword_ptr_[rsp+0x18], or_eax@@ _r12d, or_dword_ptr_[r@@ sp+0x1@@ 4]_eax, mov_eax_dword_ptr_[rsp+0x10], lea_r14d@@ _[rax+r@@ 12], cmp_r15@@ _rbp, je_0xa7, lea_rdi_[rip+0x13@@ 3@@ dd@@ a], call_0xffffffffffffda@@ ca, mov_ecx_dword_ptr_[rsp+0x14], test_ecx_ecx, je_0x31, push_r12, mov_ecx_1, lea_rsi_[rip+0x22@@ 9e@@ f], mov_eax_dword_ptr_[rsp+0x18], mov_edi_7, push_rax, xor_eax_eax, mov_r9d_dword_ptr_[rsp+0x@@ 28], mov_r8d_dword_ptr_[rsp+0x1c], mov_edx_dword_ptr_[rsp+0x2c], call_0xffffffffffffe@@ bb@@ 5, pop_rax, pop_rdx, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_eax_r14d, pop_r14, pop_r15, ret, mov_edx_eax, lea_rsi_[rip+0x2@@ 190@@ e], mov_edi_3, xor_eax_eax, call_0xffffffffffffeb@@ 88, jmp_0xfffffffffffffecc, mov_dword_ptr_[rsp+0x18]_0, mov_dword_ptr_[rsp+0x14]_0, mov_dword_ptr_[rsp+0xc]_0, mov_dword_ptr_[rsp+0x10]_0, xor_r12d_r12d, xor_r14d_r14d, mov_esi_dword_ptr_[rip+0x2@@ 34@@ f7@@ e], test_esi_esi, jne_0xffffffffffffff@@ 57, mov_dword_ptr_[rip+0x2@@ 34@@ fd@@ c]_0, mov_dword_ptr_[rip+0x2@@ 34@@ fc@@ 6]_0, jmp_0xffffffffffffff3d, mov_dword_ptr_[rsp+0x18]_0, mov_r14d_dword_ptr_[r@@ sp+0x10], xor_r12d_r12d, jmp_0xffffffffffffff16, mov_rax_qword_ptr_[rax], cmp_rax_rdx, jne_0xfffffffffffffd@@ 64, jmp_0xfffffffffffffd@@ 0@@ 7
endbr64, push_r15, lea_rsi_[rip-0x@@ 1d@@ cd], push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, mov_edi@@ _0xf, push_rbx, sub_rsp_0x58, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, call_0xffffffffffffd@@ 5e@@ f, call_0x7@@ 92@@ a, mov_ebx_eax, call_0xb@@ 48@@ 3, cmp_ebx_eax, cmovl@@ _ebx_eax, lea_rdi_[rip+0x3@@ 3a@@ b2], xor_esi_esi, mov_dword_ptr_[rip+0x3@@ 3a@@ 4e@@ ]_ebx, call_0xffffffffffffd@@ 27@@ a, lea_rax_[rip+0x3@@ 3a@@ 8e], mov_qword_ptr_[rip+0x3@@ 3a@@ 87@@ ]_rax, mov_qword_ptr_[rip+0x3@@ 3a@@ 88]_rax, lea_rax_[rip+0x3@@ 3a@@ 69], mov_qword_ptr_[rip+0x3@@ 3a@@ 62@@ ]_rax, mov_qword_ptr_[rip+0x3@@ 3a@@ 63@@ ]_rax, lea_rax_[rip+0x3@@ 3a@@ 44], mov_qword_ptr_[rip+0x3@@ 3a@@ 3d@@ ]_rax, mov_qword_ptr_[rip+0x3@@ 3a@@ 3e@@ ]_rax, lea_rax_[rip+0x3@@ 3a@@ 1f], mov_qword_ptr_[rip+0x3@@ 3a@@ 18]_rax, mov_qword_ptr_[rip+0x3@@ 3a@@ 19@@ ]_rax, mov_dword_ptr_[rip+0x@@ 33@@ 9e@@ 7]_1, mov_ebx@@ _0x20, jmp_0xb, call_0xffffffffffffe@@ 4e0, dec_ebx, je_0x59, call_0xffffffffffffee@@ 37, mov_rdi_rax, test_rax_rax, jne_0xffffffffffffffec, xor_eax_eax, lea_rsi_[rip+0x2@@ 17@@ cb], mov_edi_3, mov_dword_ptr_[rip+0x@@ 33@@ 9b@@ 2]_0, call_0xffffffffffffea@@ 02, mov_eax@@ _0xfffffff4, mov_rcx_qword_ptr_[rsp+0x48], xor_rcx_qword_ptr_fs:[0x28], jne_0x@@ 97@@ 9, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_ebx@@ _0x20, jmp_0x14, call_0xffffffffffffe5@@ 00, dec_ebx, je_0x19, call_0xffffffffffffee@@ 77, mov_rdi_rax, test_rax_rax, jne_0xffffffffffffffec, jmp_0xffffffffffffff90, mov_ebx@@ _0x20, jmp_0x14, call_0xffffffffffffe@@ 540, dec_ebx, je_0x14, call_0xffffffffffffef@@ 57, mov_rdi_rax, test_rax_rax, jne_0xffffffffffffffec, jmp_0xffffffffffffff60, mov_ebx@@ _0x20, jmp_0x11, call_0xffffffffffffe@@ 588, dec_ebx, je_0x19, call_0xfffffffffffff@@ 19@@ f, mov_rdi_rax, test_rax_rax, jne_0xffffffffffffffec, jmp_0xffffffffffffff38, movabs_rax_0x6@@ 26@@ f@@ 6c@@ 67@@ 5f@@ 6d@@ 7@@ 66@@ c, mov_r8d_0x6@@ c@@ 61, xor_esi_esi, mov_qword_ptr_[rip+0x2@@ 34@@ d@@ 7f@@ ]_rax, lea_rdi_[rip+0x13@@ 3b@@ 18], lea_rax_[rip+0x13@@ 3b@@ 01], mov_word_ptr_[rip+0x2@@ 34@@ d7@@ 1]@@ _r8w, mov_dword_ptr_[rip+0x3@@ 38@@ bf@@ ]_0, mov_byte_ptr_[rip+0x2@@ 34@@ d6@@ 2]_0, mov_qword_ptr_[rip+0x@@ 13@@ 3a@@ e@@ 1]_rax, mov_qword_ptr_[rip+0x@@ 13@@ 3a@@ e@@ 2]_rax, call_0xffffffffffffd0@@ da, xor_esi_esi, lea_rdi_[rip+0x13@@ 3b@@ 3c], call_0xffffffffffffd0@@ cc, xor_esi_esi, lea_rdi_[rip+0x@@ 33@@ 92@@ e], call_0xffffffffffffd0@@ be, mov_edx_0x18, mov_esi_3, lea_rdi_[rip+0x2@@ 16@@ 68], call_0xffffffffffffc@@ f7@@ 8, lea_rsi_[rip+0x2@@ 16@@ 65], xor_eax_eax, mov_edi_4, call_0xffffffffffffe@@ 8b@@ 5, mov_edi_dword_ptr_[r@@ bp+0x@@ 50], lea_r12_[rip+0x@@ 13@@ 3@@ 9f@@ 6], mov_dword_ptr_[rip+0x@@ 13@@ 3a@@ c@@ 4]_edi, call_0xfffffffffffff@@ 190, mov_dword_ptr_[rip+0x@@ 13@@ 3a@@ bd@@ ]_eax, xor_esi_esi, lea_rax_[rip+0x13@@ 3@@ 9c@@ c], lea_rdi_[rip+0x13@@ 3a@@ 35], mov_qword_ptr_[rip+0x@@ 13@@ 3@@ 9c@@ e@@ ]_r12, mov_qword_ptr_[rip+0x@@ 13@@ 3@@ 9c@@ f@@ ]_r12, mov_qword_ptr_[rip+0x@@ 13@@ 3@@ 9b@@ 0]_rax, mov_qword_ptr_[rip+0x@@ 13@@ 3@@ 9b@@ 1]_rax, call_0xffffffffffffd0@@ 49, xor_esi_esi, lea_rdi_[rip+0x13@@ 3@@ 9c@@ b], call_0xffffffffffffd@@ 18@@ b, xor_ecx_ecx, lea_rdx_[rip+0x4@@ 4c@@ d], xor_esi_esi, lea_rdi_[rip+0x13@@ 3a@@ 1c], call_0xffffffffffffd@@ 154, lea_rax_[rip+0x13@@ 3@@ 8d@@ 8], xor_esi_esi, lea_rdi_[rip+0x13@@ 39@@ 1f], mov_qword_ptr_[rip+0x@@ 13@@ 38@@ c8]_rax, mov_qword_ptr_[rip+0x@@ 13@@ 38@@ c9@@ ]_rax, call_0xffffffffffffd@@ 001, xor_esi_esi, lea_rdi_[rip+0x13@@ 38@@ c3], call_0xffffffffffffd@@ 14@@ 3, xor_ecx_ecx, xor_esi_esi, lea_rdi_[rip+0x13@@ 39@@ 1b], lea_rdx_[rip+0x3@@ 95@@ c], call_0xffffffffffffd@@ 10@@ c, lea_rdi_[rip+0x13@@ 3a@@ 08], call_0xffffffffffffd@@ 1a0, test_eax_eax, jne_0x7@@ 51, mov_edi_dword_ptr_[rip+0x@@ 13@@ 3@@ 9f@@ 5], call_0xfffffffffffff0@@ cd, mov_dword_ptr_[rip+0x@@ 13@@ 3@@ 9f@@ 2]_eax, xor_edi_edi, lea_rsi_[rip+0x2@@ 15@@ b5], call_0xffffffffffffcc@@ f9, mov_edi_dword_ptr_[rip+0x2@@ 3@@ 3a@@ ce], test_edi_edi, jne_0x4@@ dc, mov_esi_dword_ptr_[rip+0x@@ 13@@ 3@@ 9d@@ c], mov_rdi_qword_ptr_[rip+0x@@ 13@@ 3@@ 9e@@ 1], inc@@ _esi, movsxd_rsi_esi, mov_edx_0xffffffff, call_0xffffffffffffd@@ 17@@ f, cmp_eax_-1, je_0xff, mov_esi_dword_ptr_[rip+0x2@@ 3@@ 3a@@ 9f], test_esi_esi, je_0x1@@ 39, xor_esi_esi, mov_edi_1, call_0xfffffffffffff92@@ c, test_eax_eax, jne_0x@@ 5b@@ d, lea_rbx_[rip+0x@@ 22@@ 6@@ 80], jmp_0x21, mov_edi_7, mov_rsi_rbx, xor_eax_eax, call_0xffffffffffffe@@ 75@@ 6, mov_edi_1, call_0xffffffffffffd@@ 10@@ c, mov_esi_1, mov_edi_1, call_0xfffffffffffff8e@@ d, mov_edx_eax, test_eax_eax, jne_0xffffffffffffffd4, lea_rdi_[rip+0x13@@ 38@@ 1b], call_0xffffffffffffd@@ 5a@@ b, lea_rdi_[rip+0x13@@ 37@@ cf], mov_dword_ptr_[rip+0x@@ 13@@ 37@@ a@@ 9]_1, call_0xffffffffffffcd@@ 85, lea_rdi_[rip+0x13@@ 37@@ f9], call_0xffffffffffffd@@ 5e@@ 9, mov_rdi_qword_ptr_[rip+0x@@ 13@@ 38@@ 15], xor_esi_esi, call_0xffffffffffffd0@@ cb, test_eax_eax, jne_0x4@@ d4, lea_rdi_[rip+0x13@@ 38@@ 97], call_0xffffffffffffd@@ 56@@ 7, lea_rdi_[rip+0x13@@ 38@@ 4b], mov_dword_ptr_[rip+0x@@ 13@@ 38@@ 0@@ 5]_1, call_0xffffffffffffcd@@ 41, lea_rdi_[rip+0x13@@ 38@@ 75], call_0xffffffffffffd@@ 5a@@ 5, mov_rdi_qword_ptr_[rip+0x@@ 13@@ 38@@ 91], xor_esi_esi, call_0xffffffffffffd0@@ 87, test_eax_eax, jne_0x4@@ 70, call_0xffffffffffffcf@@ 5a, mov_eax_1, jmp_0xfffffffffffffc@@ a8, call_0xffffffffffffd@@ 2a8, mov_edx_dword_ptr_[rax], mov_eax_dword_ptr_[rip+0x2@@ 33@@ 99@@ f], cmp_edx_4, je_0x28, test_eax_eax, jne_0xffffffffffffff@@ 01, lea_rsi_[rip+0x2@@ 14@@ 88], mov_edi_3, xor_eax_eax, call_0xffffffffffffe@@ 67@@ 0, jmp_0xfffffffffffffefc, test_eax_eax, je_0xfffffffffffffea@@ 8, jmp_0xfffffffffffffed5, test_eax_eax, js_0x5@@ e2, mov_esi_dword_ptr_[rip+0x@@ 13@@ 38@@ 6e], mov_rdi_qword_ptr_[rip+0x@@ 13@@ 38@@ 73], mov_edx_esi, xor_ebp_ebp, test_esi_esi, jns@@ _0x24, jmp_0xfffffffffffffe@@ 8a, test_r15@@ w@@ _r15w, jne_0x1@@ ac, inc_rbp, mov_esi_edx, cmp_edx@@ _ebp, jl_0xffffffffffff@@ fe@@ 6e, lea_r13_[r@@ bp*8], lea_rax_[r@@ di+r@@ 13], mov_ecx_dword_ptr_[rax], mov_r8d_ebp, test_ecx_ecx, js_0xffffffffffffff@@ e0, movzx_eax_word_ptr_[r@@ ax+@@ 6], mov_r15d_eax, and@@ _r15d_1, test_al@@ _0x38, je_0xffffffffffffffc7, cmp_dword_ptr_[rip+0x@@ 13@@ 38@@ 0@@ f]@@ _ebp, mov_dword_ptr_[rsp+8]_1, mov_r14d@@ _ebp, je_0x1@@ 7b, cmp_dword_ptr_[rip+0x@@ 13@@ 37@@ f@@ 0]_ebp, je_0x12@@ 0, lea_rdi_[rip+0x13@@ 37@@ 73], mov_dword_ptr_[rsp+0xc]_r8d, call_0xffffffffffffd4@@ 3e, mov_rbx_qword_ptr_[r12], mov_r8d_dword_ptr_[rsp+0xc], cmp_rbx_r12, jne_0x19, jmp_0x2@@ 53, mov_rbx_qword_ptr_[rbx], cmp_rbx_r12, je_0x2@@ 42, cmp_dword_ptr_[rbx+0x@@ 40]@@ _r14d, jne_0xfffffffffffffff0, lea_r14_[r@@ bx+0x10], mov_rdi_r14, call_0xffffffffffffd@@ 40@@ 7, movzx_eax_byte_ptr_[rbx+0x@@ 48], test_al_1, jne_0x2@@ 7c, test_al_2, jne_0x3@@ 9c, mov_edx_dword_ptr_[rsp+8], test_edx_edx, je_0x3@@ 68, cmp_byte_ptr_[rbx+0x@@ 49@@ ]_0, mov_r9d_dword_ptr_[r@@ bx+0x@@ 3c], mov_r8d_dword_ptr_[rbx+0x@@ 44], mov_ecx_dword_ptr_[rbx+0x@@ 38], lea_rdx_[rip+0x2@@ 120@@ e], je_6, lea_rdx_[rbx+0x@@ 49], xor_eax_eax, mov_edi_7, lea_rsi_[rip+0x2@@ 13@@ dc], call_0xffffffffffffe5@@ 38, movzx_eax_byte_ptr_[rbx+0x@@ 48], mov_qword_ptr_[rbx+0x@@ 3c@@ ]_-1, and_eax_0xfffffff@@ 9, or_eax_2, mov_byte_ptr_[rbx+0x@@ 48@@ ]_al, mov_rax_qword_ptr_[rip+0x@@ 13@@ 37@@ 4f], mov_edi_dword_ptr_[r@@ ax+r@@ 13], call_0xffffffffffffca@@ d3, test_eax_eax, jne_0x3@@ dc, mov_rax_qword_ptr_[rip+0x@@ 13@@ 37@@ 37], mov_ecx_0xffffffff, mov_qword_ptr_[rax+r@@ 13@@ ]_rcx, mov_rdi_r14, call_0xffffffffffffd@@ 3d@@ 3, lea_rdi_[rip+0x13@@ 36@@ 57], mov_dword_ptr_[rip+0x@@ 13@@ 3@@ 60@@ d]_1, call_0xffffffffffffcb@@ 4d, lea_rdi_[rip+0x13@@ 36@@ 81], call_0xffffffffffffd@@ 3b@@ 1, mov_rdi_qword_ptr_[rip+0x@@ 13@@ 36@@ fd], mov_edx_dword_ptr_[rip+0x@@ 13@@ 36@@ eb], jmp_0xfffffffffffffea@@ 1, mov_edi_dword_ptr_[rip+0x@@ 13@@ 3@@ 6c@@ 2], lea_rsi_[rsp+0x@@ 47], mov_edx_1, call_0xffffffffffffcb@@ c0, test_eax_eax, jg_0xffffffffffffff@@ cd, call_0xffffffffffffd0@@ a7, mov_edx_dword_ptr_[rax], lea_rsi_[rip+0x2@@ 12@@ dc], mov_edi_7, xor_eax_eax, call_0xffffffffffffe@@ 48@@ 2, jmp_0xffffffffffffffb1, cmp_dword_ptr_[rip+0x@@ 13@@ 36@@ 9a@@ ]_ebp, mov_dword_ptr_[rsp+8]_0, mov_r14d@@ _ebp, jne_0xfffffffffffffe@@ 91, mov_edi_dword_ptr_[rip+0x@@ 13@@ 36@@ 7f], xor_edx_edx, xor_esi_esi, call_0xffffffffffffd3@@ 17, mov_r15d_eax, test_eax_eax, js_0xffffffffffffff@@ 81, call_0xffffffffffffe@@ 90@@ 7, mov_r14_rax, mov_edi_r15d, test_rax_rax, je_0x3@@ 6f, call_0xffffffffffffed@@ 23, test_eax_eax, js_0x3@@ 33, mov_dword_ptr_[r14+0x@@ 40]_eax, mov_dword_ptr_[r14+0x@@ 3c]@@ _r15d, lea_rcx_[rsp+0x30], lea_r8_[rsp+0x@@ 20], mov_edx_0x11, mov_esi_1, mov_edi_r15d, mov_dword_ptr_[rsp+0x20]@@ _0xc, call_0xffffffffffffce@@ 8f, test_eax_eax, jne_0x3@@ 7f, mov_eax_dword_ptr_[rsp+0x30], mov_dword_ptr_[r14+0x@@ 38]_eax, lea_rdi_[r@@ 14+0x10], xor_esi_esi, call_0xffffffffffffc@@ bc@@ 4, lea_rdi_[rip+0x13@@ 3@@ 58@@ 8], call_0xffffffffffffd@@ 258, mov_eax_dword_ptr_[rip+0x@@ 13@@ 3@@ 50@@ 5], inc_eax, mov_dword_ptr_[rip+0x@@ 13@@ 34@@ fd@@ ]_eax, cmp_eax_-1, je_0x2@@ b5, test_eax_eax, je_0x2@@ ad, mov_dword_ptr_[r14+0x@@ 44]_eax, mov_rax_qword_ptr_[rip+0x@@ 13@@ 3@@ 50@@ 1], mov_qword_ptr_[rip+0x@@ 13@@ 34@@ fa@@ ]_r14, mov_qword_ptr_[r14]@@ _r12, mov_qword_ptr_[r14+8]_rax, mov_qword_ptr_[rax]@@ _r14, lea_rdi_[rip+0x13@@ 3@@ 54@@ 1], call_0xffffffffffffd@@ 27@@ 1, mov_edx_dword_ptr_[r14+0x@@ 44], mov_ecx_dword_ptr_[r14+0x@@ 40], mov_r8d_dword_ptr_[r@@ 14+0x@@ 3c], mov_edi_7, lea_rsi_[rip+0x2@@ 11@@ b1], xor_eax_eax, call_0xffffffffffffe@@ 37@@ 2, mov_rdi_qword_ptr_[rip+0x@@ 13@@ 35@@ 9e], mov_edx_dword_ptr_[rip+0x@@ 13@@ 3@@ 58@@ c], jmp_0xfffffffffffffd@@ 42, mov_rax_qword_ptr_[rip+0x@@ 13@@ 3@@ 58@@ 9], mov_edi_3, mov_ecx_dword_ptr_[r@@ ax+r@@ 13], mov_edx_r8d, xor_eax_eax, lea_rsi_[rip+0x2@@ 120@@ c], call_0xffffffffffffe@@ 33@@ c, mov_rax_qword_ptr_[rip+0x@@ 13@@ 35@@ 68], mov_edi_dword_ptr_[r@@ ax+r@@ 13], call_0xffffffffffffc@@ 8e@@ c, test_eax_eax, jne_0x1@@ a5, mov_rax_qword_ptr_[rip+0x@@ 13@@ 35@@ 50], mov_ecx_0xffffffff, mov_qword_ptr_[rax+r@@ 13@@ ]_rcx, jmp_0xfffffffffffffe@@ 37, mov_edx_dword_ptr_[rbx+0x@@ 44], lea_rsi_[rip+0x2@@ 11@@ 62], mov_edi_3, xor_eax_eax, call_0xffffffffffffe@@ 2e@@ f, jmp_0xfffffffffffffd@@ f4, lea_rax_[rip+0x13@@ 3@@ 3f@@ 9], mov_qword_ptr_[rip+0x@@ 13@@ 3@@ 3f@@ 2]_rax, mov_qword_ptr_[rip+0x@@ 13@@ 3@@ 3f@@ 3]_rax, lea_rax_[rsp+0x20], lea_rbx_[rsp+0x10], mov_qword_ptr_[rsp+0x20]_rax, mov_qword_ptr_[rsp+0x28]_rax, lea_rax_[rsp+0x30], mov_qword_ptr_[rsp+0x10]_rbx, mov_qword_ptr_[rsp+0x18]_rbx, mov_qword_ptr_[rsp+0x30]_rax, mov_qword_ptr_[rsp+0x38]_rax, call_0xb@@ ef@@ e, test_eax_eax, je_0xe, mov_rdi_rbx, call_0xb@@ dc@@ 2, test_eax_eax, js@@ _0x2d, call_0xaa@@ d9, test_eax_eax, jne_0x12@@ 5, cmp_qword_ptr_[rsp+0x1@@ 0]_rbx, je_0x12f, lea_rsi_[rip+0x2@@ 20@@ ea], mov_edi_3, xor_eax_eax, call_0xffffffffffffe@@ 26@@ 3, lea_rsi_[rip+0x2@@ 20@@ ff], mov_edi_3, xor_eax_eax, call_0xffffffffffffe@@ 250, jmp_0xfffffffffffffa@@ 95, mov_edx_eax, lea_rsi_[rip+0x22@@ 19@@ f], mov_edi_3, xor_eax_eax, call_0xffffffffffffe@@ 230, jmp_0xfffffffffffffb@@ 81, mov_edx_eax, lea_rsi_[rip+0x22@@ 15@@ 7], mov_edi_3, xor_eax_eax, call_0xffffffffffffe@@ 210, jmp_0xfffffffffffffb@@ 1d, test_r15@@ w@@ _r15w, je_0xfffffffffffffd@@ 06, or_eax@@ _5, mov_byte_ptr_[rbx+0x@@ 48@@ ]_al, mov_rax_qword_ptr_[rip+0x@@ 13@@ 34@@ 21], mov_ecx@@ _0xfffffffe, mov_qword_ptr_[rax+r@@ 13@@ ]_rcx, jmp_0xfffffffffffffc@@ ea, mov_edx_dword_ptr_[rbx+0x@@ 44], lea_rsi_[rip+0x2@@ 10@@ 56], mov_edi_3, xor_eax_eax, call_0xffffffffffffe@@ 1c@@ 7, jmp_0xfffffffffffffc@@ cc, mov_edx_eax, lea_rsi_[rip+0x2@@ 207@@ 7], mov_edi_7, xor_eax_eax, call_0xffffffffffffe@@ 1a8, mov_dword_ptr_[rip+0x23@@ 34@@ ad@@ ]_0, mov_esi_dword_ptr_[rip+0x@@ 13@@ 3@@ 3b@@ f], mov_rdi_qword_ptr_[rip+0x@@ 13@@ 3@@ 3c@@ 4], jmp_0xfffffffffffff9e@@ 3, mov_rax_qword_ptr_[rip+0x@@ 13@@ 3@@ 3b@@ 1], lea_rsi_[rip+0x2@@ 10@@ 2f], mov_edx_dword_ptr_[r@@ ax+r@@ 13], mov_edi_3, xor_eax_eax, call_0xffffffffffffe@@ 167, jmp_0xfffffffffffffe@@ 43, mov_rdi_rbx, call_0xa@@ 86@@ a, test_eax_eax, jns_0xfffffffffffffe@@ d7, jmp_0xfffffffffffffeef, lea_rsi_[rip+0x20@@ f@@ 35], mov_edi_7, xor_eax_eax, call_0xffffffffffffe@@ 13@@ a, jmp_0xfffffffffffff97@@ f, mov_rax_qword_ptr_[rip+0x@@ 13@@ 3@@ 36@@ 1], lea_rsi_[rip+0x20@@ fd@@ f], mov_edx_dword_ptr_[r@@ ax+r@@ 13], mov_edi_3, xor_eax_eax, call_0xffffffffffffe@@ 11@@ 7, jmp_0xfffffffffffffc@@ 0c, mov_dword_ptr_[rip+0x@@ 13@@ 32@@ 3b@@ ]_1, mov_eax_1, jmp_0xfffffffffffffd@@ 4a, mov_edx_eax, lea_rsi_[rip+0x2@@ 1fe@@ 0], mov_edi_3, xor_eax_eax, call_0xffffffffffffe0@@ e9, mov_rdi_r14, call_0xffffffffffffdc@@ 21, mov_rdi_qword_ptr_[rip+0x@@ 13@@ 3@@ 30@@ d], mov_edx_dword_ptr_[rip+0x@@ 13@@ 32@@ fb], jmp_0xfffffffffffffa@@ b1, call_0xffffffffffffc@@ 68@@ a, test_eax_eax, jne_0xfffffffffffffb@@ f7, mov_edi_3, lea_rsi_[rip+0x20@@ ed@@ 0], xor_eax_eax, call_0xffffffffffffe0@@ af, mov_rdi_qword_ptr_[rip+0x@@ 13@@ 3@@ 2d@@ b], mov_edx_dword_ptr_[rip+0x@@ 13@@ 3@@ 2c@@ 9], jmp_0xfffffffffffffa@@ 7f, call_0xffffffffffffc@@ ca@@ 8, mov_edx_dword_ptr_[rax], lea_rsi_[rip+0x20@@ e5@@ a], mov_edi_3, xor_eax_eax, call_0xffffffffffffe0@@ 83, jmp_0xfffffffffffff8a@@ c, or_eax_0xffffffff, jmp_0xfffffffffffffc@@ 88, call_0xffffffffffffcc@@ e1, call_0xffffffffffffcc@@ 7c, mov_edx_dword_ptr_[rax], jmp_0xfffffffffffff9e@@ 7
push_r12, lea_rdi_[rip+0x13@@ 3@@ 24@@ 7], xor_r12d_r12d, push_rbp, xor_ebp_ebp, push_rbx, xor_ebx_ebx, call_0xffffffffffffc@@ ec@@ e, mov_rax_qword_ptr_[rip+0x@@ 13@@ 3@@ 22@@ 2], lea_rcx_[rip+0x13@@ 32@@ 1b], cmp_rax_rcx, jne_0x25, jmp_0x3a, mov_esi_edx, and_esi@@ _2, cmp_sil@@ _1, sbb@@ _ebx@@ _-1, mov_rax_qword_ptr_[rax], and_edx_1, cmp_dl_1, sbb@@ _ebp@@ _-1, cmp_rax_rcx, je_0x19, movzx_edx_byte_ptr_[r@@ ax+0x1@@ e0], test_dl@@ _3, jne_0xffffffffffffffd9, mov_rax_qword_ptr_[rax], inc_r12d, cmp_rax_rcx, jne_0xffffffffffffffeb, lea_rdi_[rip+0x13@@ 3@@ 1e@@ 5], call_0xffffffffffffc@@ ed@@ 5, mov_r9d_ebp, mov_r8d_ebx, mov_ecx_r12d, xor_eax_eax, xor_edx_edx, lea_rsi_[rip+0x2@@ 1f@@ 6c], mov_edi_7, call_0xffffffffffffd@@ fd@@ 7, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret
push_r15, push_r14, push_r13, mov_r13_rcx, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rsi, sub_rsp_0x28, mov_r8d_dword_ptr_[r@@ dx+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_dword_ptr_[rsi+0x@@ 5c]@@ _r8d, cmp_byte_ptr_[r@@ si+0x@@ 5@@ 1@@ ]_3, mov_qword_ptr_[rsp+0x10]_0, movzx_eax_byte_ptr_[r@@ dx+0x@@ 2a], je_0x3@@ 75, inc_eax, cmp_al_4, ja_0x5@@ 4e, lea_rdx_[rip+0x2@@ 15@@ ce], movzx_eax_al, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, lea_r15_[r@@ bx+0x10], lea_r14_[r@@ 12+0x10], mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x2@@ 1f@@ 34], mov_edi_7, xor_eax_eax, call_0xffffffffffffdf@@ 35, cmp_byte_ptr_[rbx+0x@@ 52@@ ]_2, je_0x3@@ 0c, cmp_byte_ptr_[rbx+0x@@ 5@@ 1@@ ]_3, je_0x3@@ 42, mov_r9d_dword_ptr_[r@@ bp+0x14], movzx_eax_byte_ptr_[r@@ 12+0x1@@ 54], movsx_edx_byte_ptr_[r@@ bp+0x@@ 2a], and_r9d@@ _0x10000, cmp_al_2, je_0x4@@ c2, cmp_al_3, jne_0x@@ 64@@ a, mov_r8_r13, lea_rcx_[rsp+0x10], mov_rsi_rbx, mov_rdi_r12, call_0x96@@ 86, mov_r13d_eax, mov_dword_ptr_[rbp+0x@@ 38]@@ _r13d, test_byte_ptr_[rbx+0x@@ 60@@ ]_8, jne_0x1@@ 8e, mov_r8d_r13d, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x20@@ da@@ d], mov_edi_7, xor_eax_eax, call_0xffffffffffffd@@ eb@@ 9, test_r13d_r13d, js_0x1@@ 33, mov_r11d@@ _dword_ptr_[rip+0x2@@ 34@@ 34@@ c], test_r11d_r11d, je_0x11, test_byte_ptr_[r12+0x1@@ e@@ 0]_0x20, jne_0x3@@ 2e, movzx_eax_byte_ptr_[rbx+0x@@ 60], movzx_edx_word_ptr_[r@@ sp+0x10], test_al_8, je_0x2@@ 1d, mov_r8d_dword_ptr_[r@@ sp+0x14], test_dx_dx, je_0x1@@ 67, mov_ecx_edx, xor@@ _cl@@ _cl, cmp_cx@@ _0x100, jbe_0x@@ 158, sub_rsp_8, push_r8, mov_rcx_r15, movzx_r8d@@ _dx, movzx_r9d_word_ptr_[r@@ sp+0x@@ 22], mov_rdx_r14, lea_rsi_[rip+0x2@@ 1e@@ 95], mov_edi_3, xor_eax_eax, call_0xffffffffffffde@@ 3e, pop_r9, pop_r10, mov_r13d@@ _0xffffffea, xor_r10d_r10d, cmp_word_ptr_[r@@ sp+0x1@@ 0]_0, je_0x16, mov_ecx_dword_ptr_[rsp+0x14], test_ecx_ecx, jne_0x4@@ 6e, movzx_eax_byte_ptr_[rbx+0x@@ 51], cmp_al_2, je_0x3@@ fa, cmp_al_1, jne_0x22, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x22@@ 12@@ 3], mov_edi_7, xor_eax_eax, call_0xffffffffffffdd@@ ec, movzx_eax_byte_ptr_[rbp+0x@@ 2a], mov_byte_ptr_[rbx+0x@@ 5@@ 2]_al, cmp_al_2, je_0x1@@ c4, call_0xffffffffffffe6@@ 11, test_rax_rax, je_0x5@@ b5, mov_edx_dword_ptr_[rbp+0x10], mov_dword_ptr_[rax+0x1@@ c]_edx, movzx_edx_byte_ptr_[r@@ bp+0x@@ 2a], mov_byte_ptr_[rax+0x1@@ 0]_dl, mov_edx_dword_ptr_[rbp+0x@@ 14], test_dl_1, je_0xd, or_dword_ptr_[r@@ ax+0x1@@ 8]_1, mov_dword_ptr_[rax+0x1@@ c]_0, cmp_byte_ptr_[rbx+0x@@ 5@@ 1@@ ]_3, jne_0xb, or_edx@@ _0x40000, mov_dword_ptr_[rbp+0x@@ 14@@ ]_edx, mov_rdx_qword_ptr_[rbx+0x@@ 70], mov_qword_ptr_[rbx+0x@@ 70]_rax, add_rbx@@ _0x68, mov_qword_ptr_[rax]_rbx, mov_qword_ptr_[rax+8]_rdx, mov_qword_ptr_[rdx]_rax, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ 56@@ 7, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, pop_r14, pop_r15, ret, mov_eax_dword_ptr_[rsp+0x14], mov_rdx_r14, push_rax, mov_r8d_r13d, mov_rcx_r15, movzx_eax_word_ptr_[r@@ sp+0x1@@ a], lea_rsi_[rip+0x2@@ 1d@@ 4e], push_rax, mov_edi_7, xor_eax_eax, movzx_r9d_word_ptr_[r@@ sp+0x@@ 20], call_0xffffffffffffdd@@ 20, pop_rax, pop_rdx, jmp_0xfffffffffffffe@@ 65, mov_r10d_dword_ptr_[r@@ bx+0x@@ 58], test_r8d_r8d, je_0x1@@ b1, cmp_r10d@@ _r8d, je_0x4@@ 10, test_r10d_r10d, je_0x4@@ 17, cmp_r10d@@ _r8d, jb_0x3@@ ce, test_al_4, je_0x36, mov_r9d@@ _r10d, xor_eax_eax, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x2@@ 1e@@ 12], mov_edi_7, call_0xffffffffffffd@@ cc@@ d, mov_eax_dword_ptr_[rsp+0x14], xor_r10d_r10d, and_byte_ptr_[r@@ bx+0x@@ 60]@@ _0xfb, mov_dword_ptr_[rbx+0x@@ 58]_eax, jmp_0xfffffffffffffe@@ 8d, cmp_r10d@@ _r8d, ja_0x4@@ 6a, sub_rsp_8, push_r8, shr_al@@ _2, mov_r8d_eax, movzx_ecx_word_ptr_[r@@ sp+0x@@ 22], mov_r9d@@ _r10d, push_rcx, and_r8d_1, mov_rcx_r15, push_rdx, lea_rsi_[rip+0x2@@ 1f0@@ 3], mov_rdx_r14, mov_edi_7, xor_eax_eax, call_0xffffffffffffdc@@ 79, movzx_edx_word_ptr_[rsp+0x@@ 30], add_rsp_0x20, test_dx_dx, je_0xfffffffffffffe@@ 85, mov_edx_dword_ptr_[rsp+0x14], test_edx_edx, je_0xfffffffffffffe@@ 79, test_byte_ptr_[rsp+0x1@@ 2]_1, je_0xfffffffffffffe@@ 6e, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x2@@ 1f0@@ b], mov_edi_7, xor_eax_eax, call_0xffffffffffffdc@@ 34, mov_r13d@@ _0xffffff@@ 25, jmp_0xfffffffffffffe@@ 49, cmp_byte_ptr_[rbp+0x@@ 2a@@ ]_2, jne_0xfffffffffffffc@@ f6, xor_r13d_r13d, inc@@ _dword_ptr_[rbx+0x@@ 54], jmp_0xfffffffffffffe@@ 3f, inc_eax, lea_rcx_[r@@ dx+0x@@ c9], cmp_al_4, ja_0x2@@ 3c, lea_rdx_[rip+0x2@@ 12@@ 6c], movzx_eax_al, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, cmp_byte_ptr_[rbp+0x@@ 18@@ c]_0, je_0xfffffffffffffc@@ bd, movdqu_xmm0_xmmword_ptr_[r@@ bp+0x@@ 18@@ c], movups_xmmword_ptr_[rbx+0x@@ 88@@ ]_xmm0, movdqu_xmm1_xmmword_ptr_[r@@ bp+0x@@ 19@@ c], movups_xmmword_ptr_[rbx+0x@@ 98@@ ]_xmm1, movdqu_xmm2_xmmword_ptr_[r@@ bp+0x@@ 1a@@ c], movups_xmmword_ptr_[rbx+0x@@ a8@@ ]_xmm2, movdqu_xmm3_xmmword_ptr_[r@@ bp+0x@@ 1b@@ c], movups_xmmword_ptr_[rbx+0x@@ b8@@ ]_xmm3, jmp_0xfffffffffffffc@@ 7b, or_dword_ptr_[rbp+0x@@ 14]@@ _0x2000, jmp_0xfffffffffffffc@@ d1, and_eax_4, test_r10d_r10d, jne_0x1@@ 6a, test_al_al, jne_0x1@@ 66, xor_eax_eax, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x2@@ 1c@@ e5], mov_edi_7, mov_dword_ptr_[rsp+0xc]@@ _r10d, call_0xffffffffffffdb@@ 2b, movzx_eax_byte_ptr_[rbx+0x@@ 60], mov_r10d_dword_ptr_[rsp+0xc], mov_r12d_eax, and_r12d@@ _4, or_eax_4, cmp_word_ptr_[r@@ sp+0x1@@ 0]_0, mov_byte_ptr_[rbx+0x@@ 60@@ ]_al, je_0x3a, mov_eax_dword_ptr_[rsp+0x14], test_eax_eax, je_0x32, test_byte_ptr_[rsp+0x1@@ 2]_1, je_0x2b, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x2@@ 1d@@ bc], mov_edi_7, xor_eax_eax, mov_dword_ptr_[rsp+0xc]@@ _r10d, call_0xffffffffffffda@@ e0, mov_r10d_dword_ptr_[rsp+0xc], mov_r13d@@ _0xffffff@@ 25, test_r12b_r12b, je_0xfffffffffffffc@@ bd, jmp_0xfffffffffffffc@@ e7, sub_rsp_8, push_rcx, lea_r15_[r@@ bx+0x10], lea_r14_[r@@ 12+0x10], mov_rcx_r15, lea_rsi_[rip+0x2@@ 1a@@ 68], mov_rdx_r14, mov_edi_7, xor_eax_eax, call_0xffffffffffffda@@ 8e, pop_rcx, pop_rsi, jmp_0xfffffffffffffb@@ 57, lea_rcx_[rsp+0x10], mov_r8d@@ _r9d, mov_rsi_rbx, mov_rdi_r12, call_0xaa@@ 62, mov_r13d_eax, jmp_0xfffffffffffffb@@ 4c, lea_r9_[rip+0x@@ 24@@ d@@ 25], jmp_0xfffffffffffffa@@ cc, xor_eax_eax, mov_r8d_r10d, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x2@@ 1c@@ f6], mov_edi_7, call_0xffffffffffffd@@ 9f@@ 9, movzx_eax_byte_ptr_[rbx+0x@@ 51], jmp_0xfffffffffffffb@@ ec, test_al_al, je_0x76, mov_rdx_r14, mov_rcx_r15, lea_rsi_[rip+0x2@@ 1a@@ df], mov_edi_7, xor_eax_eax, call_0xffffffffffffd@@ 9d0, movzx_edx_word_ptr_[r@@ sp+0x10], jmp_0xfffffffffffffd@@ 5e, lea_r9_[rip+0x@@ 24@@ cc@@ 1], jmp_0xffffffffffffff0a, test_byte_ptr_[rsp+0x1@@ 2]_1, je_0xfffffffffffffb@@ 9b, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x2@@ 1c@@ 68], mov_edi_7, xor_eax_eax, mov_dword_ptr_[rsp+0xc]@@ _r10d, mov_r13d@@ _0xffffff@@ 25, call_0xffffffffffffd@@ 98@@ 6, mov_r10d_dword_ptr_[rsp+0xc], jmp_0xfffffffffffffb@@ 6c, xor_eax_eax, cmp_byte_ptr_[r@@ 12+0x1@@ 54@@ ]_2, je_0xeb, push_rax, movzx_r9d@@ _dx, mov_r8d_r10d, movzx_eax_word_ptr_[r@@ sp+0x1@@ a], lea_rsi_[rip+0x2@@ 1b@@ 53], push_rax, mov_edi_7, mov_rcx_r15, mov_rdx_r14, xor_eax_eax, call_0xffffffffffffd@@ 93d, or_byte_ptr_[rbx+0x@@ 60@@ ]_4, xor_r10d_r10d, pop_rsi, pop_rdi, jmp_0xfffffffffffffb@@ 03, mov_r9d@@ _r10d, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x2@@ 19@@ a8], mov_edi_7, xor_eax_eax, call_0xffffffffffffd@@ 90@@ 9, mov_r10d_dword_ptr_[r@@ sp+0x14], and_byte_ptr_[r@@ bx+0x@@ 60]@@ _0xfb, mov_dword_ptr_[rbx+0x@@ 5@@ 8]_r10d, jmp_0xfffffffffffffa@@ cb, test_dx_dx, je_0xfffffffffffffb@@ 0d, jmp_0xfffffffffffffc@@ 94, test_al_4, je_0x39, xor_eax_eax, xor_r9d_r9d, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x2@@ 19@@ 92], mov_edi_7, call_0xffffffffffffd@@ 8c@@ 5, mov_r10d_dword_ptr_[r@@ sp+0x14], mov_eax_r10d, jmp_0xfffffffffffffb@@ f8, mov_r13d_0xffffffff, jmp_0xfffffffffffff9d@@ 0, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x2@@ 1a@@ 20], mov_edi_7, xor_eax_eax, call_0xffffffffffffd8@@ 91, mov_r10d_dword_ptr_[r@@ sp+0x14], and_byte_ptr_[r@@ bx+0x@@ 60]@@ _0xfb, mov_dword_ptr_[rbx+0x@@ 5@@ 8]_r10d, jmp_0xfffffffffffffa@@ 53, mov_r8d_dword_ptr_[rsp+0x10], test_r8d_r8d, jne_0xffffffffffffff@@ 13, mov_rdx_r14, mov_rcx_r15, lea_rsi_[rip+0x2@@ 1a@@ 37], mov_edi_7, call_0xffffffffffffd@@ 85@@ a, mov_eax_dword_ptr_[rsp+0x14], movzx_edx_word_ptr_[r@@ sp+0x10], mov_r10d_dword_ptr_[r@@ bx+0x@@ 58], jmp_0xfffffffffffffee9, mov_r9d@@ _r10d, xor_eax_eax, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x2@@ 1a@@ 71], mov_edi_7, call_0xffffffffffffd8@@ 2c, mov_eax_dword_ptr_[rsp+0x14], and_byte_ptr_[r@@ bx+0x@@ 60]@@ _0xfb, mov_dword_ptr_[rbx+0x@@ 58]_eax, xor_r10d_r10d, jmp_0xfffffffffffff9e@@ d, mov_r13d@@ _0xfffffff4, jmp_0xfffffffffffffa@@ 90, call_0xffffffffffffc@@ 47@@ 9
endbr64, push_r15, mov_r15_rdi, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0xf8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xe8]_rax, xor_eax_eax, lea_rax_[rsp+0x90], mov_qword_ptr_[rsp+0x38]_rax, mov_qword_ptr_[rsp+0x90]_rax, mov_qword_ptr_[rsp+0x98]_rax, lea_rax_[r@@ di+0x1@@ b8], mov_rdi_rax, mov_qword_ptr_[rsp+0x40]_rax, call_0xffffffffffffc6@@ 29, mov_r12_qword_ptr_[r@@ 15+0x1@@ e8], lea_rax_[r@@ 15+0x1@@ e8], mov_qword_ptr_[rsp+0x60]_rax, cmp_rax_r12, je_0xe, cmp_byte_ptr_[r@@ 12+0x@@ 28@@ ]_5, je_0x5@@ 96, xor_ebx_ebx, xor_ebp_ebp, xor_r12d_r12d, mov_rdi_qword_ptr_[rsp+0x40], call_0xffffffffffffc@@ 65@@ 4, movzx_eax_byte_ptr_[r@@ 15+0x1@@ 54], lea_rcx_[rip+0x@@ 24@@ 1b@@ 5], cmp_al_2, je_0x21, lea_rcx_[rip+0x20@@ 3c@@ 7], cmp_al_3, je_0x16, test_al_al, lea_rcx_[rip+0x20@@ 3c@@ 2], lea_rax_[rip+0x20@@ 3a@@ e], cmove_rcx_rax, lea_rax_[r@@ 15+0x10], mov_qword_ptr_[rsp+0x10]_rax, mov_rdx_rax, mov_r9d_ebp, xor_eax_eax, mov_r8d_ebx, lea_rsi_[rip+0x2@@ 1a@@ 82], mov_edi_7, call_0xffffffffffffd7@@ 1d, movzx_eax_byte_ptr_[r@@ 15+0x1@@ 54], cmp_al_2, je_0x5@@ 7e, cmp_al_3, jne_0x1@@ f@@ 22, mov_rdi_r15, call_0x8@@ 2e@@ d, test_r12_r12, je_0x2@@ 0a, mov_dword_ptr_[r12+0x@@ 38]_eax, test_ebx_ebx, je_0x1@@ e8, test_eax_eax, jne_0x1@@ e0, movzx_eax_byte_ptr_[r@@ 15+0x1@@ 54], cmp_al_2, je_0x1@@ e@@ 7e, cmp_al_3, jne_0x1@@ fa@@ 3, mov_esi_ebp, mov_rdi_r15, call_0x8b@@ 5d, mov_ebx_eax, test_r12_r12, je_0x1@@ c@@ 69, mov_dword_ptr_[r12+0x@@ 38]@@ _ebx, mov_rdx_qword_ptr_[rsp+0x10], xor_eax_eax, mov_ecx_ebx, lea_rsi_[rip+0x20@@ 59@@ e], mov_edi_7, call_0xffffffffffffd6@@ 93, test_byte_ptr_[r@@ 15+0x1@@ e@@ 0]_0x20, jne_0x6@@ 3e, mov_dword_ptr_[r12+0x@@ 34]@@ _ebx, mov_rdi_r12, call_0xffffffffffffe@@ 238, mov_rdi_qword_ptr_[rsp+0x40], call_0xffffffffffffc@@ 4e@@ e, test_ebx_ebx, jne_0x1@@ 8e, or_byte_ptr_[r@@ 15+0x1@@ e0@@ ]_2, mov_rdi_qword_ptr_[rsp+0x40], mov_r14_r15, call_0xffffffffffffc5@@ 31, lea_rax_[r@@ 15+0x1@@ f8], mov_qword_ptr_[rsp+0x30]_rax, lea_rax_[rsp+0x80], mov_dword_ptr_[rsp+0x@@ 68]_0, mov_dword_ptr_[rsp+0x@@ 5c]_0, mov_qword_ptr_[rsp+0x50]_rax, mov_rdi_qword_ptr_[rsp+0x40], lea_rbx_[r@@ 14+0x1@@ 88], call_0xffffffffffffc4@@ 97, movzx_eax_byte_ptr_[r@@ 14+0x1@@ e0], mov_rbp@@ _qword_ptr_[rsp+0x40], test_al_4, je_0x26, jmp_0x7@@ 81, mov_rsi_rbp, mov_rdi_rbx, call_0xffffffffffffc@@ 2c@@ 2, movzx_eax_byte_ptr_[r@@ 14+0x1@@ e0], test_al_4, jne_0x7@@ 63, test_al_8, je_0xffffffffffffffe3, mov_rdi_qword_ptr_[rsp+0x40], mov_r15_r14, call_0xffffffffffffc@@ 4b@@ 1, mov_rbx_qword_ptr_[rsp+0x10], lea_rsi_[rip+0x20@@ 4e@@ 4], mov_rdx_rbx, mov_edi_7, xor_eax_eax, call_0xffffffffffffd@@ 5b@@ 6, xor_eax_eax, mov_rdx_rbx, lea_rsi_[rip+0x20@@ 4d@@ 7], mov_edi_7, call_0xffffffffffffd@@ 5a0, mov_rbp_qword_ptr_[r@@ 14+0x1@@ f8], mov_rax_qword_ptr_[rbp], mov_qword_ptr_[rsp+0x20]_rax, cmp_rbp@@ _qword_ptr_[rsp+0x30], je_0x1@@ 7@@ 23, mov_qword_ptr_[rsp+0x1@@ 8]_r15, mov_r14_qword_ptr_[rsp+0x10], mov_r15_qword_ptr_[r@@ bp+0x@@ 68], lea_rax_[rbp+0x@@ 68], mov_qword_ptr_[rsp+8]_rax, mov_rbx_qword_ptr_[r@@ 15], lea_r13_[r@@ bp+0x10], cmp_r15_rax, je_0x1@@ 80@@ 9, movzx_eax_byte_ptr_[rsp+0x@@ 68], mov_qword_ptr_[rsp+0x2@@ 8]_rbp, xor_eax_1, mov_rbp_r15, xor_r12d_r12d, mov_r15d_eax, test_byte_ptr_[rbp+0x@@ 18]_1, je_0xb, test_r15b_r15b, jne_0x5@@ 2f, movzx_eax_byte_ptr_[r@@ bp+0x10], mov_r9d_dword_ptr_[r@@ bp+0x@@ 1c], inc_eax, cmp_al_4, ja_0x5@@ 3b, lea_rcx_[rip+0x20@@ b@@ a0], movzx_eax_al, movsxd_rax_dword_ptr_[r@@ cx+rax*4], add_rax_rcx, jmp_rax, mov_dword_ptr_[r12+0x@@ 34]_eax, mov_rdi_r12, mov_dword_ptr_[rsp+8]_eax, call_0xffffffffffffe0@@ b4, mov_eax_dword_ptr_[rsp+8], test_eax_eax, je_0x1@@ e@@ 3b, mov_rdi_qword_ptr_[rsp+0x40], call_0xffffffffffffc@@ 35@@ e, or_byte_ptr_[r@@ 15+0x1@@ e0@@ ]_9, mov_rdi_qword_ptr_[rsp+0x40], xor_ebp_ebp, xor_ebx_ebx, call_0xffffffffffffc@@ 3a8, lea_rax_[rsp+0x80], mov_dword_ptr_[rsp+0x@@ 5c]_0, mov_qword_ptr_[rsp+0x50]_rax, mov_r14@@ _qword_ptr_[rsp+0x50], mov_rdi_qword_ptr_[rsp+0x40], mov_qword_ptr_[rsp+0x8@@ 0]_r14, mov_qword_ptr_[rsp+0x8@@ 8]_r14, call_0xffffffffffffc@@ 3@@ 14, mov_rax_qword_ptr_[r15+0x1@@ e8], mov_r10@@ _qword_ptr_[rsp+0x60], mov_rdx_qword_ptr_[rax], mov_rcx_rax, cmp_r10@@ _rax, je_0x1@@ 9c@@ a, mov_rdi_rdx, xor_r12d_r12d, mov_r9d@@ _0xffffff@@ 2e, xor_r8d_r8d, mov_r11@@ _r14, jmp_0x5@@ 2, cmp_sil@@ _6, je_0x6c, cmp_sil@@ _0x15, je_0x66, cmp_sil@@ _0x10, mov_esi_r8d, cmovne@@ _esi@@ _r9d, mov_dword_ptr_[rax+0x@@ 34]@@ _esi, mov_rsi_qword_ptr_[rax+8], mov_qword_ptr_[rdx+@@ 8]_rsi, mov_qword_ptr_[rsi@@ ]_rdx, mov_rsi_qword_ptr_[rsp+0x88], mov_qword_ptr_[rsp+0x8@@ 8]_rcx, mov_qword_ptr_[rax]@@ _r11, mov_qword_ptr_[rax+@@ 8]_rsi, mov_qword_ptr_[rsi@@ ]_rcx, mov_rax_rdi, mov_rcx_rdi, mov_rdx_qword_ptr_[rdx], cmp_r10@@ _rdi, je_0x35, mov_rdi_rdx, movzx_esi_byte_ptr_[r@@ ax+0x28], cmp_sil@@ _4, jne_0xffffffffffffffa@@ 8, mov_dword_ptr_[rax+0x@@ 34]_0, mov_r12_rax, jmp_0xffffffffffffffb6, mov_dword_ptr_[rax+0x@@ 34]_0, jmp_0xffffffffffffffa3, mov_rdi_qword_ptr_[rsp+0x40], call_0xffffffffffffc@@ 2b@@ b, mov_eax_dword_ptr_[rsp+0x@@ 5c], test_eax_eax, je_0x18, test_byte_ptr_[r@@ 15+0x1@@ e@@ 0]_0x20, je_0xe, test_r12_r12, jne_0x2@@ 41, lea_rdi_[rip+0x13@@ 2@@ 56@@ 1], call_0xffffffffffffc@@ 23@@ 1, mov_rcx_qword_ptr_[rsp+0x@@ 80], mov_r9@@ _qword_ptr_[rsp+0x50], mov_rax_qword_ptr_[rcx], mov_rdx_rcx, mov_rdi_rax, lea_r8_[rip+0x13@@ 24@@ cf], cmp_rcx@@ _qword_ptr_[rsp+0x50], jne_0xd, jmp_0x3c, mov_rdi_rax, mov_rsi_qword_ptr_[r@@ cx+8], mov_qword_ptr_[rax+@@ 8]_rsi, mov_qword_ptr_[rsi]_rax, mov_rsi_qword_ptr_[rip+0x@@ 13@@ 24@@ b3], mov_qword_ptr_[rip+0x@@ 13@@ 24@@ a@@ c]@@ _rdx, mov_qword_ptr_[rcx@@ ]_r8, mov_qword_ptr_[rcx@@ +@@ 8]_rsi, mov_qword_ptr_[rsi@@ ]_rdx, mov_rcx_rdi, mov_rdx_rdi, mov_rax_qword_ptr_[rax], cmp_rdi@@ _r9, jne_0xffffffffffffffce, lea_rdi_[rip+0x13@@ 24@@ b5], call_0xffffffffffffb@@ 9b@@ 5, lea_rdi_[rip+0x13@@ 24@@ e9], call_0xffffffffffffc@@ 2@@ 19, movzx_ebx@@ _bl, lea_rdi_[rip+0x13@@ 25@@ 1a], call_0xffffffffffffc@@ 1a@@ a, shl_ebx@@ _7, movzx_eax_word_ptr_[r@@ 15+0x1@@ e0], movzx_ebp@@ _bpl, or_ebx@@ _0x10, shl@@ _ebp@@ _9, or_ebp@@ _ebx, and_ax@@ _0x@@ fd@@ 6f, or@@ _ebp_eax, cmp_byte_ptr_[r@@ 15+0x1@@ 54@@ ]_2, mov_word_ptr_[r@@ 15+0x1@@ e0@@ ]_bp, je_0x1@@ 38, lea_rax_[rsp+0xa0], xor_esi_esi, xor_edx_edx, mov_ecx_edx, add_edx@@ _0x20, mov_qword_ptr_[rax@@ +rcx@@ ]_rsi, mov_qword_ptr_[rax@@ +rcx@@ +@@ 8]_rsi, mov_qword_ptr_[rax@@ +rcx+0x1@@ 0]_rsi, mov_qword_ptr_[rax@@ +rcx+0x1@@ 8]_rsi, cmp_edx@@ _0x40, jb_0xffffffffffffff@@ e5, add_rax_rdx, mov_rbx_qword_ptr_[rsp+0x10], mov_dword_ptr_[rax]_0, mov_byte_ptr_[rax+@@ 4]_0, mov_edx_0x4@@ 1, mov_rsi_rbx, lea_rdi_[rsp+0x@@ a4], mov_dword_ptr_[rsp+0xa@@ 0]@@ _0x3@@ a@@ 4d@@ 4@@ 55@@ 2, call_0xffffffffffffc@@ 00@@ c, movdqa_xmm0_xmmword_ptr_[rsp+0x@@ a0], movzx_eax_byte_ptr_[rsp+0x@@ e0], movups_xmmword_ptr_[r@@ 15+0x1@@ 0]_xmm0, movdqa_xmm1_xmmword_ptr_[r@@ sp+0x@@ b0], movdqa_xmm2_xmmword_ptr_[r@@ sp+0x@@ c0], movdqa_xmm3_xmmword_ptr_[r@@ sp+0x@@ d0], mov_byte_ptr_[rbx+0x@@ 40@@ ]_al, movups_xmmword_ptr_[r@@ bx+0x1@@ 0@@ ]_xmm1, movups_xmmword_ptr_[rbx+0x@@ 20]_xmm2, movups_xmmword_ptr_[rbx+0x@@ 30]_xmm3, lea_rdi_[rip+0x13@@ 24@@ 40], call_0xffffffffffffc@@ 130, lea_rdi_[rip+0x13@@ 23@@ 34], call_0xffffffffffffc0@@ c4, lea_rdi_[rip+0x13@@ 22@@ e8], mov_dword_ptr_[rip+0x@@ 13@@ 22@@ be@@ ]_1, call_0xffffffffffffb8@@ 9e, lea_rdi_[rip+0x13@@ 23@@ 12], call_0xffffffffffffc@@ 102, mov_rax_qword_ptr_[rsp+0x@@ e8], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ b@@ 66, add_rsp_0xf8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret, mov_ebp_dword_ptr_[r@@ 12+0x14], mov_rdx_qword_ptr_[r12], mov_rax_qword_ptr_[r12+8], mov_ebx_ebp, shr_ebx@@ _4, shr@@ _ebp@@ _0x10, mov_qword_ptr_[rdx+8]_rax, and_ebx_1, mov_qword_ptr_[rax]_rdx, and_ebp@@ _1, jmp_0xfffffffffffffa@@ 54, mov_rdi_qword_ptr_[rsp+0x10], lea_rsi_[rip+0x2@@ 33@@ 60@@ 4], call_0xffffffffffffbe@@ 34, test_eax_eax, jne_0xfffffffffffffe@@ bb, mov_dword_ptr_[rip+0x23@@ 36@@ 4d@@ ]_0, jmp_0xfffffffffffffea@@ b, mov_rdi_r15, call_0x9d@@ 3d, jmp_0xfffffffffffffa@@ 90, lea_rdi_[rip+0x13@@ 2@@ 36@@ 9], call_0xffffffffffffb@@ ff@@ 9, mov_r13_qword_ptr_[rip+0x@@ 13@@ 2@@ 34@@ d], lea_r14_[rip+0x@@ 13@@ 2@@ 34@@ 6], cmp_r13@@ _r14, je_0x5c, mov_qword_ptr_[rsp+8]@@ _r12, cmp_byte_ptr_[r@@ 13+0x1@@ 54@@ ]_3, jne_0x14@@ 74, lea_r12_[r@@ 13+0x10], mov_rsi_qword_ptr_[rsp+0x10], mov_rdi_r12, call_0xffffffffffffb@@ dc@@ 2, test_eax_eax, je_0x1@@ 45@@ b, mov_rdx_r12, mov_r12_qword_ptr_[rsp+8], lea_rsi_[rip+0x20@@ 18@@ 4], mov_edi_7, xor_eax_eax, call_0xffffffffffffd@@ 11@@ f, or_dword_ptr_[r@@ 12+0x1@@ 4]@@ _0x20000, mov_dword_ptr_[rip+0x2@@ 33@@ 54@@ 7]_1, lea_rdi_[rip+0x13@@ 22@@ f0], call_0xffffffffffffb@@ fe0, jmp_0xfffffffffffffd@@ 43, mov_rcx_r13, mov_rdx_r14, lea_rsi_[rip+0x2@@ 14@@ 83], mov_edi_7, xor_eax_eax, call_0xffffffffffffd0@@ cc, mov_eax_dword_ptr_[rbp+0x@@ 14], mov_rdx_qword_ptr_[rbp], cmp_r12d_eax, cmovb@@ _r12d_eax, mov_rax_qword_ptr_[rbp+8], mov_rdi_rbp, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_rbp_rbx, call_0xffffffffffffc@@ cc@@ 8, mov_rax_qword_ptr_[rbx], cmp_rbx@@ _qword_ptr_[rsp+8], je_0xcb, mov_rbx_rax, jmp_0xfffffffffffffb@@ 5a, cmp_byte_ptr_[rip+0x2@@ 3@@ 34@@ 3@@ 1]_0, je_0xfffffffffffff@@ 9c@@ 1, mov_rdi_qword_ptr_[rsp+0x10], lea_rsi_[rip+0x23@@ 34@@ 1f], call_0xffffffffffffb@@ ca@@ f, test_eax_eax, je_0xfffffffffffff@@ 9a8, mov_dword_ptr_[rip+0x23@@ 34@@ c0@@ ]_1, test_r12_r12, je_0xfffffffffffff@@ 9a@@ 2, jmp_0xfffffffffffff98@@ f, mov_rcx_r13, mov_rdx_r14, lea_rsi_[rip+0x2@@ 13@@ 83], mov_edi_3, xor_eax_eax, call_0xffffffffffffc@@ fe@@ c, jmp_0xffffffffffffff20, lea_r8_[rip+0x@@ 24@@ 2e@@ 2], jmp_0xfffffffffffffefb, mov_rbp_qword_ptr_[rsp+0x28], cmp_byte_ptr_[rbp+0x@@ 5@@ 2]_0, jne_0x67, mov_rcx_r13, mov_rdx_r14, xor_eax_eax, lea_rsi_[rip+0x1@@ fe@@ fc], mov_edi_7, call_0xffffffffffffc@@ fb@@ 1, mov_rdi_qword_ptr_[rsp+0x18], mov_rsi_rbp, call_0xffffffffffffcc@@ f4, mov_rax_qword_ptr_[rbp+8], mov_rdx_qword_ptr_[rbp], mov_rdi_rbp, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, call_0xffffffffffffcb@@ 3d, mov_rbp_qword_ptr_[rsp+0x20], mov_rax_qword_ptr_[rbp], cmp_rbp@@ _qword_ptr_[rsp+0x30], je_0x1@@ 11@@ 2, mov_qword_ptr_[rsp+0x20]_rax, jmp_0xfffffffffffff9@@ ff, mov_eax_dword_ptr_[rbp+0x@@ 50], and_eax_0xffff@@ 00, cmp_eax@@ _0x3@@ 0@@ 100, je_0x12@@ 13, cmp_eax@@ _0x3@@ 0@@ 200, je_0x1@@ 168, xor_r12d_r12d, mov_rax_qword_ptr_[rsp+0x18], movzx_eax_byte_ptr_[rax+0x1@@ 54], cmp_al_2, je_0x1@@ 19@@ 1, cmp_al_3, jne_0x1@@ 7@@ 1c, mov_ecx_dword_ptr_[rsp+0x@@ 5c], mov_rdi_qword_ptr_[rsp+0x18], mov_edx_r12d, mov_rsi_rbp, call_0x9@@ 1e@@ 4, test_eax_eax, js_0x1@@ 18d, mov_r15_qword_ptr_[r@@ bp+0x@@ 78], lea_rax_[rbp+0x@@ 78], mov_rbx_qword_ptr_[r@@ 15], cmp_rax_r15, je_0xffffffffffffff@@ 34, mov_qword_ptr_[rsp+8]@@ _rbp, lea_r12_[rip+0x@@ 2@@ 13@@ 4f], mov_rbp_rbx, mov_rbx_rax, movsx_edi_byte_ptr_[r@@ 15+0x28], call_0xffffffffffffc@@ 4a@@ b, mov_r9d_dword_ptr_[r@@ 15+0x10], mov_r8_rax, mov_rcx_r13, mov_rdx_r14, mov_rsi_r12, mov_edi_3, xor_eax_eax, call_0xffffffffffffc@@ eb@@ f, mov_rdx_qword_ptr_[r15], mov_rax_qword_ptr_[r15+8], mov_dword_ptr_[r15+0x@@ 34]@@ _0xffffff@@ 83, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_rdi_r15, mov_r15_rbp, call_0xffffffffffffda@@ 5e, mov_rbp_qword_ptr_[rbp], cmp_r15@@ _rbx, jne_0xffffffffffffffb2, mov_rbp_qword_ptr_[rsp+8], jmp_0xfffffffffffffe@@ c6, mov_r12_qword_ptr_[r@@ 14+0x1@@ e8], mov_r15@@ _qword_ptr_[rsp+0x60], cmp_r15@@ _r12, je_0xc8, mov_r13_qword_ptr_[rsp+0x10], lea_rbx_[rip+0x@@ 1fa@@ e4], lea_rbp_[rip+0x@@ 24@@ 28@@ 3], movzx_eax_word_ptr_[r@@ 12+0x28], cmp_ax@@ _0x2@@ 14, je_0x12@@ 1e, movzx_edx_byte_ptr_[r@@ 14+0x1@@ e1], and_edx_1, je_0x4@@ 1d, mov_ecx_dword_ptr_[r@@ 12+0x28], and_ecx@@ _0xff@@ 00@@ ff, cmp_ecx@@ _7, je_0x4@@ 09, movsx_edi_byte_ptr_[r@@ 12+0x28], lea_ecx_[r@@ di-@@ 7], cmp_cl@@ _0x10, ja_0x3@@ f7, lea_rsi_[rip+0x20@@ 4a@@ e], movzx_ecx_cl, movsxd_rcx_dword_ptr_[r@@ si@@ +rcx*4], add_rcx_rsi, jmp_rcx, mov_r12_qword_ptr_[r@@ 14+0x1@@ e8], cmp_r15@@ _r12, jne_0xffffffffffffff@@ 57, and_byte_ptr_[r@@ 14+0x1@@ e@@ 0]@@ _0xfb, mov_rdi_qword_ptr_[rsp+0x40], call_0xffffffffffffbc@@ 7b, mov_r15_qword_ptr_[r@@ 14+0x1@@ f8], mov_rax_qword_ptr_[r15], mov_qword_ptr_[rsp+0x48]_rax, cmp_r15@@ _qword_ptr_[rsp+0x30], je_0x1@@ 54@@ d, mov_dword_ptr_[rsp+0x@@ 6c]_0, mov_rbp_qword_ptr_[r@@ 15+0x@@ 78], lea_rbx_[r@@ 15+0x@@ 78], mov_r12_qword_ptr_[r@@ bp], lea_rax_[r@@ 15+0x@@ 68], cmp_rbp_rbx, je_0xf@@ 5d, mov_qword_ptr_[rsp+8]@@ _r14, mov_r14_r15, mov_r15_r12, mov_r12_rax, jmp_0x1b, mov_rax_qword_ptr_[r15], mov_rbp_r15, cmp_r15@@ _rbx, je_0xa2, mov_r15_rax, cmp_byte_ptr_[rbp+0x@@ 28]_8, jne_0xffffffffffffffea, mov_r13_qword_ptr_[r@@ 14+0x@@ 68], mov_r8d_dword_ptr_[r@@ bp+0x10], cmp_r13@@ _r12, jne_0x1a, jmp_0x1@@ 5b@@ 3, mov_r13_qword_ptr_[r@@ 13], cmp_r13@@ _r12, je_0x1@@ 5a@@ 1, cmp_r8d@@ _dword_ptr_[r@@ 13+0x1@@ c], jne_0xffffffffffffffef, cmp_byte_ptr_[r@@ 14+0x@@ 52@@ ]_3, lea_rcx_[r@@ 14+0x10], jne_0x14@@ 80, mov_eax_dword_ptr_[r14+0x@@ 58], test_byte_ptr_[rbp+0x@@ 14@@ ]_8, je_0x4@@ d6, lea_r9d@@ _[rax+1], mov_dword_ptr_[r13+0x1@@ 4]@@ _r9d, mov_rdx_qword_ptr_[rsp+0x10], xor_eax_eax, lea_rsi_[rip+0x2@@ 12@@ ba], mov_edi_7, call_0xffffffffffffc@@ cc@@ 5, xor_eax_eax, mov_dword_ptr_[rbp+0x@@ 34]_eax, mov_rdx_qword_ptr_[rbp], mov_rax_qword_ptr_[rbp+8], mov_rdi_rbp, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_rbp_r15, call_0xffffffffffffd@@ 86@@ 6, mov_rax_qword_ptr_[r15], cmp_r15@@ _rbx, jne_0xffffffffffffff@@ 6a, mov_r15_r14, mov_r12_qword_ptr_[r@@ 15+0x@@ 78], mov_r14_qword_ptr_[rsp+8], mov_rbp_qword_ptr_[r@@ 12], cmp_r12_rbx, jne_0x2c, jmp_0x@@ e@@ 80, mov_eax_dword_ptr_[r12+0x@@ 28], and_eax@@ _0xff@@ 00@@ ff, cmp_eax_7, je_0x5b, mov_rax_qword_ptr_[rbp], mov_r12_rbp, cmp_rbp_rbx, je_0x93, mov_rbp_rax, cmp_byte_ptr_[r@@ 12+0x@@ 28@@ ]_7, jne_0xffffffffffffffd8, movzx_eax_byte_ptr_[r@@ 12+0x@@ 2a], inc_eax, test_al@@ _0xfd, jne_0xffffffffffffffcc, mov_rax_qword_ptr_[r12+8], mov_rdx_qword_ptr_[r12], mov_dword_ptr_[r12+0x@@ 34]@@ _0xffffffea, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_rdi_r12, call_0xffffffffffffd@@ 7e@@ 6, mov_eax_dword_ptr_[r12+0x@@ 28], and_eax@@ _0xff@@ 00@@ ff, cmp_eax_7, jne_0xffffffffffffffab, mov_rdx_r12, mov_rsi_r15, mov_rdi_r14, call_0xffffffffffffd@@ 90@@ 7, cmp_eax_-2, je_0x4@@ 4f, mov_dword_ptr_[r12+0x@@ 34]_eax, mov_rdx_qword_ptr_[r12], mov_rax_qword_ptr_[r12+8], mov_rdi_r12, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_r12_rbp, call_0xffffffffffffd7@@ 9e, mov_rax_qword_ptr_[rbp], cmp_rbp_rbx, jne_0xffffffffffffff@@ 79, mov_rbp@@ _qword_ptr_[rsp+0x90], cmp_rbp@@ _qword_ptr_[rsp+0x38], je_0x37, mov_r12@@ _qword_ptr_[rsp+0x38], mov_rdx_rbp, mov_rsi_r15, mov_rdi_r14, call_0xffffffffffffd@@ 8a@@ 7, mov_ecx_dword_ptr_[rbp+0x@@ 14], mov_edx_dword_ptr_[rbp+0x10], mov_rsi_r15, mov_rdi_r14, call_0xffffffffffffdc@@ 46, mov_rbp_qword_ptr_[rbp], cmp_rbp_r12, jne_0xffffffffffffffda, mov_rbp_qword_ptr_[r@@ 15+0x@@ 78], mov_r12_qword_ptr_[r@@ bp], mov_r13_rbp, mov_rax_r12, cmp_rbx_rbp, jne_0x19, jmp_0x3@@ f8, mov_rdx_qword_ptr_[rax], mov_r13_rax, cmp_rax_rbx, je_0x2@@ 9a, mov_rax_rdx, cmp_word_ptr_[r@@ 13+0x@@ 28]@@ _0x3@@ 04, jne_0xffffffffffffffe7, mov_rdx_qword_ptr_[rsp+0x10], lea_r12_[r@@ 15+0x10], xor_eax_eax, mov_rcx_r12, lea_rsi_[rip+0x1@@ fa@@ f2], mov_edi_7, call_0xffffffffffffcb@@ 3b, movzx_eax_byte_ptr_[r@@ 14+0x1@@ 54], cmp_al_3, je_0x@@ ee@@ 4, cmp_al_2, mov_edx@@ _0xffffffea, mov_eax_0, cmovne_eax_edx, mov_dword_ptr_[r13+0x@@ 34]_eax, mov_rdx_qword_ptr_[r13], mov_rax_qword_ptr_[r13+8], mov_rdi_r13, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, call_0xffffffffffffd@@ 6c@@ 1, mov_rbp_qword_ptr_[r@@ 15+0x@@ 78], mov_r13_qword_ptr_[r@@ bp], cmp_rbx_rbp, je_0x70, mov_qword_ptr_[rsp+8]@@ _r14, mov_r14_r13, mov_r13_rbx, mov_rbx_qword_ptr_[rsp+0x10], movsx_edi_byte_ptr_[r@@ bp+0x28], call_0xffffffffffffc0@@ a4, mov_r9d_dword_ptr_[r@@ bp+0x10], mov_r8_rax, mov_rcx_r12, mov_rdx_rbx, lea_rsi_[rip+0x2@@ 12@@ d3], mov_edi_3, xor_eax_eax, call_0xffffffffffffca@@ b4, mov_rdx_qword_ptr_[rbp], mov_rax_qword_ptr_[rbp+8], mov_dword_ptr_[rbp+0x@@ 34]@@ _0xffffff@@ 83, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_rdi_rbp, mov_rbp_r14, call_0xffffffffffffd@@ 65@@ 3, mov_r14_qword_ptr_[r@@ 14], cmp_rbp@@ _r13, jne_0xffffffffffffffb0, mov_r14_qword_ptr_[rsp+8], mov_rdx_qword_ptr_[rsp+0x10], xor_eax_eax, mov_rcx_r12, lea_rsi_[rip+0x1@@ fa@@ 7a], mov_edi_7, call_0xffffffffffffca@@ 6b, mov_rdi_r14, mov_rsi_r15, call_0xffffffffffffc@@ 7b@@ 0, mov_rdx_qword_ptr_[r15], mov_rax_qword_ptr_[r15+8], mov_rdi_r15, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, call_0xffffffffffffc@@ 5f@@ a, mov_r15@@ _qword_ptr_[rsp+0x48], mov_rax_qword_ptr_[r15], cmp_r15@@ _qword_ptr_[rsp+0x30], je_0x4@@ 68, mov_qword_ptr_[rsp+0x48]_rax, jmp_0xfffffffffffffc@@ bd, cmp_ax@@ _0x2@@ 15, je_0x12@@ 57, movzx_edx_byte_ptr_[r@@ 12+0x28], cmp_dl@@ _6, je_0xfffffffffffffc@@ 64, cmp_ax@@ _0x2@@ 04, je_0xd@@ 3b, cmp_ax@@ _0x2@@ 16, je_0x@@ ef@@ 9, cmp_ax@@ _0x2@@ 10, je_0xe@@ 2f, cmp_dl@@ _0x17, je_0x@@ ff@@ 6, cmp_ax@@ _0x2@@ 13, je_0x10@@ 57, mov_rax_qword_ptr_[r12+8], mov_rdx_qword_ptr_[r12], mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, movzx_eax_byte_ptr_[r@@ 12+0x28], cmp_al_9, je_0x@@ dd@@ 6, xor_edx_edx, cmp_al_4, sete_dl, mov_rsi_r12, mov_rdi_r14, call_0xffffffffffffd0@@ 5b, mov_rcx_rax, test_rax_rax, je_0x1@@ 10@@ 7, mov_rax_qword_ptr_[rax+0x@@ 80], lea_rdx_[r@@ cx+0x@@ 78], mov_qword_ptr_[rcx+0x@@ 8@@ 0]_r12, mov_qword_ptr_[r12+8]_rax, mov_qword_ptr_[r12@@ ]_rdx, mov_qword_ptr_[rax]_r12, movzx_eax_byte_ptr_[r@@ 12+0x@@ 2a], inc_eax, cmp_al_4, ja_0x1@@ 13@@ 1, lea_rsi_[rip+0x2@@ 00@@ 4d], movzx_eax_al, movsxd_rax_dword_ptr_[r@@ si@@ +rax*4], add_rax_rsi, jmp_rax, movsx_edi_byte_ptr_[r@@ 12+0x28], call_0xffffffffffffbf@@ 1a, mov_r8_rax, add_rcx_0x10, mov_rdx_r13, lea_rsi_[rip+0x1f@@ 8c@@ f], mov_edi_7, xor_eax_eax, call_0xffffffffffffc@@ 92@@ d, jmp_0xfffffffffffffb@@ 6f, mov_dword_ptr_[rbp+0x@@ 34]_eax, mov_rdx_qword_ptr_[rbp], mov_rax_qword_ptr_[rbp+8], mov_rdi_rbp, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, call_0xffffffffffffd@@ 4a@@ b, mov_rax_qword_ptr_[r12], mov_rbp_r12, cmp_r12_rbx, je_0x3@@ 66, mov_r12_rax, movzx_eax_byte_ptr_[r@@ bp+0x28], lea_edx_[rax-0x@@ a], cmp_dl_1, ja_0xffffffffffffff@@ e3, cmp_byte_ptr_[r@@ 14+0x1@@ 54@@ ]_3, jne_0x@@ ef@@ 6, cmp_byte_ptr_[r@@ 15+0x@@ 5@@ 1]_1, jne_0x@@ f0@@ a, cmp_byte_ptr_[r@@ 15+0x@@ 5@@ 2]_0, jne_0x10@@ a0, cmp_al_0xa, je_0xab, test_byte_ptr_[rbp+0x@@ 14]@@ _0x40, jne_0x@@ 9f@@ 1, xor_esi_esi, cmp_al_0xa, sete_sil, mov_rdi_r14, call_0x6@@ ed0, test_eax_eax, jne_0xffffffffffffff@@ 79, cmp_byte_ptr_[rbp+0x@@ 28]@@ _0xa, mov_rdx_qword_ptr_[rbp], mov_rax_qword_ptr_[rbp+8], jne_0xc, mov_dword_ptr_[rip+0x23@@ 2c@@ 9b@@ ]_0, mov_dword_ptr_[rbp+0x@@ 34]_0, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_rdi_rbp, call_0xffffffffffffd@@ 40@@ a, cmp_byte_ptr_[rbp+0x@@ 28]@@ _0xb, jne_0xffffffffffffff@@ 61, lea_r12_[r@@ 15+0x10], mov_rdx_qword_ptr_[rsp+0x10], mov_rcx_r12, lea_rsi_[rip+0x1@@ f7@@ ec], mov_edi_7, xor_eax_eax, call_0xffffffffffffc8@@ 21, jmp_0xfffffffffffffd@@ 20, mov_r9d_dword_ptr_[r@@ bp+0x18], cmp_r9d@@ _eax, jbe_0x@@ 8f@@ 9, mov_dword_ptr_[r13+0x1@@ 4]@@ _r9d, jmp_0xfffffffffffffb@@ 27, cmp_byte_ptr_[rip+0x2@@ 3@@ 2b@@ d@@ 9]_0, je_0xffffffffffffff@@ 5e, mov_rcx_qword_ptr_[rsp+0x10], lea_rdx_[rip+0x@@ 23@@ 2b@@ c7], lea_rsi_[rip+0x20@@ e80], mov_edi_3, xor_eax_eax, call_0xffffffffffffc@@ 7c@@ 9, mov_dword_ptr_[rbp+0x@@ 34]@@ _0xffffffea, jmp_0xfffffffffffffe@@ c0, mov_ecx_dword_ptr_[r@@ 12+0x14], test_cl@@ _4, je_0xfffffffffffffb@@ af, mov_edx_dword_ptr_[r@@ 12+0x10], mov_rsi_r15, mov_rdi_r14, call_0xffffffffffffd@@ 84@@ 7, jmp_0xfffffffffffffb@@ 99, mov_rbx_qword_ptr_[rsp+0x28], mov_r14_r15, mov_r15_r13, cmp_byte_ptr_[r@@ 15+0x@@ 52@@ ]_3, je_0xfffffffffffffd@@ 33, mov_r12_qword_ptr_[r@@ 15+0x@@ 78], mov_r13_qword_ptr_[r@@ 12], cmp_r12_rbx, je_0xfffffffffffffd@@ 22, lea_rbp_[r@@ 15+0x10], mov_qword_ptr_[rsp+0x1@@ 8]_rbp, mov_rbp@@ _qword_ptr_[rsp+0x50], jmp_0x16, mov_rax_qword_ptr_[r13], mov_r12_r13, cmp_r13_rbx, je_0xae, mov_r13_rax, mov_eax_dword_ptr_[r12+0x@@ 28], and_eax@@ _0xff@@ 00@@ ff, cmp_eax@@ _0x3@@ 000@@ 7, je_0x96, cmp_eax_0x2@@ 000@@ 7, jne_0xffffffffffffffd3, mov_rcx_rbp, mov_rdx_r12, mov_rsi_r15, mov_rdi_r14, mov_dword_ptr_[rsp+0x8@@ 0]_0, call_0xffffffffffffe@@ 74@@ a, cmp_eax@@ _-0x@@ b, jne_0x4@@ b2, mov_eax_dword_ptr_[r12+0x@@ 30], cmp_dword_ptr_[r12+0x@@ 2c]_eax, jg@@ _0x7@@ b2, mov_esi_dword_ptr_[rsp+0x@@ 80], test_esi_esi, jne_0xd, cmp_byte_ptr_[r@@ 15+0x@@ 5@@ 1@@ ]_3, je_0x7@@ 9c, mov_rcx_qword_ptr_[rsp+0x18], mov_rdx_qword_ptr_[rsp+0x10], xor_eax_eax, lea_rsi_[rip+0x20@@ e@@ bb], mov_edi_7, call_0xffffffffffffc@@ 6b@@ e, inc_dword_ptr_[r@@ 12+0x@@ 2c], mov_dword_ptr_[rsp+0x@@ 6c]_1, mov_rax_qword_ptr_[r13], mov_r12_r13, cmp_r13_rbx, jne_0xffffffffffffff@@ 62, cmp_byte_ptr_[r@@ 15+0x@@ 52@@ ]_2, je_0xfffffffffffffc@@ 4e, mov_rbp_qword_ptr_[r@@ 15+0x@@ 78], mov_rdx_qword_ptr_[rbp], cmp_rbx_rbp, jne_0x1c, jmp_0xfffffffffffffc@@ 3b, mov_rax_qword_ptr_[rdx], mov_rbp_rdx, cmp_rdx_rbx, je_0xfffffffffffffc@@ 2a, mov_rdx_rax, mov_eax_dword_ptr_[rbp+0x@@ 28], and_eax@@ _0xff@@ 00@@ ff, cmp_eax@@ _0x3@@ 000@@ 7, jne_0xffffffffffffffe1, mov_rcx_qword_ptr_[rsp+0x50], mov_rdx_rbp, mov_rsi_r15, mov_rdi_r14, mov_dword_ptr_[rsp+0x8@@ 0]_0, call_0xffffffffffffe@@ 67@@ e, mov_r12d_eax, cmp_eax@@ _-0x@@ b, jne_0x@@ 9b@@ b, mov_eax_dword_ptr_[rbp+0x@@ 30], cmp_dword_ptr_[rbp+0x@@ 2c]_eax, jg_0x@@ aa@@ f, mov_ecx_dword_ptr_[rsp+0x@@ 80], test_ecx_ecx, jne_0xd, cmp_byte_ptr_[r@@ 15+0x@@ 5@@ 1@@ ]_3, je_0xa@@ 99, mov_rdx_qword_ptr_[rsp+0x10], lea_rcx_[r@@ 15+0x10], xor_eax_eax, lea_rsi_[rip+0x20@@ df@@ 1], mov_edi_7, call_0xffffffffffffc@@ 5f@@ 4, mov_r15@@ _qword_ptr_[rsp+0x48], inc_dword_ptr_[r@@ bp+0x@@ 2c], mov_dword_ptr_[rsp+0x@@ 6c]_1, mov_rax_qword_ptr_[r15], cmp_r15@@ _qword_ptr_[rsp+0x30], jne_0xfffffffffffffb@@ a5, mov_rdi_qword_ptr_[rsp+0x90], mov_rbp@@ _qword_ptr_[rsp+0x38], mov_rbx_qword_ptr_[rdi], cmp_rdi_rbp, je_0x20, mov_rax_qword_ptr_[rdi+8], mov_qword_ptr_[rbx+8]_rax, mov_qword_ptr_[rax]_rbx, call_0xffffffffffffc0@@ 5d, mov_rdi_rbx, mov_rbx_qword_ptr_[rbx], cmp_rdi_rbp, jne_0xffffffffffffffe7, mov_edx_dword_ptr_[rsp+0x@@ 6c], test_edx_edx, je_0xffffffffffffe@@ f7@@ 4, or_byte_ptr_[r@@ 14+0x1@@ e0@@ ]_4, mov_edi@@ _0xf4240, call_0xffffffffffffa@@ fa@@ 4, jmp_0xffffffffffffef@@ 5c, mov_rdi_qword_ptr_[r15+0x@@ 78], mov_rbp_qword_ptr_[rdi], cmp_rdi_rbx, je_0xfffffffffffffd@@ e9, lea_r12_[r@@ 15+0x@@ 68], jmp_0x1b, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, cmp_rbp_rbx, je_0x66, mov_rbp_rax, test_byte_ptr_[rdi+0x1@@ 4]_1, jne_0xffffffffffffffed, mov_rax_qword_ptr_[r15+0x@@ 68], mov_edx_dword_ptr_[r@@ di+0x10], cmp_r12_rax, jne_0x11, jmp_0xffffffffffffffdf, mov_rax_qword_ptr_[rax], cmp_rax_r12, je_0xffffffffffffffd2, cmp_edx_dword_ptr_[r@@ ax+0x1c], jne_0xfffffffffffffff5, movzx_ecx_byte_ptr_[r@@ di+0x@@ 2a], cmp_byte_ptr_[rax+0x1@@ 0@@ ]_cl, jne_0xffffffffffffffc4, mov_dword_ptr_[r15+0x@@ 5@@ c]_edx, mov_rax_qword_ptr_[rdi+8], mov_rdx_qword_ptr_[rdi], mov_dword_ptr_[rdi+0x@@ 34]@@ _0xffffff@@ 8e, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, call_0xffffffffffffd0@@ b9, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, cmp_rbp_rbx, jne_0xffffffffffffffa6, mov_rdi_qword_ptr_[r15+0x@@ 78], mov_rbp_qword_ptr_[rdi], cmp_rdi_rbx, je_0xfffffffffffffd@@ 59, lea_r12_[r@@ 15+0x@@ 68], jmp_0x1b, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, cmp_rbp_rbx, je_0x5e, mov_rbp_rax, test_byte_ptr_[rdi+0x1@@ 4]_1, je_0xffffffffffffffed, mov_rax_qword_ptr_[r15+0x@@ 68], cmp_r12_rax, jne_0xc, jmp_0xffffffffffffffe2, mov_rax_qword_ptr_[rax], cmp_r12_rax, je_0xffffffffffffffda, test_byte_ptr_[rax+0x1@@ 8]_1, je_0xfffffffffffffff4, movzx_esi_byte_ptr_[r@@ di+0x@@ 2a], cmp_byte_ptr_[rax+0x1@@ 0@@ ]_sil, jne_0xffffffffffffffca, mov_eax_dword_ptr_[rdi+0x10], mov_rdx_qword_ptr_[rdi], mov_dword_ptr_[r15+0x@@ 5c]_eax, mov_rax_qword_ptr_[rdi+8], mov_dword_ptr_[rdi+0x@@ 34]@@ _0xffffff@@ 8e, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, call_0xffffffffffffd0@@ 2c, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, cmp_rbp_rbx, jne_0xffffffffffffffa9, mov_rbp_qword_ptr_[r@@ 15+0x@@ 78], mov_r12_qword_ptr_[r@@ bp], cmp_rbx_rbp, je_0xfffffffffffffc@@ d0, lea_r13_[r@@ 15+0x@@ 68], jmp_0x16, mov_rax_qword_ptr_[r12], mov_rbp_r12, cmp_r12_rbx, je_0x99, mov_r12_rax, test_byte_ptr_[rbp+0x@@ 14]_1, jne_0xffffffffffffffe9, mov_rax_qword_ptr_[r15+0x@@ 68], cmp_r13_rax, jne_0x10, jmp_0xffffffffffffffde, mov_rax_qword_ptr_[rax], cmp_rax_r13, je_0xffffffffffffffd2, test_byte_ptr_[rax+0x1@@ 8]_1, je_0xfffffffffffffff4, movzx_eax_byte_ptr_[r@@ ax+0x10], cmp_al_3, je_0x1@@ f4, cmp_al_2, jne_0xc, cmp_byte_ptr_[rbp+0x@@ 2a@@ ]_2, je_0x1@@ e6, xor_eax_eax, lea_rdx_[r@@ 15+0x10], lea_rsi_[rip+0x20@@ ac@@ 3], mov_edi_7, call_0xffffffffffffc@@ 3d@@ e, mov_eax_dword_ptr_[rbp+0x10], mov_dword_ptr_[r15+0x@@ 5c]_eax, or_dword_ptr_[rbp+0x@@ 14]@@ _0x100000, mov_dword_ptr_[rbp+0x@@ 34]@@ _0xffffff@@ ef, mov_rax_qword_ptr_[rbp+8], mov_rdx_qword_ptr_[rbp], mov_rdi_rbp, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_rbp_r12, call_0xffffffffffffcf@@ 6f, mov_rax_qword_ptr_[r12], cmp_r12_rbx, jne_0xffffffffffffff@@ 73, mov_rbp_qword_ptr_[r@@ 15+0x@@ 78], mov_r12_qword_ptr_[r@@ bp], cmp_rbp_rbx, je_0xfffffffffffffc@@ 15, lea_r13_[r@@ 15+0x@@ 68], jmp_0x17, mov_rax_qword_ptr_[r12], mov_rbp_r12, cmp_r12_rbx, je_0x80, mov_r12_rax, test_byte_ptr_[rbp+0x@@ 14]_1, je_0xffffffffffffffed, mov_rax_qword_ptr_[r15+0x@@ 68], mov_edx_dword_ptr_[rbp+0x10], cmp_r13_rax, jne_0x11, jmp_0xffffffffffffffdf, mov_rax_qword_ptr_[rax], cmp_rax_r13, je_0xffffffffffffffd2, cmp_edx_dword_ptr_[r@@ ax+0x1c], jne_0xfffffffffffffff5, movzx_ecx_byte_ptr_[r@@ bp+0x@@ 2a], cmp_byte_ptr_[rax+0x1@@ 0@@ ]_cl, je_0x1@@ 4c, xor_eax_eax, lea_rdx_[r@@ 15+0x10], lea_rsi_[rip+0x20@@ a4@@ 9], mov_edi_7, call_0xffffffffffffc@@ 32@@ c, mov_eax_dword_ptr_[rbp+0x10], mov_dword_ptr_[r15+0x@@ 5c]_eax, mov_dword_ptr_[rbp+0x@@ 34]@@ _0xffffff@@ ef, mov_rax_qword_ptr_[rbp+8], mov_rdx_qword_ptr_[rbp], mov_rdi_rbp, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_rbp_r12, call_0xffffffffffffc@@ ec@@ 4, mov_rax_qword_ptr_[r12], cmp_r12_rbx, jne_0xffffffffffffff@@ 84, mov_r13_qword_ptr_[r@@ 15+0x@@ 78], mov_rax_qword_ptr_[r13], mov_qword_ptr_[rsp+0x18]_rax, cmp_rbx_r13, je_0xfffffffffffff@@ 8a@@ 1, lea_rax_[r@@ 15+0x@@ 68], mov_rbp_r13, mov_r13_r15, mov_qword_ptr_[rsp+0x2@@ 8]_rbx, mov_r15_r14, mov_qword_ptr_[rsp+8]_rax, mov_r14_qword_ptr_[rsp+0x10], mov_rbx_qword_ptr_[r@@ 13+0x@@ 68], test_byte_ptr_[rbp+0x@@ 14]_1, je_0x2@@ 0a, cmp_qword_ptr_[rsp+@@ 8]_rbx, jne_0x19, jmp_0x1@@ d0, mov_rbx_qword_ptr_[rbx], cmp_qword_ptr_[rsp+@@ 8]_rbx, je_0x1@@ bf, test_byte_ptr_[rbx+0x1@@ 8]_1, je_0xffffffffffffffee, movzx_eax_byte_ptr_[rbp+0x@@ 2a], cmp_byte_ptr_[rbx+0x1@@ 0@@ ]_al, je_0x2@@ 01, mov_r8d_dword_ptr_[r@@ bp+0x10], inc_eax, mov_dword_ptr_[r13+0x@@ 5c]@@ _r8d, cmp_al_4, ja_0x3@@ 24, lea_rsi_[rip+0x1f@@ 96@@ 2], movzx_eax_al, movsxd_rax_dword_ptr_[r@@ si@@ +rax*4], add_rax_rsi, jmp_rax, mov_rcx_qword_ptr_[r12], mov_rdx_qword_ptr_[r12+8], mov_dword_ptr_[r12+0x@@ 34]_eax, mov_qword_ptr_[rcx@@ +8]_rdx, mov_qword_ptr_[rdx]_rcx, mov_rdi_r12, mov_dword_ptr_[rsp+8]_eax, call_0xffffffffffffcd@@ f4, mov_eax_dword_ptr_[rsp+8], cmp_eax@@ _-0x@@ 31, jne_0xfffffffffffffa@@ d8, lea_r12_[r@@ 15+0x10], jmp_0xfffffffffffff7@@ 22, mov_eax_dword_ptr_[rbp+0x10], mov_dword_ptr_[r15+0x@@ 5c]_eax, mov_dword_ptr_[rbp+0x@@ 34]_0, jmp_0xfffffffffffffe@@ 3e, mov_dword_ptr_[r15+0x@@ 5@@ c]_edx, or_dword_ptr_[r@@ ax+0x1@@ 8]_1, mov_dword_ptr_[rax+0x1@@ c]_0, mov_dword_ptr_[rbp+0x@@ 34]_0, jmp_0xfffffffffffffec9, lea_r12_[r@@ 13+0x10], mov_rdx_r14, mov_rcx_r12, lea_rsi_[rip+0x20@@ 90@@ f], mov_edi_7, xor_eax_eax, call_0xffffffffffffc@@ 1b8, movsx_edx_byte_ptr_[r@@ bp+0x@@ 2a], cmp_dl@@ _3, je_0x1@@ 84, mov_eax_dword_ptr_[r13+0x@@ 50], and_eax_0xffff@@ 00, cmp_eax@@ _0x3@@ 0@@ 100, je_0x2@@ 08, xor_r8d_r8d, cmp_eax@@ _0x3@@ 0@@ 200, je_0x1@@ 8a, movzx_eax_byte_ptr_[r@@ 15+0x1@@ 54], cmp_al_2, je_0x1@@ a2, cmp_al_3, jne_0x4@@ 62, mov_ecx_r8d, mov_rsi_r13, mov_rdi_r15, call_0x8@@ 133, mov_r8d_eax, mov_dword_ptr_[rbp+0x@@ 38]@@ _r8d, mov_rcx_r12, mov_rdx_r14, lea_rsi_[rip+0x1f@@ 138], mov_edi_7, xor_eax_eax, mov_dword_ptr_[rsp+0x20]@@ _r8d, call_0xffffffffffffc@@ 13@@ e, mov_r8d_dword_ptr_[rsp+0x@@ 20], test_r8d_r8d, js@@ _0x3d, movsx_r8d@@ _byte_ptr_[r@@ bx+0x10], movsx@@ _r9d@@ _byte_ptr_[r@@ bp+0x@@ 2a], cmp_r8b@@ _3, je_0x1@@ 61, cmp_r8b@@ _2, jne_0x1@@ 61, cmp_r9b@@ _3, jne_0x15@@ 7, mov_dword_ptr_[r13+0x@@ 54]_0, mov_byte_ptr_[r13+0x@@ 5@@ 2]@@ _r9b, mov_byte_ptr_[rbx+0x1@@ 0]@@ _r9b, xor_r8d_r8d, mov_rdx_qword_ptr_[rbp], mov_rax_qword_ptr_[rbp+8], mov_dword_ptr_[rbp+0x@@ 34]@@ _r8d, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_rdi_rbp, call_0xffffffffffffcc@@ 9e, mov_rbp_qword_ptr_[rsp+0x18], mov_rax_qword_ptr_[rbp], cmp_rbp@@ _qword_ptr_[rsp+0x28], je_0xfffffffffffff@@ 94@@ 3, mov_qword_ptr_[rsp+0x18]_rax, mov_rbx_qword_ptr_[r@@ 13+0x@@ 68], test_byte_ptr_[rbp+0x@@ 14]_1, jne_0xfffffffffffffe@@ 08, mov_eax_dword_ptr_[rbp+0x10], cmp_qword_ptr_[rsp+@@ 8]_rbx, jne_0x14, jmp_0xffffffffffffffcf, mov_rbx_qword_ptr_[rbx], cmp_qword_ptr_[rsp+@@ 8]_rbx, je_0xffffffffffffff@@ bf, cmp_eax_dword_ptr_[r@@ bx+0x1c], jne_0xfffffffffffffff3, movzx_eax_byte_ptr_[rbp+0x@@ 2a], cmp_byte_ptr_[rbx+0x1@@ 0@@ ]_al, jne_0xfffffffffffffe@@ 0b, lea_rsi_[rip+0x1f@@ 0@@ 59], mov_edi_3, xor_eax_eax, call_0xffffffffffffc0@@ 76, jmp_0xffffffffffffff98, cmp_byte_ptr_[rbx+0x1@@ 0]_2, jne_0xfffffffffffffe@@ 7e, cmp_dword_ptr_[r13+0x@@ 54]_1, jbe_0xfffffffffffffe@@ 73, mov_r8d@@ _0xfffffff@@ 5, jmp_0xffffffffffffff19, mov_r8d_dword_ptr_[r@@ bx+0x14], cmp_r8d@@ _dword_ptr_[r@@ 13+0x@@ 58], ja_0x1@@ 28, movzx_eax_byte_ptr_[r@@ 15+0x1@@ 54], xor_r8d_r8d, cmp_al_2, jne_0xfffffffffffffe@@ 71, mov_ecx_r8d, mov_rsi_r13, mov_rdi_r15, call_0x9@@ 5b@@ f, mov_r8d_eax, jmp_0xfffffffffffffe@@ 6c, cmp_r9b@@ _2, je_0x10@@ c, mov_rcx_r12, mov_rdx_r14, lea_rsi_[rip+0x20@@ 77@@ 1], mov_edi_3, xor_eax_eax, call_0xffffffffffffb@@ fa@@ 2, mov_r8d_0xffffffff, jmp_0xfffffffffffffea@@ 3, mov_eax_dword_ptr_[r13+0x@@ 58], mov_rcx_r12, lea_r8d@@ _[rax+1], mov_dword_ptr_[r13+0x@@ 5@@ 8]_r8d, mov_dword_ptr_[rbx+0x1@@ 4]_r8d, mov_dword_ptr_[rsp+0x20]@@ _r8d, mov_rdx_r14, and_byte_ptr_[r@@ 13+0x@@ 60]@@ _0xfb, lea_rsi_[rip+0x20@@ 6e@@ 1], mov_edi_7, xor_eax_eax, call_0xffffffffffffbf@@ 62, movsx_edx_byte_ptr_[r@@ bp+0x@@ 2a], mov_r8d_dword_ptr_[rsp+0x@@ 20], jmp_0xfffffffffffffdd@@ 0, lea_r9_[rip+0x@@ 23@@ 24@@ f], jmp_0xfffffffffffffd@@ 78, mov_rdx_qword_ptr_[r12], mov_rax_qword_ptr_[r12+8], mov_dword_ptr_[r12+0x@@ 34]@@ _0xfffffff@@ 5, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_rdi_r12, call_0xffffffffffffca@@ e4, jmp_0xfffffffffffff7c@@ f, sub_rsp_8, push_r9, mov_edi_3, mov_r9d_eax, mov_rdx_qword_ptr_[rsp+0x20], lea_rsi_[rip+0x20@@ 49@@ e], xor_eax_eax, mov_qword_ptr_[rsp+0x28]_rcx, call_0xffffffffffffb@@ ee@@ f, pop_rdi, pop_r10, mov_r9d_dword_ptr_[r@@ bp+0x18], mov_r8d_dword_ptr_[r@@ bp+0x10], mov_rcx_qword_ptr_[rsp+0x18], jmp_0xfffffffffffff6d@@ 7, and_byte_ptr_[r@@ 13+0x@@ 60]@@ _0xfb, mov_dword_ptr_[r13+0x@@ 5@@ 8]_r8d, mov_dword_ptr_[rsp+0x20]@@ _r8d, mov_rcx_r12, mov_rdx_r14, lea_rsi_[rip+0x20@@ 65@@ 5], jmp_0xffffffffffffff4c, mov_dword_ptr_[r13+0x@@ 54]_1, jmp_0xfffffffffffffd@@ a9, mov_rdi_r14, call_0x6@@ 2b@@ d, mov_dword_ptr_[rbp+0x@@ 34]_eax, mov_rdx_qword_ptr_[rbp], mov_r13d_eax, mov_rax_qword_ptr_[rbp+8], mov_rdi_rbp, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, call_0xffffffffffffca@@ 40, test_r13d_r13d, je_0xfffffffffffff@@ 6@@ 33, jmp_0xfffffffffffff5@@ 92, mov_r15_qword_ptr_[rsp+0x18], mov_eax_dword_ptr_[rsp+0x@@ 5c], test_eax_eax, jne_0x30@@ d, movzx_eax_byte_ptr_[r@@ 15+0x1@@ 54], cmp_al_2, je_0x3@@ ad, cmp_al_3, jne_0x@@ 6c@@ c, mov_esi_dword_ptr_[rsp+0x@@ 5c], mov_rdi_r15, call_0x7@@ 4@@ 28, mov_ecx_eax, mov_rdx_qword_ptr_[rsp+0x10], lea_rsi_[rip+0x1e@@ e@@ 68], mov_edi_7, xor_eax_eax, call_0xffffffffffffbe@@ 1e, movzx_ebx@@ _byte_ptr_[rsp+0x@@ 5c], movzx_ebp@@ _byte_ptr_[rsp+0x@@ 68], and_ebx_1, and_ebp@@ _1, jmp_0xffffffffffffe@@ 95@@ b, mov_rbp@@ _qword_ptr_[rsp+0x90], cmp_rbp@@ _qword_ptr_[rsp+0x38], jne_0xfffffffffffff@@ 23@@ 6, jmp_0xfffffffffffff@@ 67@@ 0, cmp_dword_ptr_[rbp+0x@@ 5@@ 8]_r12d, jae_0xffffffffffff@@ ee@@ 9a, mov_dword_ptr_[rbp+0x@@ 5@@ 8]_r12d, xor_eax_eax, mov_r8d_r12d, mov_rcx_r13, mov_rdx_r14, lea_rsi_[rip+0x20@@ 1c0], mov_edi_7, call_0xffffffffffffb@@ db@@ b, mov_rax_qword_ptr_[rsp+0x18], movzx_eax_byte_ptr_[rax+0x1@@ 54], cmp_al_2, jne_0xffffffffffff@@ ee@@ 7d, mov_ecx_dword_ptr_[rsp+0x@@ 5c], mov_rdi_qword_ptr_[rsp+0x18], mov_edx_r12d, mov_rsi_rbp, call_0x@@ 95@@ 21, test_eax_eax, jns_0xffffffffffff@@ ee@@ 83, sub_rsp_8, push_rax, mov_rcx_r13, xor_eax_eax, mov_r9d_dword_ptr_[rsp+0x@@ 78], mov_r8d_dword_ptr_[rsp+0x@@ 6c], mov_rdx_r14, lea_rsi_[rip+0x20@@ 18@@ a], mov_edi_3, call_0xffffffffffffbd@@ 5d, pop_r15, pop_rax, jmp_0xffffffffffffee@@ 4e, xor_r12d_r12d, jmp_0xffffffffffffed@@ 82, mov_eax_dword_ptr_[rbp+0x@@ 58], mov_rcx_r13, lea_r12d@@ _[rax+1], mov_dword_ptr_[rbp+0x@@ 5@@ 8]_r12d, mov_r8d_r12d, mov_rdx_r14, lea_rsi_[rip+0x2@@ 00@@ fd], mov_edi_7, xor_eax_eax, call_0xffffffffffffbd@@ 1e, jmp_0xffffffffffffe@@ dd@@ a, mov_r8d_0xffffffff, mov_rcx_r12, mov_rdx_r14, lea_rsi_[rip+0x1@@ ec@@ eb], mov_edi_7, xor_eax_eax, call_0xffffffffffffbc@@ f6, mov_r8d_0xffffffff, jmp_0xfffffffffffffb@@ f7, mov_r13_qword_ptr_[r@@ 13], cmp_r13@@ _r14, jne_0xffffffffffff@@ eb@@ 7d, jmp_0xffffffffffffeb@@ cc, lea_rsi_[rip+0x20@@ 1a@@ 1], mov_edi_7, xor_eax_eax, mov_rdx_r13, call_0xffffffffffffb@@ cb@@ 7, mov_esi_1, mov_rdi_r14, call_0xffffffffffffba@@ 1a, test_eax_eax, jne_0x2@@ 1b, movzx_eax_byte_ptr_[r@@ 14+0x1@@ e0], mov_dword_ptr_[rsp+0x@@ 5c]_1, and_eax_0xfffffff@@ 3, or_eax@@ _8, mov_byte_ptr_[r@@ 14+0x1@@ e0@@ ]_al, jmp_0xffffffffffffee@@ e0, mov_dword_ptr_[rbp+0x@@ 34]_eax, mov_rdx_qword_ptr_[rbp], mov_rax_qword_ptr_[rbp+8], mov_rdi_rbp, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, call_0xffffffffffffc8@@ 23, cmp_r12d@@ _-0x@@ 31, jne_0xfffffffffffff@@ 2@@ 15, lea_r12_[r@@ 15+0x10], jmp_0xfffffffffffff@@ 154, mov_rsi_r15, mov_rdi_r14, call_0x5@@ fb@@ 2, jmp_0xfffffffffffff@@ 12@@ 6, mov_rdx_r13, xor_eax_eax, lea_rsi_[rip+0x1e@@ b7@@ 9], mov_edi_7, call_0xffffffffffffbc@@ 1f, or_byte_ptr_[r@@ 14+0x1@@ e@@ 1]_1, mov_rdi_r12, mov_rdx_qword_ptr_[r12], mov_rax_qword_ptr_[r12+8], mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_dword_ptr_[r12+0x@@ 34]_0, call_0xffffffffffffc@@ 7b@@ 6, jmp_0xffffffffffffee@@ 38, mov_rax_qword_ptr_[rsp+0x90], mov_qword_ptr_[rax+@@ 8]_r12, mov_qword_ptr_[r12]_rax, mov_rax_qword_ptr_[rsp+0x38], mov_qword_ptr_[rsp+0x9@@ 0]_r12, mov_qword_ptr_[r12+8]_rax, jmp_0xffffffffffffee@@ 0d, lea_rsi_[rip+0x2@@ 00@@ 99], mov_edi_7, xor_eax_eax, mov_rdx_r13, call_0xffffffffffffbb@@ af, mov_esi_1, mov_rdi_r14, call_0xffffffffffffb@@ 9@@ 12, test_eax_eax, jne_0x1@@ 13, movzx_eax_byte_ptr_[r@@ 14+0x1@@ e0], and_eax_0xfffffff@@ 3, or_eax@@ _8, mov_byte_ptr_[r@@ 14+0x1@@ e0@@ ]_al, jmp_0xffffffffffffed@@ e0, mov_rdx_qword_ptr_[rbp], mov_rax_qword_ptr_[rbp+8], mov_dword_ptr_[rbp+0x@@ 34]@@ _0xfffffff@@ 5, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_rdi_rbp, call_0xffffffffffffc7@@ 1f, jmp_0xfffffffffffff@@ 11@@ 5, mov_rdx_qword_ptr_[rsp+0x10], lea_rsi_[rip+0x2@@ 00@@ 24], mov_edi_7, xor_eax_eax, call_0xffffffffffffbb@@ 3d, mov_esi_1, mov_rdi_r15, call_0xffffffffffffb@@ 8a@@ 0, test_eax_eax, je_0xfffffffffffffc@@ d2, mov_rdx_qword_ptr_[rsp+0x10], mov_ecx_eax, lea_rsi_[rip+0x1e@@ b@@ 3a], mov_edi_3, xor_eax_eax, call_0xffffffffffffbb@@ 0e, jmp_0xfffffffffffffc@@ b2, mov_rdx_r13, xor_eax_eax, lea_rsi_[rip+0x1@@ fff@@ c], mov_edi_7, call_0xffffffffffffba@@ ef, xor_esi_esi, mov_rdi_r14, call_0xffffffffffffb@@ 85@@ 5, test_eax_eax, mov_edx@@ _0xfffffff@@ 0, cmovne_eax_edx, mov_dword_ptr_[r12+0x@@ 34]_eax, mov_rdx_qword_ptr_[r12], mov_rax_qword_ptr_[r12+8], mov_rdi_r12, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, call_0xffffffffffffc@@ 67@@ e, jmp_0xffffffffffffed@@ 00, mov_rdi_qword_ptr_[rsp+0x40], call_0xffffffffffffa@@ 98@@ b, jmp_0xffffffffffffe@@ 6e@@ e, mov_esi_dword_ptr_[rsp+0x@@ 5c], mov_rdi_r15, call_0x8@@ 999, mov_ecx_eax, jmp_0xfffffffffffffc@@ 61, mov_ecx_eax, mov_rdx_r13, xor_eax_eax, lea_rsi_[rip+0x1e@@ 9e@@ 9], mov_edi_3, call_0xffffffffffffba@@ 75, mov_rdx_qword_ptr_[r12], mov_rax_qword_ptr_[r12+8], mov_rdi_r12, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_dword_ptr_[r12+0x@@ 34]@@ _0xfffffff@@ 0, call_0xffffffffffffc6@@ 14, jmp_0xffffffffffffec@@ 96, mov_rdx_qword_ptr_[rsp+0x10], xor_eax_eax, mov_ecx_ebx, lea_rsi_[rip+0x1e@@ 9@@ 40], mov_edi_7, call_0xffffffffffffba@@ 35, test_byte_ptr_[r@@ 15+0x1@@ e@@ 0]_0x20, je_0xffffffffffffe@@ 3b@@ 5, cmp_byte_ptr_[rip+0x2@@ 3@@ 1e0@@ b]_0, je_0xffffffffffffe@@ 3a8, mov_rdi_qword_ptr_[rsp+0x10], lea_rsi_[rip+0x23@@ 1d@@ f9], call_0xffffffffffffa@@ 68@@ 9, test_eax_eax, je_0xffffffffffffe@@ 38@@ f, jmp_0xffffffffffffe@@ 9d@@ a, xor_edx_edx, mov_rsi_r12, mov_rdi_r14, call_0xffffffffffffc0@@ 98, test_rax_rax, je_0x2@@ 59, mov_dword_ptr_[r12+0x@@ 34]_0, movzx_eax_byte_ptr_[rax+0x@@ 52], mov_byte_ptr_[r12+0x@@ 2a@@ ]_al, jmp_0xfffffffffffffef7, lea_rsi_[rip+0x1@@ ff@@ dc], mov_edi_3, xor_eax_eax, call_0xffffffffffffb@@ 9b@@ 5, mov_dword_ptr_[rbp+0x@@ 34]@@ _0xffffffea, jmp_0xfffffffffffff0@@ ac, lea_rsi_[rip+0x1@@ ff@@ e5], mov_edi_3, xor_eax_eax, call_0xffffffffffffb@@ 99@@ 6, mov_dword_ptr_[rbp+0x@@ 34]@@ _0xffffffea, jmp_0xfffffffffffff0@@ 8d, xor_eax_eax, mov_rdx_r13, lea_rsi_[rip+0x1e@@ 900], mov_edi_7, mov_qword_ptr_[rsp+0x80]_0, mov_dword_ptr_[rsp+0x7@@ 8]_0, mov_dword_ptr_[rsp+0x@@ 7c]_0, call_0xffffffffffffb@@ 958, movzx_eax_byte_ptr_[r@@ 14+0x1@@ 54], xor_ecx_ecx, cmp_al_2, je_0x23, cmp_al_3, jne_0x2@@ 83, mov_rsi_qword_ptr_[rsp+0x50], lea_rcx_[rsp+0x@@ 7c], lea_rdx_[rsp+0x@@ 78], mov_rdi_r14, call_0x6@@ 24@@ b, mov_ecx_eax, sub_rsp_8, mov_eax_dword_ptr_[rsp+0x@@ 84], mov_rdx_r13, push_rax, lea_rsi_[rip+0x1@@ fe@@ 3e], mov_edi_7, mov_r9d_dword_ptr_[rsp+0x@@ 88], mov_r8@@ _qword_ptr_[rsp+0x90], xor_eax_eax, mov_dword_ptr_[rsp+0x18]_ecx, call_0xffffffffffffb@@ 8f@@ 3, mov_rax_qword_ptr_[rsp+0x90], mov_rdx_qword_ptr_[r12], mov_qword_ptr_[r14+0x1@@ 68]_rax, mov_eax_dword_ptr_[rsp+0x88], mov_ecx_dword_ptr_[rsp+0x18], mov_dword_ptr_[r14+0x1@@ 7@@ 0]_eax, mov_eax_dword_ptr_[rsp+0x@@ 8c], mov_rdi_r12, mov_dword_ptr_[r14+0x1@@ 7@@ 4]_eax, mov_rax_qword_ptr_[r12+8], mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_dword_ptr_[r12+0x@@ 34]@@ _ecx, call_0xffffffffffffc@@ 46@@ 7, pop_r11, pop_r12, jmp_0xffffffffffffea@@ e5, cmp_byte_ptr_[r@@ 12+0x@@ 28@@ ]_4, mov_edx@@ _0xfffffff4, mov_eax_0xfffffffe, cmovne_eax_edx, mov_rdi_r12, mov_dword_ptr_[r12+0x@@ 34]_eax, call_0xffffffffffffc4@@ 3e, jmp_0xffffffffffffea@@ c0, mov_rdx_qword_ptr_[rsp+0x10], xor_eax_eax, lea_rsi_[rip+0x1f@@ dd@@ 6], mov_edi_3, call_0xffffffffffffb@@ 86@@ 1, mov_eax_0xffffffea, jmp_0xffffffffffffeb@@ 99, mov_esi_ebp, mov_rdi_r15, call_0x86@@ 9d, mov_ebx_eax, jmp_0xffffffffffffe@@ 190, lea_r9_[rip+0x@@ 22@@ b4@@ 1], jmp_0xffffffffffffee@@ ea, mov_rdi_qword_ptr_[rsp+0x90], mov_dword_ptr_[rsp+0x@@ 6c]_0, mov_rbx_qword_ptr_[rdi], mov_rbp@@ _qword_ptr_[rsp+0x38], cmp_rdi@@ _qword_ptr_[rsp+0x38], jne_0xfffffffffffff@@ 260, jmp_0xffffffffffffe@@ 1e@@ f, mov_eax_0xffffffff, jmp_0xfffffffffffffa@@ 88, lea_rsi_[rip+0x1@@ fe@@ 74], mov_edi_3, xor_eax_eax, call_0xffffffffffffb@@ 7f@@ 5, mov_dword_ptr_[rbp+0x@@ 34]@@ _0xffffffea, jmp_0xffffffffffffee@@ ec, test_r12_r12, je_0xffffffffffffe@@ 2f@@ e, mov_dword_ptr_[r12+0x@@ 34]@@ _0xffffffff, mov_rdi_r12, call_0xffffffffffffc@@ 38@@ f, jmp_0xffffffffffffe@@ 2e@@ 7, test_dl_dl, je_0x81, mov_rdx_qword_ptr_[rsp+0x10], xor_eax_eax, lea_rsi_[rip+0x1e@@ 7@@ 15], mov_edi_7, call_0xffffffffffffb@@ 7a@@ e, movzx_eax_byte_ptr_[r@@ 14+0x1@@ e0], mov_dword_ptr_[rsp+0x6@@ 8]_1, and_eax_0xfffffff@@ 3, or_eax@@ _8, mov_byte_ptr_[r@@ 14+0x1@@ e0@@ ]_al, jmp_0xffffffffffffe@@ 9e@@ c, mov_dword_ptr_[r12+0x@@ 34]@@ _0xfffffffe, jmp_0xfffffffffffffc@@ ad, mov_ecx_0xffffffff, jmp_0xfffffffffffff94@@ 3, mov_rdx_qword_ptr_[rsp+0x10], xor_eax_eax, lea_rcx_[r@@ 14+0x10], lea_rsi_[rip+0x1@@ ff@@ a6], mov_edi_3, call_0xffffffffffffb@@ 75@@ 1, mov_eax_0xfffffffe, jmp_0xffffffffffffea@@ 89, mov_rdx_qword_ptr_[rsp+0x10], lea_rsi_[rip+0x1@@ fb@@ f6], mov_edi_7, xor_eax_eax, call_0xffffffffffffb7@@ 2f, jmp_0xffffffffffffff69, mov_rbx_qword_ptr_[rsp+0x10], xor_eax_eax, mov_ecx_0xffffffff, mov_rdx_rbx, lea_rsi_[rip+0x1e@@ 6@@ 15], mov_edi_7, call_0xffffffffffffb@@ 70@@ a, test_byte_ptr_[r@@ 15+0x1@@ e@@ 0]_0x20, je_0xffffffffffffff@@ 19, cmp_byte_ptr_[rip+0x2@@ 3@@ 1a@@ e0]_0, je_0xffffffffffffff@@ 0c, lea_rsi_[rip+0x23@@ 1a@@ d3], mov_rdi_rbx, call_0xffffffffffffa@@ 360, test_eax_eax, jne_0x23, test_r12_r12, je_0xffffffffffffe@@ 1f@@ 1, or_ebx@@ _0xffffffff, jmp_0xffffffffffffe0@@ 4b, mov_ecx_0xffffffff, jmp_0xfffffffffffffd@@ 97, or_ebx@@ _0xffffffff, jmp_0xffffffffffffe@@ 6@@ 91, xor_r12d_r12d, jmp_0xffffffffffffd@@ fd@@ 1, call_0xffffffffffffa@@ 3@@ 1@@ 6
endbr64, push_r12, mov_esi_0x2@@ 08, mov_edi_1, call_0xffffffffffffa@@ 3a0, mov_r12_rax, test_rax_rax, je_0x55, lea_rax_[r@@ ax+0x1@@ e8], mov_qword_ptr_[r12+0x1@@ e8]_rax, mov_qword_ptr_[r12+0x1@@ f0]_rax, lea_rdi_[r@@ 12+0x1@@ b8], lea_rax_[r@@ 12+0x1@@ f8], xor_esi_esi, mov_qword_ptr_[r12+0x1@@ f8]_rax, mov_qword_ptr_[r12+0x@@ 20@@ 0]_rax, call_0xffffffffffff9e@@ 2a, lea_rdi_[r@@ 12+0x1@@ 88], xor_esi_esi, call_0xffffffffffff9f@@ 6b, mov_rax_r12, pop_r12, ret, lea_rsi_[rip+0x1e@@ 6a@@ 2], mov_edi_3, xor_eax_eax, call_0xffffffffffffb6@@ 22, jmp_0xffffffffffffffe@@ 7
push_r15, mov_r11@@ _rdi, mov_r15_rdx, push_r14, push_r13, mov_r13_rsi, push_r12, mov_r12d_ecx, push_rbp, push_rbx, mov_rbx_r9, sub_rsp_0x18, mov_qword_ptr_[rsp]_r8, xor_r8d_r8d, test_r9_r9, je_6, mov_r8d_dword_ptr_[r@@ 9@@ +0x18], lea_rdx_[rip+0x2@@ 20@@ 31], cmp_r12d_2, je_0x24, lea_rdx_[rip+0x1e@@ 24@@ 1], cmp_r12d@@ _3, je_0x17, test_r12d_r12d, lea_rdx_[rip+0x1e@@ 22@@ c], lea_rax_[rip+0x@@ 1e@@ 23@@ 2], cmovne_rdx_rax, mov_rcx_r11, lea_rsi_[rip+0x1@@ fe@@ 2a], mov_edi_7, xor_eax_eax, mov_qword_ptr_[rsp+8]_r11, call_0xffffffffffffb5@@ 9e, call_0xfffffffffffffe@@ f9, mov_rbp_rax, test_rax_rax, je_0x2@@ bf, mov_r11_qword_ptr_[rsp+8], lea_r14_[r@@ ax+0x10], mov_edx_0x40, mov_rsi_r11, mov_rdi_r14, call_0xffffffffffffa@@ 2e@@ 4, mov_byte_ptr_[rbp+0x@@ 15@@ 4]@@ _r12b, test_rbx_rbx, je_0xb, mov_eax_dword_ptr_[rbx+0x10], mov_dword_ptr_[rbp+0x@@ 17@@ 8]_eax, test_r15_r15, je_0x16, lea_rdi_[rbp+0x@@ 92], mov_edx_0x40, mov_rsi_r15, call_0xffffffffffffa@@ 2b@@ 6, test_r13_r13, je_0x13, lea_rdi_[rbp+0x@@ 51], mov_edx_0x40, mov_rsi_r13, call_0xffffffffffffa@@ 2a0, mov_rsi_qword_ptr_[rsp], test_rsi_rsi, je_0x13, lea_rdi_[rbp+0x@@ d2], mov_edx_0x40, call_0xffffffffffffa@@ 28@@ 6, test_rbx_rbx, je_0xd, mov_rax_qword_ptr_[rbx+0x20], mov_qword_ptr_[rbp+0x@@ 16@@ 0]_rax, call_0xffffffffffffba@@ d1, mov_r12_rax, test_rax_rax, je_0x2@@ 32, or_byte_ptr_[r@@ 12+0x@@ 60@@ ]_8, mov_eax_2, mov_word_ptr_[r@@ 12+0x@@ 5@@ 1@@ ]_ax, mov_qword_ptr_[r12+0x1@@ 0]_0x4@@ b@@ 4c@@ 47@@ 56, mov_qword_ptr_[r12+0x1@@ 8]_0, pxor_xmm0_xmm0, movups_xmmword_ptr_[r@@ 12+0x@@ 20]_xmm0, movups_xmmword_ptr_[r@@ 12+0x@@ 30]_xmm0, movups_xmmword_ptr_[r@@ 12+0x@@ 40]_xmm0, mov_rax_qword_ptr_[rbp+0x@@ 200], lea_rdx_[rbp+0x@@ 1f8], mov_qword_ptr_[rbp+0x@@ 20@@ 0]_r12, mov_qword_ptr_[r12@@ ]_rdx, mov_qword_ptr_[r12+8]_rax, mov_qword_ptr_[rax]_r12, lea_rdi_[rip+0x13@@ 0@@ 67@@ f], call_0xffffffffffffa@@ 30@@ f, mov_rdi_r14, call_0xffffffffffffb@@ 11@@ 7, test_rax_rax, je_0x5f, movzx_eax_byte_ptr_[rax+0x1@@ e0], mov_rdx_r14, test_al_8, jne_0x1@@ 11, test_al@@ _3, je_0xe9, lea_rsi_[rip+0x1@@ fd@@ 64], mov_edi_7, xor_eax_eax, call_0xffffffffffffb@@ 45@@ 5, mov_r13d@@ _0xffffff@@ ef, lea_rdi_[rip+0x13@@ 0@@ 63@@ 3], call_0xffffffffffffa@@ 32@@ 3, mov_rdi_r12, call_0xffffffffffffa@@ fe@@ b, mov_rdi_rbp, call_0xffffffffffff9d@@ 03, jmp_0x@@ 92, test_rbx_rbx, je_0x22, mov_rax_qword_ptr_[rbp+0x@@ 1e8], mov_qword_ptr_[rax+8]_rbx, mov_qword_ptr_[rbx]_rax, lea_rax_[rbp+0x@@ 1e8], mov_qword_ptr_[rbx+8]_rax, mov_qword_ptr_[rbp+0x@@ 1e@@ 8]_rbx, cmp_byte_ptr_[rbp+0x@@ 15@@ 4]_2, je_0xb4, mov_rax_qword_ptr_[rip+0x@@ 130@@ 5c@@ f], lea_rcx_[rip+0x@@ 130@@ 5c0], mov_qword_ptr_[rip+0x@@ 130@@ 5c@@ 1]@@ _rbp, mov_qword_ptr_[rbp@@ ]_rcx, mov_qword_ptr_[rbp+8]_rax, mov_qword_ptr_[rax]_rbp, lea_rdi_[rip+0x13@@ 0@@ 5b@@ 7], call_0xffffffffffffa@@ 2a@@ 7, lea_rdi_[rbp+0x@@ 180], mov_rcx_rbp, lea_rdx_[rip-0x@@ 24@@ 4f], xor_esi_esi, call_0xffffffffffff9c@@ bf, mov_r13d_eax, test_eax_eax, js_0x@@ 95, xor_r13d_r13d, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, pop_r14, pop_r15, ret, lea_rsi_[rip+0x1@@ fc@@ 51], mov_edi_7, xor_eax_eax, call_0xffffffffffffb@@ 37@@ 2, mov_r13d@@ _0xffffff@@ 2d, jmp_0xffffffffffffff1d, lea_rsi_[rip+0x1@@ fc@@ 01], mov_edi_7, xor_eax_eax, call_0xffffffffffffb@@ 352, mov_r13d@@ _0xfffffff@@ 5, jmp_0xfffffffffffffefd, lea_rsi_[rip+0x23@@ 17@@ 89], mov_rdi_r14, call_0xffffffffffff9@@ fb@@ 6, test_eax_eax, jne_0xffffffffffffff@@ 41, mov_dword_ptr_[rip+0x23@@ 17@@ cf@@ ]_1, jmp_0xffffffffffffff31, call_0xffffffffffff9f@@ 20, mov_r8d_dword_ptr_[rax], mov_rdx_r14, mov_ecx_r13d, lea_rsi_[rip+0x1@@ fc@@ 23], mov_edi_3, xor_eax_eax, call_0xffffffffffffb@@ 2f@@ 4, lea_rdi_[rip+0x13@@ 0@@ 4d8], call_0xffffffffffffa@@ 168, mov_rdx_qword_ptr_[rbp], mov_rax_qword_ptr_[rbp+8], mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, jmp_0xfffffffffffffe@@ 8a, mov_r13d@@ _0xfffffff4, jmp_0xffffffffffffff2d, mov_rdi_rbp, call_0xffffffffffff9b@@ 91, mov_r13d@@ _0xfffffff4, jmp_0xffffffffffffff1@@ a
push_r12, mov_r9_rdi, xor_r8d_r8d, mov_ecx_2, xor_edx_edx, xor_esi_esi, lea_rdi_[rip+0x@@ 23@@ 16@@ e8], call_0xfffffffffffffc@@ 88, mov_r12d_eax, test_eax_eax, js@@ _0xe, mov_eax_r12d, pop_r12, ret, mov_edx_eax, lea_rsi_[rip+0x1@@ fb@@ cf], xor_eax_eax, mov_edi_7, call_0xffffffffffffb@@ 270, mov_eax_r12d, pop_r12, ret
push_r14, pxor_xmm0_xmm0, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x50, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, cmp_byte_ptr_[rdi+0x@@ 29]_1, mov_byte_ptr_[rsp+0x@@ 40]_0, movaps_xmmword_ptr_[rsp]_xmm0, movaps_xmmword_ptr_[rsp+0x10]_xmm0, movaps_xmmword_ptr_[rsp+0x20]_xmm0, movaps_xmmword_ptr_[rsp+0x30]_xmm0, jne_0x31, mov_edi_dword_ptr_[rip+0x2@@ 3@@ 16@@ b1], test_edi_edi, je_0x1@@ e7, movzx_eax_byte_ptr_[r@@ bp+0x28], sub_eax@@ _0xa, cmp_al_1, jbe_0x@@ 18, mov_r13_rsp, mov_rdi_r13, call_0xffffffffffffa@@ fa0, jmp_0x1d, mov_r13_rsp, lea_rdi_[rbp+0x@@ 88], mov_rsi_r13, call_0xffffffffffffbd@@ 23, lea_rbx_[rip+0x@@ 130@@ 3c@@ 7], mov_rdi_rbx, call_0xffffffffffffa0@@ 4d, cmp_byte_ptr_[r@@ sp]_0, jne_0x7c, mov_rdi_rbx, call_0xffffffffffffa0@@ 9f, movzx_eax_word_ptr_[r@@ bp+0x28], cmp_ax@@ _0x2@@ 08, je_0x1@@ d2, test_byte_ptr_[rbp+0x@@ 15@@ ]_2, jne_0x1@@ e8, cmp_ax@@ _0x10@@ 7, je_0x10e, mov_eax_dword_ptr_[rbp+0x@@ 28], mov_rdx_r13, and_eax@@ _0xff@@ 00@@ ff, cmp_eax_7, je_0x1@@ 8a, xor_eax_eax, lea_rsi_[rip+0x1e@@ 210], mov_edi_7, call_0xffffffffffffb@@ 17@@ 6, mov_eax@@ _0xffffff@@ 2e, mov_rcx_qword_ptr_[rsp+0x48], xor_rcx_qword_ptr_fs:[0x28], jne_0x2@@ ae, add_rsp_0x50, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rdi_r13, call_0xffffffffffff@@ add@@ 5, mov_r12_rax, test_rax_rax, je_0xffffffffffffff@@ 78, movzx_eax_byte_ptr_[rbp+0x@@ 2b], movsx_r8d@@ _byte_ptr_[r@@ 12+0x1@@ 54], test_al_al, jne_0x1@@ 85, mov_byte_ptr_[rbp+0x@@ 2b@@ ]@@ _r8b, lea_r14_[r@@ 12+0x1@@ b8], mov_rdi_r14, call_0xffffffffffff9f@@ 90, movzx_eax_byte_ptr_[r@@ 12+0x1@@ e0], test_al_8, jne_0x2@@ 1c, test_al@@ _3, jne_0xc, test_byte_ptr_[rbp+0x@@ 15@@ ]_0x10, je_0x1@@ da, mov_rax_qword_ptr_[r12+0x1@@ f0], lea_rdx_[r@@ 12+0x1@@ e8], mov_qword_ptr_[r12+0x1@@ f@@ 0]_rbp, mov_qword_ptr_[rbp]_rdx, mov_qword_ptr_[rbp+8]_rax, mov_qword_ptr_[rax]_rbp, lea_rdi_[r@@ 12+0x1@@ 88], or_byte_ptr_[r@@ 12+0x1@@ e0@@ ]_4, call_0xffffffffffff97@@ 28, mov_rdi_r14, call_0xffffffffffff9f@@ 90, lea_rdi_[rip+0x13@@ 0@@ 29@@ 4], call_0xffffffffffff9f@@ 84, xor_eax_eax, jmp_0xffffffffffffff31, mov_esi_dword_ptr_[rip+0x2@@ 3@@ 15@@ 22], test_esi_esi, jne_0x12@@ 8, cmp_byte_ptr_[rbp+0x@@ 2a]_0, je_0xfffffffffffffe@@ e6, mov_ecx_dword_ptr_[rip+0x2@@ 3@@ 15@@ 16], test_ecx_ecx, je_0xfffffffffffffe@@ d8, mov_rdx_r13, lea_rsi_[rip+0x1@@ fa@@ 80], mov_edi_7, xor_eax_eax, call_0xffffffffffffb0@@ 59, mov_edx_dword_ptr_[rip+0x2@@ 3@@ 14@@ fe], or_dword_ptr_[rbp+0x@@ 14]@@ _0x1@@ 200, test_edx_edx, jne_0xfffffffffffffe@@ 75, xor_edi_edi, call_0xfffffffffffffd@@ 8d, jmp_0xfffffffffffffe@@ 68, mov_eax_dword_ptr_[rip+0x23@@ 14@@ ce], test_eax_eax, jne_0xfffffffffffffe@@ 22, call_0x8c@@ 82, test_eax_eax, je_0xe7, mov_dword_ptr_[rip+0x23@@ 14@@ af@@ ]_1, jmp_0xfffffffffffffe@@ 05, xor_eax_eax, lea_rsi_[rip+0x1@@ fa@@ 47], mov_edi_7, call_0xffffffffffffa@@ ff@@ 2, mov_eax@@ _0xffffff@@ 2e, jmp_0xfffffffffffffe@@ 7c, xor_eax_eax, mov_rdx_r13, lea_rsi_[rip+0x1f@@ 96@@ 4], mov_edi_7, call_0xffffffffffffa@@ fc@@ f, mov_eax@@ _0xffffff@@ 2e, jmp_0xfffffffffffffe@@ 59, xor_eax_eax, mov_rdx_r13, lea_rsi_[rip+0x1f@@ 97@@ 4], mov_edi_7, call_0xffffffffffffa@@ fa@@ f, mov_eax@@ _0xffffff@@ 2e, jmp_0xfffffffffffffe@@ 39, cmp_al@@ _r8b, je_0xfffffffffffffe@@ 82, movsx_ecx@@ _al, mov_rdx_r13, lea_rsi_[rip+0x1@@ fa@@ 0a], mov_edi_3, xor_eax_eax, call_0xffffffffffffaf@@ 83, lea_rdi_[rip+0x13@@ 0@@ 16@@ 7], call_0xffffffffffff9e@@ 57, mov_eax_0xffffffea, jmp_0xfffffffffffffe@@ 01, xor_eax_eax, mov_rdx_r13, lea_rsi_[rip+0x1f@@ 93@@ c], mov_edi_7, call_0xffffffffffffaf@@ 4f, or_dword_ptr_[rbp+0x@@ 14]@@ _0x200, mov_rdi_rbp, call_0xffffffffffffa@@ 980, xor_eax_eax, jmp_0xfffffffffffffd@@ cd, call_0x77@@ 84, test_eax_eax, je_0xfffffffffffffd@@ 27, mov_dword_ptr_[rip+0x23@@ 13@@ b5@@ ]_1, jmp_0xfffffffffffffd@@ 17, mov_rdi_r14, call_0xffffffffffff9d@@ f5, lea_rdi_[rip+0x13@@ 00@@ f9], call_0xffffffffffff9d@@ e9, xor_eax_eax, mov_rdx_r13, lea_rsi_[rip+0x1d@@ fb@@ f], mov_edi_7, call_0xffffffffffffa@@ ef@@ 3, mov_eax@@ _0xffffff@@ 2d, jmp_0xfffffffffffffd@@ 7d, mov_rdi_r14, call_0xffffffffffff9d@@ c1, lea_rdi_[rip+0x13@@ 00@@ c5], call_0xffffffffffff9d@@ b5, xor_eax_eax, mov_rdx_r13, lea_rsi_[rip+0x1d@@ f7@@ 2], mov_edi_3, call_0xffffffffffffa@@ eb@@ f, mov_eax@@ _0xffffff@@ 8c, jmp_0xfffffffffffffd@@ 49, call_0xffffffffffff9b@@ 2@@ 0
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12d@@ _0x3c, push_rbp, push_rbx, lea_rbx_[rip+0x@@ 12@@ ff@@ 25], sub_rsp_0x1@@ 68, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 58]_rax, xor_eax_eax, lea_rax_[rsp+0x50], mov_qword_ptr_[rsp+0x10]_rax, mov_qword_ptr_[rsp+0x50]_rax, mov_qword_ptr_[rsp+0x58]_rax, lea_rax_[rsp+0x1@@ 10], mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x18]_rax, lea_rbp_[rsp+0x@@ 60], lea_rdi_[rip+0x12@@ ff@@ 21], call_0xffffffffffff9c@@ b1, xor_edi_edi, mov_rsi_rbp, call_0xffffffffffff94@@ 57, test_eax_eax, jne_0x3@@ 20, mov_rax_qword_ptr_[rsp+0x60], mov_r13_qword_ptr_[r@@ bx], add_r12_rax, mov_qword_ptr_[rsp+0x6@@ 0]_r12, xor_eax_eax, lea_r12_[rip+0x@@ 12@@ fe@@ f1], cmp_r13_rbx, je_0x38, jmp_0x1@@ 04, or_eax@@ _dword_ptr_[rip+0x@@ 12@@ fe@@ 7a], jne_0x3@@ 6a, mov_rdx_rbp, mov_rsi_r12, lea_rdi_[rip+0x12@@ fe@@ 87], call_0xffffffffffff9@@ 55@@ 7, mov_r13_qword_ptr_[r@@ bx], cmp_r13_rbx, jne_0xd4, mov_esi_dword_ptr_[rip+0x@@ 12@@ fe@@ 54], test_esi_esi, je_0xffffffffffffffce, mov_dword_ptr_[rip+0x@@ 12@@ fe@@ 42@@ ]_0, lea_rdi_[rip+0x12@@ fe@@ 9b], call_0xffffffffffff9c@@ 8b, mov_rdi_qword_ptr_[rsp+0x50], mov_r12_qword_ptr_[rsp+0x10], mov_rbp_qword_ptr_[rdi], cmp_rdi@@ _qword_ptr_[rsp+0x10], je_0x20, mov_rax_qword_ptr_[rdi+8], mov_qword_ptr_[rbp+8]_rax, mov_qword_ptr_[rax]_rbp, call_0xffffffffffffa8@@ 35, mov_rdi_rbp, mov_rbp_qword_ptr_[rbp], cmp_rdi_r12, jne_0xffffffffffffffe6, lea_rdi_[rip+0x12@@ fe@@ 5d], call_0xffffffffffff9b@@ ed, mov_rdi_qword_ptr_[rip+0x@@ 12@@ fe@@ 01], mov_rbp_qword_ptr_[rdi], cmp_rdi_rbx, je_0x27, mov_rax_qword_ptr_[rdi+8], mov_qword_ptr_[rbp+8]_rax, mov_qword_ptr_[rax]_rbp, call_0xffffffffffffa@@ 7f@@ 5, mov_rdi_rbp, mov_rbp_qword_ptr_[rbp], cmp_rdi_rbx, jne_0xffffffffffffffe6, lea_rdi_[rip+0x12@@ fe@@ 1d], call_0xffffffffffff9c@@ 0d, mov_rax_qword_ptr_[rsp+0x1@@ 58], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ 988, add_rsp_0x1@@ 68, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret, mov_r12d@@ _dword_ptr_[rip+0x@@ 12@@ fd@@ 85], mov_dword_ptr_[rip+0x@@ 12@@ fd@@ 77@@ ]_0, test_r12d_r12d, jne_0xffffffffffffff@@ 32, mov_rdx_qword_ptr_[r13], mov_rax_qword_ptr_[r13+8], lea_rdi_[rip+0x12@@ fd@@ bf], mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, call_0xffffffffffff9b@@ a8, movzx_eax_byte_ptr_[r@@ 13+0x28], cmp_al@@ _0x12, je_0x3@@ 2c, cmp_al@@ _7, je_0x2@@ 54, movzx_edx_word_ptr_[r@@ 13+0x28], cmp_dx@@ _0x2@@ 03, je_0x3@@ 5c, cmp_dx@@ _0x3@@ 03, je_0x4@@ 9f, cmp_dx@@ _0x2@@ 11, je_0x6@@ 46, cmp_al@@ _0xc, je_0x7@@ 62, cmp_al@@ _0xd, je_0x7@@ 6c, cmp_al@@ _0x18, je_0x6@@ e6, movsx_edx_al, lea_rsi_[rip+0x1@@ dd@@ c2], mov_edi_3, xor_eax_eax, call_0xffffffffffffac@@ 5f, mov_dword_ptr_[r13+0x@@ 34]@@ _0xffffffea, mov_rdi_r13, call_0xffffffffffffb@@ 80@@ f, call_0xffffffffffffbd@@ 8a, sub_rax@@ _qword_ptr_[rsp+8], mov_r12d_1, cmp_rax_1, jbe_0xfffffffffffffd@@ fe, call_0xffffffffffffbd@@ 70, mov_r12@@ _qword_ptr_[rsp+0x50], mov_qword_ptr_[rsp+8]_rax, mov_r14_qword_ptr_[r@@ 12], mov_r13_qword_ptr_[rsp+0x10], cmp_r12@@ _qword_ptr_[rsp+0x10], jne_0x29, jmp_0x8@@ 1, cmp_al@@ _0xd, je_0xa6, cmp_al@@ _0x18, je_0x12@@ 6, mov_rax_qword_ptr_[r14], mov_r12_r14, cmp_r14@@ _r13, je_0x5f, mov_r14_rax, movzx_eax_byte_ptr_[r@@ 12+0x28], cmp_al@@ _0xc, jne_0xffffffffffffffda, mov_edx_dword_ptr_[r@@ 12+0x10], lea_rsi_[rip+0x1f@@ 6f@@ 4], mov_edi_7, xor_eax_eax, call_0xffffffffffffab@@ cd, call_0xffffffffffffcb@@ 68, mov_dword_ptr_[r12+0x@@ 34]_eax, test_eax_eax, jne_0xffffffffffffffc4, mov_rax_qword_ptr_[r12+8], mov_rdx_qword_ptr_[r12], mov_rdi_r12, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_r12_r14, call_0xffffffffffffb7@@ 64, mov_rax_qword_ptr_[r14], cmp_r14@@ _r13, jne_0xffffffffffffffac, xor_esi_esi, xor_edi_edi, call_0xffffffffffffbd@@ 3c, mov_rax_qword_ptr_[rsp+0x10], mov_r12d@@ _0x3c, cmp_qword_ptr_[rsp+0x@@ 50]_rax, mov_eax_1, cmovne@@ _r12_rax, jmp_0xfffffffffffffd@@ 36, lea_rsi_[rip+0x1d@@ cc@@ 8], mov_edi_7, xor_eax_eax, call_0xffffffffffffab@@ 52, mov_esi_dword_ptr_[r@@ 12+0x14], mov_edi_1, shr_esi@@ _5, and_esi_1, call_0xffffffffffffbc@@ ed, mov_dword_ptr_[r12+0x@@ 34]_eax, test_eax_eax, jne_0xffffffffffffff@@ 39, mov_rdx_qword_ptr_[r12], mov_rax_qword_ptr_[r12+8], mov_rdi_r12, mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_dword_ptr_[r12+0x@@ 34]_0, call_0xffffffffffffb@@ 6cf, jmp_0xffffffffffffff12, xor_eax_eax, lea_rsi_[rip+0x1d@@ bd@@ 7], mov_edi_3, call_0xffffffffffffaa@@ f2, mov_qword_ptr_[rsp+0x68]_0, xor_eax_eax, jmp_0xfffffffffffffc@@ cd, mov_edi_7, xor_eax_eax, lea_rsi_[rip+0x1d@@ c4@@ f], call_0xffffffffffffaa@@ ca, mov_rdi_r12, call_0x87@@ a2, test_eax_eax, je_0xffffffffffffff@@ 90, jns_0xfffffffffffffe@@ c1, cmp_eax@@ _-0x@@ b, je_0xfffffffffffffe@@ b8, mov_rcx_qword_ptr_[r12], mov_rdx_qword_ptr_[r12+8], mov_rdi_r12, mov_qword_ptr_[rcx@@ +8]_rdx, mov_qword_ptr_[rdx]_rcx, mov_dword_ptr_[r12+0x@@ 34]_eax, call_0xffffffffffffb@@ 65@@ 2, jmp_0xfffffffffffffe@@ 95, lea_rdi_[rip+0x12@@ fb@@ 69], mov_dword_ptr_[rip+0x@@ 12@@ fa@@ ff@@ ]_0, call_0xffffffffffff9@@ 94@@ f, jmp_0xfffffffffffffe@@ 20, test_byte_ptr_[r13+0x1@@ 5@@ ]_2, je_0xfffffffffffffd@@ ad, lea_rsi_[rip+0x1d@@ b@@ 44], mov_edi_7, xor_eax_eax, call_0xffffffffffffaa@@ 47, lea_rdi_[rip+0x12@@ fc@@ 2b], call_0xffffffffffff98@@ bb, lea_rax_[rip+0x@@ 12@@ fc@@ 0f], mov_r12_qword_ptr_[rax], cmp_r12_rax, jne_0x19, jmp_0x5@@ e, mov_r12_qword_ptr_[r12], lea_rax_[rip+0x@@ 12@@ fb@@ f5], cmp_r12_rax, je_0x49, cmp_byte_ptr_[r@@ 12+0x1@@ 54@@ ]_3, jne_0xffffffffffffffe7, lea_r14_[r@@ 12+0x1@@ b8], mov_rdi_r14, call_0xffffffffffff98@@ 7a, movzx_eax_byte_ptr_[r@@ 12+0x1@@ e0], and_eax@@ _0xa, cmp_al_2, je_0x4@@ 0c, mov_rdi_r14, call_0xffffffffffff98@@ be, mov_r12_qword_ptr_[r12], lea_rax_[rip+0x@@ 12@@ fb@@ ae], cmp_r12_rax, jne_0xffffffffffffffbb, lea_rsi_[rip+0x1d@@ b5@@ f], mov_edi_7, xor_eax_eax, call_0xffffffffffffa@@ 9b@@ b, lea_rdi_[rip+0x12@@ fb@@ 9f], call_0xffffffffffff9@@ 88@@ f, mov_rdi_r13, call_0xfffffffffffff74@@ 7, test_eax_eax, jns_0xffffffffffff@@ fd@@ 56, jmp_0x1@@ 8f, call_0x7@@ 1e0, mov_r12d_eax, call_0x8@@ 5e8, mov_ecx_dword_ptr_[rip+0x2@@ 30@@ e@@ 11], test_ecx_ecx, je_0xf, mov_r12d_dword_ptr_[rip+0x2@@ 30@@ e0@@ a], mov_eax_dword_ptr_[rip+0x2@@ 30@@ e@@ 10], test_r12d_r12d, je_0x3@@ 09, test_eax_eax, je_0x3@@ 01, mov_dword_ptr_[r13+0x@@ 34]@@ _0xffffff@@ ca, jmp_0xfffffffffffffd@@ 01, lea_r12_[r@@ 13+0x@@ 88], mov_rdx_r12, lea_rsi_[rip+0x1d@@ a@@ 40], mov_edi_7, xor_eax_eax, call_0xffffffffffffa@@ 930, mov_r15_qword_ptr_[rsp+0x18], pxor_xmm0_xmm0, mov_byte_ptr_[r15+0x@@ 40]_0, movaps_xmmword_ptr_[r@@ 15@@ ]_xmm0, movaps_xmmword_ptr_[r@@ 15+0x1@@ 0]_xmm0, movaps_xmmword_ptr_[r@@ 15+0x@@ 20]_xmm0, movaps_xmmword_ptr_[r@@ 15+0x@@ 30]_xmm0, mov_rsi_r15, mov_rdi_r12, call_0xffffffffffffb@@ 44@@ 4, lea_rdi_[rip+0x12@@ fa@@ e8], call_0xffffffffffff97@@ 78, lea_rax_[rip+0x@@ 12@@ fa@@ cc], mov_r14_qword_ptr_[rax], cmp_r14_rax, je_0xa2, mov_qword_ptr_[rsp+0x20]@@ _rbp, jmp_0x31, cmp_al_2, jne_0x15, lea_rbp_[r@@ 14+0x10], mov_rsi_r15, mov_rdi_rbp, call_0xffffffffffff9@@ 54@@ 2, test_eax_eax, je_0x35, mov_r14_qword_ptr_[r@@ 14], lea_rax_[rip+0x@@ 12@@ fa@@ 8f], cmp_r14_rax, je_0x63, movzx_eax_byte_ptr_[r@@ 14+0x1@@ 54], cmp_al_3, jne_0xffffffffffffffd0, lea_rbp_[r@@ 14+0x10], mov_edx@@ _0x30, mov_rsi_r15, mov_rdi_rbp, call_0xffffffffffff8@@ fb@@ f, test_eax_eax, jne_0xffffffffffffffcf, lea_rdi_[rip+0x12@@ fa@@ 6f], mov_r15_rbp, mov_rbp_qword_ptr_[rsp+0x20], call_0xffffffffffff97@@ 57, mov_rcx_qword_ptr_[rsp+0x18], xor_eax_eax, mov_r9_r12, lea_r8_[r@@ 14+0x@@ 51], mov_rdx_r15, lea_rsi_[rip+0x1f@@ 3a@@ 2], mov_edi_3, call_0xffffffffffffa@@ 85@@ 5, mov_eax@@ _0xffffff@@ ef, jmp_0x40, mov_rbp_qword_ptr_[rsp+0x20], lea_rdi_[rip+0x12@@ fa@@ 2d], call_0xffffffffffff97@@ 1d, movzx_eax_byte_ptr_[r@@ 13+0x@@ 2b], cmp_al_3, je_0x3@@ eb, cmp_al_2, jne_0x4@@ 6f, mov_edx_dword_ptr_[r@@ 13+0x14], mov_rdi_qword_ptr_[rsp+0x18], lea_rcx_[r@@ 13+0x1@@ 4b], mov_rsi_r12, call_0x7@@ 1f0, mov_dword_ptr_[r13+0x@@ 34]_eax, mov_rdi_r13, call_0xffffffffffffb@@ 3c@@ 4, jmp_0xfffffffffffffbb@@ 5, lea_rax_[r@@ 13+0x1@@ 0a], lea_r15_[r@@ 13+0x@@ 88], mov_r8_rax, lea_rcx_[r@@ 13+0x@@ c9], mov_rdx_r15, mov_qword_ptr_[rsp+0x20]_rax, lea_rsi_[rip+0x1d@@ 8e@@ c], xor_eax_eax, mov_edi_7, call_0xffffffffffffa@@ 7c@@ c, lea_rax_[rsp+0xc0], mov_qword_ptr_[rsp+0x30]_rax, mov_rax_qword_ptr_[rsp+0x18], pxor_xmm0_xmm0, mov_byte_ptr_[r@@ ax+0x4@@ 0]_0, lea_r14_[rsp+0x@@ 70], movaps_xmmword_ptr_[r@@ ax]_xmm0, movaps_xmmword_ptr_[r@@ ax+0x1@@ 0]_xmm0, movaps_xmmword_ptr_[r@@ ax+0x@@ 20]_xmm0, movaps_xmmword_ptr_[r@@ ax+0x@@ 30]_xmm0, mov_rsi_r14, mov_rdi_r15, movaps_xmmword_ptr_[rsp+0x70]_xmm0, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0x@@ e0@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0x@@ f0@@ ]_xmm0, mov_byte_ptr_[rsp+0x@@ b0]_0, mov_byte_ptr_[rsp+0x1@@ 00]_0, call_0xffffffffffffb@@ 28@@ 6, lea_rdi_[rip+0x12@@ f@@ 92@@ a], call_0xffffffffffff9@@ 5b@@ a, mov_rdi_r14, call_0xffffffffffffa@@ 3c@@ 2, test_rax_rax, je_0x2@@ 44, mov_rcx_qword_ptr_[r@@ ax+0x1@@ 68], movsx_r8d@@ _byte_ptr_[r@@ ax+0x1@@ 54], movdqu_xmm1_xmmword_ptr_[r@@ ax+0x@@ d2], movdqu_xmm2_xmmword_ptr_[r@@ ax+0x@@ e2], movdqu_xmm3_xmmword_ptr_[r@@ ax+0x@@ f2], movdqu_xmm4@@ _xmmword_ptr_[r@@ ax+0x1@@ 02], mov_qword_ptr_[rsp+0x40]_rcx, mov_ecx_dword_ptr_[r@@ ax+0x1@@ 70], mov_eax_dword_ptr_[rax+0x1@@ 74], lea_rdi_[rip+0x12@@ f@@ 8c@@ d], mov_dword_ptr_[rsp+0x3c]@@ _r8d, mov_dword_ptr_[rsp+0x4@@ 8]_ecx, mov_dword_ptr_[rsp+0x4c]_eax, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x@@ e0@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0x@@ f0@@ ]_xmm4, call_0xffffffffffff95@@ 90, mov_r8d_dword_ptr_[rsp+0x@@ 3c], movsx_ecx_byte_ptr_[r@@ 13+0x@@ 2b], cmp_ecx@@ _r8d, jne_0x2@@ ee, cmp_r8d@@ _3, je_0x2@@ 6b, cmp_cl@@ _2, je_0x9f, mov_ecx_r8d, mov_rdx_r14, lea_rsi_[rip+0x1f@@ 170], mov_edi_3, xor_eax_eax, call_0xffffffffffffa@@ 67@@ 1, mov_r12d@@ _0xffffffea, jmp_0x7@@ a, mov_ecx_r12d, or_ecx@@ _eax, jne_0x1@@ 19, mov_dword_ptr_[r13+0x@@ 34]@@ _0xffffff@@ db, jmp_0xfffffffffffff9f@@ b, lea_r14_[r@@ 13+0x@@ 88], mov_rdx_r14, lea_rsi_[rip+0x1d@@ 76@@ b], mov_edi_7, xor_eax_eax, call_0xffffffffffffa6@@ 30, mov_rax_qword_ptr_[rsp+0x18], pxor_xmm0_xmm0, mov_byte_ptr_[r@@ ax+0x4@@ 0]_0, movaps_xmmword_ptr_[r@@ ax]_xmm0, movaps_xmmword_ptr_[r@@ ax+0x1@@ 0]_xmm0, movaps_xmmword_ptr_[r@@ ax+0x@@ 20]_xmm0, movaps_xmmword_ptr_[r@@ ax+0x@@ 30]_xmm0, mov_rsi_rax, mov_rdi_r14, call_0xffffffffffffb@@ 149, movzx_eax_byte_ptr_[r@@ 13+0x@@ 2b], cmp_al_3, je_0x1@@ 97, cmp_al_2, mov_eax_0xffffffea, cmovne@@ _r12d_eax, mov_dword_ptr_[r13+0x@@ 34]@@ _r12d, mov_rdi_r13, call_0xffffffffffffb@@ 1a@@ 5, jmp_0xfffffffffffff99@@ 6, mov_rdi_r12, call_0x4@@ ea8, test_eax_eax, je_0xfffffffffffffb@@ f0, add_r12_0x10, mov_rdx_r12, xor_eax_eax, lea_rsi_[rip+0x1f@@ 0@@ 6b], mov_edi_7, call_0xffffffffffffa@@ 5b@@ 6, mov_edx_0x40, mov_rsi_r12, lea_rdi_[rip+0x2@@ 30@@ 99@@ 2], call_0xffffffffffff@@ 93@@ 12, mov_rdi_r14, call_0xffffffffffff94@@ 7a, jmp_0xfffffffffffffb@@ df, mov_rcx_qword_ptr_[r@@ 13+0x40], mov_edi_7, xor_eax_eax, lea_rdx_[r@@ 13+0x1@@ 0a], lea_rsi_[rip+0x1d@@ 6b@@ d], call_0xffffffffffffa@@ 577, mov_rdi_r13, call_0x8@@ 23f, test_eax_eax, js_0xffffffffffff@@ fd@@ 5d, mov_rax_qword_ptr_[rsp+0x50], mov_qword_ptr_[rax+@@ 8]_r13, mov_qword_ptr_[r13]_rax, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rsp+0x5@@ 0]_r13, mov_qword_ptr_[r13+8]_rax, jmp_0xfffffffffffff8f@@ d, test_r12d_r12d, jne_0x@@ cc, test_eax_eax, je_0xfffffffffffff@@ 8e@@ 5, mov_dword_ptr_[r13+0x@@ 34@@ ]_2, jmp_0xfffffffffffff8d@@ 7, call_0xffffffffffffc@@ 4c@@ 4, mov_dword_ptr_[r13+0x@@ 34]_eax, test_eax_eax, jne_0xffffffffffffffb7, jmp_0xfffffffffffff8c@@ 5, mov_esi_dword_ptr_[r@@ 13+0x14], mov_edi_1, shr_esi@@ _5, and_esi_1, call_0xffffffffffffb@@ 6b@@ 3, mov_dword_ptr_[r13+0x@@ 34]_eax, test_eax_eax, je_0xfffffffffffff@@ 8a@@ 6, test_byte_ptr_[r13+0x1@@ 4]@@ _0x10, jne_0xffffffffffffff8b, jmp_0xfffffffffffff8@@ 99, lea_rdi_[rip+0x12@@ f@@ 6c@@ f], call_0xffffffffffff9@@ 3b@@ f, movdqu@@ _xmm7@@ _xmmword_ptr_[r@@ 13+0x1@@ 4b], movsx_r8d@@ _byte_ptr_[r@@ 13+0x@@ 2b], movdqu@@ _xmm5@@ _xmmword_ptr_[r@@ 13+0x1@@ 5b], movdqu@@ _xmm6@@ _xmmword_ptr_[r@@ 13+0x1@@ 6b], movaps_xmmword_ptr_[rsp+0xc0]_xmm7, movdqu@@ _xmm7@@ _xmmword_ptr_[r@@ 13+0x1@@ 7b], mov_dword_ptr_[rsp+0x@@ 4c]_0, mov_dword_ptr_[rsp+0x48]_0, mov_qword_ptr_[rsp+0x40]_0, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0x@@ e0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0x@@ f0@@ ]_xmm7, jmp_0xfffffffffffffdd@@ 2, mov_dword_ptr_[r13+0x@@ 34@@ ]_3, jmp_0xfffffffffffff8@@ 19, mov_edx_dword_ptr_[r@@ 13+0x14], mov_rdi_qword_ptr_[rsp+0x18], lea_rcx_[r@@ 13+0x1@@ 4b], mov_rsi_r14, call_0x4@@ 28@@ 3, mov_r12d_eax, jmp_0xfffffffffffffe@@ 5f, mov_edx_dword_ptr_[r@@ 13+0x14], mov_rdi_qword_ptr_[rsp+0x18], lea_rcx_[r@@ 13+0x1@@ 4b], mov_rsi_r12, call_0x3@@ 2b@@ 3, jmp_0xfffffffffffffc@@ 23, push@@ _qword_ptr_[rsp+0x40], mov_rsi_r15, mov_rdi_r14, mov_eax_dword_ptr_[rsp+0x54], push_rax, mov_rcx_qword_ptr_[rsp+0x40], mov_r9d_dword_ptr_[rsp+0x@@ 58], mov_r8_qword_ptr_[rsp+0x28], mov_rdx_qword_ptr_[rsp+0x30], call_0x3d@@ 36, mov_rcx_qword_ptr_[rsp+0x28], mov_r12d_eax, movdqa_xmm@@ 5@@ _xmmword_ptr_[r@@ cx], movups_xmmword_ptr_[r@@ 13+0x1@@ 8c@@ ]_xmm5, movdqa_xmm7@@ _xmmword_ptr_[r@@ cx+0x10], movups_xmmword_ptr_[r@@ 13+0x1@@ 9c@@ ]_xmm7, movdqa_xmm@@ 6@@ _xmmword_ptr_[r@@ cx+0x20], movups_xmmword_ptr_[r@@ 13+0x1@@ ac@@ ]_xmm6, movdqa_xmm@@ 5@@ _xmmword_ptr_[r@@ cx+0x30], movups_xmmword_ptr_[r@@ 13+0x1@@ bc@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0x@@ 30]_xmm5, pop_rax, pop_rdx, jmp_0xfffffffffffffdd@@ 3, mov_eax_0xffffffea, jmp_0xfffffffffffffb@@ aa, mov_rdx_r14, lea_rsi_[rip+0x1e@@ e7@@ 6], mov_edi_3, xor_eax_eax, call_0xffffffffffffa@@ 3@@ 9f, mov_r12d@@ _0xffffffea, jmp_0xfffffffffffffd@@ a8, call_0xffffffffffff8@@ ff@@ f
endbr64, push_r15, lea_r15_[rip+0x@@ 12@@ f@@ 4b@@ 3], push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1@@ 58, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 48]_rax, xor_eax_eax, lea_rdi_[rip+0x12@@ f@@ 4f@@ a], call_0xffffffffffff9@@ 1c@@ a, mov_r11d@@ _dword_ptr_[rip+0x@@ 12@@ f@@ 46@@ e], lea_rbx_[rip+0x@@ 12@@ f@@ 4e@@ 7], test_r11d_r11d, je_0x3b, jmp_0x3@@ 2a, mov_r10d_dword_ptr_[r@@ ip+0x@@ 12@@ f@@ 45@@ 5], test_r10d_r10d, jne_0x4a@@ 6, mov_rsi_rbx, lea_rdi_[rip+0x12@@ f@@ 47@@ e], call_0xffffffffffff8@@ fd@@ e, mov_r9d_dword_ptr_[r@@ ip+0x@@ 12@@ f@@ 43@@ 2], test_r9d_r9d, jne_0x2@@ f7, mov_rbp_qword_ptr_[r@@ 15], cmp_rbp@@ _r15, je_0xffffffffffffffcb, mov_rax_qword_ptr_[rbp+8], mov_rdx_qword_ptr_[rbp], lea_rbx_[rip+0x@@ 12@@ f@@ 43@@ 2], mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, mov_eax_dword_ptr_[rbp+0x10], mov_r14_qword_ptr_[r@@ ip+0x@@ 12@@ f@@ 42@@ 1], cmp_r14_rbx, jne_0x1a, jmp_0x5@@ cc, mov_r14_qword_ptr_[r@@ 14], cmp_r14_rbx, je_0x5@@ ba, cmp_eax_dword_ptr_[r@@ 14+0x@@ 44], jne_0xfffffffffffffff0, lea_rdi_[rip+0x12@@ f@@ 45@@ 7], call_0xffffffffffff9@@ 18@@ 7, lea_rax_[r@@ 14+0x10], mov_rdi_rax, mov_qword_ptr_[rsp+0x20]_rax, call_0xffffffffffff9@@ 11@@ 6, test_byte_ptr_[r14+0x@@ 48@@ ]_2, jne_0x1@@ bb@@ 1, lea_r12_[rsp+0x@@ c0], xor_ecx_ecx, xor_edx_edx, mov_eax_edx, add_edx@@ _0x20, mov_qword_ptr_[r12@@ +rax@@ ]_rcx, mov_qword_ptr_[r12@@ +rax+@@ 8]_rcx, mov_qword_ptr_[r12@@ +r@@ ax+0x1@@ 0]_rcx, mov_qword_ptr_[r12@@ +r@@ ax+0x1@@ 8]_rcx, cmp_edx@@ _0x80, jb_0xffffffffffffff@@ e2, lea_rax_[rsp+0xb0], mov_rdi_rax, mov_qword_ptr_[rsp+0x18]_rax, call_0xb@@ 19@@ a, mov_eax_dword_ptr_[rbp+0x@@ 34], cmp_eax@@ _-0x@@ 31, je_0x7@@ 70, cmp_eax@@ _0xffffff@@ 2e, je_0x7@@ 6c, mov_r13d_dword_ptr_[r@@ bp+0x14], test_r13d@@ _0x2000, jne_0x7@@ e0, mov_eax_r13d, and_eax@@ _0x20000, or_eax@@ _dword_ptr_[rip+0x2@@ 30@@ 64@@ f], je_0x16, mov_edx_0x80, lea_rsi_[rip+0x1d@@ 4@@ 13], mov_rdi_r12, call_0xffffffffffff8a@@ 3e, and_r13d@@ _0x100000, jne_0x7@@ 96, movzx_eax_byte_ptr_[r@@ bp+0x28], cmp_al_3, je_0x5@@ 74, cmp_al@@ _0x17, je_0x3@@ 9d, lea_edx_[rax-0x@@ e], cmp_dl_1, jbe_0x@@ 15@@ 3a, mov_r10d_dword_ptr_[r@@ bp+0x@@ 34], lea_rdx_[rip+0x1c@@ c@@ f0], cmp_r10d@@ _0xffffff@@ 2e, lea_rsi_[rip+0x1d@@ 36@@ e], cmovne@@ _rsi@@ _rdx, movzx_edx_byte_ptr_[r@@ bp+0x@@ 29], lea_rcx_[rip+0x@@ 1d@@ 4d@@ 9], cmp_dl@@ _2, je_0x23, lea_rcx_[rip+0x@@ 1d@@ 15@@ 9], cmp_dl@@ _3, je_0x17, cmp_dl_1, lea_rcx_[rip+0x2@@ 14@@ 90], lea_rdx_[rip+0x1d@@ 288], cmove@@ _rcx_rdx, movsx_edi@@ _al, call_0xffffffffffff97@@ 4b, cmp_byte_ptr_[r@@ 14+0x@@ 49@@ ]_0, mov_r8d_dword_ptr_[r@@ 14+0x@@ 44], mov_r11d_dword_ptr_[r@@ 14+0x38], mov_r9_rax, lea_rdx_[rip+0x1c@@ e@@ 21], je_6, lea_rdx_[r@@ 14+0x@@ 49], push_r12, xor_eax_eax, mov_edi_7, push_rsi, lea_rsi_[rip+0x1e@@ f@@ 38], push_r10, push_rcx, mov_ecx_r11d, call_0xffffffffffffa@@ 142, add_rsp_0x20, movzx_eax_byte_ptr_[rbp+0x@@ 2b], lea_rdx_[rip+0x1c@@ d@@ 9b], cmp_byte_ptr_[rsp+0x@@ c0]_0, cmove@@ _r12@@ _rdx, movsxd_r8@@ _dword_ptr_[r@@ bp+0x38], movsxd_rsi_dword_ptr_[r@@ bp+0x@@ 34], lea_r9_[rip+0x@@ 20@@ b@@ 68], cmp_al_2, je_0x1a, lea_r9_[rip+0x@@ 1c@@ d7@@ a], cmp_al_3, je_0xf, test_al_al, lea_r9_[rip+0x@@ 1c@@ d7@@ 5], cmove@@ _r9@@ _rdx, lea_rdi_[rsp+0x60], sub_rsp_8, movsx_rcx@@ _byte_ptr_[r@@ bp+0x28], push_0, lea_rax_[rip+0x@@ 1d@@ 32@@ a], lea_rdx_[rip+0x1d@@ 3@@ 17], push_r12, push_rax, lea_rax_[rip+0x@@ 1d@@ 34@@ f], push_r8, lea_r8_[rip+0x@@ 1d@@ 360], push_rax, lea_rax_[rip+0x@@ 1d@@ 2e@@ c], push_rsi, lea_rsi_[rip+0x1d@@ 2@@ fd], push_rax, xor_eax_eax, call_0x7f@@ 43, movdqu_xmm3_xmmword_ptr_[r@@ sp+0x@@ a0], movdqu_xmm4@@ _xmmword_ptr_[r@@ sp+0x@@ b0], movaps_xmmword_ptr_[rsp+0x@@ e0@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0x@@ f0@@ ]_xmm4, add_rsp_0x40, mov_edi_dword_ptr_[r@@ 14+0x@@ 3c], mov_rsi_qword_ptr_[rsp+0x18], call_0xa0@@ 5f, test_eax_eax, jne_0x@@ 64@@ e, call_0xffffffffffff8c@@ 82, mov_r8d_dword_ptr_[rax], mov_ecx_dword_ptr_[r14+0x@@ 3c], mov_edx_dword_ptr_[r14+0x@@ 44], test_r8d_r8d, jle_0x@@ f@@ 37, neg@@ _r8d, lea_rsi_[rip+0x1d@@ 3@@ 28], mov_edi_7, xor_eax_eax, call_0xffffffffffffa0@@ 48, mov_rdi_qword_ptr_[rsp+0x18], call_0xa@@ fa@@ e, mov_rdi_r14, call_0xffffffffffffaa@@ 66, mov_rdi_qword_ptr_[rsp+0x20], call_0xffffffffffff8@@ f0@@ c, test_byte_ptr_[rbp+0x@@ 16@@ ]_4, jne_0x34@@ f, mov_rdi_rbp, call_0xffffffffffff9a@@ c5, jmp_0xfffffffffffffc@@ bf, mov_rbp_qword_ptr_[r@@ 15], cmp_rbp@@ _r15, jne_0xfffffffffffffd@@ 11, mov_r13_qword_ptr_[rip+0x@@ 12@@ f@@ 14@@ 5], lea_rbx_[rip+0x@@ 12@@ f@@ 13@@ e], cmp_r13_rbx, jne_0x18, jmp_0x2@@ c9, mov_r13_qword_ptr_[r@@ 13], cmp_r13_rbx, je_0x2@@ b9, test_byte_ptr_[r13+0x@@ 48@@ ]_3, je_0xffffffffffffffee, lea_rdi_[rip+0x12@@ f@@ 17@@ 5], lea_r14_[r@@ 13+0x10], call_0xffffffffffff8@@ ea@@ 1, mov_rdi_r14, call_0xffffffffffff8e@@ 39, movzx_eax_byte_ptr_[r@@ 13+0x@@ 48], test_al_1, jne_0x4@@ 72, test_al_2, je_0x3@@ 26, mov_ecx_dword_ptr_[r13+0x@@ 40], mov_r8d_dword_ptr_[r@@ 13+0x@@ 3c], test_al_4, jne_0x1@@ ed, mov_eax_r8d, and_eax_ecx, cmp_eax_-1, je_0x19, mov_edx_dword_ptr_[r13+0x@@ 44], lea_rsi_[rip+0x1e@@ f4@@ a], mov_edi_3, xor_eax_eax, call_0xffffffffffff9@@ f7@@ 3, mov_rdi_r14, call_0xffffffffffff8e@@ 4b, lea_rdi_[rip+0x12@@ f@@ 10@@ f], call_0xffffffffffff8@@ dd@@ f, mov_rdx_qword_ptr_[r13], mov_rax_qword_ptr_[r13+8], lea_rdi_[rip+0x12@@ f0@@ fb], mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, call_0xffffffffffff8e@@ 24, test_byte_ptr_[r13+0x@@ 48@@ ]_8, je_0x2@@ 0d, lea_rdi_[rip+0x12@@ f@@ 1@@ 1d], call_0xffffffffffff8d@@ ad, lea_rax_[rip+0x@@ 12@@ f@@ 101], mov_qword_ptr_[rsp+0x28]_rax, mov_rbx_qword_ptr_[rip+0x@@ 12@@ f0@@ f5], mov_r12@@ _qword_ptr_[rsp+0x28], cmp_rbx_rax, jne_0x54, jmp_0x1@@ d2, mov_rax_qword_ptr_[rbx+0x1@@ f0], lea_rdx_[r@@ bx+0x1@@ e8], mov_qword_ptr_[rbx+0x1@@ f@@ 0]_rbp, mov_qword_ptr_[rbp]_rdx, mov_qword_ptr_[rbp+8]_rax, mov_qword_ptr_[rax]_rbp, lea_rdi_[rbx+0x1@@ 88], or_byte_ptr_[r@@ bx+0x1@@ e0@@ ]_4, call_0xffffffffffff8@@ 54@@ 2, mov_rdi_r14, call_0xffffffffffff8d@@ aa, mov_rbx_qword_ptr_[rbx], cmp_rbx_r12, je_0x1@@ 86, call_0xffffffffffffa@@ 2c@@ 9, mov_rbp_rax, test_rax_rax, je_0xffffffffffffffe9, mov_byte_ptr_[rax+0x@@ 28@@ ]_9, lea_r14_[r@@ bx+0x1@@ b8], mov_rdi_r14, mov_eax_dword_ptr_[r13+0x@@ 44], mov_dword_ptr_[rbp+0x@@ 10]_eax, call_0xffffffffffff8d@@ 17, test_byte_ptr_[rbx+0x1@@ e0@@ ]_8, je_0xffffffffffffff@@ 8b, mov_rdi_rbp, call_0xffffffffffff99@@ 36, jmp_0xffffffffffffffb4, lea_rdi_[rip+0x12@@ f0@@ 21], call_0xffffffffffff8d@@ 51, mov_rax_qword_ptr_[rsp+0x1@@ 48], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ e@@ 00, add_rsp_0x1@@ 58, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret, movzx_edx_byte_ptr_[r@@ bp+0x@@ 29], movsx_edi_byte_ptr_[r@@ bp+0x@@ 2a], mov_esi_dword_ptr_[rbp+0x@@ 34], lea_rax_[rip+0x@@ 1d@@ 16@@ 4], cmp_dl@@ _2, je_0x23, lea_rax_[rip+0x@@ 1c@@ de@@ 4], cmp_dl@@ _3, je_0x17, cmp_dl_1, lea_rax_[rip+0x2@@ 11@@ 1b], lea_rdx_[rip+0x1c@@ f@@ 13], cmove_rax_rdx, cmp_byte_ptr_[r@@ 14+0x@@ 49@@ ]_0, mov_r8d_dword_ptr_[r@@ 14+0x@@ 44], mov_ecx_dword_ptr_[r14+0x@@ 38], lea_rdx_[rip+0x1c@@ ab@@ 7], jne_0xc@@ d8, sub_rsp_8, push_rdi, lea_r9_[rip+0x@@ 1c@@ 8c@@ a], mov_edi_7, push_rsi, lea_rsi_[rip+0x1e@@ 99@@ 6], push_rax, xor_eax_eax, call_0xffffffffffff9@@ dd3, movzx_eax_byte_ptr_[rbp+0x@@ 2a], add_rsp_0x20, inc_eax, cmp_al_4, ja_0x1@@ 47@@ 2, lea_rdx_[rip+0x1d@@ 4c@@ 5], movzx_eax_al, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_edx_dword_ptr_[r13+0x@@ 44], mov_edi_7, xor_eax_eax, lea_rsi_[rip+0x1d@@ 250], call_0xffffffffffff9d@@ 96, mov_edi_dword_ptr_[r@@ 13+0x@@ 3c], call_0xffffffffffff8@@ 34@@ d, test_eax_eax, jne_0x13@@ 8e, movsxd_r12@@ _dword_ptr_[r@@ 13+0x40], test_r12d_r12d, js_0x1@@ 3a@@ 5, lea_rdi_[rip+0x12@@ e@@ fb@@ c], call_0xffffffffffff8b@@ ec, mov_rax_qword_ptr_[rip+0x@@ 12@@ ef@@ 98], mov_ecx_0xffffffff, mov_qword_ptr_[rax+r@@ 12*@@ 8]_rcx, lea_rdi_[rip+0x12@@ e@@ fa@@ 0], call_0xffffffffffff8c@@ 30, and_byte_ptr_[r@@ 13+0x@@ 48]@@ _0xfb, mov_qword_ptr_[r13+0x@@ 3c@@ ]_-1, jmp_0xfffffffffffffdd@@ 0, lea_rdi_[rip+0x12@@ ef@@ 22], call_0xffffffffffff8c@@ 12, mov_rdi_r13, call_0xffffffffffff9@@ 86@@ a, jmp_0xfffffffffffff9d@@ 4, lea_rdi_[rip+0x12@@ e@@ ec@@ 9], mov_dword_ptr_[rip+0x@@ 12@@ ee@@ 3f@@ ]_0, call_0xffffffffffff8b@@ ef, jmp_0xfffffffffffff9b@@ 9, lea_rdi_[rip+0x12@@ e@@ ea@@ 9], call_0xffffffffffff8b@@ d9, mov_edx_dword_ptr_[rbp+0x10], xor_eax_eax, lea_rsi_[rip+0x1d@@ 1c@@ c], mov_edi_7, call_0xffffffffffff9c@@ e3, test_byte_ptr_[rbp+0x@@ 16@@ ]_4, je_0xfffffffffffffc@@ c2, mov_edx_dword_ptr_[rbp+0x10], mov_edi_7, lea_rsi_[rip+0x1e@@ b@@ 3d], xor_eax_eax, call_0xffffffffffff9c@@ c3, call_0xffffffffffffa0@@ ce, mov_rdi_rax, test_rax_rax, je_0xfffffffffffffc@@ 9b, mov_edx_0x2@@ 10, mov_rsi_rbp, call_0xffffffffffff8b@@ a5, mov_rdi_rax, mov_byte_ptr_[rax+0x@@ 2a]_0, mov_eax_dword_ptr_[rax+0x14], and_eax@@ _0xfff@@ b@@ ffff, or_eax@@ _0x80000, mov_dword_ptr_[rdi+0x1@@ 4]_eax, call_0xffffffffffffea@@ 29, jmp_0xfffffffffffffc@@ 6c, mov_rdi_r14, call_0xffffffffffff8b@@ 5c, jmp_0xfffffffffffff92@@ 6, cmp_byte_ptr_[rbp+0x@@ 14@@ b]_0, lea_rbx_[rip+0x@@ 1c@@ 8d@@ 1], je_9, lea_rbx_[r@@ bp+0x@@ 14@@ b], cmp_byte_ptr_[rbp+0x@@ 18@@ c]_0, lea_r13_[rip+0x@@ 1c@@ 8b@@ a], je_9, lea_r13_[r@@ bp+0x@@ 18@@ c], movzx_edx_byte_ptr_[r@@ bp+0x@@ 29], mov_esi_dword_ptr_[rbp+0x@@ 34], lea_rax_[rip+0x@@ 1c@@ f6@@ b], cmp_dl@@ _2, je_0x23, lea_rax_[rip+0x@@ 1c@@ be@@ b], cmp_dl@@ _3, je_0x17, cmp_dl_1, lea_rax_[rip+0x20@@ f2@@ 2], lea_rdx_[rip+0x1c@@ d@@ 1a], cmove_rax_rdx, cmp_byte_ptr_[r@@ 14+0x@@ 49@@ ]_0, mov_r8d_dword_ptr_[r@@ 14+0x@@ 44], mov_ecx_dword_ptr_[r14+0x@@ 38], lea_rdx_[rip+0x1c@@ 8b@@ e], je_6, lea_rdx_[r@@ 14+0x@@ 49], push_r13, lea_r9_[rip+0x@@ 1c@@ 68@@ c], mov_edi_7, push_rbx, push_rsi, lea_rsi_[rip+0x1e@@ 76@@ 7], push_rax, xor_eax_eax, call_0xffffffffffff9b@@ dc, add_rsp_0x20, cmp_byte_ptr_[rsp+0x@@ c0]_0, lea_rax_[rip+0x@@ 1c@@ 8@@ 31], cmove@@ _r12_rax, lea_rdi_[rsp+0x60], sub_rsp_8, movsxd_r9@@ _dword_ptr_[r@@ bp+0x@@ 34], movsx_rcx@@ _byte_ptr_[r@@ bp+0x28], push_0, lea_rax_[rip+0x@@ 1c@@ de@@ f], lea_r8_[rip+0x@@ 1c@@ dc@@ c], push_r12, lea_rdx_[rip+0x1c@@ dd@@ 3], lea_rsi_[rip+0x1c@@ dd@@ 5], push_rax, lea_rax_[rip+0x@@ 1c@@ de@@ 2], push_r13, push_rax, lea_rax_[rip+0x@@ 1c@@ d@@ ea], push_rbx, push_rax, movsxd_rax_dword_ptr_[r@@ bp+0x38], push_rax, lea_rax_[rip+0x@@ 1c@@ de@@ e], push_rax, xor_eax_eax, call_0x7@@ 9f@@ b, movdqu_xmm1_xmmword_ptr_[r@@ sp+0x@@ b0], movdqu_xmm2_xmmword_ptr_[r@@ sp+0x@@ c0], movaps_xmmword_ptr_[rsp+0x@@ f0@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x1@@ 00@@ ]_xmm2, add_rsp_0x50, jmp_0xfffffffffffffa@@ b8, and_eax_0xfffffffe, mov_byte_ptr_[r13+0x@@ 48@@ ]_al, lea_r12_[rsp+0x@@ 88], mov_rdi_r12, call_0xaa@@ 79, mov_edi_dword_ptr_[r@@ 13+0x@@ 3c], mov_rsi_r12, call_0x@@ 99@@ 5d, test_eax_eax, jne_0x10@@ d, call_0xffffffffffff87@@ 20, mov_ecx_dword_ptr_[rax], mov_edx_dword_ptr_[r13+0x@@ 44], cmp_ecx@@ _0x68, je_0xa@@ 00, lea_rsi_[rip+0x1e@@ 99@@ 5], mov_edi_3, xor_eax_eax, call_0xffffffffffff9a@@ ee, mov_rdi_r12, call_0xaa@@ 56, mov_rdi_r13, call_0xffffffffffffa@@ 50@@ e, movzx_eax_byte_ptr_[r@@ 13+0x@@ 48], jmp_0xfffffffffffffb@@ 2d, mov_dword_ptr_[rbp+0x@@ 34]@@ _0xffffff@@ 2e, lea_rdi_[rip+0x12@@ ec@@ b1], call_0xffffffffffff8@@ 94@@ 1, lea_rax_[rip+0x@@ 12@@ ec@@ 95], cmp_qword_ptr_[r@@ ax@@ ]_rax, je_0x1@@ 19@@ 4, lea_rdi_[rip+0x12@@ ec@@ 95], call_0xffffffffffff8@@ 98@@ 5, mov_r8d_dword_ptr_[rip+0x2@@ 2@@ ff@@ 31], test_r8d_r8d, jne_0x@@ 98@@ 2, mov_edi_dword_ptr_[rip+0x2@@ 2@@ ff@@ 2e], test_edi_edi, je_0x1@@ 18@@ 3, cmp_byte_ptr_[rip+0x2@@ 2@@ fe@@ cb@@ ]_0, jne_0xfffffffffffff@@ 84@@ d, mov_edx_0x80, lea_rsi_[rip+0x1c@@ c4@@ e], mov_rdi_r12, call_0xffffffffffff8@@ 2a@@ 6, jmp_0xfffffffffffff8@@ 33, mov_edx_0x80, lea_rsi_[rip+0x1c@@ c7@@ 3], mov_rdi_r12, call_0xffffffffffff8@@ 28@@ d, jmp_0xfffffffffffff85@@ c, mov_edx_0x80, lea_rsi_[rip+0x1c@@ c@@ 3e], mov_rdi_r12, call_0xffffffffffff8@@ 27@@ 4, jmp_0xfffffffffffff8@@ 12, mov_rdi_qword_ptr_[rsp+0x18], call_0xa@@ 99@@ 5, mov_rdi_r14, call_0xffffffffffffa@@ 44@@ d, mov_rdi_qword_ptr_[rsp+0x20], call_0xffffffffffff88@@ f3, jmp_0xfffffffffffff9f@@ 6, mov_rdi_qword_ptr_[rsp+0x90], call_0x9d@@ 41, mov_qword_ptr_[rsp+0x80]_rax, test_rax_rax, je_0x1@@ 11@@ f, mov_rdi_qword_ptr_[rax], xor_edx_edx, lea_rsi_[rip+0x1c@@ ce@@ c], call_0x1@@ 40@@ 9f, mov_rbp_rax, test_rax_rax, je_0x10@@ 90, mov_rsi_rax, mov_ecx_6, lea_rdi_[rip+0x1c@@ cd@@ 4], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x@@ 98@@ 4, mov_ecx_5, lea_rdi_[rip+0x1c@@ d@@ 5c], mov_rsi_rbp, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x10@@ f0, mov_ecx_5, lea_rdi_[rip+0x1c@@ 49@@ 5], mov_rsi_rbp, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta@@ _r8b, sbb@@ _r8@@ b@@ _0, movsx_ebx@@ _r8b, test_ebx_ebx, je_0x1@@ 11@@ 2, mov_ecx_5, lea_rdi_[rip+0x1c@@ c@@ 7c], mov_rsi_rbp, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta@@ _r8b, sbb@@ _r8@@ b@@ _0, movsx_ebx@@ _r8b, test_ebx_ebx, je_0x1@@ 170, mov_ecx_8, lea_rdi_[rip+0x1c@@ c@@ 5c], mov_rsi_rbp, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x1@@ 5c@@ f, mov_ecx_8, lea_rdi_[rip+0x1c@@ c4@@ 6], mov_rsi_rbp, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x1@@ 5@@ 9f, mov_ecx_8, lea_rdi_[rip+0x1c@@ c@@ 30], mov_rsi_rbp, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x1@@ 56@@ f, mov_ecx_8, lea_rdi_[rip+0x1c@@ c@@ 1a], mov_rsi_rbp, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x1@@ d@@ 10, mov_ecx_8, lea_rdi_[rip+0x1c@@ 8@@ 80], mov_rsi_rbp, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x1@@ d@@ 78, mov_ecx_9, lea_rdi_[rip+0x1c@@ be@@ 6], mov_rsi_rbp, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x1@@ d@@ 48, lea_rsi_[rip+0x1c@@ bd@@ 6], mov_rdi_rbp, call_0xffffffffffff8@@ 50@@ a, test_eax_eax, je_0x1@@ d@@ 1f, lea_rsi_[rip+0x1c@@ 32@@ c], mov_rdi_rbp, call_0xffffffffffff84@@ f3, mov_ebx_eax, test_eax_eax, je_0x1@@ c@@ f9, lea_rsi_[rip+0x1c@@ 9d@@ 9], mov_rdi_rbp, call_0xffffffffffff8@@ 4d@@ a, mov_ebx_eax, test_eax_eax, je_0x1@@ cd@@ 3, lea_rsi_[rip+0x1c@@ b@@ 95], mov_rdi_rbp, call_0xffffffffffff8@@ 4c@@ 1, test_eax_eax, je_0x1@@ ca@@ a, lea_rsi_[rip+0x1c@@ bc@@ c], mov_rdi_rbp, call_0xffffffffffff8@@ 4a@@ a, test_eax_eax, je_0x1@@ c@@ 81, lea_rsi_[rip+0x1c@@ bc@@ 3], mov_rdi_rbp, call_0xffffffffffff84@@ 93, test_eax_eax, je_0x1@@ c@@ 58, lea_rsi_[rip+0x1c@@ b@@ 58], mov_rdi_rbp, call_0xffffffffffff8@@ 47@@ c, test_eax_eax, je_0x1@@ d@@ 40, lea_rsi_[rip+0x1c@@ b4@@ b], mov_rdi_rbp, call_0xffffffffffff84@@ 65, test_eax_eax, je_0x1@@ d@@ 17, lea_rsi_[rip+0x1c@@ b@@ 3e], mov_rdi_rbp, call_0xffffffffffff8@@ 44@@ e, test_eax_eax, je_0x1@@ c@@ ee, lea_rsi_[rip+0x1c@@ b@@ 32], mov_rdi_rbp, call_0xffffffffffff84@@ 37, test_eax_eax, je_0x1@@ cc@@ 5, lea_rsi_[rip+0x1c@@ b@@ 2c], mov_rdi_rbp, call_0xffffffffffff84@@ 20, test_eax_eax, je_0x1@@ c@@ 9c, lea_rsi_[rip+0x1c@@ 268], mov_rdi_rbp, call_0xffffffffffff8@@ 40@@ 9, mov_ebx_eax, test_eax_eax, je_0x1@@ c@@ 76, lea_rsi_[rip+0x1c@@ b0@@ c], mov_rdi_rbp, call_0xffffffffffff8@@ 3f0, test_eax_eax, je_0x1@@ c@@ 4d, lea_rsi_[rip+0x1c@@ b0@@ 3], mov_rdi_rbp, call_0xffffffffffff8@@ 3d@@ 9, test_eax_eax, je_0x1@@ c@@ 24, lea_rsi_[rip+0x1c@@ 23@@ 7], mov_rdi_rbp, call_0xffffffffffff8@@ 3c@@ 2, test_eax_eax, je_0x1@@ 8@@ 2f, lea_rsi_[rip+0x1c@@ 6@@ 88], mov_rdi_rbp, call_0xffffffffffff8@@ 3a@@ b, test_eax_eax, je_0x1@@ 80@@ 6, lea_rsi_[rip+0x1c@@ 67@@ e], mov_rdi_rbp, call_0xffffffffffff8@@ 3@@ 94, test_eax_eax, je_0x1@@ 6c@@ 4, lea_rsi_[rip+0x1c@@ 89@@ 2], mov_rdi_rbp, call_0xffffffffffff8@@ 37d, mov_ebx_eax, mov_dword_ptr_[rsp+8]@@ _0x18, test_eax_eax, jne_0x@@ da@@ f, mov_rax_qword_ptr_[rsp+0x80], mov_qword_ptr_[rsp+0x20]_rax, test_rax_rax, je_0xe@@ 82, mov_rdi_qword_ptr_[rax], xor_edx_edx, lea_rsi_[rip+0x1c@@ a@@ 9d], call_0x1@@ 3d@@ 84, mov_qword_ptr_[rsp+0x20]_rax, mov_rax_qword_ptr_[rsp+0x80], test_rax_rax, je_0x1@@ 77@@ 0, mov_rdi_qword_ptr_[rax], xor_edx_edx, lea_rsi_[rip+0x1c@@ 26@@ 6], call_0x1@@ 3d@@ fd, mov_dword_ptr_[rsp+0x58]_eax, mov_rax_qword_ptr_[rsp+0x80], cmp_qword_ptr_[rsp+0x20]_0, setne@@ _byte_ptr_[rsp+0x@@ 50], test_rax_rax, je_0xe@@ 37, mov_rdi_qword_ptr_[rax], xor_edx_edx, lea_rsi_[rip+0x1c@@ a4@@ 9], call_0x1@@ 3d@@ 2c, mov_qword_ptr_[rsp+0x30]_rax, mov_rax_qword_ptr_[rsp+0x80], test_rax_rax, je_0xe@@ 19, mov_rdi_qword_ptr_[rax], xor_edx_edx, lea_rsi_[rip+0x1c@@ a@@ 2a], call_0x1@@ 3d@@ 05, mov_qword_ptr_[rsp+0x38]_rax, mov_rax_qword_ptr_[rsp+0x80], test_rax_rax, je_0xd@@ fb, mov_rdi_qword_ptr_[rax], xor_edx_edx, lea_rsi_[rip+0x1c@@ a0@@ b], call_0x1@@ 3c@@ de, mov_qword_ptr_[rsp+0x40]_rax, mov_rax_qword_ptr_[rsp+0x80], test_rax_rax, je_0x@@ dd@@ d, mov_rdi_qword_ptr_[rax], xor_edx_edx, lea_rsi_[rip+0x1c@@ 5@@ e0], call_0x1@@ 3c@@ b7, test_rax_rax, je_0xc@@ 8e, movzx_edx_byte_ptr_[rax], cmp_edx@@ _0x7@@ 5, jne_0xc@@ 3f, cmp_byte_ptr_[rax+1]@@ _0x6e, jne_0xc@@ 35, movzx_ecx_byte_ptr_[r@@ ax+2], mov_dword_ptr_[rsp+0x18]_ecx, test_ecx_ecx, jne_0xc@@ 25, mov_rax_qword_ptr_[rsp+0x80], test_rax_rax, je_0xd@@ 94, mov_rdi_qword_ptr_[rax], xor_edx_edx, lea_rsi_[rip+0x1c@@ 99@@ c], call_0x1@@ 3c@@ 66, mov_rbp_rax, test_rax_rax, je_0x1@@ 54@@ 5, lea_rsi_[rip+0x1c@@ 98@@ 9], mov_rdi_rax, call_0xffffffffffff7@@ fd@@ b, xor_ecx_ecx, test_rax_rax, setne_cl, lea_rsi_[rip+0x1c@@ 97@@ d], mov_rdi_rbp, mov_dword_ptr_[rsp+0x10]_ecx, call_0xffffffffffff7@@ fc0, mov_ecx_dword_ptr_[rsp+0x10], mov_r9_rax, mov_eax_ecx, or_eax_4, test_r9_r9, cmove_eax_ecx, lea_rsi_[rip+0x1c@@ 96@@ 6], mov_rdi_rbp, mov_dword_ptr_[rsp+0x10]_eax, call_0xffffffffffff7f@@ 9b, mov_ecx_dword_ptr_[rsp+0x10], mov_r9_rax, mov_eax_ecx, or_eax@@ _8, test_r9_r9, cmove_eax_ecx, lea_rsi_[rip+0x1b@@ fe@@ 9], mov_rdi_rbp, mov_dword_ptr_[rsp+0x10]_eax, call_0xffffffffffff7@@ f7@@ 6, mov_ecx_dword_ptr_[rsp+0x10], mov_r9_rax, mov_eax_ecx, or_eax@@ _0x10, test_r9_r9, cmove_eax_ecx, lea_rsi_[rip+0x1c@@ 92@@ 9], mov_rdi_rbp, mov_dword_ptr_[rsp+0x10]_eax, call_0xffffffffffff7f@@ 51, mov_ecx_dword_ptr_[rsp+0x10], mov_r9_rax, mov_eax_ecx, or_eax_0x20, test_r9_r9, cmove_eax_ecx, lea_rsi_[rip+0x1c@@ 90@@ a], mov_rdi_rbp, mov_dword_ptr_[rsp+0x10]_eax, call_0xffffffffffff7f@@ 2c, mov_ecx_dword_ptr_[rsp+0x10], mov_r9_rax, mov_eax_ecx, or_eax@@ _0x40, test_r9_r9, cmove_eax_ecx, lea_rsi_[rip+0x1b@@ f6@@ d], mov_rdi_rbp, mov_dword_ptr_[rsp+0x10]_eax, call_0xffffffffffff7@@ f0@@ 7, mov_ecx_dword_ptr_[rsp+0x10], mov_r9_rax, mov_eax_ecx, or_al@@ _0x80, test_r9_r9, cmove_eax_ecx, lea_rsi_[rip+0x1c@@ 8c@@ 4], mov_rdi_rbp, mov_dword_ptr_[rsp+0x10]_eax, call_0xffffffffffff7@@ ee@@ 3, mov_ecx_dword_ptr_[rsp+0x10], mov_r9_rax, mov_eax_ecx, or_ah@@ _1, test_r9_r9, cmove_eax_ecx, mov_dword_ptr_[rsp+0x10]_eax, mov_rax_qword_ptr_[rsp+0x80], test_rax_rax, je_0xc@@ 51, mov_rdi_qword_ptr_[rax], xor_edx_edx, lea_rsi_[rip+0x1c@@ 8@@ 8d], call_0x1@@ 3b@@ 1b, mov_rdi_rax, call_0xffffffffffff9@@ 28@@ 3, mov_dword_ptr_[rsp+0x28]_eax, mov_rax_qword_ptr_[rsp+0x80], mov_qword_ptr_[rsp+0x48]_rax, test_rax_rax, je_0x18, mov_rdi_qword_ptr_[rax], xor_edx_edx, lea_rsi_[rip+0x1c@@ 9d@@ 2], call_0x1@@ 3a@@ ec, mov_qword_ptr_[rsp+0x48]_rax, mov_eax_dword_ptr_[rsp+0x58], test_eax_eax, je_0x1f, mov_ecx_dword_ptr_[r13+0x@@ 38], cmp_ecx_eax, je_0x17, mov_edx_eax, lea_rsi_[rip+0x1e@@ 32@@ 1], mov_edi_3, xor_eax_eax, call_0xffffffffffff9@@ 40@@ 2, cmp_byte_ptr_[r@@ 13+0x@@ 49@@ ]_0, jne_0x1c, cmp_byte_ptr_[rsp+0x@@ 50]_0, je_0x15, mov_rsi_qword_ptr_[rsp+0x20], lea_rdi_[r@@ 13+0x@@ 49], mov_edx_0x40, call_0xffffffffffff8@@ 151, mov_eax_dword_ptr_[rip+0x2@@ 2f@@ 87@@ a], or_eax@@ _dword_ptr_[rip+0x2@@ 2f@@ 8@@ 68], jne_0xe, mov_eax_dword_ptr_[rsp+0x28], test_eax_eax, jg_0x@@ b@@ f7, call_0xffffffffffff97@@ d2, mov_rbp_rax, test_rax_rax, je_0x10@@ 68, mov_eax_dword_ptr_[r13+0x@@ 44], mov_byte_ptr_[rbp+0x@@ 29@@ ]_bl, mov_dword_ptr_[rbp+0x@@ 10]_eax, movzx_eax_byte_ptr_[r@@ sp+8], mov_byte_ptr_[rbp+0x@@ 28@@ ]_al, movzx_eax_byte_ptr_[r@@ sp+0x18], mov_byte_ptr_[rbp+0x@@ 2a@@ ]_al, mov_eax_dword_ptr_[rsp+0x10], mov_dword_ptr_[rbp+0x@@ 14]_eax, movzx_eax_byte_ptr_[rsp+0x@@ 28], mov_byte_ptr_[rbp+0x@@ 2b@@ ]_al, mov_rax_qword_ptr_[rsp+0x48], test_rax_rax, je_0xe, mov_rdi_rax, call_0xffffffffffff7f@@ 9b, mov_qword_ptr_[rbp+0x@@ 40]_rax, mov_rsi_qword_ptr_[rsp+0x30], lea_rbx_[r@@ bp+0x@@ 88], test_rsi_rsi, je_0x1d, mov_ecx_5, lea_rdi_[rip+0x1b@@ fc@@ 2], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x@@ be@@ d, mov_rsi_qword_ptr_[rsp+0x38], test_rsi_rsi, je_0x1d, mov_ecx_5, lea_rdi_[rip+0x1b@@ f@@ 9d], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0xb@@ df, mov_rsi_qword_ptr_[rsp+0x40], test_rsi_rsi, je_0x1d, mov_ecx_5, lea_rdi_[rip+0x1b@@ f@@ 78], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0xb@@ d2, mov_rax_qword_ptr_[rsp+0x80], test_rax_rax, je_0xa@@ ee, mov_rdi_qword_ptr_[rax], xor_edx_edx, lea_rsi_[rip+0x1c@@ 74@@ 1], call_0x13@@ 99@@ f, mov_r8_rax, test_rax_rax, je_0x20, mov_rsi_rax, mov_ecx_5, lea_rdi_[rip+0x1b@@ f@@ 30], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0xa@@ c3, mov_rax_qword_ptr_[rsp+0x80], test_rax_rax, je_0x@@ aa@@ 6, mov_rdi_qword_ptr_[rax], xor_edx_edx, lea_rsi_[rip+0x1c@@ 70@@ 1], call_0x13@@ 957, mov_r8_rax, test_rax_rax, je_0x20, mov_rsi_rax, mov_ecx_5, lea_rdi_[rip+0x1b@@ ee@@ 8], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0xa@@ e1, mov_rax_qword_ptr_[rsp+0x80], test_rax_rax, je_0xa@@ 5e, mov_rdi_qword_ptr_[rax], xor_edx_edx, lea_rsi_[rip+0x20@@ 84@@ b], call_0x13@@ 9a@@ f, test_eax_eax, je_5, mov_dword_ptr_[rbp+0x@@ 18]_eax, mov_rax_qword_ptr_[rsp+0x80], test_rax_rax, je_0xa@@ 35, mov_rdi_qword_ptr_[rax], xor_edx_edx, lea_rsi_[rip+0x1c@@ 6@@ 98], call_0x1@@ 38@@ e6, mov_r8_rax, test_rax_rax, je_0x20, mov_rsi_rax, mov_ecx_5, lea_rdi_[rip+0x1b@@ e7@@ 7], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0xa@@ 89, mov_rax_qword_ptr_[rsp+0x80], test_rax_rax, je_0x@@ 9ed, mov_rdi_qword_ptr_[rax], xor_edx_edx, lea_rsi_[rip+0x1c@@ 65@@ d], call_0x1@@ 38@@ 9e, mov_r8_rax, test_rax_rax, je_0x20, mov_rsi_rax, mov_ecx_5, lea_rdi_[rip+0x1b@@ e@@ 2f], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0xa@@ c5, mov_rax_qword_ptr_[rsp+0x80], test_rax_rax, je_0x@@ 9a@@ 5, mov_rdi_qword_ptr_[rax], xor_edx_edx, lea_rsi_[rip+0x1c@@ 6@@ 22], call_0x1@@ 38@@ f6, test_eax_eax, je_8, cdqe, mov_qword_ptr_[rbp+0x20]_rax, mov_rdi_qword_ptr_[rsp+0x80], test_rdi_rdi, je_0x1@@ 5@@ 91, mov_rdi_qword_ptr_[rdi], mov_edx_4, lea_rsi_[rip+0x1c@@ 5f@@ b], call_0x1@@ 38@@ c7, mov_rdi_qword_ptr_[rsp+0x80], mov_dword_ptr_[rbp+0x@@ 30]_eax, call_0x1@@ 36@@ 47, mov_rdi_r12, call_0xa0@@ bf, movzx_eax_byte_ptr_[rbp+0x@@ 2a], inc_eax, cmp_al_4, ja_0x@@ d@@ 85, lea_rdx_[rip+0x1c@@ 85@@ 9], movzx_eax_al, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_r8d_0xffffffff, jmp_0xfffffffffffff0@@ cc, lea_rdx_[r@@ 14+0x@@ 49], jmp_0xfffffffffffff@@ 32@@ a, cmp_byte_ptr_[rip+0x2@@ 2f@@ 4@@ fd@@ ]_0, jne_0xffffffffffffe@@ ed@@ f, jmp_0xfffffffffffff6@@ 92, lea_rsi_[rip+0x1c@@ 3e@@ e], mov_edi_7, xor_eax_eax, call_0xffffffffffff90@@ f4, or_byte_ptr_[r@@ 13+0x@@ 48@@ ]_2, jmp_0xfffffffffffff@@ 601, movzx_edx_byte_ptr_[r@@ bp+0x@@ 2b], lea_rax_[rip+0x@@ 1fb@@ 28], cmp_dl@@ _2, je_0x22, lea_rax_[rip+0x@@ 1b@@ d@@ 39], cmp_dl@@ _3, je_0x16, test_dl_dl, lea_rax_[rip+0x@@ 1b@@ d@@ 33], lea_rdx_[rip+0x1b@@ d@@ 1f], cmove_rax_rdx, lea_rdi_[rsp+0x60], sub_rsp_8, movsx@@ _r10@@ _byte_ptr_[r@@ bp+0x28], movsxd_r9@@ _dword_ptr_[r@@ bp+0x@@ 34], push_0, lea_r8_[rip+0x@@ 1c@@ 2c@@ 1], lea_rdx_[rip+0x1c@@ 2c@@ a], push_rcx, lea_rcx_[rip+0x@@ 1c@@ 3@@ 14], lea_rsi_[rip+0x1c@@ 2c@@ 4], push_rcx, mov_rcx_r10, push_rax, lea_rax_[rip+0x@@ 1c@@ 30@@ b], push_rax, xor_eax_eax, call_0x6e@@ fe, movdqu@@ _xmm5@@ _xmmword_ptr_[r@@ sp+0x@@ 90], movdqu@@ _xmm6@@ _xmmword_ptr_[r@@ sp+0x@@ a0], movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0x@@ e0@@ ]_xmm6, add_rsp_0x30, jmp_0xffffffffffffe@@ fb@@ b, xor_ebx_ebx, lea_rbp_[rsp+0x@@ b0], mov_rdi_rbp, call_0x9@@ f7@@ 5, lea_rdi_[rsp+0x60], sub_rsp_8, push_0, lea_rax_[rip+0x@@ 1c@@ 3d@@ 9], lea_r9_[rip+0x@@ 1b@@ da@@ 7], push_1, lea_r8_[rip+0x@@ 1c@@ 3@@ bb], mov_rcx_rbx, push_rax, lea_rdx_[rip+0x1c@@ 27@@ 6], lea_rsi_[rip+0x1c@@ 23@@ 3], xor_eax_eax, call_0x6e@@ 7a, movdqu@@ _xmm7@@ _xmmword_ptr_[r@@ sp+0x@@ 80], movdqu@@ _xmm5@@ _xmmword_ptr_[r@@ sp+0x@@ 90], mov_edi_dword_ptr_[r@@ 13+0x@@ 3c], movaps_xmmword_ptr_[rsp+0xc0]_xmm7, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm5, mov_rsi_rbp, add_rsp_0x20, call_0x8f@@ 98, mov_rdi_rbp, call_0x9f@@ 20, mov_rdi_qword_ptr_[rsp+0x80], call_0x1@@ 34@@ 93, jmp_0xfffffffffffff@@ 4b@@ 5, movzx_eax_byte_ptr_[rbp+0x@@ 29], lea_rsi_[rip+0x1c@@ 298], cmp_al_2, je_0x21, lea_rsi_[rip+0x1b@@ f@@ 19], cmp_al_3, je_0x16, cmp_al_1, lea_rsi_[rip+0x20@@ 25@@ 2], lea_rax_[rip+0x@@ 1c@@ 0@@ 4a], cmove_rsi_rax, movsx_edi_byte_ptr_[r@@ bp+0x28], call_0xffffffffffff8@@ 50@@ c, cmp_byte_ptr_[r@@ 13+0x@@ 49@@ ]_0, mov_r8d_dword_ptr_[r@@ 13+0x@@ 44], mov_r11d_dword_ptr_[r@@ 13+0x38], mov_r9_rax, lea_rdx_[rip+0x@@ 1bb@@ e2], je_6, lea_rdx_[r@@ 13+0x@@ 49], mov_eax_dword_ptr_[rsp+0x10], mov_edi_7, push_rax, xor_eax_eax, push_rcx, mov_ecx_r11d, push_rbx, push_rsi, lea_rsi_[rip+0x1d@@ e4@@ 9], call_0xffffffffffff8@@ f0@@ 1, movzx_eax_byte_ptr_[r@@ bp+0x28], add_rsp_0x20, cmp_al@@ _7, je_0x2@@ 02, sub_eax_3, cmp_al@@ _0x15, ja@@ _0x16, lea_rdx_[rip+0x1c@@ 6@@ 16], movzx_eax_al, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_ebx@@ _0xffffffea, mov_dword_ptr_[rbp+0x@@ 34]@@ _ebx, mov_rdi_rbp, call_0xffffffffffff9a@@ 86, jmp_0xfffffffffffff@@ 3e8, test_ebx_ebx, js_0xfffffffffffffe@@ 35, jmp_0xfffffffffffff@@ 22@@ 2, cmp_byte_ptr_[rbp+0x@@ 2a]_0, je_7, or_byte_ptr_[r@@ 13+0x@@ 48@@ ]_8, mov_rdi_rbp, call_0xffffffffffffda@@ 82, mov_ebx_eax, jmp_0xffffffffffffffd8, xor_edx_edx, mov_esi_2, mov_edi_1, call_0xffffffffffff7@@ 8@@ 3c, mov_r13d_eax, test_eax_eax, js_0x2@@ c9, lea_rax_[rip+0x@@ 12@@ d@@ f0@@ 5], xor_esi_esi, xor_edx_edx, mov_ecx_edx, add_edx@@ _0x20, mov_qword_ptr_[rax@@ +rcx@@ ]_rsi, mov_qword_ptr_[rax@@ +rcx@@ +@@ 8]_rsi, mov_qword_ptr_[rax@@ +rcx+0x1@@ 0]_rsi, mov_qword_ptr_[rax@@ +rcx+0x1@@ 8]_rsi, cmp_edx@@ _0x60, jb_0xffffffffffffff@@ e5, add_rax_rdx, xor_edx_edx, mov_qword_ptr_[rax]_0, mov_dword_ptr_[rax+8]_0, mov_word_ptr_[rax+0x@@ c@@ ]_dx, movdqa_xmm0_xmmword_ptr_[r@@ ip+0x@@ 1d@@ c5@@ 5], mov_ecx_1, movzx_eax_byte_ptr_[r@@ bp+0x28], mov_esi_0x6@@ b@@ 63, mov_word_ptr_[r@@ ip+0x@@ 12@@ d@@ eb@@ 0@@ ]_cx, mov_word_ptr_[r@@ ip+0x@@ 12@@ d@@ eb@@ c@@ ]_si, mov_byte_ptr_[rip+0x@@ 12@@ d@@ eb@@ 7]_0, mov_dword_ptr_[rip+0x@@ 12@@ de@@ 8@@ 0]@@ _0x15, movups_xmmword_ptr_[r@@ ip+0x@@ 12@@ de@@ 94@@ ]_xmm0, cmp_al@@ _0xf, je_0x7@@ a9, cmp_al@@ _0xe, je_0x6@@ 3a, mov_dword_ptr_[rbp+0x@@ 34]@@ _0xffffffea, mov_dword_ptr_[rsp+8]_0, xor_ebx_ebx, mov_r12d@@ _0xffffffea, cmp_byte_ptr_[r@@ 14+0x@@ 49@@ ]_0, mov_r8d_dword_ptr_[r@@ 14+0x@@ 44], mov_ecx_dword_ptr_[r14+0x@@ 38], lea_rdx_[rip+0x1b@@ 8@@ 88], je_6, lea_rdx_[r@@ 14+0x@@ 49], sub_rsp_8, mov_eax_dword_ptr_[rsp+0x10], mov_r9d_r12d, push_rax, lea_rsi_[rip+0x1d@@ 96@@ d], mov_edi_7, xor_eax_eax, call_0xffffffffffff8b@@ a6, movsxd_rcx_dword_ptr_[r@@ bp+0x@@ 34], lea_rdi_[rsp+0x70], mov_r9_rbx, lea_r8_[rip+0x@@ 1b@@ e@@ 58], lea_rdx_[rip+0x1b@@ e0@@ a], lea_rsi_[rip+0x1b@@ dc@@ 7], xor_eax_eax, mov_qword_ptr_[rsp]_0, call_0x6a@@ 06, movdqu@@ _xmm7@@ _xmmword_ptr_[r@@ sp+0x@@ 70], mov_rsi_qword_ptr_[rsp+0x28], movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm7, mov_edi_dword_ptr_[r@@ 14+0x@@ 3c], movdqu@@ _xmm7@@ _xmmword_ptr_[r@@ sp+0x@@ 80], movaps_xmmword_ptr_[rsp+0xc0]_xmm7, call_0x8b@@ 29, pop_r11, pop_rbx, test_eax_eax, je_0x@@ b0@@ 8, mov_rdi_qword_ptr_[rsp+0x18], call_0x9a@@ a4, mov_rdi_r14, call_0xffffffffffff9@@ 55@@ c, test_r13d_r13d, js_0xffffffffffff@@ f@@ 10@@ c, mov_dword_ptr_[rsp+0x28]_0, mov_r10d_dword_ptr_[rsp+8], test_r10d_r10d, je_0xbd, lea_rax_[rip+0x@@ 12@@ de@@ 11], mov_qword_ptr_[rsp+0x10]_rax, xor_r14d_r14d, xor_r12d_r12d, xor_ebx_ebx, mov_edx_dword_ptr_[rsp+8], mov_eax_0x1@@ 0000, sub_edx@@ _r12d, cmp_edx@@ _0x10000, cmovge@@ _edx_eax, mov_rax_qword_ptr_[rsp+0x10], mov_r9d_dword_ptr_[r@@ ip+0x@@ 12@@ dd@@ 47], movsxd_rdx_edx, lea_rsi@@ _[rax+r@@ bx], lea_r8_[rip+0x12@@ dd@@ 51], mov_ecx_0x40@@ 40, mov_edi_r13d, call_0xffffffffffff7@@ 90@@ 9, test_eax_eax, js_0x1@@ 2, add_r12d_eax, cmp_r12d_dword_ptr_[r@@ sp+8], jge_0x@@ 3e, movsxd_rbx@@ _r12d, jmp_0xffffffffffffffb3, call_0xffffffffffff7@@ 6b@@ 0, mov_ecx_dword_ptr_[rax], cmp_ecx@@ _0xb, sete_dl, cmp_ecx@@ _4, sete_al, or_dl_al, je_0x63, cmp_r14d@@ _0x7@@ a@@ 11@@ f, jg_0x5@@ a, mov_edi@@ _0x3e8, call_0xffffffffffff7@@ 4@@ 9b, add_r14d@@ _0x3e8, jmp_0xffffffffffffff7f, mov_ecx_r12d, mov_edx_r14d, lea_rsi_[rip+0x1d@@ 89@@ 5], mov_edi_7, xor_eax_eax, call_0xffffffffffff8a@@ 56, mov_edi_r13d, call_0xffffffffffff7@@ 00@@ e, test_eax_eax, jne_0x37, mov_rdi_qword_ptr_[rsp+0x20], call_0xffffffffffff7@@ 9@@ 20, mov_r9d_dword_ptr_[rsp+0x@@ 28], test_r9d_r9d, je_0xffffffffffff@@ ea@@ 1b, jmp_0xffffffffffffea@@ 06, mov_edx_r14d, lea_rsi_[rip+0x1d@@ 8@@ 36], mov_edi_3, xor_eax_eax, call_0xffffffffffff8a@@ 17, jmp_0xffffffffffffffc1, mov_edx_r13d, lea_rsi_[rip+0x1d@@ 85@@ e], mov_edi_3, xor_eax_eax, call_0xffffffffffff8@@ 9@@ ff, jmp_0xffffffffffffffb5, mov_ecx_dword_ptr_[r13+0x@@ 40], mov_edx_dword_ptr_[r13+0x@@ 44], mov_r8d_dword_ptr_[r@@ 13+0x@@ 3c], lea_rsi_[rip+0x1d@@ 9@@ 8d], mov_edi_3, xor_eax_eax, call_0xffffffffffff8@@ 9d@@ e, jmp_0xffffffffffffec@@ 59, mov_edx_r12d, lea_rsi_[rip+0x1b@@ ea@@ 0], mov_edi_3, xor_eax_eax, call_0xffffffffffff8@@ 9c@@ 3, jmp_0xffffffffffffec@@ 73, mov_dword_ptr_[rbp+0x@@ 34]_eax, mov_dword_ptr_[rsp+8]_0, mov_r12d_eax, xor_ebx_ebx, jmp_0xfffffffffffffd@@ cf, cmp_edx@@ _0x6e, jne_0x1a, cmp_byte_ptr_[rax+1]@@ _0x6c, jne_0x14, cmp_byte_ptr_[rax+@@ 2]_0, mov_dword_ptr_[rsp+0x18]_1, je_0xfffffffffffff@@ 3c@@ a, cmp_edx@@ _0x73, jne_0x1a, cmp_byte_ptr_[rax+1]@@ _0x68, jne_0x14, cmp_byte_ptr_[rax+@@ 2]_0, mov_dword_ptr_[rsp+0x1@@ 8]_2, je_0xfffffffffffff@@ 3a@@ d, cmp_edx@@ _0x65, je_0x2@@ 52, mov_dword_ptr_[rsp+0x18]@@ _0xffffffff, jmp_0xfffffffffffff3@@ 96, lea_rcx_[rip+0x@@ 1fc@@ 50], jmp_0xfffffffffffff86@@ b, lea_rbp_[rip+0x@@ 1b@@ 46@@ c], mov_edx_dword_ptr_[r13+0x@@ 44], mov_rcx_rbp, lea_rsi_[rip+0x1d@@ 8@@ 1f], mov_edi_3, xor_eax_eax, call_0xffffffffffff8@@ 928, jmp_0xfffffffffffff97@@ 8, mov_edx_0x80, lea_rsi_[rip+0x1b@@ a@@ e8], mov_rdi_r12, call_0xffffffffffff7@@ 14@@ f, jmp_0xffffffffffffee@@ 5e, call_0x6@@ 56@@ 5, test_eax_eax, jne_0x3@@ 37, call_0x5@@ 148, test_eax_eax, je_0x3@@ 11, mov_edx_0x80, lea_rsi_[rip+0x1b@@ add@@ ], mov_rdi_r12, call_0xffffffffffff7@@ 11c, jmp_0xffffffffffffe@@ 6a@@ 9, mov_edx_dword_ptr_[r13+0x@@ 44], lea_rsi_[rip+0x1d@@ 78@@ f], mov_edi_3, call_0xffffffffffff88@@ c2, mov_rdi_r12, call_0x98@@ 2a, mov_rdi_r13, call_0xffffffffffff9@@ 2e@@ 2, jmp_0xffffffffffffe@@ dd@@ 4, lea_rsi_[rip+0x1b@@ c5@@ 6], mov_edi_7, xor_eax_eax, call_0xffffffffffff88@@ 9a, lea_rdi_[rip+0x12@@ da@@ 7e], call_0xffffffffffff7@@ 70@@ e, lea_rax_[rip+0x@@ 12@@ da@@ 62], mov_rbx@@ _-0x@@ 10, cmp_qword_ptr_[r@@ ax@@ ]_rax, je_0x@@ 94@@ 9, lea_rdi_[rip+0x12@@ da@@ 5b], call_0xffffffffffff7@@ 74@@ b, jmp_0xfffffffffffff8@@ 36, mov_dword_ptr_[rsp+8]@@ _0xe, jmp_0xfffffffffffff@@ 17@@ 3, mov_byte_ptr_[rsp+0x@@ 50]_0, mov_dword_ptr_[rsp+0x58]_0, mov_qword_ptr_[rsp+0x30]_0, mov_qword_ptr_[rsp+0x38]_0, mov_qword_ptr_[rsp+0x40]_0, mov_dword_ptr_[rsp+0x18]@@ _0xffffffff, mov_dword_ptr_[rsp+0x10]_0, xor_edi_edi, call_0xffffffffffff86@@ 4a, mov_dword_ptr_[rsp+0x28]_eax, mov_qword_ptr_[rsp+0x48]_0, jmp_0xfffffffffffff@@ 3e@@ 6, xor_edi_edi, mov_eax_4, jmp_0xfffffffffffff6a@@ 2, lea_rdi_[rbp+0x@@ c9], mov_edx_0x40, mov_rsi_r8, call_0xffffffffffff7@@ 55@@ 8, jmp_0xfffffffffffff5@@ 2f, mov_dword_ptr_[rsp+8]@@ _0xf, jmp_0xfffffffffffff0@@ f0, cmp_eax_2, je_0x4@@ 33, cmp_dword_ptr_[rsp+0x@@ 28@@ ]_3, lea_rdx_[rip+0x1b@@ 43@@ 6], jne_0x13, mov_dword_ptr_[rip+0x22@@ ec@@ 48]_1, lea_rdx_[rip+0x1b@@ 4@@ 1b], lea_rsi_[rip+0x1@@ bb@@ e1], mov_edi_7, xor_eax_eax, call_0xffffffffffff87@@ 9b, jmp_0xfffffffffffff@@ 3d@@ 4, lea_rdi_[rbp+0x@@ 10@@ a], mov_edx_0x40, mov_rsi_r8, call_0xffffffffffff7@@ 4f@@ 2, jmp_0xfffffffffffff5@@ 11, lea_rdi_[rbp+0x@@ 14@@ b], mov_edx_0x40, mov_rsi_r8, call_0xffffffffffff7@@ 4d@@ 9, jmp_0xfffffffffffff@@ 56@@ 9, mov_rsi_qword_ptr_[rsp+0x30], mov_edx_0x40, mov_rdi_rbx, call_0xffffffffffff7@@ 4c@@ 2, jmp_0xfffffffffffff@@ 40@@ 7, mov_rsi_qword_ptr_[rsp+0x38], lea_rdi_[rbp+0x@@ 48], mov_edx_0x40, call_0xffffffffffff7@@ 4a@@ a, jmp_0xfffffffffffff4@@ 14, mov_rsi_qword_ptr_[rsp+0x40], lea_rdi_[rbp+0x@@ 1c@@ d], mov_edx_0x40, call_0xffffffffffff7@@ 48@@ f, jmp_0xfffffffffffff4@@ 1e, cmp_byte_ptr_[rax+1]@@ _0x78, jne_0xfffffffffffffd@@ b0, cmp_byte_ptr_[rax+@@ 2]_0, jne_0xfffffffffffffd@@ a6, mov_dword_ptr_[rsp+0x1@@ 8]_3, jmp_0xfffffffffffff@@ 13@@ 6, lea_rdi_[rbp+0x@@ 18@@ c], mov_edx_0x40, mov_rsi_r8, call_0xffffffffffff7@@ 45@@ 5, jmp_0xfffffffffffff5@@ 2d, mov_edx_dword_ptr_[r14+0x@@ 44], lea_rsi_[rip+0x1b@@ 89@@ 1], mov_edi_7, xor_eax_eax, call_0xffffffffffff8@@ 6c@@ 9, mov_rdi_qword_ptr_[rsp+0x20], call_0xffffffffffff7@@ 5@@ 9f, jmp_0xffffffffffffe@@ 6@@ 93, mov_edx_0x80, lea_rsi_[rip+0x1b@@ 7c@@ 3], mov_rdi_r12, call_0xffffffffffff6e@@ 11, jmp_0xffffffffffffe@@ 3@@ 9e, call_0x4e@@ 17, jmp_0xfffffffffffffc@@ d7, mov_edx_0x1@@ 00000, xor_esi_esi, lea_rdi_[rip+0x12@@ d@@ 8b@@ f], call_0xffffffffffff6b@@ 1f, lea_rdi_[rip+0x2d@@ 5b@@ 3], call_0xffffffffffff7@@ 42@@ 3, mov_eax_dword_ptr_[rip+0x2@@ d5@@ 50], lea_r9_[rip+0x@@ 1b@@ 8@@ 3a], push_rax, mov_eax_dword_ptr_[rip+0x2@@ d@@ 54@@ 6], lea_r8_[rip+0x@@ 1d@@ 16@@ b], push_rax, mov_eax_dword_ptr_[rip+0x2@@ d5@@ 3c], mov_ecx_0x1@@ 00000, push_rax, mov_eax_dword_ptr_[rip+0x2@@ d5@@ 34], mov_edx_1, push_rax, mov_esi_0x1@@ 00000, lea_rdi_[rip+0x12@@ d@@ 86@@ e], xor_eax_eax, call_0xffffffffffff7@@ 34c, mov_dword_ptr_[rsp+0x28]_eax, lea_rdi_[rip+0x2d@@ 55@@ c], add_rsp_0x20, call_0xffffffffffff7@@ 4@@ 28, lea_rdi_[rip+0x12@@ d@@ 6e@@ c], call_0xffffffffffff7@@ 3b@@ c, mov_r12_qword_ptr_[rip+0x@@ 12@@ d6@@ 80], cmp_r12_rbx, je_0x2@@ 2e, lea_rax_[rip+0x@@ 12@@ d8@@ 30], mov_qword_ptr_[rsp+0x10]_rax, mov_rax_r14, mov_dword_ptr_[rsp+0x28]@@ _r13d, mov_r14_rbp, mov_r13_rbx, mov_rbp_rax, jmp_0x13, mov_r12_qword_ptr_[r12], add_dword_ptr_[r@@ sp+@@ 8]_eax, cmp_r12@@ _r13, je_0x1@@ f0, cmp_byte_ptr_[r@@ 12+0x@@ 49@@ ]_0, lea_rax_[rip+0x@@ 1f7@@ f1], je_7, lea_rax_[r@@ 12+0x@@ 49], movsxd_rdi_dword_ptr_[r@@ sp+8], mov_ebx@@ _0x100000, sub_rsp_8, sub_ebx@@ _edi, add_rdi@@ _qword_ptr_[rsp+0x18], push_rax, mov_eax_dword_ptr_[r12+0x@@ 44], movsxd_rsi@@ _ebx, push_rax, lea_r9_[rip+0x@@ 1b@@ 17@@ f], lea_r8_[rip+0x@@ 1d@@ 10@@ 6], mov_eax_dword_ptr_[r12+0x@@ 40], mov_rcx_-1, push_rax, mov_edx_1, mov_eax_dword_ptr_[r12+0x@@ 3c], push_rax, mov_eax_dword_ptr_[r12+0x@@ 38], push_rax, xor_eax_eax, call_0xffffffffffff7@@ 28@@ 6, add_rsp_0x30, cmp_ebx_eax, jg_0xffffffffffffff@@ 83, mov_rax_rbp, lea_rdi_[rip+0x12@@ d6@@ 2f], mov_r13d_dword_ptr_[rsp+0x@@ 28], mov_rbp_r14, mov_r14_rax, call_0xffffffffffff7@@ 35@@ 4, mov_dword_ptr_[rsp+8]_0, xor_ebx_ebx, mov_r12d@@ _0xffffff@@ e4, mov_dword_ptr_[rbp+0x@@ 34]@@ _r12d, jmp_0xfffffffffffff88@@ 1, lea_rdi_[rip+0x2d@@ 49@@ f], call_0xffffffffffff7@@ 2c@@ f, mov_r12d_dword_ptr_[rip+0x2@@ d4@@ bb], test_r12d_r12d, je_0x8f, mov_r8d_dword_ptr_[rip+0x2@@ d@@ 4a@@ f], mov_edx_0x1@@ 00000, sub_edx@@ _r8d, lea_r12_[rip+0x@@ 2d@@ 4b@@ 4], movsxd_rdx_edx, lea_rsi_[r@@ 8+r@@ 12], mov_ecx_0x1@@ 00000, lea_rdi_[rip+0x12@@ d7@@ 21], mov_dword_ptr_[rsp+0x30]@@ _r8d, mov_qword_ptr_[rsp+0x28]_r8, mov_qword_ptr_[rsp+0x10]_rdx, call_0xffffffffffff6b@@ 92, mov_r9d_dword_ptr_[rsp+0x@@ 30], mov_dword_ptr_[rsp+8]@@ _0x100000, test_r9d_r9d, mov_rdx_qword_ptr_[rsp+0x10], mov_r8_qword_ptr_[rsp+0x28], mov_ebx@@ _0x100000, jne_0x7@@ fd, lea_rdi_[rip+0x2d@@ 42@@ 1], call_0xffffffffffff7@@ 2b@@ 1, xor_r12d_r12d, mov_dword_ptr_[rbp+0x@@ 34]_0, jmp_0xfffffffffffff7@@ e8, lea_rcx_[rip+0x@@ 1f@@ 6b@@ d], jmp_0xfffffffffffff@@ 44@@ 8, mov_ebx_dword_ptr_[rip+0x2@@ d@@ 42@@ 7], test_ebx_ebx, jne_0x72, mov_dword_ptr_[rsp+8]_0, xor_ebx_ebx, jmp_0xffffffffffffffc5, mov_dword_ptr_[rip+0x2@@ 2e@@ 8@@ 35@@ ]_1, lea_rdx_[rip+0x1e@@ dd@@ f], jmp_0xfffffffffffffb@@ e1, mov_dword_ptr_[rsp+@@ 8]_4, mov_ebx_2, jmp_0xffffffffffffec@@ 92, mov_dword_ptr_[rsp+@@ 8]_3, mov_ebx@@ _3, jmp_0xffffffffffffec@@ 80, mov_dword_ptr_[rsp+@@ 8]_3, mov_ebx_2, jmp_0xffffffffffffec@@ 6e, lea_rsi_[rip+0x1b@@ 79@@ 5], mov_edi_3, xor_eax_eax, call_0xffffffffffff8@@ 34@@ 1, jmp_0xfffffffffffff3@@ 91, lea_edx_[r@@ bx-1], mov_rbx_rdx, mov_ecx_0x1@@ 00000, lea_rsi_[rip+0x2d@@ 3b@@ 5], lea_rdi_[rip+0x12@@ d6@@ 2e], movsxd_rbx_ebx, call_0xffffffffffff6@@ aa@@ b, mov_dword_ptr_[rsp+8]@@ _ebx, jmp_0xffffffffffffff3a, mov_rax_rbp, mov_r13d_dword_ptr_[rsp+0x@@ 28], mov_rbp_r14, mov_r14_rax, lea_rdi_[rip+0x12@@ d@@ 4a@@ 8], call_0xffffffffffff7@@ 1d8, lea_rdi_[rip+0x12@@ d@@ 4d@@ c], call_0xffffffffffff7@@ 16@@ c, mov_r12_qword_ptr_[rip+0x@@ 12@@ d@@ 4c0], lea_rax_[rip+0x@@ 12@@ d@@ 4b@@ 9], mov_qword_ptr_[rsp+0x28]_rax, cmp_r12_rax, je_0x3@@ d7, lea_rax_[rip+0x@@ 12@@ d@@ 5d@@ 4], mov_qword_ptr_[rsp+0x10]_rax, mov_qword_ptr_[rsp+0x3@@ 8]_rbp, mov_dword_ptr_[rsp+0x4@@ 8]_r13d, mov_qword_ptr_[rsp+0x4@@ 0]_r14, mov_r14d_dword_ptr_[r@@ sp+8], movzx_eax_byte_ptr_[r@@ 12+0x1@@ e0], movzx_r11d_byte_ptr_[r@@ 12+0x1@@ e1], mov_edx_eax, shr_dl@@ _5, mov_ecx_edx, and_ecx_1, mov_dword_ptr_[rsp+8]_ecx, mov_ecx_eax, shr@@ _cl@@ _2, and_ecx_1, mov_dword_ptr_[rsp+0x5@@ 0]_ecx, mov_ecx_eax, shr@@ _cl@@ _1, and_ecx_1, mov_r10d@@ _r11d, mov_ebp_eax, mov_r13d_eax, mov_dword_ptr_[rsp+0x5@@ 8]_ecx, movzx_ecx_byte_ptr_[r@@ 12+0x1@@ 54], and_eax_1, shr@@ _r10@@ b@@ _1, shr@@ _@@ bpl@@ _4, shr@@ _r13@@ b@@ _3, mov_dword_ptr_[rsp+0x5c]_eax, mov_r9_qword_ptr_[r@@ 12+0x1@@ 60], and_r10d@@ _1, and_r11d@@ _1, and_ebp@@ _1, and_r13d@@ _1, lea_rax_[rip+0x@@ 1ec@@ 88], cmp_cl@@ _2, je_0x22, lea_rax_[rip+0x@@ 1a@@ e@@ 99], cmp_cl@@ _3, je_0x16, test_cl_cl, lea_rax_[rip+0x@@ 1a@@ e8@@ 6], lea_rcx_[rip+0x@@ 1a@@ e@@ 8c], cmovne_rax@@ _rcx, cmp_byte_ptr_[r@@ 12+0x1@@ 13]_0, lea_r8_[r@@ 12+0x@@ d2], lea_rcx_[rip+0x@@ 1f@@ 4@@ fd], je_0xa, lea_rcx_[r@@ 12+0x1@@ 13], mov_rdx_qword_ptr_[rsp+0x10], movsxd_rdi@@ _r14d, mov_qword_ptr_[rsp+0x30]_rdi, add_rdx@@ _rdi, sub_rsp_8, mov_rdi_rdx, mov_edx_dword_ptr_[rsp+0x10], mov_ebx@@ _0x100000, push_rdx, sub_ebx@@ _r14d, movsxd_rsi@@ _ebx, push_r10, push_r11, push_rbp, push_r13, mov_edx_dword_ptr_[rsp+0x@@ 80], push_rdx, mov_edx_dword_ptr_[rsp+0x@@ 90], push_rdx, mov_edx_dword_ptr_[rsp+0x@@ 9c], push_rdx, mov_edx_1, push_r9, lea_r9_[rip+0x@@ 1b@@ 44@@ 9], push_rax, lea_rax_[r@@ 12+0x@@ 92], push_r8, lea_r8_[rip+0x@@ 1c@@ e0@@ 6], push_rcx, mov_rcx_-1, push_rax, lea_rax_[r@@ 12+0x@@ 51], push_rax, lea_rax_[r12+0x10], push_rax, xor_eax_eax, call_0xffffffffffff6f@@ 5f, sub_rsp@@ _-0x80, cmp_ebx_eax, jle_0x@@ 2d@@ 4, mov_rbp_qword_ptr_[r@@ 12+0x1@@ e8], lea_r13_[r@@ 12+0x1@@ e8], add_r14@@ d_eax, cmp_r13@@ _rbp, je_0x2@@ 71, mov_ebx@@ _0x100000, jmp_0x12, mov_rbp_qword_ptr_[rbp], add_r14@@ d_eax, cmp_rbp@@ _r13, je_0x2@@ 5a, mov_edx_r14d, lea_rsi_[rip+0x1b@@ 3d@@ 5], mov_rdi_rbp, call_0xffffffffffff7@@ fc@@ e, mov_edx_ebx, sub_edx@@ _r14d, cmp_eax_edx, jl_0xffffffffffffff@@ d7, movsxd_rax_r14d, mov_dword_ptr_[rsp+8]_eax, mov_qword_ptr_[rsp+0x30]_rax, mov_rbp@@ _qword_ptr_[rsp+0x38], mov_r13d_dword_ptr_[rsp+0x@@ 48], mov_r14@@ _qword_ptr_[rsp+0x40], mov_r12d@@ _0xffffff@@ e4, jmp_0x2@@ 02, call_0xffffffffffff6c@@ cb, mov_dword_ptr_[rsp+0x10]_0, jmp_0xffffffffffffeb@@ d6, mov_dword_ptr_[rsp+8]@@ _0x15, mov_ebx_2, jmp_0xffffffffffffe@@ 95@@ 6, call_0xffffffffffff6c@@ 47, mov_eax_dword_ptr_[rax], mov_ecx_dword_ptr_[r14+0x@@ 3c], mov_edx_dword_ptr_[r14+0x@@ 44], test_eax_eax, jle_0x@@ 46, neg_eax, mov_r8d_eax, mov_dword_ptr_[rsp+0x28]_eax, lea_rsi_[rip+0x1b@@ 2e@@ d], xor_eax_eax, mov_edi_7, call_0xffffffffffff8@@ 00@@ d, mov_rdi_qword_ptr_[rsp+0x18], call_0x8@@ f7@@ 3, mov_rdi_r14, call_0xffffffffffff8a@@ 2b, test_r13d_r13d, jns_0xffffffffffff@@ f@@ 4d@@ d, jmp_0xffffffffffffd@@ fb@@ c, xor_eax_eax, mov_r8d_0xffffffff, lea_rsi_[rip+0x1b@@ 2a@@ a], mov_edi_7, call_0xffffffffffff7@@ fc@@ c, mov_rdi_qword_ptr_[rsp+0x18], call_0x8f@@ 32, mov_rdi_r14, call_0xffffffffffff8@@ 9@@ ea, test_r13d_r13d, js_0xffffffffffff@@ df@@ 81, mov_dword_ptr_[rsp+0x28]@@ _0xffffffff, jmp_0xfffffffffffff@@ 48@@ e, cmp_qword_ptr_[rsp+0x20]_0, setne@@ _byte_ptr_[rsp+0x@@ 50], jmp_0xfffffffffffff@@ 6e@@ 5, mov_dword_ptr_[rip+0x2@@ 2d@@ 23@@ 9]_1, xor_ebx_ebx, jmp_0xfffffffffffff@@ 6b@@ 1, mov_dword_ptr_[rsp+8]@@ _0x14, mov_ebx_2, jmp_0xffffffffffffe@@ 8@@ 2b, mov_dword_ptr_[rsp+8]@@ _0x13, mov_ebx_2, jmp_0xffffffffffffe@@ 8@@ 19, movsxd_rax_dword_ptr_[r@@ sp+8], xor_r12d_r12d, mov_qword_ptr_[rsp+0x30]_rax, lea_rdi_[rip+0x12@@ d0@@ d6], call_0xffffffffffff6d@@ c6, mov_rbx_qword_ptr_[rsp+0x30], jmp_0xfffffffffffffa@@ 7d, mov_rbx_qword_ptr_[r@@ 12+0x1@@ f8], lea_rax_[r@@ 12+0x1@@ f8], mov_qword_ptr_[rsp+8]_rax, cmp_rax_rbx, je_0x2@@ 60, movzx_eax_byte_ptr_[rbx+0x@@ 52], mov_r8d_dword_ptr_[rbx+0x@@ 58], inc_eax, mov_ecx_dword_ptr_[rbx+0x@@ 54], cmp_al_4, ja_0x2@@ 89, lea_rsi_[rip+0x1b@@ 6@@ 2d], movzx_eax_al, movsxd_rax_dword_ptr_[r@@ si@@ +rax*4], add_rax_rsi, jmp_rax, mov_dword_ptr_[rsp+8]@@ _r14d, mov_rbp@@ _qword_ptr_[rsp+0x38], mov_r13d_dword_ptr_[rsp+0x@@ 48], mov_r14@@ _qword_ptr_[rsp+0x40], mov_r12d@@ _0xffffff@@ e4, jmp_0xffffffffffffff89, movzx_esi_byte_ptr_[r@@ bx+0x@@ 51], lea_rdx_[rip+0x1b@@ 19@@ 7], cmp_sil@@ _2, je_0x25, lea_rdx_[rip+0x1a@@ e@@ 16], cmp_sil@@ _3, je_0x18, cmp_sil@@ _1, lea_rdx_[rip+0x1a@@ f4@@ a], lea_rsi_[rip+0x1f@@ 14@@ 4], cmovne_rdx@@ _rsi, mov_rdi_qword_ptr_[rsp+0x10], sub_rsp_8, push_r8, mov_ebp_0x1@@ 00000, sub_ebp@@ _r14d, push_rcx, movsxd_r13@@ _r14d, movsxd_rsi@@ _ebp, push_rax, lea_rax_[rbx+0x10], add_rdi@@ _r13, push_rdx, lea_r9_[rip+0x2@@ 1c@@ 88], lea_r8_[rip+0x@@ 1c@@ b@@ 58], push_rax, mov_rcx_-1, mov_edx_1, xor_eax_eax, call_0xffffffffffff6b@@ e9, add_rsp_0x30, cmp_ebp_eax, jle_0x@@ 15@@ d, mov_rbp_qword_ptr_[rbx+0x@@ 68], lea_r11_[r@@ bx+0x@@ 68], add_r14@@ d_eax, cmp_rbp@@ _r11, je_0xab, mov_qword_ptr_[rsp+0x30]@@ _r12, mov_r12_rbx, movzx_eax_byte_ptr_[r@@ bp+0x10], mov_r8d_dword_ptr_[rbp+0x@@ 1c], inc_eax, mov_ecx_dword_ptr_[r@@ bp+0x18], mov_edx_dword_ptr_[rbp+0x@@ 14], cmp_al_4, ja_0x10@@ 5, lea_rsi_[rip+0x1b@@ 55@@ 1], movzx_eax_al, movsxd_rax_dword_ptr_[r@@ si@@ +rax*4], add_rax_rsi, jmp_rax, mov_rdi_qword_ptr_[rsp+0x10], mov_qword_ptr_[rsp+0x5@@ 0]_r11, push_r8, mov_ebx@@ _0x100000, sub_ebx@@ _r14d, push_rcx, movsxd_r13@@ _r14d, movsxd_rsi@@ _ebx, push_rdx, add_rdi@@ _r13, lea_r9_[rip+0x@@ 1b0@@ 31], push_rax, lea_r8_[rip+0x@@ 1c@@ af@@ 3], mov_rcx_-1, mov_edx_1, xor_eax_eax, call_0xffffffffffff6b@@ 4d, add_rsp_0x20, cmp_ebx_eax, jle_0x@@ c1, mov_rbp_qword_ptr_[rbp], mov_r11@@ _qword_ptr_[rsp+0x50], add_r14@@ d_eax, cmp_rbp@@ _r11, jne_0xffffffffffffff@@ 71, mov_rbx_r12, mov_r12@@ _qword_ptr_[rsp+0x30], mov_r13_qword_ptr_[r@@ bx+0x@@ 78], lea_rbp_[r@@ bx+0x@@ 78], cmp_r13@@ _rbp, jne_0x1c, jmp_0x@@ b5, mov_r13_qword_ptr_[r@@ 13], add_r14@@ d_eax, cmp_r13@@ _rbp, je_0xa1, mov_edx_r14d, lea_rsi_[rip+0x1a@@ fb@@ f], mov_rdi_r13, call_0xffffffffffff7@@ ba@@ b, mov_edx_0x1@@ 00000, sub_edx@@ _r14d, cmp_eax_edx, jl_0xffffffffffffff@@ d4, jmp_0xfffffffffffffb@@ da, lea_rax_[rip+0x@@ 1e@@ fb@@ 5], jmp_0xffffffffffffff15, mov_dword_ptr_[rsp+8]@@ _r14d, mov_qword_ptr_[rsp+0x30]@@ _r13, mov_rbp@@ _qword_ptr_[rsp+0x38], mov_r14@@ _qword_ptr_[rsp+0x40], mov_r13d_dword_ptr_[rsp+0x@@ 48], mov_r12d@@ _0xffffff@@ e4, jmp_0xfffffffffffffd@@ 85, mov_rbx_qword_ptr_[rbx], cmp_rbx@@ _qword_ptr_[rsp+8], jne_0xfffffffffffffd@@ ac, mov_r12_qword_ptr_[r12], cmp_r12@@ _qword_ptr_[rsp+0x28], jne_0xfffffffffffff@@ 9a@@ b, movsxd_rax_r14d, mov_dword_ptr_[rsp+8]_eax, mov_qword_ptr_[rsp+0x30]_rax, mov_rbp@@ _qword_ptr_[rsp+0x38], mov_r13d_dword_ptr_[rsp+0x@@ 48], mov_r14@@ _qword_ptr_[rsp+0x40], xor_r12d_r12d, jmp_0xfffffffffffffd@@ 45, lea_rax_[rip+0x@@ 1e@@ f2@@ 1], jmp_0xfffffffffffffd@@ ad, mov_eax_4, jmp_0xffffffffffffea@@ 8c, lea_rax_[rip+0x@@ 12@@ ce@@ ea], lea_rdi_[rax@@ +rdx], mov_rsi_r12, mov_rdx_r8, call_0xffffffffffff6a@@ d0, jmp_0xfffffffffffff7f@@ 3, mov_dword_ptr_[rsp+8]@@ _0x16, mov_ebx_2, jmp_0xffffffffffffe@@ 4d@@ 3, mov_dword_ptr_[rsp+@@ 8@@ ]_7, mov_ebx@@ _3, jmp_0xffffffffffffe@@ 4c@@ 1, mov_dword_ptr_[rsp+@@ 8@@ ]_7, mov_ebx_2, jmp_0xffffffffffffe@@ 4a@@ f, mov_dword_ptr_[rsp+@@ 8@@ ]_7, mov_ebx_1, jmp_0xffffffffffffe@@ 4@@ 9d, mov_dword_ptr_[rsp+8]@@ _0xd, jmp_0xffffffffffffe@@ 4@@ 90, mov_dword_ptr_[rsp+8]@@ _0xc, jmp_0xffffffffffffe@@ 48@@ 3, mov_dword_ptr_[rsp+@@ 8@@ ]_6, mov_ebx_2, jmp_0xffffffffffffe@@ 47@@ 1, mov_dword_ptr_[rsp+@@ 8]_5, mov_ebx_2, jmp_0xffffffffffffe@@ 45@@ f, mov_dword_ptr_[rsp+@@ 8]_4, mov_ebx@@ _3, jmp_0xffffffffffffe@@ 44@@ d, mov_dword_ptr_[rsp+8]@@ _0x17, mov_ebx@@ _3, jmp_0xffffffffffffe@@ 4@@ 3b, mov_dword_ptr_[rsp+8]@@ _0x17, mov_ebx_2, jmp_0xffffffffffffe@@ 42@@ 9, mov_dword_ptr_[rsp+8]@@ _0x12, jmp_0xffffffffffffe@@ 4@@ 1c, mov_dword_ptr_[rsp+8]@@ _0x11, mov_ebx_2, jmp_0xffffffffffffe@@ 40@@ a, mov_dword_ptr_[rsp+8]@@ _0x10, mov_ebx_2, jmp_0xffffffffffffe@@ 3f8, mov_dword_ptr_[rsp+8]@@ _0xb, mov_ebx_1, jmp_0xffffffffffffe@@ 3e@@ 6, mov_dword_ptr_[rsp+8]@@ _0xa, mov_ebx_1, jmp_0xffffffffffffe@@ 3d@@ 4, mov_dword_ptr_[rsp+@@ 8]_8, mov_ebx_2, jmp_0xffffffffffffe@@ 3c@@ 2
endbr64, test_rdi_rdi, je_0x5c, push_rbp, mov_rbp_rsi, push_rbx, xor_ebx_ebx, sub_rsp_8, jmp_0x22, mov_esi_0x3a, call_0xffffffffffff6@@ 5e@@ b, test_rax_rax, je_0xe, lea_rdi_[rax+1], mov_rbx_rax, cmp_byte_ptr_[rdi]_0, jne_0xffffffffffffffe7, test_rbx_rbx, je_0x2b, lea_rcx_[r@@ bx+1], lea_rdx_[rip+0x2@@ 16@@ fb], mov_esi_0x40, mov_rdi_rbp, xor_eax_eax, call_0xffffffffffff5@@ fd@@ b, xor_eax_eax, add_rsp_8, pop_rbx, pop_rbp, ret, mov_eax_0xffffffff, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffe@@ e
endbr64, push_r15, push_r14, mov_r14_rsi, mov_rsi_rdi, push_r13, mov_r13_rdx, mov_edx_0x40, push_r12, push_rbp, push_rbx, sub_rsp_0x68, mov_qword_ptr_[rsp+8]_rcx, lea_rbp_[rsp+0x10], mov_rdi_rbp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x58]_rax, xor_eax_eax, call_0xffffffffffff67@@ 63, mov_esi_0x3a, mov_rdi_rbp, mov_byte_ptr_[rsp+0x@@ 50]_0, call_0xffffffffffff6@@ 55@@ 1, test_rax_rax, je_5, mov_byte_ptr_[rax]_0, mov_esi_0x2e, mov_rdi_rbp, call_0xffffffffffff@@ 65@@ 3c, mov_r15_rax, test_rax_rax, je_0x97, lea_r12@@ _[rax+1], mov_esi_0x2e, mov_rdi_r12, call_0xffffffffffff@@ 65@@ 1f, mov_rbx_rax, test_rax_rax, je_0x7a, mov_byte_ptr_[r@@ 15]_0, mov_byte_ptr_[rax]_0, test_r14_r14, je_0x14, mov_edx_0xa, xor_esi_esi, mov_rdi_rbp, call_0xffffffffffff6@@ 44@@ c, mov_dword_ptr_[r14]_eax, test_r13_r13, je_0x15, mov_edx_0xa, xor_esi_esi, mov_rdi_r12, call_0xffffffffffff64@@ 35, mov_dword_ptr_[r13]_eax, mov_r14_qword_ptr_[rsp+8], xor_r13d_r13d, test_r14_r14, je_0x15, lea_rdi_[r@@ bx+1], mov_edx_0xa, xor_esi_esi, call_0xffffffffffff64@@ 14, mov_dword_ptr_[r14]_eax, mov_rax_qword_ptr_[rsp+0x58], xor_rax_qword_ptr_fs:[0x28], jne_0x1c, add_rsp_0x68, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, pop_r14, pop_r15, ret, mov_r13d_0xffffffff, jmp_0xffffffffffffffd8, call_0xffffffffffff@@ 65@@ 9@@ 2
endbr64, push_rbx, lea_rdi_[rip+0x12@@ ca@@ f4], call_0xffffffffffff67@@ 84, lea_rax_[rip+0x@@ 12@@ ca@@ d8], cmp_qword_ptr_[r@@ ax@@ ]_rax, sete_bl, lea_rdi_[rip+0x12@@ ca@@ db], call_0xffffffffffff67@@ cb, movzx_eax@@ _bl, pop_rbx, ret
push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x38, mov_ecx_0x1000, lea_r8_[rip+0x@@ 1c@@ 8e@@ e], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x10@@ 28]_rax, xor_eax_eax, lea_r12_[rsp+0x20], mov_rax_rdi, push_rsi, mov_r9_rdi, mov_rbx_rdx, movzx_edx@@ _dil, shr_rdi@@ _0xc, xor@@ _dil@@ _dil, or_edi@@ _edx, push_rdi, shr_rax@@ _8, shr@@ _r9@@ _0x20, and_eax@@ _0xfff, and_r9d@@ _0xffff@@ f000, or_r9d@@ _eax, mov_edx_1, mov_esi_0x1000, mov_rdi_r12, xor_eax_eax, call_0xffffffffffff66@@ 58, lea_rsi_[rip+0x2@@ 16@@ d5], mov_rdi_r12, call_0xffffffffffff66@@ 89, pop_rdx, pop_rcx, test_rax_rax, je_0x73, mov_r13_rsp, mov_rdx_rax, mov_esi_0x20, mov_rdi_r13, mov_rbp_rax, call_0xffffffffffff60@@ 2c, mov_rdx_r13, test_rax_rax, je_0x49, mov_ecx_dword_ptr_[rdx], add_rdx_4, lea_eax_[rcx-0x1010101], not_ecx, and_eax_ecx, and_eax_0x80808080, je_0xffffffffffffffeb, mov_ecx_eax, shr_ecx_0x10, test_eax_0x8080, cmove_eax_ecx, lea_rcx_[rdx+2], cmove_rdx_rcx, mov_esi_eax, add_sil@@ _al, sbb_rdx_3, sub_rdx@@ _r13, je_9, cmp_byte_ptr_[r@@ sp@@ +rdx@@ -1]_0xa, je_0x80, cmp_byte_ptr_[r@@ sp]_0, jne_0x5a, mov_rdi_rbp, call_0xffffffffffff6@@ 54@@ 5, test_eax_eax, jne_0x26, mov_rax_qword_ptr_[r@@ sp+0x10@@ 28], xor_rax_qword_ptr_fs:[0x28], jne_0x65, add_rsp_0x10@@ 38, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, call_0xffffffffffff6@@ 3c8, mov_edi_dword_ptr_[rax], call_0xffffffffffff6@@ 1e@@ 1, mov_rcx_rax, mov_rdx_r12, lea_rsi_[rip+0x1c@@ 9b@@ f], mov_edi_7, xor_eax_eax, call_0xffffffffffff7@@ 7@@ 98, jmp_0xffffffffffffffb7, xor_esi_esi, mov_rdi_r13, mov_edx_0xa, call_0xffffffffffff6@@ 24@@ 6, mov_dword_ptr_[rbx]_eax, mov_rdi_rbp, call_0xffffffffffff6@@ 4d@@ c, test_eax_eax, je_0xffffffffffffff@@ 99, jmp_0xffffffffffffffbb, mov_byte_ptr_[rsp@@ +rdx@@ -1]_0, jmp_0xffffffffffffff7d, call_0xffffffffffff6@@ 3d@@ 6
push_r13, mov_r13_rdi, push_r12, push_rbp, mov_rbp_rdx, mov_edx_0x4@@ 50, push_rbx, mov_rbx_rsi, xor_esi_esi, sub_rsp_0x4@@ 78, lea_r12_[rsp+0x10], mov_rdi_r12, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x4@@ 68]_rax, xor_eax_eax, mov_dword_ptr_[rsp+0xc]_0, call_0xffffffffffff5c@@ 90, lea_rdi_[rsp+0x50], mov_edx_0x400, mov_rsi_r13, call_0xffffffffffff6@@ 60@@ e, xor_esi_esi, lea_rdx_[rsp+0xc], mov_rdi_r12, mov_qword_ptr_[rsp+0x4@@ 50]_0, call_0xffffffffffff6@@ 16@@ 3, test_eax_eax, js_0x@@ 9c, mov_eax_dword_ptr_[rsp+0x48], mov_edx_eax, and_edx@@ _0x2@@ 80, cmp_edx@@ _0x2@@ 80, je_0x54, and_eax@@ _0x1@@ 10, cmp_eax_0x1@@ 10, je_0x60, mov_ecx_dword_ptr_[r@@ bp], mov_edx_dword_ptr_[rbx], lea_rsi_[rip+0x1c@@ 92@@ 2], mov_edi_7, xor_eax_eax, call_0xffffffffffff7@@ 6b@@ 3, xor_r12d_r12d, mov_rax_qword_ptr_[rsp+0x@@ 4@@ 68], xor_rax_qword_ptr_fs:[0x28], jne_0x67, add_rsp_0x4@@ 78, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, mov_dword_ptr_[rbx]@@ _0x1000, mov_ecx@@ _0x800000, mov_dword_ptr_[rbp]@@ _0x800000, jmp_0xffffffffffffffab, mov_dword_ptr_[rbx]@@ _0x200, mov_ecx_0x1@@ 00000, mov_dword_ptr_[rbp]@@ _0x100000, jmp_0xffffffffffffff93, mov_r12d_eax, mov_ecx_eax, mov_rdx_r13, lea_rsi_[rip+0x1c@@ 88@@ 9], mov_edi_3, xor_eax_eax, call_0xffffffffffff7@@ 6@@ 3a, jmp_0xffffffffffffff8a, call_0xffffffffffff6@@ 2a@@ 3
push_r13, mov_edx_0x4@@ 90, push_r12, push_rbp, mov_rbp_rsi, xor_esi_esi, push_rbx, mov_rbx_rdi, sub_rsp_0x4@@ d8, mov_r12_rsp, mov_rdi_r12, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x@@ 4c@@ 8]_rax, xor_eax_eax, call_0xffffffffffff5b@@ 5d, lea_rsi_[r@@ bx+0x10], mov_edx@@ _0x30, mov_rdi_r12, call_0xffffffffffff6@@ 34c, lea_rsi_[rbp+0x@@ 40], lea_rdi_[rsp+0x80], mov_edx_0x3@@ ff, mov_dword_ptr_[rsp+0x@@ 7c@@ ]_1, call_0xffffffffffff6@@ 32@@ e, movsxd_rcx_dword_ptr_[r@@ bp+0x@@ 45@@ 4], xor_esi_esi, mov_r13_rcx, shl_r13@@ _6, add_r13@@ _rcx, mov_rdi_r12, mov_qword_ptr_[rsp+0x4@@ 8@@ 0]_r13, call_0xffffffffffff5f@@ 8b, test_eax_eax, js_0x@@ d4, movdqa_xmm0_xmmword_ptr_[rsp+0x@@ 30], movdqa_xmm1_xmmword_ptr_[r@@ sp+0x@@ 40], movdqa_xmm2_xmmword_ptr_[r@@ sp+0x@@ 50], mov_rdx_qword_ptr_[rsp+0x30], movabs_rax_0x6@@ 96@@ 4@@ 5f@@ 4b@@ 4c@@ 4c@@ 47@@ 5f, mov_byte_ptr_[rsp+0x@@ 4c@@ 0]_0, movaps_xmmword_ptr_[rsp+0x@@ 4@@ 90@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0x@@ 4a@@ 0@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x@@ 4b0@@ ]_xmm2, lea_r8_[rsp+0x@@ 4@@ 90], cmp_rdx_rax, je_0x5a, cmp_dword_ptr_[rsp+0x@@ 49@@ 0]_0x4@@ b@@ 4c@@ 4c@@ 47, je_0x9d, mov_rdx_r8, lea_rsi_[rip+0x1c@@ 7e@@ d], mov_edi_3, xor_eax_eax, call_0xffffffffffff7@@ 5@@ 1e, mov_r12d_0xffffffff, mov_rax_qword_ptr_[rsp+0x@@ 4c8], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ 83, add_rsp_0x4@@ d8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, cmp_dword_ptr_[rsp+0x@@ 49@@ 8]_0x6@@ c6@@ 26@@ 17@@ 3, jne_0xffffffffffffff9d, cmp_word_ptr_[r@@ 8+0x@@ c]@@ _0x6@@ 46@@ 5, jne_0xffffffffffffff@@ 94, xor_r12d_r12d, cmp_byte_ptr_[r@@ 8+0x@@ e]_0, je_0xffffffffffffff@@ b7, jmp_0xffffffffffffff88, mov_edx_dword_ptr_[rbp+0x@@ 45@@ 4], mov_r12d_eax, mov_r8d_eax, mov_rcx_r13, lea_rsi_[rip+0x1c@@ 7@@ 32], mov_edi_3, xor_eax_eax, call_0xffffffffffff7@@ 4a@@ 3, jmp_0xffffffffffffff8b, cmp_byte_ptr_[rsp+0x@@ 4@@ 94]_0, mov_r12d_1, je_0xffffffffffffff@@ 77, jmp_0xffffffffffffff55, call_0xffffffffffff60@@ e@@ f
push_r15, lea_r15_[r@@ si+0x@@ c9], push_r14, lea_r14_[r@@ si+0x10], mov_rcx_r14, push_r13, lea_r13_[r@@ di+0x10], mov_rdx_r13, push_r12, lea_rsi_[rip+0x1c@@ 4a@@ e], push_rbp, push_rbx, sub_rsp_0x@@ 948, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x@@ 93@@ 8]_rax, xor_eax_eax, mov_r12_qword_ptr_[r@@ di+0x158], mov_edi_7, call_0xffffffffffff7@@ 42@@ 4, mov_edi_0x10, call_0xffffffffffff5b@@ 5a, test_rax_rax, je_0xc6, mov_rbx_rsp, mov_edx_0x4@@ 98, mov_rsi_r15, mov_rdi_rbx, mov_rbp_rax, call_0xffffffffffff6@@ 2f@@ b, lea_rcx_[rsp+0x@@ 4a0], mov_rdi_rcx, mov_edx_0x4@@ 98, mov_rsi_r15, call_0xffffffffffff6@@ 2e@@ 3, mov_qword_ptr_[rbp+8]_rax, mov_qword_ptr_[rbp]_rbx, movdqa_xmm0_xmmword_ptr_[r@@ ip+0x@@ 1d@@ 8a@@ e], mov_edi_dword_ptr_[r@@ 12+0x@@ 4@@ 58], mov_r8_rbp, mov_ecx_2, mov_edx_2, mov_esi_0xffffffff, movaps_xmmword_ptr_[rsp+0x@@ 4d@@ 0]_xmm0, call_0xffffffffffff5@@ bb@@ c, mov_r12d_eax, test_eax_eax, js@@ _0x32, mov_rdi_rbp, call_0xffffffffffff5c@@ 6d, mov_rax_qword_ptr_[rsp+0x@@ 9@@ 38], xor_rax_qword_ptr_fs:[0x28], jne_0x43, add_rsp_0x@@ 948, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_r8d_eax, mov_rcx_r14, mov_rdx_r13, lea_rsi_[rip+0x1c@@ 6@@ 50], mov_edi_3, xor_eax_eax, call_0xffffffffffff7@@ 35@@ 9, mov_r12d@@ _0xffffff@@ 23, jmp_0xffffffffffffffae, mov_r12d@@ _0xfffffff4, jmp_0xffffffffffffffae, call_0xffffffffffff5@@ fb@@ 4
push_r15, mov_r15_rdx, push_r14, mov_r14_rsi, mov_esi_0x400, push_r13, mov_r13_rdi, lea_rdi_[rip+0x1c@@ 3@@ 90], push_r12, push_rbp, call_0x14@@ 34@@ 2, test_rax_rax, je_0xab, xor_ecx_ecx, mov_rdx_r15, mov_rsi_r14, mov_rdi_rax, mov_rbp_rax, call_0x1@@ 34@@ 86, mov_r12_rax, test_rax_rax, je_0x6b, call_0xc@@ 33@@ 9, mov_rcx_rax, mov_rdi_r13, mov_r8_r12, lea_rdx_[rip+0x1e@@ 8b@@ 5], mov_esi_0x400, xor_eax_eax, call_0x1@@ 30@@ ad, xor_r13d_r13d, test_eax_eax, js_0x1@@ b, mov_rdi_rbp, call_0x1@@ 43@@ 9e, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, pop_r14, pop_r15, ret, call_0xc@@ 2f@@ 8, mov_rdx_rax, mov_rcx_r12, lea_rsi_[rip+0x1c@@ 3@@ 34], mov_edi_3, xor_eax_eax, call_0xffffffffffff7@@ 28@@ f, mov_r13d@@ _0xffffffea, jmp_0xffffffffffffffc3, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x1c@@ 59@@ 3], mov_edi_3, xor_eax_eax, call_0xffffffffffff7@@ 26@@ c, mov_r13d@@ _0xffffffea, jmp_0xffffffffffffffa0, lea_rsi_[rip+0x1c@@ 2d@@ c], mov_edi_3, xor_eax_eax, call_0xffffffffffff7@@ 25@@ 1, mov_r13d@@ _0xfffffff4, jmp_0xffffffffffffff8@@ d
push_r13, xor_ecx_ecx, xor_edx_edx, push_r12, mov_r13_rdi, sub_rsp_0x18, lea_rsi_[rsp+4], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_dword_ptr_[rsp+4]_0, call_0xfffffffffffff7e@@ 4, test_eax_eax, js@@ _0x2d, mov_ecx_dword_ptr_[rsp+4], cmp_ecx_1, ja_0x4@@ 1, xor_r12d_r12d, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x52, add_rsp_0x18, mov_eax_r12d, pop_r12, pop_r13, ret, mov_r12d_eax, mov_ecx_eax, mov_rdx_r13, lea_rsi_[rip+0x1c@@ 5@@ 19], mov_edi_3, xor_eax_eax, call_0xffffffffffff7@@ 1c@@ a, jmp_0xffffffffffffffc6, mov_r8d_1, mov_rdx_r13, lea_rsi_[rip+0x1c@@ 5@@ 1b], mov_edi_3, xor_eax_eax, call_0xffffffffffff7@@ 1a@@ c, mov_r12d_0xffffffff, jmp_0xffffffffffffffa2, call_0xffffffffffff5e@@ 0@@ f
endbr64, mov_eax_0x4@@ 98, ret
endbr64, push_rbp, mov_rbp_rsp, push_r15, lea_r15_[r@@ bp-0x@@ 530], push_r14, lea_r14_[r@@ bp-0x@@ d@@ 90], push_r13, push_r12, mov_r12_rsi, xor_esi_esi, push_rbx, sub_rsp_0x@@ e@@ 48, mov_qword_ptr_[rbp-0xe@@ 3@@ 8]_rcx, mov_qword_ptr_[rbp-0x@@ e4@@ 0]_rdi, mov_dword_ptr_[rbp-0x@@ e5@@ 0]_edx, mov_edx_0x4@@ 50, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x38]_rax, xor_eax_eax, lea_rax_[rbp-0x@@ 9@@ 80], mov_rdi_rax, mov_qword_ptr_[rbp-0x@@ e4@@ 8]_rax, call_0xffffffffffff56@@ 8c, mov_edx_0x4@@ 90, xor_esi_esi, mov_rdi_r15, call_0xffffffffffff56@@ 7d, xor_esi_esi, mov_edx_0x4@@ 10, mov_rdi_r14, call_0xffffffffffff5@@ 66@@ e, mov_rsi_qword_ptr_[rbp-0x@@ e@@ 38], pxor_xmm0_xmm0, mov_byte_ptr_[rbp-0x@@ 40]_0, mov_byte_ptr_[rbp-0x@@ 90]_0, movaps_xmmword_ptr_[rbp-0x80]_xmm0, movaps_xmmword_ptr_[rbp-0x@@ 70@@ ]_xmm0, movaps_xmmword_ptr_[rbp-0x60@@ ]_xmm0, movaps_xmmword_ptr_[rbp-0x@@ 50]_xmm0, movaps_xmmword_ptr_[rbp-0x@@ a0@@ ]_xmm0, test_rsi_rsi, je_0x@@ 889, cmp_byte_ptr_[rsi]_0, je_0x@@ 88@@ 0, mov_ecx_5, lea_rdi_[rip+0x@@ 19d@@ 1b], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x@@ 86@@ 5, push_0, lea_r13_[r@@ bp-0x@@ a0], mov_r9d_1, push_0, lea_r8_[rip+0x@@ 1c@@ 14@@ 2], mov_ecx_0x1@@ 1, mov_edx_1, mov_esi_0x10, mov_rdi_r13, xor_eax_eax, call_0xffffffffffff5e@@ 63, lea_rbx_[r@@ bp-0x@@ 80], mov_rcx_qword_ptr_[rbp-0x@@ e@@ 38], mov_esi_0x40, lea_rdx_[rip+0x20@@ c@@ fd], mov_rdi_rbx, xor_eax_eax, call_0xffffffffffff5@@ 5e@@ 2, mov_rax_qword_ptr_[rbp-0x@@ e@@ 38], mov_rcx_rbx, mov_rsi_rax, mov_edx_dword_ptr_[r@@ cx], add_rcx_4, lea_eax_[rdx-0x1010101], not_edx, and_eax_edx, and_eax_0x80808080, je_0xffffffffffffffeb, mov_edx_eax, shr_edx_0x10, test_eax_0x8080, cmove_eax_edx, lea_rdx_[r@@ cx+2], cmove@@ _rcx_rdx, mov_rdi_rsi, mov_esi_eax, add_sil@@ _al, sbb@@ _rcx@@ _3, sub_rcx@@ _rbx, mov_rdx_r13, mov_esi_dword_ptr_[r@@ dx], add_rdx_4, lea_eax_[r@@ si-0x@@ 1010101], not_esi, and_eax@@ _esi, and_eax_0x80808080, je_0xffffffffffffffeb, mov_esi_eax, shr_esi@@ _0x10, test_eax_0x8080, cmove_eax@@ _esi, lea_rsi_[rdx@@ +2], cmove_rdx@@ _rsi, mov_qword_ptr_[rbp-0xe@@ 3@@ 8]_rdi, mov_edi_eax, add@@ _dil@@ _al, sbb_rdx_3, sub_rdx@@ _r13, pop_r10, lea_rax_[rcx@@ +rdx@@ +2], pop_r11, cmp_rax@@ _0x40, ja_0x7@@ d6, mov_rsi_r12, mov_rdx_rbx, mov_rdi_r14, call_0xfffffffffffffc@@ 77, mov_r12d_eax, test_eax_eax, je_0x2d, mov_rax_qword_ptr_[rbp-0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ 8a@@ e, lea_rsp_[rbp-0x28], pop_rbx, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, pop_rbp, ret, mov_rdx_qword_ptr_[rbp-0x@@ e@@ 40], mov_rcx_r14, lea_rsi_[rip+0x1c@@ 0@@ 23], mov_edi_7, xor_eax_eax, call_0xffffffffffff6f@@ 58, mov_r9d_dword_ptr_[rip+0x2@@ 2d@@ 3e0], test_r9d_r9d, je_0x71, cmp_byte_ptr_[rip+0x2@@ 2d@@ 33@@ 0]_0, je_0x1@@ c8, sub_rsp_8, push_rbx, mov_rdi_qword_ptr_[rbp-0x@@ e@@ 38], lea_r8_[rip+0x@@ 1c@@ 00@@ 4], mov_r9_r13, mov_rcx_-1, mov_edx_1, mov_esi_0x40, xor_eax_eax, call_0xffffffffffff5d@@ 01, pop_rdi, pop_r8, cmp_eax@@ _0x3f, jle_0xffffffffffffff@@ 6b, mov_rcx_qword_ptr_[rbp-0x@@ e@@ 38], mov_edx_eax, lea_rsi_[rip+0x1c@@ 2a8], mov_edi_7, xor_eax_eax, call_0xffffffffffff6@@ ee@@ 9, jmp_0xffffffffffffff49, xor_edi_edi, lea_rdx_[rbp-0x@@ e@@ 2c], lea_rsi_[rbp-0x@@ e@@ 30], call_0xffffffffffff5c@@ 08, test_eax_eax, js_0x7@@ bc, mov_edx_dword_ptr_[rbp-0x@@ e@@ 30], mov_ecx_dword_ptr_[rbp-0x@@ e@@ 2c], lea_rsi_[rip+0x1c@@ 2c8], mov_edi_7, xor_eax_eax, call_0xffffffffffff6@@ ea@@ 1, lea_rdx_[rbp-0x@@ e@@ 20], mov_rsi_r14, mov_edi_1, mov_dword_ptr_[rbp-0xe@@ 28]_0, mov_dword_ptr_[rbp-0xe@@ 24]_0, call_0xffffffffffff5c@@ 09, test_eax_eax, js_0x7@@ 19, mov_rdi_qword_ptr_[rbp-0x@@ d@@ f8], lea_rdx_[rbp-0x@@ e@@ 28], lea_rsi_[rip+0x1b@@ f@@ 3a], call_0xfffffffffffff57@@ 7, mov_rdi_qword_ptr_[rbp-0x@@ d@@ f8], lea_rdx_[rbp-0x@@ e@@ 24], lea_rsi_[rip+0x1b@@ f@@ 34], call_0xfffffffffffff55@@ d, mov_edx_dword_ptr_[rbp-0x@@ e@@ 28], mov_ecx_dword_ptr_[rbp-0x@@ e@@ 24], cmp_edx@@ _0x200, je_0xce, cmp_edx@@ _0x1000, jne_0x4@@ 1a, cmp_ecx@@ _0x1000, je_0x4@@ c2, test@@ _ecx@@ _0xffff@@ fd@@ ff, je_0x4@@ 32, cmp_ecx@@ _0x1000, je_0x4@@ 26, mov_r8_r14, lea_rsi_[rip+0x1c@@ 25@@ e], mov_edi_4, xor_eax_eax, call_0xffffffffffff6@@ dd@@ f, mov_edx_dword_ptr_[rbp-0x@@ e@@ 28], mov_dword_ptr_[rbp-0xe@@ 24]_0, test_edx_edx, je_0x4@@ 20, xor_ecx_ecx, mov_r8_r14, lea_rsi_[rip+0x1c@@ 29@@ 6], mov_edi_4, xor_eax_eax, call_0xffffffffffff6d@@ af, mov_edx_dword_ptr_[rbp-0x@@ e@@ 28], mov_ecx_dword_ptr_[rbp-0x@@ e@@ 24], test_edx_edx, jne_0xa, mov_dword_ptr_[rbp-0xe@@ 2@@ 8]_ecx, mov_edx_ecx, test_ecx_ecx, jne_0x3c@@ 8, mov_dword_ptr_[rbp-0xe@@ 2@@ 4]_edx, mov_ecx_edx, jmp_0x3@@ ba, mov_rsi_qword_ptr_[rbp-0x@@ e@@ 40], mov_edx_0x40, lea_rdi_[rip+0x22@@ d@@ 15@@ 5], call_0xffffffffffff5a@@ d5, jmp_0xfffffffffffffe@@ 26, cmp_ecx@@ _0x200, jne_0xffffffffffffff@@ 4a, mov_rsi_qword_ptr_[rbp-0x@@ e@@ 40], mov_rdi_qword_ptr_[rbp-0x@@ e@@ 48], mov_edx@@ _0x30, call_0xffffffffffff5a@@ a9, lea_rax_[rbp-0x@@ 9@@ 40], mov_edx_0x400, mov_rsi_r14, mov_rdi_rax, mov_qword_ptr_[rbp-0x@@ e6@@ 8]_rax, call_0xffffffffffff5c@@ 1b, mov_qword_ptr_[rbp-0x@@ 54@@ 0]_0, mov_dword_ptr_[rbp-0x@@ e6@@ 0]@@ _0x100000, mov_dword_ptr_[rbp-0x@@ e5@@ 4]@@ _0x1@@ 10, mov_eax_dword_ptr_[rbp-0x@@ e@@ 54], mov_ecx_dword_ptr_[rip+0x2@@ 2d@@ 19@@ 7], mov_rdi_qword_ptr_[rbp-0x@@ e@@ 48], xor_edx_edx, xor_esi_esi, mov_dword_ptr_[rbp-0x@@ 94@@ 8]_eax, call_0xffffffffffff5@@ 28@@ a, mov_ecx_eax, test_eax_eax, js_0x5@@ 49, mov_eax_dword_ptr_[rbp-0x@@ e@@ 50], test_al_0x80, je_0x4@@ 23, lea_rax_[rip+0x@@ 1b@@ d@@ 13], mov_qword_ptr_[rbp-0x@@ e5@@ 0]_rax, movdqa_xmm1_xmmword_ptr_[r@@ bp-0x@@ 9@@ 80], movdqa_xmm2_xmmword_ptr_[r@@ bp-0x@@ 970], movdqa_xmm3_xmmword_ptr_[r@@ bp-0x@@ 9@@ 60], mov_rsi_qword_ptr_[rbp-0x@@ e@@ 50], lea_rdi_[rbp-0x@@ 500], mov_edx@@ _0x30, movaps_xmmword_ptr_[rbp-0x@@ 5@@ 30@@ ]_xmm1, movaps_xmmword_ptr_[rbp-0x@@ 5@@ 20]_xmm2, movaps_xmmword_ptr_[rbp-0x@@ 5@@ 10@@ ]_xmm3, call_0xffffffffffff5@@ 9d@@ f, lea_rax_[rbp-0x4b@@ 0], mov_edx_0x400, mov_rsi_r14, mov_rdi_rax, mov_qword_ptr_[rbp-0x@@ e4@@ 8]_rax, call_0xffffffffffff5b@@ 51, movsxd_rdi@@ _dword_ptr_[rbp-0x@@ e@@ 60], xor_ecx_ecx, mov_rax_rdi, shl_rax_6, add_rax_rdi, mov_qword_ptr_[rbp-0xb0]_rax, mov_eax_dword_ptr_[rbp-0x@@ e@@ 54], mov_qword_ptr_[rbp-0x@@ e6@@ 0]_rdi, xor_edx_edx, xor_esi_esi, mov_rdi_r15, mov_dword_ptr_[rbp-0x4b@@ 4]_1, mov_dword_ptr_[rbp-0x4b@@ 8]_eax, call_0xffffffffffff54@@ 6e, mov_ecx_eax, test_eax_eax, js_0x3@@ ed, movdqa_xmm4@@ _xmmword_ptr_[r@@ bp-0x@@ 9@@ 80], movdqa_xmm@@ 5@@ _xmmword_ptr_[r@@ bp-0x@@ 970], movdqa_xmm@@ 6@@ _xmmword_ptr_[r@@ bp-0x@@ 9@@ 60], mov_rdi_qword_ptr_[rbp-0x@@ e@@ 48], pxor_xmm0_xmm0, mov_edx_0x400, mov_rsi_r14, movaps_xmmword_ptr_[rbp-0x@@ 5@@ 30@@ ]_xmm4, movaps_xmmword_ptr_[rbp-0x@@ 5@@ 20@@ ]_xmm5, movaps_xmmword_ptr_[rbp-0x@@ 5@@ 10@@ ]_xmm6, movaps_xmmword_ptr_[rbp-0x@@ 4@@ f0@@ ]_xmm0, movaps_xmmword_ptr_[rbp-0x@@ 4@@ e0@@ ]_xmm0, mov_qword_ptr_[rbp-0x@@ 50@@ 0]_0x4@@ b@@ 4c@@ 47@@ 56, mov_qword_ptr_[rbp-0x4@@ f8]_0, call_0xffffffffffff5a@@ 9b, imul_rax@@ _qword_ptr_[rbp-0x@@ e6@@ 0]_0x4@@ 2, xor_ecx_ecx, xor_edx_edx, mov_qword_ptr_[rbp-0xb0]_rax, mov_eax_dword_ptr_[rbp-0x@@ e@@ 54], xor_esi_esi, mov_rdi_r15, mov_dword_ptr_[rbp-0x4b@@ 4]_1, mov_dword_ptr_[rbp-0x4b@@ 8]_eax, call_0xffffffffffff5@@ 3c8, mov_ecx_eax, test_eax_eax, js_0x4@@ 28, mov_rsi_qword_ptr_[rbp-0x@@ e@@ 50], mov_ecx_5, lea_rdi_[rip+0x@@ 1bb@@ a3], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x3@@ 95, sub_rsp_8, push_rbx, mov_rdi_qword_ptr_[rbp-0x@@ e@@ 38], mov_rcx_-1, mov_edx_1, mov_r9_r13, lea_r8_[rip+0x@@ 1bb@@ f2], mov_esi_0x40, xor_eax_eax, call_0xffffffffffff58@@ fe, pop_rdx, pop_rcx, cmp_eax@@ _0x3f, jg_0x3@@ 34, mov_rbx_qword_ptr_[rbp-0x@@ e@@ 40], mov_rcx_qword_ptr_[rbp-0x@@ e@@ 38], mov_rdx_rbx, xor_eax_eax, lea_rsi_[rip+0x1c@@ 134], mov_edi_7, call_0xffffffffffff6a@@ df, xor_esi_esi, mov_rdi_r15, mov_edx_0x4@@ 90, call_0xffffffffffff50@@ 40, mov_eax_dword_ptr_[rbp-0x@@ e@@ 54], mov_rdi_qword_ptr_[rbp-0x@@ e@@ 48], mov_rsi_r14, mov_edx_0x400, mov_dword_ptr_[rbp-0x4b@@ 4]_1, mov_dword_ptr_[rbp-0x4b@@ 8]_eax, call_0xffffffffffff5@@ 9a@@ 6, mov_rsi_rbx, mov_rdi_r15, mov_edx@@ _0x30, call_0xffffffffffff5@@ 80@@ 6, mov_r14_rbx, movabs_rax_0x6@@ 46@@ 57@@ 37@@ 56@@ e@@ 75@@ 23, mov_rbx_qword_ptr_[rbp-0x@@ e@@ 60], mov_qword_ptr_[rbp-0x@@ 50@@ 0]_rax, mov_rdx_r14, lea_rsi_[rip+0x1c@@ 0@@ e4], mov_edi_7, xor_eax_eax, imul@@ _r13@@ _rbx@@ _0x4@@ 3, call_0xffffffffffff6a@@ 61, jmp_0xf, add_r13@@ _rbx, xor_ecx_ecx, xor_edx_edx, xor_esi_esi, mov_rdi_r15, mov_qword_ptr_[rbp-0xb@@ 0]_r13, call_0xffffffffffff5@@ 29@@ d, cmp_eax@@ _-0x@@ 5a, je_0xfffffffffffffa@@ 9a, cmp_eax@@ _-0x@@ 1c, je_0xfffffffffffffa@@ 91, test_eax_eax, je_0xffffffffffffffd4, mov_ecx_eax, mov_rdx_r13, lea_rsi_[rip+0x1c@@ 0@@ be], mov_edi_3, xor_eax_eax, call_0xffffffffffff6a@@ 0f, xor_r12d_r12d, jmp_0xfffffffffffffa@@ 6c, test_edx@@ _0xffff@@ fd@@ ff, jne_0x10@@ a, test@@ _ecx@@ _0xffff@@ fd@@ ff, je_0xe, cmp_ecx@@ _0x1000, jne_0xfffffffffffffb@@ f6, test_edx_edx, je_0x12@@ e, test_ecx_ecx, je_0xfffffffffffffc@@ 0e, cmp_ecx@@ _0x1000, je_0x62, cmp_edx@@ _0x1000, je_0x1@@ 52, cmp_edx@@ _0x200, je_0xfffffffffffffc@@ 62, mov_rdx_r14, lea_rsi_[rip+0x1b@@ e5@@ 6], mov_edi_3, xor_eax_eax, call_0xffffffffffff6@@ 99@@ 7, mov_rdx_qword_ptr_[rbp-0x@@ e@@ 40], mov_r8_r14, mov_ecx_0xffffffff, lea_rsi_[rip+0x1b@@ ef@@ 4], mov_edi_3, xor_eax_eax, call_0xffffffffffff6@@ 97@@ 5, mov_r12d@@ _0xffffff@@ 2c, jmp_0xfffffffffffff9c@@ f, cmp_edx@@ _0x200, je_0xfe, cmp_edx@@ _0x1000, jne_0xffffffffffffffa6, mov_rsi_qword_ptr_[rbp-0x@@ e@@ 40], mov_rdi_qword_ptr_[rbp-0x@@ e@@ 48], mov_edx@@ _0x30, call_0xffffffffffff56@@ a9, lea_rax_[rbp-0x@@ 9@@ 40], mov_edx_0x400, mov_rsi_r14, mov_rdi_rax, mov_qword_ptr_[rbp-0x@@ e6@@ 8]_rax, call_0xffffffffffff58@@ 1b, mov_qword_ptr_[rbp-0x@@ 54@@ 0]_0, mov_dword_ptr_[rbp-0x@@ e6@@ 0]@@ _0x800000, mov_dword_ptr_[rbp-0x@@ e5@@ 4]@@ _0x2@@ 80, jmp_0xfffffffffffffc@@ 00, mov_r8_r14, lea_rsi_[rip+0x1b@@ d5@@ e], mov_edi_4, xor_eax_eax, call_0xffffffffffff6@@ 8d@@ f, mov_ecx_dword_ptr_[rbp-0x@@ e@@ 24], mov_dword_ptr_[rbp-0xe@@ 28]_0, test@@ _ecx@@ _0xffff@@ fd@@ ff, je_0x14, cmp_ecx@@ _0x1000, jne_0x15@@ c, test_ecx_ecx, je_0xffffffffffffff@@ 06, xor_edx_edx, jmp_0xfffffffffffffa@@ e6, test_ah_1, jne_0x1d, mov_esi_dword_ptr_[rip+0x2@@ 2c@@ d@@ 2d], test_esi_esi, je_0x13, cmp_byte_ptr_[rip+0x2@@ 2c@@ c@@ 7a@@ ]_0, je_0x1@@ 73, lea_rax_[rip+0x@@ 1b@@ 8c@@ 7], mov_qword_ptr_[rbp-0x@@ e5@@ 0]_rax, jmp_0xfffffffffffffb@@ c3, cmp_ecx@@ _0x200, jne_0xffffffffffffff@@ 16, mov_r8_r14, lea_rsi_[rip+0x1b@@ d8@@ 2], mov_edi_4, xor_eax_eax, call_0xffffffffffff6@@ 84@@ b, jmp_0xfffffffffffffefa, mov_rdx_qword_ptr_[rbp-0x@@ e@@ 40], lea_rsi_[rip+0x1@@ bb@@ c2], mov_edi_3, xor_eax_eax, call_0xffffffffffff@@ 68@@ 2b, mov_r12d@@ _0xffffff@@ 2c, jmp_0xfffffffffffff88@@ 5, mov_dword_ptr_[rbp-0xe@@ 38]_eax, mov_r8_qword_ptr_[rbp-0x@@ e@@ 48], mov_rdx_qword_ptr_[rbp-0x@@ e@@ 40], lea_rsi_[rip+0x1b@@ de@@ d], mov_edi_3, xor_eax_eax, call_0xffffffffffff67@@ f6, mov_ecx_dword_ptr_[rbp-0x@@ e@@ 38], mov_r12d_ecx, jmp_0xfffffffffffff84@@ d, mov_r12d@@ _0xffffff@@ 2c, jmp_0xfffffffffffff8@@ 3f, mov_rcx_qword_ptr_[rbp-0x@@ e@@ 38], mov_edx_eax, lea_rsi_[rip+0x1@@ bb@@ 78], mov_edi_7, xor_eax_eax, call_0xffffffffffff67@@ b9, jmp_0xfffffffffffffc@@ b6, mov_rsi_qword_ptr_[rbp-0x@@ e@@ 40], mov_edx_0x40, lea_rdi_[rip+0x2@@ 2c@@ b8@@ 5], call_0xffffffffffff5@@ 50@@ 5, jmp_0xfffffffffffffc@@ 59, mov_dword_ptr_[rbp-0xe@@ 38]_eax, mov_r8_qword_ptr_[rbp-0x@@ e@@ 68], mov_rdx_qword_ptr_[rbp-0x@@ e@@ 40], lea_rsi_[rip+0x1b@@ d@@ 2d], jmp_0xffffffffffffff70, xor_edx_edx, jmp_0xfffffffffffff96@@ e, call_0xffffffffffff5@@ 36@@ 9, mov_ecx_dword_ptr_[rax], mov_rdx_r14, lea_rsi_[rip+0x1@@ bb@@ 90], mov_edi_3, xor_eax_eax, call_0xffffffffffff67@@ 41, jmp_0xfffffffffffffd@@ aa, mov_dword_ptr_[rbp-0xe@@ 38]_eax, mov_r8_qword_ptr_[rbp-0x@@ e@@ 48], mov_rdx_qword_ptr_[rbp-0x@@ e@@ 40], lea_rsi_[rip+0x1b@@ d@@ 3c], jmp_0xffffffffffffff1f, call_0xffffffffffffe@@ e0@@ 7, test_eax_eax, je_0xfffffffffffffe@@ 90, jmp_0xfffffffffffffa@@ 4d, mov_rdx_qword_ptr_[rbp-0x@@ e@@ 40], lea_rsi_[rip+0x1b@@ ad@@ f], mov_edi_3, xor_eax_eax, call_0xffffffffffff66@@ f0, mov_r12d@@ _0xffffff@@ 2a, jmp_0xfffffffffffff@@ 74@@ a, call_0xffffffffffff5@@ 35@@ 0
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdx, mov_edx_0x4@@ 90, push_rbx, mov_rbx_rcx, sub_rsp@@ _0x5@@ 38, mov_qword_ptr_[rsp+8]_rdi, mov_qword_ptr_[rsp+0x18]_rsi, mov_qword_ptr_[rsp+0x20]_r8, mov_dword_ptr_[rsp+0x2c]@@ _r9d, lea_r13_[rsp+0x30], xor_esi_esi, mov_rdi_r13, lea_r14_[rsp+0x@@ 4e0], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x5@@ 28]_rax, xor_eax_eax, mov_r12@@ _qword_ptr_[rsp+0x@@ 5@@ 78], call_0xffffffffffff4b@@ df, pxor_xmm0_xmm0, lea_rax_[rsp+0x@@ 4c0], mov_rsi_r14, mov_rdi_rbx, mov_byte_ptr_[rsp+0x@@ 5@@ 20]_0, mov_qword_ptr_[rsp+0x10]_rax, mov_byte_ptr_[rsp+0x@@ 4d@@ 0]_0, movaps_xmmword_ptr_[rsp+0x@@ 4@@ e0@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0x@@ 4@@ f0@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0x@@ 5@@ 00@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0x@@ 5@@ 10]_xmm0, movaps_xmmword_ptr_[rsp+0x@@ 4c@@ 0]_xmm0, call_0xffffffffffffeb@@ 7b, test_eax_eax, js_0x2@@ 64, push_0, mov_r9d_1, lea_r8_[rip+0x@@ 1b@@ 6b@@ a], push_0, mov_ecx_0x1@@ 1, mov_edx_1, mov_rdi_qword_ptr_[rsp+0x20], mov_esi_0x10, xor_eax_eax, call_0xffffffffffff5@@ 3d@@ 7, mov_r10d_dword_ptr_[r@@ ip+0x2@@ 2c@@ a6@@ f], pop_r8, pop_r9, test_r10d_r10d, jne_0x1@@ a4, mov_rsi_qword_ptr_[rsp+8], mov_edx@@ _0x30, mov_rdi_r13, call_0xffffffffffff5@@ 33@@ 1, lea_rbx_[rsp+0x@@ b0], mov_rsi_qword_ptr_[rsp+0x18], mov_rdx_r14, mov_rdi_rbx, mov_dword_ptr_[rsp+0xa@@ c]_1, call_0xfffffffffffff26@@ e, mov_r15d_eax, test_eax_eax, jne_0x1@@ b8, mov_ecx_dword_ptr_[rsp+0x@@ 5@@ 70], mov_eax_dword_ptr_[rsp+0x2c], test_ecx_ecx, je_0x2@@ 11, test_eax_eax, je_0x2@@ 09, cmp_eax@@ _0x1000, mov_edx_0x1@@ 10, mov_eax_0x2@@ 80, cmovne_eax_edx, mov_dword_ptr_[rsp+0xa@@ 8]_eax, test_r12_r12, je_0x1@@ cf, lea_r14_[rsp+0x@@ 60], movabs@@ _rbx@@ _0x6@@ 46@@ 57@@ 37@@ 56@@ e@@ 75@@ 23, jmp_0xd, movsxd_rax_dword_ptr_[rsp+0x@@ 5@@ 70], add_r12_rax, pxor_xmm0_xmm0, xor_esi_esi, mov_rdi_r13, mov_qword_ptr_[rsp+0x4@@ b@@ 0]_r12, movaps_xmmword_ptr_[r@@ 14@@ ]_xmm0, movaps_xmmword_ptr_[r@@ 14+0x1@@ 0]_xmm0, movaps_xmmword_ptr_[r@@ 14+0x@@ 20]_xmm0, call_0xffffffffffff4@@ f0@@ 6, mov_r15d_eax, cmp_eax@@ _-0x@@ 5a, je_0x2@@ 1b, cmp_eax@@ _-0x@@ 1c, je_0x2@@ 12, test_eax_eax, je_0xd, cmp_eax@@ _0xffffff@@ 21, jne_0x2@@ 33, mov_edx@@ _0x30, mov_rsi_rbp, mov_rdi_r14, call_0xffffffffffff4c@@ 12, test_eax_eax, je_0x2@@ 43, cmp_r15d@@ _0xffffff@@ 21, je_7, cmp_qword_ptr_[r@@ 14]@@ _rbx, jne_0xffffffffffffff@@ 89, mov_rdx_qword_ptr_[rsp+8], mov_r8_r12, mov_rcx_rbp, xor_eax_eax, lea_rsi_[rip+0x1b@@ d@@ 13], mov_edi_7, call_0xffffffffffff6@@ 4a@@ e, mov_edx@@ _0x30, mov_rsi_rbp, mov_rdi_r14, call_0xffffffffffff5@@ 20@@ e, cmp_dword_ptr_[rsp+0x@@ 2c]@@ _0x1000, mov_edx_0x1@@ 10, mov_eax_0x2@@ 80, cmovne_eax_edx, mov_rdi_r13, xor_ecx_ecx, xor_edx_edx, xor_esi_esi, mov_dword_ptr_[rsp+0xa@@ 8]_eax, call_0xffffffffffff4c@@ d4, mov_r15d_eax, test_eax_eax, jne_0x1@@ fa, sub_rsp_8, push_r12, mov_edx_1, lea_r8_[rip+0x@@ 1b@@ 55@@ c], mov_r9_qword_ptr_[rsp+0x20], mov_rdi_qword_ptr_[rsp+0x30], mov_rcx_-1, mov_esi_0x40, xor_eax_eax, call_0xffffffffffff5@@ 22@@ a, pop_rax, pop_rdx, jmp_0x5@@ 7, mov_rax_qword_ptr_[rip+0x2@@ 2b@@ 74@@ 1], mov_dword_ptr_[rsp+0x@@ 57@@ 0]@@ _0x100000, add_rax@@ _0x4@@ 3, sub_rsp_8, shl_rax@@ _0x14, push_rax, mov_esi_0x40, lea_r8_[rip+0x@@ 1b@@ 50@@ f], mov_r9_qword_ptr_[rsp+0x20], mov_rdi_qword_ptr_[rsp+0x30], mov_rcx_-1, mov_edx_1, xor_eax_eax, call_0xffffffffffff5@@ 1d@@ d, inc@@ _qword_ptr_[rip+0x2@@ 2b@@ 6f@@ 9], pop_rsi, pop_rdi, xor_r15d_r15d, mov_rax_qword_ptr_[rsp+0x@@ 5@@ 28], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ f3, add_rsp@@ _0x5@@ 38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r15d, pop_r15, ret, mov_rdx_qword_ptr_[rsp+8], mov_r15d_eax, mov_ecx_eax, mov_r8_rbx, lea_rsi_[rip+0x1b@@ a@@ 6c], mov_edi_3, xor_eax_eax, call_0xffffffffffff6@@ 3@@ 95, jmp_0xffffffffffffffb4, movsxd_r12@@ _dword_ptr_[rsp+0x@@ 5@@ 70], imul@@ _r12@@ _r12@@ _0x4@@ 3, jmp_0xfffffffffffffe@@ 2b, lea_rsi_[rsp+0x@@ 2c], lea_rdx_[rsp+0x@@ 5@@ 70], mov_rdi_rbx, call_0xffffffffffffec@@ 00, mov_r15d_eax, test_eax_eax, js_0x1@@ 37, mov_ecx_dword_ptr_[rsp+0x@@ 2c], test_ecx_ecx, jne_0x10@@ 2, mov_rdi_rbx, call_0xffffffffffff4f@@ 41, mov_dword_ptr_[rsp+0x@@ 57@@ 0]_eax, mov_r8d_eax, test_eax_eax, jle_0x@@ 133, cmp_eax_0x1@@ 00000, mov_ecx_0x200, mov_eax@@ _0x1000, cmovne@@ _ecx_eax, mov_rdx_qword_ptr_[rsp+8], xor_eax_eax, lea_rsi_[rip+0x1b@@ a@@ 9a], mov_edi_7, mov_dword_ptr_[rsp+0x2@@ c]_ecx, call_0xffffffffffff6@@ 30@@ 1, mov_eax_dword_ptr_[rsp+0x2c], jmp_0xfffffffffffffd@@ 85, mov_rdx_qword_ptr_[rsp+8], mov_rcx_r12, lea_rsi_[rip+0x1b@@ aa@@ 9], mov_edi_7, xor_eax_eax, call_0xffffffffffff6@@ 2d@@ a, mov_r15d@@ _0xffffff@@ a6, jmp_0xfffffffffffffef3, mov_rdx_qword_ptr_[rsp+8], mov_ecx_eax, mov_r8_r12, lea_rsi_[rip+0x1b@@ a@@ 9f], mov_edi_3, xor_eax_eax, call_0xffffffffffff6@@ 2a8, jmp_0xfffffffffffffe@@ c7, mov_rdx_qword_ptr_[rsp+8], mov_r8_r12, mov_rcx_rbp, lea_rsi_[rip+0x1b@@ aa@@ 6], mov_edi_3, call_0xffffffffffff6@@ 28@@ 1, mov_r15d@@ _0xffffff@@ ef, jmp_0xfffffffffffffe@@ 9a, mov_rdx_qword_ptr_[rsp+8], movsxd_r8@@ _eax, mov_ecx_eax, lea_rsi_[rip+0x1b@@ ae@@ f], mov_edi_3, xor_eax_eax, call_0xffffffffffff6@@ 258, jmp_0xfffffffffffffe@@ 77, mov_r8d_dword_ptr_[rsp+0x@@ 5@@ 70], mov_rdx_qword_ptr_[rsp+8], xor_eax_eax, lea_rsi_[rip+0x1b@@ 96@@ a], mov_edi_7, call_0xffffffffffff6@@ 22@@ d, mov_eax_dword_ptr_[rsp+0x2c], jmp_0xfffffffffffffc@@ b1, mov_rdx_qword_ptr_[rsp+8], mov_ecx_eax, mov_r8_rbx, lea_rsi_[rip+0x1b@@ 9@@ 16], mov_edi_3, xor_eax_eax, call_0xffffffffffff6@@ 20@@ 7, jmp_0xfffffffffffffe@@ 26, mov_rdx_qword_ptr_[rsp+8], mov_ecx_eax, lea_rsi_[rip+0x1b@@ 95@@ f], mov_edi_3, xor_eax_eax, call_0xffffffffffff6@@ 1e8, mov_r15d@@ _0xffffffea, jmp_0xfffffffffffffe@@ 01, call_0xffffffffffff4e@@ 4@@ 8
endbr64, push_r15, mov_edx_0x4@@ 10, push_r14, push_r13, mov_r13_rsi, xor_esi_esi, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rcx, push_rbx, sub_rsp_0x@@ d@@ 68, lea_rbx_[rsp+0x20], mov_rdi_rbx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xd@@ 58]_rax, xor_eax_eax, call_0xffffffffffff47@@ 00, pxor_xmm0_xmm0, mov_byte_ptr_[rsp+0x@@ d@@ 50]_0, movaps_xmmword_ptr_[rsp+0x@@ d@@ 10]_xmm0, movaps_xmmword_ptr_[rsp+0x@@ d@@ 20]_xmm0, movaps_xmmword_ptr_[rsp+0x@@ d@@ 30]_xmm0, movaps_xmmword_ptr_[rsp+0x@@ d@@ 40]_xmm0, test_rbp_rbp, je_0x3@@ fc, cmp_byte_ptr_[rbp]_0, je_0x3@@ f2, mov_ecx_5, lea_rdi_[rip+0x@@ 18d@@ ad], mov_rsi_rbp, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x3@@ d4, lea_r14_[rsp+0x@@ d@@ 10], mov_rsi_r14, mov_rdi_rbp, call_0xffffffffffffe6@@ 80, mov_r15d_eax, test_eax_eax, js_0x2@@ ee, mov_rdx_r14, mov_rsi_r13, mov_rdi_rbx, call_0xffffffffffffe@@ dd@@ 7, mov_r15d_eax, test_eax_eax, je_0x35, mov_rax_qword_ptr_[rsp+0x@@ d@@ 58], xor_rax_qword_ptr_fs:[0x28], jne_0x4@@ 4e, add_rsp_0x@@ d@@ 68, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r15d, pop_r15, ret, xor_eax_eax, mov_rcx_rbx, mov_rdx_r12, lea_rsi_[rip+0x1b@@ 1d@@ 3], mov_edi_7, call_0xffffffffffff60@@ b4, mov_eax_dword_ptr_[rip+0x2@@ 2c@@ 53@@ d], test_eax_eax, jne_0xffffffffffffffac, mov_edi_1, lea_r13_[rsp+0x@@ 430], call_0xffffffffffff4a@@ 58, lea_r14_[rsp+0x@@ 470], mov_edx_0x4@@ 50, xor_esi_esi, mov_rdi_r13, call_0xffffffffffff4@@ 5f@@ 1, mov_edx_0x400, mov_rsi_rbx, mov_rdi_r14, call_0xffffffffffff4@@ f7@@ 1, lea_rdx_[r@@ sp+0x1c], xor_esi_esi, mov_rdi_r13, mov_qword_ptr_[rsp+0x@@ 87@@ 0]_0, call_0xffffffffffff4a@@ c6, mov_ebp_eax, test_eax_eax, js_0x3@@ 3d, mov_eax_dword_ptr_[rsp+0x@@ 4@@ 68], mov_edx_eax, and_edx@@ _0x2@@ 80, cmp_edx@@ _0x2@@ 80, je_0x2@@ 9a, and_eax@@ _0x1@@ 10, mov_dword_ptr_[rsp+8]@@ _0x100000, cmp_eax_0x1@@ 10, jne_0x2@@ 1a, mov_edx@@ _0x30, mov_rsi_r12, mov_rdi_r13, call_0xffffffffffff4d@@ 79, mov_ecx_dword_ptr_[rip+0x2@@ 2c@@ 4a@@ a], xor_edx_edx, xor_esi_esi, mov_rdi_r13, call_0xffffffffffff4@@ 5a@@ 7, mov_ebp_eax, test_eax_eax, js_0x2@@ 66, lea_rbp_[rsp+0x@@ 8@@ 80], mov_edx_0x4@@ 90, xor_esi_esi, mov_rdi_rbp, call_0xffffffffffff4@@ 54@@ 6, lea_rax_[rsp+0x@@ 900], mov_edx_0x400, mov_rsi_rbx, mov_rdi_rax, mov_qword_ptr_[rsp]_rax, call_0xffffffffffff4@@ eb@@ a, movsxd_rdx_dword_ptr_[r@@ sp+8], xor_esi_esi, mov_rax_rdx, shl_rax_6, add_rax_rdx, mov_rdi_rbp, mov_qword_ptr_[rsp+8]_rdx, mov_qword_ptr_[rsp+0x@@ d0@@ 0]_rax, mov_dword_ptr_[rsp+0x8@@ fc@@ ]_1, call_0xffffffffffff4@@ 97@@ 9, mov_r14d_eax, test_eax_eax, js_0x2@@ 47, mov_edx@@ _0x30, mov_rsi_r13, mov_rdi_rbp, call_0xffffffffffff4c@@ de, xor_ecx_ecx, xor_edx_edx, xor_esi_esi, mov_rdi_rbp, call_0xffffffffffff47@@ c0, mov_r14d_eax, test_eax_eax, js_0x2@@ 6e, mov_edx_0x4@@ 90, xor_esi_esi, mov_rdi_rbp, call_0xffffffffffff4@@ 4b@@ 6, mov_rdi_qword_ptr_[rsp], mov_edx_0x400, mov_rsi_rbx, call_0xffffffffffff4e@@ 35, imul_rax@@ _qword_ptr_[r@@ sp+@@ 8]_0x4@@ 2, xor_esi_esi, mov_rdi_rbp, mov_qword_ptr_[rsp+0x@@ d0@@ 0]_rax, mov_dword_ptr_[rsp+0x8@@ fc@@ ]_1, call_0xffffffffffff4@@ 90@@ 2, mov_r14d_eax, test_eax_eax, js_0x1@@ 48, mov_edx@@ _0x30, mov_rsi_r13, mov_rdi_rbp, call_0xffffffffffff4c@@ 67, xor_ecx_ecx, xor_edx_edx, xor_esi_esi, mov_rdi_rbp, call_0xffffffffffff47@@ 49, mov_r14d_eax, test_eax_eax, js_0x1@@ 1f, imul@@ _r14@@ _qword_ptr_[r@@ sp+@@ 8]_0x4@@ 3, jmp_0x2e, mov_edx@@ _0x30, mov_rsi_r13, mov_rdi_rbp, call_0xffffffffffff4c@@ 35, xor_ecx_ecx, xor_edx_edx, xor_esi_esi, mov_rdi_rbp, call_0xffffffffffff47@@ 17, test_eax_eax, jne_0x1@@ f0, add_r14@@ _qword_ptr_[rsp+8], xor_esi_esi, mov_edx_0x4@@ 90, mov_rdi_rbp, call_0xffffffffffff4@@ 40@@ b, mov_rdi_qword_ptr_[rsp], mov_rsi_rbx, mov_edx_0x400, call_0xffffffffffff4d@@ 8a, xor_esi_esi, mov_rdi_rbp, mov_qword_ptr_[rsp+0x@@ d0@@ 0]_r14, mov_dword_ptr_[rsp+0x8@@ fc@@ ]_1, call_0xffffffffffff48@@ 5d, cmp_eax@@ _-0x@@ 5a, je_0xfffffffffffffd@@ 6a, cmp_eax@@ _-0x@@ 1c, je_0xfffffffffffffd@@ 61, test_eax_eax, jns_0xffffffffffffff@@ 84, mov_r8d_eax, mov_rcx_r14, mov_rdx_r12, lea_rsi_[rip+0x1b@@ 86@@ 2], mov_edi_3, xor_eax_eax, call_0xffffffffffff5e@@ 3b, xor_r15d_r15d, jmp_0xfffffffffffffd@@ 38, mov_ecx_eax, mov_r8_rbp, mov_rdx_r12, lea_rsi_[rip+0x1b@@ 4e@@ 9], mov_edi_3, xor_eax_eax, call_0xffffffffffff5e@@ 12, jmp_0xfffffffffffffd@@ 12, mov_rdi_r14, call_0xffffffffffff4@@ 9f@@ d, mov_dword_ptr_[rsp+8]_eax, test_eax_eax, jg_0xfffffffffffff@@ dd@@ e, mov_rcx_r14, mov_rdx_r12, lea_rsi_[rip+0x1b@@ 6f@@ 7], mov_edi_3, xor_eax_eax, call_0xffffffffffff5@@ dd@@ 8, or@@ _r15d@@ _0xffffffff, jmp_0xfffffffffffffc@@ d4, mov_r8_qword_ptr_[rsp], mov_ecx_r14d, mov_rdx_r12, lea_rsi_[rip+0x1b@@ 79@@ 7], mov_edi_3, xor_eax_eax, call_0xffffffffffff5d@@ a8, mov_r15d_r14d, jmp_0xfffffffffffffc@@ a5, mov_dword_ptr_[rsp+8]@@ _0x800000, jmp_0xfffffffffffffd@@ 7c, mov_ecx_eax, mov_r8_r14, mov_rdx_r12, lea_rsi_[rip+0x1b@@ 6c@@ 9], mov_edi_3, xor_eax_eax, call_0xffffffffffff5d@@ 72, mov_r15d_ebp, jmp_0xfffffffffffffc@@ 6f, mov_rdx_r12, lea_rsi_[rip+0x1b@@ 6@@ 16], mov_edi_3, xor_eax_eax, call_0xffffffffffff5d@@ 4f, mov_r15d@@ _0xffffffea, jmp_0xfffffffffffffc@@ 49, mov_r8_qword_ptr_[rsp], mov_ecx_eax, mov_rdx_r12, lea_rsi_[rip+0x1b@@ 6a@@ 8], mov_edi_3, xor_eax_eax, call_0xffffffffffff5d@@ 21, mov_r15d_r14d, jmp_0xfffffffffffffc@@ 1e, mov_ecx_eax, mov_r8_r14, mov_rdx_r12, lea_rsi_[rip+0x1b@@ 5e@@ 9], mov_edi_3, xor_eax_eax, call_0xffffffffffff5c@@ fa, mov_r15d_ebp, jmp_0xfffffffffffffb@@ f7, mov_r8_qword_ptr_[rsp], mov_ecx_eax, mov_rdx_r12, lea_rsi_[rip+0x1b@@ 6@@ 88], mov_edi_3, xor_eax_eax, call_0xffffffffffff5c@@ d1, mov_r15d_r14d, jmp_0xfffffffffffffb@@ ce, mov_r8d_eax, mov_rcx_r14, mov_rdx_r12, lea_rsi_[rip+0x1b@@ 7@@ 10], mov_edi_3, xor_eax_eax, call_0xffffffffffff5c@@ a9, xor_r15d_r15d, jmp_0xfffffffffffffb@@ a6, call_0xffffffffffff4@@ 90@@ c
endbr64, push_r14, lea_r14_[r@@ si+0x10], xor_eax_eax, push_r13, mov_rcx_r14, xor_r13d_r13d, push_r12, lea_r12_[r@@ di+0x10], mov_rdx_r12, push_rbx, mov_edi_7, mov_rbx_rsi, sub_rsp_8, lea_rsi_[rip+0x1a@@ d@@ 94], call_0xffffffffffff5c@@ 5f, mov_eax_dword_ptr_[rip+0x2@@ 2c@@ 0@@ e8], test_eax_eax, je_0x12, add_rsp_8, pop_rbx, pop_r12, mov_eax_r13d, pop_r13, pop_r14, ret, movabs_rax_0x6@@ 46@@ 57@@ 37@@ 56@@ e@@ 75@@ 23, mov_qword_ptr_[rbx+0x@@ f@@ 9]_rax, lea_rdi_[rbx+0x@@ c9], xor_ecx_ecx, xor_edx_edx, xor_esi_esi, call_0xffffffffffff4@@ 48@@ 2, mov_r13d_eax, test_eax_eax, jns_0xffffffffffffff@@ c8, mov_r8d_eax, mov_rcx_r14, mov_rdx_r12, xor_eax_eax, lea_rsi_[rip+0x1b@@ 6a@@ 4], mov_edi_3, call_0xffffffffffff5b@@ ff, add_rsp_8, pop_rbx, pop_r12, mov_eax_r13d, pop_r13, pop_r14, ret
endbr64, push_r14, push_r13, push_r12, xor_r12d_r12d, push_rbp, push_rbx, sub_rsp_0x@@ 940, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x@@ 93@@ 8]_rax, xor_eax_eax, mov_eax_dword_ptr_[rip+0x2@@ 2c@@ 0@@ 45], test_eax_eax, je_0x2f, mov_rax_qword_ptr_[rsp+0x@@ 9@@ 38], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ d6, add_rsp_0x@@ 940, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, ret, mov_rbx_qword_ptr_[r@@ di+0x158], mov_r13_rdi, mov_edi_0x10, call_0xffffffffffff4@@ 2b@@ 1, mov_rbp_rax, test_rax_rax, je_0x1@@ a5, lea_r12_[rsp+0x10], xor_esi_esi, mov_rdi_r12, mov_edx_0x4@@ 90, lea_r14_[rsp+0x@@ 4a0], add_r13_0x10, mov_qword_ptr_[rsp+8]@@ _r12, call_0xffffffffffff40@@ b0, xor_esi_esi, mov_edx_0x4@@ 90, mov_rdi_r14, call_0xffffffffffff40@@ a1, mov_rdi_r12, mov_edx@@ _0x30, mov_rsi_r13, call_0xffffffffffff48@@ 91, pxor_xmm0_xmm0, mov_edx@@ _0x30, mov_rsi_r13, mov_rdi_r14, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm0, mov_qword_ptr_[rsp+0x4@@ 0]_0x4@@ b@@ 4c@@ 4c@@ 47, mov_qword_ptr_[rsp+0x48]_0, call_0xffffffffffff4@@ 86@@ 1, movdqa_xmm1_xmmword_ptr_[r@@ ip+0x@@ 1b@@ fd@@ 4], pxor_xmm0_xmm0, lea_rsi_[rbx+0x@@ 40], lea_rdi_[rsp+0x90], mov_edx_0x3@@ ff, movaps_xmmword_ptr_[rsp+0x@@ 4d@@ 0@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x@@ 4@@ e0@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0x@@ 4@@ f0@@ ]_xmm0, mov_dword_ptr_[rsp+0x@@ 8c@@ ]_1, call_0xffffffffffff48@@ 1c, movsxd_rdx_dword_ptr_[r@@ bx+0x@@ 45@@ 4], mov_edi_dword_ptr_[rbx+0x@@ 4@@ 58], mov_rax_rdx, shl_rax_6, add_rax_rdx, mov_qword_ptr_[rsp+0x4@@ 90]_rax, cmp_dword_ptr_[rbx+0x@@ 45@@ 0]@@ _0x1000, mov_edx_0x1@@ 10, mov_eax_0x2@@ 80, cmovne_eax_edx, lea_r8_[r@@ sp+8], xor_r9d_r9d, mov_ecx_1, xor_edx_edx, mov_esi_0xffffffff, mov_dword_ptr_[rsp+0x8@@ 8]_eax, mov_dword_ptr_[rsp+0x5@@ 18]_eax, call_0xffffffffffff4@@ 60@@ f, mov_r12d_eax, test_eax_eax, js_0x4@@ 5, mov_rax_qword_ptr_[rsp+8], mov_edi_dword_ptr_[rbx+0x@@ 4@@ 58], mov_r8_rbp, mov_ecx_2, mov_edx_2, mov_esi_0xffffffff, mov_qword_ptr_[rbp]_rax, mov_qword_ptr_[rbp+@@ 8]_r14, call_0xffffffffffff4@@ 22@@ e, mov_r12d_eax, test_eax_eax, js_0x3@@ 4, mov_rdi_rbp, call_0xffffffffffff4@@ 2d@@ f, jmp_0xfffffffffffffe@@ 5d, mov_ecx_eax, mov_rdx_r13, lea_rsi_[rip+0x1b@@ 4b@@ c], mov_edi_3, xor_eax_eax, call_0xffffffffffff5@@ 9ed, jmp_0xffffffffffffffd6, mov_ecx_eax, mov_rdx_r13, lea_rsi_[rip+0x1b@@ 4c@@ 4], mov_edi_3, xor_eax_eax, call_0xffffffffffff5@@ 9c@@ d, jmp_0xffffffffffffffb6, call_0xffffffffffff@@ 46@@ 36, mov_r12d@@ _0xfffffff4, jmp_0xfffffffffffffe@@ 0@@ e
endbr64, push_r15, push_r14, push_r13, mov_r13d_esi, push_r12, push_rbp, lea_rbp_[r@@ di+0x10], push_rbx, mov_rbx_rdi, sub_rsp_0x4@@ b8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x@@ 4a@@ 8]_rax, xor_eax_eax, mov_eax_dword_ptr_[rip+0x2@@ 2b@@ e0@@ c], test_esi_esi, je_0x66, lea_r14_[rip+0x@@ 1a@@ 9c@@ a], test_eax_eax, je_0xdb, lea_rsi_[rip+0x1a@@ aa@@ 9], lea_rcx_[rip+0x@@ 1a@@ 9b@@ 4], mov_rdx_rbp, mov_edi_7, xor_eax_eax, call_0xffffffffffff5@@ 94@@ d, mov_esi_r13d, and_esi_1, shl_esi@@ _5, mov_r13d_esi, movzx_esi_byte_ptr_[r@@ bx+0x1@@ e0], and_esi@@ _0xffffffdf, or_esi@@ _r13d, mov_byte_ptr_[rbx+0x1@@ e0@@ ]_sil, mov_edx_0x40, mov_rsi_rbp, lea_rdi_[rip+0x22@@ b@@ d0@@ 9], call_0xffffffffffff@@ 46@@ 89, jmp_0x4d, lea_r14_[rip+0x@@ 1a@@ 95@@ 7], test_eax_eax, je_0x77, lea_rcx_[rip+0x@@ 1a@@ 94@@ c], mov_rdx_rbp, lea_rsi_[rip+0x1a@@ a@@ 3f], mov_edi_7, xor_eax_eax, call_0xffffffffffff58@@ ed, and_byte_ptr_[r@@ bx+0x1@@ e@@ 0]@@ _0xdf, mov_rsi_rbp, lea_rdi_[rip+0x22@@ b@@ cc@@ 7], call_0xffffffffffff4@@ 55@@ 7, mov_r12d_eax, test_eax_eax, je_0x1@@ 3d, xor_r12d_r12d, mov_rax_qword_ptr_[rsp+0x@@ 4a@@ 8], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ 74, add_rsp_0x4@@ b8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_r12_[rsp+0x10], xor_esi_esi, mov_rdi_r12, mov_edx_0x4@@ 90, mov_r15_qword_ptr_[r@@ bx+0x158], call_0xffffffffffff3d@@ ea, mov_rdi_r12, mov_edx@@ _0x30, mov_rsi_rbp, call_0xffffffffffff4@@ 5d@@ a, lea_rdi_[rsp+0x40], mov_edx@@ _0x30, mov_rsi_r14, call_0xffffffffffff4@@ 5c8, lea_r9_[rsp+0x@@ 90], mov_rdi_r9, lea_rsi_[r@@ 15+0x40], mov_edx_0x3@@ ff, mov_qword_ptr_[rsp+8]_r9, mov_dword_ptr_[rsp+0x@@ 8c@@ ]_1, call_0xffffffffffff@@ 45@@ 9f, movsxd_rdx_dword_ptr_[r@@ 15+0x@@ 45@@ 4], mov_rdi_r12, mov_rax_rdx, shl_rax_6, add_rax_rdx, mov_qword_ptr_[rsp+0x4@@ 90]_rax, cmp_dword_ptr_[r15+0x@@ 45@@ 0]@@ _0x1000, mov_edx_0x1@@ 10, mov_eax_0x2@@ 80, cmovne_eax_edx, xor_ecx_ecx, xor_edx_edx, xor_esi_esi, mov_dword_ptr_[rsp+0x8@@ 8]_eax, call_0xffffffffffff40@@ 49, test_eax_eax, mov_r9_qword_ptr_[rsp+8], mov_r12d_eax, js_0x7@@ a, endbr64, mov_rdx_rbp, xor_eax_eax, mov_rcx_r14, lea_rsi_[rip+0x1a@@ 9@@ 10], mov_edi_7, call_0xffffffffffff57@@ c0, mov_eax_r13d, and_eax_1, shl_eax@@ _5, mov_edx_eax, movzx_eax_byte_ptr_[rbx+0x1@@ e0], and_eax_0xffffffdf, or_eax_edx, mov_byte_ptr_[rbx+0x1@@ e0@@ ]_al, test_r13d_r13d, je_0xfffffffffffffe@@ ba, jmp_0xfffffffffffffe@@ 6d, pxor_xmm0_xmm0, mov_byte_ptr_[rip+0x2@@ 2@@ bb@@ b5@@ ]_0, movups_xmmword_ptr_[r@@ ip+0x2@@ 2@@ bb@@ 6e@@ ]_xmm0, movups_xmmword_ptr_[r@@ ip+0x2@@ 2@@ bb@@ 77@@ ]_xmm0, movups_xmmword_ptr_[r@@ ip+0x2@@ 2@@ bb@@ 80]_xmm0, movups_xmmword_ptr_[r@@ ip+0x2@@ 2@@ bb@@ 89@@ ]_xmm0, jmp_0xfffffffffffffea@@ 5, mov_r8d_eax, mov_ecx_r13d, mov_rdx_rbp, lea_rsi_[rip+0x1b@@ 270], mov_edi_3, xor_eax_eax, call_0xffffffffffff57@@ 49, jmp_0xfffffffffffffe@@ 80, call_0xffffffffffff4@@ 3a@@ f
endbr64, mov_eax_dword_ptr_[rip+0x22@@ bb@@ ba], push_rbx, mov_rbx_rdi, test_eax_eax, je_0x28, mov_edx_1, mov_eax_1, mov_ecx_edx, movzx_edx_byte_ptr_[r@@ bx+0x1@@ e0], shl_ecx@@ _5, and_edx_0xffffff@@ df, or_edx_ecx, mov_byte_ptr_[rbx+0x1@@ e@@ 0]_dl, pop_rbx, ret, mov_rsi_qword_ptr_[r@@ di+0x158], call_0xffffffffffffe0@@ d1, mov_edx_eax, and_edx_1, jmp_0xffffffffffffffd@@ 3
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x4@@ c8, mov_qword_ptr_[rsp+0x10]_rsi, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x4@@ b8]_rax, xor_eax_eax, mov_eax_dword_ptr_[rip+0x22@@ bb@@ 41], mov_dword_ptr_[rsp+0x18]_eax, test_eax_eax, je_0x57, mov_rax_qword_ptr_[rip+0x2@@ 2a@@ 9b@@ 6], mov_dword_ptr_[rsp+0x18]_0, add_rax@@ _0x44, shl_rax@@ _0x14, mov_qword_ptr_[rsi]_rax, mov_dword_ptr_[rdx@@ ]@@ _0x200, mov_dword_ptr_[rcx@@ ]@@ _0x100000, mov_rax_qword_ptr_[rsp+0x@@ 4b@@ 8], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ 4e, mov_eax_dword_ptr_[rsp+0x18], add_rsp_0x4@@ c8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_r12_qword_ptr_[r@@ di+0x158], mov_rbx_rdi, mov_eax_dword_ptr_[r12+0x@@ 450], lea_rbp_[rsp+0x20], mov_dword_ptr_[rdx]_eax, xor_esi_esi, mov_edx_0x4@@ 90, mov_eax_dword_ptr_[r12+0x@@ 45@@ 4], mov_rdi_rbp, mov_dword_ptr_[rcx]_eax, lea_r15_[r@@ bx+0x10], call_0xffffffffffff3b@@ 8f, mov_edx@@ _0x30, mov_rsi_r15, mov_rdi_rbp, call_0xffffffffffff4@@ 37@@ f, mov_edx_0x3@@ ff, lea_rsi_[r12+0x@@ 40], lea_rdi_[rsp+0x@@ a0], mov_dword_ptr_[rsp+0x@@ 9c@@ ]_1, call_0xffffffffffff4@@ 35@@ d, cmp_dword_ptr_[r12+0x@@ 45@@ 0]@@ _0x1000, mov_eax_0x2@@ 80, mov_edx_0x1@@ 10, cmovne_eax_edx, mov_rbx_qword_ptr_[r@@ bx+0x1@@ 68], mov_dword_ptr_[rsp+0x9@@ 8]_eax, test_rbx_rbx, jne_0xe, movsxd_rbx@@ _dword_ptr_[r@@ 12+0x@@ 45@@ 4], imul@@ _rbx@@ _rbx@@ _0x4@@ 3, mov_dword_ptr_[rsp+0xc]_0, mov_r14_rbx, lea_r13_[rsp+0x@@ 50], pxor_xmm0_xmm0, xor_esi_esi, mov_rdi_rbp, mov_qword_ptr_[rsp+0x@@ 4a@@ 0]_r14, movaps_xmmword_ptr_[r@@ 13@@ ]_xmm0, movaps_xmmword_ptr_[r@@ 13+0x1@@ 0]_xmm0, movaps_xmmword_ptr_[r@@ 13+0x@@ 20]_xmm0, call_0xffffffffffff3@@ f70, cmp_eax@@ _-0x@@ 5a, sete_dl, cmp_eax@@ _-0x@@ 1c, mov_r9d_eax, sete_al, or_dl_al, jne_0xaa, cmp_r9d@@ _0xffffff@@ 21, je_0xe5, test_r9d_r9d, jne_0x10@@ 4, movabs_rax_0x6@@ 46@@ 57@@ 37@@ 56@@ e@@ 75@@ 23, cmp_qword_ptr_[r@@ 13@@ ]_rax, je_0x50, movsxd_rax_dword_ptr_[r@@ 12+0x@@ 45@@ 4], movzx_r11d@@ _byte_ptr_[rsp+0x@@ c], add_r14_rax, and_r11d@@ _1, cmp_rbx_r14, ja_0xffffffffffffff@@ 86, test_r11b_r11b, je_0xffffffffffffff@@ 81, mov_rcx_r14, mov_rdx_r15, lea_rsi_[rip+0x1b@@ 0@@ 5e], mov_edi_7, xor_eax_eax, call_0xffffffffffff5@@ 50@@ 7, mov_dword_ptr_[rsp+0x18]@@ _0xffffff@@ a6, jmp_0xfffffffffffffe@@ 7b, xor_eax_eax, mov_rcx_r14, mov_rdx_r15, lea_rsi_[rip+0x1b@@ 101], mov_edi_7, call_0xffffffffffff54@@ dc, mov_rax_qword_ptr_[rsp+0x10], mov_dword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rax]@@ _r14, jmp_0xfffffffffffffe@@ 48, mov_rcx_r14, mov_byte_ptr_[rsp+0x1@@ f@@ ]_dl, xor_eax_eax, mov_rdx_r15, lea_rsi_[rip+0x1b@@ 0@@ 2d], mov_edi_7, call_0xffffffffffff5@@ 4a@@ 8, mov_rax_qword_ptr_[rsp+0x10], movsxd_rcx_dword_ptr_[r@@ 12+0x@@ 45@@ 4], mov_qword_ptr_[rax]@@ _r14, mov_dword_ptr_[rsp+0xc]_1, imul@@ _r14@@ _rcx@@ _0x4@@ 3, movzx_r11d_byte_ptr_[r@@ sp+0x1@@ f], jmp_0xffffffffffffff58, xor_eax_eax, mov_rcx_r14, mov_rdx_r15, lea_rsi_[rip+0x1b@@ 0@@ 19], mov_edi_7, call_0xffffffffffff54@@ 64, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rax]@@ _r14, jmp_0xfffffffffffffdd@@ 8, mov_ecx_r9d, mov_r8_r14, mov_rdx_r15, lea_rsi_[rip+0x1b@@ 0@@ 28], mov_edi_3, xor_eax_eax, mov_dword_ptr_[rsp+0xc]_r9d, call_0xffffffffffff54@@ 34, mov_r9d_dword_ptr_[rsp+0xc], mov_dword_ptr_[rsp+0x18]_r9d, jmp_0xfffffffffffffd@@ a6, call_0xffffffffffff40@@ 9@@ 0
endbr64, push_r15, mov_edx_0x400, xor_esi_esi, push_r14, push_r13, push_r12, mov_r12d@@ _0xffffff@@ 2c, push_rbp, push_rbx, mov_rbx_rdi, lea_r15_[r@@ bx+0x@@ 51], sub_rsp_0x@@ d@@ f8, lea_rbp_[r@@ sp+0x1@@ e0], mov_rdi_rbp, lea_r13_[rsp+0x@@ 5@@ e0], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x@@ de@@ 8]_rax, xor_eax_eax, mov_dword_ptr_[rsp+0x38]_0, mov_dword_ptr_[rsp+0x3c]_0, call_0xffffffffffff3@@ 92@@ 1, pxor_xmm0_xmm0, lea_rax_[rsp+0x1@@ 90], mov_edx_0x400, xor_esi_esi, mov_rdi_r13, movaps_xmmword_ptr_[rsp+0x1@@ 90@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0x1@@ a0@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0x1@@ b0@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0x1@@ c0@@ ]_xmm0, lea_r14_[rsp+0x@@ 9@@ e0], mov_qword_ptr_[rsp+8]_rax, mov_byte_ptr_[rsp+0x1@@ d0]_0, call_0xffffffffffff3@@ 8d@@ 1, lea_r9_[rip+0x@@ 1a@@ 4b0], lea_r8_[rip+0x@@ 1a@@ 4b@@ 3], mov_ecx_0x400, mov_edx_1, mov_esi_0x400, mov_rdi_r13, xor_eax_eax, call_0xffffffffffff4@@ 12a, mov_edx_0x400, xor_esi_esi, mov_rdi_r14, call_0xffffffffffff38@@ 9b, mov_r9_r15, lea_r8_[rip+0x@@ 1a@@ 48@@ b], mov_ecx_0x400, mov_edx_1, mov_esi_0x400, mov_rdi_r14, xor_eax_eax, call_0xffffffffffff40@@ f8, lea_r8_[r@@ bx+0x@@ d2], mov_rdi_r8, mov_qword_ptr_[rsp+0x10]_r8, call_0xffffffffffffe0@@ b4, test_eax_eax, js_0x2@@ 49, mov_r8_qword_ptr_[rsp+0x10], mov_rsi_qword_ptr_[rsp+8], mov_rdi_r8, call_0xffffffffffffd8@@ 3a, test_eax_eax, mov_r8_qword_ptr_[rsp+0x10], js_0x2@@ 5e, mov_rdx_qword_ptr_[rsp+8], mov_rsi_r15, mov_rdi_rbp, call_0xffffffffffffdf@@ 8d, mov_r12d_eax, test_eax_eax, jne_0x20@@ f, mov_edi_1, call_0xffffffffffff3c@@ 68, lea_rdx_[rsp+0x40], mov_rsi_rbp, mov_edi_1, call_0xffffffffffff40@@ 26, test_eax_eax, js_0x5@@ 57, mov_rax_qword_ptr_[rbx+0x1@@ 60], mov_qword_ptr_[rsp+0x10]_rax, test_rax_rax, jne_0x2@@ 36, movsxd_rax_dword_ptr_[rip+0x2@@ 2b@@ 70@@ 9], mov_dword_ptr_[rsp+0x2c]_eax, test_eax_eax, jne_0x2@@ 17, mov_rdi_qword_ptr_[rip+0x2@@ 2b@@ 69@@ 2], test_rdi_rdi, je_0x3@@ 17, lea_rsi_[rip+0x1f@@ 0@@ c3], call_0xffffffffffff40@@ 7a, mov_qword_ptr_[rsp+0x18]_rax, test_rax_rax, je_0x6@@ 12, lea_r15_[rsp+0x@@ d0], mov_rdx_qword_ptr_[rsp+0x18], mov_esi_0x40, mov_rdi_r15, call_0xffffffffffff3a@@ 0b, test_rax_rax, je_0x5@@ 43, movzx_eax_byte_ptr_[rsp+0x@@ d0], cmp_al_0x2@@ 3, je_0xffffffffffffffdb, cmp_al_0xa, je_0xffffffffffffffd7, mov_esi_0x3d, mov_rdi_r15, call_0xffffffffffff3d@@ 65, test_rax_rax, je_0xffffffffffffff@@ c5, mov_byte_ptr_[rax]_0, mov_qword_ptr_[rsp+0x20]_rax, lea_rax_[rsp+0x1@@ 50], pxor_xmm0_xmm0, mov_qword_ptr_[rsp+8]_rax, lea_rdx_[rsp+0x1@@ 10], lea_rsi_[rip+0x1e@@ e6@@ 9], mov_rdi_r15, xor_eax_eax, movaps_xmmword_ptr_[rsp+0x1@@ 10]_xmm0, movaps_xmmword_ptr_[rsp+0x1@@ 20]_xmm0, movaps_xmmword_ptr_[rsp+0x1@@ 30]_xmm0, movaps_xmmword_ptr_[rsp+0x1@@ 40]_xmm0, movaps_xmmword_ptr_[rsp+0x1@@ 50]_xmm0, movaps_xmmword_ptr_[rsp+0x1@@ 60]_xmm0, movaps_xmmword_ptr_[rsp+0x1@@ 70@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0x1@@ 80]_xmm0, call_0xffffffffffff37@@ fe, mov_rcx_qword_ptr_[rsp+0x20], mov_rdx_qword_ptr_[rsp+8], lea_rdi_[r@@ cx+1], lea_rsi_[rip+0x1e@@ e0@@ a], xor_eax_eax, call_0xffffffffffff37@@ e2, movabs_rax_0x6@@ 46@@ 95@@ f7@@ 47@@ 36@@ f@@ 68, cmp_qword_ptr_[rsp+0x1@@ 10]_rax, jne_0xffffffffffffff@@ 23, mov_rdi_qword_ptr_[rsp+8], mov_edx_0xa, xor_esi_esi, call_0xffffffffffff3b@@ f9, mov_dword_ptr_[rsp+0x2c]_eax, cdqe, mov_qword_ptr_[rsp+0x10]_rax, lea_r15@@ _[rax-1], mov_rdi_qword_ptr_[rsp+0x18], call_0xffffffffffff3e@@ 80, test_eax_eax, jne_0x@@ 4c0, mov_rcx_qword_ptr_[rip+0x2@@ 2b@@ 54@@ 4], mov_edx_dword_ptr_[rsp+0x2c], xor_eax_eax, lea_rsi_[rip+0x1a@@ 278], mov_edi_7, call_0xffffffffffff50@@ fa, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rbx+0x1@@ 60]_rax, jmp_0x@@ a9, call_0xffffffffffff@@ 39@@ 00, mov_dword_ptr_[r15+0x@@ 45@@ 8]_eax, test_eax_eax, jns@@ _0x1@@ c2, mov_rdx_qword_ptr_[rsp+8], mov_ecx_eax, lea_rsi_[rip+0x1a@@ de@@ e], mov_edi_3, xor_eax_eax, call_0xffffffffffff50@@ b7, mov_r12d@@ _0xffffff@@ 2a, mov_rdi_r15, call_0xffffffffffff3@@ 97@@ 9, mov_rax_qword_ptr_[rsp+0x@@ d@@ e8], xor_rax_qword_ptr_fs:[0x28], jne_0x5@@ 22, add_rsp_0x@@ d@@ f8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_ecx_eax, lea_rdx_[r@@ bx+0x10], lea_rsi_[rip+0x1a@@ c@@ bb], mov_edi_3, xor_eax_eax, call_0xffffffffffff50@@ 5c, jmp_0xffffffffffffffb3, mov_qword_ptr_[rsp+0x10]_rax, mov_qword_ptr_[rbx+0x1@@ 60]_rax, lea_r15@@ _[rax-1], cmp_r15@@ _0x7@@ cf, ja@@ _0xf@@ 9, mov_esi_0x4@@ 60, mov_edi_1, call_0xffffffffffff3d@@ 39, mov_r15_rax, test_rax_rax, je_0x4@@ b2, pxor_xmm0_xmm0, lea_rdi_[rsp+0x1@@ 50], lea_rsi_[r@@ bx+0x10], mov_edx@@ _0x30, mov_qword_ptr_[rsp+8]_rdi, movaps_xmmword_ptr_[rsp+0x1@@ 50]_xmm0, movaps_xmmword_ptr_[rsp+0x1@@ 60]_xmm0, movaps_xmmword_ptr_[rsp+0x1@@ 70@@ ]_xmm0, mov_byte_ptr_[rsp+0x1@@ 80]_0, call_0xffffffffffff3d@@ 4e, mov_rax_qword_ptr_[rsp+0x10], movdqa_xmm1_xmmword_ptr_[r@@ sp+0x1@@ 50], mov_qword_ptr_[r15+0x@@ 30]_rax, movdqa_xmm2_xmmword_ptr_[r@@ sp+0x1@@ 60], movdqa_xmm3_xmmword_ptr_[r@@ sp+0x1@@ 70], mov_qword_ptr_[r15+0x@@ 44@@ 0]_0, lea_rax_[r@@ 15+0x40], movups_xmmword_ptr_[r@@ 15@@ ]_xmm1, movups_xmmword_ptr_[r@@ 15+0x1@@ 0@@ ]_xmm2, movups_xmmword_ptr_[r@@ 15+0x@@ 20@@ ]_xmm3, mov_edx_0x3@@ ff, mov_rsi_rbp, mov_rdi_rax, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffff3c@@ f8, mov_ecx_dword_ptr_[rip+0x2@@ 2b@@ 4@@ 11], test_ecx_ecx, je_0xfffffffffffffe@@ 9b, cmp_byte_ptr_[rip+0x2@@ 2b@@ 3@@ 5e@@ ]_0, je_0x2@@ 66, mov_qword_ptr_[rbx+0x1@@ 5@@ 8]_r15, mov_rdx_qword_ptr_[rsp+8], lea_rsi_[rip+0x1a@@ ea@@ 5], mov_edi_7, xor_eax_eax, call_0xffffffffffff4f@@ 4e, jmp_0xfffffffffffffea@@ 5, mov_rcx_qword_ptr_[rsp+0x10], lea_rdx_[r@@ bx+0x10], lea_rsi_[rip+0x1a@@ c0@@ 0], mov_edi_3, xor_eax_eax, call_0xffffffffffff4f@@ 29, mov_r12d@@ _0xffffff@@ 2b, jmp_0xfffffffffffffe@@ 7a, mov_rcx_r14, mov_rdx_r13, lea_rsi_[rip+0x1a@@ 0@@ 8f], mov_edi_7, xor_eax_eax, call_0xffffffffffff4e@@ fc, mov_edi_dword_ptr_[r@@ 15+0x@@ 4@@ 58], xor_esi_esi, mov_rcx_r14, mov_rdx_r13, call_0xffffffffffff36@@ b8, test_eax_eax, js_0x2@@ 21, mov_edi_dword_ptr_[r@@ 15+0x@@ 4@@ 58], mov_esi_2, call_0xffffffffffff3@@ 94@@ f, test_eax_eax, js_0x2@@ 4d, lea_rdx_[rsp+0x@@ 3c], lea_rsi_[rsp+0x38], mov_rdi_rbp, call_0xffffffffffffd@@ 75@@ 5, test_eax_eax, js_0x2@@ 8f, mov_ecx_dword_ptr_[rsp+0x38], test_ecx_ecx, jne_0x65, mov_rdx_qword_ptr_[rsp+8], lea_rsi_[rip+0x1a@@ c@@ 34], mov_edi_7, xor_eax_eax, call_0xffffffffffff4e@@ 8d, mov_rdi_qword_ptr_[rsp+0x10], call_0xffffffffffff3a@@ 83, mov_dword_ptr_[rsp+0x3c]_eax, mov_r8d_eax, test_eax_eax, jle_0x@@ 2@@ 98, cmp_eax_0x1@@ 00000, mov_ecx_0x200, mov_eax@@ _0x1000, cmovne@@ _ecx_eax, mov_rdx_qword_ptr_[rsp+8], lea_rsi_[rip+0x1a@@ c@@ 59], mov_edi_7, xor_eax_eax, mov_dword_ptr_[rsp+0x3@@ 8]_ecx, call_0xffffffffffff4e@@ 46, mov_ecx_dword_ptr_[rsp+0x38], mov_rdx_qword_ptr_[rsp+8], mov_r8d_dword_ptr_[rsp+0x@@ 3c], xor_eax_eax, lea_rsi_[rip+0x1a@@ c7@@ a], mov_edi_7, call_0xffffffffffff4e@@ 25, mov_eax_dword_ptr_[rsp+0x3c], mov_edx_0x1@@ 10, mov_dword_ptr_[r15+0x@@ 4@@ 54]_eax, mov_eax_dword_ptr_[rsp+0x38], cmp_eax@@ _0x1000, mov_dword_ptr_[r15+0x@@ 45@@ 0]_eax, mov_eax_0x2@@ 80, cmovne_eax_edx, mov_edx_dword_ptr_[rip+0x2@@ 2b@@ 28@@ 6], mov_dword_ptr_[r15+0x@@ 38]_eax, test_edx_edx, jne_0x1@@ 65, mov_rsi_r15, mov_rdi_rbx, call_0xffffffffffffd@@ 7c@@ 0, mov_ecx_eax, test_eax_eax, js_0x2@@ 1f, and_eax_1, shl_eax@@ _5, mov_edx_eax, movzx_eax_byte_ptr_[rbx+0x1@@ e0], and_eax_0xffffffdf, or_eax_edx, mov_byte_ptr_[rbx+0x1@@ e0@@ ]_al, test_ecx_ecx, je_0xfffffffffffffe@@ 4d, mov_eax_dword_ptr_[rip+0x2@@ 2b@@ 24@@ 6], test_eax_eax, jne_0x1@@ a6, cmp_byte_ptr_[rip+0x2@@ 2b@@ 18@@ 3]_0, je_0x1b, mov_rsi_qword_ptr_[rsp+8], lea_rdi_[rip+0x22@@ b@@ 17@@ 5], call_0xffffffffffff3a@@ 05, test_eax_eax, jne_0x1@@ e9, mov_r14_qword_ptr_[rsp+8], mov_edx_0x40, mov_rsi_r14, lea_rdi_[rip+0x22@@ b@@ 15@@ 4], call_0xffffffffffff3a@@ d4, lea_rcx_[rip+0x@@ 22@@ b@@ 148], mov_rdx_r14, lea_rsi_[rip+0x1a@@ c6@@ e], mov_edi_7, xor_eax_eax, call_0xffffffffffff4d@@ 47, jmp_0xfffffffffffffdd@@ a, call_0xffffffffffff3@@ 948, mov_ecx_dword_ptr_[rax], lea_rdx_[r@@ bx+0x10], mov_r8_rbp, lea_rsi_[rip+0x1a@@ 9@@ bb], mov_edi_3, xor_eax_eax, call_0xffffffffffff4d@@ 1c, mov_r12d@@ _0xffffff@@ 2c, jmp_0xfffffffffffffc@@ 6d, mov_r14_qword_ptr_[rsp+8], mov_edx_0x40, mov_rsi_r14, lea_rdi_[rip+0x22@@ b0@@ e4], call_0xffffffffffff3a@@ 64, mov_rdx_r14, lea_rsi_[rip+0x1a@@ 9e@@ 5], mov_edi_7, xor_eax_eax, call_0xffffffffffff4c@@ de, jmp_0xfffffffffffffd@@ 71, mov_r15@@ _-1, jmp_0xfffffffffffffb@@ a4, mov_rdx_qword_ptr_[rsp+8], mov_ecx_eax, lea_rsi_[rip+0x19@@ e@@ 54], mov_edi_3, xor_eax_eax, call_0xffffffffffff4c@@ ab, mov_r12d@@ _0xffffff@@ 2a, mov_edi_dword_ptr_[r@@ 15+0x@@ 4@@ 58], test_edi_edi, je_0xfffffffffffffb@@ eb, call_0xffffffffffff@@ 32@@ 51, jmp_0xfffffffffffffb@@ e0, or_byte_ptr_[r@@ bx+0x1@@ e@@ 0]_0x20, jmp_0xfffffffffffffed8, mov_rdx_qword_ptr_[rsp+8], mov_ecx_eax, lea_rsi_[rip+0x19@@ e@@ 26], mov_edi_3, xor_eax_eax, call_0xffffffffffff4c@@ 66, mov_r12d@@ _0xffffff@@ 2a, jmp_0xffffffffffffffbb, call_0xffffffffffff38@@ 69, mov_edi_dword_ptr_[rax], call_0xffffffffffff36@@ 82, mov_rdx_qword_ptr_[rip+0x2@@ 2b@@ 0@@ 7e], mov_rcx_rax, lea_rsi_[rip+0x19@@ e@@ 5c], mov_edi_7, xor_eax_eax, call_0xffffffffffff4c@@ 35, jmp_0xfffffffffffffb@@ 1d, mov_r15@@ _-1, jmp_0xfffffffffffffb@@ 11, mov_rdx_qword_ptr_[rsp+8], mov_ecx_eax, lea_rsi_[rip+0x1a@@ 97@@ 1], mov_edi_3, xor_eax_eax, call_0xffffffffffff4c@@ 0a, mov_r12d@@ _0xffffff@@ 2a, jmp_0xffffffffffffff5f, mov_rdx_qword_ptr_[rsp+8], lea_rsi_[rip+0x1a@@ a@@ 96], mov_edi_3, xor_eax_eax, call_0xffffffffffff4b@@ e7, jmp_0xfffffffffffffc@@ 7a, mov_rdx_qword_ptr_[rsp+8], mov_ecx_eax, lea_rsi_[rip+0x1a@@ 9a@@ 7], mov_edi_3, xor_eax_eax, call_0xffffffffffff4b@@ c8, mov_r12d@@ _0xffffffea, jmp_0xffffffffffffff1d, mov_rdx_qword_ptr_[rsp+8], lea_rsi_[rip+0x1a@@ a@@ 24], mov_edi_3, xor_eax_eax, call_0xffffffffffff4b@@ a5, mov_r12d@@ _0xffffff@@ 2c, jmp_0xfffffffffffffefa, mov_rdx_qword_ptr_[rsp+8], lea_rcx_[rip+0x@@ 22@@ a@@ f7@@ 9], lea_rsi_[rip+0x1a@@ a5@@ a], mov_edi_3, xor_eax_eax, call_0xffffffffffff4b@@ 7b, jmp_0xfffffffffffffc@@ 0e, call_0xffffffffffff37@@ e1, mov_r12d@@ _0xfffffff4, jmp_0xfffffffffffffa@@ c@@ 2
endbr64, push_r14, mov_eax_dword_ptr_[rip+0x2@@ 2a@@ fe@@ 8], lea_r14_[r@@ di+0x10], push_r13, push_r12, push_rbp, push_rbx, test_eax_eax, jne_0x78, mov_r13_qword_ptr_[r@@ di+0x158], mov_edx_dword_ptr_[rip+0x2@@ 2a@@ fe@@ 5], mov_rbx_rdi, mov_ebp_esi, mov_rdi_r13, xor_esi_esi, call_0xffffffffffff30@@ af, mov_r12d_eax, cmp_eax@@ _-0x@@ 11, jne_0xa, test_ebp_ebp, jne_0xb0, test_r12d_r12d, js_0x5@@ 7, xor_ecx_ecx, mov_edx_4, xor_esi_esi, mov_rdi_r14, call_0xffffffffffff3@@ 1e@@ 9, mov_r12d_eax, test_eax_eax, js_0x@@ c7, mov_rdx_r14, xor_eax_eax, lea_rsi_[rip+0x19@@ cb@@ d], mov_edi_7, call_0xffffffffffff4a@@ e8, pop_rbx, pop_rbp, xor_r12d_r12d, mov_eax_r12d, pop_r12, pop_r13, pop_r14, ret, mov_edi_2, call_0xffffffffffff34@@ 8b, jmp_0xffffffffffffffcd, mov_ecx_r12d, mov_rdx_r14, lea_rsi_[rip+0x1a@@ a4@@ b], mov_edi_3, xor_eax_eax, call_0xffffffffffff4a@@ ac, mov_edi_dword_ptr_[r@@ 13+0x@@ 4@@ 58], call_0xffffffffffff30@@ 60, test_eax_eax, jne_0x49, mov_rdi_r13, call_0xffffffffffff@@ 33@@ 64, mov_qword_ptr_[rbx+0x1@@ 58]_0, mov_eax_r12d, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rdx_r14, lea_rsi_[rip+0x1a@@ 9d@@ 6], mov_edi_7, xor_eax_eax, call_0xffffffffffff4a@@ 5f, jmp_0xffffffffffffff61, lea_rsi_[rip+0x1a@@ a@@ 41], mov_edi_3, xor_eax_eax, call_0xffffffffffff4a@@ 42, jmp_0xffffffffffffffa6, mov_ecx_eax, mov_rdx_r14, lea_rsi_[rip+0x1a@@ 9f@@ 4], mov_edi_3, xor_eax_eax, call_0xffffffffffff4a@@ 25, xor_esi_esi, mov_rdi_r13, call_0xffffffffffff3@@ 30@@ b, jmp_0xffffffffffffff6@@ f
endbr64, push_r14, mov_eax_dword_ptr_[rip+0x2@@ 2a@@ e@@ 98], lea_r14_[r@@ di+0x10], push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, mov_r13_qword_ptr_[r@@ di+0x158], test_eax_eax, je_0x3e, mov_rdi_r13, call_0xffffffffffff3@@ 2b@@ 9, mov_qword_ptr_[rbx+0x1@@ 58]_0, lea_rsi_[rip+0x22@@ adc@@ 2], mov_rdi_r14, call_0xffffffffffff36@@ 4f, mov_r12d_eax, test_eax_eax, je_0x55, xor_r12d_r12d, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, ret, mov_ebp_esi, mov_rdi_r13, xor_esi_esi, call_0xffffffffffff@@ 32@@ 99, mov_r12d_eax, test_eax_eax, js_0x@@ c7, test_ebp_ebp, jne_0x5f, mov_edi_dword_ptr_[r@@ 13+0x@@ 4@@ 58], call_0xffffffffffff2f@@ 4e, test_eax_eax, je_0xffffffffffffff@@ 9b, lea_rsi_[rip+0x1a@@ 97@@ 6], mov_edi_3, xor_eax_eax, call_0xffffffffffff4@@ 97@@ 7, jmp_0xffffffffffffff86, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pxor_xmm0_xmm0, pop_r13, mov_byte_ptr_[rip+0x2@@ 2a@@ d@@ 8c]_0, movups_xmmword_ptr_[r@@ ip+0x2@@ 2a@@ d@@ 45@@ ]_xmm0, movups_xmmword_ptr_[r@@ ip+0x2@@ 2a@@ d@@ 4e@@ ]_xmm0, movups_xmmword_ptr_[r@@ ip+0x2@@ 2a@@ d@@ 57@@ ]_xmm0, movups_xmmword_ptr_[r@@ ip+0x2@@ 2a@@ d@@ 60]_xmm0, pop_r14, ret, movabs_rax_0x6@@ 46@@ 57@@ 37@@ 56@@ e@@ 75@@ 23, mov_qword_ptr_[r13]_rax, xor_edx_edx, mov_qword_ptr_[r13@@ +8]_rdx, pxor_xmm0_xmm0, mov_ecx_dword_ptr_[rip+0x2@@ 2a@@ dc@@ 6], xor_edx_edx, xor_esi_esi, movups_xmmword_ptr_[r@@ 13+0x1@@ 0]_xmm0, movups_xmmword_ptr_[r@@ 13+0x@@ 20]_xmm0, mov_rdi_r13, call_0xffffffffffff2e@@ b9, test_eax_eax, jns_0xffffffffffffff@@ 6d, mov_ecx_eax, lea_r8_[r@@ 13+0x40], mov_rdx_r14, lea_rsi_[rip+0x1a@@ 93@@ c], mov_edi_3, xor_eax_eax, call_0xffffffffffff48@@ e5, jmp_0xffffffffffffff4b, mov_ecx_eax, mov_rdx_r14, lea_rsi_[rip+0x1a@@ 8f@@ c], mov_edi_3, xor_eax_eax, call_0xffffffffffff48@@ c5, jmp_0xffffffffffffff0@@ 0
endbr64, push_rbp, lea_rbp_[r@@ si+0x@@ c9], push_rbx, mov_rbx_rsi, sub_rsp_8, mov_rdi_qword_ptr_[r@@ si+0x@@ 55@@ 9], test_rdi_rdi, je_7, call_0xffffffffffff3@@ 160, mov_rdi_rbp, mov_edx_0x4@@ 98, xor_esi_esi, call_0xffffffffffff2d@@ f1, and_byte_ptr_[r@@ bx+0x@@ 60]@@ _0xfe, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret
endbr64, push_r15, lea_r15_[r@@ si+0x@@ c9], push_r14, push_r13, push_r12, mov_r12d_edx, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_0xc8, mov_qword_ptr_[rsp+8]_rcx, mov_qword_ptr_[rsp+0x10]_r8, mov_dword_ptr_[rsp]@@ _r9d, mov_r13_qword_ptr_[r@@ di+0x158], movzx_r14d_byte_ptr_[r@@ si+0x@@ 51], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xb8]_rax, xor_eax_eax, mov_dword_ptr_[rsp+4]_0, test_byte_ptr_[rsi+0x@@ 60]_1, je_0x2@@ 4a, mov_eax_dword_ptr_[rip+0x2@@ 2a@@ c9@@ e], mov_qword_ptr_[rsp+0x20]@@ _r15, test_eax_eax, jne_0x1@@ e7, cmp_r14b@@ _3, je_0x4@@ 15, cmp_r12d_2, je_0x2@@ ab, cmp_r12d@@ _3, jne_0x@@ 67@@ f, mov_r9_qword_ptr_[rsp+0x20], lea_r8_[rip+0x@@ 1bb@@ ea], mov_eax_dword_ptr_[r@@ 9+0x@@ 78], sub_r9@@ _-0x80, and_eax_0xfffffffb, or_eax@@ _8, mov_dword_ptr_[r@@ 9@@ -@@ 8]_eax, mov_rax_qword_ptr_[r@@ 9+0x@@ 400], sub_rsp_8, push_rax, lea_r15_[r@@ bp+0x10], lea_r14_[r@@ bx+0x10], mov_edi_7, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x1a@@ 8a@@ 7], xor_eax_eax, call_0xffffffffffff47@@ 85, mov_r9d_dword_ptr_[rip+0x2@@ 2a@@ c0@@ d], pop_rdi, pop_r8, test_r9d_r9d, jne_0x2@@ 6b, xor_edx_edx, cmp_qword_ptr_[rbp+0x@@ 55@@ 9]_0, setne_dl, mov_esi_dword_ptr_[r@@ sp], mov_eax_edx, or_eax_4, test_esi_esi, cmovne@@ _edx_eax, mov_edi_dword_ptr_[r@@ 13+0x@@ 4@@ 58], pxor_xmm0_xmm0, movabs_rax_0x6@@ 4@@ 6b@@ 6@@ 36@@ f@@ 6c@@ 6d@@ 7@@ 66@@ c, or_edx@@ _8, lea_r9_[rsp+0x@@ 30], lea_r8_[rsp+0x@@ 20], mov_ecx_1, mov_esi_0xffffffff, mov_qword_ptr_[rsp+0x30]_rax, movups_xmmword_ptr_[rsp+0x@@ 38]_xmm0, movups_xmmword_ptr_[rsp+0x@@ 48@@ ]_xmm0, movups_xmmword_ptr_[rsp+0x@@ 58@@ ]_xmm0, call_0xffffffffffff3@@ 2d@@ 3, mov_r10d_eax, cmp_eax@@ _-0x@@ b, je_0x6@@ 46, cmp_eax@@ _-0x@@ 5a, je_0x2@@ 2f, mov_ecx_dword_ptr_[rsp], test_ecx_ecx, setne_al, cmp_r10d@@ _-0x@@ 75, jne_0xa, test_al_al, jne_0x4@@ fe, cmp_r10d@@ _-2, jne_0xa, test_al_al, jne_0x4@@ be, lea_eax_[r@@ 10+0x@@ f4], cmp_eax_1, jbe_0x@@ 5@@ 9a, cmp_r10d@@ _0xffffff@@ 0b, je_0x5@@ 8d, cmp_r10d@@ _0xffffff@@ 36, je_0x6@@ 2a, lea_eax_[r@@ 10+0x@@ d5], cmp_eax_1, jbe_0x@@ 5a@@ a, cmp_r10d@@ _0xffffff@@ 09, je_0x@@ 60@@ 5, test_r10d_r10d, js_0x1@@ c5, cmp_qword_ptr_[rbp+0x@@ 55@@ 9]_0, je_0x45, mov_rsi_qword_ptr_[rsp+0x20], lea_rdx_[rsp+0x28], mov_ecx_8, xor_edi_edi, call_0xffffffffffff2f@@ ea, mov_r10d_eax, test_eax_eax, js_0x2@@ 50, mov_rax_qword_ptr_[rbp+0x@@ 55@@ 9], mov_rdx_qword_ptr_[rsp+0x28], mov_rcx_qword_ptr_[rsp+8], mov_qword_ptr_[rax]_rdx, mov_rax_qword_ptr_[rsp+0x28], mov_qword_ptr_[rcx]_rax, mov_rax_qword_ptr_[rsp+0xb8], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ 5e@@ 4, add_rsp_0xc8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r10d, pop_r15, ret, test_byte_ptr_[rbx+0x1@@ e@@ 0]_0x20, je_0xfffffffffffffe@@ 18, lea_eax_[r@@ 14-1], cmp_al_1, ja_0xfffffffffffffe@@ 0c, mov_r15d@@ _dword_ptr_[rip+0x2@@ 2a@@ a@@ 7c], mov_eax_1, test_r15d_r15d, je_0x3@@ 80, shl_eax@@ _5, mov_edx_eax, movzx_eax_byte_ptr_[rbx+0x1@@ e0], and_eax_0xffffffdf, or_eax_edx, mov_byte_ptr_[rbx+0x1@@ e0@@ ]_al, jmp_0xfffffffffffffdd@@ a, lea_rsi_[r@@ di+0x10], mov_edx@@ _0x30, mov_rdi_r15, call_0xffffffffffff@@ 33@@ 1c, lea_rsi_[r@@ bp+0x10], lea_rdi_[rbp+0x@@ f9], mov_edx@@ _0x30, call_0xffffffffffff3@@ 30@@ 7, mov_dword_ptr_[rbp+0x@@ 14@@ 5]_1, mov_edx_0x400, lea_rdi_[rbp+0x@@ 14@@ 9], lea_rsi_[r@@ 13+0x40], call_0xffffffffffff34@@ 78, cmp_dword_ptr_[r13+0x@@ 45@@ 0]@@ _0x1000, mov_eax_0x2@@ 80, mov_edx_0x1@@ 10, cmovne_eax_edx, mov_dword_ptr_[rbp+0x@@ 14@@ 1]_eax, cmp_r14b@@ _1, je_0x2@@ 39, cmp_r14b@@ _2, je_0xf7, or_byte_ptr_[r@@ bp+0x@@ 60]_1, mov_dword_ptr_[rsp+@@ 4]_1, jmp_0xfffffffffffffd@@ 39, mov_r9_qword_ptr_[rsp+0x20], lea_r8_[rip+0x@@ 17@@ 1a@@ f], or_dword_ptr_[r@@ 9+0x@@ 7@@ 8]_0xc, mov_rax_qword_ptr_[r@@ 9+0x@@ 480], sub_r9@@ _-0x80, jmp_0xfffffffffffffd@@ 6e, mov_rax_qword_ptr_[rbp+0x@@ 55@@ 9], xor_r10d_r10d, test_rax_rax, je_0xfffffffffffffe@@ c3, movzx_edx_word_ptr_[r@@ ax], mov_rbx_qword_ptr_[rsp+8], mov_word_ptr_[r@@ bx@@ ]_dx, movzx_edx_word_ptr_[r@@ ax+2], mov_eax_dword_ptr_[rax+4], mov_word_ptr_[rbx+@@ 2]_dx, mov_dword_ptr_[rbx+4]_eax, jmp_0xfffffffffffffea@@ 4, cmp_byte_ptr_[rbp+0x@@ 5@@ 1@@ ]_3, je_0x4@@ 4d, mov_r8d_r10d, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x1a@@ 6@@ fe], mov_edi_3, xor_eax_eax, mov_dword_ptr_[rsp]@@ _r10d, call_0xffffffffffff4@@ 4a@@ b, mov_r10d_dword_ptr_[rsp], cmp_r10d@@ _0xffffff@@ 1d, jne_0x1d, cmp_byte_ptr_[rbp+0x@@ 5@@ 1]_1, jne_0x17, mov_edx_dword_ptr_[rip+0x2@@ 2a@@ 92@@ 1], test_edx_edx, je_0x1@@ 93, or_byte_ptr_[r@@ bx+0x1@@ e@@ 0]_0x20, mov_eax_dword_ptr_[rsp+4], mov_r10d@@ _0xffffff@@ 23, test_eax_eax, je_0xfffffffffffffe@@ 3a, mov_rsi_rbp, mov_rdi_rbx, mov_dword_ptr_[rsp]@@ _r10d, call_0xfffffffffffffbb@@ 2, mov_r10d_dword_ptr_[rsp], jmp_0xfffffffffffffe@@ 21, movsxd_rax_dword_ptr_[r@@ 13+0x@@ 45@@ 4], imul_rax_rax@@ _0x42, mov_qword_ptr_[rbp+0x@@ 54@@ 9]_rax, mov_esi_8, mov_edi_1, call_0xffffffffffff3@@ 144, mov_qword_ptr_[rbp+0x@@ 55@@ 9]_rax, test_rax_rax, jne_0xfffffffffffffe@@ e4, mov_r10d@@ _0xfffffff4, jmp_0xfffffffffffffd@@ e1, mov_r8d_eax, mov_rcx_r15, xor_eax_eax, mov_rdx_r14, lea_rsi_[rip+0x1a@@ 69@@ 6], mov_edi_3, call_0xffffffffffff4@@ 3f@@ 9, mov_rax_qword_ptr_[rbp+0x@@ 55@@ 9], xor_r10d_r10d, mov_qword_ptr_[rax]_0, mov_rax_qword_ptr_[rsp+8], mov_qword_ptr_[rax]_0, jmp_0xfffffffffffffd@@ 9f, lea_r14_[r@@ bp+0x@@ 88], mov_rdi_r14, call_0xffffffffffffd@@ 18@@ 6, test_eax_eax, js_0x2@@ 0f, lea_r15_[rsp+0x@@ 70], pxor_xmm0_xmm0, mov_rsi_r15, mov_rdi_r14, mov_byte_ptr_[rsp+0x@@ b0]_0, movaps_xmmword_ptr_[rsp+0x70]_xmm0, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm0, call_0xffffffffffffc@@ 8e@@ 5, mov_r10d_eax, test_eax_eax, js_0x1@@ fb, call_0xffffffffffff2f@@ 85, mov_dword_ptr_[rax]_0, mov_rdi_r15, mov_edx_0xa, xor_esi_esi, mov_qword_ptr_[rsp+0x18]_rax, call_0xffffffffffff3@@ 10b, mov_rcx_qword_ptr_[rsp+0x18], mov_r15_rax, mov_r11d_dword_ptr_[r@@ cx], test_r11d_r11d, jne_0x1@@ c2, mov_r10d_dword_ptr_[r@@ sp+4], test_r10d_r10d, jne_0x12, mov_r8_qword_ptr_[r@@ bp+0x@@ 54@@ 9], cmp_r8_rax, jne_0x@@ ee, mov_qword_ptr_[rbp+0x@@ 54@@ 9]@@ _r15, jmp_0xfffffffffffffb@@ 42, movsxd_rdx_dword_ptr_[r@@ 13+0x@@ 45@@ 4], mov_rax_rdx, shl_rax_6, add_rax_rdx, mov_qword_ptr_[rbp+0x@@ 54@@ 9]_rax, jmp_0xfffffffffffffe@@ c2, mov_rsi_qword_ptr_[r@@ bx+0x158], mov_rdi_rbx, call_0xffffffffffffc@@ cc@@ e, mov_edx_eax, and_edx_1, mov_ecx_edx, movzx_edx_byte_ptr_[r@@ bx+0x1@@ e0], shl_ecx@@ _5, and_edx_0xffffff@@ df, or_edx_ecx, mov_byte_ptr_[rbx+0x1@@ e@@ 0]_dl, test_eax_eax, jne_0xfffffffffffffe@@ 4d, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x1a@@ 5@@ 28], mov_edi_3, call_0xffffffffffff4@@ 2b@@ 3, mov_rsi_r14, lea_rdi_[rip+0x22@@ a6@@ 94], call_0xffffffffffff2f@@ 24, mov_r10d@@ _0xffffff@@ cf, test_eax_eax, jne_0xfffffffffffffc@@ 5f, pxor_xmm0_xmm0, mov_byte_ptr_[rip+0x2@@ 2a@@ 6b@@ 6]_0, movups_xmmword_ptr_[r@@ ip+0x2@@ 2a@@ 66@@ f@@ ]_xmm0, movups_xmmword_ptr_[r@@ ip+0x2@@ 2a@@ 67@@ 8]_xmm0, movups_xmmword_ptr_[r@@ ip+0x2@@ 2a@@ 68@@ 1@@ ]_xmm0, movups_xmmword_ptr_[r@@ ip+0x2@@ 2a@@ 6@@ 8a@@ ]_xmm0, jmp_0xfffffffffffffc@@ 32, mov_rsi_qword_ptr_[r@@ bx+0x158], mov_rdi_rbx, call_0xffffffffffffcc@@ 36, and_eax_1, movzx_r14d_byte_ptr_[r@@ bp+0x@@ 51], jmp_0xfffffffffffffc@@ 6f, mov_r9_rax, lea_rcx_[r@@ bp+0x10], lea_rdx_[r@@ bx+0x10], lea_rsi_[rip+0x1a@@ 3@@ 1e], mov_edi_7, xor_eax_eax, call_0xffffffffffff4@@ 22@@ 7, jmp_0xfffffffffffffefa, xor_eax_eax, mov_r8d_r12d, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x1a@@ 3e@@ b], mov_edi_7, call_0xffffffffffff4@@ 20@@ 6, mov_rax_qword_ptr_[rsp+0x10], mov_r10d@@ _0xfffffffe, mov_dword_ptr_[rax]_0, jmp_0xfffffffffffffbb@@ 8, xor_eax_eax, mov_r8d_r12d, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x1a@@ 38@@ 9], mov_edi_7, call_0xffffffffffff4@@ 1d@@ 4, mov_rax_qword_ptr_[rsp+0x10], mov_r10d@@ _0xffffff@@ 8b, mov_dword_ptr_[rax]_0, jmp_0xfffffffffffffb@@ 86, mov_dword_ptr_[rsp]_eax, lea_rcx_[r@@ bp+0x10], lea_rdx_[r@@ bx+0x10], mov_r8_r14, lea_rsi_[rip+0x1a@@ 22@@ 3], mov_edi_3, xor_eax_eax, call_0xffffffffffff4@@ 19@@ 4, mov_r10d_dword_ptr_[rsp], jmp_0xfffffffffffffb@@ 53, or@@ _r10d@@ _0xffffffff, mov_r8d_r10d, lea_rcx_[r@@ bp+0x10], lea_rdx_[r@@ bx+0x10], mov_r9_r14, lea_rsi_[rip+0x1a@@ 22@@ 3], mov_edi_3, xor_eax_eax, mov_dword_ptr_[rsp]@@ _r10d, call_0xffffffffffff4@@ 160, mov_r10d_dword_ptr_[rsp], jmp_0xfffffffffffffb@@ 1f, mov_edx_r12d, lea_rsi_[rip+0x19@@ 3@@ 34], mov_edi_3, xor_eax_eax, call_0xffffffffffff4@@ 14@@ 1, mov_r10d@@ _0xffffffea, jmp_0xfffffffffffffa@@ fe, xor_eax_eax, mov_r9d@@ _r10d, mov_r8d_r12d, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x1a@@ 3@@ 34], mov_edi_7, call_0xffffffffffff4@@ 11@@ 7, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x10], cmp_r12d_2, sete_al, mov_dword_ptr_[rbx]_eax, mov_r10d@@ _0xfffffff@@ 5, jmp_0xfffffffffffffa@@ c4, mov_r9d@@ _r10d, xor_eax_eax, mov_r8d_r12d, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x1a@@ 2f@@ a], mov_edi_7, call_0xffffffffffff40@@ dd, mov_rax_qword_ptr_[rsp+0x10], mov_r10d@@ _0xfffffff@@ 5, mov_dword_ptr_[rax]_0, jmp_0xfffffffffffffa@@ 8f, mov_dword_ptr_[rsp]_eax, mov_r8d_r12d, xor_eax_eax, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x1a@@ 1f@@ 5], mov_edi_7, call_0xffffffffffff40@@ a8, mov_rax_qword_ptr_[rsp+0x10], mov_r10d_dword_ptr_[rsp], mov_dword_ptr_[rax]_0, jmp_0xfffffffffffffa@@ 5c, mov_r9d@@ _0xffffff@@ 09, jmp_0xffffffffffffff95, mov_r9d@@ _0xffffff@@ 36, jmp_0xffffffffffffff8d, mov_dword_ptr_[rsp]_eax, mov_rax_qword_ptr_[rsp+0x20], mov_rcx_r15, mov_r8_qword_ptr_[r@@ ax+0x4@@ 80], mov_rdx_r14, xor_eax_eax, lea_rsi_[rip+0x1a@@ 1d@@ 9], mov_edi_7, call_0xffffffffffff40@@ 5c, mov_rax_qword_ptr_[rsp+0x10], mov_r10d_dword_ptr_[rsp], mov_dword_ptr_[rax]_0, jmp_0xfffffffffffffa@@ 10, call_0xffffffffffff2c@@ b@@ 3
endbr64, push_r15, push_r14, mov_r14d_ecx, push_r13, lea_r13_[r@@ si+0x@@ c9], push_r12, push_rbp, mov_ebp_edx, push_rbx, mov_rbx_rsi, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_rax_qword_ptr_[rdi+0x158], mov_qword_ptr_[rsp+8]_rax, lea_eax_[rdx+1], cmp_eax_4, ja_0x2@@ 72, lea_rdx_[rip+0x1a@@ 480], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, movzx_eax_byte_ptr_[rbx+0x@@ 52], inc_eax, cmp_al_4, ja_0x2@@ 31, lea_rdx_[rip+0x1a@@ 45@@ f], movzx_eax_al, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, lea_r12_[r@@ di+0x10], lea_r15_[r@@ bx+0x10], mov_rdx_r12, mov_rcx_r15, lea_rsi_[rip+0x1a@@ 23@@ b], mov_edi_7, xor_eax_eax, call_0xffffffffffff3@@ f7@@ 4, mov_edx_dword_ptr_[rip+0x2@@ 2a@@ 3@@ fd], test_edx_edx, jne_0x27, mov_rax_qword_ptr_[rbx+0x@@ 55@@ 9], test_r14d_r14d, je_0x1b, test_rax_rax, je_0x16, cmp_byte_ptr_[rbx+0x@@ 52@@ ]_3, je_0x1@@ 78, mov_eax_dword_ptr_[rbx+0x1@@ 41], mov_ecx_eax, or_ecx@@ _4, and_eax_0xfffffffb, cmp_ebp_2, cmove_eax_ecx, mov_dword_ptr_[rbx+0x1@@ 4@@ 1]_eax, test_edx_edx, jne_0x@@ bc, mov_rax_qword_ptr_[rsp+8], mov_rcx_r13, mov_edi_dword_ptr_[r@@ ax+0x4@@ 58], mov_edx_8, mov_esi_0xffffffff, call_0xffffffffffff2b@@ 46, mov_r8d_eax, test_eax_eax, je_0x94, cmp_eax@@ _0xffffff@@ 37, jge_0x@@ 91, cmp_eax@@ _0xffffff@@ 09, jl@@ _0x18, lea_eax_[r@@ ax+0x@@ f7], movabs_rdx@@ _0x2@@ 00@@ c@@ 0000@@ 00@@ 1d, bt@@ _rdx_rax, jb@@ _0x7@@ 5, xor_eax_eax, mov_rcx_r15, mov_rdx_r12, lea_rsi_[rip+0x1a@@ 20@@ f], mov_edi_3, call_0xffffffffffff3e@@ ba, mov_eax@@ _0xffffff@@ 23, mov_rsi_qword_ptr_[rsp+0x18], xor_rsi_qword_ptr_fs:[0x28], jne_0x14@@ 4, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, xor_eax_eax, jmp_0xffffffffffffffb6, cmp_eax@@ _-0x@@ b, jne_0xffffffffffffff8f, xor_eax_eax, mov_rcx_r15, mov_rdx_r12, lea_rsi_[rip+0x1a@@ 17@@ c], mov_edi_7, call_0xffffffffffff3e@@ 47, mov_eax@@ _0xfffffff@@ 5, jmp_0xffffffffffffff8d, cmp_word_ptr_[r@@ ax]_0, je_0x6c, mov_dword_ptr_[rax+@@ 4]_r14d, mov_rcx_r15, mov_rdx_r12, mov_rax_qword_ptr_[rax], lea_rsi_[rip+0x1a@@ 0@@ 9e], mov_qword_ptr_[rsp+0x10]_rax, mov_edi_7, xor_eax_eax, mov_r8d_r14d, call_0xffffffffffff3d@@ af, xor_edi_edi, lea_rdx_[rsp+0x10], mov_ecx_8, mov_rsi_r13, call_0xffffffffffff27@@ 3b, test_eax_eax, js@@ _0x3b, mov_edx_dword_ptr_[rip+0x2@@ 2a@@ 220], jmp_0xfffffffffffffe@@ 4c, lea_r8_[rip+0x@@ 1b0@@ 87], jmp_0xfffffffffffffd@@ f0, lea_r9_[rip+0x@@ 1b0@@ 7b], jmp_0xfffffffffffffd@@ b4, mov_edx_0x1@@ 01, mov_word_ptr_[rax@@ ]_dx, jmp_0xffffffffffffff8e, call_0xffffffffffff2@@ 9c@@ e, mov_r8d_eax, mov_rcx_r15, xor_eax_eax, mov_rdx_r12, lea_rsi_[rip+0x1a@@ 0@@ 4f], mov_edi_3, call_0xffffffffffff3d@@ 42, mov_eax@@ _0xffffff@@ 23, jmp_0xfffffffffffffe@@ 8@@ 8
endbr64, push_r15, mov_r9d_edx, push_r14, push_r13, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, push_rbx, mov_ebx_ecx, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_rax_qword_ptr_[rdi+0x158], mov_qword_ptr_[rsp+8]_rax, lea_rax_[r@@ si+0x@@ c9], mov_qword_ptr_[rsp+0x18]_rax, movzx_eax_byte_ptr_[r@@ si+0x@@ 52], inc_eax, cmp_al_4, ja_0x1@@ eb, lea_rdx_[rip+0x1a@@ 19@@ e], movzx_eax_al, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, sub_rsp_8, push_rbx, lea_r15_[r@@ bp+0x10], lea_r14_[r@@ 12+0x10], xor_eax_eax, mov_rdx_r14, lea_rsi_[rip+0x1a@@ 00@@ e], mov_edi_7, mov_rcx_r15, mov_dword_ptr_[rsp+0x14]@@ _r9d, call_0xffffffffffff3c@@ 89, pop_rsi, pop_rdi, mov_r9d_dword_ptr_[r@@ sp+4], mov_r13d@@ _dword_ptr_[rip+0x2@@ 2a@@ 10@@ a], test_r9d_r9d, mov_rdx_qword_ptr_[rbp+0x@@ 55@@ 9], setne_al, test_r13d_r13d, jne_0x96, test_rdx_rdx, je_0x10, test_al_al, je_0xc, cmp_byte_ptr_[rbp+0x@@ 52@@ ]_3, je_0xdb, and_ebx_1, je_0x10, movzx_eax_byte_ptr_[rbp+0x@@ 51], dec_eax, cmp_al_1, jbe_0x@@ 180, mov_rax_qword_ptr_[rsp+8], xor_edx_edx, mov_edi_dword_ptr_[r@@ ax+0x4@@ 58], lea_r8_[r@@ sp+0x18], mov_ecx_1, mov_esi_0xffffffff, call_0xffffffffffff24@@ 2e, test_eax_eax, js_0x1@@ 2f, xor_r13d_r13d, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x15@@ 3, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, pop_r14, pop_r15, ret, test_rdx_rdx, je_0xffffffffffffff@@ bc, test_al_al, je_0xffffffffffffff@@ b8, cmp_byte_ptr_[rbp+0x@@ 52@@ ]_3, jne_0xffffffffffffffb2, cmp_word_ptr_[r@@ dx@@ ]_0, jne_0xa, mov_ecx_0x10@@ 1, mov_word_ptr_[r@@ dx@@ ]_cx, mov_dword_ptr_[rdx+@@ 4]@@ _r9d, jmp_0xffffffffffffff9e, cmp_word_ptr_[r@@ dx@@ ]_0, jne_0xa, mov_eax_0x10@@ 1, mov_word_ptr_[r@@ dx@@ ]_ax, mov_dword_ptr_[rdx+@@ 4]@@ _r9d, mov_rcx_r15, lea_rsi_[rip+0x19@@ f0@@ 4], mov_rax_qword_ptr_[rdx], mov_edi_7, mov_qword_ptr_[rsp+0x20]_rax, mov_rdx_r14, xor_eax_eax, mov_r8d@@ _r9d, call_0xffffffffffff3b@@ 47, mov_rsi_qword_ptr_[rsp+0x18], xor_edi_edi, lea_rdx_[rsp+0x20], mov_ecx_8, call_0xffffffffffff24@@ d1, test_eax_eax, jns_0xfffffffffffffe@@ dd, mov_r8d_eax, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x19@@ ee@@ 4], mov_edi_3, xor_eax_eax, call_0xffffffffffff3b@@ 0d, mov_r13d@@ _0xffffff@@ 23, jmp_0xfffffffffffffef4, lea_r8_[rip+0x@@ 1a@@ d@@ f8], jmp_0xfffffffffffffe@@ 41, mov_r8d_eax, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0x19@@ ed@@ 0], mov_edi_3, xor_eax_eax, call_0xffffffffffff3a@@ d1, jmp_0xfffffffffffffe@@ be, mov_rsi_rbp, mov_rdi_r12, call_0xffffffffffffc@@ 64@@ a, mov_r13d_eax, jmp_0xfffffffffffffea@@ 4, call_0xffffffffffff27@@ 1@@ d
endbr64, push_r15, push_r14, push_r13, xor_r13d_r13d, push_r12, push_rbp, push_rbx, sub_rsp_0x28, mov_edx_dword_ptr_[rip+0x2@@ 2@@ 9f@@ 19], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0xc]_0, test_edx_edx, je_0x32, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x15@@ c, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, pop_r14, pop_r15, ret, lea_r15_[r@@ di+0x10], mov_r12_rdi, xor_r8d_r8d, xor_esi_esi, lea_rcx_[rsp+0x@@ c], lea_rdx_[rsp+0x10], mov_rdi_r15, call_0xffffffffffff2@@ 17@@ 7, test_eax_eax, js@@ _0xf0, mov_rbp_qword_ptr_[rsp+0x10], test_rbp_rbp, je_0xc2, mov_eax_dword_ptr_[rsp+0xc], test_eax_eax, je_0xb6, mov_ebx@@ _0, mov_r14d@@ _0, jg@@ _0x27, jmp_0x@@ e3, mov_eax_dword_ptr_[rbp-4], and_eax_0xf, cmp_eax_3, sete_al, movzx_eax_al, inc_ebx, add_r13@@ d_eax, cmp_dword_ptr_[rsp+0x@@ c]_ebx, jle_0x@@ 44, mov_r9d_dword_ptr_[r@@ bp+0x@@ 1c], mov_r8_qword_ptr_[r@@ bp+8], mov_rcx_qword_ptr_[rbp], xor_eax_eax, mov_rdx_r15, lea_rsi_[rip+0x1@@ 9d@@ ee], mov_edi_7, call_0xffffffffffff3@@ 9a@@ 1, mov_rax_qword_ptr_[rbp], add_rbp@@ _0x20, cmp_rax_qword_ptr_[r@@ 12+0x1@@ 60], jne_0xffffffffffffffb4, inc_ebx, mov_r14d_1, cmp_dword_ptr_[rsp+0x@@ c]_ebx, jg_0xffffffffffffff@@ c0, mov_rdi_qword_ptr_[rsp+0x10], call_0xffffffffffff2@@ 24@@ 7, test_r14d_r14d, jne_0xffffffffffffff@@ 0f, mov_ecx_r13d, mov_rdx_r15, lea_rsi_[rip+0x19@@ dd@@ 4], mov_edi_3, xor_eax_eax, call_0xffffffffffff3@@ 95@@ 5, xor_r13d_r13d, jmp_0xfffffffffffffeed, mov_rdx_r15, lea_rsi_[rip+0x18@@ b@@ 3b], mov_edi_3, xor_eax_eax, call_0xffffffffffff3@@ 92@@ f, xor_r13d_r13d, jmp_0xfffffffffffffe@@ c7, mov_ecx_eax, mov_rdx_r15, lea_rsi_[rip+0x1@@ 9d@@ 34], mov_edi_3, xor_eax_eax, call_0xffffffffffff3@@ 90@@ d, jmp_0xfffffffffffffea@@ 8, mov_rdi_rbp, call_0xffffffffffff2@@ 1c@@ d, jmp_0xffffffffffffff8f, call_0xffffffffffff2@@ 56@@ 6
endbr64, push_r13, xor_edx_edx, mov_r13_rdi, push_r12, push_rbp, push_rbx, sub_rsp_0x28, lea_rsi_[rsp+0xc], lea_rdi_[rsp+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0xc]_0, call_0xffffffffffff24@@ e2, test_eax_eax, js_0x@@ b6, mov_rbp_qword_ptr_[rsp+0x10], test_rbp_rbp, je_0xcd, mov_eax_dword_ptr_[rsp+0xc], test_eax_eax, je_0x9c, jle_0x@@ 8c, xor_r12d_r12d, jmp_0xc, inc_r12d, cmp_dword_ptr_[rsp+0x@@ c]@@ _r12d, jle_0x@@ 74, cmp_dword_ptr_[r@@ bp]@@ _0x5@@ f@@ 6d@@ 7@@ 66@@ c, jne_0xffffffffffffffef, call_0xffffffffffff8@@ 1c@@ d, mov_rbx_rax, test_rax_rax, je_0x9a, mov_byte_ptr_[rax+0x1@@ 54@@ ]_3, mov_rsi_rbp, lea_rdi_[r@@ bx+0x10], mov_rax_qword_ptr_[rbp+0x30], mov_edx_0x40, mov_qword_ptr_[rbx+0x1@@ 60]_rax, inc_r12d, call_0xffffffffffff2@@ 5a@@ b, lea_rsi_[r@@ bp+4], lea_rdi_[rbx+0x@@ 51], mov_edx_0x40, call_0xffffffffffff@@ 25@@ 99, mov_rax_qword_ptr_[r13+8], add_rbp@@ _0x4@@ 50, mov_qword_ptr_[r13@@ +@@ 8]_rbx, mov_qword_ptr_[rbx@@ ]_r13, mov_qword_ptr_[rbx+8]_rax, mov_qword_ptr_[rax]_rbx, cmp_dword_ptr_[rsp+0x@@ c]@@ _r12d, jg_0xffffffffffffff@@ 90, mov_rbp_qword_ptr_[rsp+0x10], mov_rdi_rbp, call_0xffffffffffff20@@ cc, xor_eax_eax, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x26, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, xor_eax_eax, jmp_0xffffffffffffffd9, mov_eax@@ _0xfffffff4, jmp_0xffffffffffffffce, call_0xffffffffffff24@@ 3@@ 1
endbr64, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_eax_dword_ptr_[rip+0x22@@ 9c@@ 26], test_eax_eax, je_0x20, mov_eax_dword_ptr_[rip+0x22@@ 9c@@ 20], mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x20, add_rsp_0x18, ret, lea_rdx_[rsp+4], mov_rsi_rsp, xor_edi_edi, call_0xffffffffffff24@@ a6, not_eax, shr_eax_0x1f, jmp_0xffffffffffffffd4, call_0xffffffffffff2@@ 3c@@ a
push_r13, mov_eax_dword_ptr_[rip+0x22@@ 9b@@ dc], push_r12, push_rbp, mov_rbp_rdi, test_eax_eax, jne_0x60, xor_esi_esi, lea_rdi_[rip+0x19@@ c@@ 35], xor_eax_eax, call_0xffffffffffff2@@ 17@@ 3, mov_r12d_eax, test_eax_eax, js_0x@@ d1, mov_edx_0x40, mov_rsi_rbp, mov_edi_eax, call_0xffffffffffff1e@@ 39, mov_r13d_eax, test_eax_eax, js_0x4@@ f, mov_esi_0xa, mov_rdi_rbp, call_0xffffffffffff22@@ 75, test_rax_rax, je_5, mov_byte_ptr_[rax]_0, mov_edi_r12d, call_0xffffffffffff1c@@ b5, mov_r13d_eax, test_eax_eax, jne_0x6b, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, ret, mov_dword_ptr_[rdi]@@ _0x7@@ 47@@ 36@@ 57@@ 4, mov_byte_ptr_[rdi+@@ 4]_0, xor_r13d_r13d, mov_eax_r13d, pop_rbp, pop_r12, pop_r13, ret, mov_edi_3, xor_eax_eax, mov_edx_r12d, lea_rsi_[rip+0x19@@ c@@ 17], call_0xffffffffffff36@@ af, mov_edi_r12d, call_0xffffffffffff1c@@ 67, test_eax_eax, je_0xffffffffffffff@@ b7, mov_edx_r12d, lea_rsi_[rip+0x1a@@ 1a@@ 4], mov_edi_3, xor_eax_eax, call_0xffffffffffff36@@ 8d, jmp_0xffffffffffffff9f, mov_edx_r12d, xor_eax_eax, lea_rsi_[rip+0x1a@@ 18@@ 4], mov_edi_3, call_0xffffffffffff36@@ 6f, pop_rbp, xor_r13d_r13d, pop_r12, mov_eax_r13d, pop_r13, ret, mov_edx_eax, lea_rsi_[rip+0x19@@ b7@@ f], mov_edi_7, xor_eax_eax, call_0xffffffffffff36@@ 48, mov_r13d@@ _r12d, jmp_0xffffffffffffff5@@ 7
endbr64, mov_eax_0x20, ret
endbr64, push_r13, pxor_xmm0_xmm0, mov_esi_0x10, push_r12, mov_r9d_1, lea_r8_[rip+0x@@ 18@@ 6b@@ d], push_rbp, mov_edx_1, mov_r13_rdi, push_rbx, mov_r12_rcx, mov_ecx_0x1@@ 1, sub_rsp_0x78, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x68]_rax, xor_eax_eax, lea_rbp_[rsp+0x20], movaps_xmmword_ptr_[rsp+0x20]_xmm0, movaps_xmmword_ptr_[rsp+0x30]_xmm0, movaps_xmmword_ptr_[rsp+0x40]_xmm0, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp]_xmm0, mov_byte_ptr_[rsp+0x@@ 60]_0, mov_byte_ptr_[rsp+0x1@@ 0]_0, mov_rbx_rsp, push_0, mov_rdi_rbx, push_0, call_0xffffffffffff@@ 23@@ 9b, mov_rdi_rbp, call_0xfffffffffffffe@@ 53, pop_rsi, pop_rdi, test_eax_eax, js_0x1@@ 34, mov_rcx_rbp, mov_edx_dword_ptr_[r@@ cx], add_rcx_4, lea_eax_[rdx-0x1010101], not_edx, and_eax_edx, and_eax_0x80808080, je_0xffffffffffffffeb, mov_edx_eax, shr_edx_0x10, test_eax_0x8080, cmove_eax_edx, lea_rdx_[r@@ cx+2], cmove@@ _rcx_rdx, mov_edi_eax, add@@ _dil@@ _al, sbb@@ _rcx@@ _3, sub_rcx@@ _rbp, mov_rdx_rbx, mov_esi_dword_ptr_[r@@ dx], add_rdx_4, lea_eax_[r@@ si-0x@@ 1010101], not_esi, and_eax@@ _esi, and_eax_0x80808080, je_0xffffffffffffffeb, mov_esi_eax, shr_esi@@ _0x10, test_eax_0x8080, cmove_eax@@ _esi, lea_rsi_[rdx@@ +2], cmove_rdx@@ _rsi, mov_edi_eax, add@@ _dil@@ _al, sbb_rdx_3, sub_rdx_rbx, lea_rax_[rcx@@ +rdx@@ +2], cmp_rax@@ _0x40, ja_0x@@ 95, sub_rsp_8, push_rbp, mov_rcx_-1, mov_edx_1, mov_r9_rbx, lea_r8_[rip+0x@@ 18@@ 5d@@ 1], mov_esi_0x40, mov_rdi_r12, xor_eax_eax, call_0xffffffffffff22@@ da, pop_rdx, pop_rcx, cmp_eax@@ _0x3f, jg@@ _0x40, xor_eax_eax, mov_rcx_r12, mov_rdx_r13, lea_rsi_[rip+0x19@@ aa@@ f], mov_edi_7, call_0xffffffffffff34@@ ca, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x@@ 68], xor_rbx_qword_ptr_fs:[0x28], jne_0x56, add_rsp_0x78, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_edx_eax, mov_rcx_r12, lea_rsi_[rip+0x19@@ a@@ 44], mov_edi_7, xor_eax_eax, call_0xffffffffffff34@@ 8d, jmp_0xffffffffffffffaa, xor_eax_eax, lea_rsi_[rip+0x19@@ e4@@ 1], mov_edi_3, call_0xffffffffffff34@@ 72, mov_eax@@ _0xffffff@@ 2c, jmp_0xffffffffffffffa5, mov_eax@@ _0xffffff@@ 2a, jmp_0xffffffffffffff9e, call_0xffffffffffff20@@ c@@ f
endbr64, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0xb8, mov_edx_dword_ptr_[rip+0x2@@ 2@@ 98@@ ca], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xa8]_rax, xor_eax_eax, mov_dword_ptr_[rsp]_0, mov_dword_ptr_[rsp+4]_0, mov_dword_ptr_[rsp+8]_0, test_edx_edx, je_0x4a, mov_edi_8, call_0xffffffffffff1b@@ 43, test_rax_rax, je_0x2@@ 40, mov_qword_ptr_[rbx+0x1@@ 58]_rax, xor_eax_eax, mov_rcx_qword_ptr_[rsp+0x@@ a8], xor_rcx_qword_ptr_fs:[0x28], jne_0x2@@ 1b, add_rsp_0xb8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, lea_r12_[rsp+0x10], pxor_xmm0_xmm0, mov_rdi_r12, mov_byte_ptr_[rsp+0x@@ 50]_0, mov_byte_ptr_[rsp+0x@@ a0]_0, movaps_xmmword_ptr_[rsp+0x10]_xmm0, movaps_xmmword_ptr_[rsp+0x20]_xmm0, movaps_xmmword_ptr_[rsp+0x30]_xmm0, movaps_xmmword_ptr_[rsp+0x40]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm0, movaps_xmmword_ptr_[rsp+0x70]_xmm0, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm0, call_0xfffffffffffffc@@ 29, test_eax_eax, js_0x1@@ 84, lea_rdx_[rsp+8], lea_rsi_[rsp+4], mov_rdi_rsp, call_0xffffffffffff1e@@ 7f, test_eax_eax, js@@ _0xf8, cmp_dword_ptr_[rsp@@ ]_6, je_0x9e, cmp_byte_ptr_[rbx+0x@@ d@@ 2]_0, je_0xffffffffffffff@@ 39, lea_r13_[r@@ bx+0x@@ d2], xor_ecx_ecx, xor_edx_edx, lea_rsi_[rsp+0xc], mov_rdi_r13, mov_dword_ptr_[rsp+0xc]_0, call_0xffffffffffffb@@ 8f@@ 0, test_eax_eax, js@@ _0x10@@ 9, mov_ecx_dword_ptr_[rsp+0xc], cmp_ecx_1, ja_0x@@ d0, lea_rbp_[rsp+0x@@ 60], mov_rsi_rbp, mov_rdi_r13, call_0xffffffffffffb@@ 85@@ b, test_eax_eax, js_0x1@@ 10, mov_rsi_rbp, mov_rdi_r12, call_0xffffffffffff1f@@ 68, test_eax_eax, je_0xfffffffffffffe@@ d9, xor_eax_eax, lea_rdx_[r@@ bx+0x10], mov_r8_rbp, mov_rcx_r12, lea_rsi_[rip+0x19@@ 9@@ 88], mov_edi_3, call_0xffffffffffff3@@ 2c@@ 3, mov_eax@@ _0xffffff@@ 2c, jmp_0xfffffffffffffe@@ cd, mov_eax_dword_ptr_[rsp+4], test_eax_eax, jne_0xffffffffffffff@@ 62, cmp_dword_ptr_[rsp+@@ 8]_1, jne_0xffffffffffffff@@ 57, mov_r8d_1, xor_ecx_ecx, mov_edx_6, lea_rsi_[rip+0x19@@ 8b@@ d], mov_edi_7, xor_eax_eax, call_0xffffffffffff3@@ 27@@ e, mov_dword_ptr_[rip+0x2@@ 28@@ 58@@ f]_1, jmp_0xffffffffffffff27, mov_edx_eax, lea_rsi_[rip+0x19@@ 85@@ 7], mov_edi_3, xor_eax_eax, call_0xffffffffffff@@ 32@@ 50, mov_dword_ptr_[rip+0x2@@ 28@@ 56@@ 1]_1, jmp_0xfffffffffffffeef, xor_eax_eax, mov_r8d_1, mov_rdx_r13, lea_rsi_[rip+0x19@@ 88@@ a], mov_edi_3, call_0xffffffffffff3@@ 22@@ 5, mov_eax@@ _0xffffff@@ 2c, jmp_0xfffffffffffffe@@ 2f, mov_ecx_eax, mov_rdx_r13, xor_eax_eax, lea_rsi_[rip+0x18@@ 54@@ a], mov_edi_3, call_0xffffffffffff3@@ 1f@@ d, mov_eax@@ _0xffffff@@ 2c, jmp_0xfffffffffffffe@@ 07, mov_eax@@ _0xffffff@@ 2a, jmp_0xfffffffffffffd@@ fd, xor_eax_eax, lea_rdx_[r@@ bx+0x10], mov_rcx_r13, lea_rsi_[rip+0x19@@ 85@@ c], mov_edi_3, call_0xffffffffffff3@@ 1c@@ f, mov_eax@@ _0xffffff@@ 2c, jmp_0xfffffffffffffdd@@ 9, call_0xffffffffffff1e@@ 30, mov_eax@@ _0xfffffff4, jmp_0xfffffffffffffd@@ c@@ a
endbr64, mov_eax_dword_ptr_[rip+0x22@@ 96@@ 3a], test_eax_eax, jne_0x64, push_r13, lea_r13_[r@@ di+0x10], push_r12, mov_r12d_esi, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rbp_qword_ptr_[r@@ di+0x158], test_esi_esi, jne_0x2d, mov_edx_8, mov_esi_0x1@@ 80, mov_rdi_r13, call_0xffffffffffff@@ 1ec@@ 6, mov_qword_ptr_[rbp]_rax, test_rax_rax, je_0x2d, xor_eax_eax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_rdi_r13, call_0xffffffffffff1e@@ 35, mov_qword_ptr_[rbp]_rax, jmp_0xffffffffffffffdf, xor_eax_eax, ret, mov_ecx_r12d, mov_rdx_r13, lea_rsi_[rip+0x19@@ 8@@ 38], mov_edi_3, call_0xffffffffffff3@@ 12@@ b, mov_rdi_rbp, call_0xffffffffffff19@@ f3, mov_qword_ptr_[rbx+0x1@@ 58]_0, mov_eax_0xffffffff, jmp_0xffffffffffffffa@@ 8
endbr64, push_r12, mov_eax_dword_ptr_[rip+0x2@@ 29@@ 58@@ 8], push_rbp, push_rbx, mov_rbx_rdi, mov_rbp_qword_ptr_[r@@ di+0x158], test_eax_eax, je_0x26, mov_rdi_rbp, call_0xffffffffffff19@@ b1, mov_qword_ptr_[rbx+0x1@@ 58]_0, xor_r12d_r12d, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, mov_rsi_qword_ptr_[rbp], lea_rdi_[r@@ di+0x10], mov_edx_1, call_0xffffffffffff1a@@ 23, mov_r12d_eax, test_eax_eax, jns_0xffffffffffffff@@ c5, mov_edx_eax, lea_rsi_[rip+0x19@@ a8@@ 2], mov_edi_3, xor_eax_eax, call_0xffffffffffff30@@ 97, jmp_0xffffffffffffffc@@ 4
endbr64, push_r13, lea_r13_[r@@ si+0x@@ c9], push_r12, push_rbp, push_rbx, mov_rbx_rsi, sub_rsp_8, mov_r12d_dword_ptr_[rip+0x2@@ 29@@ 50@@ 5], test_r12d_r12d, jne_0x8e, mov_esi_dword_ptr_[r@@ si+0x@@ cd], test_esi_esi, jne_0x38, mov_rdi_qword_ptr_[rbx+0x@@ e1], test_rdi_rdi, je_7, call_0xffffffffffff19@@ 22, pxor_xmm0_xmm0, movups_xmmword_ptr_[rbx+0x@@ c9@@ ]_xmm0, movups_xmmword_ptr_[r@@ 13+0x1@@ 0]_xmm0, and_byte_ptr_[r@@ bx+0x@@ 60]@@ _0xfe, add_rsp_8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, mov_rax_qword_ptr_[rdi+0x158], mov_rbp_rdi, mov_rdi_qword_ptr_[rax], mov_rcx_r13, xor_edx_edx, call_0xffffffffffff18@@ a6, mov_r12d_eax, test_eax_eax, jns_0xffffffffffffff@@ ae, mov_r8d_eax, lea_rcx_[r@@ bx+0x10], lea_rdx_[r@@ bp+0x10], lea_rsi_[rip+0x19@@ 7@@ 28], mov_edi_3, xor_eax_eax, call_0xffffffffffff2@@ ff@@ 1, jmp_0xffffffffffffff8e, xor_r12d_r12d, jmp_0xffffffffffffff7@@ f
endbr64, push_r15, push_r14, push_r13, mov_r13d_edx, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rcx, sub_rsp_0x28, mov_rax_qword_ptr_[rdi+0x158], mov_qword_ptr_[rsp+8]_rax, test_r8d_r8d, jne_0x20@@ 3, lea_r14_[r@@ si+0x@@ c9], test_byte_ptr_[rsi+0x@@ 60]_1, je_0x1@@ ba, cmp_qword_ptr_[rbp+0x@@ e@@ 1]_1, sbb@@ _r15d_r15d, and_r15d@@ _0xfffffff8, add_r15d@@ _0x8@@ d, cmp_r13d_2, je_0xd2, cmp_r13d_3, je_0x38, mov_edx_r13d, lea_rsi_[rip+0x19@@ 98@@ 9], mov_edi_3, xor_eax_eax, call_0xffffffffffff2f@@ 55, mov_r15d@@ _0xffffffea, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r15d, pop_r15, ret, lea_r13_[r@@ bp+0x10], add_r12_0x10, mov_rcx_r13, mov_rdx_r12, lea_rsi_[rip+0x19@@ 96@@ 1], mov_edi_7, xor_eax_eax, call_0xffffffffffff2f@@ 14, mov_ecx_dword_ptr_[rip+0x2@@ 2@@ 93@@ 9d], test_ecx_ecx, jne_0x2@@ 47, mov_rdi_r13, call_0xffffffffffff17@@ de, mov_edx_dword_ptr_[rip+0x2@@ 28@@ 2@@ 13], mov_dword_ptr_[rsp+0x10@@ ]_5, mov_r9d_eax, test_edx_edx, je_0x88, push_0, mov_r8_r13, mov_ecx_r15d, push_0, mov_rdx_r14, mov_esi_3, push_0, push_0, mov_rax_qword_ptr_[rsp+0x28], mov_rdi_qword_ptr_[rax], call_0xffffffffffff1b@@ 52, add_rsp_0x20, cmp_eax_-1, je_0x2@@ bc, mov_rdi_r13, call_0xffffffffffff17@@ 8d, mov_r9d_eax, jmp_0x47, lea_r13_[r@@ bp+0x10], add_r12_0x10, xor_eax_eax, mov_rcx_r13, mov_rdx_r12, lea_rsi_[rip+0x19@@ 8c@@ f], mov_edi_7, call_0xffffffffffff2e@@ 84, mov_eax_dword_ptr_[rip+0x2@@ 29@@ 30@@ d], test_eax_eax, jne_0x1@@ b7, mov_rdi_r13, call_0xffffffffffff17@@ 4e, mov_dword_ptr_[rsp+0x10@@ ]_3, mov_r9d_eax, push_0, mov_rdx_r14, mov_r8_r13, push_0, mov_ecx_r15d, push_0, push_0, mov_rax_qword_ptr_[rsp+0x28], mov_esi_dword_ptr_[rsp+0x@@ 30], mov_rdi_qword_ptr_[rax], call_0xffffffffffff1a@@ d1, mov_r14d_eax, add_rsp_0x20, cmp_eax_-1, je_0x2@@ 62, test_eax_eax, js_0x3@@ f6, mov_rdx_qword_ptr_[rbp+0x@@ e1], test_rdx_rdx, je_0x2@@ 18, test_byte_ptr_[rbp+0x@@ d@@ 1@@ ]_2, jne_0x1@@ dd, mov_rax_qword_ptr_[rbp+0x@@ d9], xor_r15d_r15d, mov_rax_qword_ptr_[rax], mov_qword_ptr_[rdx]_rax, mov_rdx_rax, mov_word_ptr_[r@@ bx@@ ]_ax, shr_rdx@@ _0x10, shr_rax_0x20, mov_word_ptr_[rbx+@@ 2]_dx, mov_dword_ptr_[rbx+4]_eax, jmp_0xfffffffffffffe@@ 98, movzx_eax_byte_ptr_[r@@ si+0x@@ 51], mov_r15d@@ _0x400, dec_eax, cmp_al_1, jbe_0x@@ 13@@ a, mov_esi_dword_ptr_[rip+0x2@@ 29@@ 25@@ 2], lea_r14_[r@@ bp+0x@@ c9], test_esi_esi, je_0x85, or_byte_ptr_[r@@ bp+0x@@ 60]_1, jmp_0xfffffffffffffe@@ 1f, mov_qword_ptr_[rcx]_0, test_byte_ptr_[rsi+0x@@ 60]_1, je_0x1@@ 3d, mov_rax_qword_ptr_[rsi+0x@@ e1], cmp_rax_1, sbb@@ _ebx_ebx, and_ebx@@ _0xfffffff8, add_ebx@@ _0x40@@ 88, cmp_r13d_2, je_0x2@@ a5, cmp_r13d_3, je_0x1@@ db, mov_edx_r13d, lea_rsi_[rip+0x19@@ 75@@ a], mov_edi_3, xor_eax_eax, call_0xffffffffffff2d@@ 54, mov_r15d@@ _0xffffffea, mov_rsi_rbp, mov_rdi_r12, call_0xfffffffffffffc@@ b3, jmp_0xfffffffffffffd@@ f4, lea_r11_[r@@ bp+0x10], mov_rdi_r11, mov_qword_ptr_[rsp+0x10]_r11, call_0xffffffffffff16@@ 04, push_0, mov_r9d_eax, mov_ecx_r15d, push_0, xor_esi_esi, mov_rdx_r14, push_0, push_0, mov_rax_qword_ptr_[rsp+0x28], mov_r11@@ _qword_ptr_[rsp+0x30], mov_rdi_qword_ptr_[rax], mov_r8@@ _r11, call_0xffffffffffff19@@ 8c, add_rsp_0x20, test_eax_eax, mov_r15d_eax, mov_r11_qword_ptr_[rsp+0x10], jns_0xffffffffffffff@@ 3a, mov_r8d_eax, lea_rdx_[r@@ 12+0x10], mov_rcx_r11, lea_rsi_[rip+0x19@@ 4a@@ 1], mov_edi_3, xor_eax_eax, call_0xffffffffffff2c@@ ca, jmp_0xfffffffffffffd@@ 7b, mov_rax_qword_ptr_[rbp+0x@@ e1], test_rax_rax, je_0xb4, movzx_edx_word_ptr_[r@@ ax], xor_r15d_r15d, mov_word_ptr_[r@@ bx@@ ]_dx, movzx_edx_word_ptr_[r@@ ax+2], mov_eax_dword_ptr_[rax+4], mov_word_ptr_[rbx+@@ 2]_dx, mov_dword_ptr_[rbx+4]_eax, jmp_0xfffffffffffffd@@ 4f, mov_esi_0x28, mov_edi_1, call_0xffffffffffff19@@ 96, test_rax_rax, je_0x2@@ 57, mov_qword_ptr_[rbp+0x@@ e@@ 1]_rax, add_rax_8, mov_qword_ptr_[rbp+0x@@ d@@ 9]_rax, mov_r15d@@ _0x40@@ 8, jmp_0xfffffffffffffe@@ 9c, movzx_eax_byte_ptr_[r@@ si+0x@@ 51], dec_eax, cmp_al_1, jbe_0x@@ 1c8, mov_rax_qword_ptr_[rsi+0x@@ e1], or_byte_ptr_[r@@ bp+0x@@ 60]_1, jmp_0xfffffffffffffeb7, xor_eax_eax, mov_rcx_r13, mov_rdx_r12, lea_rsi_[rip+0x19@@ 4b@@ 1], mov_edi_7, call_0xffffffffffff2c@@ 1c, mov_rax_qword_ptr_[rbp+0x@@ e1], mov_qword_ptr_[rax]_0, mov_qword_ptr_[rbx]_0, xor_r15d_r15d, jmp_0xfffffffffffffc@@ b5, mov_r9d@@ _0xffffffff, mov_r8d@@ _5, mov_rcx_r13, mov_rdx_r12, lea_rsi_[rip+0x19@@ 3e@@ 1], mov_edi_7, xor_eax_eax, call_0xffffffffffff2b@@ da, call_0xffffffffffff17@@ e0, mov_r9d_dword_ptr_[r@@ ax], cmp_r9d@@ _0xb, je_0x1@@ 67, mov_r14d@@ _0xffffffff, mov_r8d_r14d, mov_rcx_r13, mov_rdx_r12, lea_rsi_[rip+0x19@@ 408], mov_edi_3, xor_eax_eax, call_0xffffffffffff2b@@ a1, mov_r15d@@ _0xffffff@@ 23, jmp_0xfffffffffffffc@@ 4c, mov_dword_ptr_[rsp+0x10@@ ]_5, lea_rax_[r12+0x10], lea_r14_[r@@ bp+0x10], mov_qword_ptr_[rsp+0x18]_rax, mov_rdx_rax, mov_rcx_r14, lea_rsi_[rip+0x19@@ 58@@ 6], mov_edi_7, xor_eax_eax, call_0xffffffffffff2b@@ 66, mov_r9d_dword_ptr_[rip+0x2@@ 28@@ fe@@ e], test_r9d_r9d, jne_0xffffffffffffff@@ 55, mov_rdi_r14, call_0xffffffffffff14@@ 2e, push_0, mov_r9d_eax, lea_rdx_[rbp+0x@@ c9], push_0, mov_r8_r14, mov_ecx_ebx, push_1, push_1, push_1, push_0, mov_rax_qword_ptr_[rsp+0x38], mov_esi_dword_ptr_[rsp+0x@@ 40], mov_rdi_qword_ptr_[rax], call_0xffffffffffff11@@ c2, mov_r15d_eax, add_rsp_0x30, cmp_eax_-1, je_0x53, test_eax_eax, jns_0xffffffffffff@@ fb@@ c5, call_0xffffffffffff17@@ 19, mov_eax_dword_ptr_[rax], push_rax, mov_edi_7, mov_r9d_ebx, push_r15, mov_rcx_r14, lea_rsi_[rip+0x19@@ 28@@ 3], mov_r8d_dword_ptr_[rsp+0x@@ 20], mov_rdx_qword_ptr_[rsp+0x28], xor_eax_eax, call_0xffffffffffff2a@@ df, pop_rdi, pop_r8, jmp_0xfffffffffffffd@@ 8e, mov_dword_ptr_[rsp+0x10@@ ]_3, jmp_0xffffffffffffff40, call_0xffffffffffff16@@ d0, mov_eax_dword_ptr_[rax], cmp_eax@@ _-0x@@ b, jne_0xffffffffffffffb6, mov_rdx_qword_ptr_[rsp+0x18], mov_r8d_r13d, mov_rcx_r14, lea_rsi_[rip+0x19@@ 20@@ 2], mov_edi_7, xor_eax_eax, call_0xffffffffffff2a@@ 9b, mov_r15d@@ _0xffffff@@ 8b, jmp_0xfffffffffffffd@@ 47, mov_esi_0x28, mov_edi_1, call_0xffffffffffff17@@ 8e, test_rax_rax, je_0x4f, lea_rdx_[rax+8], mov_qword_ptr_[rbp+0x@@ e@@ 1]_rax, mov_qword_ptr_[rbp+0x@@ d9@@ ]_rdx, jmp_0xfffffffffffffe@@ 1f, mov_r8d_dword_ptr_[rsp+0x10], mov_rcx_r13, mov_rdx_r12, lea_rsi_[rip+0x19@@ 27@@ b], mov_edi_7, xor_eax_eax, call_0xffffffffffff2a@@ 44, mov_r15d@@ _0xfffffff@@ 5, jmp_0xfffffffffffffa@@ ef, call_0xffffffffffff16@@ 44, mov_r9d_dword_ptr_[r@@ ax], jmp_0xfffffffffffffe@@ 74, mov_r15d@@ _0xfffffff4, jmp_0xfffffffffffffa@@ d@@ 7
endbr64, push_r15, xor_eax_eax, mov_r15d_ecx, push_r14, push_r13, lea_r13_[r@@ si+0x10], mov_rcx_r13, push_r12, lea_r12_[r@@ di+0x10], push_rbp, mov_ebp_edx, mov_rdx_r12, push_rbx, mov_rbx_rsi, lea_rsi_[rip+0x19@@ 4@@ 3c], sub_rsp_0x18, mov_r14_qword_ptr_[r@@ di+0x158], mov_edi_7, call_0xffffffffffff2@@ 9d@@ 3, mov_rax_qword_ptr_[rbx+0x@@ e1], mov_ecx@@ _0x8@@ 5, test_r15d_r15d, je_0x11, test_rax_rax, je_0xc, cmp_byte_ptr_[rbx+0x@@ 52@@ ]_3, je_0x94, mov_r15d@@ _3, cmp_ebp_2, je_0x14, cmp_ebp_3, mov_r15d@@ _0xffffffff, mov_eax_5, cmove_r15d_eax, mov_eax_dword_ptr_[rip+0x2@@ 28@@ e@@ 1f], mov_dword_ptr_[rsp+0xc]_ecx, xor_r8d_r8d, test_eax_eax, je_0x1a, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r8d, pop_r15, ret, mov_rdi_r13, call_0xffffffffffff12@@ 45, push_0, mov_r8_r13, lea_rdx_[rbx+0x@@ c9], push_0, mov_r9d_eax, mov_esi_r15d, push_0, push_0, mov_rdi_qword_ptr_[r14], mov_ecx_dword_ptr_[rsp+0x@@ 2c], call_0xffffffffffff15@@ d1, mov_r8d_eax, add_rsp_0x20, cmp_eax_-1, je_0x5a, test_eax_eax, jns_0xffffffffffffff@@ ae, jmp_0x6@@ 7, cmp_word_ptr_[r@@ ax]_0, jne_0xa, mov_edx_0x1@@ 01, mov_word_ptr_[rax@@ ]_dx, mov_dword_ptr_[rax+@@ 4]_r15d, mov_rdx_qword_ptr_[rbx+0x@@ d9], mov_rcx_r13, mov_rax_qword_ptr_[rax], mov_r8d_r15d, mov_qword_ptr_[rdx]_rax, lea_rsi_[rip+0x19@@ 1a@@ 4], mov_rdx_r12, mov_edi_7, xor_eax_eax, call_0xffffffffffff28@@ ea, mov_ecx@@ _0x8@@ d, jmp_0xffffffffffffff32, mov_dword_ptr_[rsp+0xc]_eax, call_0xffffffffffff14@@ e4, cmp_dword_ptr_[rax]@@ _0xb, mov_r8d_dword_ptr_[rsp+0xc], je_0x26, mov_rcx_r13, mov_rdx_r12, lea_rsi_[rip+0x19@@ 1b8], mov_edi_3, xor_eax_eax, call_0xffffffffffff28@@ b1, mov_r8d@@ _0xffffff@@ 23, jmp_0xffffffffffffff26, mov_r8d_r15d, mov_rcx_r13, mov_rdx_r12, lea_rsi_[rip+0x19@@ 16@@ 9], mov_edi_3, xor_eax_eax, call_0xffffffffffff28@@ 8a, mov_r8d@@ _0xfffffff@@ 5, jmp_0xfffffffffffffef@@ f
endbr64, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rsi, mov_rsi_qword_ptr_[r@@ si+0x@@ e1], mov_rbp_qword_ptr_[r@@ di+0x158], test_rsi_rsi, je_0xc, cmp_byte_ptr_[rbx+0x@@ 52@@ ]_3, je_0xaa, lea_r12_[r@@ di+0x10], lea_r13_[r@@ bx+0x10], mov_rcx_r13, mov_rdx_r12, lea_rsi_[rip+0x19@@ 29@@ e], mov_edi_7, xor_eax_eax, call_0xffffffffffff28@@ 28, mov_r14d@@ _4, mov_edx_dword_ptr_[rip+0x2@@ 28@@ ca@@ b], xor_eax_eax, test_edx_edx, je_0x13, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rdi_r13, call_0xffffffffffff10@@ dd, push_0, lea_rdx_[rbx+0x@@ c9], mov_r9d_eax, push_0, mov_r8_r13, mov_ecx_r14d, push_0, xor_esi_esi, push_0, mov_rdi_qword_ptr_[rbp], call_0xffffffffffff14@@ 6a, add_rsp_0x20, test_eax_eax, jns_0xffffffffffffff@@ be, mov_r8d_eax, mov_rcx_r13, xor_eax_eax, mov_rdx_r12, lea_rsi_[rip+0x19@@ 23@@ f], mov_edi_3, call_0xffffffffffff27@@ b6, mov_eax@@ _0xffffff@@ 23, jmp_0xffffffffffffff9b, mov_rax_qword_ptr_[rsi], and_ecx_1, mov_r10_rax, movzx_r8d@@ _ax, test_ax_ax, jne_0x90, mov_r9@@ _r10, mov_r11d@@ _r10d, shr@@ _r10@@ _0x20, mov@@ _ax@@ _0x10@@ 1, shr@@ _r9@@ _0x10, shr@@ _r11d@@ _0x10, mov_r14d@@ _r10d, test_ecx_ecx, je_0xc, cmp_byte_ptr_[rbx+0x@@ 5@@ 1@@ ]_2, je_0xe9, movzx_r9d@@ _r9w, test_edx_edx, jne_0x9d, mov_edx_r10d, xor_r8d_r8d, mov_r10d@@ _0x10@@ 1, mov_qword_ptr_[rsi]_rax, lea_r12_[r@@ di+0x10], lea_r13_[r@@ bx+0x10], mov_rcx_qword_ptr_[rbx+0x@@ d9], lea_rsi_[rip+0x19@@ 0@@ 52], mov_qword_ptr_[rcx]_rax, push_rdx, mov_rcx_r13, mov_rdx_r12, push_r11, mov_edi_7, xor_eax_eax, push_r10, push_r14, mov_r14d@@ _0xc, call_0xffffffffffff27@@ 15, add_rsp_0x20, jmp_0xfffffffffffffeef, test_ecx_ecx, je_0xc, cmp_byte_ptr_[rbx+0x@@ 5@@ 1@@ ]_2, je_0xb8, test_edx_edx, jne_0x50, lea_r12_[r@@ di+0x10], lea_r13_[r@@ bx+0x10], mov_rcx_r13, mov_rdx_r12, lea_rsi_[rip+0x19@@ 0@@ 31], mov_edi_7, xor_eax_eax, call_0xffffffffffff26@@ d2, mov_r14d@@ _0xc, jmp_0xfffffffffffffea@@ a, xor_r8d_r8d, mov_r10d@@ _0x10@@ 1, mov_rcx_rdx, shl_rcx@@ _0x20, mov_eax_eax, or_rax@@ _rcx, jmp_0xffffffffffffff60, mov_r11d_eax, mov_rcx_rax, shr@@ _r11d@@ _0x10, shr_rcx@@ _0x20, movzx_r10d@@ _r8w, mov_r14_rcx, mov_r9d@@ _r11d, jmp_0xffffffffffffffd1, xor_r8d_r8d, mov_r10d@@ _0x10@@ 1, movabs_rcx@@ _0xffffffff@@ 0000@@ ffff, and_rax@@ _rcx, mov_r9d@@ _r11d, or_rax@@ _0x10000, mov_r11d_1, test_edx_edx, jne_0xffffffffffffffa2, mov_edx_r14d, mov_r11d_1, jmp_0xffffffffffffff03, mov_rcx_rax, mov_r11d_eax, shr_rcx@@ _0x20, movzx_r10d@@ _r8w, shr@@ _r11d@@ _0x10, mov_r14_rcx, jmp_0xffffffffffffffb@@ 4
endbr64, push_r13, push_r12, push_rbp, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x10, mov_r12d_dword_ptr_[rip+0x2@@ 28@@ a@@ 94], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 00@@ 8]_rax, xor_eax_eax, test_r12d_r12d, je_0x32, xor_r12d_r12d, mov_rax_qword_ptr_[rsp+0x1@@ 008], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ f2, add_rsp_0x10@@ 10, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, mov_r13_rsp, mov_rbp_rdi, mov_edx_0x1000, xor_esi_esi, mov_rdi_r13, call_0xffffffffffff0b@@ 18, sub_rsp_8, lea_rdi_[r@@ bp+0x10], push_rdi, mov_edx_1, lea_r9_[rip+0x@@ 18@@ f0@@ e], lea_r8_[rip+0x@@ 190@@ 29], mov_ecx_0x1000, mov_esi_0x1000, mov_rdi_r13, xor_eax_eax, call_0xffffffffffff13@@ 68, mov_rdi_r13, call_0xffffffffffff0@@ e@@ 90, mov_rbp_rax, pop_rax, pop_rdx, test_rbp_rbp, jne_0x18, jmp_0x7@@ 4, cmp_byte_ptr_[rax+0x1@@ 3]@@ _0x2e, setne_al, movzx_eax_al, add_r12d_eax, mov_rdi_rbp, call_0xffffffffffff14@@ 78, test_rax_rax, jne_0xffffffffffffffe8, mov_rdi_rbp, call_0xffffffffffff13@@ 0b, test_eax_eax, jne_0x14, test_r12d_r12d, je_0x27, dec@@ _r12d, jmp_0xffffffffffffff45, lea_rsi_[rip+0x18@@ ff@@ 9], mov_edi_3, xor_eax_eax, call_0xffffffffffff@@ 25@@ 12, jmp_0xffffffffffffffdb, mov_rdx_r13, lea_rsi_[rip+0x18@@ ea@@ 6], mov_edi_3, xor_eax_eax, call_0xffffffffffff24@@ f7, jmp_0xffffffffffffff0d, mov_r12d@@ _0xffffff@@ 91, jmp_0xffffffffffffff02, call_0xffffffffffff@@ 115@@ 2
endbr64, push_r13, push_r12, mov_r12_rdi, lea_rdi_[rip+0x18@@ e@@ 3e], push_rbp, push_rbx, sub_rsp_8, call_0xffffffffffff0@@ dd@@ 8, mov_rbp_rax, test_rax_rax, je_0xfc, mov_rdi_rbp, call_0xffffffffffff13@@ cd, test_rax_rax, je_0x71, cmp_byte_ptr_[rax+0x1@@ 3]@@ _0x2e, je_0xffffffffffffffef, cmp_dword_ptr_[rax+0x1@@ 3]@@ _0x5@@ f@@ 6d@@ 7@@ 66@@ c, lea_r13_[r@@ ax+0x13], jne_0xffffffffffffffe2, call_0xffffffffffff6d@@ e0, mov_rbx_rax, test_rax_rax, je_0x9d, mov_byte_ptr_[rax+0x1@@ 54@@ ]_2, lea_rdi_[rax+0x10], mov_edx_0x40, mov_rsi_r13, call_0xffffffffffff11@@ cc, lea_rdi_[rbx+0x@@ 51], lea_rsi_[r@@ bx+0x14], mov_edx_0x40, call_0xffffffffffff11@@ ba, mov_rax_qword_ptr_[r12+8], mov_qword_ptr_[r12+@@ 8]_rbx, mov_qword_ptr_[rbx@@ ]_r12, mov_qword_ptr_[rbx+8]_rax, mov_qword_ptr_[rax]_rbx, mov_rdi_rbp, call_0xffffffffffff13@@ 5e, test_rax_rax, jne_0xffffffffffffff@@ 93, mov_rdi_rbp, call_0xffffffffffff11@@ f1, mov_r12d_eax, test_eax_eax, jne_0x17, add_rsp_8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, xor_eax_eax, lea_rsi_[rip+0x18@@ ea@@ 7], mov_edi_3, call_0xffffffffffff2@@ 3f@@ 2, add_rsp_8, pop_rbx, xor_r12d_r12d, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, mov_rdi_rbp, call_0xffffffffffff11@@ a5, mov_r12d@@ _0xfffffff4, test_eax_eax, je_0xffffffffffffff@@ b3, lea_rsi_[rip+0x18@@ e6@@ f], mov_edi_3, xor_eax_eax, call_0xffffffffffff2@@ 3b8, jmp_0xffffffffffffff9e, mov_r12d@@ _0xffffff@@ 91, jmp_0xffffffffffffff9@@ 6
endbr64, sub_rsp_0x58, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, mov_eax_dword_ptr_[rip+0x2@@ 28@@ 8@@ 16], test_eax_eax, je_0x20, mov_eax_dword_ptr_[rip+0x2@@ 28@@ 8@@ 1c], mov_rdx_qword_ptr_[rsp+0x48], xor_rdx_qword_ptr_fs:[0x28], jne_0x35, add_rsp_0x58, ret, pxor_xmm0_xmm0, mov_rdi_rsp, mov_byte_ptr_[rsp+0x@@ 40]_0, movaps_xmmword_ptr_[rsp]_xmm0, movaps_xmmword_ptr_[rsp+0x10]_xmm0, movaps_xmmword_ptr_[rsp+0x20]_xmm0, movaps_xmmword_ptr_[rsp+0x30]_xmm0, call_0xffffffffffffeb@@ f1, not_eax, shr_eax_0x1f, jmp_0xffffffffffffffbf, call_0xffffffffffff0@@ fa@@ 5
endbr64, xor_eax_eax, ret
endbr64, xor_eax_eax, ret
endbr64, mov_dword_ptr_[rip+0x2@@ 27@@ 6@@ 2a@@ ]_1, ret
push_r12, mov_r12d_esi, lea_rsi_[rip+0x14@@ fe@@ f], push_rbp, sub_rsp_0x18, call_0xffffffffffff11@@ 1f, test_rax_rax, je_0x5f, mov_rdi_rax, mov_rbp_rax, mov_ecx_r12d, lea_rdx_[rip+0x18@@ e@@ 1d], mov_esi_1, xor_eax_eax, call_0xffffffffffff0@@ 90@@ e, mov_rdi_rbp, call_0xd@@ 8b@@ 6, mov_r8d_eax, mov_eax_1, test_r8d_r8d, jne_0xe, add_rsp_0x18, pop_rbp, pop_r12, ret, lea_rdi_[rip+0x@@ 18d@@ ec], mov_dword_ptr_[rsp+0xc]_eax, call_0xffffffffffff@@ 113@@ d, mov_eax_dword_ptr_[rsp+0xc], add_rsp_0x18, pop_rbp, pop_r12, ret, lea_rdi_[rip+0x@@ 18d@@ b3], call_0xffffffffffff@@ 112@@ 1, add_rsp_0x18, pop_rbp, xor_eax_eax, pop_r12, ret
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x28, mov_qword_ptr_[rsp+8]_rdi, mov_rbp_qword_ptr_[r@@ si+0x@@ 98], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, test_rbp_rbp, je_0x5f, mov_rbx_rsi, mov_r13d_edx, lea_r15_[r@@ sp+0x10], jmp_0x1f, mov_eax_dword_ptr_[rbp+0x@@ a0], test_eax_eax, je_0x16, mov_rbx_rbp, mov_rbp_qword_ptr_[rbx+0x@@ 98], test_rbp_rbp, je_0x35, test_r13d_r13d, je_0xffffffffffffffe4, mov_r12_qword_ptr_[r@@ bp+0x@@ 80], test_r12_r12, jne_0x48, mov_rax_qword_ptr_[rbp+0x@@ 98], mov_rdi_rbp, mov_qword_ptr_[rbx+0x@@ 98]_rax, call_0xffffffffffff0a@@ c5, mov_rbp_qword_ptr_[rbx+0x@@ 98], test_rbp_rbp, jne_0xffffffffffffffcf, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x57, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xffffffffffff0@@ dd0, mov_rsi_r15, mov_rdi_r12, mov_r14_rax, call_0xffffffffffff0b@@ 82, mov_dword_ptr_[r14]_eax, test_eax_eax, je_0xffffffffffffff@@ a2, mov_edi_eax, call_0xffffffffffff0@@ bd@@ 4, mov_rdi_qword_ptr_[rsp+8], mov_rcx_rax, lea_rdx_[rip+0x18@@ cf@@ 2], mov_esi_1, xor_eax_eax, call_0x1a@@ 99, jmp_0xffffffffffffff7e, call_0xffffffffffff0@@ de@@ f
endbr64, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, push_rbp, sub_rsp_0xf0, mov_qword_ptr_[rsp+0x50]_rdx, mov_qword_ptr_[rsp+0x5@@ 8]_rcx, mov_qword_ptr_[rsp+0x6@@ 0]_r8, mov_qword_ptr_[rsp+0x6@@ 8]_r9, test_al_al, je_0x3f, movaps_xmmword_ptr_[rsp+0x70]_xmm0, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0x@@ e0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, lea_rbp_[rsp+0x10], lea_rax_[rsp+0x1@@ 10], pxor_xmm0_xmm0, mov_qword_ptr_[rsp+0x28]_rax, mov_rdi_rbp, lea_rax_[rsp+0x40], mov_qword_ptr_[rsp+0x30]_rax, mov_dword_ptr_[rsp+0x20]@@ _0x10, mov_dword_ptr_[rsp+0x24]@@ _0x30, movaps_xmmword_ptr_[rsp]_xmm0, movaps_xmmword_ptr_[rsp+0x10]_xmm0, call_0x3@@ 00@@ 9, xor_ecx_ecx, xor_eax_eax, mov_rdx_r13, lea_rsi_[rip+0x18@@ c@@ 20], mov_rdi_rbp, call_0x2@@ ef@@ 3, test_eax_eax, jne_0x44, mov_dword_ptr_[rsp]@@ _0xc, movdqa_xmm1_xmmword_ptr_[r@@ sp], movdqa_xmm2_xmmword_ptr_[r@@ sp+0x10], movups_xmmword_ptr_[r@@ 12@@ ]_xmm1, movups_xmmword_ptr_[r@@ 12+0x1@@ 0@@ ]_xmm2, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x2a, add_rsp@@ _0xf0, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, lea_rsi_[rsp+0x20], mov_rdi_rbp, call_0x2b@@ c0, test_eax_eax, jne_0xffffffffffffffb6, jmp_0xffffffffffffffad, call_0xffffffffffff0@@ cb@@ 5
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0xb8, lea_r12_[rsp+0x@@ 28], mov_rdi_r12, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xa8]_rax, xor_eax_eax, lea_r15_[rsp+0x@@ 70], call_0x2f@@ 58, lea_r13_[rsp+0x@@ 80], jmp_0x1@@ 90, mov_rdi_qword_ptr_[rax], lea_rsi_[rip+0x15@@ 2f@@ 3], lea_rdx_[rip+0x18@@ b8@@ f], mov_r14_qword_ptr_[r@@ bx+0x20], mov_ebp_dword_ptr_[r@@ bx+0x28], call_0xc@@ 6@@ 98, pxor_xmm0_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm0, mov_dword_ptr_[rsp+0x6@@ 0]_0x4@@ 7, mov_rsi_rax, movaps_xmmword_ptr_[rsp+0x70]_xmm0, mov_ecx_6, lea_rdi_[rip+0x15@@ 2c@@ 3], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x1@@ 9d, test_r14_r14, lea_rax_[rip+0x18@@ b@@ 1d], cmove@@ _r14@@ _rax, sub_rsp_8, push_0, lea_rdx_[rip+0x15@@ 34@@ 1], xor_eax_eax, movsxd_r9@@ _ebp, lea_r8_[rip+0x@@ 15@@ 34@@ 3], mov_rcx_r14, lea_rsi_[rip+0x15@@ 1b@@ 5], mov_rdi_r13, call_0xfffffffffffffd@@ fb, pop_rax, pop_rdx, movdqa_xmm1_xmmword_ptr_[r@@ sp+0x@@ 80], movdqa_xmm2_xmmword_ptr_[r@@ sp+0x@@ 90], mov_eax_dword_ptr_[rsp+0x80], movaps_xmmword_ptr_[rsp+0x@@ 40@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x@@ 50@@ ]_xmm2, cmp_eax_0x4@@ 7, jne_0x7e, mov_rdi_rsp, push@@ _qword_ptr_[rsp+0x30], push@@ _qword_ptr_[rsp+0x30], push@@ _qword_ptr_[rsp+0x30], push_qword_ptr_[r@@ bx+0x@@ 90], push_qword_ptr_[r@@ bx+0x@@ 88], push_qword_ptr_[r@@ bx+0x@@ 80], push_qword_ptr_[r@@ bx+0x@@ 78], push_qword_ptr_[r@@ bx+0x@@ 70], push_qword_ptr_[r@@ bx+0x@@ 68], push_qword_ptr_[r@@ bx+0x60], push_qword_ptr_[r@@ bx+0x@@ 58], push_qword_ptr_[r@@ bx+0x@@ 50], push_qword_ptr_[r@@ bx+0x48], push_qword_ptr_[r@@ bx+0x40], push_qword_ptr_[r@@ bx+0x38], push_qword_ptr_[r@@ bx+0x30], push_qword_ptr_[r@@ bx+0x28], push_qword_ptr_[r@@ bx+0x20], push_qword_ptr_[r@@ bx+0x18], push_qword_ptr_[r@@ bx+0x10], push_qword_ptr_[r@@ bx+8], push_qword_ptr_[r@@ bx], call_qword_ptr_[r@@ bx+0x30], movdqu@@ _xmm5@@ _xmmword_ptr_[r@@ sp+0x@@ b0], movdqu@@ _xmm6@@ _xmmword_ptr_[r@@ sp+0x@@ c0], movaps_xmmword_ptr_[rsp+0x@@ f0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0x1@@ 00@@ ]_xmm6, add_rsp_0x@@ b0, cmp_qword_ptr_[rsp+0x@@ 58]_0, lea_rbp_[rsp+0x@@ 50], je_0x105, mov_rdi_qword_ptr_[rsp+0x20], test_rdi_rdi, je_7, call_0xc@@ 3@@ 95, mov_rdi_r12, call_0x2@@ e0@@ d, mov_rdi_qword_ptr_[rbx+0x@@ 58], mov_rcx_qword_ptr_[rsp+0x58], lea_rdx_[rip+0x18@@ a@@ 3d], mov_esi_4, call_0x1@@ 93@@ 3, mov_edi_dword_ptr_[rbx+0x@@ 78], mov_rsi_rbp, call_0x1e@@ 58, mov_rdi_rbp, call_0x2d@@ e0, mov_edi_dword_ptr_[rbx+0x@@ 78], mov_rsi_r12, call_0x1@@ ca@@ 5, test_eax_eax, je_0xee, mov_rdi_qword_ptr_[rsp+0x30], call_0x2@@ 19@@ 3, mov_qword_ptr_[rsp+0x20]_rax, test_rax_rax, je_0x6e, mov_rdi_qword_ptr_[rbx+0x@@ 58], mov_rcx_qword_ptr_[rax], lea_rdx_[rip+0x18@@ 9e@@ 2], mov_esi_4, call_0x1@@ 86@@ 1, mov_rax_qword_ptr_[rsp+0x20], test_rax_rax, jne_0xfffffffffffffe@@ 34, pxor_xmm0_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm0, mov_dword_ptr_[rsp+0x6@@ 0]_0x4@@ 7, movaps_xmmword_ptr_[rsp+0x70]_xmm0, mov_rdi_r15, call_0x2d@@ 55, movdqa_xmm3_xmmword_ptr_[r@@ sp+0x@@ 60], movdqa_xmm4@@ _xmmword_ptr_[r@@ sp+0x@@ 70], movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, jmp_0xfffffffffffffe@@ 80, mov_rax_qword_ptr_[rip+0x2@@ 48@@ 41], mov_rcx_qword_ptr_[rsp+0x30], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x18@@ 95@@ 2], mov_esi_1, xor_eax_eax, call_0xffffffffffff0@@ 3f@@ b, jmp_0xffffffffffffff8a, mov_rax_qword_ptr_[rsp+0x48], lea_rsi_[rip+0x2c@@ b4], mov_rdi_qword_ptr_[rax], mov_rdx_rbp, call_0xc@@ 3f@@ e, test_eax_eax, je_0x27, lea_rsi_[rip+0x14@@ 8@@ bb], mov_rdi_rbp, call_0x2@@ 88@@ b, test_eax_eax, je_0x14, mov_rdi_qword_ptr_[rsp+0x48], call_0xc@@ 26@@ d, jmp_0xfffffffffffffec9, mov_edi_dword_ptr_[rbx+0x@@ 78], call_0xffffffffffff0@@ 32@@ d, test_eax_eax, jne_0x3e, mov_rdi_r12, call_0x2@@ cd@@ 1, mov_dword_ptr_[rbx+0x@@ a0]_0, mov_rax_qword_ptr_[rsp+0xa8], xor_rax_qword_ptr_fs:[0x28], jne_0x27, add_rsp_0xb8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret, lea_rdi_[rip+0x18@@ b@@ 1c], call_0xffffffffffff0@@ bc@@ 1, jmp_0xffffffffffffffb8, call_0xffffffffffff0@@ 98@@ a
endbr64, push_r15, xor_ecx_ecx, xor_edx_edx, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x4@@ e8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x4@@ d8]_rax, xor_eax_eax, lea_rbp_[rsp+0x@@ 350], mov_eax_edx, add_edx@@ _0x20, mov_qword_ptr_[rsp+rax+0x@@ 35@@ 0]_rcx, mov_qword_ptr_[rsp+rax+0x@@ 35@@ 8]_rcx, mov_qword_ptr_[rsp+rax+0x@@ 36@@ 0]_rcx, mov_qword_ptr_[rsp+rax+0x@@ 36@@ 8]_rcx, cmp_edx@@ _0x1@@ 80, jb_0xffffffffffffff@@ d5, mov_qword_ptr_[rbp@@ +rdx]_0, lea_r14_[rsp+0x@@ a0], xor_ecx_ecx, xor_edx_edx, mov_eax_edx, add_edx@@ _0x20, mov_qword_ptr_[rsp+rax+0x@@ a@@ 0]_rcx, mov_qword_ptr_[rsp+rax+0x@@ a@@ 8]_rcx, mov_qword_ptr_[rsp+rax+0x@@ b@@ 0]_rcx, mov_qword_ptr_[rsp+rax+0x@@ b@@ 8]_rcx, cmp_edx@@ _0xa0, jb_0xffffffffffffff@@ d5, mov_qword_ptr_[r14@@ +rdx]_0, lea_rsi_[rip+0x18@@ 8@@ 33], mov_edx_1, lea_rdi_[rip+0x18@@ 80@@ b], call_0xffffffffffff0@@ 8@@ 22, test_eax_eax, je_0xe, lea_rdi_[rip+0x18@@ 80@@ 2], call_0xffffffffffff0a@@ e2, lea_rdi_[rip+0x18@@ 80@@ d], call_0xffffffffffff0@@ 8@@ 26, test_rax_rax, je_0x6e, cmp_byte_ptr_[rax]@@ _0x31, jne_0x69, cmp_byte_ptr_[rax+1]_0, jne_0x63, lea_rdi_[rip+0x18@@ 7@@ ff], call_0xffffffffffff0@@ 80@@ a, mov_r12_rax, test_rax_rax, je_0x4f, call_0xffffffffffff0@@ 8@@ 1d, mov_dword_ptr_[rax]_0, lea_r13_[rsp+0x20], mov_rbx_rax, mov_rdi_r12, mov_edx_0xa, mov_rsi_r13, call_0xffffffffffff0a@@ bf, mov_r8d_dword_ptr_[r@@ bx], mov_r12_rax, test_r8d_r8d, jne_0x21, mov_rax_qword_ptr_[rsp+0x20], test_rax_rax, je_0x17, cmp_byte_ptr_[rax]_0, jne_0x12, test_r12_r12, jne_0xf@@ 11, xor_ebx_ebx, lea_rdi_[rip+0x18@@ 78@@ e], call_0xffffffffffff0@@ 97@@ 7, lea_rdi_[rip+0x18@@ 7@@ 90], call_0xffffffffffff0@@ 96@@ b, lea_rdi_[rip+0x18@@ 78@@ f], call_0xffffffffffff0@@ 95@@ f, mov_dword_ptr_[rip+0x2@@ 26@@ eb@@ 8]_ebx, test_byte_ptr_[rsp+0x@@ 5@@ 24@@ ]_2, je_0x5@@ 3c, mov_rax_qword_ptr_[rsp+0x@@ 5@@ 28], mov_ecx_1, xor_edx_edx, mov_esi_1, mov_rdi_rbp, mov_qword_ptr_[rsp+0x4@@ d0]_rax, mov_qword_ptr_[rsp+0x@@ 57@@ 8]_rbp, mov_qword_ptr_[rsp+0x@@ 58@@ 0]_r14, call_0x1@@ 6f@@ 7, mov_rdi_qword_ptr_[rsp+0x@@ 5@@ 78], mov_ecx_1, mov_edx_1, mov_esi_1, call_0x1@@ 6d@@ b, mov_rdi_qword_ptr_[rsp+0x@@ 530], test_rdi_rdi, je_0x2a, mov_esi@@ _0x8000, call_0x6@@ 23@@ 4, mov_rdi_qword_ptr_[rsp+0x@@ 530], call_0xd@@ 167, test_eax_eax, je_0x1@@ 1e@@ c, xor_esi_esi, xor_edi_edi, call_0x6@@ 2@@ 16, lea_rsi_[rip-0x@@ 8@@ 16], mov_edi_2, call_0xffffffffffff0@@ 6@@ 25, lea_rsi_[rip-0x@@ 8@@ 27], mov_edi_1, call_0xffffffffffff0@@ 6@@ 14, lea_rsi_[rip-0x@@ 8@@ 38], mov_edi_3, call_0xffffffffffff0@@ 60@@ 3, lea_rsi_[rip-0x@@ 84@@ 9], mov_edi@@ _0xf, call_0xffffffffffff0@@ 5f@@ 2, lea_rsi_[rip-0x@@ 85@@ a], mov_edi_0xe, call_0xffffffffffff0@@ 5e@@ 1, mov_esi_1, mov_edi_0xd, call_0xffffffffffff0@@ 5d@@ 2, mov_eax_dword_ptr_[rip+0x2@@ 26@@ d@@ bb], test_byte_ptr_[rsp+0x@@ 5@@ 24]_1, je_0x1@@ 9f, mov_ebp_dword_ptr_[rsp+0x@@ 5@@ 70], test_eax_eax, je_0x1@@ 18, mov_edx_1, mov_esi_2, mov_edi_ebp, xor_eax_eax, call_0xffffffffffff0@@ 57@@ c, mov_r14d_eax, test_eax_eax, jne_0x@@ aa@@ 2, test_byte_ptr_[rsp+0x@@ 5@@ 24@@ ]_2, je_0xa@@ 6c, mov_rax_qword_ptr_[rsp+0x@@ 5@@ 68], test_rax_rax, je_0x4@@ db, lea_rdi_[rsp+0x@@ 520], call_rax, test_eax_eax, mov_eax_1, cmove@@ _r14d_eax, mov_eax_dword_ptr_[rip+0x2@@ 26@@ d@@ 46], mov_edi_dword_ptr_[rsp+0x@@ 5@@ 70], test_eax_eax, jne_0x2e, test_edi_edi, js@@ _0x32, mov_r8@@ _qword_ptr_[rsp+0x@@ 538], test_r8_r8, je_0x3@@ 98, mov_rdi_r8, call_0xffffffffffff0@@ 16@@ f, test_eax_eax, jne_0xf@@ 85, mov_edi_dword_ptr_[rsp+0x@@ 5@@ 70], test_edi_edi, jns@@ _0x3@@ 79, mov_rax_qword_ptr_[rsp+0x@@ 560], test_rax_rax, je_0x2@@ f8, lea_rdi_[rsp+0x@@ 520], call_rax, test_eax_eax, jne_0x2@@ e6, mov_rdi_qword_ptr_[rsp+0x@@ 5@@ 78], mov_rcx_qword_ptr_[rsp+0x@@ 5@@ 28], lea_rdx_[rip+0x18@@ 7a@@ a], mov_esi_3, xor_eax_eax, call_0x1@@ 2b@@ 2, call_0xffffffffffff0@@ 24@@ d, mov_rdi_qword_ptr_[rsp+0x@@ 530], test_rdi_rdi, je_0x17, call_0xffffffffffff00@@ fb, test_eax_eax, je_0xe, lea_rdi_[rip+0x18@@ 6e@@ e], call_0xffffffffffff0@@ 8@@ 1b, mov_edi_1, call_0xffffffffffff00@@ 31, lea_r12_[rsp+0x@@ 2c0], mov_rdx_r12, lea_rsi_[rip+0x18@@ 5c@@ c], mov_edi_1, call_0xffffffffffff0@@ 6e@@ 1, cmp_eax_-1, jne_0x@@ c0@@ 1, call_0xffffffffffff0@@ 55@@ 3, cmp_dword_ptr_[rax]_2, mov_rbx_rax, je_0xe, lea_rdi_[rip+0x18@@ 7c@@ 7], call_0xffffffffffff0@@ 7c@@ f, mov_rdx_r12, lea_rsi_[rip+0x18@@ 5a@@ f], mov_edi_1, call_0xffffffffffff0@@ 6a@@ b, cmp_eax_-1, jne_0xe@@ 23, cmp_dword_ptr_[rbx@@ ]_2, je_0x@@ ee@@ 8, lea_rdi_[rip+0x18@@ 7b@@ d], call_0xffffffffffff0@@ 7@@ 9d, mov_eax_dword_ptr_[rip+0x22@@ 6c@@ 16], test_eax_eax, jne_0x@@ 9@@ 1e, mov_r12@@ _qword_ptr_[rsp+0x@@ 538], test_r12_r12, je_0x@@ 90@@ d, lea_r13_[rsp+0x@@ 240], xor_ecx_ecx, xor_eax_eax, mov_edx_eax, add_eax@@ _0x20, mov_qword_ptr_[rsp@@ +rdx+0x@@ 24@@ 0]_rcx, mov_qword_ptr_[rsp@@ +rdx+0x@@ 24@@ 8]_rcx, mov_qword_ptr_[rsp@@ +rdx+0x@@ 25@@ 0]_rcx, mov_qword_ptr_[rsp@@ +rdx+0x@@ 25@@ 8]_rcx, cmp_eax@@ _0x60, jb_0xffffffffffffff@@ d8, add_rax_r13, xor_edx_edx, mov_ecx_1, mov_esi_0x@@ c@@ 000, mov_rdi_r12, mov_word_ptr_[rax+0x@@ c@@ ]_dx, mov_word_ptr_[rsp+0x@@ 24@@ 0@@ ]_cx, mov_qword_ptr_[rax]_0, mov_dword_ptr_[rax+8]_0, call_0x5f@@ 85, mov_edi@@ _0x3f, call_0xffffffffffff0@@ 75@@ b, xor_edx_edx, mov_esi_1, mov_edi_1, mov_r14d_eax, call_0xffffffffffff0@@ 40@@ 7, mov_ebp_eax, test_eax_eax, js_0xa@@ 4e, xor_edx_edx, mov_edi_eax, mov_esi_3, xor_eax_eax, call_0xffffffffffff0@@ 34@@ d, or_ah@@ _8, mov_edx_eax, mov_esi_4, xor_eax_eax, mov_edi_ebp, call_0xffffffffffff0@@ 33@@ a, test_eax_eax, jne_0x@@ aa@@ 3, mov_rbx_qword_ptr_[rip+0x2@@ 4@@ 28@@ 6], mov_rdi_qword_ptr_[rbx], lea_rdx_[rip+0x18@@ 4e@@ 6], mov_esi_1, xor_eax_eax, mov_rcx_r12, lea_r15_[rsp+0x@@ 24@@ 2], call_0xfffffffffffefe@@ 3a, mov_edx_0x6@@ c, mov_rsi_r12, mov_rdi_r15, call_0xd@@ e@@ 7a, test_eax_eax, je_0xa@@ 13, mov_edx_0x6@@ e, mov_rsi_r13, mov_edi_ebp, call_0xffffffffffff0@@ 6@@ 33, test_eax_eax, je_0xa@@ ce, call_0xffffffffffff0@@ 3d@@ 6, cmp_dword_ptr_[rax]@@ _0x62, jne_0xa@@ f1, lea_rdx_[rsp+0x@@ 2c0], mov_rsi_r15, mov_edi_1, mov_qword_ptr_[rsp]_rax, call_0xffffffffffff0@@ 32@@ 4, test_eax_eax, mov_r8_qword_ptr_[rsp], jne_0xd@@ 8e, mov_eax_dword_ptr_[rsp+0x@@ 2d8], and_eax_0xf000, cmp_eax_0x@@ c@@ 000, jne_0xd@@ 42, movabs_rax@@ _0xffffffff@@ 0000@@ 00@@ 3f, test@@ _qword_ptr_[rsp+0x@@ 2d@@ 8]_rax, jne_0xd@@ 7b, mov_edx_0x6@@ e, mov_rsi_r13, mov_edi_ebp, mov_qword_ptr_[rsp]_r8, call_0xffffffffffff0@@ 25@@ 6, test_eax_eax, mov_r8_qword_ptr_[rsp], je_0xd@@ 7a, mov_rdi_qword_ptr_[rbx], xor_eax_eax, mov_rcx_r15, lea_rdx_[rip+0x18@@ 48@@ f], mov_esi_1, mov_qword_ptr_[rsp]_r8, call_0xfffffffffffefd@@ 6d, mov_rdi_r15, call_0xfffffffffffefe@@ 95, test_eax_eax, je_0x10, mov_r8_qword_ptr_[rsp], cmp_dword_ptr_[r@@ 8]_2, jne_0xd@@ 70, mov_edx_0x6@@ e, mov_rsi_r13, mov_edi_ebp, call_0xffffffffffff0@@ 5@@ 64, test_eax_eax, je_0x9@@ ff, lea_rdi_[rip+0x18@@ 6@@ 50], call_0xffffffffffff0@@ 5@@ 90, jmp_0x@@ 93@@ 2, mov_rdi_qword_ptr_[rsp+0x@@ 5@@ 78], mov_rcx_qword_ptr_[rsp+0x@@ 5@@ 28], lea_rdx_[rip+0x18@@ 4c@@ a], mov_esi_3, xor_eax_eax, call_0xfd@@ 2, call_0xfffffffffffeff@@ 6d, mov_rdi_qword_ptr_[rsp+0x@@ 530], test_rdi_rdi, jne_0x@@ 80@@ d, test_r14d_r14d, jne_0xfffffffffffffd@@ 2e, mov_rax_qword_ptr_[rsp+0x@@ 4d8], xor_rax_qword_ptr_fs:[0x28], jne_0xc@@ fa, add_rsp_0x4@@ e8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xfffffffffffefc@@ 30, test_eax_eax, je_0xfffffffffffffc@@ 86, lea_rdi_[rip+0x18@@ 450], call_0xffffffffffff0@@ 4f@@ c, jmp_0xfffffffffffffc@@ 74, mov_esi_2, lea_rdi_[rip+0x18@@ 23@@ f], xor_eax_eax, mov_r13@@ _qword_ptr_[rsp+0x@@ 530], call_0xffffffffffff00@@ 7a, mov_r12d_eax, cmp_eax_-1, je_0x@@ ca@@ 1, lea_r15_[rsp+0x@@ 2c0], mov_rdi_r15, call_0xffffffffffff0@@ 42@@ e, xor_edx_edx, mov_rsi_r15, mov_edi_2, call_0xffffffffffff00@@ 6f, test_eax_eax, js_0x@@ cb@@ a, lea_rsi_[rip-0x@@ d@@ 15], mov_edi@@ _0xf, call_0xffffffffffff0@@ 12@@ 6, call_0xffffffffffff0@@ 3f@@ 1, mov_ebx_eax, cmp_eax_-1, je_0xc@@ 83, test_eax_eax, je_0x6@@ 7f, mov_edi_r12d, call_0xfffffffffffefb@@ 96, lea_r12_[r@@ sp+0x1c], lea_rbp_[rsp+0x20], jmp_0x33, mov_eax_dword_ptr_[rip+0x2@@ 26@@ 8e@@ 2], test_eax_eax, jne_0x37, mov_r8_rbp, xor_ecx_ecx, xor_edx_edx, xor_esi_esi, xor_edi_edi, mov_qword_ptr_[rsp+0x20]_0, mov_qword_ptr_[rsp+0x2@@ 8]@@ _0x3@@ d0@@ 90, call_0xfffffffffffefc@@ 29, mov_edx_1, mov_rsi_r12, mov_edi_ebx, call_0xffffffffffff0@@ 11@@ a, test_eax_eax, je_0xffffffffffffff@@ c3, mov_eax_dword_ptr_[rip+0x2@@ 26@@ 8a@@ 3], test_eax_eax, je_0xc@@ ef, xor_edi_edi, call_0xfffffffffffefc@@ 31, mov_rax_qword_ptr_[rsp+0x@@ 5@@ 58], test_rax_rax, je_0x17, lea_rdi_[rsp+0x@@ 520], call_rax, test_eax_eax, mov_eax_1, cmove@@ _r14d_eax, cmp_dword_ptr_[rsp+0x@@ 57@@ 0]@@ _0x3ff, jg@@ _0x6@@ bb, lea_r13_[rsp+0x@@ 240], mov_rdi_r13, lea_r12_[rsp+0x@@ 2c0], call_0xfffffffffffefc@@ 72, xor_esi_esi, mov_rdx_r12, mov_edi_2, call_0xfffffffffffeff@@ 73, test_eax_eax, jne_0xc@@ 71, test_r14d_r14d, jne_0x1@@ db, mov_rax_qword_ptr_[rsp+0x@@ 58@@ 8], xor_ebx_ebx, lea_rbp_[r@@ sp+0x1@@ c0], test_rax_rax, je_0x15, mov_rax_qword_ptr_[rax+8], mov_qword_ptr_[rax@@ ]_1, mov_qword_ptr_[rax+8]_0, mov_ecx_0x10, mov_rdi_rbp, xor_eax_eax, c@@ l@@ d, rep_stosq_qword_ptr_[rdi]_rax, movsxd_rdi@@ _dword_ptr_[rsp+0x@@ 5@@ 70], call_0xffffffffffff0@@ 3f@@ a, mov_ecx_dword_ptr_[rsp+0x@@ 5@@ 70], mov_r8_rax, mov_eax_ecx, sar_eax_0x1f, shr_eax@@ _0x1a, add_ecx_eax, and_ecx_0x3f, sub_ecx_eax, mov_eax_1, shl_rax_cl, xor_edx_edx, mov_rsi_r13, mov_edi_2, or_qword_ptr_[r@@ sp+r@@ 8@@ *@@ 8+0x1@@ c0]_rax, call_0xfffffffffffefe@@ e2, test_eax_eax, jne_0x1@@ 9b, mov_eax_dword_ptr_[rip+0x2@@ 26@@ 79@@ 7], test_eax_eax, je_0x18, mov_rax_qword_ptr_[rsp+0x@@ 5@@ 80], cmp_qword_ptr_[rax+0x@@ 98]_0, je_0x6@@ 1b, mov_r8@@ _qword_ptr_[rsp+0x@@ 58@@ 8], test_r8_r8, je_6, mov_r8_qword_ptr_[r@@ 8+8], mov_eax_dword_ptr_[rsp+0x@@ 5@@ 70], xor_edx_edx, lea_edi_[rax+1], xor_ecx_ecx, mov_rsi_rbp, mov_r9_r12, call_0xfffffffffffefc@@ a0, xor_edx_edx, mov_rsi_r12, mov_edi_2, mov_r15d_eax, call_0xfffffffffffefe@@ 7e, test_eax_eax, jne_0x14@@ f, test_r15d_r15d, js_0x1@@ 5b, movsxd_rdi@@ _dword_ptr_[rsp+0x@@ 5@@ 70], call_0xffffffffffff0@@ 340, mov_edi_dword_ptr_[rsp+0x@@ 5@@ 70], mov_r8_rax, mov_eax_edi, sar_eax_0x1f, shr_eax@@ _0x1a, lea_ecx_[r@@ di+rax], and_ecx_0x3f, sub_ecx_eax, mov_eax_1, shl_rax_cl, test_qword_ptr_[r@@ sp+r@@ 8@@ *@@ 8+0x1@@ c0]_rax, jne_0x15@@ 1, mov_rsi_qword_ptr_[rsp+0x@@ 5@@ 80], mov_rdi_qword_ptr_[rsp+0x@@ 5@@ 78], xor_edx_edx, call_0xfffffffffffff@@ 149, mov_rax_qword_ptr_[rsp+0x@@ 58@@ 8], test_rax_rax, je_0xfffffffffffffe@@ d9, mov_edx_dword_ptr_[rax], test_edx_edx, je_0xfffffffffffffe@@ b7, mov_rdx_qword_ptr_[rsp+0x@@ 5@@ 80], cmp_qword_ptr_[rdx+0x@@ 98]_0, jne_0xfffffffffffffea@@ 1, mov_rdi_qword_ptr_[rsp+0x@@ 5@@ 78], xor_eax_eax, lea_rdx_[rip+0x18@@ 14@@ 9], mov_esi_5, call_0xc@@ 7d, mov_eax_ebx, inc_eax, mov_ebx_eax, mov_rax_qword_ptr_[rsp+0x@@ 58@@ 8], test_rax_rax, je_0xf, cmp_ebx_dword_ptr_[r@@ ax+4], jb_0xfffffffffffffe@@ 6a, mov_rdi_qword_ptr_[rsp+0x@@ 5@@ 78], mov_ecx_ebx, lea_rdx_[rip+0x18@@ 38@@ f], mov_esi_3, xor_eax_eax, call_0xc@@ 40, mov_rdi_qword_ptr_[rsp+0x@@ 5@@ 78], mov_rcx_qword_ptr_[rsp+0x@@ 5@@ 28], lea_rdx_[rip+0x18@@ 39@@ 1], mov_esi_3, xor_eax_eax, call_0xc@@ 1a, mov_rsi_qword_ptr_[rsp+0x@@ 5@@ 80], mov_rdi_qword_ptr_[rsp+0x@@ 5@@ 78], mov_edx_1, call_0xfffffffffffff0@@ 80, jmp_0xfffffffffffff8c@@ 3, lea_rdi_[rip+0x18@@ 0@@ 67], call_0xffffffffffff0@@ 17@@ 9, jmp_0xfffffffffffffe@@ 5f, lea_rdi_[rip+0x18@@ 0@@ 4f], call_0xffffffffffff0@@ 16@@ 1, test_r15d_r15d, jns_0xfffffffffffffe@@ b1, call_0xfffffffffffefe@@ c3, mov_eax_dword_ptr_[rax], cmp_eax_4, je_0x2@@ 59, cmp_eax_0xb, je_0x2@@ 50, lea_rdi_[rip+0x18@@ 0@@ 49], call_0xffffffffffff0@@ 133, mov_rax_qword_ptr_[rsp+0x@@ 58@@ 8], jmp_0xfffffffffffffd@@ 9e, mov_rax_qword_ptr_[rsp+0x@@ 5@@ 90], movdqu_xmm0_xmmword_ptr_[r@@ sp+0x@@ 520], mov_qword_ptr_[rsp+0x90]_rax, movdqu_xmm1_xmmword_ptr_[r@@ sp+0x@@ 530], movdqu_xmm2_xmmword_ptr_[r@@ sp+0x@@ 540], movdqu_xmm3_xmmword_ptr_[r@@ sp+0x@@ 550], movdqu_xmm4@@ _xmmword_ptr_[r@@ sp+0x@@ 560], movdqu@@ _xmm5@@ _xmmword_ptr_[r@@ sp+0x@@ 5@@ 70], movdqu@@ _xmm6@@ _xmmword_ptr_[r@@ sp+0x@@ 5@@ 80], mov_rax_qword_ptr_[rsp+0x@@ 5@@ 78], lea_rsi_[rsp+0x1@@ 50], lea_rdx_[r@@ sp+0x1c], mov_qword_ptr_[rsp]_rax, mov_dword_ptr_[rsp+0x1c]@@ _0x6e, mov_r15@@ _qword_ptr_[rsp+0x@@ 5@@ 80], movaps_xmmword_ptr_[rsp+0x20]_xmm0, movaps_xmmword_ptr_[rsp+0x@@ 30@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x@@ 40@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x@@ 50@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0x60@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0x70@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm6, call_0xffffffffffff00@@ a2, mov_ebx_eax, test_eax_eax, js_0x1@@ 99, mov_eax_dword_ptr_[rip+0x2@@ 26@@ 4f@@ 5], test_eax_eax, jne_0x1@@ c3, xor_eax_eax, mov_edx_1, mov_esi_2, mov_edi_ebx, call_0xfffffffffffefc@@ c7, test_eax_eax, jne_0x2@@ 30, mov_edi@@ _0xa8, call_0xfffffffffffef@@ 8e@@ 5, mov_r8_rax, test_rax_rax, je_0x@@ 8e@@ 3, mov_rax_qword_ptr_[r15+0x@@ 98], movdqa_xmm7@@ _xmmword_ptr_[r@@ sp+0x@@ 20], mov_qword_ptr_[r8+0x@@ 98]_rax, mov_rax_qword_ptr_[rsp], mov_qword_ptr_[r15+0x@@ 9@@ 8]_r8, mov_qword_ptr_[rsp+0x78]_rax, mov_qword_ptr_[rsp+0x8@@ 0]_r15, mov_rax_qword_ptr_[rsp+0x90], movups_xmmword_ptr_[r@@ 8@@ ]_xmm7, movdqa_xmm7@@ _xmmword_ptr_[r@@ sp+0x@@ 30], movdqa_xmm0_xmmword_ptr_[rsp+0x@@ 50], movdqa_xmm1_xmmword_ptr_[r@@ sp+0x@@ 60], movdqa_xmm2_xmmword_ptr_[r@@ sp+0x@@ 70], movdqa_xmm3_xmmword_ptr_[r@@ sp+0x@@ 80], movups_xmmword_ptr_[r@@ 8+0x1@@ 0@@ ]_xmm7, mov_dword_ptr_[r8+0x@@ a0]_1, movdqa_xmm7@@ _xmmword_ptr_[r@@ sp+0x@@ 40], mov_qword_ptr_[r8+0x@@ 70]_rax, mov_dword_ptr_[r8+0x@@ 7@@ 8]_ebx, mov_qword_ptr_[r8+0x@@ 80]_0, mov_qword_ptr_[r8+0x@@ 88]_0, mov_qword_ptr_[r8+0x@@ 90]_0, movups_xmmword_ptr_[r@@ 8+0x@@ 20@@ ]_xmm7, movups_xmmword_ptr_[r@@ 8+0x@@ 30]_xmm0, movups_xmmword_ptr_[r@@ 8+0x@@ 40@@ ]_xmm1, movups_xmmword_ptr_[r@@ 8+0x@@ 50@@ ]_xmm2, movups_xmmword_ptr_[r@@ 8+0x@@ 60@@ ]_xmm3, mov_qword_ptr_[rsp+8]_r8, call_0xfffffffffffefc@@ ee, mov_r8_qword_ptr_[rsp+8], lea_rdx_[rip-0x@@ f7@@ 3], lea_rdi_[r@@ 8+0x@@ 80], mov_rcx_r8, xor_esi_esi, mov_r15_rax, call_0xfffffffffffef@@ 9c@@ e, mov_dword_ptr_[r15]_eax, test_eax_eax, jne_0xc, xor_ebx_ebx, jmp_0xfffffffffffffc@@ e5, mov_edi_eax, call_0xfffffffffffefa@@ d6, mov_rdi_qword_ptr_[rsp], mov_rcx_rax, lea_rdx_[rip+0x18@@ 0@@ c3], mov_esi_1, xor_eax_eax, call_0x@@ 99@@ c, mov_r8_qword_ptr_[rsp+8], mov_dword_ptr_[r8+0x@@ a0]_0, mov_edi_ebx, call_0xfffffffffffef@@ 6@@ 35, test_eax_eax, je_0xffffffffffffff@@ bc, lea_rdi_[rip+0x17@@ e@@ 60], call_0xfffffffffffeff@@ 05, xor_ebx_ebx, jmp_0xfffffffffffffc@@ 93, mov_rax_qword_ptr_[rsp+0x@@ 58@@ 8], jmp_0xfffffffffffffb@@ 60, call_0xfffffffffffefc@@ 50, mov_edi_dword_ptr_[rax], cmp_edi@@ _0xb, je_0xffffffffffffff@@ 84, call_0xfffffffffffefa@@ 64, mov_rdi_qword_ptr_[rsp], mov_rcx_rax, lea_rdx_[rip+0x17@@ fd@@ 9], mov_esi_1, xor_eax_eax, call_0x@@ 92@@ a, xor_ebx_ebx, jmp_0xfffffffffffffc@@ 48, mov_rdi_qword_ptr_[rsp], lea_rdx_[rip+0x17@@ d@@ c0], mov_esi_1, xor_eax_eax, call_0x90@@ 6, jmp_0xffffffffffffff7a, call_0xfffffffffffefe@@ 08, mov_edi_eax, mov_esi@@ _0xf, call_0xfffffffffffef@@ 9e@@ c, jmp_0xfffffffffffff@@ 58@@ 9, mov_ebp_dword_ptr_[rsp+0x@@ 5@@ 70], jmp_0xfffffffffffff@@ 54@@ f, call_0xfffffffffffefb@@ d0, mov_edi_dword_ptr_[rax], xor_r14d_r14d, call_0xfffffffffffef@@ 9e@@ 6, mov_ecx_dword_ptr_[rsp+0x@@ 5@@ 70], mov_rdi_qword_ptr_[rsp+0x@@ 5@@ 78], mov_r8_rax, lea_rdx_[rip+0x17@@ f20], mov_esi_1, xor_eax_eax, call_0x8a@@ 1, jmp_0xfffffffffffff5@@ 30, mov_rdi_qword_ptr_[rsp], mov_ecx_ebx, lea_rdx_[rip+0x17@@ f5@@ 3], mov_esi_2, xor_eax_eax, call_0x87@@ c, jmp_0xfffffffffffffd@@ bd, lea_rdi_[rip+0x17@@ bc@@ d], call_0xfffffffffffef@@ 47@@ 9, test_eax_eax, jne_0x6@@ 85, xor_esi_esi, mov_edi_r12d, call_0xfffffffffffef@@ 48@@ 7, cmp_eax_-1, je_0x6@@ 5c, mov_esi_1, mov_edi_r12d, call_0xfffffffffffef@@ 47@@ 1, cmp_eax_-1, je_0x6@@ 46, mov_esi_2, mov_edi_r12d, call_0xfffffffffffef@@ 45@@ b, cmp_eax_-1, je_0x6@@ 30, cmp_r12d_2, jle_0x@@ 12, mov_edi_r12d, call_0xfffffffffffef@@ 4c@@ 4, test_eax_eax, jne_0x@@ 60@@ 4, lea_rsi_[rsp+0x20], mov_edi_7, call_0xfffffffffffefa@@ cd, test_eax_eax, js_0x1@@ de, mov_eax_dword_ptr_[rsp+0x20], lea_ebx@@ _[rax-1], cmp_ebx_2, jg@@ _0x14, jmp_0x21, mov_edi_ebx, dec_ebx, call_0xfffffffffffef@@ 48@@ c, cmp_ebx_2, je_0x11, mov_esi_dword_ptr_[rip+0x2@@ 26@@ 1e0], test_esi_esi, je_0xffffffffffffffea, cmp_ebx_3, jne_0xffffffffffffffe5, call_0xfffffffffffef@@ 45@@ 3, jmp_0xfffffffffffff@@ 328, call_0xfffffffffffef@@ 6@@ 10, test_eax_eax, je_0xfffffffffffff7@@ f2, lea_rdi_[rip+0x17@@ b@@ ff], call_0xfffffffffffefd@@ 2c, jmp_0xfffffffffffff7@@ e0, lea_rdi_[rsp+0x@@ 240], call_0xfffffffffffef@@ 5c8, xor_esi_esi, lea_rdx_[rsp+0x@@ 2c0], mov_edi_2, call_0xfffffffffffef@@ 8c@@ 4, test_eax_eax, je_0x4@@ 63, lea_rdi_[rip+0x17@@ bd@@ e], call_0xfffffffffffefc@@ f0, mov_r14d_1, jmp_0xfffffffffffffb@@ 1d, xor_edx_edx, mov_rsi_r12, mov_edi_2, call_0xfffffffffffef@@ 8@@ 96, test_eax_eax, jne_0x3@@ de, mov_rcx_qword_ptr_[rsp+0x@@ 5@@ 28], mov_rdi_qword_ptr_[rsp+0x@@ 5@@ 78], lea_rdx_[rip+0x17@@ bb@@ 2], mov_esi_3, xor_eax_eax, call_0x7@@ 1b, jmp_0xfffffffffffffa@@ de, lea_rdi_[rip+0x17@@ a@@ b8], call_0xfffffffffffefc@@ 99, mov_edi_r14d, call_0xfffffffffffefc@@ e1, xor_esi_esi, xor_edi_edi, call_0x54@@ f8, mov_r14d_1, mov_dword_ptr_[rsp+0x@@ 57@@ 0]_ebp, jmp_0xfffffffffffff@@ 37@@ a, mov_rdi_qword_ptr_[rbx], mov_rcx_r12, lea_rdx_[rip+0x17@@ cf@@ b], mov_esi_1, call_0xfffffffffffef@@ 3f@@ e, mov_edi_ebp, call_0xfffffffffffef@@ 37@@ 7, test_eax_eax, jne_0x34@@ e, mov_edi_r14d, call_0xfffffffffffefc@@ 97, xor_esi_esi, xor_edi_edi, call_0x5@@ 4a@@ e, mov_r14d_1, mov_dword_ptr_[rsp+0x@@ 57@@ 0]_0xffffffff, jmp_0xfffffffffffff@@ 32@@ c, call_0xfffffffffffef@@ 990, mov_edi_dword_ptr_[rax], call_0xfffffffffffef7@@ a9, mov_rbx_qword_ptr_[rip+0x2@@ 37@@ dd], mov_r8_rax, mov_rdi_qword_ptr_[rbx], mov_ecx_ebp, lea_rdx_[rip+0x17@@ c6@@ 6], mov_esi_1, xor_eax_eax, call_0xfffffffffffef@@ 3@@ 97, jmp_0xfffffffffffff5@@ 3c, mov_esi@@ _0xffff@@ fc@@ 18, lea_rdi_[rip+0x17@@ 9b@@ 2], call_0xffffffffffffea@@ 3c, test_eax_eax, jne_0x1d, mov_rdi_qword_ptr_[rsp+0x@@ 5@@ 78], lea_rdx_[rip+0x17@@ c0@@ 4], mov_esi_1, xor_eax_eax, call_0x6@@ 2d, mov_eax_dword_ptr_[rip+0x22@@ 60@@ 36], jmp_0xfffffffffffff@@ 42@@ 2, mov_ebx@@ _0xff, jmp_0xfffffffffffffe@@ 41, mov_esi_1, mov_edi_ebp, call_0xfffffffffffef@@ 64@@ 7, test_eax_eax, jne_0x2@@ 41, mov_edi_r14d, call_0xfffffffffffefb@@ d7, xor_esi_esi, xor_edi_edi, call_0x5@@ 3e@@ e, mov_dword_ptr_[rsp+0x@@ 57@@ 0]_ebp, jmp_0xfffffffffffff@@ 258, lea_rdi_[rip+0x17@@ 9b@@ 1], call_0xfffffffffffefb@@ 66, jmp_0xffffffffffffff08, call_0xfffffffffffef@@ 47@@ c, cmp_eax_r12d, jne_0xfffffffffffff0@@ f4, lea_rdi_[rip+0x17@@ 89@@ 7], call_0xfffffffffffef@@ 8@@ 97, mov_rdi_rax, test_rax_rax, je_0xfffffffffffff0@@ dc, mov_dword_ptr_[rbx]_0, mov_edx_0xa, mov_rsi_r13, call_0xfffffffffffefb@@ 58, mov_ebx_dword_ptr_[r@@ bx], test_ebx_ebx, jne_0xfffffffffffff0@@ bf, mov_rdx_qword_ptr_[rsp+0x20], test_rdx_rdx, je_0xfffffffffffff0@@ b1, cmp_byte_ptr_[rdx]_0, jne_0xfffffffffffff0@@ a8, cmp_rax_1, jne_0xfffffffffffff0@@ 9e, mov_r15@@ _qword_ptr_[rsp+0x@@ 538], lea_r13_[rsp+0x@@ 240], xor_edx_edx, xor_eax_eax, mov_ecx_eax, add_eax@@ _0x20, mov_qword_ptr_[rsp@@ +rcx+0x@@ 24@@ 0]_rdx, mov_qword_ptr_[rsp@@ +rcx+0x@@ 24@@ 8]_rdx, mov_qword_ptr_[rsp@@ +rcx+0x@@ 25@@ 0]_rdx, mov_qword_ptr_[rsp@@ +rcx+0x@@ 25@@ 8]_rdx, cmp_eax@@ _0x60, jb_0xffffffffffffff@@ d8, add_rax_r13, xor_edi_edi, mov_word_ptr_[rax+0x@@ c@@ ]_di, mov_rdi_r15, mov_qword_ptr_[rax]_0, mov_dword_ptr_[rax+8]_0, mov_dword_ptr_[rsp+0x18]_0, mov_dword_ptr_[rsp+0x1@@ c@@ ]_4, call_0xfffffffffffef@@ 4d@@ 0, lea_rdx_[rsp+0x@@ 2c0], mov_esi_3, mov_edi_1, mov_qword_ptr_[rsp]_rax, call_0xfffffffffffef@@ 40@@ 5, test_eax_eax, js_0xffffffffffff@@ f0@@ 10, mov_eax_dword_ptr_[rsp+0x@@ 2d8], and_eax_0xf000, cmp_eax_0x@@ c@@ 000, jne_0xffffffffffffe@@ ff@@ 9, lea_r12_[r@@ sp+0x1c], lea_rcx_[rsp+0x18], mov_r8_r12, mov_edx_3, mov_esi_1, mov_edi_3, call_0xfffffffffffef@@ 6@@ 25, test_eax_eax, js_0xffffffffffff@@ e@@ fd0, cmp_dword_ptr_[rsp+0x1@@ c@@ ]_4, jne_0xffffffffffffe@@ fc@@ 5, cmp_dword_ptr_[rsp+0x1@@ 8]_1, jne_0xffffffffffffe@@ fb@@ a, mov_rdx_r12, mov_rsi_r13, mov_edi_3, mov_dword_ptr_[rsp+0x1c]@@ _0x6e, call_0xfffffffffffef@@ 64@@ f, test_eax_eax, js_0xffffffffffff@@ ef@@ 9a, mov_eax_dword_ptr_[rsp+0x1c], cmp_eax_1, jbe_0xffffffffffff@@ ef@@ 8d, cmp_word_ptr_[rsp+0x@@ 24@@ 0]_1, jne_0xffffffffffffe@@ f7@@ e, mov_rcx_qword_ptr_[rsp], lea_rdx_[rcx@@ +3], cmp_rax_rdx, jb_0xffffffffffff@@ ef@@ 6d, lea_rsi_[rsp+0x@@ 24@@ 2], mov_rdx_rcx, mov_rdi_r15, call_0xfffffffffffef@@ 8@@ 17, test_eax_eax, jne_0xffffffffffff@@ ef@@ 52, mov_dword_ptr_[rsp+0x5@@ 70@@ ]_3, mov_ebx_1, jmp_0xffffffffffffef@@ 3c, mov_esi@@ _0xffffff@@ ef, lea_rdi_[rip+0x17@@ 77@@ 3], call_0xffffffffffffe@@ 7e@@ 4, test_eax_eax, jne_0xfffffffffffffd@@ c5, mov_esi@@ _0xfffffff@@ 0, lea_rdi_[rip+0x17@@ 75@@ a], call_0xffffffffffffe@@ 7c@@ b, mov_r8d_eax, mov_eax_dword_ptr_[rip+0x22@@ 5d@@ e1], test_r8d_r8d, jne_0xfffffffffffff@@ 1c@@ a, jmp_0xfffffffffffffd@@ 81, lea_rdi_[rip+0x17@@ 8@@ 29], call_0xfffffffffffef@@ 948, mov_edi_ebp, call_0xfffffffffffef0@@ 61, test_eax_eax, jne_0x@@ e5, mov_rdi_r12, call_0xfffffffffffef@@ 20@@ 1, test_eax_eax, je_0xfffffffffffffc@@ e0, lea_rdi_[rip+0x17@@ 7@@ f0], call_0xfffffffffffef@@ 9@@ 1d, jmp_0xfffffffffffffc@@ ce, lea_rdi_[rip+0x17@@ 85@@ 3], call_0xfffffffffffef@@ 90@@ c, jmp_0xfffffffffffff0@@ 75, lea_rdi_[rip+0x17@@ 5b0], call_0xfffffffffffef@@ 8f@@ b, jmp_0xfffffffffffffc@@ ac, lea_rdi_[rip+0x17@@ 7d@@ 8], call_0xfffffffffffef@@ 8@@ ea, jmp_0xfffffffffffffc@@ 1c, mov_rdi_qword_ptr_[rbx], mov_rcx_r15, lea_rdx_[rip+0x17@@ 74@@ 2], mov_esi_1, xor_eax_eax, call_0xfffffffffffef0@@ 6c, jmp_0xfffffffffffffc@@ 6e, lea_rdi_[rip+0x17@@ 6b@@ d], call_0xfffffffffffef@@ 8b@@ b, mov_eax_dword_ptr_[rip+0x22@@ 5d@@ 34], jmp_0xfffffffffffff@@ 120, lea_rdi_[rip+0x17@@ 70@@ 7], call_0xfffffffffffef@@ 8a@@ 4, jmp_0xfffffffffffffc@@ 46, mov_r14d_1, jmp_0xfffffffffffff@@ 6c@@ c, mov_rdi_qword_ptr_[rbx], mov_rcx_r15, lea_rdx_[rip+0x17@@ 70@@ 3], mov_esi_1, xor_eax_eax, call_0xfffffffffffef0@@ 1b, jmp_0xfffffffffffffc@@ 1d, mov_rdi_qword_ptr_[rbx], mov_rcx_r15, lea_rdx_[rip+0x17@@ 70@@ 3], mov_esi_1, call_0xfffffffffffee@@ fff, jmp_0xfffffffffffffc@@ 01, lea_rdi_[rip+0x17@@ 50@@ 3], call_0xfffffffffffef@@ 84@@ e, jmp_0xffffffffffffff15, lea_rdi_[rip+0x17@@ 7@@ 10], call_0xfffffffffffef@@ 8@@ 3d, jmp_0xfffffffffffffb@@ df, call_0xfffffffffffef@@ 60@@ 3, mov_rax_qword_ptr_[rip+0x23@@ 3f@@ 7], lea_rdi_[rip+0x17@@ 58@@ 5], mov_rcx_qword_ptr_[rax], mov_edx_0x1@@ a, mov_esi_1, call_0xfffffffffffef7@@ e3, mov_edi_1, call_0xfffffffffffef0@@ 29, lea_rdi_[rip+0x17@@ 59@@ 9], call_0xfffffffffffef7@@ fd, mov_edi_1, call_0xfffffffffffef0@@ 13, mov_rax_qword_ptr_[rip+0x23@@ 3b@@ 7], lea_rdi_[rip+0x17@@ 560], mov_rcx_qword_ptr_[rax], mov_edx_0x1@@ b, mov_esi_1, call_0xfffffffffffef7@@ a3, mov_edi_1, call_0xfffffffffffee@@ fe@@ 9, mov_rdi_qword_ptr_[rsp+0x@@ 5@@ 78], mov_rcx_qword_ptr_[rsp+0x@@ 530], lea_rdx_[rip+0x17@@ 7@@ 25], mov_esi_1, call_0x2@@ 18, mov_edi_0xd, call_0xfffffffffffee@@ fb@@ e, lea_rdi_[rip+0x17@@ 76@@ 2], call_0xfffffffffffef7@@ 92, mov_edi_3, call_0xfffffffffffee@@ fa@@ 8, lea_rdi_[rip+0x17@@ 7@@ 24], call_0xfffffffffffef7@@ 7c, mov_edi_2, call_0xfffffffffffe@@ ef@@ 92, lea_rdi_[rip+0x17@@ 5@@ 2a], call_0xfffffffffffef7@@ 66, mov_edi_1, call_0xfffffffffffee@@ f7@@ c, mov_rdi_qword_ptr_[rsp], lea_rdx_[rip+0x17@@ 8b@@ c], mov_esi_1, xor_eax_eax, call_0x1@@ b5, jmp_0xfffffffffffff8@@ 29, lea_rdi_[rip+0x17@@ 6@@ 22], call_0xfffffffffffef7@@ 34, jmp_0xfffffffffffff@@ 38@@ 9, mov_ecx_dword_ptr_[rsp+0x1c], mov_rax_qword_ptr_[rip+0x23@@ 2e@@ f], movzx_ecx@@ _ch@@ , mov_rdi_qword_ptr_[rax], cmp_ecx@@ _0xd, je_0x21, lea_rdx_[rip+0x17@@ 4b@@ 6], mov_esi_1, xor_eax_eax, call_0xfffffffffffee@@ ea@@ 6, mov_eax_dword_ptr_[rsp+0x1c], movzx_edi@@ _ah, call_0xfffffffffffe@@ ef@@ 1a, mov_rcx_r13, lea_rdx_[rip+0x17@@ 66@@ 3], mov_esi_1, xor_eax_eax, call_0xfffffffffffeee@@ 84, jmp_0xffffffffffffffd@@ e
endbr64, mov_r8_rcx, lea_rcx_[rip+0x@@ 17@@ 8c@@ a], cmp_edx_2, je_0x16, jg@@ _0x35, lea_rcx_[rip+0x@@ 17@@ 8c@@ 0], lea_rax_[rip+0x13@@ 33@@ c], cmovae@@ _rcx_rax, mov_rax_qword_ptr_[rip+0x23@@ 27@@ 2], lea_rdx_[rip+0x17@@ 8a@@ f], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, jmp_0xfffffffffff@@ ee@@ e@@ 31, cmp_edx_3, lea_rcx_[rip+0x13@@ 30@@ d], lea_rax_[rip+0x@@ 17@@ 88@@ 7], cmove_rcx_rax, jmp_0xffffffffffffffc@@ a
endbr64, push_rbx, mov_ebx_edx, sub_rsp_0x10, cmp_qword_ptr_[rsi@@ ]_0, je_0x31, mov_edi_7, cmp_ebx_3, ja@@ _0xc, lea_rax_[rip+0x@@ 17@@ 87@@ e], mov_edi_dword_ptr_[r@@ ax+r@@ bx*4], add_rsp_0x10, lea_rdx_[rip+0x1a@@ 44@@ 6], mov_esi_1, xor_eax_eax, pop_rbx, jmp_0xfffffffffff@@ ef@@ 2d@@ 8, mov_qword_ptr_[rsi@@ ]_1, mov_edx_0x18, mov_esi_1, mov_rdi_qword_ptr_[r@@ di+0x1@@ 80], mov_qword_ptr_[rsp+8]_rcx, call_0xfffffffffffeee@@ 23, mov_rcx_qword_ptr_[rsp+8], jmp_0xffffffffffffffa@@ a
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, lea_rbx_[rip+0x@@ 23@@ 3b@@ 7], mov_eax_dword_ptr_[rbx], test_eax_eax, je_0x3e, mov_rbp_rdi, mov_r13d_esi, mov_r14_rdx, lea_r12_[r@@ di+0x@@ 80], movsxd_r15@@ _esi, mov_edx_dword_ptr_[r@@ bp+r@@ 15*4], and_edx@@ _eax, cmp_edx_eax, jne_0x11, mov_rcx_r14, mov_edx_r13d, mov_rsi_r12, mov_rdi_rbp, call_qword_ptr_[r@@ bx+8], mov_eax_dword_ptr_[rbx+0x10], add_r12_8, add_rbx_0x10, test_eax_eax, jne_0xffffffffffffffd9, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
endbr64, push_r12, mov_r12d_esi, mov_rsi_rdx, push_rbp, mov_rbp_rdi, sub_rsp_0xe8, mov_qword_ptr_[rsp+0x48]_rcx, mov_qword_ptr_[rsp+0x50]_r8, mov_qword_ptr_[rsp+0x58]_r9, test_al_al, je_0x3c, movaps_xmmword_ptr_[rsp+0x60]_xmm0, movaps_xmmword_ptr_[rsp+0x70@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, lea_rax_[rsp+0x100], mov_qword_ptr_[rsp+0x18]_rax, lea_rdx_[rsp+0x10], lea_rax_[rsp+0x30], lea_rdi_[rsp+8], mov_dword_ptr_[rsp+0x10]@@ _0x18, mov_dword_ptr_[rsp+0x14]@@ _0x30, mov_qword_ptr_[rsp+0x20]_rax, call_0xc@@ 5@@ 3b, test_eax_eax, js_0x1@@ c, mov_rdx_qword_ptr_[rsp+8], mov_rdi_rbp, mov_esi_r12d, call_0xfffffffffffffed@@ 7, mov_rdi_qword_ptr_[rsp+8], call_0xfffffffffffeee@@ fd, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0xd, add_rsp_0xe8, pop_rbp, pop_r12, ret, call_0xfffffffffffef@@ 27@@ d
endbr64, sub_rsp_8, mov_rax_rsi, mov_rcx_qword_ptr_[r@@ si+0x10], mov_r8_rdi, mov_esi_dword_ptr_[r@@ si+8], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x17@@ 8@@ 22], xor_eax_eax, call_0xfffffffffffffee@@ f, xor_eax_eax, add_rsp_8, ret
endbr64, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x10]_rdx, lea_rdx_[rip+0x2@@ 32@@ 1c], mov_qword_ptr_[rsp]_rdi, mov_eax_dword_ptr_[rdx], mov_dword_ptr_[rsp+8]_esi, test_eax_eax, je_0x36, movsxd_rsi_esi, mov_r8d_dword_ptr_[r@@ di+r@@ si*4], jmp_0x12, mov_eax_dword_ptr_[r@@ dx+0x10], add_rdx_0x10, test_eax_eax, je_0x1d, mov_esi_eax, and_esi@@ _r8d, cmp_esi_eax, jne_0xffffffffffffffee, mov_rdx_rsp, lea_rsi_[rip-0x@@ 8e], mov_rdi_rcx, call_0xa@@ bc@@ f, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_7, add_rsp_0x28, ret, call_0xfffffffffffef@@ 1c@@ 5
endbr64, push_r15, push_r14, push_r13, mov_r13_rdx, push_r12, push_rbp, push_rbx, sub_rsp_0x18, lea_rdx_[rip+0x@@ 23@@ 1a@@ 4], mov_eax_dword_ptr_[rdx], test_eax_eax, je_0xc0, mov_rbp_rdi, mov_rdi_rcx, movsxd_rcx@@ _esi, mov_r8d_dword_ptr_[r@@ bp@@ +rcx*4], mov_r12d_esi, jmp_0x18, mov_eax_dword_ptr_[r@@ dx+0x10], add_rdx_0x10, test_eax_eax, je_0x97, mov_esi_eax, and_esi@@ _r8d, cmp_esi_eax, jne_0xffffffffffffffea, call_0xfffffffffffef@@ 118, mov_qword_ptr_[rsp+8]_rax, test_rax_rax, je_0x7b, mov_r15_rax, lea_r14_[rip+0x@@ 17@@ 7@@ 20], jmp_0x24, mov_byte_ptr_[rax]_0, mov_r8_r15, mov_rcx_r13, mov_rdx_r14, mov_esi_r12d, mov_rdi_rbp, xor_eax_eax, call_0xfffffffffffffdd@@ 4, lea_r15_[r@@ bx+1], mov_esi_0xa, mov_rdi_r15, call_0xfffffffffffef0@@ 23, mov_rbx_rax, test_rax_rax, jne_0xffffffffffffffd0, mov_rdi_rbp, mov_r8_r15, mov_rcx_r13, mov_esi_r12d, lea_rdx_[rip+0x17@@ 6d@@ 4], xor_eax_eax, call_0xfffffffffffffd@@ a1, mov_rdi_qword_ptr_[rsp+8], add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, jmp_0xfffffffffffe@@ ed@@ 49, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
endbr64, cmp_edx@@ _0x1f, jg_0x1@@ a, movsxd_rdx_edx, lea_rdx_[r@@ di@@ +rdx*4], mov_edi_dword_ptr_[r@@ dx], mov_eax_esi, not_eax, and_eax@@ _edi, or_esi@@ _edi, test_ecx_ecx, cmove@@ _esi@@ _eax, mov_dword_ptr_[rdx@@ ]_esi, ret
endbr64, mov_eax_1, test_rdx_rdx, je_0x2@@ 34, cmp_byte_ptr_[rdx]_0, jne_0xb, ret, push_r15, push_r14, push_r13, push_r12, mov_r12d_ecx, push_rbp, mov_ebp_esi, push_rbx, mov_rbx_rdi, mov_rdi_rdx, sub_rsp_0x18, call_0xfffffffffffef0@@ 17, mov_qword_ptr_[rsp+8]_rax, mov_r15_rax, test_rax_rax, je_0x2@@ 16, mov_esi_0x2c, mov_rdi_r15, call_0xfffffffffffe@@ ef@@ 48, mov_r14_rax, test_rax_rax, je_5, mov_byte_ptr_[rax]_0, mov_ecx_4, mov_rsi_r15, lea_rdi_[rip+0x1a@@ 1f@@ 9], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_dl, sbb_dl_0, movsx@@ _r13d@@ _dl, test_r13d_r13d, je_0xda, mov_ecx_6, mov_rsi_r15, lea_rdi_[rip+0x17@@ 44@@ f], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_dl, sbb_dl_0, test_dl_dl, je_0xdb, mov_ecx_6, mov_rsi_r15, lea_rdi_[rip+0x17@@ 16@@ 4], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_dl, sbb_dl_0, test_dl_dl, je_0xfc, mov_ecx_5, mov_rsi_r15, lea_rdi_[rip+0x13@@ 8b@@ f], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_dl, sbb_dl_0, test_dl_dl, je_0xfd, mov_ecx_5, mov_rsi_r15, lea_rdi_[rip+0x12@@ e4@@ 7], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_dl, sbb_dl_0, test_dl_dl, je_0x1@@ 1e, mov_ecx_5, lea_rdi_[rip+0x17@@ 3d@@ c], mov_rsi_r15, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_dl, sbb_dl_0, test_dl_dl, je_0x12@@ 7, mov_ecx_6, lea_rdi_[rip+0x13@@ 8@@ 8d], mov_rsi_r15, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_dl, sbb_dl_0, test_dl_dl, je_0xc0, test_r14_r14, je_0x45, lea_r15_[r@@ 14+1], jmp_0xfffffffffffffef7, mov_edx_r13d, mov_ecx_r12d, mov_esi_ebp, mov_rdi_rbx, inc_r13d, call_0xfffffffffffffe@@ 62, cmp_r13d@@ _0x20, jne_0xffffffffffffffe9, jmp_0xffffffffffffffd7, xor_edx_edx, mov_ecx_r12d, mov_esi_ebp, mov_rdi_rbx, call_0xfffffffffffffe@@ 46, test_r14_r14, jne_0xffffffffffffffc3, mov_rdi_qword_ptr_[rsp+8], call_0xfffffffffffeeb@@ 63, mov_eax_1, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_ecx_r12d, mov_edx_1, mov_esi_ebp, mov_rdi_rbx, call_0xfffffffffffffe0@@ 3, jmp_0xffffffffffffff7e, mov_ecx_r12d, mov_edx_2, mov_esi_ebp, mov_rdi_rbx, call_0xfffffffffffffd@@ e3, jmp_0xffffffffffffff5e, mov_ecx_r12d, mov_edx_5, mov_esi_ebp, mov_rdi_rbx, call_0xfffffffffffffd@@ c3, jmp_0xffffffffffffff3e, mov_ecx_r12d, mov_edx_3, mov_esi_ebp, mov_rdi_rbx, call_0xfffffffffffffd@@ a3, jmp_0xffffffffffffff1e, ret, mov_ecx_r12d, mov_edx_4, mov_esi_ebp, mov_rdi_rbx, call_0xfffffffffffffd@@ 7b, jmp_0xfffffffffffffef6, xor_eax_eax, jmp_0xffffffffffffff4@@ 6
endbr64, push_r15, push_r14, mov_r14_rsi, mov_esi_0x20, push_r13, push_r12, push_rbp, push_rbx, mov_ebx_edi, mov_rdi_r14, sub_rsp_0x98, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, call_0xc@@ 3b, test_eax_eax, je_0x104, mov_eax_ebx, sar_eax_0x1f, shr_eax@@ _0x1a, lea_ecx_[r@@ bx+rax], and_ecx_0x3f, sub_ecx_eax, mov_ebp_1, mov_edx_dword_ptr_[r14], mov_eax_dword_ptr_[r@@ 14+4], shl_rbp@@ _cl, lea_r12_[rip+0x@@ 17@@ 238], sub_edx_eax, cdqe, add_rax_qword_ptr_[r@@ 14+8], movsxd_rdx_edx, mov_rsi_rax, mov_edi_ebx, call_0xfffffffffffee@@ 860, mov_r13_rax, mov_r15d_eax, test_eax_eax, jle_0x@@ 63, mov_eax_dword_ptr_[r@@ 14+4], add_eax@@ _r13d, mov_dword_ptr_[r14+@@ 4]_eax, cmp_eax_3, jle_0x@@ 26, mov_r8_qword_ptr_[r@@ 14+8], movsxd_rdx_eax, lea_rsi_[r@@ 8@@ +rdx@@ -4], mov_ecx_4, mov_rdi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_dl, sbb_dl_0, test_dl_dl, je_0xbb, mov_edx_dword_ptr_[r14], mov_ecx_edx, sub_ecx_eax, cmp_ecx@@ _0x1f, jg_0xffffffffffffff@@ a3, mov_esi_0x400, mov_rdi_r14, call_0xb@@ 99, test_eax_eax, je_0x62, mov_edx_dword_ptr_[r14], mov_eax_dword_ptr_[r@@ 14+4], jmp_0xffffffffffffff89, call_0xfffffffffffeec@@ e0, test_r13d_r13d, je_0x78, mov_eax_dword_ptr_[rax], lea_edx_[rax@@ -4], cmp_edx_1, jbe_@@ 7, cmp_eax_0xb, jne_0x39, mov_r13_rsp, xor_eax_eax, mov_ecx_0x10, mov_rdi_r13, c@@ l@@ d, rep_stosq_qword_ptr_[rdi]_rax, movsxd_rdi@@ _ebx, call_0xfffffffffffee@@ fe@@ 3, xor_r8d_r8d, xor_ecx_ecx, xor_edx_edx, mov_rsi_r13, mov_edi_0x4@@ 00, or_qword_ptr_[r@@ sp@@ +rax*@@ 8]_rbp, call_0xfffffffffffee@@ 7@@ 1b, jmp_0xffffffffffffffa6, xor_r15d_r15d, mov_rax_qword_ptr_[rsp+0x88], xor_rax_qword_ptr_fs:[0x28], jne_0x3a, add_rsp_0x98, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r15d, pop_r15, ret, mov_dword_ptr_[rax]@@ _0x68, jmp_0xffffffffffffffcd, sub_eax@@ _4, mov_dword_ptr_[r14+@@ 4]_eax, cdqe, mov_byte_ptr_[r@@ 8@@ +rax]_0, mov_r15d_1, jmp_0xffffffffffffffb7, call_0xfffffffffffeec@@ a@@ 2
endbr64, push_r15, xor_r15d_r15d, push_r14, push_r13, mov_r13d_1, push_r12, push_rbp, mov_ebp_edi, push_rbx, sub_rsp_0xa8, mov_qword_ptr_[rsp+8]_rsi, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, mov_eax_edi, sar_eax_0x1f, shr_eax@@ _0x1a, lea_ecx_[r@@ di+rax], and_ecx_0x3f, sub_ecx_eax, shl_r13@@ _cl, test_r15d_r15d, je_0xe2, lea_rsi_[rip+0x1@@ 70@@ a5], lea_rbx_[rip+0x@@ 2@@ 20@@ 4e], mov_edx_4, xor_r14d_r14d, jmp_0x19, add_r14@@ d_eax, mov_edx_dword_ptr_[rbx+4], cmp_edx@@ _r14d, jle_0x@@ a7, mov_rsi_qword_ptr_[rbx+8], sub_edx@@ _r14d, movsxd_rax_r14d, add_rsi_rax, movsxd_rdx_edx, mov_edi_ebp, call_0xfffffffffffeee@@ 3f, test_eax_eax, jg_0xffffffffffffff@@ d8, je_0xffffffffffffffd9, call_0xfffffffffffeeb@@ 94, mov_eax_dword_ptr_[rax], lea_edx_[rax@@ -4], cmp_edx_1, jbe_0x@@ 37, cmp_eax_0xb, je_0x32, xor_eax_eax, mov_rcx_qword_ptr_[rsp+0x98], xor_rcx_qword_ptr_fs:[0x28], jne_0x95, add_rsp_0xa8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_r12_[rsp+0x10], mov_ecx_0x10, mov_rdi_r12, xor_eax_eax, c@@ l@@ d, rep_stosq_qword_ptr_[rdi]_rax, movsxd_rdi@@ _ebp, call_0xfffffffffffeee@@ 6a, mov_rdx_r12, xor_r8d_r8d, xor_ecx_ecx, xor_esi_esi, mov_edi_0x4@@ 00, or_qword_ptr_[r@@ sp@@ +rax*@@ 8+0x1@@ 0]_r13, call_0xfffffffffffee@@ 5a@@ 1, mov_edx_dword_ptr_[rbx+4], cmp_edx@@ _r14d, jg_0xffffffffffffff@@ 65, cmp_r15d_1, jne_0x2c, mov_eax_1, jmp_0xffffffffffffff87, mov_rax_qword_ptr_[rsp+8], mov_edx_dword_ptr_[rax+4], test_edx_edx, jle_0x@@ 16, mov_rbx_qword_ptr_[rsp+8], mov_rsi_qword_ptr_[rbx+8], jmp_0xffffffffffffff22, inc@@ _r15d, jmp_0xfffffffffffffef8, call_0xfffffffffffeeb@@ 3@@ 8
endbr64, push_r15, mov_r15_rdx, push_r14, push_r13, mov_r13d_r8d, push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rcx, sub_rsp_0x18, mov_qword_ptr_[rsp+8]_rdi, mov_rdi_qword_ptr_[r@@ si+0x18], mov_rsi_rdx, call_0xa@@ 5@@ 96, test_rax_rax, je_0x8e, mov_r15_qword_ptr_[r@@ ax+0x20], mov_r12_rax, test_r15_r15, je_0x1@@ 43, mov_r14_r15, xor_ebp_ebp, jmp_0x26, mov_rdi_qword_ptr_[r14+8], mov_rsi_rbx, call_0xfffffffffffeea@@ e9, test_eax_eax, je_0x1b, mov_rax_qword_ptr_[r14+0x10], mov_rbp_r14, test_rax_rax, je_0x1@@ 1b, mov_r14_rax, cmp_dword_ptr_[r@@ 14@@ ]_3, jne_0xffffffffffffffd9, mov_eax_1, test_r13d_r13d, je_0x17, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, test_rbp_rbp, je_0xc1, mov_rdx_qword_ptr_[r@@ 14+0x10], mov_qword_ptr_[rbp+0x1@@ 0]_rdx, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, test_r13d_r13d, jne_0x16, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_1, pop_r15, ret, mov_rdi_qword_ptr_[rsp+8], mov_rsi_r15, call_0xac@@ 6f, mov_r12_rax, test_rax_rax, je_0x69, mov_rax_qword_ptr_[rbp+0x18], mov_rdi_qword_ptr_[rsp+8], mov_qword_ptr_[r12+0x10]_rax, call_0xa@@ d@@ 14, mov_qword_ptr_[r12+0x@@ 20]_rax, test_rax_rax, je_0x4c, mov_dword_ptr_[rax@@ ]_3, mov_qword_ptr_[r12+@@ 8]_rbp, mov_qword_ptr_[rbp+0x1@@ 8]_r12, mov_rdi_qword_ptr_[rsp+8], call_0xac@@ f1, test_rax_rax, je_0x2e, mov_rdx_qword_ptr_[r@@ 12+0x20], mov_dword_ptr_[rax]_2, mov_qword_ptr_[rax+8]_rbx, mov_qword_ptr_[rax+0x10]_rdx, mov_qword_ptr_[r12+0x@@ 20]_rax, add_rsp_0x18, mov_eax_1, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, xor_eax_eax, jmp_0xffffffffffffff2c, cmp_r15@@ _r14, je_0x13, mov_dword_ptr_[r15@@ ]_3, mov_eax_1, jmp_0xffffffffffffff16, mov_rdx_qword_ptr_[r15+0x10], test_rdx_rdx, je_0xffffffffffffffe8, mov_qword_ptr_[r12+0x@@ 20]_rdx, jmp_0xffffffffffffff03, test_r13d_r13d, jne_0xffffffffffffff92, jmp_0xffffffffffffff3@@ b
endbr64, mov_qword_ptr_[rdi+@@ 8]_rsi, mov_qword_ptr_[rdi+0x10]_0, test_rsi_rsi, je_0x14, mov_rax_qword_ptr_[r@@ si+0x18], test_rdx_rdx, jne_0x4c, test_rax_rax, jne_0x27, mov_qword_ptr_[rsi+0x1@@ 8]_rdi, test_rdx_rdx, je_0x16, mov_rax_qword_ptr_[rdx+0x10], mov_qword_ptr_[rdi+0x1@@ 0]_rax, mov_qword_ptr_[rdx+0x1@@ 0]_rdi, ret, ret, mov_rdx_rax, mov_rax_qword_ptr_[rax+0x10], test_rax_rax, je_0xffffffffffffffda, mov_rdx_rax, mov_rax_qword_ptr_[rax+0x10], test_rax_rax, jne_0xffffffffffffffea, jmp_0xffffffffffffffcc, test_rax_rax, jne_0xffffffffffffffbc, jmp_0xffffffffffffffb@@ 6
endbr64, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, call_0xa0@@ b2, mov_r12_rax, test_rax_rax, je_0x2f, mov_rdi_rbp, call_0xfffffffffffee@@ 582, lea_rdx_[r@@ bp+rax], mov_rsi_rbp, mov_rdi_r12, call_0xa@@ 1f@@ 2, test_eax_eax, je_0x4b, add_rsp_8, pop_rbp, mov_rax_r12, pop_r12, ret, lea_r9_[rip+0x@@ 24@@ 97@@ 1], xor_eax_eax, lea_r8_[rip+0x@@ 16@@ d@@ 4d], xor_ecx_ecx, mov_edx_0x@@ a7, lea_rsi_[rip+0x16@@ d@@ 4b], mov_edi_7, call_qword_ptr_[r9], add_rsp_8, pop_rbp, mov_rax_r12, pop_r12, ret, mov_rdi_r12, call_0xa@@ 12@@ d, lea_r9_[rip+0x@@ 24@@ 93@@ 1], lea_r8_[rip+0x@@ 16@@ d0@@ f], xor_ecx_ecx, mov_edx_0x@@ ab, lea_rsi_[rip+0x16@@ d0@@ d], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], xor_r12d_r12d, jmp_0xffffffffffffff8@@ 6
endbr64, push_r13, mov_r13_rcx, push_r12, push_rbp, mov_rbp_rdx, call_0xaa@@ 81, mov_r12_rax, test_rax_rax, je_0x20, mov_qword_ptr_[rax+0x20]_0, mov_qword_ptr_[rax+0x18]_0, mov_rdx_r13, mov_rsi_rbp, mov_rdi_rax, call_0xfffffffffffffe@@ 9b, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret
endbr64, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rdx, mov_rdx_rcx, mov_rcx_r8, call_0xffffffffffffff@@ 9c, test_rax_rax, je_0x2c, mov_rdi_rbp, mov_r12_rax, call_0xaa@@ dc, mov_qword_ptr_[r12+0x@@ 20]_rax, test_rax_rax, je_0x17, mov_dword_ptr_[rax]_2, mov_qword_ptr_[rax+8]_rbx, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret, pop_rbx, xor_r12d_r12d, pop_rbp, mov_rax_r12, pop_r12, ret
endbr64, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rdx, mov_rdx_rcx, mov_rcx_r8, call_0xffffffffffffff@@ 3c, test_rax_rax, je_0x2c, mov_rdi_rbp, mov_r12_rax, call_0xaa@@ 7c, mov_qword_ptr_[r12+0x@@ 20]_rax, test_rax_rax, je_0x17, mov_dword_ptr_[rax]_0, mov_qword_ptr_[rax+8]_rbx, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret, pop_rbx, xor_r12d_r12d, pop_rbp, mov_rax_r12, pop_r12, ret
endbr64, push_r15, mov_r15_rcx, push_r14, push_r13, xor_r13d_r13d, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x18, mov_qword_ptr_[rsp]_rsi, mov_eax_dword_ptr_[r15], cmp_eax_0x2f, ja_0x@@ ca, mov_edx_eax, add_eax_8, mov_dword_ptr_[r15]_eax, add_rdx_qword_ptr_[r@@ 15+0x10], mov_r14_qword_ptr_[r@@ dx], test_r14_r14, je_0x99, mov_esi_0x3d, mov_rdi_r14, call_0xfffffffffffee@@ 60c, mov_rbx_rax, test_rax_rax, je_0x2@@ 01, mov_rdi_qword_ptr_[rbp+0x10], mov_rsi_r14, call_0xc@@ f@@ 34, mov_r11_rax, test_rax_rax, je_0x2@@ 09, mov_rax_rbx, sub_rax_r14, mov_byte_ptr_[r@@ 11@@ +rax]_0, lea_r9_[r@@ bx+2], mov_ecx_4, mov_rsi_r9, lea_rdi_[rip+0x12@@ d@@ 2a], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0xec, movzx_eax_byte_ptr_[r@@ bx+2], cmp_eax_0x2@@ 5, je_0x5f, lea_r8_[rip+0x@@ 16@@ b7@@ 6], mov_ecx_0xffffffff, mov_edx_0x1@@ 15, lea_r10_[rip+0x@@ 24@@ 7@@ 25], lea_rsi_[rip+0x16@@ b0@@ f], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], xor_r13d_r13d, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, mov_rax_r13, pop_r13, pop_r14, pop_r15, ret, mov_rdx_qword_ptr_[r15+8], lea_rax_[rdx+8], mov_qword_ptr_[r15+8]_rax, jmp_0xffffffffffffff3c, cmp_byte_ptr_[r@@ 9+@@ 1]@@ _0x73, je_0xd3, cmp_eax_0x2@@ 5, jne_0xffffffffffffff@@ 95, cmp_byte_ptr_[r@@ 9+@@ 1]@@ _0x74, jne_0xffffffffffffff@@ 8e, cmp_byte_ptr_[r@@ 9+@@ 2]_0, jne_0xffffffffffffff@@ 87, mov_eax_dword_ptr_[r15], cmp_eax_0x2f, ja_0x@@ 9c, mov_edx_eax, add_eax_8, mov_dword_ptr_[r15]_eax, add_rdx_qword_ptr_[r@@ 15+0x10], mov_rax_qword_ptr_[rdx], mov_rdi_rbp, mov_rsi_qword_ptr_[rax], mov_edx_1, mov_qword_ptr_[rsp+8]_r11, call_0xa@@ 8@@ 17, mov_rbx_rax, test_rax_rax, je_0xffffffffffffff@@ 78, mov_r11_qword_ptr_[rsp+8], mov_rsi_qword_ptr_[rsp], mov_qword_ptr_[rax]@@ _r11, mov_rdx_r12, mov_rdi_rax, call_0xfffffffffffffc@@ 44, mov_r12_rbx, test_r13_r13, cmove@@ _r13@@ _r12, jmp_0xfffffffffffffe@@ 9d, mov_eax_dword_ptr_[r15], cmp_eax_0x2f, ja_0x@@ 9a, mov_edx_eax, add_eax_8, mov_dword_ptr_[r15]_eax, add_rdx_qword_ptr_[r@@ 15+0x10], mov_rcx_qword_ptr_[rsp], mov_rdx_qword_ptr_[rdx], mov_r8_r12, mov_rsi_r11, mov_rdi_rbp, call_0xfffffffffffffd@@ e8, mov_r12_rax, test_rax_rax, jne_0xffffffffffffffc1, jmp_0xffffffffffffff17, mov_rdx_qword_ptr_[r15+8], lea_rax_[rdx+8], mov_qword_ptr_[r15+8]_rax, jmp_0xffffffffffffff6a, cmp_byte_ptr_[r@@ 9+@@ 2]_0, jne_0xffffffffffffff@@ 2e, mov_eax_dword_ptr_[r15], cmp_eax_0x2f, ja_0x4@@ f, mov_edx_eax, add_eax_8, mov_dword_ptr_[r15]_eax, add_rdx_qword_ptr_[r@@ 15+0x10], mov_rcx_qword_ptr_[rsp], mov_rdx_qword_ptr_[rdx], mov_r8_r12, mov_rsi_r11, mov_rdi_rbp, call_0xfffffffffffffd@@ 29, mov_r12_rax, test_rax_rax, jne_0xffffffffffffff@@ 62, jmp_0xfffffffffffffe@@ b4, mov_rdx_qword_ptr_[r15+8], lea_rax_[rdx+8], mov_qword_ptr_[r15+8]_rax, jmp_0xffffffffffffff6c, mov_rdx_qword_ptr_[r15+8], lea_rax_[rdx+8], mov_qword_ptr_[r15+8]_rax, jmp_0xffffffffffffffb3, xor_r9d_r9d, lea_r8_[rip+0x@@ 16@@ 9c@@ 6], mov_ecx_0xffffffff, mov_edx_0x@@ f9, jmp_0xfffffffffffffe@@ 50, lea_r9_[rip+0x@@ 24@@ 56@@ 9], lea_r8_[rip+0x@@ 16@@ 96@@ 1], mov_ecx_0xffffffff, mov_edx_0x@@ fe, lea_rsi_[rip+0x16@@ 94@@ 2], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], xor_r13d_r13d, jmp_0xfffffffffffffe@@ 3@@ 3
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rcx_rsp, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffffc@@ b2, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xfffffffffffee@@ 3f@@ 5
endbr64, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, movq@@ _xmm1@@ _qword_ptr_[rip+0x@@ 16@@ 9@@ 48], mov_eax_dword_ptr_[rbx], cmp_eax_dword_ptr_[r@@ bp], ja_0x@@ c3, jb_0x@@ cd, cmp_eax_2, je_0x94, ja_0x5@@ e, test_eax_eax, je_0x6a, movss@@ _xmm2@@ _dword_ptr_[r@@ bp+8], movss@@ _xmm3@@ _dword_ptr_[r@@ bx+8], pxor_xmm0_xmm0, pxor@@ _xmm4@@ _xmm4, cvtss2@@ sd@@ _xmm0_xmm3, cvtss2@@ sd@@ _xmm4@@ _xmm2, subsd@@ _xmm0_xmm4, movsd@@ _xmm5@@ _qword_ptr_[rip+0x@@ 16@@ 9@@ 12], and@@ pd@@ _xmm0_xmm1, comisd@@ _xmm5@@ _xmm0, jbe_0x@@ 91, mov_rbx_qword_ptr_[rbx+0x10], test_rbx_rbx, je_0xd, mov_rbp_qword_ptr_[r@@ bp+0x10], test_rbp_rbp, jne_0xffffffffffffff9c, xor_eax_eax, add_rsp_8, pop_rbx, pop_rbp, ret, cmp_eax_3, je_0xffffffffffffffed, jmp_0xffffffffffffffd7, mov_rax_qword_ptr_[rbp+8], cmp_qword_ptr_[rbx+@@ 8]_rax, je_0xffffffffffffff@@ c4, setg_al, movzx_eax_al, lea_eax_[rax@@ +rax-1], jmp_0xffffffffffffffce, mov_rsi_qword_ptr_[rbp+8], mov_rdi_qword_ptr_[rbx+8], call_0xfffffffffffee@@ 33@@ 8, test_eax_eax, movq@@ _xmm1@@ _qword_ptr_[rip+0x@@ 16@@ 88@@ 9], je_0xffffffffffffff@@ 95, jmp_0xffffffffffffffa9, mov_eax_1, jmp_0xffffffffffffff9d, mov_eax_0xffffffff, jmp_0xffffffffffffff8d, xor_eax_eax, comi@@ ss@@ _xmm3@@ _xmm2, seta_al, lea_eax_[rax@@ +rax-1], jmp_0xffffffffffffff7@@ f
endbr64, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rdi_qword_ptr_[rdi+0x20], mov_rsi_qword_ptr_[r@@ si+0x20], test_rdi_rdi, je_0x95, test_rsi_rsi, je_0x6c, call_0xfffffffffffffec@@ a, cmp_qword_ptr_[rbx+0x@@ 20]_0, mov_rdi_qword_ptr_[rbx+0x18], je_0xdd, cmp_qword_ptr_[rbp+0x@@ 20]_0, je_0x55, test_rdi_rdi, je_0x10, mov_rsi_qword_ptr_[rbp+0x18], test_rsi_rsi, je_7, call_0xffffffffffffff@@ b1, test_eax_eax, jne_0x2b, mov_rdi_qword_ptr_[rbx+0x10], mov_rsi_qword_ptr_[rbp+0x10], test_rdi_rdi, je_0x7d, test_rsi_rsi, je_0x68, call_0xffffffffffffff@@ 96, cmp_qword_ptr_[rbx+0x10]_0, je_0x97, cmp_qword_ptr_[rbp+0x@@ 10]_0, je_0x51, add_rsp_8, pop_rbx, pop_rbp, ret, mov_rdi_qword_ptr_[rbx+0x18], mov_eax_1, test_rdi_rdi, je_0x34, mov_rsi_qword_ptr_[rbp+0x18], test_rsi_rsi, jne_0xffffffffffffffaa, add_rsp_8, pop_rbx, pop_rbp, ret, mov_rdi_qword_ptr_[rbx+0x18], test_rsi_rsi, je_0x39, mov_eax_0xffffffff, test_rdi_rdi, jne_0xffffffffffffffdd, mov_eax_0xffffffff, jmp_0xffffffffffffffb9, add_rsp_8, pop_rbx, mov_eax_1, pop_rbp, ret, xor_eax_eax, test_rsi_rsi, jne_0xffffffffffffffde, add_rsp_8, pop_rbx, pop_rbp, ret, test_rdi_rdi, je_0xffffffffffffff@@ 65, mov_rsi_qword_ptr_[rbp+0x18], test_rsi_rsi, jne_0xffffffffffffff@@ 4f, jmp_0xffffffffffffff52, mov_rsi_qword_ptr_[rbp+0x10], jmp_0xffffffffffffffd3, cmp_qword_ptr_[rbp+0x@@ 20]_0, jne_0xffffffffffffffa3, jmp_0xffffffffffffff2@@ 9
endbr64, push_rbx, mov_rbx_rdi, mov_eax_dword_ptr_[rdi], cmp_eax_esi, cmovge@@ _esi@@ _eax, add_esi@@ _eax, mov_dword_ptr_[rdi]@@ _esi, mov_rdi_qword_ptr_[rdi+8], movsxd_rsi_esi, call_0xfffffffffffee@@ 3c@@ 6, test_rax_rax, je_0xd, mov_qword_ptr_[rbx+8]_rax, mov_eax_1, pop_rbx, ret, mov_rdi_qword_ptr_[rbx+8], call_0xfffffffffffedd@@ ed, mov_qword_ptr_[rbx]_0, mov_qword_ptr_[rbx+8]_0, xor_eax_eax, pop_rbx, ret
endbr64, push_r12, mov_r12_rsi, push_rbp, push_rbx, mov_rbx_rdi, mov_rdi_rsi, call_0xfffffffffffedd@@ cf, mov_rdi_qword_ptr_[rbx+8], mov_rbp_rax, test_rdi_rdi, je_0x30, movsxd_rax_dword_ptr_[r@@ bx+4], mov_edx_dword_ptr_[rbx], sub_edx_eax, cmp_edx@@ _ebp, jle_0x@@ 24, add_rdi_rax, mov_rsi_r12, call_0xfffffffffffee@@ 16@@ c, add_dword_ptr_[r@@ bx+@@ 4]_ebp, mov_eax_1, pop_rbx, pop_rbp, pop_r12, ret, lea_esi_[r@@ bp+1], mov_rdi_rbx, call_0xffffffffffffff@@ 5a, test_eax_eax, je_0xffffffffffffffe4, mov_rdi_qword_ptr_[rbx+8], movsxd_rax_dword_ptr_[r@@ bx+4], jmp_0xffffffffffffffc@@ 7
endbr64, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_r13_rsp, jmp_0x@@ d0, mov_edx_eax, add_eax_8, mov_dword_ptr_[rbx]_eax, add_rdx_qword_ptr_[r@@ bx+0x10], mov_r12_qword_ptr_[r@@ dx], test_r12_r12, je_0xdb, mov_esi_0x3d, mov_rdi_r12, mov_qword_ptr_[rsp]_0, call_0xfffffffffffed@@ fa@@ 9, test_rax_rax, je_0x2@@ 09, sub_rax_r12, lea_rsi_[rip+0x12@@ 8f@@ 4], mov_rdi_r12, mov_r14_rax, call_0xfffffffffffed@@ e@@ 6b, test_rax_rax, jne_0x2@@ 23, lea_rsi_[rip+0x12@@ 6d@@ b], mov_rdi_r12, call_0xfffffffffffed@@ e@@ 53, test_rax_rax, je_0x93, mov_eax_dword_ptr_[rbx], cmp_eax_0x2f, ja_0x1@@ 10, mov_edx_eax, add_eax_8, mov_dword_ptr_[rbx]_eax, add_rdx_qword_ptr_[r@@ bx+0x10], mov_r8_qword_ptr_[r@@ dx], mov_rcx_r12, mov_edx_r14d, lea_rsi_[rip+0x16@@ 4e@@ c], xor_eax_eax, mov_rdi_r13, call_0xb@@ 3f@@ a, test_eax_eax, js_0x@@ b3, mov_rsi_qword_ptr_[rsp], test_rsi_rsi, je_0xaa, mov_rdi_rbp, call_0xfffffffffffffea@@ d, test_eax_eax, je_0x96, mov_rdi_qword_ptr_[rsp], call_0xfffffffffffedc@@ 6c, mov_eax_dword_ptr_[rbx], cmp_eax_0x2f, jbe_0xffffffffffffff@@ 32, mov_rdx_qword_ptr_[rbx+8], lea_rax_[rdx+8], mov_qword_ptr_[rbx+8]_rax, mov_r12_qword_ptr_[r@@ dx], test_r12_r12, jne_0xffffffffffffff@@ 31, mov_eax_1, jmp_0x6@@ d, lea_rsi_[rip+0x19@@ 00@@ 7], mov_rdi_r12, call_0xfffffffffffedd@@ ae, test_rax_rax, je_0x8e, mov_eax_dword_ptr_[rbx], cmp_eax_0x2f, ja_0x@@ cb, mov_edx_eax, add_eax_8, mov_dword_ptr_[rbx]_eax, add_rdx_qword_ptr_[r@@ bx+0x10], mov_r8_qword_ptr_[r@@ dx], xor_eax_eax, mov_rcx_r12, mov_edx_r14d, lea_rsi_[rip+0x16@@ 450], mov_rdi_r13, call_0xb@@ 35@@ 5, test_eax_eax, jns_0xffffffffffffff@@ 61, mov_rsi_qword_ptr_[rsp], mov_rdi_rsi, call_0xfffffffffffedb@@ d9, xor_eax_eax, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x13@@ 6, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rdx_qword_ptr_[rbx+8], lea_rax_[rdx+8], mov_qword_ptr_[rbx+8]_rax, jmp_0xfffffffffffffe@@ f5, lea_rsi_[rip+0x16@@ 3f@@ 5], mov_rdi_r12, call_0xfffffffffffedd@@ 0e, test_rax_rax, je_0x66, mov_eax_dword_ptr_[rbx], cmp_eax_0x2f, ja_0x4@@ 7, mov_edx_eax, add_eax_8, mov_dword_ptr_[rbx]_eax, add_rdx_qword_ptr_[r@@ bx+0x10], mov_r8_qword_ptr_[r@@ dx], test_r8_r8, je_0xffffffffffffff@@ 05, mov_rcx_r12, mov_edx_r14d, lea_rsi_[rip+0x16@@ 3c0], jmp_0xfffffffffffffeba, mov_rdx_qword_ptr_[rbx+8], lea_rax_[rdx+8], mov_qword_ptr_[rbx+8]_rax, jmp_0xffffffffffffff3a, mov_rdx_qword_ptr_[rbx+8], lea_rax_[rdx+8], mov_qword_ptr_[rbx+8]_rax, jmp_0xffffffffffffffba, xor_eax_eax, mov_rdx_r12, lea_rsi_[rip+0x18@@ e@@ ea], mov_rdi_r13, call_0xb@@ 27@@ 1, test_eax_eax, jns_0xfffffffffffffe@@ 7d, jmp_0xffffffffffffff24, lea_r10_[rip+0x@@ 2@@ 3f@@ 21], lea_rsi_[rip+0x16@@ 30@@ b], mov_r9_r12, lea_r8_[rip+0x@@ 16@@ 3@@ 78], mov_ecx_0xffffffff, mov_edx_0x2@@ 3, mov_edi_3, call_qword_ptr_[r10], mov_rsi_qword_ptr_[rsp], jmp_0xfffffffffffffeee, lea_r9_[rip+0x2@@ 3e@@ e9], lea_rsi_[rip+0x16@@ 2d@@ 3], lea_r8_[rip+0x@@ 16@@ 37@@ 3], mov_ecx_0xffffffff, mov_edx_0x2@@ 9, mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], mov_rsi_qword_ptr_[rsp], jmp_0xfffffffffffffeb7, call_0xfffffffffffed@@ e2@@ e
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x28]_rsi, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rsi_rsp, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]_8, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffffc@@ 88, mov_rdx_qword_ptr_[rsp+0x18], xor_rdx_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xfffffffffffedd@@ 6@@ b
endbr64, push_rbp, mov_rbp_rsi, mov_rsi_rdi, mov_rdi_rbp, call_0xfffffffffffffb@@ e2, test_eax_eax, jne_0xb, pop_rbp, ret, mov_rdi_rbp, lea_rsi_[rip+0x11@@ bf@@ 4], call_0xfffffffffffffb@@ c6, test_eax_eax, setne_al, movzx_eax_al, pop_rbp, ret
endbr64, mov_qword_ptr_[rdi]_0, mov_qword_ptr_[rdi+8]_0, ret
endbr64, push_rbp, mov_rbp_rdi, mov_rdi_qword_ptr_[rdi+8], call_0xfffffffffffed@@ 95@@ 4, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffffffc@@ b
sub_rsp_8, mov_eax_dword_ptr_[rsi+0x@@ 4c], lea_rcx_[rip+0x@@ 11@@ b@@ 91], test_eax_eax, lea_rax_[rip+0x16@@ 25@@ 1], cmove_rax@@ _rcx, mov_r8d_dword_ptr_[r@@ si+0x@@ 48], mov_rdx_rax, test_r8d_r8d, lea_rax_[rip+0x16@@ 24@@ a], cmovne_rcx_rax, mov_eax_dword_ptr_[r@@ si+0x10], cmp_eax_2, je_0xf2, ja_0x4@@ c, test_eax_eax, je_0x98, sub_rsp_8, push_rcx, lea_r8_[rip+0x@@ 16@@ 250], mov_ecx_4, push_rdx, mov_edx_0x5@@ d1, push_rdi, mov_r9_qword_ptr_[r@@ si+0x18], lea_r10_[rip+0x@@ 2@@ 3d@@ 07], lea_rsi_[rip+0x16@@ 2@@ 15], mov_edi_7, xor_eax_eax, call_qword_ptr_[r10], add_rsp_0x20, add_rsp_8, ret, cmp_eax_3, jne_0xfffffffffffffff3, sub_rsp_8, push_rcx, lea_r10_[rip+0x@@ 2@@ 3c@@ d7], lea_r8_[rip+0x@@ 16@@ 8@@ 30], push_rdx, mov_ecx_4, mov_edx_0x5@@ d7, mov_eax_dword_ptr_[rsi+0x@@ 38], push_rax, mov_eax_dword_ptr_[rsi+0x@@ 34], push_rax, xor_eax_eax, push_rdi, mov_edi_7, mov_r9_qword_ptr_[r@@ si+0x18], lea_rsi_[rip+0x16@@ 1b@@ f], call_qword_ptr_[r10], add_rsp_0x30, add_rsp_8, ret, push_rcx, lea_r10_[rip+0x@@ 2@@ 3c@@ 90], lea_r8_[rip+0x@@ 16@@ 7c@@ 1], push_rdx, mov_ecx_4, mov_edx_0x5@@ cc, mov_eax_dword_ptr_[rsi+0x@@ 30], push_rax, mov_eax_dword_ptr_[rsi+0x@@ 2c], push_rax, mov_eax_dword_ptr_[r@@ si+0x28], push_rax, mov_eax_dword_ptr_[rsi+0x@@ 24], push_rax, mov_eax_dword_ptr_[r@@ si+0x20], push_rax, xor_eax_eax, push_rdi, mov_edi_7, mov_r9_qword_ptr_[r@@ si+0x18], lea_rsi_[rip+0x16@@ 16@@ c], call_qword_ptr_[r10], add_rsp_0x40, add_rsp_8, ret, push_rcx, lea_r8_[rip+0x@@ 16@@ 18@@ 6], mov_ecx_4, push_rdx, mov_edx_0x5@@ d4, push_qword_ptr_[r@@ si+0x18], push_rdi, mov_r9_qword_ptr_[r@@ si+0x40], jmp_0xffffffffffffff1@@ f
jmp_0x@@ e
inc_rdi, mov_byte_ptr_[rsi@@ -1]_al, movzx_eax_byte_ptr_[rdi], test_al_al, je_0x55, inc@@ _rsi, cmp_al_0x5c, jne_0xffffffffffffffee, movzx_edx_byte_ptr_[r@@ di+1], mov_ecx_edx, and_ecx@@ _0xfffffff8, cmp_cl@@ _0x30, jne_0xffffffffffffffe0, movzx_ecx_byte_ptr_[r@@ di+2], mov_r8d_ecx, and_r8d@@ _0xfffffff8, cmp_r8b@@ _0x30, jne_0xffffffffffffffcf, movzx_r8d_byte_ptr_[r@@ di+@@ 3], mov_r9d_r8d, and_r9d@@ _0xfffffff8, cmp_r9b@@ _0x30, jne_0xffffffffffffffbd, and_ecx_7, lea_edx_[r@@ cx@@ +rdx*8], and_r8d@@ _7, lea_eax_[r@@ 8@@ +rdx*8], add_rdi_4, jmp_0xffffffffffffffac, mov_byte_ptr_[rsi@@ ]_0, ret
push_r13, mov_r13_r9, push_r12, push_rbp, mov_rbp_r8, sub_rsp_0x10, test_dil@@ _0x80, je_0xd5, mov_rax_qword_ptr_[rip+0x219@@ 00], mov_r12_qword_ptr_[rax], mov_eax_edi, and_eax_0xf, cmp_eax_4, jle_0x@@ 45, mov_eax_dword_ptr_[rip+0x2@@ 24@@ 1d@@ 5], test_eax_eax, jne_0x3b, mov_edx_dword_ptr_[rip+0x2@@ 1b@@ 23], test_edx_edx, js_0x7@@ a, test_edx_edx, je_0x20, mov_ecx_0x10, lea_rdi_[rip+0x16@@ 10@@ 4], mov_rsi_rbp, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, j@@ e@@ _0xffffffff@@ fff@@ e@@ dd@@ c3, add_rsp_0x10, pop_rbp, pop_r12, pop_r13, ret, and_edi@@ _0xc, je_0x8d, mov_edi_dword_ptr_[rip+0x2@@ 1a@@ e5], test_edi_edi, js_0x@@ 97, test_edi_edi, jne_0x@@ cf, mov_rdx_rbp, mov_rcx_r13, mov_esi_1, mov_rdi_r12, call_0xfffffffffffed@@ 75@@ 3, mov_rsi_r12, mov_edi_0xa, call_0xfffffffffffed@@ 6c@@ 6, mov_edx_dword_ptr_[rip+0x2@@ 1a@@ ab], test_edx_edx, jns_0xffffffffffffff@@ 8a, lea_rdi_[rip+0x16@@ 0@@ 79], call_0xfffffffffffed@@ 9e0, test_rax_rax, je_0xb8, movzx_edx_byte_ptr_[rax], sub_edx@@ _0x30, jne_6, movzx_edx_byte_ptr_[rax+1], mov_dword_ptr_[rip+0x2@@ 1a@@ 8@@ 0]_edx, jmp_0xffffffffffffff61, mov_rax_qword_ptr_[rip+0x218@@ 39], mov_r12_qword_ptr_[rax], jmp_0xffffffffffffff31, mov_rax_qword_ptr_[rip+0x218@@ 19], mov_edi_dword_ptr_[rip+0x2@@ 1a@@ 57], mov_r12_qword_ptr_[rax], test_edi_edi, jns_0xffffffffffffff@@ 75, lea_rdi_[rip+0x15@@ ff@@ 4], mov_dword_ptr_[rsp+0xc]_edx, mov_qword_ptr_[rsp]_rsi, call_0xfffffffffffed@@ 97@@ 9, test_rax_rax, mov_rsi_qword_ptr_[rsp], mov_edx_dword_ptr_[rsp+0xc], je_0x59, movzx_edi_byte_ptr_[r@@ ax], sub_edi@@ _0x30, jne_6, movzx_edi_byte_ptr_[r@@ ax+1], mov_dword_ptr_[rip+0x2@@ 1a@@ 19@@ ]_edi, test_edi_edi, je_0xffffffffffffff@@ 42, mov_r8d_edx, mov_rcx_rsi, lea_rdx_[rip+0x15@@ fc@@ 9], mov_esi_1, mov_rdi_r12, xor_eax_eax, call_0xfffffffffffed@@ 38@@ 1, jmp_0xffffffffffffff1b, mov_dword_ptr_[rip+0x2@@ 19d@@ 6]_0, jmp_0xfffffffffffffed9, mov_dword_ptr_[rip+0x2@@ 19@@ ca@@ ]_0, jmp_0xfffffffffffffef@@ 5
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_r8_rcx, lea_rax_[rsp+0x20], xor_ecx_ecx, mov_r9@@ _rsp, mov_qword_ptr_[rsp+0x10]_rax, mov_dword_ptr_[rsp]@@ _0x20, mov_dword_ptr_[rsp+4]_0x30, call_0xfffffffffffffdd@@ 2, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xfffffffffffed@@ 8d@@ 5
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_r9@@ _rsp, lea_rax_[rsp+0x20], mov_qword_ptr_[rsp+0x10]_rax, mov_dword_ptr_[rsp]@@ _0x28, mov_dword_ptr_[rsp+4]_0x30, call_0xfffffffffffffd@@ 2c, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xfffffffffffed@@ 82@@ f
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1@@ e8, mov_qword_ptr_[rsp+0x2@@ 15@@ 8]_r9, mov_ebp_edi, mov_r12_rsi, mov_r13d_edx, test_al_al, je_0x42, movaps_xmmword_ptr_[rsp+0x@@ 2@@ 16@@ 0]_xmm0, movaps_xmmword_ptr_[rsp+0x@@ 21@@ 70]_xmm1, movaps_xmmword_ptr_[rsp+0x@@ 2@@ 180@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x@@ 2@@ 190@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0x@@ 2@@ 1a0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0x@@ 2@@ 1b0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0x@@ 2@@ 1c@@ 0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0x@@ 2@@ 1d@@ 0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x2@@ 12@@ 8]_rax, xor_eax_eax, lea_rbx_[rsp+0x20], lea_rax_[rsp+0x@@ 22@@ 10], mov_qword_ptr_[rsp+0x10]_rax, lea_r9_[r@@ sp+8], lea_rax_[rsp+0x@@ 2@@ 130], mov_ecx_0x2@@ 100, mov_edx_1, mov_esi_0x2@@ 100, mov_rdi_rbx, mov_dword_ptr_[rsp+8]@@ _0x28, mov_dword_ptr_[rsp+0xc]@@ _0x30, mov_qword_ptr_[rsp+0x18]_rax, call_0xfffffffffffed@@ 2d@@ a, test_eax_eax, jle_0x@@ 20, lea_r9_[rip+0x2@@ 37@@ d2], mov_r8_rbx, lea_rcx_[rip+0x@@ 18@@ 76@@ 6], mov_edx_r13d, mov_rsi_r12, mov_edi_ebp, xor_eax_eax, call_qword_ptr_[r9], mov_rax_qword_ptr_[rsp+0x@@ 21@@ 28], xor_rax_qword_ptr_fs:[0x28], jne_0x10, add_rsp_0x2@@ 1e8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, call_0xfffffffffffed@@ 70@@ 2
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1@@ e8, mov_qword_ptr_[rsp+0x2@@ 15@@ 0]_r8, mov_qword_ptr_[rsp+0x2@@ 15@@ 8]_r9, mov_ebp_edi, mov_r12_rsi, mov_r13d_edx, test_al_al, je_0x42, movaps_xmmword_ptr_[rsp+0x@@ 2@@ 16@@ 0]_xmm0, movaps_xmmword_ptr_[rsp+0x@@ 21@@ 70]_xmm1, movaps_xmmword_ptr_[rsp+0x@@ 2@@ 180@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x@@ 2@@ 190@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0x@@ 2@@ 1a0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0x@@ 2@@ 1b0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0x@@ 2@@ 1c@@ 0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0x@@ 2@@ 1d@@ 0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x2@@ 12@@ 8]_rax, xor_eax_eax, lea_rbx_[rsp+0x20], lea_rax_[rsp+0x@@ 22@@ 10], mov_qword_ptr_[rsp+0x10]_rax, mov_r8_rcx, lea_rax_[rsp+0x@@ 2@@ 130], lea_r9_[r@@ sp+8], mov_ecx_0x2@@ 100, mov_edx_1, mov_esi_0x2@@ 100, mov_rdi_rbx, mov_dword_ptr_[rsp+8]@@ _0x20, mov_dword_ptr_[rsp+0xc]@@ _0x30, mov_qword_ptr_[rsp+0x18]_rax, call_0xfffffffffffed@@ 19@@ f, test_eax_eax, jle_0x@@ 22, lea_r10_[rip+0x@@ 2@@ 36@@ 8f], mov_r9_rbx, lea_r8_[rip+0x@@ 18@@ 6@@ 2b], xor_ecx_ecx, mov_edx_r13d, mov_rsi_r12, mov_edi_ebp, xor_eax_eax, call_qword_ptr_[r10], mov_rax_qword_ptr_[rsp+0x@@ 21@@ 28], xor_rax_qword_ptr_fs:[0x28], jne_0x10, add_rsp_0x2@@ 1e8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, call_0xfffffffffffed@@ 5c@@ 5
mov_eax_edi, and_eax_0xffffffdf, sub_eax@@ _0x41, cmp_al@@ _0x19, jbe_0x@@ 2e, lea_eax_[r@@ di-0x@@ 30], cmp_al_9, jbe_0x@@ 27, sub_rsp_8, movsx_esi@@ _dil, lea_rdi_[rip+0x15@@ be@@ 4], call_0xfffffffffffed@@ 4@@ 9e, test_rax_rax, setne_al, movzx_eax_al, add_rsp_8, ret, mov_eax_1, ret
push_rbp, lea_rax_[rip+0x22@@ 3c@@ 48], mov_rbp_rdi, mov_edx_dword_ptr_[r@@ di+0x10], dec_dword_ptr_[r@@ ax+rdx*4], call_0x10@@ b@@ ff, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffff@@ ed@@ 1c@@ 6
push_r14, mov_r14d_edx, push_r13, xor_r13d_r13d, push_r12, mov_r12d_esi, lea_rsi_[rip+0x18@@ 75@@ 3], push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xfffffffffffed@@ 6f@@ 1, test_rax_rax, je_0x2f, mov_rbp_rax, mov_rdi_rax, lea_rcx_[r@@ sp+4], xor_eax_eax, mov_rdx_rsp, lea_rsi_[rip+0x15@@ e4@@ 9], call_0xfffffffffffec@@ e@@ 90, cmp_eax_2, je_0x38, mov_rdi_rbp, call_0xfffffffffffed@@ 5f@@ 3, test_eax_eax, jne_0x44, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x9e, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, pop_r14, ret, cmp_dword_ptr_[rsp@@ ]@@ _r12d, jne_0xffffffffffffffc6, xor_r13d_r13d, cmp_dword_ptr_[rsp+@@ 4]_r14d, sete@@ _r13b, jmp_0xffffffffffffffb8, lea_rax_[rip+0x@@ 23@@ 54@@ 1], mov_rbp_qword_ptr_[rax], call_0xfffffffffffed@@ 44@@ e, mov_edi_dword_ptr_[rax], call_0xfffffffffffed@@ 26@@ 7, mov_r8_rax, cmp_byte_ptr_[rbx]_0, lea_rdx_[rip+0x@@ 113@@ 54], lea_rax_[rip+0x15@@ 8c@@ b], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x15@@ ad@@ e], mov_r9_rbx, push_rcx, lea_r8_[rip+0x@@ 15@@ ac@@ 1], mov_ecx_0xffffffff, push_rax, mov_edx_0x7@@ 63, lea_rsi_[rip+0x15@@ a0@@ 5], mov_edi_3, xor_eax_eax, call_rbp, add_rsp_0x20, jmp_0xffffffffffffff59, call_0xfffffffffffed@@ 44@@ e
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0xc8, mov_dword_ptr_[rsp+4]@@ _edi, mov_qword_ptr_[rsp+8]_rdx, mov_qword_ptr_[rsp+0x10]_rcx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x10@@ b8]_rax, xor_eax_eax, cmp_byte_ptr_[rip+0x2@@ 14@@ 7b@@ ]_0, jne_0x5b, lea_r9_[rip+0x2@@ 34@@ 82], lea_r8_[rip+0x@@ 15@@ a5@@ 3], mov_ecx_0xffffffff, mov_edx_0x7@@ 73, lea_rsi_[rip+0x15@@ 97@@ f], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], xor_r12d_r12d, mov_rax_qword_ptr_[r@@ sp+0x10@@ b8], xor_rax_qword_ptr_fs:[0x28], jne_0x5@@ 9c, add_rsp_0x10@@ c8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rbx_[rsp+0x@@ b0], mov_r15d_esi, xor_eax_eax, lea_rcx_[rip+0x2@@ 14@@ 0c], lea_rdx_[rip+0x15@@ a0@@ 9], mov_esi_0x1000, mov_rdi_rbx, call_0xa@@ 4e@@ d, test_eax_eax, js_0xffffffffffffff@@ 7d, mov_rdi_rbx, call_0xfffffffffffed0@@ 1d, mov_r13_rax, test_rax_rax, je_0x3@@ cb, mov_rdi_r13, call_0xfffffffffffed@@ 6@@ 15, test_rax_rax, je_0x2@@ 9d, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x2e, lea_rbp_[r@@ ax+0x13], je_0xffffffffffffffe6, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x2@@ e@@ 2e, je_0x2@@ 36, mov_r8_rbp, lea_rcx_[rip+0x2@@ 13@@ a6], lea_rdx_[rip+0x15@@ 9b@@ 8], mov_esi_0x1000, mov_rdi_rbx, xor_eax_eax, call_0xa@@ 48@@ 5, mov_r12d_eax, cmp_eax_-1, je_0x2@@ 1a, mov_esi_dword_ptr_[rsp+4], mov_edx_r15d, mov_rdi_rbx, call_0xfffffffffffffd@@ 9a, test_eax_eax, jne_0x3c@@ e, sub_r12d@@ _4, movsxd_r12_r12d, lea_rdx_[rsp+0x20], mov_rsi_rbx, mov_edi_1, mov_byte_ptr_[rsp+r@@ 12+0x@@ b0]_0, call_0xfffffffffffed@@ 3f0, mov_r12d_eax, test_eax_eax, jne_0xffffffffffffff@@ 6e, mov_eax_dword_ptr_[rsp+0x38], and_eax_0xf000, cmp_eax_0x4000, jne_0xffffffffffffff@@ 5a, mov_rdi_rbx, call_0xfffffffffffec@@ f@@ 59, mov_r14_rax, test_rax_rax, je_0x3@@ a3, mov_rdi_r14, call_0xfffffffffffed@@ 54@@ d, test_rax_rax, je_0x2@@ 65, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x2e, lea_r9_[r@@ ax+0x13], je_0xffffffffffffffe6, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x2@@ e@@ 2e, je_0x2@@ 1e, cmp_dword_ptr_[rax+0x1@@ 3]@@ _0x6@@ 96@@ 46@@ 2, je_0xffffffffffffffd1, cmp_dword_ptr_[rax+0x1@@ 3]@@ _0x7@@ 66@@ 5@@ 64, je_0xffffffffffffffc8, cmp_dword_ptr_[rax+0x1@@ 3]@@ _0x6@@ 97@@ 66@@ 5@@ 64, je_0x2@@ 0f, movabs_rcx@@ _0x7@@ 37@@ 26@@ 56@@ 4@@ 6c@@ 6f@@ 68, cmp_qword_ptr_[rax+0x1@@ 3@@ ]_rcx, je_0xffffffffffffff@@ ab, movabs_rcx@@ _0x7@@ 46@@ 97@@ 26@@ 76@@ 57@@ 4@@ 6e@@ 69, cmp_qword_ptr_[rax+0x1@@ 3@@ ]_rcx, je_0x2@@ 83, cmp_dword_ptr_[rax+0x1@@ 3]@@ _0x7@@ 0@@ 6f@@ 6f@@ 6c, je_0x3@@ 13, cmp_dword_ptr_[rax+0x1@@ 3]@@ _0x7@@ 56@@ 57@@ 57@@ 1, je_0x2@@ 49, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x6@@ 46@@ d, je_0x3@@ 53, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x7@@ 16d, je_0x3@@ 57, cmp_dword_ptr_[rax+0x1@@ 3]@@ _0x6@@ 57@@ 76@@ f70, je_0x3@@ 5a, movabs_rcx@@ _0x6@@ c6@@ 26@@ 17@@ 66@@ f@@ 6d@@ 6@@ 57@@ 2, cmp_qword_ptr_[rax+0x1@@ 3@@ ]_rcx, je_0x3@@ 57, cmp_dword_ptr_[rax+0x1@@ 3]@@ _0x7@@ 66@@ 16@@ c@@ 73, je_0x3@@ 5b, cmp_dword_ptr_[rax+0x1@@ 3]@@ _0x7@@ 66@@ 16@@ c@@ 73, je_0x3@@ 5f, movabs_rcx@@ _0x6@@ 57@@ 47@@ 37@@ 97@@ 36@@ 27@@ 57@@ 3, cmp_qword_ptr_[rax+0x1@@ 3@@ ]_rcx, je_0x3@@ 68, cmp_dword_ptr_[rax+0x1@@ 3]@@ _0x6@@ 36@@ 17@@ 27@@ 4, je_0x3@@ 6c, cmp_dword_ptr_[rax+0x1@@ 3]@@ _0x6@@ 57@@ 66@@ 57@@ 5, je_0x3@@ aa, xor_eax_eax, mov_r8_rbp, lea_rcx_[rip+0x2@@ 11@@ fe], lea_rdx_[rip+0x15@@ 8a@@ 6], mov_esi_0x1000, mov_rdi_rbx, mov_qword_ptr_[rsp+0x18]_r9, call_0xa@@ 2d@@ a, cmp_eax_-1, mov_r9_qword_ptr_[rsp+0x18], je_0x3@@ 42, mov_esi_dword_ptr_[rsp+4], mov_edx_r15d, mov_rdi_rbx, mov_qword_ptr_[rsp+0x18]_r9, call_0xfffffffffffffb@@ e8, test_eax_eax, mov_r9_qword_ptr_[rsp+0x18], je_0xfffffffffffffea@@ c, mov_rdi_qword_ptr_[rsp+8], mov_rdx_qword_ptr_[rsp+0x10], mov_rsi_r9, call_0xa@@ b@@ 49, mov_rdi_r14, mov_r12d_eax, call_0xfffffffffffed@@ 27@@ e, test_eax_eax, jne_0x10@@ 7, test_r12d_r12d, jne_0x61, jmp_0xfffffffffffffd@@ b4, cmp_byte_ptr_[rbp+@@ 2]_0, je_0xfffffffffffffd@@ a4, jmp_0xfffffffffffffd@@ c6, lea_r10_[rip+0x@@ 23@@ 17@@ 9], xor_ecx_ecx, mov_edi_0x84, xor_eax_eax, mov_r9_rbp, lea_r8_[rip+0x@@ 15@@ 77@@ e], mov_edx_0x7@@ 84, lea_rsi_[rip+0x15@@ 66@@ f], call_qword_ptr_[r10], mov_rdi_r13, call_0xfffffffffffed@@ 38@@ 4, test_rax_rax, jne_0xfffffffffffffd@@ 75, xor_r12d_r12d, mov_rdi_r13, call_0xfffffffffffed@@ 20@@ a, test_eax_eax, je_0xfffffffffffffc@@ d6, lea_rax_[rip+0x@@ 23@@ 12@@ 6], mov_rbp_qword_ptr_[rax], call_0xfffffffffffed0@@ 33, mov_edi_dword_ptr_[rax], call_0xfffffffffffec@@ e@@ 4c, push_rax, lea_rax_[rip+0x15@@ 7@@ c0], mov_edx_0x7@@ c2, push_rax, mov_r9_rbx, xor_eax_eax, lea_r8_[rip+0x@@ 15@@ 7@@ 32], xor_ecx_ecx, lea_rsi_[rip+0x15@@ 60@@ 9], mov_edi_7, call_rbp, pop_rax, pop_rdx, jmp_0xfffffffffffffc@@ 8e, cmp_byte_ptr_[r@@ 9+@@ 2]_0, je_0xfffffffffffffd@@ bb, jmp_0xfffffffffffffdd@@ d, cmp_word_ptr_[r@@ 9+@@ 4]@@ _0x6@@ 56@@ 3, jne_0xfffffffffffffd@@ f0, cmp_byte_ptr_[r@@ 9+@@ 6]_0, je_0xfffffffffffffd@@ 9e, jmp_0xfffffffffffffdd@@ f, mov_rdi_r14, call_0xfffffffffffed@@ 17@@ d, test_eax_eax, je_0xfffffffffffffc@@ be, lea_rax_[rip+0x2@@ 30@@ 99], mov_r14_qword_ptr_[rax], call_0xfffffffffffec@@ fa@@ 6, mov_edi_dword_ptr_[rax], call_0xfffffffffffecd@@ bf, push_rax, lea_rax_[rip+0x15@@ 7@@ 33], xor_ecx_ecx, push_rax, lea_rsi_[rip+0x15@@ 5@@ 8d], mov_r9_rbp, lea_r8_[rip+0x@@ 15@@ 6a@@ 3], mov_edx_0x7@@ bd, mov_edi_7, xor_eax_eax, call_r14, pop_rcx, pop_rsi, jmp_0xfffffffffffffe@@ bc, cmp_word_ptr_[r@@ 9+@@ 4]@@ _0x7@@ 56@@ 5, jne_0xfffffffffffffd@@ b6, cmp_byte_ptr_[r@@ 9+@@ 6]_0, je_0xfffffffffffffd@@ 26, jmp_0xfffffffffffffd@@ a5, cmp_word_ptr_[r@@ 9+@@ 8]@@ _0x7@@ 9, jne_0xfffffffffffffd@@ 7d, jmp_0xfffffffffffffd@@ 0c, lea_rax_[rip+0x2@@ 30@@ 20], mov_rbp_qword_ptr_[rax], call_0xfffffffffffec@@ f@@ 2d, mov_edi_dword_ptr_[rax], call_0xfffffffffffecd@@ 46, mov_r8_rax, cmp_byte_ptr_[rsp+0x@@ b0]_0, lea_rdx_[rip+0x10@@ e@@ 2e], lea_rax_[rip+0x15@@ 3a@@ 5], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x15@@ 5e@@ 5], mov_r9_rbx, push_rcx, lea_r8_[rip+0x@@ 15@@ 59@@ b], mov_ecx_0xffffffff, push_rax, mov_edx_0x7@@ 78, lea_rsi_[rip+0x15@@ 4d@@ f], mov_edi_3, xor_eax_eax, call_rbp, xor_r12d_r12d, add_rsp_0x20, jmp_0xfffffffffffffb@@ 5d, mov_rdx_qword_ptr_[rsp+0x10], mov_rdi_qword_ptr_[rsp+8], mov_rsi_rbp, call_0xa@@ 938, mov_r12d_eax, jmp_0xfffffffffffffe@@ 63, cmp_byte_ptr_[r@@ 9+@@ 4]_0, je_0xfffffffffffffc@@ 76, jmp_0xfffffffffffffc@@ e8, lea_rax_[rip+0x22@@ f@@ 84], mov_rbp_qword_ptr_[rax], call_0xfffffffffffec@@ e@@ 91, mov_edi_dword_ptr_[rax], call_0xfffffffffffecc@@ aa, push_rax, lea_rax_[rip+0x15@@ 56@@ b], mov_r9_rbx, push_rax, lea_r8_[rip+0x@@ 15@@ 59@@ 7], xor_ecx_ecx, mov_edx_0x7@@ 95, lea_rsi_[rip+0x15@@ 46@@ 9], mov_edi_7, xor_eax_eax, call_rbp, pop_r10, pop_r11, jmp_0xfffffffffffffb@@ 5f, cmp_byte_ptr_[r@@ 9+@@ 2]_0, je_0xfffffffffffffc@@ 1d, jmp_0xfffffffffffffc@@ a8, cmp_byte_ptr_[r@@ 9+@@ 2]_0, je_0xfffffffffffffc@@ 0d, jmp_0xfffffffffffffc@@ a4, cmp_word_ptr_[r@@ 9+@@ 4]@@ _0x72, jne_0xfffffffffffffc@@ a6, jmp_0xfffffffffffffb@@ f6, cmp_word_ptr_[r@@ 9+@@ 8]@@ _0x65, jne_0xfffffffffffffc@@ a9, jmp_0xfffffffffffffb@@ e5, cmp_word_ptr_[r@@ 9+@@ 4]@@ _0x65, jne_0xfffffffffffffc@@ a5, jmp_0xfffffffffffffb@@ d4, cmp_word_ptr_[r@@ 9+@@ 4]@@ _0x7@@ 36@@ 5, jne_0xfffffffffffffc@@ a0, cmp_byte_ptr_[r@@ 9+@@ 6]_0, je_0xfffffffffffff@@ bb@@ d, jmp_0xfffffffffffffc@@ 8f, cmp_word_ptr_[r@@ 9+@@ 8]_0x6@@ d, jne_0xfffffffffffffc@@ 98, jmp_0xfffffffffffffb@@ a6, cmp_word_ptr_[r@@ 9+@@ 4]@@ _0x65, jne_0xfffffffffffffc@@ 94, jmp_0xfffffffffffffb@@ 95, call_0xfffffffffffec@@ e@@ 20, push_rdi, lea_r10_[rip+0x@@ 22@@ ea@@ 3], lea_r8_[rip+0x@@ 15@@ a@@ 2c], push_r9, xor_ecx_ecx, mov_r9_rbp, mov_edx_0x7@@ b2, lea_rsi_[rip+0x15@@ 39@@ e], mov_edi_0x84, xor_eax_eax, call_qword_ptr_[r10], pop_r8, pop_r9, jmp_0xfffffffffffffb@@ 5b, cmp_word_ptr_[r@@ 9+@@ 4]@@ _0x7@@ 46@@ e, jne_0xfffffffffffffc@@ 55, cmp_byte_ptr_[r@@ 9+@@ 6]_0, je_0xfffffffffffffb@@ 44, jmp_0xfffffffffffffc@@ 4@@ 4
push_r12, mov_r12d_edi, mov_edi@@ _0x800, push_rbp, mov_edx_0xc, push_rbx, mov_ebx_esi, xor_esi_esi, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_word_ptr_[rsp+@@ 6@@ ]_di, mov_edi_ebx, mov_dword_ptr_[rsp+@@ 2]@@ _0xffff@@ 0000, call_0xfffffffffffec@@ bb8, test_eax_eax, js_0x7@@ 1, lea_rsi_[r@@ sp+@@ 2], mov_edx_1, mov_edi_ebx, mov_ebp_eax, call_0xfffffffffffec@@ e@@ 81, test_eax_eax, js_0xa@@ 2, dec@@ _ebp, push_rbp, lea_r10_[rip+0x@@ 22@@ d@@ ea], mov_edx_0x@@ 9a@@ f, push_rbx, xor_eax_eax, mov_r9d_r12d, lea_r8_[rip+0x@@ 15@@ a@@ 38], mov_ecx_4, lea_rsi_[rip+0x15@@ 2e@@ 1], mov_edi_7, call_qword_ptr_[r10], pop_rax, pop_rdx, mov_eax_1, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0xad, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, ret, lea_rax_[rip+0x22@@ d@@ 99], mov_rbp_qword_ptr_[rax], call_0xfffffffffffecc@@ a6, mov_edi_dword_ptr_[rax], call_0xfffffffffffeca@@ bf, push_rax, mov_r9d_ebx, lea_r8_[rip+0x@@ 15@@ 92@@ f], push_r12, mov_ecx_0xffffffff, mov_edx_0x@@ 998, lea_rsi_[rip+0x15@@ 28@@ 1], xor_eax_eax, mov_edi_3, call_rbp, pop_rcx, pop_rsi, xor_eax_eax, jmp_0xffffffffffffffa2, call_0xfffffffffffecc@@ 68, mov_edi_dword_ptr_[rax], lea_rax_[rip+0x22@@ d@@ 4a], mov_rbp_qword_ptr_[rax], cmp_edi@@ _0xb, jne_0x24, sub_rsp_8, push_r12, mov_r9d_ebx, lea_r8_[rip+0x@@ 15@@ 9@@ 1a], mov_ecx_0xffffffff, mov_edx_0x@@ 9a@@ 1, jmp_0xffffffffffffffb5, call_0xfffffffffffeca@@ 50, push_rax, mov_r9d_ebx, lea_r8_[rip+0x@@ 15@@ 9@@ 40], push_r12, mov_ecx_0xffffffff, mov_edx_0x@@ 9a7, jmp_0xffffffffffffff91, call_0xfffffffffffecc@@ 7@@ 2
push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, lea_rax_[rip+0x2@@ 2c@@ e0], mov_rbp_qword_ptr_[rax], call_0xfffffffffffec@@ be@@ d, mov_edi_dword_ptr_[rax], call_0xfffffffffffec@@ a0@@ 6, sub_rsp_8, push_rax, mov_r9_rbx, xor_eax_eax, lea_r8_[rip+0x@@ 15@@ 9@@ 50], mov_ecx_4, mov_edx_0x3@@ b6, lea_rsi_[rip+0x15@@ 1c@@ 4], mov_edi_7, call_rbp, add_rsp_0x18, pop_rbx, xor_eax_eax, pop_rbp, ret
push_rbp, xor_ecx_ecx, mov_ebp_edi, push_rbx, mov_ebx_esi, xor_edx_edx, sub_rsp_8, xor_esi_esi, xor_eax_eax, mov_edi_ebx, call_0xfffffffffffeca@@ 1c, test_eax_eax, js_0x4@@ 5, sub_rsp_8, push_rbx, lea_r10_[rip+0x@@ 2@@ 2c@@ 67], mov_r9d_ebp, mov_edx_0x@@ 9b@@ e, xor_eax_eax, lea_r8_[rip+0x@@ 15@@ 95@@ e], mov_ecx_4, lea_rsi_[rip+0x15@@ 15@@ f], mov_edi_7, call_qword_ptr_[r10], pop_rax, pop_rdx, add_rsp_8, pop_rbx, mov_eax_1, pop_rbp, ret, lea_rax_[rip+0x2@@ 2c@@ 29], mov_rbx_qword_ptr_[rax], call_0xfffffffffffecb@@ 36, mov_edi_dword_ptr_[rax], call_0xfffffffffffec@@ 94@@ f, push_rax, mov_r9d_ebp, mov_ecx_0xffffffff, push_rbp, lea_rsi_[rip+0x15@@ 11@@ e], xor_eax_eax, lea_r8_[rip+0x@@ 15@@ 8@@ b0], mov_edx_0x@@ 9b8, mov_edi_3, call_rbx, pop_rcx, pop_rsi, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret
push_r15, push_r14, mov_r14_rsi, xor_esi_esi, push_r13, mov_r13_rdi, lea_rdi_[rip+0x15@@ 28@@ 5], push_r12, push_rbp, push_rbx, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, lea_rbx_[r@@ sp+@@ 6], call_0xfffffffffffec@@ 8e@@ e, mov_r12d_eax, test_eax_eax, js_0x1@@ c4, mov_edx_2, mov_rsi_rbx, mov_edi_r12d, call_0xfffffffffffec@@ 5a@@ d, cmp_rax_2, jne_0x2@@ 74, movzx_edi_word_ptr_[r@@ sp+@@ 6], test_@@ di@@ _di, je_0xffffffffffffffde, movzx_ebp@@ _di, or_ebp@@ _0x@@ d@@ 4d@@ 0000, mov_edx_0x7@@ 80, mov_esi_1, mov_edi_ebp, call_0xfffffffffffec@@ 5@@ ff, mov_r15d_eax, test_eax_eax, js_0x@@ e5, cmp_word_ptr_[r@@ sp+@@ 6]_0, je_0xffffffffffffff@@ b1, sub_rsp_8, push_rax, lea_rbx_[rip+0x@@ 22@@ b@@ 3b], mov_r9d_ebp, lea_r8_[rip+0x@@ 15@@ 9a@@ 9], mov_ecx_4, mov_edx_0x@@ 9f8, lea_rsi_[rip+0x15@@ 0@@ 35], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], mov_ecx_1, mov_edx_0x10, xor_esi_esi, mov_edi_r15d, xor_eax_eax, call_0xfffffffffffec@@ 8a@@ 6, pop_r10, pop_r11, test_eax_eax, js_0x2@@ 18, xor_esi_esi, xor_eax_eax, mov_edx_0xc, mov_edi_r15d, call_0xfffffffffffec@@ 889, test_eax_eax, js_0x2@@ 4b, push_rax, mov_ecx_4, mov_edx_0x@@ a0@@ c, push_r15, mov_r9d_ebp, lea_r8_[rip+0x@@ 15@@ 96@@ 5], lea_rsi_[rip+0x14@@ fd@@ 3], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], mov_edi_r12d, call_0xfffffffffffec@@ 37@@ 2, pop_rdx, pop_rcx, test_eax_eax, je_0x20, lea_r8_[rip+0x14@@ e8@@ 5], xor_ecx_ecx, mov_edx_0xa@@ 10, lea_rsi_[rip+0x14@@ fa@@ 7], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], mov_dword_ptr_[r14]@@ _r15d, mov_eax_1, mov_dword_ptr_[r13@@ ]_ebp, jmp_0x@@ d0, call_0xfffffffffffec@@ 980, mov_edi_dword_ptr_[rax], cmp_edi@@ _0x11, je_0x1@@ 46, cmp_edi@@ _0x1c, je_0x10d, cmp_edi@@ _0xc, je_0xd4, lea_rbx_[rip+0x@@ 22@@ a4@@ 7], mov_rbp_qword_ptr_[rbx], call_0xfffffffffffec@@ 77@@ 4, mov_r9_rax, lea_r8_[rip+0x@@ 15@@ 87@@ d], mov_ecx_0xffffffff, mov_edx_0x@@ 9f@@ 1, lea_rsi_[rip+0x14@@ f@@ 39], mov_edi_3, xor_eax_eax, call_rbp, mov_edi_r12d, call_0xfffffffffffec@@ 2d@@ 8, test_eax_eax, je_0x20, lea_r8_[rip+0x14@@ de@@ d], xor_ecx_ecx, mov_edx_0xa@@ 19, lea_rsi_[rip+0x14@@ f0@@ f], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], mov_dword_ptr_[r13@@ ]_0, xor_eax_eax, jmp_0x3a, lea_r9_[rip+0x@@ 22@@ 9d@@ 9], xor_eax_eax, lea_r8_[rip+0x@@ 15@@ 700], mov_ecx_0xffffffff, mov_edx_0x@@ 9c@@ e, lea_rsi_[rip+0x14@@ ed@@ 4], mov_edi_3, call_qword_ptr_[r9], mov_dword_ptr_[r13@@ ]_0, xor_eax_eax, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x14@@ 5, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rbx_[rip+0x@@ 22@@ 97@@ 9], lea_r8_[rip+0x@@ 15@@ 7@@ 12], mov_ecx_0xffffffff, mov_edx_0x@@ 9e@@ 7, lea_rsi_[rip+0x14@@ e7@@ 6], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ bx], jmp_0xffffffffffffff3d, lea_rbx_[rip+0x@@ 22@@ 94@@ 9], lea_r8_[rip+0x@@ 15@@ 7@@ 1a], mov_ecx_0xffffffff, mov_edx_0x@@ 9e@@ b, lea_rsi_[rip+0x14@@ e4@@ 6], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ bx], jmp_0xffffffffffffff0d, xor_ebp_ebp, mov_word_ptr_[rsp+@@ 6@@ ]_bp, jmp_0xfffffffffffffd@@ 81, lea_rbx_[rip+0x@@ 22@@ 90@@ 9], lea_r8_[rip+0x@@ 15@@ 67@@ 2], mov_ecx_0xffffffff, mov_edx_0x@@ 9d8, lea_rsi_[rip+0x14@@ e0@@ 6], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ bx], jmp_0xfffffffffffffe@@ cd, call_0xfffffffffffec@@ 7f@@ 3, mov_edi_dword_ptr_[rax], mov_r14_qword_ptr_[r@@ bx], call_0xfffffffffffec@@ 60@@ 9, sub_rsp_8, push_rax, mov_r9d_r15d, lea_r8_[rip+0x14@@ f@@ 8c], mov_ecx_0xffffffff, mov_edx_0x@@ 9f@@ e, lea_rsi_[rip+0x14@@ dc@@ 9], mov_edi_3, xor_eax_eax, call_r14, mov_esi_r15d, mov_edi_ebp, call_0xfffffffffffffc@@ 15, pop_r8, pop_r9, jmp_0xfffffffffffffe@@ 81, call_0xfffffffffffec@@ 7a@@ 7, mov_edi_dword_ptr_[rax], mov_r14_qword_ptr_[r@@ bx], call_0xfffffffffffec@@ 5b@@ d, push_rax, lea_rsi_[rip+0x14@@ d@@ 95], mov_edi_3, push_rbp, mov_r9d_r15d, lea_r8_[rip+0x@@ 15@@ 420], mov_ecx_0xffffffff, mov_edx_0x@@ a0@@ 6, xor_eax_eax, call_r14, pop_rsi, pop_rdi, jmp_0xfffffffffffffe@@ 44, call_0xfffffffffffec@@ 7c@@ a
push_r12, push_rbp, push_rbx, sub_rsp_0x30, mov_ecx_dword_ptr_[rip+0x20@@ 80@@ 6], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, test_ecx_ecx, js@@ _0x30, mov_edx_dword_ptr_[rip+0x20@@ 7e@@ 8], test_edx_edx, js@@ _0x58, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ d8, add_rsp_0x30, pop_rbx, pop_rbp, pop_r12, ret, mov_rcx_rsp, mov_edx_0x1@@ 3, xor_esi_esi, xor_edi_edi, call_0xfffffffffffec@@ 5@@ 94, mov_r8d_eax, mov_eax_1, test_r8d_r8d, js_0x@@ ec, mov_edx_dword_ptr_[rip+0x20@@ 7@@ 98], mov_dword_ptr_[rip+0x20@@ 7@@ 96@@ ]_eax, test_edx_edx, jns_0xffffffffffffff@@ ac, call_0xfffffffffffec@@ 34@@ e, mov_rbp_rax, test_rax_rax, je_0x73, mov_rdi_rax, call_0xfffffffffffec@@ 70@@ e, mov_r12_rax, test_rax_rax, je_0x1@@ 43, mov_rdi_rax, call_0xfffffffffffec@@ 1a@@ a, mov_ebx_eax, test_eax_eax, jne_0x@@ d9, lea_r9_[rip+0x@@ 22@@ 7@@ 94], lea_r8_[rip+0x@@ 15@@ 6b@@ d], mov_ecx_4, mov_edx_0x@@ 9@@ 1f, lea_rsi_[rip+0x14@@ c9@@ 1], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], mov_rdi_r12, call_0xfffffffffffeb@@ fb@@ f, mov_rdi_rbp, call_0xfffffffffffec@@ 5b@@ 7, mov_dword_ptr_[rip+0x20@@ 7@@ 18]_0, jmp_0xffffffffffffff34, lea_rbx_[rip+0x@@ 22@@ 74@@ 9], lea_r8_[rip+0x14@@ b@@ 27], xor_ecx_ecx, mov_edx_0x@@ 9@@ 17, lea_rsi_[rip+0x14@@ c4@@ 9], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], lea_r8_[rip+0x@@ 15@@ 6@@ 94], mov_ecx_0xffffffff, mov_edx_0x@@ 928, lea_rsi_[rip+0x14@@ c@@ 28], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ bx], mov_dword_ptr_[rip+0x20@@ 6c@@ 0]_0, jmp_0xfffffffffffffedc, lea_r9_[rip+0x@@ 22@@ 6f@@ 1], xor_eax_eax, lea_r8_[rip+0x@@ 15@@ 5b8], xor_ecx_ecx, mov_edx_0x@@ 908, lea_rsi_[rip+0x14@@ be@@ f], mov_edi_0x84, call_qword_ptr_[r9], xor_eax_eax, jmp_0xfffffffffffffef2, mov_rdi_r12, call_0xfffffffffffeb@@ f@@ 15, mov_rdi_rbp, call_0xfffffffffffec@@ 50@@ d, mov_eax_dword_ptr_[rip+0x2@@ 22@@ d0@@ 2], mov_dword_ptr_[rip+0x20@@ 66@@ c]_ebx, test_eax_eax, je_0xfffffffffffffe@@ 86, lea_r9_[rip+0x@@ 22@@ 6@@ 9d], lea_r8_[rip+0x@@ 15@@ 63@@ e], xor_ecx_ecx, mov_edx_0x@@ 93@@ 4, lea_rsi_[rip+0x14@@ b@@ 9d], mov_edi_0x84, xor_eax_eax, call_qword_ptr_[r9], jmp_0xfffffffffffffe@@ 5a, mov_rdi_rbp, call_0xfffffffffffec@@ 4b@@ d, lea_rbx_[rip+0x@@ 22@@ 66@@ 1], lea_r8_[rip+0x14@@ a@@ 3f], xor_ecx_ecx, mov_edx_0x@@ 9@@ 1b, lea_rsi_[rip+0x14@@ b6@@ 1], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], jmp_0xffffffffffffff18, call_0xfffffffffffec@@ 5a@@ e
push_rbp, mov_eax_edi, shr_eax_0x10, push_rbx, mov_ebx_edi, sub_rsp_8, cmp_eax_0x@@ d@@ 4d, je_0x3e, sub_rsp_8, push_rdi, lea_r10_[rip+0x@@ 22@@ 6@@ 10], mov_r9d_edi, mov_ecx_0xffffffff, lea_rsi_[rip+0x14@@ b@@ 16], xor_eax_eax, lea_r8_[rip+0x@@ 15@@ 6@@ 38], mov_edx_0x@@ 958, mov_edi_3, call_qword_ptr_[r10], pop_rcx, pop_rsi, xor_eax_eax, add_rsp_8, pop_rbx, pop_rbp, ret, mov_rbp_rsi, xor_edx_edx, mov_esi_1, call_0xfffffffffffec0@@ 76, mov_edx_eax, mov_dword_ptr_[rbp]_eax, mov_eax_1, test_edx_edx, jns_0xffffffffffffff@@ de, call_0xfffffffffffec@@ 4d@@ 3, mov_edi_dword_ptr_[rax], lea_rax_[rip+0x22@@ 5b@@ 5], mov_rbp_qword_ptr_[rax], cmp_edi_2, je_0x3f, cmp_edi@@ _0xd, je_0x5a, call_0xfffffffffffec@@ 2d@@ 8, push_rax, mov_r9d_ebx, lea_r8_[rip+0x@@ 15@@ 6f@@ 8], push_rbx, mov_ecx_0xffffffff, mov_edx_0x@@ 970, xor_eax_eax, lea_rsi_[rip+0x14@@ a@@ 99], mov_edi_3, call_rbp, pop_rax, pop_rdx, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret, sub_rsp_8, push_rbx, mov_r9d_ebx, lea_r8_[rip+0x@@ 15@@ 6@@ 19], mov_ecx_0xffffffff, mov_edx_0x@@ 9@@ 64, jmp_0xffffffffffffffca, sub_rsp_8, push_rbx, mov_r9d_ebx, lea_r8_[rip+0x@@ 15@@ 64@@ 9], mov_ecx_0xffffffff, mov_edx_0x@@ 96@@ a, jmp_0xffffffffffffffa@@ a
push_r12, push_rbp, push_rbx, mov_rbx_rdi, cmp_byte_ptr_[rdi]@@ _0x2f, je_0x36, mov_r9_rdi, lea_r8_[rip+0x@@ 15@@ 6d@@ 2], mov_ecx_4, mov_edx_0x6@@ 7b, lea_r10_[rip+0x@@ 22@@ 50@@ 9], xor_eax_eax, lea_rsi_[rip+0x14@@ a@@ 15], mov_edi_7, call_qword_ptr_[r10], xor_eax_eax, pop_rbx, pop_rbp, pop_r12, ret, mov_rbp_rsi, mov_r12_rdx, call_0xfffffffffffec0@@ ca, cmp_byte_ptr_[rbx@@ +rax@@ -1]_0x2f, lea_r9_[rip+0x@@ 10@@ 308], lea_r8_[rip+0x14@@ 44@@ 6], cmove@@ _r8@@ _r9, test_rbp_rbp, cmovne@@ _r9@@ _rbp, mov_rcx_rbx, lea_rdx_[rip+0x14@@ a@@ 19], mov_esi_0x1000, mov_rdi_r12, xor_eax_eax, call_0x@@ 95@@ 93, mov_r8d_eax, mov_eax_1, test_r8d_r8d, jns_0xffffffffffffff@@ ad, mov_r9_rbx, lea_r8_[rip+0x@@ 15@@ 68@@ 7], mov_ecx_4, mov_edx_0x6@@ 84, jmp_0xffffffffffffff7@@ d
push_r12, mov_r12_rdi, push_rbx, mov_rbx_rsi, mov_rdi_rbx, sub_rsp_8, mov_esi_0x2f, call_0xfffffffffffec@@ 2d@@ b, test_rax_rax, je_0x53, mov_rdi_r12, mov_edx_0x1000, mov_rsi_rbx, call_0x9d@@ e6, mov_r12d_eax, test_r12d_r12d, jne_0x2e, lea_r10_[rip+0x@@ 2@@ 24@@ 42], mov_r9_rbx, lea_r8_[rip+0x@@ 15@@ 6@@ 58], mov_ecx_0xffffffff, mov_edx_0x1@@ 0a, lea_rsi_[rip+0x14@@ 93@@ c], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], add_rsp_8, pop_rbx, mov_eax_r12d, pop_r12, ret, mov_rdi_r12, mov_r8_rbx, lea_rcx_[rip+0x2@@ 13@@ f3], lea_rdx_[rip+0x14@@ c@@ dd], mov_esi_0x1000, xor_eax_eax, call_0x94@@ d5, not_eax, mov_r12d_eax, shr@@ _r12d@@ _0x1f, jmp_0xffffffffffffff9@@ 9
push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x10, mov_rbx_rsp, mov_rsi_rdi, mov_rdi_rbx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 00@@ 8]_rax, xor_eax_eax, call_0xffffffffffffff@@ 30, test_eax_eax, je_0xb9, xor_edx_edx, xor_esi_esi, mov_rdi_rbx, xor_eax_eax, call_0xfffffffffffec0@@ da, mov_r12d_eax, test_eax_eax, js@@ _0x30, mov_rax_qword_ptr_[rsp+0x1@@ 008], xor_rax_qword_ptr_fs:[0x28], jne_0x98, add_rsp_0x10@@ 10, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, lea_rax_[rip+0x22@@ 35@@ 9], mov_rbp_qword_ptr_[rax], call_0xfffffffffffec@@ 26@@ 6, mov_edi_dword_ptr_[rax], call_0xfffffffffffec0@@ 7f, mov_r8_rax, cmp_byte_ptr_[r@@ sp]_0, lea_rdx_[rip+0x10@@ 16@@ b], lea_rax_[rip+0x14@@ 6e@@ 2], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x14@@ b7@@ 3], mov_r9_rbx, push_rcx, lea_r8_[rip+0x14@@ 8d@@ 8], mov_ecx_0xffffffff, push_rax, mov_edx_0x4@@ bf, lea_rsi_[rip+0x14@@ 8@@ 1c], mov_edi_3, xor_eax_eax, call_rbp, add_rsp_0x20, jmp_0xffffffffffffff6c, mov_r12d_0xffffffff, jmp_0xffffffffffffff5c, call_0xfffffffffffec@@ 25@@ 5
push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_ebx_edi, mov_rdi_rsi, sub_rsp_0x28, mov_r13@@ _qword_ptr_[rsp+0x68], mov_dword_ptr_[rsp+0x10]_edx, mov_dword_ptr_[rsp+0x1@@ 4]_ecx, mov_dword_ptr_[rsp+0x18]_r8d, mov_dword_ptr_[rsp+0x1c]@@ _r9d, call_0xfffffffffffe@@ be@@ 93, mov_rdi_r13, mov_r12_rax, call_0xfffffffffffe@@ be@@ 88, add_rax_r12, mov_qword_ptr_[rsp+8]_rax, cmp_ebx_1, je_0x1@@ d0, test_ebx_ebx, jne_0x15@@ 0, mov_eax_dword_ptr_[rip+0x22@@ 28@@ c8], test_eax_eax, je_0x22, mov_r15_qword_ptr_[r@@ ip+0x2@@ 22@@ 69], lea_r12_[rip+0x@@ 22@@ 26@@ 2], mov_r14_qword_ptr_[r@@ 15], cmp_r15@@ _r12, jne_0x12@@ 2, mov_rdi_qword_ptr_[rsp+8], add_rdi@@ _0x5@@ 2, call_0xfffffffffffe@@ bc@@ 97, mov_r12_rax, test_rax_rax, je_0x2@@ 5e, mov_dword_ptr_[rax+0x1@@ 0]_ebx, lea_r15_[r@@ ax+0x50], mov_eax_dword_ptr_[rsp+0x10], mov_rsi_rbp, mov_dword_ptr_[r12+0x@@ 20]_eax, mov_eax_dword_ptr_[rsp+0x14], mov_rdi_r15, mov_dword_ptr_[r12+0x@@ 24]_eax, mov_eax_dword_ptr_[rsp+0x18], mov_dword_ptr_[r12+0x@@ 28]_eax, mov_eax_dword_ptr_[rsp+0x1c], mov_dword_ptr_[r12+0x@@ 2c]_eax, mov_eax_dword_ptr_[rsp+0x60], mov_dword_ptr_[r12+0x@@ 30]_eax, mov_eax_dword_ptr_[rsp+0x70], mov_dword_ptr_[r12+0x@@ 34]_eax, mov_eax_dword_ptr_[rsp+0x78], mov_dword_ptr_[r12+0x@@ 38]_eax, mov_eax_dword_ptr_[rsp+0x88], test_eax_eax, mov_dword_ptr_[r12+0x@@ 4c]_eax, mov_eax_0, cmove_eax@@ _dword_ptr_[rsp+0x@@ 80], mov_dword_ptr_[r12+0x@@ 48]_eax, mov_dword_ptr_[rsp+0x8@@ 0]_eax, call_0xfffffffffffeba@@ e3, mov_qword_ptr_[r12+0x1@@ 8]_r15, lea_rdx_[rax+1], mov_rdi_rdx, mov_rsi_r13, call_0xfffffffffffec@@ 15@@ f, mov_qword_ptr_[r12+0x@@ 40]_rax, mov_rsi_r12, lea_rax_[rip+0x22@@ 27@@ eb], lea_rdi_[rip+0x22@@ 19@@ 4], inc_dword_ptr_[r@@ ax+r@@ bx*4], call_0x@@ f7@@ 11, mov_rsi_r12, lea_rdi_[rip+0x14@@ 8@@ 80], call_0xffffffffffffe@@ 42@@ 2, mov_eax_1, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rsi_qword_ptr_[r15+0x18], mov_rdi_rbp, call_0xfffffffffffec0@@ e9, test_eax_eax, je_0x12@@ a, mov_rax_qword_ptr_[r14], mov_r15_r14, cmp_r14@@ _r12, je_0xfffffffffffffe@@ f3, mov_r14_rax, cmp_dword_ptr_[r15+0x1@@ 0]_1, jne_0xffffffffffffffe9, jmp_0xffffffffffffffd3, cmp_ebx_2, jne_0x12@@ 5, mov_r14_qword_ptr_[rip+0x2@@ 2@@ 120], lea_r12_[rip+0x@@ 22@@ 11@@ 9], mov_r15_qword_ptr_[r@@ 14], cmp_r14@@ _r12, je_0xfffffffffffffe@@ c3, mov_rsi_qword_ptr_[r14+0x18], mov_rdi_r13, call_0xfffffffffffec0@@ 96, test_eax_eax, je_0x29, mov_rax_qword_ptr_[r15], mov_r14_r15, cmp_r15@@ _r12, je_0xfffffffffffffe@@ 9f, mov_rsi_qword_ptr_[r14+0x18], mov_rdi_r13, mov_r15_rax, call_0xfffffffffffec0@@ 6f, test_eax_eax, jne_0xffffffffffffffe0, mov_rsi_r14, lea_rdi_[rip+0x14@@ 7b@@ f], call_0xffffffffffffe@@ 36@@ c, mov_rdi_r14, call_0xffffffffffffea@@ c4, jmp_0xffffffffffffffc7, mov_eax_dword_ptr_[rip+0x2@@ 22@@ 70@@ 2], or_eax@@ _dword_ptr_[rip+0x2@@ 22@@ 70@@ 4], or_eax@@ _dword_ptr_[rip+0x2@@ 22@@ 70@@ 2], je_0xfffffffffffffe@@ 56, mov_r15_qword_ptr_[r@@ ip+0x2@@ 20@@ 99], lea_r12_[rip+0x@@ 2@@ 20@@ 92], mov_r14_qword_ptr_[r@@ 15], cmp_r15@@ _r12, jne_0x1e, jmp_0xfffffffffffffe@@ 3a, mov_rax_qword_ptr_[r14], mov_r15_r14, cmp_r14@@ _r12, je_0xfffffffffffffe@@ 27, mov_r14_rax, mov_rsi_qword_ptr_[r15+0x18], mov_rdi_rbp, call_0xfffffffffffeb@@ ff@@ 7, test_eax_eax, jne_0xffffffffffffffe0, mov_rsi_r15, lea_rdi_[rip+0x14@@ 74@@ 7], call_0xffffffffffffe@@ 2f@@ 4, mov_rdi_r15, call_0xffffffffffffea@@ 4c, mov_eax_dword_ptr_[rip+0x2@@ 22@@ 69@@ 9], or_eax@@ _dword_ptr_[rip+0x2@@ 22@@ 68@@ b], or_eax@@ _dword_ptr_[rip+0x2@@ 22@@ 69@@ 1], je_0xfffffffffffffd@@ e5, jmp_0xffffffffffffffaf, mov_rsi_r15, lea_rdi_[rip+0x14@@ 7@@ 11], call_0xffffffffffffe@@ 2b@@ e, mov_rdi_r15, call_0xffffffffffffea@@ 16, jmp_0xfffffffffffffd@@ c1, xor_eax_eax, mov_ecx_eax, cmp_ebx_3, cmovne@@ _ecx@@ _dword_ptr_[rsp+0x@@ 88], cmovne_eax@@ _dword_ptr_[rsp+0x@@ 80], mov_dword_ptr_[rsp+0x8@@ 8]_ecx, mov_dword_ptr_[rsp+0x8@@ 0]_eax, jmp_0xfffffffffffffd@@ 93, lea_r9_[rip+0x@@ 21@@ fe@@ 7], xor_eax_eax, lea_r8_[rip+0x@@ 15@@ 22@@ 6], or_ecx_0xffffffff, mov_edx_0x6@@ 1f, lea_rsi_[rip+0x14@@ 4e@@ 4], mov_edi_3, call_qword_ptr_[r9], xor_eax_eax, jmp_0xfffffffffffffe@@ 3@@ d
endbr64, lea_rax_[rip+0x2@@ 1fb@@ d], test_rdi_rdi, je_0x1a, mov_qword_ptr_[rax]@@ _rdi, lea_rax_[rip+0x2@@ 1fa@@ 6], lea_rdx_[rip-0x@@ 19@@ 11], mov_qword_ptr_[rax]_rdx, ret, lea_rcx_[rip-0x@@ 1a@@ 7f], mov_qword_ptr_[rax]_rcx, lea_rax_[rip+0x2@@ 1f@@ 87], lea_rsi_[rip-0x@@ 19@@ e0], mov_qword_ptr_[rax]_rsi, ret
endbr64, lea_rcx_[rip+0x2@@ 1f@@ 6d], lea_rdx_[rip-0x@@ 1a@@ b2], mov_eax_1, cmp_qword_ptr_[rcx@@ ]_rdx, je_6, ret, lea_rdx_[rip+0x2@@ 1f@@ 49], lea_rax_[rip-0x@@ 1a@@ 1e], cmp_qword_ptr_[rdx@@ ]_rax, setne_al, movzx_eax_al, ret
endbr64, lea_rax_[rip+0x2@@ 1f@@ 2d], test_rdi_rdi, je_0x1a, lea_rdx_[rip-0x@@ 18@@ 67], mov_qword_ptr_[rax]_rdx, lea_rax_[rip+0x2@@ 1f0@@ f], mov_qword_ptr_[rax]@@ _rdi, ret, lea_rcx_[rip-0x@@ 1b0@@ f], mov_qword_ptr_[rax]_rcx, lea_rax_[rip+0x2@@ 1e@@ f7], lea_rsi_[rip-0x@@ 1a@@ 70], mov_qword_ptr_[rax]_rsi, ret
endbr64, mov_dword_ptr_[rip+0x2@@ 22@@ 5@@ 2e@@ ]_edi, ret
endbr64, mov_rdx_rsi, lea_rsi_[rip+0x14@@ 5@@ f0], jmp_0x@@ 98@@ 5@@ 2
endbr64, mov_eax_dword_ptr_[rip+0x22@@ 24@@ fa], lea_r8_[rip+0x@@ 15@@ 11@@ 7], lea_r9d@@ _[rax+1], lea_rax_[rip+0x2@@ 1e@@ 94], mov_ecx_4, mov_r10_qword_ptr_[r@@ ax], mov_edx_0x1@@ 17, lea_rsi_[rip+0x14@@ 39@@ 5], mov_edi_7, xor_eax_eax, mov_dword_ptr_[rip+0x22@@ 24@@ c6@@ ]@@ _r9d, jmp@@ _r1@@ 0
endbr64, lea_rax_[rip+0x2@@ 1e@@ 55], mov_r9d_dword_ptr_[rip+0x2@@ 2@@ 24@@ a2], mov_r10_qword_ptr_[r@@ ax], test_r9d_r9d, je_0x38, dec@@ _r9d, lea_r8_[rip+0x@@ 15@@ 124], mov_ecx_4, mov_edx_0x1@@ 22, lea_rsi_[rip+0x14@@ 340], mov_edi_7, xor_eax_eax, mov_dword_ptr_[rip+0x22@@ 24@@ 7@@ 1]@@ _r9d, jmp@@ _r10, lea_r8_[rip+0x@@ 150@@ b1], mov_ecx_0xffffffff, mov_edx_0x1@@ 1d, lea_rsi_[rip+0x14@@ 30@@ d], mov_edi_3, xor_eax_eax, jmp@@ _r1@@ 0
endbr64, mov_eax_dword_ptr_[rip+0x22@@ 24@@ 2a], ret
endbr64, mov_dword_ptr_[rip+0x@@ 1fd@@ 8e@@ ]_edi, mov_eax_1, ret
endbr64, mov_eax_dword_ptr_[rip+0x@@ 1fd@@ 7e], ret
endbr64, push_r12, mov_esi_0x@@ d0, push_rbx, mov_ebx_edi, mov_edi_1, sub_rsp_8, call_0xfffffffffffeb@@ da@@ 9, mov_r12_rax, test_rax_rax, je_0xc1, call_0xe@@ 8a@@ 8, test_eax_eax, je_0x81, movabs_rax_0x1@@ b@@ 00000000@@ 6, mov_qword_ptr_[r12+0x@@ 40]_rax, mov_eax_0xffffffff, mov_dword_ptr_[r12@@ ]_ebx, mov_dword_ptr_[r12+0x@@ 7c]_0, mov_dword_ptr_[r12+0x@@ 2c]_0, mov_qword_ptr_[r12+0x@@ 30@@ ]_-1, mov_qword_ptr_[r12+0x@@ 38]_1, mov_qword_ptr_[r12+0x@@ 48]_rax, mov_dword_ptr_[r12+0x@@ 84]_0, mov_qword_ptr_[r12+0x@@ 98]_0, mov_dword_ptr_[r12+0x@@ a0]_0, mov_dword_ptr_[r12+0x@@ b8]_0, add_rsp_8, pop_rbx, mov_rax_r12, pop_r12, ret, mov_rdi_r12, call_0xfffffffffffeb@@ 8c@@ d, lea_r9_[rip+0x2@@ 1c@@ f1], lea_r8_[rip+0x@@ 140@@ cf], xor_ecx_ecx, mov_edx_0x1@@ 42, lea_rsi_[rip+0x14@@ 1f@@ 1], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], xor_r12d_r12d, jmp_0xffffffffffffffc1, lea_r10_[rip+0x@@ 2@@ 1c@@ c6], mov_r9d_0x@@ d0, lea_r8_[rip+0x14@@ fc@@ 9], or_ecx_0xffffffff, mov_edx_0x1@@ 3b, lea_rsi_[rip+0x14@@ 1b@@ f], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], jmp_0xffffffffffffff9@@ 2
endbr64, push_r12, mov_r12d_1, push_rbp, push_rbx, cmp_edx_1, je_0xf, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, mov_rbx_rsi, lea_rsi_[rip+0x14@@ 3a@@ a], mov_rbp_rdi, call_0xfffffffffffeb@@ 9b@@ 3, test_rax_rax, je_0xffffffffffffffde, sub_rsp_8, push_rbp, lea_r10_[rip+0x@@ 2@@ 1c@@ 4d], mov_r9_rbx, mov_edx_0x1@@ 99, xor_eax_eax, lea_r8_[rip+0x14@@ f7@@ 4], mov_ecx_0xffffffff, lea_rsi_[rip+0x14@@ 14@@ 5], mov_edi_3, call_qword_ptr_[r10], pop_rax, pop_rdx, pop_rbx, xor_r12d_r12d, pop_rbp, mov_eax_r12d, pop_r12, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x28, mov_qword_ptr_[rsp+0x18]_rsi, mov_qword_ptr_[rsp+0x10]_rdx, mov_qword_ptr_[rsp]_r8, mov_dword_ptr_[rsp+0xc]_r9d, test_rdi_rdi, je_0x1@@ c5, mov_r12_rcx, test_rcx_rcx, je_0x1@@ b9, movzx_r15d@@ _byte_ptr_[rdi], mov_rbp_rdi, test_r15b_r15b, je_0xe4, test_rdx_rdx, je_0xdb, cmp_r8@@ _0x7f, jbe_0x@@ 1a@@ 1, cmp_r9d@@ _1, setbe@@ _byte_ptr_[rsp+0x@@ b], mov_rax_rdi, xor_r13d_r13d, mov_r14d@@ _0xffffffff, xor_ebx_ebx, jmp_0x2e, cmp_qword_ptr_[rsp@@ ]_r13, je_0x104, mov_byte_ptr_[r12+r@@ 13]@@ _r15b, inc@@ _r13, inc_rbx, lea_rax_[rbp+r@@ bx], movzx_r15d@@ _byte_ptr_[rax], test_r15b_r15b, je_0x70, cmp_r15b@@ _0x5c, jne_0xd, cmp_byte_ptr_[rsp+0x@@ b]_0, jne_0x93, movsx_edi@@ _r15b, call_0xffffffffffffe@@ 50@@ 9, test_eax_eax, jne_0xffffffffffffffc2, cmp_dword_ptr_[rsp+0x@@ c]_2, je_0xb, test_r14d_r14d, je_0x106, mov_rax_qword_ptr_[rsp], sub_rax_r13, cmp_rax_3, jbe_0x@@ ad, lea_rdi_[r@@ 12+r@@ 13], movzx_r8d@@ _r15b, lea_rcx_[rip+0x14@@ 26@@ a], mov_rdx_-1, mov_esi_1, xor_eax_eax, call_0xfffffffffffebb@@ f2, add_r13@@ _4, mov_r14d_1, jmp_0xffffffffffffff84, cmp_qword_ptr_[rsp@@ ]_r13, je_0x74, mov_byte_ptr_[r12+r@@ 13]_0, cmp_r14d@@ _-1, jne_0xc, xor_r14d_r14d, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_eax_r14d, pop_r14, pop_r15, ret, cmp_byte_ptr_[r@@ bp+r@@ bx+@@ 1]@@ _0x78, jne_0xffffffffffffff@@ 6e, mov_rdx_qword_ptr_[rsp+0x10], sub_rdx_rbx, cmp_rdx@@ _3, jbe_0x@@ 79, cmp_r14d_1, je_0x73, mov_rdx_qword_ptr_[rsp], sub_rdx@@ _r13, cmp_rdx@@ _3, jbe_0x@@ 1e, mov_eax_dword_ptr_[rax], add_rbx@@ _3, mov_dword_ptr_[r12@@ +r@@ 13@@ ]_eax, xor_r14d_r14d, add_r13@@ _4, jmp_0xffffffffffffff14, sub_rsp_8, push_rbp, lea_r8_[rip+0x14@@ ea@@ c], mov_ecx_0xffffffff, mov_r9_qword_ptr_[rsp+0x28], mov_edx_0x1@@ f5, lea_r10_[rip+0x@@ 2@@ 1a@@ 66], xor_eax_eax, lea_rsi_[rip+0x13@@ f7@@ 2], mov_edi_3, call_qword_ptr_[r10], pop_rax, pop_rdx, mov_r14d@@ _0xffffffff, jmp_0xffffffffffffff68, sub_rsp_8, push_rbp, lea_r8_[rip+0x14@@ e0@@ 4], mov_ecx_0xffffffff, mov_r9_qword_ptr_[rsp+0x28], mov_edx_0x1@@ f1, jmp_0xffffffffffffffb8, mov_r14d@@ _0xffffffff, jmp_0xffffffffffffff38, lea_r9_[rip+0x2@@ 1a@@ 11], lea_r8_[rip+0x14@@ d@@ 9a], mov_ecx_0xffffffff, mov_edx_0x1@@ b3, lea_rsi_[rip+0x13@@ f0@@ e], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], mov_r14d@@ _0xffffffff, jmp_0xffffffffffffff0@@ 4
push_r15, push_r14, push_r13, mov_r13d_ecx, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rdx, sub_rsp_0x98, mov_rdi_qword_ptr_[rdi], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, call_0xfffffffffffeb@@ 57@@ d, mov_qword_ptr_[rbp]_0, mov_rdi_qword_ptr_[r12], call_0xfffffffffffeb@@ 56@@ c, mov_qword_ptr_[r12]_0, mov_rdi_rbx, call_0xfffffffffffeb@@ 56@@ c, cmp_rax@@ _0x7f, jbe_0x@@ 63, mov_r9_rbx, lea_r8_[rip+0x@@ 140@@ c8], mov_ecx_0xffffffff, mov_edx_0x2@@ 3c, lea_r10_[rip+0x@@ 2@@ 19@@ 66], lea_rsi_[rip+0x13@@ e@@ 74], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], xor_r14d_r14d, mov_rax_qword_ptr_[rsp+0x88], xor_rax_qword_ptr_fs:[0x28], jne_0x14@@ 2, add_rsp_0x98, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_eax_r14d, pop_r14, pop_r15, ret, mov_edx_r13d, lea_rsi_[rip+0x14@@ 0@@ d1], mov_rdi_rbx, call_0xfffffffffffffc@@ 83, mov_r14d_eax, test_eax_eax, je_0xc1, test_r13d_r13d, je_0x95, mov_rdi_rbx, call_0xfffffffffffeb@@ 4d@@ 7, mov_r14_rsp, mov_rdx_rax, mov_r9d_r13d, mov_r8d@@ _0x80, mov_rcx_r14, lea_rsi_[rip+0x14@@ 0@@ 94], mov_rdi_rbx, call_0xfffffffffffffcc@@ 6, test_eax_eax, js_0x@@ b7, je_0x5e, lea_r15_[rip+0x@@ 2@@ 18@@ c0], cmp_r13d_1, mov_r10_qword_ptr_[r@@ 15], push_r14, lea_rax_[rip+0x13@@ fd@@ a], lea_r9_[rip+0x@@ 13@@ fc@@ e], push_rbx, cmovne@@ _r9_rax, mov_ecx_4, mov_edx_0x2@@ 4c, lea_r8_[rip+0x14@@ d@@ 1b], lea_rsi_[rip+0x13@@ da@@ 1], mov_edi_7, xor_eax_eax, call_r10, mov_rdi_r14, call_0xfffffffffffeb@@ 7@@ 9f, pop_rdx, mov_qword_ptr_[r12]_rax, pop_rcx, test_rax_rax, je_0xa7, mov_rdi_rbx, call_0xfffffffffffeb@@ 7@@ 88, mov_qword_ptr_[rbp]_rax, test_rax_rax, je_0x62, mov_r14d_1, jmp_0xffffffffffffff02, lea_r9_[rip+0x2@@ 18@@ 41], lea_r8_[rip+0x13@@ c@@ 1f], xor_ecx_ecx, mov_edx_0x2@@ 41, lea_rsi_[rip+0x13@@ d@@ 41], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], jmp_0xfffffffffffffe@@ d0, mov_r9_rbx, lea_r8_[rip+0x14@@ c6@@ e], mov_ecx_0xffffffff, mov_edx_0x2@@ 46, jmp_0xfffffffffffffe@@ 97, call_0xfffffffffffeb@@ 76@@ f, lea_r10_[rip+0x@@ 2@@ 17@@ f3], mov_r9_rbx, lea_r8_[rip+0x14@@ c9@@ 9], or_ecx_0xffffffff, mov_edx_0x2@@ 56, lea_rsi_[rip+0x13@@ ce@@ f], mov_edi_3, call_qword_ptr_[r10], xor_r14d_r14d, jmp_0xfffffffffffffe@@ 7d, mov_r9_r14, lea_r8_[rip+0x14@@ c@@ 70], or_ecx_0xffffffff, mov_edx_0x2@@ 50, lea_rsi_[rip+0x13@@ cc@@ 6], mov_edi_3, call_qword_ptr_[r@@ 15], xor_r14d_r14d, jmp_0xfffffffffffffe@@ 5@@ 4
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1@@ d8, mov_r13d_dword_ptr_[r@@ di], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x2@@ 1c@@ 8]_rax, xor_eax_eax, mov_rbp_rsi, test_r13d_r13d, jne_0x5b, lea_r10_[rip+0x@@ 2@@ 17@@ 52], mov_r9_rsi, lea_r8_[rip+0x14@@ c@@ 20], mov_ecx_0xffffffff, mov_edx_0x2@@ 66, lea_rsi_[rip+0x13@@ c@@ 4c], mov_edi_3, call_qword_ptr_[r10], mov_rax_qword_ptr_[rsp+0x@@ 2@@ 1c8], xor_rax_qword_ptr_fs:[0x28], jne_0x4@@ 84, add_rsp_0x2@@ 1d8, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, pop_r14, pop_r15, ret, lea_r15_[r@@ sp+0x10], mov_rbx_rdi, mov_r12_rdx, mov_edi_1, mov_rdx_r15, call_0xfffffffffffeb@@ 77@@ d, mov_r13d_eax, test_eax_eax, je_0x63, mov_rdi_rbp, call_0xfffffffffffeb@@ 2b@@ e, mov_rsi_rax, cmp_rax_2, jbe_0x@@ 1e, cmp_byte_ptr_[rbp]@@ _0x2f, je_0x18, mov_edx_0x2@@ f, mov_rdi_rbp, call_0x8a@@ b2, cmp_eax_1, je_0x2@@ 42, mov_r9_rbp, lea_r8_[rip+0x13@@ e@@ 2b], mov_ecx_0xffffffff, mov_edx_0x2@@ 7c, lea_r10_[rip+0x@@ 2@@ 16@@ 99], lea_rsi_[rip+0x13@@ ba@@ 7], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], xor_r13d_r13d, jmp_0xffffffffffffff56, lea_r14_[r@@ sp+0x1@@ c0], xor_eax_eax, mov_r8_r12, lea_rcx_[rip+0x20@@ 65@@ c], lea_rdx_[rip+0x13@@ f4@@ 6], mov_esi_0x1000, mov_rdi_r14, call_0x87@@ 3d, cmp_eax_-1, je_0x1@@ a5, lea_rdx_[rsp+0x@@ a0], mov_rsi_r14, mov_edi_1, call_0xfffffffffffeb@@ 6cf, test_eax_eax, mov_rax_qword_ptr_[rsp+0x38], mov_qword_ptr_[rsp+8]_rax, jne_0x10, cmp_rax@@ _qword_ptr_[rsp+0x@@ c8], je_0xc4, lea_rdi_[rip+0x20@@ 60@@ 7], call_0xfffffffffffeb@@ 23@@ 7, mov_rbp_rax, lea_r13_[r@@ sp+0x1@@ 1c0], test_rax_rax, je_0x2@@ 84, mov_rdi_rbp, call_0xfffffffffffeb@@ 8@@ 25, test_rax_rax, je_0xf5, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x2e, lea_r15_[r@@ ax+0x13], je_0xffffffffffffffe6, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x2@@ e@@ 2e, je_0x96, xor_eax_eax, mov_r8_r15, lea_rcx_[rip+0x20@@ 5b@@ 4], lea_rdx_[rip+0x13@@ e@@ 9e], mov_esi_0x1000, mov_rdi_r13, call_0x86@@ 95, cmp_eax_-1, je_0x7d, lea_rdx_[rsp+0x1@@ 30], mov_rsi_r13, mov_edi_1, call_0xfffffffffffeb@@ 6@@ 2b, test_eax_eax, jne_0xffffffffffffff9c, mov_rax_qword_ptr_[rsp+8], cmp_qword_ptr_[rsp+0x1@@ 58]_rax, jne_0xffffffffffffff@@ 8d, mov_rdi_r14, mov_edx_0x1000, mov_rsi_r15, call_0xfffffffffffeb@@ 5e8, mov_rdi_rbp, call_0xfffffffffffeb@@ 640, test_eax_eax, jne_0x2@@ 6a, mov_r12_r14, lea_rsi_[r@@ bx+0x10], lea_rdi_[rbx+8], xor_ecx_ecx, mov_rdx_r12, call_0xfffffffffffffb@@ 73, mov_r13d_eax, jmp_0xfffffffffffffe@@ 1c, cmp_byte_ptr_[r15+@@ 2]_0, je_0xffffffffffffff@@ 43, jmp_0xffffffffffffff65, lea_r10_[rip+0x@@ 2@@ 15@@ 29], mov_r9_r15, lea_r8_[rip+0x13@@ c@@ 84], mov_ecx_0xffffffff, mov_edx_0x1@@ 72, lea_rsi_[rip+0x13@@ a@@ 23], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], jmp_0xffffffffffffff0c, mov_rdi_rbp, call_0xfffffffffffeb@@ 5c@@ 5, lea_r10_[rip+0x@@ 2@@ 14@@ e9], test_eax_eax, jne_0xc7, mov_r9_r12, lea_r8_[rip+0x13@@ c@@ 58], mov_ecx_0xffffffff, mov_edx_0x2@@ 92, lea_rsi_[rip+0x13@@ 9d@@ b], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], xor_r13d_r13d, jmp_0xfffffffffffffd@@ 8a, lea_r10_[rip+0x@@ 2@@ 14@@ a9], mov_r9_r12, lea_r8_[rip+0x13@@ c0@@ 4], mov_ecx_0xffffffff, mov_edx_0x2@@ 71, lea_rsi_[rip+0x13@@ 9a@@ 3], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], jmp_0xfffffffffffffd@@ 55, lea_r14_[r@@ sp+0x1@@ c0], xor_eax_eax, mov_r8_rbp, lea_rcx_[rip+0x20@@ 45@@ 4], lea_rdx_[rip+0x13@@ bf@@ 2], mov_esi_0x1000, mov_rdi_r14, call_0x85@@ 35, cmp_eax_-1, je_0xad, mov_rdx_r15, mov_rsi_r14, mov_edi_1, call_0xfffffffffffeb@@ 4c@@ c, test_eax_eax, jne_0x1@@ 1d, mov_rax_qword_ptr_[rsp+0x38], mov_qword_ptr_[rsp+8]_rax, jmp_0xfffffffffffffe@@ 07, mov_qword_ptr_[rsp+8]_r10, mov_rbx_qword_ptr_[r@@ 10], call_0xfffffffffffeb@@ 328, mov_edi_dword_ptr_[rax], call_0xfffffffffffeb@@ 14@@ 1, cmp_byte_ptr_[rip+0x20@@ 3f@@ 5]_0, mov_r10_qword_ptr_[rsp+8], jne_0x1@@ 6b, mov_qword_ptr_[rsp+8]_r10, push_rcx, push_rax, lea_rax_[rip+0x13@@ a@@ 9d], push_rax, lea_rax_[rip+0x@@ f2@@ 13], push_rax, lea_r9_[rip+0x@@ 20@@ 3c@@ c], lea_r8_[rip+0x13@@ 99@@ 4], or_ecx_0xffffffff, mov_edx_0x1@@ 81, lea_rsi_[rip+0x13@@ 8d@@ 6], mov_edi_3, xor_eax_eax, call_rbx, mov_r10_qword_ptr_[rsp+0x28], add_rsp_0x20, jmp_0xfffffffffffffe@@ ce, mov_r9_rbp, lea_r8_[rip+0x14@@ 89@@ 6], mov_ecx_0xffffffff, mov_edx_0x2@@ 80, jmp_0xfffffffffffffc@@ ec, lea_r10_[rip+0x@@ 2@@ 13@@ 79], mov_qword_ptr_[rsp+8]_r10, mov_rbx_qword_ptr_[r@@ 10], call_0xfffffffffffeb@@ 28@@ 1, mov_edi_dword_ptr_[rax], call_0xfffffffffffeb0@@ 9a, mov_r8_rax, cmp_byte_ptr_[rip+0x20@@ 34@@ b]_0, lea_rdx_[rip+0xf@@ 18@@ 3], lea_rax_[rip+0x13@@ 6f@@ a], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x13@@ 93@@ a], lea_r9_[rip+0x@@ 20@@ 32@@ 5], push_rcx, lea_r8_[rip+0x13@@ 8e@@ c], mov_ecx_0xffffffff, push_rax, mov_edx_0x1@@ 66, jmp_0xffffffffffffff5a, mov_r9_rbp, lea_r8_[rip+0x13@@ a8@@ f], mov_ecx_0xffffffff, mov_edx_0x2@@ 84, jmp_0xfffffffffffffc@@ 64, lea_rax_[rip+0x2@@ 12@@ f8], mov_rbp_qword_ptr_[rax], call_0xfffffffffffeb@@ 20@@ 5, mov_edi_dword_ptr_[rax], call_0xfffffffffffeb0@@ 1e, cmp_byte_ptr_[rip+0x20@@ 2d@@ 2]_0, jne_0x68, sub_rsp_8, push_rax, lea_rax_[rip+0x13@@ 98@@ 5], push_rax, lea_rax_[rip+0x@@ f0@@ fb], push_rax, lea_r9_[rip+0x@@ 20@@ 2b@@ 4], lea_r8_[rip+0x13@@ 87@@ c], mov_ecx_0xffffffff, mov_edx_0x1@@ 81, lea_rsi_[rip+0x13@@ 7c@@ 1], mov_edi_3, xor_eax_eax, call_rbp, add_rsp_0x20, jmp_0xfffffffffffffd@@ 3c, call_0xfffffffffffeb@@ 20@@ a, mov_qword_ptr_[rsp+8]_r10, push_rsi, push_rax, lea_rax_[rip+0x13@@ 9@@ 38], push_rax, lea_rax_[rip+0x13@@ 6@@ 2c], jmp_0xfffffffffffffe@@ 9b, push_rdx, push_rax, lea_rax_[rip+0x13@@ 92@@ 2], push_rax, lea_rax_[rip+0x13@@ 6@@ 16], jmp_0xffffffffffffff9@@ d
push_r14, mov_r14d_r8d, push_r13, mov_r13_rsi, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rcx, call_0xfffffffffffea@@ e@@ 29, mov_rdx_rax, mov_r9d_r14d, mov_r8_rbx, mov_rcx_r12, mov_rsi_r13, mov_rdi_rbp, call_0xfffffffffffff6@@ 22, test_eax_eax, js_0x3@@ 3, jne_0x21, mov_rdi_rbp, call_0xfffffffffffeb@@ 144, mov_r12_rax, test_r12_r12, je_0x30, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, mov_rdi_r12, call_0xfffffffffffeb@@ 125, mov_r12_rax, jmp_0xffffffffffffffe1, pop_rbx, pop_rbp, xor_r12d_r12d, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, lea_r9_[rip+0x2@@ 11@@ e2], lea_r8_[rip+0x14@@ 70@@ 3], or_ecx_0xffffffff, mov_edx_0x2@@ b6, lea_rsi_[rip+0x13@@ 6e@@ 1], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], jmp_0xffffffffffffffa@@ b
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x18]_rsi, mov_qword_ptr_[rsp+0x10]_rcx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xc8]_rax, xor_eax_eax, test_rdi_rdi, je_0x1@@ bc, test_rcx_rcx, je_0x1@@ b3, movzx_r13d@@ _byte_ptr_[rdi], mov_r12_rdi, test_rdx_rdx, je_0xf2, test_r13b_r13b, je_0xe9, cmp_r8@@ _0x7f, jbe_0x@@ 19@@ d, mov_rax_qword_ptr_[rsp+0x10], lea_rsi_[rsp+0x40], mov_r11d_1, mov_qword_ptr_[rsp+0x20]_rsi, sub_r11@@ _rax, lea_rsi_[rsp+0x@@ 3c], mov_dword_ptr_[rsp+0xc]_0, mov_qword_ptr_[rsp+0x28]_rsi, mov_ebp@@ _r9d, mov_rbx_rax, xor_r15d_r15d, mov_r14@@ _r11, jmp_0x19, mov_byte_ptr_[rbx]@@ _r13b, mov_r15_rax, lea_rax_[r@@ 14+r@@ bx], movzx_r13d_byte_ptr_[r@@ dx], inc_rbx, test_r13b_r13b, je_0x7c, test_ebp_ebp, je_0x19, movsx_edi@@ _r13b, call_0xffffffffffffda@@ b2, test_eax_eax, jne_0xc, cmp_r13b@@ _0x5c, jne_0xaa, lea_rax_[r@@ 15+1], lea_rdx_[r@@ 12+rax], cmp_r13b@@ _0x5c, jne_0xffffffffffffffc3, cmp_byte_ptr_[rdx]@@ _0x78, jne_0xffffffffffffffbe, mov_rcx_qword_ptr_[rsp+0x20], mov_rdx_qword_ptr_[rsp+0x28], xor_eax_eax, lea_rdi_[r@@ 12+r@@ 15+2], lea_rsi_[rip+0x13@@ 86@@ 2], call_0xfffffffffffeaa@@ 44, test_eax_eax, je_0xb0, mov_eax_dword_ptr_[rsp+0x3c], add_r15@@ _4, mov_byte_ptr_[rbx]_al, lea_rdx_[r@@ 12+r@@ 15], lea_rax_[r@@ 14+r@@ bx], movzx_r13d_byte_ptr_[r@@ dx], mov_dword_ptr_[rsp+0xc]_1, inc_rbx, test_r13b_r13b, jne_0xffffffffffffff@@ 89, add_qword_ptr_[rsp+0x1@@ 0]_rax, mov_rax_qword_ptr_[rsp+0x10], mov_byte_ptr_[rax]_0, jmp_0xb, mov_dword_ptr_[rsp+0xc]_0, mov_rax_qword_ptr_[rsp+0xc8], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ d9, mov_eax_dword_ptr_[rsp+0xc], add_rsp_0xd8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, sub_rsp_8, push_r12, lea_r10_[rip+0x@@ 2@@ 10@@ 3e], mov_ecx_0xffffffff, mov_r9_qword_ptr_[rsp+0x28], lea_rsi_[rip+0x13@@ 54@@ 2], lea_r8_[rip+0x14@@ 5b@@ 6], mov_edx_0x2@@ 14, mov_edi_3, call_qword_ptr_[r10], pop_rcx, pop_rsi, mov_dword_ptr_[rsp+0xc]@@ _0xffffffff, jmp_0xffffffffffffff84, sub_rsp_8, push_r12, lea_r10_[rip+0x@@ 21@@ 000], mov_edx_0x2@@ 1c, mov_r9_qword_ptr_[rsp+0x28], lea_r8_[rip+0x14@@ 5c@@ 7], mov_ecx_4, lea_rsi_[rip+0x13@@ 4f@@ 8], mov_edi_7, call_qword_ptr_[r10], pop_rax, pop_rdx, mov_qword_ptr_[rsp+0x10]_rbx, jmp_0xffffffffffffff49, mov_dword_ptr_[rsp+0xc]@@ _0xffffffff, jmp_0xffffffffffffff4f, lea_r9_[rip+0x@@ 20@@ f@@ bb], lea_r8_[rip+0x14@@ 50@@ 4], mov_ecx_0xffffffff, mov_edx_0x2@@ 0e, lea_rsi_[rip+0x13@@ 4b@@ 8], mov_edi_3, call_qword_ptr_[r9], mov_dword_ptr_[rsp+0xc]@@ _0xffffffff, jmp_0xffffffffffffff1b, call_0xfffffffffffea@@ ef@@ e
push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_0x10, mov_qword_ptr_[rsp+8]_rsi, test_r8d_r8d, jne_0x2c, mov_rbp_rdx, mov_rbx_rcx, call_0xfffffffffffea@@ b@@ 45, mov_rsi_qword_ptr_[rsp+8], xor_r9d_r9d, mov_rdx_rax, mov_r8_rbx, mov_rcx_rbp, mov_rdi_r12, call_0xfffffffffffffd@@ 8c, test_eax_eax, js_0x3@@ 5, jne_0x23, mov_rdi_r12, call_0xfffffffffffea@@ e@@ 5e, mov_r12_rax, test_r12_r12, je_0x28, add_rsp_0x10, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, mov_rdi_rbp, call_0xfffffffffffea@@ e@@ 3d, mov_r12_rax, jmp_0xffffffffffffffdf, xor_r12d_r12d, jmp_0xffffffffffffffdc, lea_r9_[rip+0x@@ 20@@ f0@@ 4], lea_r8_[rip+0x14@@ 5@@ 1d], or_ecx_0xffffffff, mov_edx_0x2@@ cb, lea_rsi_[rip+0x13@@ 40@@ 3], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], jmp_0xffffffffffffffb@@ 3
endbr64, push_r12, mov_r12_rsi, mov_esi_0x2f, push_rbp, mov_rbp_rdi, mov_rdi_r12, sub_rsp_8, call_0xfffffffffffea@@ b@@ 57, test_rax_rax, je_0x1f, add_rsp_8, mov_rdi_rbp, pop_rbp, mov_rsi_r12, lea_rdx_[rax+1], pop_r12, jmp_0xfffffffffffff@@ 70@@ c, call_0xfffffffffffff0@@ e0, add_rsp_8, lea_rsi_[r@@ bp+0x10], lea_rdi_[r@@ bp+8], pop_rbp, mov_rdx_r12, mov_ecx_eax, pop_r12, jmp_0xfffffffffffff@@ 4a@@ 7
endbr64, mov_rax_qword_ptr_[rdi+0x@@ 50], add_rax_0x30, ret
endbr64, push_r12, push_rbx, sub_rsp_0x98, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, call_0xffffffffffffff@@ cf, mov_rbx_rax, call_0xfffffffffffff0@@ 87, mov_r8d_eax, mov_rdx_rsp, mov_ecx_0x80, lea_rsi_[rip+0x13@@ 5e@@ b], mov_rdi_rbx, call_0xfffffffffffffb@@ cd, mov_r12_rax, test_rax_rax, je_0x23, mov_rax_qword_ptr_[rsp+0x88], xor_rax_qword_ptr_fs:[0x28], jne_0x3c, add_rsp_0x98, pop_rbx, mov_rax_r12, pop_r12, ret, lea_r10_[rip+0x@@ 20@@ d@@ f8], mov_r9_rbx, lea_r8_[rip+0x14@@ 24@@ e], or_ecx_0xffffffff, mov_edx_0x2@@ d7, lea_rsi_[rip+0x13@@ 2f@@ 4], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], jmp_0xffffffffffffffb5, call_0xfffffffffffea@@ d4@@ 3
endbr64, push_r12, push_rbx, sub_rsp_0x98, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, call_0xffffffffffffff@@ 1f, mov_rbx_rax, call_0xffffffffffffe@@ fd@@ 7, mov_r8d_eax, mov_rdx_rsp, mov_ecx_0x80, lea_rsi_[rip+0x13@@ 53@@ b], mov_rdi_rbx, call_0xfffffffffffffd@@ fd, mov_r12_rax, test_rax_rax, je_0x23, mov_rax_qword_ptr_[rsp+0x88], xor_rax_qword_ptr_fs:[0x28], jne_0x3c, add_rsp_0x98, pop_rbx, mov_rax_r12, pop_r12, ret, lea_r10_[rip+0x@@ 20@@ d@@ 48], mov_r9_rbx, lea_r8_[rip+0x14@@ 38@@ e], or_ecx_0xffffffff, mov_edx_0x2@@ e3, lea_rsi_[rip+0x13@@ 24@@ 4], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], jmp_0xffffffffffffffb5, call_0xfffffffffffea@@ c9@@ 3
endbr64, mov_rax_qword_ptr_[rdi+0x@@ 50], add_rax@@ _0x@@ b0, ret
endbr64, push_r12, push_rbx, sub_rsp_0x98, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, call_0xffffffffffffff@@ cf, mov_rbx_rax, call_0xffffffffffffef@@ 17, mov_r8d_eax, mov_rdx_rsp, mov_ecx@@ _0x8@@ 1, lea_rsi_[rip+0x15@@ d0@@ 1], mov_rdi_rbx, call_0xfffffffffffffa@@ 5d, mov_r12_rax, test_rax_rax, je_0x23, mov_rax_qword_ptr_[rsp+0x88], xor_rax_qword_ptr_fs:[0x28], jne_0x3c, add_rsp_0x98, pop_rbx, mov_rax_r12, pop_r12, ret, lea_r10_[rip+0x@@ 20@@ c@@ 88], mov_r9_rbx, lea_r8_[rip+0x14@@ 2f@@ 6], or_ecx_0xffffffff, mov_edx_0x2@@ f4, lea_rsi_[rip+0x13@@ 18@@ 4], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], jmp_0xffffffffffffffb5, call_0xfffffffffffea@@ bd@@ 3
endbr64, push_r12, push_rbx, sub_rsp_0x98, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, call_0xffffffffffffff@@ 1f, mov_rbx_rax, call_0xffffffffffffee@@ 67, mov_r8d_eax, mov_rdx_rsp, mov_ecx@@ _0x8@@ 1, lea_rsi_[rip+0x15@@ c@@ 51], mov_rdi_rbx, call_0xfffffffffffffc@@ 8d, mov_r12_rax, test_rax_rax, je_0x23, mov_rax_qword_ptr_[rsp+0x88], xor_rax_qword_ptr_fs:[0x28], jne_0x3c, add_rsp_0x98, pop_rbx, mov_rax_r12, pop_r12, ret, lea_r10_[rip+0x@@ 20@@ b@@ d8], mov_r9_rbx, lea_r8_[rip+0x14@@ 26@@ e], or_ecx_0xffffffff, mov_edx_0x3@@ 00, lea_rsi_[rip+0x13@@ 0@@ d4], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], jmp_0xffffffffffffffb5, call_0xfffffffffffea@@ b@@ 2@@ 3
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, sub_rsp_0x98, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, call_0xffffffffffffe@@ db@@ 6, mov_esi_0x2f, mov_rdi_rbx, mov_r13d_eax, call_0xfffffffffffea@@ 9d@@ 6, test_rax_rax, je_0x5e, mov_r9_rbx, lea_r8_[rip+0x@@ 140@@ 2a], mov_ecx_0xffffffff, mov_edx_0x3@@ 0c, lea_r10_[rip+0x@@ 20@@ b4@@ 1], lea_rsi_[rip+0x13@@ 0@@ 4f], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], xor_r12d_r12d, mov_rax_qword_ptr_[rsp+0x88], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ a5, add_rsp_0x98, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, mov_rdi_rbx, call_0xfffffffffffea@@ 6d@@ d, cmp_rax@@ _0x7f, ja_0x1@@ 14, cmp_byte_ptr_[rbx]_0, jne_0x33, lea_r9_[rip+0x@@ 20@@ ae@@ 2], lea_r8_[rip+0x14@@ 1a@@ 3], mov_ecx_0xffffffff, mov_edx_0x3@@ 16, lea_rsi_[rip+0x12@@ fd@@ f], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], xor_r12d_r12d, jmp_0xffffffffffffff90, mov_edx_r13d, lea_rsi_[rip+0x13@@ 26@@ 5], mov_rdi_rbx, call_0xffffffffffffee@@ 1b, mov_r12d_eax, test_eax_eax, je_0xe1, test_r13d_r13d, je_0x7f, mov_rdi_rbx, call_0xfffffffffffea@@ 67@@ 3, mov_r12_rsp, mov_rdx_rax, mov_r9d_r13d, mov_r8d@@ _0x80, mov_rcx_r12, lea_rsi_[rip+0x13@@ 22@@ c], mov_rdi_rbx, call_0xffffffffffffee@@ 62, test_eax_eax, js_0x@@ db, je_0x4c, lea_rax_[rip+0x20@@ a@@ 5c], cmp_r13d_1, mov_r10_qword_ptr_[r@@ ax], push_r12, lea_rax_[rip+0x13@@ 17@@ 6], lea_r9_[rip+0x@@ 13@@ 16@@ a], push_rbx, cmovne@@ _r9_rax, mov_edx_0x3@@ 25, xor_eax_eax, lea_r8_[rip+0x14@@ 14@@ 2], mov_ecx_4, lea_rsi_[rip+0x12@@ f@@ 3b], mov_edi_7, call_r10, pop_rax, pop_rdx, mov_rbx_r12, mov_rdi_qword_ptr_[rbp+0x@@ 58], call_0xfffffffffffea@@ 5e@@ 5, mov_rdi_rbx, call_0xfffffffffffea@@ 92@@ d, mov_qword_ptr_[rbp+0x@@ 58]_rax, test_rax_rax, je_0x8f, mov_dword_ptr_[rbp+0x@@ 9c]_0, mov_r12d_1, jmp_0xfffffffffffffe@@ be, mov_r9_rbx, lea_r8_[rip+0x13@@ 17@@ a], mov_ecx_0xffffffff, mov_edx_0x3@@ 11, jmp_0xfffffffffffffe@@ 84, lea_r9_[rip+0x@@ 20@@ 9b@@ 9], lea_r8_[rip+0x12@@ d@@ 97], xor_ecx_ecx, mov_edx_0x3@@ 1b, lea_rsi_[rip+0x12@@ eb@@ 9], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], jmp_0xfffffffffffffe@@ 6d, mov_r9_rbx, lea_r8_[rip+0x@@ 140@@ 6e], mov_ecx_0xffffffff, mov_edx_0x3@@ 20, jmp_0xfffffffffffffe@@ 34, call_0xfffffffffffea@@ 8e@@ 7, lea_r10_[rip+0x@@ 20@@ 96@@ b], mov_r9_rbx, lea_r8_[rip+0x@@ 140@@ 99], or_ecx_0xffffffff, mov_edx_0x3@@ 2d, lea_rsi_[rip+0x12@@ e6@@ 7], mov_edi_3, call_qword_ptr_[r10], xor_r12d_r12d, jmp_0xfffffffffffffe@@ 1@@ a
endbr64, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_0x90, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, call_0xffffffffffffeb@@ 54, mov_rdi_qword_ptr_[rbx+0x@@ c0], mov_r13d_eax, call_0xfffffffffffea@@ 4d@@ 5, mov_qword_ptr_[rbx+0x@@ c0]_0, mov_rdi_qword_ptr_[rbx+0x@@ c8], call_0xfffffffffffea@@ 4b@@ e, mov_qword_ptr_[rbx+0x@@ c8]_0, mov_edx_r13d, lea_rsi_[rip+0x15@@ 9@@ 15], mov_rdi_rbp, call_0xffffffffffffec@@ 41, test_eax_eax, je_0x11a, test_r13d_r13d, jne_0x51, mov_rdi_rbp, call_0xfffffffffffea@@ 7d@@ c, mov_qword_ptr_[rbx+0x@@ c0]_rax, test_rax_rax, je_0x1@@ 66, mov_r12d_1, mov_rax_qword_ptr_[rsp+0x88], xor_rax_qword_ptr_fs:[0x28], jne_0x14@@ 4, add_rsp_0x@@ 90, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, ret, mov_rdi_rbp, call_0xfffffffffffea@@ 44@@ d, mov_r12_rsp, mov_rdx_rax, mov_r9d_r13d, mov_r8d@@ _0x8@@ 1, mov_rcx_r12, lea_rsi_[rip+0x15@@ 8@@ 90], mov_rdi_rbp, call_0xffffffffffffec@@ 3c, test_eax_eax, js_0x@@ c5, je_0xffffffffffffff@@ 80, lea_r14_[rip+0x@@ 20@@ 8@@ 32], cmp_r13d_1, mov_r10_qword_ptr_[r@@ 14], push_r12, lea_rax_[rip+0x@@ 12@@ f@@ 4c], lea_r9_[rip+0x@@ 12@@ f@@ 40], push_rbp, cmovne@@ _r9_rax, mov_ecx_4, mov_edx_0x3@@ 4c, lea_r8_[rip+0x13@@ f6@@ 5], lea_rsi_[rip+0x12@@ d@@ 13], mov_edi_7, xor_eax_eax, call_r10, mov_rdi_r12, call_0xfffffffffffea@@ 7@@ 11, pop_rdx, mov_qword_ptr_[rbx+0x@@ c8]_rax, pop_rcx, test_rax_rax, jne_0xffffffffffffff@@ 21, mov_r9_r12, lea_r8_[rip+0x13@@ f@@ 58], or_ecx_0xffffffff, mov_edx_0x3@@ 51, lea_rsi_[rip+0x12@@ cd@@ 6], mov_edi_3, call_qword_ptr_[r@@ 14], xor_r12d_r12d, jmp_0xffffffffffffff15, lea_r9_[rip+0x@@ 20@@ 7a@@ 9], mov_r12d_eax, lea_r8_[rip+0x12@@ b@@ 84], xor_ecx_ecx, mov_edx_0x3@@ 42, lea_rsi_[rip+0x12@@ ca@@ 6], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], jmp_0xfffffffffffffee6, lea_r10_[rip+0x@@ 20@@ 77@@ 9], mov_r9_rbp, lea_r8_[rip+0x13@@ de@@ 7], mov_ecx_0xffffffff, mov_edx_0x3@@ 47, lea_rsi_[rip+0x12@@ c7@@ 3], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], xor_r12d_r12d, jmp_0xfffffffffffffe@@ b0, call_0xfffffffffffea@@ 6b@@ c, lea_r10_[rip+0x@@ 207@@ 40], mov_r9_rbp, lea_r8_[rip+0x13@@ eb@@ e], or_ecx_0xffffffff, mov_edx_0x3@@ 57, lea_rsi_[rip+0x12@@ c@@ 3c], mov_edi_3, call_qword_ptr_[r10], xor_r12d_r12d, jmp_0xfffffffffffffe@@ 7@@ b
endbr64, mov_dword_ptr_[rdi+0x@@ 30]@@ _esi, mov_dword_ptr_[rdi+0x@@ 38]_0, mov_eax_1, ret
endbr64, mov_dword_ptr_[rdi+0x@@ 34]@@ _esi, mov_eax_1, ret
endbr64, mov_dword_ptr_[rdi+0x@@ 30]@@ _esi, mov_dword_ptr_[rdi+0x@@ 3@@ 4]_edx, mov_dword_ptr_[rdi+0x@@ 3@@ 8]_ecx, mov_eax_1, ret
endbr64, mov_dword_ptr_[rdi+0x@@ 3@@ c]_esi, mov_eax_1, ret
endbr64, mov_dword_ptr_[rdi+0x@@ 40]@@ _esi, mov_eax_1, ret
endbr64, mov_dword_ptr_[rdi+0x@@ 4@@ 4]_esi, mov_eax_1, ret
endbr64, mov_dword_ptr_[rdi+0x@@ a@@ c]_1, mov_eax_1, ret
endbr64, push_rbx, mov_rbx_rdi, mov_rdi_rsi, mov_rsi_rdx, mov_rdx_rcx, mov_rcx_r8, call_0xaa@@ bc, test_rax_rax, je_0x34, cmp_qword_ptr_[rbx+0x1@@ 8]_0, je_0x1d, mov_rdx_qword_ptr_[rbx+0x20], mov_qword_ptr_[rdx+0x@@ 20]_rax, mov_qword_ptr_[rbx+0x20]_rax, mov_eax_1, pop_rbx, ret, mov_qword_ptr_[rbx+0x20]_rax, mov_qword_ptr_[rbx+0x18]_rax, mov_eax_1, pop_rbx, ret, lea_r9_[rip+0x@@ 20@@ 6@@ 19], lea_r8_[rip+0x12@@ 9f@@ 7], xor_ecx_ecx, mov_edx_0x3@@ 98, lea_rsi_[rip+0x12@@ b@@ 19], mov_edi_7, call_qword_ptr_[r9], xor_eax_eax, pop_rbx, ret
endbr64, push_r12, push_rbx, mov_rbx_rdi, sub_rsp_0x28, mov_edi_dword_ptr_[rip+0x2@@ 20@@ c@@ 10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x10]_0, mov_eax_dword_ptr_[rip+0x2@@ 20@@ be@@ d], test_edi_edi, je_0x1@@ 5b, mov_r12d_1, test_eax_eax, jle_0x@@ dd, test_rbx_rbx, je_0xf4, lea_rdx_[rsp+0x10], mov_rdi_rbx, call_0xfffffffffffea@@ 58@@ 6, test_eax_eax, jne_0x15@@ 7, sub_rsp_8, push_qword_ptr_[r@@ sp+0x18], lea_r12_[rip+0x@@ 20@@ 57@@ a], mov_ecx_4, mov_edx_0x3@@ da, mov_r9_rbx, lea_r8_[rip+0x13@@ d@@ 16], lea_rsi_[rip+0x12@@ a@@ 74], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ 12], mov_rdi_qword_ptr_[rsp+0x20], call_0xfffffffffffea@@ 4@@ ff, pop_rdx, pop_rcx, test_eax_eax, jns@@ _0x@@ d0, call_0xfffffffffffea@@ 45@@ 0, mov_edi_dword_ptr_[rax], mov_r12_qword_ptr_[r12], call_0xfffffffffffea@@ 26@@ 5, cmp_byte_ptr_[rbx]_0, lea_rdx_[rip+0x12@@ 8d@@ 3], lea_rcx_[rip+0x@@ e@@ 34@@ e], cmove_rdx_rcx, sub_rsp_8, push_rax, lea_rax_[rip+0x@@ 12@@ ce@@ 5], mov_r9_rbx, push_rax, lea_r8_[rip+0x12@@ ac@@ 3], mov_ecx_0xffffffff, push_rdx, lea_rsi_[rip+0x12@@ a0@@ c], mov_edx_0x3@@ e0, mov_edi_3, xor_eax_eax, call_r12, mov_rdi_qword_ptr_[rsp+0x30], add_rsp_0x20, call_0xfffffffffffe9e@@ ef, xor_r12d_r12d, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ f4, add_rsp_0x28, pop_rbx, mov_eax_r12d, pop_r12, ret, lea_rbx_[rip+0x@@ 20@@ 4a@@ 9], mov_edi_7, xor_eax_eax, lea_r8_[rip+0x13@@ c7@@ 3], mov_ecx_4, mov_edx_0x3@@ dd, lea_rsi_[rip+0x12@@ 99@@ f], call_qword_ptr_[r@@ bx], mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffea@@ 4@@ 33, test_eax_eax, js_0x8@@ c, mov_rdi_qword_ptr_[rsp+0x10], mov_r12d_1, call_0xfffffffffffe9e@@ 7b, jmp_0xffffffffffffff96, mov_dword_ptr_[rsp+0xc]_esi, mov_dword_ptr_[rip+0x2@@ 20@@ a@@ 86@@ ]_1, call_0xfffffffffffea@@ 15@@ 2, mov_dword_ptr_[rip+0x2@@ 20@@ a@@ 77@@ ]_eax, mov_esi_dword_ptr_[rsp+0xc], jmp_0xfffffffffffffe@@ 8e, mov_rdi_rbx, call_0xffffffffffffd@@ 74@@ 5, mov_r12d_eax, test_eax_eax, jne_0xfffffffffffffea@@ 2, lea_r9_[rip+0x@@ 20@@ 4@@ 1e], lea_r8_[rip+0x12@@ 7f@@ c], xor_ecx_ecx, mov_edx_0x3@@ d8, lea_rsi_[rip+0x12@@ 9@@ 1e], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], jmp_0xffffffffffffff2f, call_0xfffffffffffea@@ 300, mov_edi_dword_ptr_[rax], mov_r12_qword_ptr_[rbx], call_0xfffffffffffea@@ 11@@ 6, lea_rbx_[rip+0x@@ 12@@ b@@ 9a], lea_rdx_[rip+0x12@@ 7@@ 80], jmp_0xfffffffffffffe@@ b8, call_0xfffffffffffea@@ 33@@ e
endbr64, push_r12, push_rbx, mov_rbx_rdi, sub_rsp_0x28, mov_edi_dword_ptr_[rip+0x2@@ 20@@ 9@@ e0], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x10]_0, mov_eax_dword_ptr_[rip+0x2@@ 20@@ 9b@@ d], test_edi_edi, je_0xb3, mov_r12d_1, test_eax_eax, jle_0x@@ 7f, lea_rdx_[rsp+0x10], mov_rdi_rbx, call_0xfffffffffffea@@ 36@@ 3, test_eax_eax, jne_0x@@ bc, sub_rsp_8, push_qword_ptr_[r@@ sp+0x18], lea_r12_[rip+0x@@ 20@@ 35@@ 7], mov_ecx_4, mov_edx_0x3@@ f5, mov_r9_rbx, lea_r8_[rip+0x13@@ b4@@ b], lea_rsi_[rip+0x12@@ 85@@ 1], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ 12], mov_rsi_qword_ptr_[rsp+0x20], mov_rdi_rbx, call_0xfffffffffffe9c@@ 49, pop_rdx, pop_rcx, test_eax_eax, jns@@ _0x12, call_0xfffffffffffea@@ 22@@ e, mov_edi_dword_ptr_[rax], cmp_edi@@ _0x5f, jne_0xa4, mov_rdi_qword_ptr_[rsp+0x10], mov_r12d_1, call_0xfffffffffffe9d@@ 13, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ eb, add_rsp_0x28, pop_rbx, mov_eax_r12d, pop_r12, ret, mov_dword_ptr_[rsp+0xc]_esi, mov_dword_ptr_[rip+0x2@@ 20@@ 8@@ fe@@ ]_1, call_0xfffffffffffe9@@ fc@@ a, mov_dword_ptr_[rip+0x2@@ 20@@ 8e@@ f@@ ]_eax, mov_esi_dword_ptr_[rsp+0xc], jmp_0xffffffffffffff36, mov_rdi_rbx, call_0xffffffffffffd@@ 5b@@ d, mov_r12d_eax, test_eax_eax, jne_0xffffffffffffff@@ 3d, lea_r9_[rip+0x@@ 20@@ 29@@ 6], lea_r8_[rip+0x12@@ 67@@ 4], xor_ecx_ecx, mov_edx_0x3@@ f3, lea_rsi_[rip+0x12@@ 79@@ 6], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], jmp_0xffffffffffffff79, mov_r12_qword_ptr_[r12], call_0xfffffffffffe@@ 9f@@ 9c, mov_r8_rax, cmp_byte_ptr_[rbx]_0, lea_rdx_[rip+0x@@ e0@@ 89], lea_rax_[rip+0x@@ 12@@ 600], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x12@@ a@@ 27], mov_r9_rbx, push_rcx, lea_r8_[rip+0x12@@ 7f@@ 6], mov_ecx_0xffffffff, push_rax, mov_edx_0x3@@ f8, lea_rsi_[rip+0x12@@ 7@@ 3a], mov_edi_3, xor_eax_eax, call_r12, mov_rdi_qword_ptr_[rsp+0x30], add_rsp_0x20, call_0xfffffffffffe9c@@ 22, xor_r12d_r12d, jmp_0xffffffffffffff0c, call_0xfffffffffffea@@ 17@@ 5
endbr64, ret
endbr64, push_r15, push_r14, push_r13, mov_r13_rcx, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, cmp_byte_ptr_[rip+0x@@ 1e@@ 1b@@ 1]_0, je_0xd, mov_r12d_esi, test_esi_esi, jne_0x1@@ 1a, lea_r14_[rip+0x@@ 20@@ 1a@@ d], cmp_byte_ptr_[rbx]_0, jne_0x52, lea_r8_[rip+0x13@@ 9f@@ 9], mov_ecx_0xffffffff, mov_edx_0x4@@ f4, lea_rsi_[rip+0x12@@ 6a@@ 5], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ 14], xor_r12d_r12d, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x3@@ 92, add_rsp_0x38, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_rbx, call_0xffffffffffffdd@@ 75, mov_ebp_eax, test_eax_eax, js_0x2@@ 3c, mov_edi_eax, lea_rdx_[rsp+8], xor_eax_eax, mov_esi_0x1@@ 26@@ 3, call_0xfffffffffffe9a@@ 08, test_eax_eax, jne_0x1@@ b1, mov_rax_qword_ptr_[rsp+8], sub_rsp_8, push_rax, mov_dword_ptr_[r13]_eax, mov_ecx_4, lea_rsi_[rip+0x12@@ 6@@ 26], mov_r9_rbx, lea_r8_[rip+0x12@@ 92@@ 3], mov_edx_0x5@@ 01, mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ 14], pop_rcx, pop_rsi, mov_r12d_1, mov_edi_ebp, call_0xfffffffffffe9@@ 9a@@ e, test_eax_eax, je_0xffffffffffffff@@ 64, call_0xfffffffffffe9@@ ff@@ 1, mov_edi_dword_ptr_[rax], mov_rbp_qword_ptr_[r@@ 14], call_0xfffffffffffe9e@@ 07, push_rax, lea_rax_[rip+0x@@ 12@@ 1c@@ 5], mov_edx_0x5@@ 05, push_rax, mov_r9_rbx, xor_eax_eax, lea_r8_[rip+0x12@@ 6e@@ d], xor_ecx_ecx, lea_rsi_[rip+0x12@@ 5c@@ 4], mov_edi_7, call_rbp, pop_rax, pop_rdx, jmp_0xffffffffffffff23, mov_ebp_edx, mov_r9d_edx, mov_r8d_esi, xor_eax_eax, lea_rcx_[rip+0x@@ 1e0@@ 7f], lea_rdx_[rip+0x13@@ 8b@@ 8], mov_esi_0x1000, lea_rdi_[rip+0x2@@ 20@@ 6e@@ c], call_0x7@@ 15@@ c, test_eax_eax, js_0x1@@ 95, xor_edx_edx, xor_esi_esi, lea_rdi_[rip+0x2@@ 20@@ 6d@@ 4], xor_eax_eax, call_0xfffffffffffe9d@@ a2, mov_r15d_eax, cmp_eax_-1, je_0x1@@ af, lea_r14_[rsp+0x10], mov_edx_0x1@@ 7, mov_rsi_r14, mov_edi_eax, call_0xfffffffffffe9a@@ 62, test_eax_eax, jle_0x@@ 1e@@ 3, mov_rdi_r14, cdqe, mov_edx_0xa, xor_esi_esi, mov_byte_ptr_[rsp+r@@ ax+0x1@@ 0]_0, call_0xfffffffffffe9d@@ e4, add_eax_eax, sub_rsp_8, push_rax, mov_dword_ptr_[r13]_eax, lea_r14_[rip+0x@@ 2@@ 000@@ d], push_rbp, mov_r9_rbx, lea_r8_[rip+0x12@@ 7f@@ 8], push_r12, mov_ecx_4, mov_edx_0x4@@ e1, lea_rsi_[rip+0x12@@ 50@@ 4], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ 14], mov_r12d_1, add_rsp_0x20, mov_edi_r15d, call_0xfffffffffffe@@ 98@@ 98, test_eax_eax, je_0xfffffffffffffe@@ 4e, call_0xfffffffffffe9e@@ db, mov_edi_dword_ptr_[rax], mov_rbx_qword_ptr_[r@@ 14], call_0xfffffffffffe9c@@ f1, push_rax, lea_rax_[rip+0x@@ 120@@ af], lea_r9_[rip+0x2@@ 20@@ 6@@ 1d], push_rax, lea_r8_[rip+0x12@@ 5d@@ a], xor_ecx_ecx, mov_edx_0x4@@ e6, lea_rsi_[rip+0x12@@ 4a@@ c], mov_edi_7, xor_eax_eax, call_rbx, pop_r9, pop_r10, jmp_0xfffffffffffffe@@ 07, call_0xfffffffffffe9e@@ 90, mov_edi_dword_ptr_[rax], mov_r12_qword_ptr_[r@@ 14], call_0xfffffffffffe9c@@ a6, mov_r8_rax, cmp_byte_ptr_[rbx]_0, lea_rdx_[rip+0x@@ dd@@ 93], lea_rax_[rip+0x@@ 12@@ 30@@ a], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x12@@ 75@@ f], mov_r9_rbx, push_rcx, lea_r8_[rip+0x12@@ 500], mov_ecx_0xffffffff, push_rax, mov_edx_0x4@@ fc, lea_rsi_[rip+0x12@@ 44@@ 4], mov_edi_3, xor_eax_eax, call_r12, mov_dword_ptr_[r13@@ ]_0, add_rsp_0x20, xor_r12d_r12d, jmp_0xfffffffffffffe@@ 26, lea_r8_[rip+0x12@@ 2e@@ e], xor_ecx_ecx, mov_edx_0x4@@ f9, lea_rsi_[rip+0x12@@ 410], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ 14], xor_r12d_r12d, jmp_0xfffffffffffffd@@ 6b, lea_r9_[rip+0x@@ 1fe@@ d9], lea_r8_[rip+0x12@@ 4a@@ a], mov_ecx_0xffffffff, mov_edx_0x4@@ d5, lea_rsi_[rip+0x12@@ 3d@@ 6], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], xor_r12d_r12d, jmp_0xfffffffffffffd@@ 31, call_0xfffffffffffe9d@@ b8, lea_r14_[rip+0x@@ 1fe@@ 9c], mov_edi_dword_ptr_[rax], mov_rbp_qword_ptr_[r@@ 14], call_0xfffffffffffe9b@@ c7, push_rax, lea_rax_[rip+0x@@ 12@@ 6d@@ 9], lea_r8_[rip+0x12@@ 4b@@ 8], push_rax, mov_edi_7, lea_r9_[rip+0x2@@ 20@@ 4e@@ 6], xor_ecx_ecx, mov_edx_0x4@@ eb, lea_rsi_[rip+0x12@@ 37@@ d], xor_eax_eax, call_rbp, pop_rdi, pop_r8, jmp_0xfffffffffffffc@@ b4, call_0xfffffffffffe9d@@ 68, lea_r14_[rip+0x@@ 1fe@@ 4c], mov_edi_dword_ptr_[rax], mov_rbx_qword_ptr_[r@@ 14], call_0xfffffffffffe9b@@ 77, mov_r8_rax, cmp_byte_ptr_[rip+0x2@@ 20@@ 4a@@ 8]_0, lea_rdx_[rip+0x@@ dc@@ 60], lea_rax_[rip+0x@@ 12@@ 1d@@ 7], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x12@@ 60@@ a], lea_r9_[rip+0x2@@ 20@@ 48@@ 2], push_rcx, lea_r8_[rip+0x12@@ 3c@@ 9], mov_ecx_0xffffffff, push_rax, mov_edx_0x4@@ dc, lea_rsi_[rip+0x12@@ 30@@ d], mov_edi_3, xor_eax_eax, call_rbx, xor_r12d_r12d, add_rsp_0x20, jmp_0xfffffffffffffe@@ 0d, call_0xfffffffffffe9d@@ 5@@ 3
endbr64, push_r12, mov_eax_dword_ptr_[rsp+0x18], push_rax, mov_eax_dword_ptr_[rsp+0x18], push_rax, lea_rax_[rip+0x@@ db@@ e8], push_0, push_0, push_rax, push_r9, mov_r9d_r8d, mov_r8d_ecx, mov_ecx_edx, mov_edx_esi, mov_rsi_rdi, xor_edi_edi, call_0xffffffffffffda@@ c3, add_rsp_0x30, pop_r12, ret
endbr64, sub_rsp_8, push_rcx, xor_r9d_r9d, xor_r8d_r8d, push_rdx, xor_ecx_ecx, xor_edx_edx, push_0, push_0, push_rdi, mov_edi_2, push_0, call_0xffffffffffffda@@ 90, add_rsp_0x38, ret
endbr64, sub_rsp_8, push_rdx, lea_rax_[rip+0x@@ db@@ 7f], xor_r9d_r9d, push_rsi, xor_r8d_r8d, mov_rsi_rdi, push_0, xor_ecx_ecx, xor_edx_edx, push_0, mov_edi_1, push_rax, push_0, call_0xffffffffffffda@@ 56, add_rsp_0x38, ret
endbr64, cmp_ecx_-1, je_0x39, sub_rsp_8, push_0, lea_rax_[rip+0x@@ db@@ 39], xor_r9d_r9d, push_0, push_r8, xor_r8d_r8d, push_rcx, mov_ecx_edx, mov_edx_esi, push_rax, mov_rsi_rdi, mov_edi_3, push_0, call_0xffffffffffffda@@ 10, add_rsp_0x38, ret, mov_eax_1, ret
endbr64, lea_rdx_[rip+0x@@ 1ec@@ b5], lea_rsi_[rip+0x14@@ c6@@ e], jmp_0xffffffffffffd@@ 78@@ e
endbr64, lea_rax_[rip+0x@@ 1ec@@ 95], ret
endbr64, test_rdi_rdi, je_7, cmp_byte_ptr_[rdi]_0, jne_0x14, mov_byte_ptr_[rip+0x@@ 1d@@ c@@ 7b@@ ]_0, mov_eax_1, ret, lea_rdx_[rip+0x1d@@ c6@@ 9], xor_esi_esi, jmp_0xffffffffffffd@@ 74@@ 7
endbr64, lea_rax_[rip+0x@@ 1d@@ c5@@ 5], ret
endbr64, push_rbp, test_rdi_rdi, je_0x68, mov_rbp_rdi, call_0xfffffffffffe@@ 98@@ 33, cmp_rax@@ _0xf, jbe_0x@@ 3a, lea_r10_[rip+0x@@ 1fc@@ 41], mov_r9_rbp, xor_eax_eax, lea_r8_[rip+0x12@@ 46@@ 6], mov_ecx_0xffffffff, mov_edx_0x6@@ ad, lea_rsi_[rip+0x12@@ 13@@ 9], mov_edi_3, call_qword_ptr_[r10], xor_eax_eax, pop_rbp, ret, mov_rsi_rbp, lea_rdx_[rax+1], mov_ecx_0x10, lea_rdi_[rip+0x1d@@ bc@@ d], call_0xfffffffffffe@@ 96@@ 8d, mov_eax_1, pop_rbp, ret, lea_r9_[rip+0x@@ 1fb@@ e9], xor_eax_eax, lea_r8_[rip+0x11@@ fc@@ 5], xor_ecx_ecx, mov_edx_0x6@@ aa, lea_rsi_[rip+0x12@@ 0@@ e7], mov_edi_7, call_qword_ptr_[r9], xor_eax_eax, pop_rbp, ret
endbr64, lea_rax_[rip+0x@@ 1d@@ b8@@ 5], ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, lea_r11_[r@@ sp-0x@@ 5@@ 000], sub_rsp_0x1000, or_qword_ptr_[rsp]_0, cmp_rsp@@ _r11, jne_0xfffffffffffffff1, sub_rsp_0x98, mov_qword_ptr_[rsp+8]_rdi, mov_qword_ptr_[rsp+0x10]_rsi, lea_rdi_[rip+0x13@@ b@@ 51], lea_rsi_[rip+0x14@@ ce@@ 3], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x@@ 50@@ 88]_rax, xor_eax_eax, call_0xfffffffffffe9c@@ 87, mov_r13_rax, lea_rbx_[rsp+0x@@ 30@@ 80], test_rax_rax, je_0x3@@ 6c, mov_rdi_r13, call_0xfffffffffffe9b@@ 65, mov_r12d_eax, test_eax_eax, jne_0x2@@ 9b, mov_rdx_r13, mov_esi_0x2000, mov_rdi_rbx, call_0xfffffffffffe9@@ 60@@ a, test_rax_rax, je_0x2@@ 82, lea_rbp_[rsp+0x@@ 20@@ 70], lea_r15_[r@@ sp+0x10@@ 60], xor_eax_eax, lea_rcx_[rsp+0x@@ 2c], lea_rdx_[rsp+0x28], mov_r9_rbp, mov_r8_r15, lea_rsi_[rip+0x12@@ 33@@ 7], mov_rdi_rbx, call_0xfffffffffffe@@ 94@@ 60, cmp_eax_3, jle_0x@@ 118, mov_r14d_dword_ptr_[rsp+0x@@ 28], test_r14d_r14d, jne_0x10@@ 2, lea_rsi_[rip+0x12@@ 32@@ d], mov_rdi_rbx, call_0xfffffffffffe9@@ 80@@ a, test_rax_rax, je_0xea, mov_edi_6, mov_qword_ptr_[rsp+0x18]_rax, call_0xffffffffffffdc@@ f2, mov_r11_rax, test_rax_rax, je_0x2@@ 7f, mov_rcx_qword_ptr_[rsp+0x18], mov_eax_1, movzx_edx_byte_ptr_[r@@ cx+0x@@ c], lea_rsi_[r@@ sp+0x10@@ 5f], test_dl@@ _0xdf, jne_0x17, jmp_0x25, inc_rax, cmp_rax@@ _0x1@@ 001, je_0x2@@ 7f, mov_byte_ptr_[rsi@@ +rax]_dl, movzx_edx_byte_ptr_[r@@ cx+r@@ ax+0xc], mov_r14d_eax, test_dl@@ _0xdf, jne_0xffffffffffffffe3, mov_r9d_r14d, lea_r14_[rsp+0x@@ 60], mov_rsi_r14, mov_rdi_r15, mov_qword_ptr_[rsp+0x18]_r11, mov_byte_ptr_[rsp+r@@ 9+0x1@@ 0@@ 60]_0, call_0xffffffffffffbe@@ 15, mov_r11_qword_ptr_[rsp+0x18], mov_rsi_r14, mov_rdi_r11, mov_byte_ptr_[rsp+0x@@ e0]_0, call_0xffffffffffffeb@@ 3d, test_eax_eax, mov_r11_qword_ptr_[rsp+0x18], jne_0x@@ d9, mov_rdi_r11, call_0x94@@ e8, mov_rsi_r14, mov_rdi_rbp, call_0xffffffffffffb@@ dd@@ d, mov_r8_qword_ptr_[rsp+0x10], mov_edx_dword_ptr_[rsp+0x2c], mov_esi_dword_ptr_[rsp+0x@@ 28], mov_rax_qword_ptr_[rsp+8], mov_rcx_r14, mov_rdi_rbx, call_rax, test_eax_eax, jne_0xfffffffffffffea@@ 4, lea_rbx_[rip+0x@@ 1f@@ 9c@@ f], jmp_0x37, lea_r14_[rsp+0x@@ 60], jmp_0xffffffffffffffc0, lea_rbx_[rip+0x@@ 1f@@ 9b@@ 9], lea_r8_[rip+0x13@@ 23@@ 2], mov_ecx_0xffffffff, mov_edx_0x6@@ dc, lea_rsi_[rip+0x11@@ eb@@ 6], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ bx], xor_ecx_ecx, mov_edi_7, xor_eax_eax, lea_r8_[rip+0x@@ 11d@@ 6d], mov_edx_0x7@@ 16, lea_rsi_[rip+0x11@@ e@@ 91], call_qword_ptr_[r@@ bx], mov_rdi_r13, call_0xfffffffffffe9@@ 9d@@ 7, test_eax_eax, jne_0x@@ f6, mov_rax_qword_ptr_[rsp+0x@@ 50@@ 88], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ 27, add_rsp@@ _0x5@@ 0@@ 98, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_r11, call_0x9c@@ 25, test_eax_eax, mov_r11_qword_ptr_[rsp+0x18], je_0xffffffffffffff@@ 1e, mov_rdi_r11, call_0x9f@@ 20, test_eax_eax, mov_r11_qword_ptr_[rsp+0x18], je_0xffffffffffffff@@ 09, mov_rdi_r11, lea_rsi_[rsp+0x30], call_0x9@@ 5d@@ 6, test_eax_eax, mov_r11_qword_ptr_[rsp+0x18], je_0xfffffffffffffe@@ ef, mov_eax_dword_ptr_[rsp+0x4c], lea_r10_[rip+0x@@ 1f@@ 8e@@ 9], push_rax, lea_r8_[rip+0x13@@ 1a@@ 9], xor_ecx_ecx, mov_eax_dword_ptr_[rsp+0x50], mov_edx_0x6@@ f2, push_rax, lea_rsi_[rip+0x1@@ 1d@@ e3], mov_edi_7, push_r14, mov_eax_dword_ptr_[rsp+0x44], push_rax, xor_eax_eax, mov_r9d_dword_ptr_[rsp+0x@@ 48], call_qword_ptr_[r10], mov_eax_dword_ptr_[rsp+0x68], mov_dword_ptr_[rsp+0x48]_eax, mov_eax_dword_ptr_[rsp+0x@@ 6c], mov_dword_ptr_[rsp+0x4c]_eax, add_rsp_0x20, mov_r11_qword_ptr_[rsp+0x18], jmp_0xfffffffffffffe@@ 94, mov_rdi_r13, mov_r12d_1, call_0xfffffffffffe@@ 98@@ e7, test_eax_eax, je_0xffffffffffffff@@ 16, lea_rax_[rip+0x@@ 1f@@ 87@@ 3], mov_rbx_qword_ptr_[rax], call_0xfffffffffffe@@ 97@@ 80, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 95@@ 99, sub_rsp_8, push_rax, lea_rax_[rip+0x@@ 11@@ e@@ 29], lea_r9_[rip+0x@@ 13@@ 8@@ 31], push_rax, lea_rax_[rip+0x@@ 11@@ bf@@ 6], lea_r8_[rip+0x11@@ e0@@ 1], push_rax, mov_ecx_0xffffffff, mov_edx_0x7@@ 1c, lea_rsi_[rip+0x1@@ 1d@@ 45], mov_edi_3, xor_eax_eax, call_rbx, add_rsp_0x20, jmp_0xfffffffffffffeb9, lea_rbx_[rip+0x@@ 1f@@ 8@@ 11], lea_r8_[rip+0x@@ 130@@ aa], mov_ecx_0xffffffff, mov_edx_0x6@@ e4, lea_rsi_[rip+0x1@@ 1d@@ 0e], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ bx], jmp_0xfffffffffffffe@@ 58, mov_r14d@@ _0x1000, jmp_0xfffffffffffffd@@ 91, call_0xfffffffffffe@@ 96@@ e8, mov_edi_dword_ptr_[rax], lea_rax_[rip+0x@@ 1f7@@ ca], mov_rbx_qword_ptr_[rax], cmp_edi_2, je_0x50, call_0xfffffffffffe@@ 94@@ f2, sub_rsp_8, push_rax, lea_rax_[rip+0x@@ 11@@ fff@@ ], lea_r9_[rip+0x@@ 13@@ 78@@ a], push_rax, lea_rax_[rip+0x@@ 11@@ b4@@ f], lea_r8_[rip+0x@@ 11d@@ 5a], push_rax, mov_ecx_0xffffffff, mov_edx_0x7@@ 0d, lea_rsi_[rip+0x11@@ c9@@ e], mov_edi_3, xor_eax_eax, call_rbx, xor_r12d_r12d, add_rsp_0x20, jmp_0xfffffffffffffe@@ 0f, mov_edi_2, call_0xfffffffffffe@@ 94@@ 9f, push_rax, lea_rax_[rip+0x@@ 11@@ fb@@ 0], mov_edx_0x7@@ 0f, push_rax, lea_r9_[rip+0x@@ 13@@ 7@@ 35], xor_eax_eax, lea_r8_[rip+0x@@ 11d@@ 81], xor_ecx_ecx, lea_rsi_[rip+0x11@@ c@@ 58], mov_edi_7, call_rbx, pop_rax, pop_rdx, xor_r12d_r12d, jmp_0xfffffffffffffd@@ cd, call_0xfffffffffffe@@ 96@@ a@@ 2
endbr64, xor_eax_eax, cmp_byte_ptr_[rip+0x@@ 1d@@ 70@@ 3]_0, jne_@@ 3, ret, push_r15, push_r14, mov_r14_rcx, push_r13, mov_r13_r8, push_r12, mov_r12d_esi, push_rbp, mov_ebp_edi, push_rbx, mov_ebx_edx, sub_rsp_0x28, call_0x9@@ 17@@ 5, test_ebx_ebx, jne_0xa, test_eax_eax, jne_0x1@@ a2, mov_edi@@ _0x1000, call_0xfffffffffffe9@@ 11@@ f, mov_r15_rax, test_rax_rax, je_0x6@@ 6c, mov_edi@@ _0x1000, call_0xfffffffffffe9@@ 109, mov_rbx_rax, test_rax_rax, je_0x6@@ 56, mov_r8d_ebp, lea_rcx_[rip+0x@@ 1d@@ 69@@ e], lea_rdx_[rip+0x11@@ f@@ 44], mov_r9d_r12d, mov_esi_0x1000, mov_rdi_r15, xor_eax_eax, call_0x67@@ 7a, lea_r8_[rip+0x@@ 130@@ 76], mov_ecx_0xffffffff, mov_edx_0x7@@ d6, test_eax_eax, js@@ _0x68, mov_edx_0x@@ fff, mov_rsi_rbx, mov_rdi_r15, call_0xfffffffffffe@@ 94@@ 55, test_rax_rax, js_0x@@ 9d, mov_byte_ptr_[rbx@@ +rax]_0, mov_esi_0x2f, mov_rdi_rbx, mov_qword_ptr_[rsp+8]_rax, call_0xfffffffffffe9@@ 2e@@ 6, test_rax_rax, mov_rdx_qword_ptr_[rsp+8], je_0x3@@ e9, lea_rsi_[rax+1], mov_rax_rbx, sub_rax_rsi, lea_rax_[rax@@ +rdx+1], cmp_r13_rax, jae_0x@@ 2@@ 11, lea_r8_[rip+0x@@ 130@@ 74], mov_ecx_0xffffffff, mov_edx_0x7@@ ee, lea_r9_[rip+0x@@ 1f@@ 6@@ 13], xor_eax_eax, lea_rsi_[rip+0x11@@ b@@ 1f], mov_edi_3, call_qword_ptr_[r9], xor_eax_eax, mov_rdi_rbx, mov_dword_ptr_[rsp+8]_eax, call_0xfffffffffffe9@@ 1c@@ 9, mov_rdi_r15, call_0xfffffffffffe9@@ 1c@@ 1, mov_eax_dword_ptr_[rsp+8], add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xfffffffffffe@@ 94@@ e0, mov_edi_dword_ptr_[rax], lea_rax_[rip+0x@@ 1f@@ 5c@@ 2], mov_r10_qword_ptr_[r@@ ax], mov_qword_ptr_[rsp+8]_r10, cmp_edi_2, je_0x2@@ bf, call_0xfffffffffffe9@@ 2e@@ 1, mov_r8_rax, cmp_byte_ptr_[r15]_0, lea_rdx_[rip+0xd@@ 3c@@ d], lea_rax_[rip+0x@@ 11@@ 94@@ 4], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x@@ 11@@ e@@ 35], mov_r9_r15, push_rcx, lea_r8_[rip+0x11@@ b@@ 3a], mov_ecx_0xffffffff, push_rax, mov_edx_0x7@@ dc, xor_eax_eax, mov_r10_qword_ptr_[rsp+0x28], lea_rsi_[rip+0x11@@ a7@@ 7], mov_edi_3, call_r10, add_rsp_0x20, xor_eax_eax, jmp_0xffffffffffffff54, mov_edi@@ _0x1000, call_0xfffffffffffe@@ 8f@@ 83, mov_rbx_rax, test_rax_rax, je_0x5@@ 00, mov_edi@@ _0x1000, call_0xfffffffffffe@@ 8f@@ 6d, mov_r15_rax, test_rax_rax, je_0x4@@ ea, xor_eax_eax, mov_r9d_r12d, mov_r8d_ebp, lea_rcx_[rip+0x@@ 1d@@ 4@@ fd], lea_rdx_[rip+0x@@ 11d@@ 83], mov_esi_0x1000, mov_rdi_rbx, call_0x6@@ 5d@@ e, test_eax_eax, js_0x2@@ 57, lea_rsi_[rip+0x14@@ 66@@ 3], mov_rdi_rbx, call_0xfffffffffffe@@ 96@@ 17, test_rax_rax, je_0x2@@ b7, mov_rdx_rax, mov_esi_0x1000, mov_rdi_r15, mov_qword_ptr_[rsp+8]_rax, call_0xfffffffffffe8@@ fb@@ 9, test_rax_rax, mov_r10_qword_ptr_[rsp+8], mov_rdx_r15, je_0x1@@ 39, mov_ecx_dword_ptr_[rdx], add_rdx_4, lea_eax_[rcx-0x1010101], not_ecx, and_eax_ecx, and_eax_0x80808080, je_0xffffffffffffffeb, mov_ecx_eax, shr_ecx_0x10, test_eax_0x8080, cmove_eax_ecx, lea_rcx_[rdx+2], cmove_rdx_rcx, mov_esi_eax, add_sil@@ _al, sbb_rdx_3, sub_rdx@@ _r15, cmp_r13@@ _rdx, jb@@ _0x70, test_rdx_rdx, lea_rax_[r@@ 15@@ +rdx@@ -1], cmove_rax@@ _r15, mov_rdi_r14, mov_byte_ptr_[rax]_0, mov_rsi_r15, mov_qword_ptr_[rsp+8]_r10, call_0xfffffffffffe9@@ 3f@@ c, mov_r10_qword_ptr_[rsp+8], mov_rdi_r10, call_0xfffffffffffe9@@ 4a@@ f, test_eax_eax, jne_0x2@@ a8, mov_rdi_r15, call_0xfffffffffffe9@@ 00@@ f, mov_rdi_rbx, call_0xfffffffffffe9@@ 00@@ 7, mov_eax_1, jmp_0xfffffffffffffe@@ 45, mov_rdi_r14, call_0xfffffffffffe9@@ 3b@@ d, mov_eax_1, jmp_0xfffffffffffffe@@ 13, lea_rax_[rip+0x@@ 1f@@ 40@@ 1], lea_r8_[rip+0x12@@ d7@@ 2], mov_qword_ptr_[rsp+8]_rax, mov_r11_rax, mov_ecx_0xffffffff, mov_edx_0x7@@ 44, lea_rsi_[rip+0x11@@ 8f@@ 6], mov_edi_3, xor_eax_eax, mov_qword_ptr_[rsp+0x10]_r10, call_qword_ptr_[r@@ 11], mov_r10_qword_ptr_[rsp+0x10], mov_rdi_r10, call_0xfffffffffffe@@ 94@@ 2a, test_eax_eax, jne_0x2@@ 84, mov_rdi_r15, call_0xfffffffffffe@@ 8f@@ 85, mov_rdi_rbx, call_0xfffffffffffe8@@ f7@@ d, mov_rbx_qword_ptr_[rsp+8], lea_r8_[rip+0x11@@ 78@@ 1], xor_ecx_ecx, mov_edx@@ _0x80@@ b, lea_rsi_[rip+0x11@@ 8a@@ 3], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], jmp_0xfffffffffffffc@@ a1, lea_rax_[rip+0x@@ 1f@@ 37@@ 9], mov_qword_ptr_[rsp+0x18]_r10, mov_r11_qword_ptr_[r@@ ax], mov_qword_ptr_[rsp+8]_rax, mov_qword_ptr_[rsp+0x10]_r11, call_0xfffffffffffe9@@ 27@@ 7, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 90@@ 90, mov_r8_rax, cmp_byte_ptr_[rbx]_0, lea_rdx_[rip+0xd@@ 17@@ d], lea_rax_[rip+0x@@ 11@@ 6f@@ 4], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x@@ 11@@ bc@@ d], mov_r9_rbx, push_rcx, lea_r8_[rip+0x11@@ 8@@ ea], mov_ecx_0xffffffff, push_rax, mov_edx_0x7@@ 3d, lea_rsi_[rip+0x11@@ 8@@ 2e], mov_r11@@ _qword_ptr_[rsp+0x30], mov_edi_3, xor_eax_eax, call@@ _r11, mov_r10_qword_ptr_[rsp+0x38], add_rsp_0x20, jmp_0xffffffffffffff34, mov_edi_2, call_0xfffffffffffe@@ 90@@ 23, push_rax, lea_rax_[rip+0x@@ 11@@ b@@ 95], mov_r9_r15, push_rax, lea_r8_[rip+0x11@@ 9@@ 10], xor_ecx_ecx, mov_r10_qword_ptr_[rsp+0x18], mov_edx_0x7@@ de, lea_rsi_[rip+0x11@@ 7@@ dd], mov_edi_7, xor_eax_eax, call_r10, mov_esi_r12d, mov_edi_ebp, mov_rcx_r13, mov_rdx_r14, call_0xffffffffffffbd@@ e3, pop_rsi, pop_rdi, jmp_0xfffffffffffffc@@ ac, lea_rax_[rip+0x@@ 1f@@ 29@@ 9], lea_r8_[rip+0x12@@ be@@ 2], mov_qword_ptr_[rsp+8]_rax, mov_r11_rax, mov_ecx_0xffffffff, mov_edx_0x7@@ 30, lea_rsi_[rip+0x11@@ 78@@ e], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ 11], jmp_0xfffffffffffffeb7, lea_r10_[rip+0x@@ 1f@@ 25@@ 9], mov_r9_rbx, lea_r8_[rip+0x12@@ c6@@ 7], mov_ecx_0xffffffff, mov_edx_0x7@@ e7, lea_rsi_[rip+0x11@@ 75@@ 3], mov_edi_3, call_qword_ptr_[r10], xor_eax_eax, jmp_0xfffffffffffffc@@ 34, call_0xfffffffffffe9@@ 138, mov_edi_dword_ptr_[rax], lea_rax_[rip+0x@@ 1f@@ 21@@ a], mov_r10_qword_ptr_[r@@ ax], mov_qword_ptr_[rsp+8]_rax, mov_qword_ptr_[rsp+0x10]_r10, cmp_edi_2, je_0x1@@ 30, call_0xfffffffffffe@@ 8f@@ 34, mov_r8_rax, cmp_byte_ptr_[rbx]_0, lea_rdx_[rip+0x@@ d0@@ 21], lea_rax_[rip+0x@@ 115@@ 98], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x@@ 11@@ a@@ 28], mov_r9_rbx, push_rcx, lea_r8_[rip+0x11@@ 78@@ e], mov_ecx_0xffffffff, push_rax, mov_edx_0x7@@ 36, lea_rsi_[rip+0x11@@ 6d@@ 2], mov_r10_qword_ptr_[rsp+0x30], mov_edi_3, xor_eax_eax, call_r10, add_rsp_0x20, jmp_0xfffffffffffffd@@ f2, lea_rax_[rip+0x@@ 1f@@ 19@@ 9], mov_rbp_qword_ptr_[rax], call_0xfffffffffffe@@ 90@@ a6, mov_edi_dword_ptr_[rax], call_0xfffffffffffe8@@ eb@@ f, cmp_byte_ptr_[rbx]_0, jne_0x@@ f0, sub_rsp_8, push_rax, lea_rax_[rip+0x@@ 11@@ 74@@ 6], push_rax, lea_rax_[rip+0x@@ cf@@ 9c], push_rax, mov_r9_rbx, lea_r8_[rip+0x11@@ 7@@ 21], mov_ecx_0xffffffff, mov_edx_0x7@@ 4d, lea_rsi_[rip+0x11@@ 66@@ 6], mov_edi_3, xor_eax_eax, call_rbp, add_rsp_0x20, jmp_0xfffffffffffffd@@ 02, mov_rax_qword_ptr_[rsp+8], mov_rax_qword_ptr_[rax], mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffe@@ 90@@ 42, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 8e@@ 5b, cmp_byte_ptr_[rbx]_0, je_0xa5, push_rdx, push_rax, lea_rax_[rip+0x@@ 11@@ 6e@@ 5], push_rax, lea_rax_[rip+0x@@ 114@@ b9], push_rax, mov_r9_rbx, lea_r8_[rip+0x11@@ 6c0], mov_r11@@ _qword_ptr_[rsp+0x30], or_ecx_0xffffffff, mov_edx_0x7@@ 4d, lea_rsi_[rip+0x11@@ 60@@ 2], mov_edi_3, xor_eax_eax, call@@ _r11, add_rsp_0x20, jmp_0xfffffffffffffd@@ 27, mov_edi_2, call_0xfffffffffffe@@ 8e@@ 05, push_rax, lea_rax_[rip+0x@@ 11@@ 9@@ 16], mov_r9_rbx, push_rax, lea_r8_[rip+0x11@@ 6f@@ 2], xor_ecx_ecx, mov_r10_qword_ptr_[rsp+0x20], mov_edx_0x7@@ 38, lea_rsi_[rip+0x1@@ 15@@ bf], mov_edi_7, xor_eax_eax, call_r10, pop_r8, pop_r9, jmp_0xfffffffffffffc@@ e4, sub_rsp_8, push_rax, lea_rax_[rip+0x@@ 11@@ 65@@ c], push_rax, lea_rax_[rip+0x@@ 114@@ 30], jmp_0xffffffffffffff16, push_rcx, push_rax, lea_rax_[rip+0x@@ 11@@ 64@@ 6], push_rax, lea_rax_[rip+0x@@ ce@@ 9c], jmp_0xffffffffffffff61, lea_r9_[rip+0x@@ 1f0@@ 61], xor_eax_eax, lea_r8_[rip+0x12@@ a0@@ 0], or_ecx_0xffffffff, mov_edx_0x7@@ d0, lea_rsi_[rip+0x1@@ 15@@ 5e], mov_edi_3, call_qword_ptr_[r9], xor_ebx_ebx, xor_eax_eax, jmp_0xfffffffffffffa@@ 3d, lea_rax_[rip+0x@@ 1f0@@ 31], lea_r8_[rip+0x12@@ 93@@ a], mov_qword_ptr_[rsp+8]_rax, mov_r11_rax, or_ecx_0xffffffff, mov_edx_0x7@@ 2a, lea_rsi_[rip+0x1@@ 15@@ 28], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ 11], xor_r15d_r15d, jmp_0xfffffffffffffc@@ 4@@ e
endbr64, mov_edi_esi, cmp_dword_ptr_[r@@ 8]_esi, je_0xf, mov_eax_1, ret, mov_esi_edx, cmp_dword_ptr_[r@@ 8+@@ 4]_edx, jne_0xffffffffffffffed, sub_rsp_8, mov_rdx_rcx, mov_rcx_r8, call_0xfffffffffffffe@@ f6, mov_eax_1, add_rsp_8, ret
endbr64, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0xa8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x10@@ 98]_rax, xor_eax_eax, cmp_byte_ptr_[rip+0x@@ 1c@@ e@@ 9d@@ ]_0, jne_0x2d, xor_eax_eax, mov_rbx_qword_ptr_[r@@ sp+0x10@@ 98], xor_rbx_qword_ptr_fs:[0x28], jne_0x@@ f5, add_rsp_0x10@@ a8, pop_rbx, pop_rbp, ret, lea_rbp_[rsp+0x@@ 90], mov_r9d_esi, mov_r8d_edi, xor_eax_eax, lea_rcx_[rip+0x@@ 1c@@ e5@@ 9], lea_rdx_[rip+0x11@@ 7@@ 1a], mov_esi_0x1000, mov_rdi_rbp, call_0x5f@@ 3a, test_eax_eax, js_0x6@@ b, mov_rdx_rsp, mov_rsi_rbp, mov_edi_1, call_0xfffffffffffe8@@ ed@@ 6, test_eax_eax, je_0x87, call_0xfffffffffffe@@ 8d@@ 49, mov_edi_dword_ptr_[rax], cmp_edi_2, je_0xffffffffffffff@@ 84, lea_rax_[rip+0x@@ 1e@@ e@@ 26], mov_rbx_qword_ptr_[rax], call_0xfffffffffffe@@ 8b@@ 53, push_rax, lea_rax_[rip+0x@@ 11@@ 6e@@ 8], mov_edx_0x8@@ 25, push_rax, mov_r9_rbp, xor_eax_eax, lea_r8_[rip+0x@@ 114@@ 39], xor_ecx_ecx, lea_rsi_[rip+0x1@@ 13@@ 10], mov_edi_7, call_rbx, pop_rax, pop_rdx, xor_eax_eax, jmp_0xffffffffffffff47, lea_r9_[rip+0x@@ 1e@@ de@@ 1], lea_r8_[rip+0x12@@ 88@@ a], xor_ecx_ecx, mov_edx_0x8@@ 1f, lea_rsi_[rip+0x1@@ 12@@ e1], mov_edi_0x84, xor_eax_eax, call_qword_ptr_[r9], jmp_0xffffffffffffff17, mov_rdi_rbp, call_0x5@@ 54@@ 5, test_eax_eax, sete_al, movzx_eax_al, jmp_0xfffffffffffffeff, call_0xfffffffffffe@@ 8d@@ 1@@ 3
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0xb8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x20@@ a8]_rax, xor_eax_eax, mov_ebp_edi, mov_dword_ptr_[rsp+4]@@ _edi, mov_dword_ptr_[rsp+8]_esi, mov_r12d_esi, lea_rdi_[rip-0x@@ 1e0], lea_rsi_[rsp+4], mov_dword_ptr_[rsp+0xc]_0, call_0xfffffffffffff@@ 18@@ 3, test_eax_eax, jne_0x26, lea_r9_[rip+0x@@ 1e@@ d@@ 23], lea_r8_[rip+0x11@@ 101], xor_ecx_ecx, mov_edx_0x8@@ 7d, lea_rsi_[rip+0x1@@ 12@@ 23], mov_edi_7, call_qword_ptr_[r9], mov_r9d_dword_ptr_[rsp+0xc], mov_r13d_1, test_r9d_r9d, je_0x30, mov_rax_qword_ptr_[rsp+0x@@ 20@@ a8], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ 80, add_rsp@@ _0x20@@ b8, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, ret, lea_rbx_[rsp+0x@@ a0], mov_r8d@@ _0x1000, mov_rcx_rbx, mov_edx_1, mov_esi_r12d, mov_edi_ebp, call_0xfffffffffffff58@@ d, mov_r13d_eax, test_eax_eax, je_0xffffffffffffff@@ ad, lea_rbp_[r@@ sp+0x10@@ a0], xor_eax_eax, lea_rcx_[rip+0x@@ 1c@@ c@@ 80], lea_rdx_[rip+0x@@ 115@@ 60], mov_esi_0x1000, mov_rdi_rbp, call_0x5d@@ 61, test_eax_eax, js_0x@@ da, mov_rdi_rbp, call_0xfffffffffffe@@ 88@@ 91, mov_r12_rax, lea_r13_[rsp+0x10], test_rax_rax, je_0x1@@ 61, mov_rdi_r12, call_0xfffffffffffe@@ 8e@@ 85, test_rax_rax, je_0xed, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x2e, lea_r8_[r@@ ax+0x13], je_0xffffffffffffffe6, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x2@@ e@@ 2e, je_0xc6, xor_eax_eax, mov_r9_rbx, lea_rcx_[rip+0x@@ 1c@@ c@@ 14], lea_rdx_[rip+0x@@ 114@@ f9], mov_esi_0x1000, mov_rdi_rbp, call_0x5c@@ f5, test_eax_eax, js_0x1@@ 66, mov_rdx_r13, mov_rsi_rbp, mov_edi_1, call_0xfffffffffffe@@ 8c@@ 8d, test_eax_eax, je_0x1@@ 86, call_0xfffffffffffe@@ 8b@@ 00, mov_edi_dword_ptr_[rax], cmp_edi_2, je_0xffffffffffffff@@ 8e, lea_rax_[rip+0x@@ 1eb@@ dd], mov_r13_qword_ptr_[rax], call_0xfffffffffffe8@@ 90@@ a, push_rax, lea_rax_[rip+0x@@ 114@@ 9f], xor_ecx_ecx, push_rax, lea_rsi_[rip+0x1@@ 10@@ d8], mov_r9_rbp, lea_r8_[rip+0x11@@ 1e@@ e], mov_edx_0x8@@ 4f, mov_edi_7, xor_eax_eax, call_r13, pop_rcx, pop_rsi, xor_r13d_r13d, jmp_0x48, lea_r9_[rip+0x@@ 1eb@@ 99], lea_r8_[rip+0x12@@ 64@@ 2], xor_ecx_ecx, mov_edx_0x8@@ 35, lea_rsi_[rip+0x1@@ 10@@ 99], mov_edi_0x84, xor_eax_eax, call_qword_ptr_[r9], xor_r13d_r13d, jmp_0xfffffffffffffe@@ 81, cmp_byte_ptr_[r@@ 8+@@ 2]_0, je_0xffffffffffffff@@ 13, jmp_0xffffffffffffff35, xor_r13d_r13d, mov_rdi_r12, call_0xfffffffffffe@@ 8c@@ 2a, test_eax_eax, je_0xfffffffffffffe@@ 5d, lea_rax_[rip+0x@@ 1e@@ b4@@ 6], mov_rbp_qword_ptr_[rax], call_0xfffffffffffe8a@@ 53, mov_edi_dword_ptr_[rax], call_0xfffffffffffe8@@ 86@@ c, push_rax, lea_rax_[rip+0x@@ 11@@ 1e0], mov_edx_0x8@@ 55, push_rax, mov_r9_rbx, xor_eax_eax, lea_r8_[rip+0x11@@ 15@@ 2], xor_ecx_ecx, lea_rsi_[rip+0x1@@ 10@@ 29], mov_edi_7, call_rbp, pop_rax, pop_rdx, jmp_0xfffffffffffffe@@ 15, call_0xfffffffffffe8a@@ 10, mov_edi_dword_ptr_[rax], xor_r13d_r13d, cmp_edi_2, je_0xfffffffffffffd@@ fd, lea_rax_[rip+0x@@ 1ea@@ e6], mov_rbx_qword_ptr_[rax], call_0xfffffffffffe@@ 88@@ 13, push_rax, lea_rax_[rip+0x@@ 110@@ d4], lea_r8_[rip+0x11@@ 10@@ 4], push_rax, mov_edi_7, mov_r9_rbp, xor_ecx_ecx, mov_edx_0x8@@ 3b, lea_rsi_[rip+0x10@@ fc@@ d], xor_eax_eax, call_rbx, pop_rdi, pop_r8, jmp_0xfffffffffffffd@@ bb, lea_r9_[rip+0x@@ 1ea@@ a1], lea_r8_[rip+0x12@@ 54@@ a], xor_ecx_ecx, mov_edx_0x8@@ 45, lea_rsi_[rip+0x10@@ fa@@ 1], mov_edi_0x84, xor_eax_eax, call_qword_ptr_[r9], xor_r13d_r13d, jmp_0xffffffffffffff22, mov_r13d_1, jmp_0xffffffffffffff0d, call_0xfffffffffffe8@@ 9d@@ 5
endbr64, push_r12, mov_r12_rdi, mov_edi@@ _0xf, push_rbp, sub_rsp_8, call_0xffffffffffffcc@@ 9d, test_rax_rax, je_0x55, mov_rbp_rax, test_r12_r12, je_0x11, mov_rsi_r12, mov_rdi_rax, call_0xffffffffffffdb@@ 55, test_eax_eax, je_0xe, mov_rdi_rbp, call_0x8d@@ 19, test_eax_eax, jne_0x22, xor_r12d_r12d, mov_rdi_rbp, call_0x84@@ fa, add_rsp_8, pop_rbp, mov_eax_r12d, pop_r12, ret, mov_rdi_rbp, call_0x8@@ ffd, mov_r12d_eax, jmp_0xffffffffffffffd8, lea_r9_[rip+0x@@ 1e@@ 9e@@ 9], xor_eax_eax, lea_r8_[rip+0x10@@ dc@@ 5], xor_ecx_ecx, mov_edx_0x8@@ 93, lea_rsi_[rip+0x10@@ ee@@ 7], mov_edi_7, call_qword_ptr_[r9], add_rsp_8, xor_r12d_r12d, pop_rbp, mov_eax_r12d, pop_r12, ret
endbr64, push_r13, mov_r13_rdi, mov_edi@@ _9, push_r12, mov_r12_rsi, push_rbp, call_0xffffffffffffc@@ be@@ c, test_rax_rax, je_0x6c, mov_rdi_rax, mov_rbp_rax, call_0x8f@@ 8c, test_eax_eax, je_0x2d, mov_rdx_r12, mov_rsi_r13, mov_rdi_rbp, call_0x8@@ 4d@@ a, xor_r12d_r12d, mov_rdi_rbp, test_eax_eax, setne@@ _r12b, call_0x8@@ 44@@ 9, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, lea_r9_[rip+0x@@ 1e@@ 95@@ 1], lea_r8_[rip+0x@@ 112@@ 31], mov_ecx_0xffffffff, mov_edx_0x8@@ ab, lea_rsi_[rip+0x10@@ e4@@ e], mov_edi_3, call_qword_ptr_[r9], jmp_0xffffffffffffffae, lea_r9_[rip+0x@@ 1e@@ 92@@ 1], xor_eax_eax, lea_r8_[rip+0x10@@ c@@ fd], xor_ecx_ecx, mov_edx_0x8@@ a8, lea_rsi_[rip+0x10@@ e@@ 1f], mov_edi_7, call_qword_ptr_[r9], xor_r12d_r12d, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret
endbr64, push_rbx, mov_ebx_edi, call_0xffffffffffffc0@@ 99, mov_dword_ptr_[rip+0x@@ 1c@@ 8@@ 9a@@ ]_ebx, pop_rbx, ret
endbr64, sub_rsp_8, call_0xffffffffffffc0@@ 78, mov_edi_dword_ptr_[rip+0x2@@ 1e@@ f0@@ d], test_edi_edi, jne_0xc, mov_esi_dword_ptr_[rip+0x@@ 1c@@ 87@@ 7], test_esi_esi, jne_0x11, xor_eax_eax, add_rsp_8, ret, call_0xb@@ 5c0, test_eax_eax, je_0xffffffffffffffea, mov_ecx_dword_ptr_[rip+0x@@ 1c@@ 85@@ 1], test_ecx_ecx, je_0xffffffffffffffe0, mov_edx_dword_ptr_[rip+0x@@ 1c@@ 84@@ 3], xor_eax_eax, test_edx_edx, setne_al, jmp_0xffffffffffffffd@@ 3
push_r12, push_rbp, push_rbx, xor_ebx_ebx, sub_rsp_0x20, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_dword_ptr_[rsp+0x1@@ 2]_0, mov_word_ptr_[rsp+0x1@@ 6@@ ]_bx, test_edi_edi, jne_0x2f, mov_r12d_1, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ 13, add_rsp_0x20, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, mov_ebp_edi, mov_rbx_rsi, call_0xffffffffffffff@@ 43, test_eax_eax, je_0xffffffffffffffc7, lea_rsi_[rsp+0xc], mov_edi_ebp, call_0xffffffffffffc@@ 1d@@ 3, mov_r12d_eax, test_eax_eax, je_0xc9, mov_r11d_dword_ptr_[r@@ bx], mov_edi_dword_ptr_[rsp+0xc], test_r11d_r11d, je_0x27, xor_esi_esi, xor_eax_eax, mov_edx_0xc, call_0xfffffffffffe8@@ 57@@ e, test_eax_eax, js_0x1@@ 6f, cmp_eax_1, jg_0xffffffffffffff@@ 89, mov_dword_ptr_[rbx]_0, mov_edi_dword_ptr_[rsp+0xc], mov_esi_edi, mov_edi_ebp, call_0xffffffffffffb@@ 96@@ e, mov_r12d_eax, test_eax_eax, je_0xb4, sub_rsp_8, mov_eax_dword_ptr_[rsp+0x14], lea_r12_[rip+0x@@ 1e@@ 79@@ f], push_rax, mov_ecx_4, lea_rsi_[rip+0x10@@ ca@@ 7], mov_r9d_ebp, lea_r8_[rip+0x12@@ 2f0], mov_edx_0xa@@ cd, mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ 12], pop_rcx, pop_rsi, lea_rbx_[rsp+0x1@@ 2], jmp_0x19, call_0xfffffffffffe@@ 86@@ 78, mov_edi_dword_ptr_[rax], cmp_edi@@ _4, jne_0xa6, mov_edi_dword_ptr_[rsp+0xc], mov_edx_1, mov_rsi_rbx, call_0xfffffffffffe@@ 87@@ cc, test_eax_eax, js_0xffffffffffffff@@ dd, mov_esi_dword_ptr_[rsp+0xc], mov_edi_ebp, call_0xffffffffffffb@@ aa@@ d, mov_r12d_eax, jmp_0xfffffffffffffef6, lea_r9_[rip+0x@@ 1e@@ 7@@ 29], lea_r8_[rip+0x10@@ b0@@ 7], xor_ecx_ecx, mov_edx_0xa@@ b3, lea_rsi_[rip+0x10@@ c@@ 29], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], jmp_0xfffffffffffffe@@ cb, sub_rsp_8, push_rbp, lea_r10_[rip+0x@@ 1e@@ 6f@@ 4], lea_r8_[rip+0x12@@ 1c@@ 5], mov_r9d_ebp, mov_ecx_0xffffffff, mov_edx_0xa@@ c5, lea_rsi_[rip+0x10@@ be@@ e], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], mov_esi_dword_ptr_[rsp+0x1c], mov_edi_ebp, call_0xffffffffffffba@@ 39, pop_rdi, pop_r8, jmp_0xfffffffffffffe@@ 82, cmp_edi@@ _0x2b, je_0xfffffffffffffe@@ 70, mov_rbx_qword_ptr_[r12], call_0xfffffffffffe8@@ 3d@@ b, push_rax, mov_edx_0xa@@ d7, mov_r9d_ebp, push_rbp, lea_r8_[rip+0x12@@ 22@@ d], mov_ecx_0xffffffff, lea_rsi_[rip+0x10@@ b@@ 9e], mov_edi_3, xor_eax_eax, call_rbx, mov_esi_dword_ptr_[rsp+0x1c], mov_edi_ebp, call_0xffffffffffffb@@ 9@@ ea, pop_rax, pop_rdx, xor_r12d_r12d, jmp_0xfffffffffffffe@@ 31, lea_rax_[rip+0x@@ 1e@@ 66@@ 1], xor_r12d_r12d, mov_rbx_qword_ptr_[rax], call_0xfffffffffffe8@@ 56@@ b, mov_edi_dword_ptr_[rax], call_0xfffffffffffe8@@ 38@@ 4, push_rax, lea_r8_[rip+0x11@@ 1f@@ 7], mov_ecx_0xffffffff, push_rbp, mov_edx_0xa@@ b8, lea_rsi_[rip+0x10@@ b4@@ a], mov_r9d_dword_ptr_[r@@ sp+0x1c], mov_edi_3, xor_eax_eax, call_rbx, pop_r9, pop_r10, jmp_0xfffffffffffffd@@ e4, call_0xfffffffffffe8@@ 58@@ e
endbr64, lea_rax_[rip+0x@@ 1e@@ 60@@ 5], mov_dword_ptr_[rip+0x@@ 1c@@ 5b@@ 7@@ ]_edi, mov_r9_qword_ptr_[rax], test_edi_edi, je_0x2a, lea_r8_[rip+0x10@@ ef@@ 5], mov_ecx_4, mov_edx_0x@@ 94@@ b, lea_rsi_[rip+0x10@@ af@@ 5], mov_edi_7, xor_eax_eax, jmp_r9, lea_r8_[rip+0x10@@ ee@@ 6], mov_ecx_4, mov_edx_0x@@ 94@@ d, lea_rsi_[rip+0x10@@ ac@@ d], mov_edi_7, xor_eax_eax, jmp_r@@ 9
endbr64, mov_eax_dword_ptr_[rip+0x@@ 1c@@ 54@@ e], ret
test_edi_edi, jne_0xe, xor_eax_eax, ret, sub_rsp_8, call_0xfffffffffffffc@@ ac, test_eax_eax, jne_0xd, xor_eax_eax, add_rsp_8, ret, call_0xffffffffffffff@@ c8, test_eax_eax, setne_al, movzx_eax_al, add_rsp_8, ret
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0xc8, mov_dword_ptr_[rsp+0xc]_r9d, lea_rbp_[rsp+0x@@ b0], mov_rbx_rdi, mov_r14d_esi, mov_rsi_rdi, mov_rdi_rbp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x10@@ b8]_rax, xor_eax_eax, mov_r15d_edx, mov_r12d_ecx, mov_r13d_r8d, call_0xffffffffffffc0@@ 7e, test_eax_eax, mov_dword_ptr_[rsp]_eax, jne_0x5c, lea_r9_[rip+0x@@ 1e@@ 4e@@ b], lea_r8_[rip+0x10@@ 8c@@ 9], xor_ecx_ecx, mov_edx_0x4@@ 19, lea_rsi_[rip+0x10@@ 9e@@ b], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], mov_r10d_dword_ptr_[rsp], mov_rax_qword_ptr_[r@@ sp+0x10@@ b8], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ a6, add_rsp_0x10@@ c8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r10d, pop_r15, ret, movzx_esi@@ _r15b, shl_r14@@ _8, shl_r15@@ _0xc, or@@ _r14@@ _rsi, and@@ _r15@@ _0xffffffff@@ fff@@ 00000, lea_rdx_[rsp+0x20], mov_rsi_rbp, mov_edi_1, or@@ _r14@@ _r15, call_0xfffffffffffe8@@ 50@@ 2, test_eax_eax, js_0x1@@ 23, mov_eax_dword_ptr_[rsp+0x38], and_eax_0xf000, cmp_eax_0x6@@ 000, jne_0x@@ d7, mov_r10d_1, cmp_qword_ptr_[rsp+0x@@ 4@@ 8]_r14, je_0xffffffffffffff@@ 7e, mov_rdi_rbp, call_0xfffffffffffe7@@ ead, test_eax_eax, js_0x1@@ 96, lea_rax_[rip+0x@@ 1e@@ 42@@ 9], mov_qword_ptr_[rsp]_rax, mov_esi_0x6@@ 000, mov_rdi_rbp, call_0xffffffffffffde@@ 2d, xor_edi_edi, call_0xfffffffffffe8@@ 606, mov_edx_dword_ptr_[rsp+0xc], xor_edi_edi, or@@ _dh@@ _0x60, lea_rcx_[rsp+0x18], mov_rsi_rbp, mov_qword_ptr_[rsp+0x1@@ 8]_r14, mov_r15d_eax, call_0xfffffffffffe8@@ 258, test_eax_eax, jns@@ _0x12, call_0xfffffffffffe8@@ 2@@ ff, mov_edi_dword_ptr_[rax], cmp_edi@@ _0x11, jne_0x@@ f5, mov_edi_r15d, call_0xfffffffffffe8@@ 5cc, xor_esi_esi, xor_edi_edi, call_0xffffffffffffdd@@ e3, mov_edx_r13d, mov_esi_r12d, mov_rdi_rbp, call_0xfffffffffffe8@@ 38@@ 5, test_eax_eax, js_0x1@@ 3e, mov_rbx_qword_ptr_[rsp], mov_r9_rbp, lea_r8_[rip+0x10@@ d0@@ 3], mov_ecx_4, mov_edx_0x4@@ 41, lea_rsi_[rip+0x10@@ 8a@@ e], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], mov_r10d_1, jmp_0xfffffffffffffe@@ c2, mov_r9_rbp, lea_r8_[rip+0x11@@ f6@@ e], mov_ecx_0xffffffff, mov_edx_0x4@@ 1d, lea_r10_[rip+0x@@ 1e@@ 36@@ 5], lea_rsi_[rip+0x10@@ 87@@ 3], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], xor_r10d_r10d, jmp_0xfffffffffffffe@@ 89, mov_edi_dword_ptr_[r@@ sp+0x1@@ 100], call_0xfffffffffffffd@@ b1, test_eax_eax, lea_rax_[rip+0x@@ 1e@@ 33@@ 3], jne_0x13, mov_qword_ptr_[rsp]_rax, jmp_0xffffffffffffff08, mov_qword_ptr_[rsp]_rax, mov_r11_rax, mov_r9_rbp, lea_r8_[rip+0x11@@ f6@@ 7], xor_ecx_ecx, mov_edx_0x4@@ 2c, lea_rsi_[rip+0x10@@ 8@@ 16], mov_edi_0x84, xor_eax_eax, call_qword_ptr_[r@@ 11], jmp_0xfffffffffffffe@@ d2, mov_rax_qword_ptr_[rsp], mov_r12_qword_ptr_[rax], call_0xfffffffffffe@@ 80@@ 19, push_rax, mov_edx_0x4@@ 34, mov_r9_rbp, push_rbx, lea_r8_[rip+0x10@@ c0@@ a], mov_ecx_0xffffffff, lea_rsi_[rip+0x10@@ 7d@@ c], mov_edi_3, xor_eax_eax, call_r12, mov_edi_r15d, call_0xfffffffffffe8@@ 4a@@ a, xor_esi_esi, xor_edi_edi, call_0xffffffffffffd@@ cc@@ 1, pop_rax, pop_rdx, xor_r10d_r10d, jmp_0xfffffffffffffdd@@ f, mov_r9_rbx, lea_r8_[rip+0x11@@ ec@@ 6], mov_ecx_0xffffffff, mov_edx_0x4@@ 27, jmp_0xffffffffffffff20, mov_rax_qword_ptr_[rsp], mov_rbx_qword_ptr_[rax], call_0xfffffffffffe8@@ 18@@ 9, mov_edi_dword_ptr_[rax], call_0xfffffffffffe7@@ fa@@ 2, mov_r8_rax, cmp_byte_ptr_[rsp+0x@@ b0]_0, lea_rdx_[rip+0x@@ c0@@ 8a], lea_rax_[rip+0x10@@ 60@@ 1], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x10@@ b@@ 96], mov_r9_rbp, push_rcx, lea_r8_[rip+0x10@@ 7f@@ 7], mov_ecx_0xffffffff, push_rax, mov_edx_0x4@@ 3d, lea_rsi_[rip+0x10@@ 7@@ 3b], mov_edi_3, xor_eax_eax, call_rbx, add_rsp_0x20, xor_r10d_r10d, jmp_0xfffffffffffffd@@ 4e, call_0xfffffffffffe8@@ 18@@ 1
push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0xa8, lea_rbp_[rsp+0x@@ 90], mov_rbx_rdi, mov_r13d_esi, mov_rsi_rdi, mov_rdi_rbp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x10@@ 98]_rax, xor_eax_eax, call_0xffffffffffffbd@@ 40, test_eax_eax, jne_0x59, lea_r9_[rip+0x@@ 1e@@ 1b0], mov_r12d_eax, lea_r8_[rip+0x10@@ 58@@ b], xor_ecx_ecx, mov_edx_0x4@@ 4c, lea_rsi_[rip+0x10@@ 6a@@ d], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], mov_rax_qword_ptr_[r@@ sp+0x10@@ 98], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ e8, add_rsp_0x10@@ a8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, mov_rdx_rsp, mov_rsi_rbp, mov_edi_1, call_0xfffffffffffe7@@ fd@@ 5, mov_r12d_1, test_eax_eax, js_0xffffffffffffff@@ ba, mov_edi_r13d, call_0xfffffffffffffbb@@ 3, lea_r12_[rip+0x@@ 1e@@ 13@@ 7], test_eax_eax, je_0x25, mov_r9_rbp, lea_r8_[rip+0x@@ 11d@@ c1], xor_ecx_ecx, mov_edx_0x4@@ 50, lea_rsi_[rip+0x10@@ 6@@ 30], mov_edi_0x84, xor_eax_eax, call_qword_ptr_[r@@ 12], mov_rdi_rbp, call_0xfffffffffffe@@ 7b@@ 7d, test_eax_eax, js_0x3@@ 6, mov_r10_qword_ptr_[r@@ 12], mov_r9_rbp, lea_r8_[rip+0x10@@ a5@@ a], mov_ecx_4, mov_edx_0x4@@ 59, lea_rsi_[rip+0x10@@ 5f@@ a], mov_edi_7, xor_eax_eax, call_r10, mov_r12d_1, jmp_0xffffffffffffff47, call_0xfffffffffffe7@@ fe0, cmp_dword_ptr_[rax]_2, mov_r10_qword_ptr_[r@@ 12], je_0xffffffffffffff@@ c4, mov_r9_rbx, lea_r8_[rip+0x11@@ c@@ e8], mov_ecx_0xffffffff, mov_edx_0x4@@ 55, lea_rsi_[rip+0x10@@ 5b@@ c], mov_edi_3, xor_eax_eax, call_r10, xor_r12d_r12d, jmp_0xffffffffffffff0c, call_0xfffffffffffe8@@ 00@@ 5
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1@@ 48, lea_r13_[r@@ sp+0x130], mov_rbp_rdi, mov_rbx_rsi, mov_rsi_rdi, mov_rdi_r13, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x2@@ 13@@ 8]_rax, xor_eax_eax, mov_r14d_edx, call_0xffffffffffffbb@@ bd, test_eax_eax, jne_0x5e, lea_r9_[rip+0x@@ 1e0@@ 2d], lea_r8_[rip+0x10@@ 40@@ b], xor_ecx_ecx, mov_edx_0x4@@ 68, lea_rsi_[rip+0x10@@ 5@@ 2d], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], xor_r12d_r12d, mov_rax_qword_ptr_[rsp+0x@@ 2@@ 138], xor_rax_qword_ptr_fs:[0x28], jne_0x30@@ 8, add_rsp_0x2@@ 148, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_r15_[r@@ sp+0x1@@ 130], mov_rsi_rbx, mov_rdi_r15, call_0xffffffffffffbb@@ 4a, test_eax_eax, je_0xffffffffffffff@@ 8f, lea_r8_[rsp+0x10], mov_rdx_r8, mov_rsi_r15, mov_edi_1, mov_qword_ptr_[rsp+8]_r8, call_0xfffffffffffe@@ 7e@@ 2c, mov_r12d_eax, test_eax_eax, jne_0x5a, mov_eax_dword_ptr_[rsp+0x28], mov_r8_qword_ptr_[rsp+8], and_eax_0xf000, cmp_eax_0xa@@ 000, je_0x1@@ fd, cmp_eax_0x6@@ 000, je_0xa2, mov_r9_r15, lea_r8_[rip+0x11@@ b6@@ a], mov_ecx_0xffffffff, mov_edx_0x4@@ 76, lea_r10_[rip+0x@@ 1d@@ f6@@ 1], lea_rsi_[rip+0x10@@ 46@@ f], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], jmp_0xffffffffffffff45, mov_edi_r14d, call_0xfffffffffffff9b@@ 5, test_eax_eax, jne_0x@@ de, lea_r12_[rip+0x@@ 1d@@ f@@ 31], mov_rsi_r15, mov_rdi_r13, call_0xfffffffffffe8@@ 13b, test_eax_eax, js_0x1@@ 44, mov_r10_qword_ptr_[r@@ 12], sub_rsp_8, push_r15, mov_edx_0x4@@ b0, xor_eax_eax, mov_r9_r13, lea_r8_[rip+0x10@@ 87@@ 2], mov_ecx_4, lea_rsi_[rip+0x10@@ 40@@ c], mov_edi_7, call_r10, pop_rax, pop_rdx, mov_r12d_1, jmp_0xfffffffffffffedc, mov_edi_r14d, mov_qword_ptr_[rsp+8]_r8, call_0xfffffffffffff94@@ 8, mov_r12d_eax, test_eax_eax, je_0xae, mov_r8_qword_ptr_[rsp+8], mov_rsi_r13, mov_rdx_r8, mov_edi_1, call_0xfffffffffffe@@ 7d@@ 38, test_eax_eax, jns_0xc, call_0xfffffffffffe@@ 7d@@ bf, cmp_dword_ptr_[rax]_2, je_0xffffffffffffff@@ ba, sub_rsp_8, push_r15, lea_r10_[rip+0x@@ 1d@@ e@@ 98], mov_r9_r13, lea_r8_[rip+0x11@@ b6@@ e], xor_ecx_ecx, mov_edx_0x4@@ 80, lea_rsi_[rip+0x10@@ 39@@ 5], mov_edi_0x84, xor_eax_eax, call_qword_ptr_[r10], xor_esi_esi, mov_rdi_rbp, call_0xfffffffffffffc@@ 71, pop_r9, mov_r12d_eax, pop_r10, jmp_0xfffffffffffffe@@ 5a, sub_rsp_8, push_r15, lea_r12_[rip+0x@@ 1d@@ e5@@ 3], lea_r8_[rip+0x11@@ ba@@ c], mov_edi_0x84, mov_r9_r13, xor_ecx_ecx, mov_edx_0x4@@ 92, lea_rsi_[rip+0x10@@ 34@@ b], xor_eax_eax, call_qword_ptr_[r@@ 12], pop_rdi, pop_r8, jmp_0xfffffffffffffefc, mov_rdi_r15, call_0xfffffffffffe7@@ 88@@ d, test_eax_eax, jns_0xfffffffffffffe@@ de, call_0xfffffffffffe@@ 7d@@ 20, cmp_dword_ptr_[rax@@ ]_1, je_0xffffffffffffff@@ 1b, mov_r9_rbx, lea_r8_[rip+0x11@@ a@@ 28], mov_ecx_0xffffffff, mov_edx_0x4@@ 8c, jmp_0xfffffffffffffe@@ 86, call_0xfffffffffffe@@ 7c@@ f0, cmp_dword_ptr_[rax]_2, mov_r10_qword_ptr_[r@@ 12], je_0xfffffffffffffe@@ ba, sub_rsp_8, push_rbx, mov_ecx_0xffffffff, lea_rsi_[rip+0x10@@ 2d@@ 2], mov_r9_rbp, lea_r8_[rip+0x11@@ b8@@ b], mov_edx_0x4@@ ab, mov_edi_3, xor_eax_eax, call_r10, pop_rcx, pop_rsi, xor_r12d_r12d, jmp_0xfffffffffffffd@@ 94, lea_rdx_[rsp+0x@@ a0], mov_rsi_r15, mov_edi_1, call_0xfffffffffffe@@ 7e@@ 10, test_eax_eax, jne_0x18, mov_eax_dword_ptr_[rsp+0x@@ b8], mov_r8_qword_ptr_[rsp+8], and_eax_0xf000, jmp_0xfffffffffffffdd@@ f, lea_rax_[rip+0x@@ 1dd@@ 5a], mov_rbx_qword_ptr_[rax], call_0xfffffffffffe@@ 7c@@ 67, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 7a@@ 80, mov_r8_rax, cmp_byte_ptr_[rsp+0x1@@ 13@@ 0]_0, lea_rdx_[rip+0x@@ bb@@ 68], lea_rax_[rip+0x@@ 100@@ df], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x10@@ 5f@@ 3], mov_r9_r15, push_rcx, lea_r8_[rip+0x10@@ 2d@@ 5], mov_ecx_0xffffffff, push_rax, mov_edx_0x4@@ 6f, lea_rsi_[rip+0x10@@ 2@@ 19], mov_edi_3, xor_eax_eax, call_rbx, add_rsp_0x20, jmp_0xfffffffffffffc@@ ec, call_0xfffffffffffe@@ 7c@@ 6@@ 2
endbr64, push_r15, lea_r15_[rip+0x@@ 1d@@ cc@@ 3], push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x48, mov_rbp_qword_ptr_[rip+0x@@ 1d@@ c@@ b0], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_rbx_qword_ptr_[rbp], cmp_rbp@@ _r15, jne_0x5f, jmp_0x7@@ 7, lea_rdi_[rip+0x10@@ 6@@ 19], call_0xffffffffffff9f@@ 29, mov_eax_dword_ptr_[rbp+0x10], mov_edx_dword_ptr_[rbp+0x@@ 48], mov_r10d_dword_ptr_[r@@ bp+0x24], mov_r13d_dword_ptr_[r@@ bp+0x20], mov_r12_qword_ptr_[r@@ bp+0x18], cmp_eax_2, je_0x1@@ 4f, ja_0x7@@ 1, test_eax_eax, je_0x11d, mov_esi_edx, mov_rdi_r12, call_0xfffffffffffffa@@ 6a, mov_rdi_rbp, call_0xffffffffffffa@@ 64@@ d, mov_rbp_rbx, mov_rax_qword_ptr_[rbx], cmp_rbx_r15, je_0x1f, mov_rbx_rax, mov_r13d_dword_ptr_[r@@ bp+0x@@ 4c], mov_rsi_rbp, test_r13d_r13d, je_0xffffffffffffff@@ a0, lea_rdi_[rip+0x10@@ 5e@@ d], call_0xffffffffffff9@@ ec@@ 7, jmp_0xffffffffffffffd2, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x4@@ d0, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, cmp_eax_3, jne_0xffffffffffffffa5, mov_r14d_dword_ptr_[r@@ bp+0x@@ 34], cmp_r14d@@ _-1, je_0xffffffffffffff@@ 9b, test_byte_ptr_[rbp+0x@@ 38]_1, jne_0x@@ dd, lea_rax_[rip+0x@@ 1d@@ b@@ e8], mov_qword_ptr_[rsp]_rax, mov_r11_qword_ptr_[r@@ ax], sub_rsp_8, push_r14, xor_eax_eax, mov_r9_r12, push_r10, lea_r8_[rip+0x11@@ a0@@ d], mov_ecx_4, mov_dword_ptr_[rsp+0x24]@@ _r10d, push_r13, mov_edx_0x5@@ 13, lea_rsi_[rip+0x1@@ 00@@ ca], mov_edi_7, call@@ _r11, add_rsp_0x20, cmp_byte_ptr_[rip+0x@@ 1bb@@ 92@@ ]_0, je_0x10, test_r13d_r13d, mov_r10d_dword_ptr_[rsp+0xc], jne_0x@@ f8, cmp_byte_ptr_[r12]_0, jne_0x1@@ ed, lea_r8_[rip+0x@@ 113@@ d8], mov_ecx_0xffffffff, mov_edx_0x5@@ 3a, mov_r11_qword_ptr_[rsp], lea_rsi_[rip+0x1@@ 00@@ 80], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ 11], jmp_0xffffffffffffff01, sub_rsp_8, mov_r9d_dword_ptr_[r@@ bp+0x30], mov_r8d_dword_ptr_[rbp+0x@@ 2c], mov_ecx_dword_ptr_[rbp+0x28], push_rdx, mov_rdi_r12, mov_edx_r10d, mov_esi_r13d, call_0xfffffffffffff5e@@ f, pop_r11, pop_r12, jmp_0xfffffffffffffed6, mov_rdi_qword_ptr_[rbp+0x@@ 40], mov_rsi_r12, call_0xfffffffffffffa@@ 99, jmp_0xfffffffffffffe@@ c4, mov_edx_r10d, lea_rcx_[r@@ sp+0x1c], mov_esi_r13d, mov_rdi_r12, mov_dword_ptr_[rsp]@@ _r10d, call_0xffffffffffffd@@ 9@@ 16, test_eax_eax, mov_r10d_dword_ptr_[rsp], je_0x1@@ e3, lea_rcx_[rip+0x@@ 1d@@ ae@@ e], mov_eax_dword_ptr_[rsp+0x1c], mov_qword_ptr_[rsp]_rcx, mov_r11_qword_ptr_[r@@ cx], cmp_r14d_eax, ja_0xfffffffffffffe@@ ff, push_r14, mov_r9_r12, lea_r8_[rip+0x11@@ 8d@@ 6], push_rax, mov_ecx_4, mov_edx_0x5@@ 5d, lea_rsi_[rip+0x@@ ff@@ d1], mov_edi_7, xor_eax_eax, call@@ _r11, pop_r9, pop_r10, jmp_0xfffffffffffffe@@ 4e, xor_eax_eax, mov_r9d@@ _r10d, mov_r8d_r13d, lea_rcx_[rip+0x@@ 1b@@ a8@@ 1], lea_rdx_[rip+0x@@ 112@@ ba], mov_esi_0x1000, lea_rdi_[rip+0x2@@ 1e0@@ ee], call_0x4b@@ 5e, test_eax_eax, js_0x1@@ b7, lea_ecx_[r@@ 14+1], lea_r13_[rsp+0x20], shr_ecx@@ _1, xor_eax_eax, lea_rdx_[rip+0xb@@ aa@@ 1], mov_esi_0x18, mov_rdi_r13, call_0x4b@@ 35, test_eax_eax, js_0x2@@ 1e, mov_dword_ptr_[rsp+0xc]_eax, xor_edx_edx, xor_eax_eax, mov_esi_1, lea_rdi_[rip+0x2@@ 1e0@@ a4], call_0xfffffffffffe@@ 77@@ 74, cmp_eax_-1, je_0x2@@ 1c, movsxd_r12@@ _dword_ptr_[rsp+0xc], mov_rsi_r13, mov_rdx_r12, mov_edi_eax, mov_dword_ptr_[rsp+0xc]_eax, call_0xfffffffffffe@@ 7b@@ c5, cmp_rax_r12, mov_r10d_dword_ptr_[rsp+0xc], jl@@ _0x2@@ 41, mov_edi@@ _r10d, call_0xfffffffffffe7@@ 2b@@ f, test_eax_eax, je_0xfffffffffffffd@@ 98, mov_rax_qword_ptr_[rsp], mov_r12_qword_ptr_[rax], call_0xfffffffffffe7@@ 8f@@ b, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 77@@ 14, push_rax, lea_rax_[rip+0x@@ fa@@ d2], lea_r8_[rip+0x@@ 1@@ 000@@ 5], push_rax, mov_edi_7, lea_r9_[rip+0x2@@ 1e0@@ 33], xor_ecx_ecx, mov_edx_0x5@@ 30, lea_rsi_[rip+0x@@ fe@@ ca], xor_eax_eax, call_r12, pop_rdi, pop_r8, jmp_0xfffffffffffffd@@ 4d, mov_rdi_r12, call_0xffffffffffffb@@ 5b@@ d, mov_r13d_eax, test_eax_eax, js_0xa@@ b, mov_edi_eax, mov_edx_r14d, xor_eax_eax, mov_esi_0x1@@ 26@@ 2, call_0xfffffffffffe7@@ 25@@ 1, test_eax_eax, jne_0x@@ da, mov_edi_r13d, call_0xfffffffffffe7@@ 23@@ 1, test_eax_eax, je_0xfffffffffffffd@@ 0a, mov_rax_qword_ptr_[rsp], mov_r13_qword_ptr_[rax], call_0xfffffffffffe7@@ 86@@ d, mov_edi_dword_ptr_[rax], call_0xfffffffffffe7@@ 68@@ 6, push_rax, lea_rax_[rip+0x@@ fa@@ 44], mov_edx_0x5@@ 47, push_rax, mov_r9_r12, xor_eax_eax, lea_r8_[rip+0x@@ ff@@ 6c], xor_ecx_ecx, lea_rsi_[rip+0x@@ fe@@ 43], mov_edi_7, call_r13, pop_rax, pop_rdx, jmp_0xfffffffffffffc@@ c4, lea_r9_[rip+0x@@ 1d@@ 9@@ 11], lea_r8_[rip+0x@@ fc@@ ef], xor_ecx_ecx, mov_edx_0x5@@ 5a, lea_rsi_[rip+0x@@ fe@@ 11], mov_edi_7, call_qword_ptr_[r9], jmp_0xfffffffffffffc@@ 94, mov_r11_qword_ptr_[rsp], lea_r8_[rip+0x@@ fc@@ c2], xor_ecx_ecx, mov_edx_0x5@@ 3f, lea_rsi_[rip+0x@@ fd@@ e4], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ 11], jmp_0xfffffffffffffc@@ 65, lea_r8_[rip+0x@@ fe@@ 91], mov_ecx_0xffffffff, mov_edx_0x5@@ 1e, jmp_0xfffffffffffffd@@ 39, mov_rax_qword_ptr_[rsp], mov_r14_qword_ptr_[rax], call_0xfffffffffffe7@@ 7a@@ 9, mov_edi_dword_ptr_[rax], call_0xfffffffffffe7@@ 5c@@ 2, mov_r8_rax, cmp_byte_ptr_[r12]_0, lea_rsi_[rip+0x@@ fc@@ 2b], lea_rax_[rip+0xb@@ 6a@@ 6], cmovne_rax@@ _rsi, sub_rsp_8, push_r8, lea_rsi_[rip+0x10@@ 2@@ 13], mov_r9_r12, push_rsi, lea_r8_[rip+0x@@ fe@@ 1a], mov_ecx_0xffffffff, push_rax, mov_edx_0x5@@ 42, lea_rsi_[rip+0x@@ fd@@ 5e], mov_edi_3, xor_eax_eax, call_r14, add_rsp_0x20, jmp_0xfffffffffffffe@@ c7, lea_r8_[rip+0x10@@ 1b@@ 4], mov_ecx_0xffffffff, mov_edx_0x5@@ 25, jmp_0xfffffffffffffc@@ a9, mov_rax_qword_ptr_[rsp], mov_r13_qword_ptr_[rax], call_0xfffffffffffe@@ 77@@ 19, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 75@@ 32, push_rax, lea_rax_[rip+0x@@ 100@@ 44], xor_ecx_ecx, push_rax, lea_rsi_[rip+0x@@ fd@@ 00], lea_r9_[rip+0x2@@ 1d@@ e@@ 54], lea_r8_[rip+0x@@ fe@@ 12], mov_edx_0x5@@ 35, mov_edi_7, xor_eax_eax, call_r13, pop_rcx, pop_rsi, jmp_0xfffffffffffffc@@ 3a, mov_rax_qword_ptr_[rsp], mov_r12_qword_ptr_[rax], call_0xfffffffffffe7@@ 6d@@ 0, mov_edi_dword_ptr_[rax], call_0xfffffffffffe7@@ 4e@@ 9, mov_r8_rax, cmp_byte_ptr_[rip+0x2@@ 1d@@ e@@ 1a@@ ]_0, lea_rsi_[rip+0x@@ fb@@ 50], lea_rax_[rip+0xb@@ 5c@@ b], cmovne_rax@@ _rsi, sub_rsp_8, push_r8, lea_rsi_[rip+0x10@@ 13@@ 2], lea_r9_[rip+0x@@ 21@@ dd@@ f4], push_rsi, lea_r8_[rip+0x@@ fd@@ 3b], mov_ecx_0xffffffff, push_rax, mov_edx_0x5@@ 2b, lea_rsi_[rip+0x@@ fc@@ 7f], mov_edi_3, xor_eax_eax, call_r12, mov_r10d_dword_ptr_[rsp+0x@@ 2c], add_rsp_0x20, jmp_0xfffffffffffffd@@ 55, call_0xfffffffffffe7@@ 6c@@ 2
endbr64, push_rbp, mov_rbp_rdi, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xffffffffffffee@@ 54, test_eax_eax, jne_0x2d, mov_dword_ptr_[rbp]_0, mov_eax_1, mov_rdx_qword_ptr_[rsp+8], xor_rdx_qword_ptr_fs:[0x28], jne_0x20, add_rsp_0x10, pop_rbp, ret, lea_rsi_[rsp+4], mov_rdi_rbp, call_0xffffffffffffa@@ b0@@ 8, jmp_0xffffffffffffffd4, call_0xfffffffffffe7@@ 65@@ 1
endbr64, push_r15, push_r14, push_r13, movzx_r13d@@ _dx, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, mov_ebx_edx, sub_rsp_0x58, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, call_0xa@@ 3c@@ 2, test_eax_eax, je_0x1b, mov_r10d_dword_ptr_[r@@ ip+0x2@@ 1d@@ ce@@ 2], movzx_eax@@ _bx, test_r10d_r10d, jne_0x2@@ 3c, shl_eax_0x10, mov_dword_ptr_[rbp+0x@@ 2c]_eax, call_0xffffffffffffe@@ db@@ 0, test_eax_eax, je_0x2@@ 39, mov_edi_dword_ptr_[r@@ 12], lea_rsi_[rsp+0x@@ 3c], test_edi_edi, jne_0x1@@ d8, mov_rdi_r12, call_0xffffffffffffaa@@ 7f, test_eax_eax, je_0x2@@ d0, mov_r15d_dword_ptr_[rsp+0x@@ 3c], xor_r9d_r9d, lea_rsi_[rsp+0x@@ 42], mov_edx_1, mov_edi_r15d, mov_dword_ptr_[rsp+0x@@ 42@@ ]@@ _0x10000, mov_word_ptr_[rsp+0x@@ 46@@ ]@@ _r9w, mov_r14d_dword_ptr_[r@@ 12], call_0xfffffffffffe7@@ 6a@@ b, test_eax_eax, js_0x2@@ 24, xor_esi_esi, xor_eax_eax, mov_edx_0xc, mov_edi_r15d, call_0xfffffffffffe7@@ 3b@@ 2, test_eax_eax, js_0x4@@ 53, push_rax, lea_r10_[rip+0x@@ 1d@@ 5@@ fd], mov_r9d_r14d, push_r15, xor_eax_eax, lea_r8_[rip+0x10@@ 48@@ f], mov_ecx_4, mov_edx_0x@@ 98@@ c, lea_rsi_[rip+0x@@ fa@@ f3], mov_edi_7, call_qword_ptr_[r10], movzx_eax_word_ptr_[r@@ 12], lea_r15_[rip+0x@@ ff@@ 89], or_dword_ptr_[rbp+0x@@ 2c]_eax, lea_rax_[rip+0x@@ 1d@@ 5c0], test_@@ bx@@ _bx, mov_rax_qword_ptr_[rax], lea_r14_[rip+0x@@ ff@@ 7f], mov_qword_ptr_[rsp+0x10]_rax, lea_rax_[rip+0x@@ 11@@ fe@@ 1], cmovns@@ _r15@@ _rax, test_bh@@ _0x40, cmove@@ _r14@@ _rax, lea_r11_[rip+0x@@ ff@@ 6e], test_bh@@ _0x20, cmove@@ _r11@@ _rax, lea_r10_[rip+0x@@ ff@@ 6d], test_bh@@ _0x10, mov_dword_ptr_[rbp+0x@@ 98]_1, cmove@@ _r10@@ _rax, lea_r9_[rip+0x@@ ff@@ 62], test_bh@@ _8, cmove@@ _r9_rax, lea_r8_[rip+0x@@ ff@@ 61], test_bh@@ _4, cmove@@ _r8_rax, lea_rdx_[rip+0x@@ ff@@ 60], test_bh@@ _2, pop_rcx, cmove_rdx_rax, pop_rsi, test_bh@@ _1, mov_qword_ptr_[rsp+8]_rdx, lea_rdx_[rip+0x@@ ff@@ 55], cmovne_rax_rdx, test_bl@@ _0x40, mov_qword_ptr_[rsp+0x10]_rax, lea_rdx_[rip+0x@@ ff@@ 4f], lea_rax_[rip+0xb@@ 350], cmove_rdx_rax, test_bl@@ _0x20, mov_qword_ptr_[rsp+0x18]_rdx, lea_rdx_[rip+0x@@ ff@@ 45], cmove_rdx_rax, test_bl@@ _0x10, mov_qword_ptr_[rsp+0x20]_rdx, lea_rdx_[rip+0x@@ ff@@ 4c], cmove_rdx_rax, lea_rdi_[rip+0x@@ ff@@ 4f], test_bl@@ _8, cmove@@ _rdi_rax, lea_rsi_[rip+0x@@ ff@@ 56], test_bl@@ _4, cmove_rsi_rax, lea_rcx_[rip+0x@@ ff@@ 5c], test_bl@@ _2, cmove_rcx_rax, mov_qword_ptr_[rsp+0x28]_rdx, and_ebx_1, lea_rdx_[rip+0x@@ ff@@ 5f], cmove_rdx_rax, mov_eax_dword_ptr_[rbp], cmp_eax_0x1@@ 2, ja_0x3@@ 2e, lea_rbp_[rip+0x@@ 114@@ 37], mov_ebx_eax, movsxd_rbx@@ _dword_ptr_[r@@ bp+r@@ bx*4], add_rbx@@ _rbp, jmp@@ _rbx, call_0xffffffffffffae@@ 60, test_eax_eax, jne_0xfffffffffffffe@@ 37, lea_r9_[rip+0x@@ 1d@@ 47@@ c], lea_r8_[rip+0x@@ f@@ 85@@ a], xor_ecx_ecx, mov_edx_0xa@@ 67, lea_rsi_[rip+0xf@@ 97@@ c], mov_edi_7, call_qword_ptr_[r9], mov_dword_ptr_[rbp+0x@@ 2c]_0, xor_eax_eax, jmp_0x2d, mov_eax_ebx, and_eax@@ _0xff@@ df, or_eax@@ _3, jmp_0xfffffffffffffd@@ c0, mov_dword_ptr_[r12@@ ]_0, mov_dword_ptr_[rbp+0x@@ 98]_1, mov_eax_1, mov_rcx_qword_ptr_[rsp+0x48], xor_rcx_qword_ptr_fs:[0x28], jne_0x2@@ a1, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xfffffffffffe7@@ 3@@ 10, lea_rbx_[rip+0x@@ 1d@@ 3f@@ 4], mov_edi_dword_ptr_[rax], mov_r13_qword_ptr_[r@@ bx], call_0xfffffffffffe7@@ 11@@ f, push_rax, mov_r9d_r15d, lea_r8_[rip+0x@@ 1@@ 000@@ f], push_r14, mov_ecx_0xffffffff, mov_edx_0x@@ 980, lea_rsi_[rip+0xf@@ 8e@@ 1], mov_edi_3, xor_eax_eax, call_r13, pop_rdi, pop_r8, mov_r9d_dword_ptr_[r@@ 12], sub_rsp_8, push_r9, mov_edx_0xa@@ 6c, xor_eax_eax, lea_r8_[rip+0x@@ 112@@ 0f], mov_ecx_0xffffffff, lea_rsi_[rip+0x@@ f8@@ b0], mov_edi_3, call_qword_ptr_[r@@ bx], pop_rax, pop_rdx, jmp_0xffffffffffffff33, lea_r9_[rip+0x@@ 1d@@ 38@@ 1], lea_r8_[rip+0x@@ f7@@ 5f], xor_ecx_ecx, mov_edx_0xa@@ 69, lea_rsi_[rip+0xf@@ 88@@ 1], mov_edi_7, call_qword_ptr_[r9], jmp_0xffffffffffffff05, sub_rsp_8, push_r13, push_r15, push_r14, push_r11, push_r10, push_r9, mov_r9d_dword_ptr_[r@@ 12], push_r8, lea_r8_[rip+0x11@@ 1e@@ b], push@@ _qword_ptr_[rsp+0x48], push@@ _qword_ptr_[rsp+0x58], push@@ _qword_ptr_[rsp+0x68], push@@ _qword_ptr_[rsp+0x78], push@@ _qword_ptr_[rsp+0x88], push_rdi, mov_edi_7, push_rsi, lea_rsi_[rip+0x@@ f8@@ 23], push_rcx, mov_ecx_4, push_rdx, mov_edx_0xa@@ 75, push_rax, push_rbx, mov_eax_dword_ptr_[rsp+0x@@ d4], push_rax, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x@@ a0], call_rbx, add_rsp@@ _0xa0, mov_eax_1, jmp_0xfffffffffffffeb7, call_0xfffffffffffe@@ 70@@ c8, lea_rbx_[rip+0x@@ 1d@@ 1a@@ c], mov_edi_dword_ptr_[rax], mov_r13_qword_ptr_[r@@ bx], call_0xfffffffffffe6@@ ed@@ 7, push_rax, mov_r9d_r15d, lea_r8_[rip+0x@@ fd@@ 47], push_r14, mov_ecx_0xffffffff, mov_edx_0x@@ 98@@ 6, jmp_0xfffffffffffffd@@ b8, lea_rbx_[rip+0x@@ b0@@ fc], jmp_0xfffffffffffffe@@ 2f, call_0xfffffffffffe@@ 70@@ e@@ a
endbr64, push_r12, push_rbx, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, test_edi_edi, jne_0x2b, mov_r12d_1, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0xa@@ b, add_rsp_0x18, pop_rbx, mov_eax_r12d, pop_r12, ret, mov_ebx_edi, call_0xffffffffffffe@@ 85@@ 6, test_eax_eax, je_0xffffffffffffffce, lea_rsi_[rsp+4], mov_edi_ebx, call_0xffffffffffffaa@@ e6, mov_r12d_eax, test_eax_eax, jne_0x2c, lea_r9_[rip+0x@@ 1d@@ 10@@ 3], lea_r8_[rip+0x@@ f@@ 4e@@ 1], xor_ecx_ecx, mov_edx_0xa@@ 98, lea_rsi_[rip+0xf@@ 60@@ 3], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], jmp_0xffffffffffffff99, mov_esi_dword_ptr_[rsp+4], mov_edi_ebx, call_0xffffffffffffa@@ 28@@ a, mov_r12d_eax, test_eax_eax, jne_0xffffffffffffff@@ 7f, sub_rsp_8, push_rbx, lea_r10_[rip+0x@@ 1d@@ 0@@ be], mov_edx_0xa@@ 9b, xor_eax_eax, mov_r9d_ebx, lea_r8_[rip+0x10@@ fc@@ d], mov_ecx_0xffffffff, lea_rsi_[rip+0xf@@ 5b@@ 6], mov_edi_3, call_qword_ptr_[r10], pop_rax, pop_rdx, jmp_0xffffffffffffff4c, call_0xfffffffffffe7@@ 00@@ 2
endbr64, push_r12, sub_rsp_0x10, lea_rsi_[rsp+4], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_dword_ptr_[rsp+4]_0, call_0xffffffffffffe@@ 7e@@ 9, mov_r12d_eax, call_0xfffffffffffff@@ 37@@ 1, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0xc, add_rsp_0x10, mov_eax_r12d, pop_r12, ret, call_0xfffffffffffe6@@ fa@@ 2
endbr64, push_r12, push_rbx, mov_rbx_rsi, sub_rsp_0x18, lea_rsi_[rsp+4], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_dword_ptr_[rsp+@@ 4]_1, call_0xffffffffffffe@@ 78@@ 5, mov_r12d_eax, test_eax_eax, je_0xa, mov_eax_dword_ptr_[rsp+4], test_eax_eax, jne_0x2b, call_0xfffffffffffff30@@ 1, mov_dword_ptr_[rbx@@ ]_1, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x1e, add_rsp_0x18, pop_rbx, mov_eax_r12d, pop_r12, ret, mov_dword_ptr_[rbx]_0, mov_r12d_1, jmp_0xffffffffffffffd6, call_0xfffffffffffe@@ 6f@@ 1@@ a
push_r12, xor_eax_eax, mov_r12_rdi, push_rbx, sub_rsp_8, test_rdi_rdi, je_0x31, mov_rbx_qword_ptr_[r@@ 12+0x10], mov_qword_ptr_[r12+0x10]_rax, mov_rdi_qword_ptr_[r@@ 12+0x18], call_0xffffffffffffff@@ e0, mov_qword_ptr_[r12+0x1@@ 8]_rax, mov_rax_r12, test_rbx_rbx, je_0x10, mov_r12_rbx, jmp_0xffffffffffffffdc, add_rsp_8, pop_rbx, mov_rax_r12, pop_r12, ret
push_r12, mov_r10_rsi, mov_rsi_rdx, push_rbp, mov_r12_rcx, mov_ebp_r8d, push_rbx, mov_rbx_rdx, call_r10, test_rax_rax, je_0x39, mov_rax_qword_ptr_[rax+0x20], test_rax_rax, je_0x30, cmp_dword_ptr_[rax]_2, je_0x69, lea_r10_[rip+0x@@ 1c@@ f20], mov_r9_rbx, lea_r8_[rip+0x10@@ f0@@ e], xor_ecx_ecx, mov_edx_0x3@@ d6, lea_rsi_[rip+0x1@@ 13@@ 54], mov_edi_0x84, xor_eax_eax, call_qword_ptr_[r10], test_r12_r12, je_0x33, sub_rsp_8, push_r12, lea_r10_[rip+0x@@ 1c@@ ee@@ c], mov_edx_0x3@@ da, xor_eax_eax, mov_r9_rbx, lea_r8_[rip+0x10@@ f0@@ 3], xor_ecx_ecx, lea_rsi_[rip+0x1@@ 13@@ 1e], mov_edi_6, call_qword_ptr_[r10], pop_rax, pop_rdx, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, mov_rax_qword_ptr_[rax+8], test_ebp_ebp, jne_0x12, cmp_byte_ptr_[rax]_0, jne_0xd, test_r12_r12, je_0xffffffffffffffe8, jmp_0xffffffffffffff87, mov_r12_rax, jmp_0xffffffffffffffd@@ d
push_rbp, mov_r8_rsi, mov_rsi_rdx, push_rbx, mov_rbp_rdx, mov_rbx_rcx, sub_rsp_8, call_r8, test_rax_rax, je_0x11, mov_rax_qword_ptr_[rax+0x20], test_rax_rax, je_8, mov_ecx_dword_ptr_[rax], test_ecx_ecx, je_0x41, sub_rsp_8, push_rbx, lea_r10_[rip+0x@@ 1c@@ e6@@ b], mov_r9_rbp, mov_edx_0x3@@ f5, xor_eax_eax, lea_r8_[rip+0x10@@ eb@@ 2], xor_ecx_ecx, lea_rsi_[rip+0x1@@ 12@@ 9d], mov_edi_6, call_qword_ptr_[r10], pop_rax, pop_rdx, add_rsp_8, mov_rax_rbx, pop_rbx, pop_rbp, ret, mov_rax_qword_ptr_[rax+8], add_rsp_8, pop_rbx, pop_rbp, ret
push_rbx, mov_r8_rsi, mov_rsi_rdx, sub_rsp_0x10, mov_rbx_rdx, movss@@ _dword_ptr_[rsp+0x@@ c@@ ]_xmm0, call_r8, test_rax_rax, je_0x10, mov_rax_qword_ptr_[rax+0x20], test_rax_rax, je_7, cmp_dword_ptr_[rax@@ ]_1, je_0x48, lea_r10_[rip+0x@@ 1c@@ de@@ f], mov_r9_rbx, pxor_xmm0_xmm0, lea_r8_[rip+0x10@@ e6@@ 9], xor_ecx_ecx, mov_edx_0x40@@ 4, lea_rsi_[rip+0x1@@ 12@@ 1f], mov_edi_6, mov_eax_1, cvtss2@@ sd_xmm0@@ _dword_ptr_[rsp+0xc], call_qword_ptr_[r10], movss_xmm0@@ _dword_ptr_[rsp+0xc], add_rsp_0x10, pop_rbx, ret, movss_xmm0@@ _dword_ptr_[r@@ ax+8], add_rsp_0x10, pop_rbx, ret
push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, mov_r13_qword_ptr_[r@@ di+0x20], mov_r12_qword_ptr_[r@@ di+8], mov_qword_ptr_[rdi+0x1@@ 8]_r13, cmp_r13@@ _r12, je_0xbc, mov_rbx_r13, movsx@@ _r15@@ _byte_ptr_[rbx], mov_r14d_esi, cmp_r15b@@ _0x23, je_0x6f, call_0xfffffffffffe6@@ 9c0, mov_rdx_qword_ptr_[rax], test_byte_ptr_[r@@ dx+r@@ 15*@@ 2+1]_0x20, je_0xaa, cmp_r12_rbx, je_0x81, call_0xfffffffffffe6@@ 9a7, mov_rdx_qword_ptr_[rax], jmp_0x1a, cmp_al_0xa, jne_5, inc_dword_ptr_[r@@ bp+0x28], inc_rbx, mov_qword_ptr_[rbp+0x@@ 20]@@ _rbx, cmp_rbx_r12, je_0x5f, movsx_rcx@@ _byte_ptr_[rbx], mov_rax_rcx, test_byte_ptr_[rdx@@ +rcx*@@ 2+1]_0x20, jne_0xffffffffffffffe1, mov_qword_ptr_[rbp+0x1@@ 8]_rbx, cmp_rbx_r12, je_0x4c, mov_r13_rbx, mov_rbx_qword_ptr_[r@@ bp+0x20], movsx@@ _r15@@ _byte_ptr_[rbx], cmp_r15b@@ _0x23, jne_0xffffffffffffff9f, cmp_rbx_r12, je_0x1@@ aa, lea_rax_[rbx+1], jmp_0x17, movzx_edx_byte_ptr_[rax], inc_rax, test_dl_dl, je_0xffffffffffffff@@ 94, cmp_dl_0xa, je_0xffffffffffffff@@ 8f, mov_qword_ptr_[rbp+0x20]_rax, mov_rbx_rax, cmp_r12_rax, jne_0xffffffffffffffe7, jmp_0xffffffffffffffb6, mov_qword_ptr_[rbp+0x1@@ 8]_r12, mov_dword_ptr_[rbp+0x@@ 10]@@ _0xc, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, cmp_byte_ptr_[r13]_0, je_0xffffffffffffffdf, mov_eax_0x@@ 9@@ 20, bt_rax@@ _r14, jae_0x@@ 70, mov_dword_ptr_[rbp+0x@@ 10]_0, movzx_eax_byte_ptr_[rbx], sub_eax@@ _0x22, cmp_al_0x5@@ b, ja_0x2@@ 07, lea_rcx_[rip+0x@@ 112@@ 2e], movzx_eax_al, movsxd_rax_dword_ptr_[r@@ cx+rax*4], add_rax_rcx, jmp_rax, mov_qword_ptr_[rbp+0x@@ 20]@@ _r12, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_dword_ptr_[rbp+0x@@ 10]_0, movzx_eax_byte_ptr_[rbx], cmp_al_0x3d, jg@@ _0x8@@ c, cmp_al_0x2@@ 1, jle_0x@@ 1d, sub_eax@@ _0x22, cmp_al@@ _0x1b, ja@@ _0x16, lea_rcx_[rip+0x@@ 113@@ 28], movzx_eax_al, movsxd_rax_dword_ptr_[r@@ cx+rax*4], add_rax_rcx, jmp_rax, mov_dword_ptr_[rbp+0x@@ 10]@@ _0xa, cmp_rbx_r12, je_0xffffffffffffff@@ ad, xor_edi_edi, jmp_0x18, test_byte_ptr_[rdx@@ +rax*2+1]_0x20, jne_0x31, inc_rbx, cmp_rbx_r12, je_0x29, movsx_rax@@ _byte_ptr_[rbx], test_al_al, je_0x21, cmp_al_0x2@@ 3, setne_cl, cmp_al_0x7@@ b, setne_sil, and_ecx@@ _esi, mov_esi_eax, and_esi@@ _0xffffff@@ bf, cmp_sil@@ _0x3d, setne_sil, test_cl@@ _sil, jne_0xffffffffffffffcc, mov_r12_rbx, test_edi_edi, je_0xffffffffffffff@@ 65, mov_dword_ptr_[rbp+0x@@ 10@@ ]_4, mov_r12_rbx, jmp_0xffffffffffffff55, cmp_al_0x7@@ b, je_0x12@@ e, jle_0x@@ 18, cmp_al_0x7@@ d, jne_0xffffffffffffff@@ 8d, mov_dword_ptr_[rbp+0x@@ 10@@ ]_7, lea_r12_[r@@ bx+1], jmp_0xffffffffffffff37, cmp_al_0x5@@ b, je_0x1@@ 1e, cmp_al@@ _0x5d, jne_0xffffffffffffff@@ 6f, mov_dword_ptr_[rbp+0x@@ 10@@ ]_9, lea_r12_[r@@ bx+1], jmp_0xffffffffffffff15, mov_qword_ptr_[rbp+0x1@@ 8]_rbx, jmp_0xfffffffffffffe@@ 88, mov_dword_ptr_[rbp+0x@@ 10]@@ _0xa, cmp_rbx_r12, je_0xfffffffffffffe@@ d7, mov_edi_1, jmp_0xfffffffffffffe@@ 9a, mov_dword_ptr_[rbp+0x@@ 10@@ ]_6, lea_r12_[r@@ bx+1], jmp_0xfffffffffffffe@@ 15, mov_dword_ptr_[rbp+0x@@ 10@@ ]_8, lea_r12_[r@@ bx+1], jmp_0xfffffffffffffe@@ 0@@ 5
push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0xe8, mov_qword_ptr_[rsp+0x10@@ 40]_rdx, mov_qword_ptr_[rsp+0x10@@ 4@@ 8]_rcx, mov_qword_ptr_[rsp+0x10@@ 5@@ 0]_r8, mov_qword_ptr_[rsp+0x10@@ 5@@ 8]_r9, mov_rbx_rdi, mov_r12_rsi, test_al_al, je_0x42, movaps_xmmword_ptr_[r@@ sp+0x10@@ 60]_xmm0, movaps_xmmword_ptr_[r@@ sp+0x10@@ 70]_xmm1, movaps_xmmword_ptr_[r@@ sp+0x10@@ 80@@ ]_xmm2, movaps_xmmword_ptr_[r@@ sp+0x10@@ 90@@ ]_xmm3, movaps_xmmword_ptr_[r@@ sp+0x10@@ a0@@ ]_xmm4, movaps_xmmword_ptr_[r@@ sp+0x10@@ b0@@ ]_xmm5, movaps_xmmword_ptr_[r@@ sp+0x10@@ c0@@ ]_xmm6, movaps_xmmword_ptr_[r@@ sp+0x10@@ d0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x10@@ 28]_rax, xor_eax_eax, lea_r13_[r@@ sp+8], lea_rax_[rsp+0x1@@ 110], lea_rbp_[rsp+0x20], mov_qword_ptr_[rsp+0x10]_rax, mov_r8_r12, lea_rax_[r@@ sp+0x10@@ 30], mov_ecx_0x1000, mov_edx_1, mov_r9_r13, mov_esi_0x1000, mov_rdi_rbp, mov_qword_ptr_[rsp]_0, mov_dword_ptr_[rsp+8]@@ _0x10, mov_dword_ptr_[rsp+0xc]@@ _0x30, mov_qword_ptr_[rsp+0x18]_rax, call_0xfffffffffffe@@ 64@@ 26, lea_r8_[rip+0x10@@ 9d@@ 2], mov_ecx_0xffffffff, mov_edx_0x@@ fd, test_eax_eax, js@@ _0xfe, cmp_eax@@ _0xfff, jg_0x@@ 9b, mov_rsi_qword_ptr_[rsp], mov_rdi_qword_ptr_[rbx], test_rsi_rsi, cmove_rsi@@ _rbp, xor_edx_edx, call_0x4f@@ 6d, mov_r12d_eax, test_eax_eax, jne_0x63, lea_r9_[rip+0x@@ 1c@@ 8d@@ a], mov_edi_3, lea_r8_[rip+0x10@@ 9d@@ 6], mov_ecx_0xffffffff, mov_edx_0x1@@ 11, lea_rsi_[rip+0x10@@ d0@@ 9], xor_eax_eax, call_qword_ptr_[r9], mov_rdi_qword_ptr_[rsp], call_0xfffffffffffe6@@ 48@@ 4, mov_rax_qword_ptr_[r@@ sp+0x10@@ 28], xor_rax_qword_ptr_fs:[0x28], jne_0xae, add_rsp_0x10@@ e8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, mov_rdi_qword_ptr_[rsp], mov_r12d_1, call_0xfffffffffffe6@@ 44@@ 6, jmp_0xffffffffffffffc2, lea_rax_[rsp+0x1@@ 110], mov_qword_ptr_[rsp+0x10]_rax, mov_rdi_rsp, lea_rax_[r@@ sp+0x10@@ 30], mov_rdx_r13, mov_rsi_r12, mov_dword_ptr_[rsp+8]@@ _0x10, mov_dword_ptr_[rsp+0xc]@@ _0x30, mov_qword_ptr_[rsp+0x18]_rax, call_0x3a@@ 25, test_eax_eax, jns_0xffffffffffffff@@ 31, lea_r8_[rip+0x10@@ 90@@ 1], mov_ecx_0xffffffff, mov_edx_0x1@@ 0b, lea_r9_[rip+0x@@ 1c@@ 80@@ 9], lea_rsi_[rip+0x10@@ c4@@ e], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], xor_r12d_r12d, jmp_0xffffffffffffff46, call_0xfffffffffffe@@ 67@@ 6@@ 0
push_rbp, mov_rbp_rsp, push_r13, push_r12, mov_r12_rdi, sub_rsp_0x20, mov_r9d_dword_ptr_[r@@ si], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x18]_rax, xor_eax_eax, cmp_r9d@@ _2, je_0x10b, ja_0x6@@ 5, test_r9d_r9d, je_0xc0, pxor_xmm0_xmm0, cvtss2@@ sd_xmm0@@ _dword_ptr_[r@@ si+8], mov_eax_1, lea_rsi_[rip+0x10@@ b@@ fe], call_0xfffffffffffffd@@ 85, mov_r12d_eax, lea_r8_[rip+0x@@ eb@@ 6b], xor_ecx_ecx, mov_edx_0x1@@ 41, test_eax_eax, je_0x70, mov_r12d_1, mov_rax_qword_ptr_[rbp-0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ e0, lea_rsp_[rbp-0x@@ 10], mov_eax_r12d, pop_r12, pop_r13, pop_rbp, ret, cmp_r9d@@ _3, jne_0x@@ ec, test_byte_ptr_[r@@ si+0x1@@ 8]_2, lea_rax_[rip+0xa@@ 56@@ a], lea_rdx_[rip+0x11@@ 16@@ e], cmove_rdx_rax, lea_rsi_[rip+0x10@@ b@@ 9a], xor_eax_eax, call_0xfffffffffffffd@@ 17, mov_r12d_eax, test_eax_eax, jne_0xffffffffffffffa2, lea_r8_[rip+0x@@ ea@@ f9], xor_ecx_ecx, mov_edx_0x1@@ 4d, lea_r9_[rip+0x@@ 1c@@ 70@@ 6], lea_rsi_[rip+0x10@@ b4@@ b], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], jmp_0xffffffffffffff80, test_byte_ptr_[r@@ si+0x1@@ a]_1, mov_rdx_qword_ptr_[r@@ si+8], je_0xb8, lea_rsi_[rip+0x10@@ b4@@ 7], xor_eax_eax, call_0xfffffffffffffcc@@ 9, mov_r12d_eax, lea_r8_[rip+0x@@ ea@@ af], xor_ecx_ecx, mov_edx_0x1@@ 46, test_eax_eax, jne_0xffffffffffffff@@ 46, jmp_0xffffffffffffffae, mov_rdi_qword_ptr_[r@@ si+8], mov_qword_ptr_[rbp-0x2@@ 8]_rsi, call_0x3a@@ d8, add_rax@@ _0x17, mov_rdx_rax, mov_rcx_rsp, and_rax@@ _0xffffffffffff@@ f000, sub_rcx_rax, mov_rsi_qword_ptr_[rbp-0x@@ 28], and_rdx@@ _0xfffffffffffffff0, mov_rax_rcx, cmp_rsp@@ _rax, je_0x82, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, jmp_0xffffffffffffff@@ e7, lea_r10_[rip+0x@@ 1c@@ 65@@ 9], lea_r8_[rip+0x10@@ 78@@ a], mov_ecx_0xffffffff, mov_edx_0x1@@ 51, lea_rsi_[rip+0x10@@ a@@ 8d], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], jmp_0xfffffffffffffe@@ bc, lea_rsi_[rip+0xa@@ b@@ fe], xor_eax_eax, call_0xfffffffffffffc@@ 17, mov_r12d_eax, lea_r8_[rip+0xe@@ 9@@ fd], xor_ecx_ecx, mov_edx_0x1@@ 48, test_eax_eax, jne_0xfffffffffffffe@@ 94, jmp_0xfffffffffffffefc, and_edx@@ _0xfff, sub_rsp@@ _rdx, test_rdx_rdx, jne_0x64, lea_rdi_[rsp+0x@@ f], and_rdi@@ _0xfffffffffffffff0, lea_rdx_[rip+0x10@@ db@@ d], test_byte_ptr_[r@@ si+0x1@@ a]_1, lea_r13_[rip+0x@@ a@@ 40@@ 6], mov_rsi_qword_ptr_[r@@ si+8], cmove@@ _r13@@ _rdx, call_0x3d@@ af, mov_rcx_rax, mov_rdi_r12, mov_r8_r13, mov_rdx_r13, lea_rsi_[rip+0x@@ eb@@ 13], xor_eax_eax, call_0xfffffffffffffb@@ a5, mov_r12d_eax, test_eax_eax, jne_0xfffffffffffffe@@ 30, lea_r8_[rip+0xe@@ 98@@ 3], xor_ecx_ecx, mov_edx_0x1@@ 3d, jmp_0xfffffffffffffe@@ 8a, or_qword_ptr_[r@@ sp@@ +rdx@@ -8]_0, jmp_0xffffffffffffff98, call_0xfffffffffffe@@ 64@@ f@@ 8
mov_rax_rsi, mov_rsi_qword_ptr_[rsi], test_rsi_rsi, je_0x48, push_rbp, mov_rbp_rdi, push_rbx, lea_rbx_[rax@@ +8], sub_rsp_8, jmp_0x14, mov_rsi_qword_ptr_[rbx], add_rbx_8, test_rsi_rsi, je_0x1e, mov_rdi_rbp, call_0xfffffffffffe@@ 5f@@ 41, test_eax_eax, jne_0xffffffffffffffea, add_rsp_8, pop_rbx, mov_eax_1, pop_rbp, ret, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret, xor_eax_eax, ret
push_r12, mov_r12d_1, push_rbp, mov_rbp_rdi, push_rbx, mov_ebx_esi, sub_rsp_0x60, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x58]_rax, xor_eax_eax, lea_rax_[rip+0xa@@ 5c@@ 4], mov_qword_ptr_[rsp]_rax, lea_rax_[rip+0x10@@ 96@@ 1], mov_qword_ptr_[rsp+8]_rax, lea_rax_[rip+0x@@ ec@@ cd], mov_qword_ptr_[rsp+0x10]_rax, lea_rax_[rip+0x10@@ 94@@ d], mov_qword_ptr_[rsp+0x18]_rax, lea_rax_[rip+0x@@ 12@@ 418], mov_qword_ptr_[rsp+0x30]_rax, lea_rax_[rip+0x10@@ 93@@ a], mov_qword_ptr_[rsp+0x38]_rax, lea_rax_[rip+0x10@@ 93@@ 1], mov_qword_ptr_[rsp+0x40]_rax, mov_rsi_rsp, lea_rax_[rip+0x10@@ 92@@ 6], mov_qword_ptr_[rsp+0x20]_0, mov_qword_ptr_[rsp+0x48]_rax, mov_qword_ptr_[rsp+0x50]_0, call_0xffffffffffffff@@ 09, test_eax_eax, jne_0x18, lea_rsi_[rsp+0x30], mov_rdi_rbp, mov_r12d_eax, call_0xfffffffffffffe@@ f5, test_eax_eax, cmove@@ _r12d@@ _ebx, mov_rax_qword_ptr_[rsp+0x58], xor_rax_qword_ptr_fs:[0x28], jne_0xe, add_rsp_0x60, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, call_0xfffffffffffe6@@ 3b@@ e
push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, mov_esi_0x20, call_0x4c@@ 91, mov_r12_rax, test_rax_rax, je_0x8e, mov_eax_dword_ptr_[rbx], mov_dword_ptr_[r12]_eax, cmp_eax_2, je_0x37, mov_rax_qword_ptr_[rbx+8], mov_qword_ptr_[r12+8]_rax, mov_rsi_qword_ptr_[rbx+0x10], test_rsi_rsi, je_0x18, mov_rdi_rbp, call_0xffffffffffffff@@ c0, mov_qword_ptr_[r12+0x10]_rax, test_rax_rax, je_0x8b, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, mov_rsi_qword_ptr_[rbx+8], mov_rdi_rbp, call_0x4b@@ 89, mov_qword_ptr_[r12+8]_rax, test_rax_rax, jne_0xffffffffffffffc0, lea_r9_[rip+0x@@ 1c@@ 3c@@ 3], lea_r8_[rip+0x10@@ 5@@ 1c], mov_ecx_0xffffffff, mov_edx_0x5@@ 3c, lea_rsi_[rip+0x10@@ 7f@@ 7], mov_edi_3, call_qword_ptr_[r9], xor_r12d_r12d, jmp_0xffffffffffffffb3, lea_r9_[rip+0x@@ 1c@@ 39@@ 1], lea_r8_[rip+0x10@@ 8@@ 16], mov_ecx_0xffffffff, mov_edx_0x5@@ 35, lea_rsi_[rip+0x10@@ 7c@@ 5], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], jmp_0xffffffffffffff82, lea_r9_[rip+0x@@ 1c@@ 36@@ 1], lea_r8_[rip+0x@@ e7@@ 3f], xor_ecx_ecx, mov_edx_0x5@@ 43, lea_rsi_[rip+0x10@@ 7@@ 98], mov_edi_7, call_qword_ptr_[r9], xor_r12d_r12d, jmp_0xffffffffffffff5@@ 4
push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdx, sub_rbx@@ _rsi, lea_rsi_[r@@ bx+1], call_0x48@@ 1f, mov_r12_rax, test_rax_rax, je_0x24, mov_rdx_rbx, mov_rsi_rbp, mov_rdi_rax, call_0xfffffffffffe6@@ 50@@ 9, mov_byte_ptr_[r12+r@@ bx]_0, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret, lea_r9_[rip+0x@@ 1c@@ 2e@@ 9], xor_eax_eax, lea_r8_[rip+0x10@@ 78@@ a], mov_ecx_0xffffffff, mov_edx_0x3@@ 9b, lea_rsi_[rip+0x10@@ 7@@ 1b], mov_edi_3, call_qword_ptr_[r9], pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret
push_r15, push_r14, mov_r14_rsi, push_r13, mov_r13_rdi, push_r12, push_rbp, push_rbx, mov_rbx_rdx, sub_rsp_0x18, mov_dword_ptr_[rsp+8]_ecx, test_rsi_rsi, je_0x1@@ ef, mov_rbp_qword_ptr_[r@@ si+0x18], mov_rax_rbp, or_rax@@ _rdi, test_r13_r13, setne@@ _byte_ptr_[rsp+0x@@ f], test_rax_rax, jne_0xa, jmp_0x3d, inc_rbx, movzx_eax_byte_ptr_[rbx], cmp_al_0x2f, je_0xfffffffffffffff@@ 8, mov_r12_rbx, test_al_al, jne_0xd, jmp_0x16, cmp_al_0x2f, je_0xd, movzx_eax_byte_ptr_[rbx+1], inc_rbx, test_al_al, jne_0xfffffffffffffff3, mov_ecx_dword_ptr_[rsp+8], test_ecx_ecx, je_0x8b, test_r13_r13, jne_0x1a, xor_r15d_r15d, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_rax_r15, pop_r15, ret, mov_esi_0x30, mov_rdi_r13, call_0x4a@@ 78, mov_r15_rax, test_rax_rax, je_0x12@@ 2, mov_rdx_rbx, mov_rsi_r12, mov_rdi_r13, call_0xfffffffffffffec@@ e, mov_qword_ptr_[r15]_rax, test_r14_r14, je_0xf8, mov_rax_qword_ptr_[r@@ 14+0x18], mov_qword_ptr_[r15+@@ 8]_r14, mov_qword_ptr_[r15+0x1@@ 0]_rax, mov_qword_ptr_[r14+0x1@@ 8]_r15, mov_r14_r15, movzx_eax_byte_ptr_[rbx], test_al_al, je_0x91, mov_rbp_qword_ptr_[r@@ 14+0x18], mov_rdi_r13, or@@ _rdi@@ _rbp, jne_0xffffffffffffff@@ 5b, jmp_0xffffffffffffff87, mov_r15_rbx, xor_r10d_r10d, sub_r15@@ _r12, test_rbp_rbp, je_0xffffffffffffff@@ 6f, mov_r9_qword_ptr_[r@@ bp], mov_rcx_r12, lea_rsi_[r@@ 9+r@@ 15], mov_rax_r9, jmp_0x12, cmp_rsi_rax, je_0x19, inc_rcx, inc_rax, cmp_byte_ptr_[rcx@@ -1]@@ _dl, jne_0xe, movzx_edx_byte_ptr_[rax], test_dl_dl, jne_0xffffffffffffffeb, cmp_rcx@@ _rbx, je_0x3e, mov_rbp_qword_ptr_[r@@ bp+0x10], test_rbp_rbp, jne_0xffffffffffffffcd, test_r10_r10, jne_0x16, cmp_byte_ptr_[rsp+0x@@ f]_0, jne_0xffffffffffffff@@ 41, test_r10_r10, je_0xffffffffffffff@@ 20, movzx_eax_byte_ptr_[rbx], mov_r14@@ _r10, test_al_al, jne_0xffffffffffffff@@ 7b, mov_r15_r14, jmp_0xffffffffffffff0c, test_r10_r10, mov_qword_ptr_[rsp]_r10, je_0x3e, sub_rsp_8, push_r12, lea_r11_[rip+0x@@ 1c@@ 12@@ 2], mov_edx_0x2@@ 27, xor_eax_eax, lea_r8_[rip+0x10@@ 29@@ c], xor_ecx_ecx, lea_rsi_[rip+0x10@@ 55@@ 7], mov_edi_0x84, call_qword_ptr_[r@@ 11], pop_rax, pop_rdx, mov_r10_qword_ptr_[rsp], jmp_0xffffffffffffff89, mov_r14_r15, jmp_0xffffffffffffff1e, mov_r10@@ _rbp, jmp_0xffffffffffffff7c, lea_rbx_[rip+0x@@ 1c@@ 0@@ e4], xor_ecx_ecx, xor_eax_eax, lea_r8_[rip+0xe@@ 4b@@ e], mov_edx_0x200, lea_rsi_[rip+0x10@@ 5@@ 19], mov_edi_7, call_qword_ptr_[r@@ bx], lea_r8_[rip+0xe@@ 4a@@ 4], xor_ecx_ecx, mov_edx_0x2@@ 32, lea_rsi_[rip+0x10@@ 4@@ fd], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], jmp_0xfffffffffffffe@@ 73, mov_rax_rdi, xor_ebp_ebp, jmp_0xfffffffffffffe@@ 1@@ c
endbr64, sub_rsp_0x48, pxor_xmm0_xmm0, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_rdx_rsi, movaps_xmmword_ptr_[rsp+0x10]_xmm0, xor_ecx_ecx, mov_qword_ptr_[rsp+0x18]_rdi, mov_rsi_rsp, xor_edi_edi, movaps_xmmword_ptr_[rsp]_xmm0, movaps_xmmword_ptr_[rsp+0x20]_xmm0, call_0xfffffffffffffd@@ a7, mov_rcx_qword_ptr_[rsp+0x38], xor_rcx_qword_ptr_fs:[0x28], jne_7, add_rsp_0x48, ret, call_0xfffffffffffe5@@ fa@@ d
endbr64, push_r12, push_rbp, push_rbx, sub_rsp_0x40, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, test_rdi_rdi, je_0x61, mov_rbx_rdi, mov_rbp_rsi, mov_r12_rsp, jmp_0xf, mov_rbx_qword_ptr_[rbx+8], test_rbx_rbx, je_0x49, mov_rax_qword_ptr_[rbx], pxor_xmm0_xmm0, xor_ecx_ecx, xor_edi_edi, mov_rdx_rbp, mov_rsi_r12, movaps_xmmword_ptr_[rsp+0x10]_xmm0, movaps_xmmword_ptr_[rsp]_xmm0, mov_qword_ptr_[rsp+0x18]_rax, movaps_xmmword_ptr_[rsp+0x20]_xmm0, call_0xfffffffffffffd@@ 23, test_rax_rax, je_0xffffffffffffffcb, mov_rdx_qword_ptr_[rsp+0x38], xor_rdx_qword_ptr_fs:[0x28], jne_0xf, add_rsp_0x40, pop_rbx, pop_rbp, pop_r12, ret, xor_eax_eax, jmp_0xffffffffffffff@@ e5, call_0xfffffffffffe@@ 5f@@ 1@@ c
push_r12, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rax_qword_ptr_[rdi+0x18], lea_rsi_[rax+1], mov_rax_qword_ptr_[rdi+0x20], mov_qword_ptr_[rdi+0x1@@ 8]_rsi, lea_rdx_[rax-1], mov_qword_ptr_[rdi+0x@@ 20]_rdx, cmp_rsi_rdx, ja_0x2@@ b, mov_rdi_qword_ptr_[rdi+0x30], call_0xfffffffffffffc@@ 45, mov_r12_rax, test_rax_rax, je_0x6a, inc_qword_ptr_[r@@ bx+0x20], add_rsp_8, pop_rbx, mov_rax_r12, pop_r12, ret, mov_eax_dword_ptr_[rdi+0x@@ 28], sub_rsp_8, sub_rsi@@ _qword_ptr_[r@@ di], push_rax, lea_r10_[rip+0x@@ 1b@@ f@@ 3e], lea_r9_[r@@ si+1], mov_edx_0x1@@ e0, xor_eax_eax, lea_r8_[rip+0x@@ 100@@ f4], mov_ecx_0xffffffff, lea_rsi_[rip+0x10@@ 36@@ c], mov_edi_3, call_qword_ptr_[r10], pop_rax, pop_rdx, add_rsp_8, xor_r12d_r12d, pop_rbx, mov_rax_r12, pop_r12, ret, lea_r9_[rip+0x@@ 1b@@ ef@@ 9], lea_r8_[rip+0xe@@ 2d@@ 7], xor_ecx_ecx, mov_edx_0x1@@ e7, lea_rsi_[rip+0x10@@ 330], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], jmp_0xffffffffffffff7@@ 6
push_r12, mov_esi_0x20, push_rbp, mov_rbp_rdi, push_rbx, mov_rdi_qword_ptr_[rdi+0x30], call_0x47@@ 20, mov_r12_rax, test_rax_rax, je_0x2@@ dd, cmp_dword_ptr_[rbp+0x@@ 10@@ ]_4, ja_0x2@@ a3, mov_eax_dword_ptr_[rbp+0x10], lea_rdx_[rip+0x10@@ 6@@ 2f], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, lea_r10_[rip+0x@@ 1b@@ e@@ 29], xor_eax_eax, lea_rsi_[rip+0x10@@ 26@@ c], mov_edi_3, call_qword_ptr_[r10], pop_rax, pop_rdx, xor_r12d_r12d, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, mov_rax_qword_ptr_[rbp+0x18], mov_edx_dword_ptr_[rbp+0x@@ 28], sub_rax_qword_ptr_[r@@ bp], sub_rsp_8, push_rdx, lea_r9@@ _[rax+1], lea_r8_[rip+0x@@ fe@@ 85], mov_ecx_0xffffffff, mov_edx_0x2@@ e7, jmp_0xfffffffffffffd@@ b3, lea_r9_[rip+0x@@ 1bb@@ d1], lea_r8_[rip+0x@@ 100@@ 8f], mov_ecx_0xffffffff, mov_edx_0x2@@ a6, lea_rsi_[rip+0x1@@ 000@@ 5], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], jmp_0xfffffffffffffd@@ 9@@ c
push_r15, push_r14, push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, mov_eax_dword_ptr_[rdi+0x10], cmp_eax_3, je_0xe6, cmp_eax_2, je_0x95, mov_rdx_qword_ptr_[r@@ di+0x20], mov_rsi_qword_ptr_[r@@ di+0x18], mov_rdi_qword_ptr_[rdi+0x30], call_0xfffffffffffff70@@ b, mov_rbx_rax, lea_r8_[rip+0x@@ de@@ 11], xor_ecx_ecx, mov_edx_0x2@@ 55, test_rax_rax, je_0x1@@ 98, cmp_dword_ptr_[rbp+0x@@ 10]@@ _0xa, je_0x1@@ b8, mov_rax_qword_ptr_[rbp+0x18], mov_edx_dword_ptr_[rbp+0x@@ 28], sub_rax_qword_ptr_[r@@ bp], sub_rsp_8, push_rdx, lea_r9@@ _[rax+1], lea_r8_[rip+0x@@ fc@@ 57], mov_ecx_0xffffffff, mov_edx_0x2@@ 57, lea_r10_[rip+0x@@ 1b@@ 9e@@ 6], xor_eax_eax, lea_rsi_[rip+0x@@ fe@@ 29], mov_edi_3, call_qword_ptr_[r10], pop_rax, pop_rdx, xor_r15d_r15d, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_rax_r15, pop_r15, ret, call_0xfffffffffffffa@@ 18, mov_rbx_rax, test_rax_rax, je_0x1@@ 15, cmp_dword_ptr_[rbp+0x@@ 10@@ ]_2, je_0x93, mov_rax_qword_ptr_[rbp+0x18], mov_edx_dword_ptr_[rbp+0x@@ 28], sub_rax_qword_ptr_[r@@ bp], sub_rsp_8, push_rdx, lea_r9@@ _[rax+1], lea_r8_[rip+0x@@ fb@@ e2], mov_ecx_0xffffffff, mov_edx_0x2@@ 52, jmp_0xffffffffffffff8b, call_0xfffffffffffff9d@@ 0, mov_rbx_rax, lea_r8_[rip+0x@@ dd@@ 46], xor_ecx_ecx, mov_edx_0x2@@ 4a, test_rax_rax, je_0xcd, mov_rdi_rax, call_0x3@@ 18@@ e, cmp_dword_ptr_[rbp+0x@@ 10@@ ]_3, je_0x12d, mov_rax_qword_ptr_[rbp+0x18], mov_edx_dword_ptr_[rbp+0x@@ 28], sub_rax_qword_ptr_[r@@ bp], sub_rsp_8, push_rdx, lea_r9@@ _[rax+1], lea_r8_[rip+0x@@ fb@@ 84], mov_ecx_0xffffffff, mov_edx_0x2@@ 4d, jmp_0xffffffffffffff2d, mov_esi_2, mov_rdi_rbp, call_0xffffffffffffeb@@ 68, cmp_byte_ptr_[rbx]_0, je_0xb8, mov_ecx_dword_ptr_[rbp+0x@@ 38], mov_rdi_qword_ptr_[rbp+0x30], mov_rdx_rbx, mov_rsi_r12, call_0xfffffffffffff6@@ 3d, mov_r15_rax, test_rax_rax, je_0x2@@ 32, mov_eax_dword_ptr_[rbp+0x10], cmp_eax_6, je_0x1@@ a6, cmp_eax_5, je_0xcd, mov_rax_qword_ptr_[rbp+0x18], mov_edx_dword_ptr_[rbp+0x@@ 28], sub_rax_qword_ptr_[r@@ bp], sub_rsp_8, push_rdx, lea_r9@@ _[rax+1], lea_r8_[rip+0x@@ fb@@ 0c], mov_ecx_0xffffffff, mov_edx_0x2@@ 6b, jmp_0xfffffffffffffe@@ b5, lea_r8_[rip+0x@@ dc@@ 76], xor_ecx_ecx, mov_edx_0x2@@ 50, lea_r9_[rip+0x@@ 1b@@ 88@@ 3], lea_rsi_[rip+0x@@ fc@@ c8], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], xor_r15d_r15d, jmp_0xfffffffffffffe@@ 9f, mov_esi_0xa, mov_rdi_rbp, call_0xffffffffffffea@@ b8, jmp_0xffffffffffffff50, mov_rax_qword_ptr_[rbp+0x18], mov_edx_dword_ptr_[rbp+0x@@ 28], sub_rax_qword_ptr_[r@@ bp], sub_rsp_8, push_rdx, lea_r9@@ _[rax+1], lea_r8_[rip+0x@@ fa@@ fd], mov_ecx_0xffffffff, mov_edx_0x2@@ 5b, jmp_0xfffffffffffffe@@ 36, mov_esi_3, mov_rdi_rbp, call_0xffffffffffffea@@ 70, jmp_0xffffffffffffff08, mov_esi_5, mov_rdi_rbp, call_0xffffffffffffea@@ 58, mov_rax_qword_ptr_[r15], cmp_dword_ptr_[rbp+0x@@ 10@@ ]_8, mov_qword_ptr_[rbp+0x@@ 40]_rax, je_0x58, mov_rdi_rbp, call_0xfffffffffffff9@@ 13, mov_r13_rax, test_rax_rax, je_0x1@@ b0, cmp_qword_ptr_[r15+0x@@ 20]_0, je_0x2b, lea_r10_[rip+0x@@ 1b@@ 7c@@ 4], mov_r9_rbx, lea_r8_[rip+0x@@ fa@@ ca], xor_ecx_ecx, mov_edx_0x2@@ 70, lea_rsi_[rip+0x@@ fb@@ f8], mov_edi_0x84, xor_eax_eax, call_qword_ptr_[r10], mov_qword_ptr_[r15+0x@@ 20]@@ _r13, jmp_0xfffffffffffffd@@ ce, mov_esi_8, mov_rdi_rbp, call_0xffffffffffffe@@ 9e8, cmp_dword_ptr_[rbp+0x@@ 10@@ ]_9, je_0x1@@ 7e, xor_r12d_r12d, xor_r13d_r13d, jmp_0x1c, mov_qword_ptr_[r14+0x1@@ 0]_rax, mov_eax_dword_ptr_[rbp+0x10], cmp_eax_0xb, je_0x86, cmp_eax_9, je_0x123, mov_rdi_rbp, call_0xfffffffffffff88@@ 4, mov_r14_r12, mov_r12_rax, test_rax_rax, je_0xc1, test_r13_r13, jne_0xffffffffffffffcd, mov_r13_rax, jmp_0xffffffffffffffcc, mov_esi_6, mov_rdi_rbp, call_0xffffffffffffe@@ 988, cmp_dword_ptr_[rbp+0x@@ 10@@ ]_7, je_0x57, mov_rsi_r15, mov_rdi_rbp, call_0xfffffffffffffc@@ a7, test_rax_rax, jne_0xffffffffffffffec, lea_r9_[rip+0x@@ 1b@@ 70@@ 6], lea_r8_[rip+0x@@ da@@ e4], xor_ecx_ecx, mov_edx_0x2@@ 67, lea_rsi_[rip+0x@@ fb@@ 3d], mov_edi_7, call_qword_ptr_[r9], xor_r15d_r15d, jmp_0xfffffffffffffd@@ 16, mov_esi@@ _0xb, mov_rdi_rbp, call_0xffffffffffffe@@ 938, mov_eax_dword_ptr_[rbp+0x10], jmp_0xffffffffffffff70, mov_esi_7, mov_rdi_rbp, call_0xffffffffffffe9@@ 20, jmp_0xfffffffffffffc@@ eb, lea_r9_[rip+0x@@ 1b@@ 6a@@ 9], lea_r8_[rip+0x@@ da@@ 87], xor_ecx_ecx, mov_edx_0x2@@ 61, lea_rsi_[rip+0x@@ fa@@ e0], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], jmp_0xfffffffffffffc@@ ba, lea_rbx_[rip+0x@@ 1b@@ 67@@ e], lea_r8_[rip+0x@@ da@@ 5c], xor_ecx_ecx, mov_edx_0x2@@ 80, lea_rsi_[rip+0x@@ fa@@ b5], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], lea_r8_[rip+0x@@ da@@ 3e], xor_ecx_ecx, mov_edx_0x2@@ 6e, lea_rsi_[rip+0x@@ fa@@ 97], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], xor_r15d_r15d, jmp_0xfffffffffffffc@@ 6f, mov_esi_9, mov_rdi_rbp, call_0xffffffffffffe8@@ 92, jmp_0xfffffffffffffe@@ 5b, lea_rbx_[rip+0x@@ 1b@@ 6@@ 21], lea_r8_[rip+0xd@@ 9@@ ff], xor_ecx_ecx, mov_edx_0x2@@ 9a, lea_rsi_[rip+0x@@ fa@@ 58], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], jmp_0xffffffffffffffa3, mov_esi_9, mov_rdi_rbp, call_0xffffffffffffe@@ 85@@ 9, mov_rdi_qword_ptr_[rbp+0x30], mov_esi_0x20, call_0x3e@@ 4b, mov_r13_rax, test_rax_rax, je_0xd, mov_dword_ptr_[rax@@ ]_3, jmp_0xfffffffffffffe@@ 06, lea_rbx_[rip+0x@@ 1b@@ 5c@@ c], lea_r8_[rip+0x@@ fa@@ ec], or_ecx_0xffffffff, mov_edx_0x2@@ 91, lea_rsi_[rip+0x@@ fa@@ 02], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ bx], jmp_0xffffffffffffff4@@ d
push_r15, mov_r15_rsi, mov_esi_0x50, push_r14, mov_r14_rcx, push_r13, mov_r13d_r8d, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x48, mov_rdi_qword_ptr_[r15], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, call_0x3d@@ cb, test_rax_rax, je_0x1@@ 3b, mov_rbx_rax, mov_rax_qword_ptr_[r15], mov_qword_ptr_[rbx@@ ]_r12, mov_qword_ptr_[rbx+0x30]_rax, mov_qword_ptr_[rbx+0x20]@@ _r12, mov_qword_ptr_[rbx+0x1@@ 8]_r12, mov_qword_ptr_[rbx+@@ 8]_r14, mov_dword_ptr_[rbx+0x@@ 28]_1, mov_dword_ptr_[rbx+0x@@ 38]@@ _r13d, mov_esi_7, mov_rdi_rbx, call_0xffffffffffffe7@@ 91, pxor_xmm0_xmm0, lea_rax_[rip+0x@@ fa@@ 61], mov_qword_ptr_[rsp+0x28]_0, mov_qword_ptr_[rsp]_rax, movups_xmmword_ptr_[r@@ sp+@@ 8]_xmm0, movups_xmmword_ptr_[r@@ sp+0x1@@ 8]_xmm0, mov_r12_rsp, jmp_0x17, mov_rsi_r12, mov_rdi_rbx, call_0xfffffffffffffa@@ 8a, test_rax_rax, je_0x7a, cmp_dword_ptr_[rbx+0x1@@ 0]@@ _0xc, jne_0xffffffffffffffec, mov_rdx_qword_ptr_[rsp+0x18], xor_eax_eax, mov_qword_ptr_[rbp]_rdx, test_rdx_rdx, je_0xe1, mov_rcx_qword_ptr_[r@@ dx+0x10], mov_qword_ptr_[rdx+0x1@@ 0]_rax, mov_rdi_qword_ptr_[r@@ dx+0x18], call_0xffffffffffffe5@@ 24, mov_qword_ptr_[rdx+0x1@@ 8]_rax, mov_rax_rdx, test_rcx_rcx, je_0xd, mov_rdx_rcx, jmp_0xffffffffffffffe0, mov_qword_ptr_[rbp]_rdx, mov_eax_1, mov_rsi_qword_ptr_[rsp+0x38], xor_rsi_qword_ptr_fs:[0x28], jne_0x9f, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rbx_[rip+0x@@ 1b@@ 47@@ 1], lea_r8_[rip+0xd@@ 84@@ f], xor_ecx_ecx, mov_edx_0x1@@ f5, lea_rsi_[rip+0xf@@ 8a@@ 8], mov_edi_7, call_qword_ptr_[r@@ bx], mov_qword_ptr_[rbp]_0, xor_eax_eax, lea_r8_[rip+0x@@ d8@@ 29], xor_ecx_ecx, mov_edx_0x@@ c1, lea_rsi_[rip+0xf@@ 88@@ 2], mov_edi_7, call_qword_ptr_[r@@ bx], xor_eax_eax, jmp_0xffffffffffffff8e, lea_r9_[rip+0x@@ 1b@@ 42@@ 1], xor_eax_eax, lea_r8_[rip+0x@@ d7@@ fd], xor_ecx_ecx, mov_edx_0x@@ b6, lea_rsi_[rip+0xf@@ 85@@ 6], mov_edi_7, call_qword_ptr_[r9], xor_eax_eax, jmp_0xffffffffffffff61, lea_rbx_[rip+0x@@ 1b@@ 3f@@ 4], jmp_0xffffffffffffffa7, call_0xfffffffffffe5@@ 36@@ 2
push_r12, mov_esi_0x80, mov_r12d_1, call_0x3@@ 9b@@ 3, test_eax_eax, jne_0x2e, lea_r9_[rip+0x@@ 1b@@ 3c@@ 3], mov_r12d_eax, lea_r8_[rip+0x@@ f@@ 6f@@ 9], mov_ecx_0xffffffff, mov_edx_0x@@ e4, lea_rsi_[rip+0x@@ f7@@ f4], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], mov_eax_r12d, pop_r12, ret
push_r12, mov_edx_1, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, mov_rdi_qword_ptr_[rbx], lea_rsi_[rip+0x@@ fb@@ 1f], call_0x3@@ 9f@@ 7, test_eax_eax, jne_0x40, lea_r9_[rip+0x@@ 1b@@ 36@@ 7], mov_r12d_eax, lea_r8_[rip+0x@@ f@@ 46@@ 5], mov_ecx_0xffffffff, mov_edx_0x1@@ 22, lea_rsi_[rip+0x@@ f7@@ 98], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, mov_rdi_qword_ptr_[rbx], call_0x3a@@ 8d, mov_r12_rax, mov_rax_qword_ptr_[rbx+8], test_rax_rax, je_0x3e, mov_rsi_qword_ptr_[rbx+0x18], mov_rdi_r12, call_rax, mov_rax_qword_ptr_[rbx+0x10], test_rax_rax, je_0x17, mov_rax_qword_ptr_[rax+8], test_rax_rax, je_0xe, mov_rdx_qword_ptr_[rbx+0x18], mov_rsi_r12, mov_rdi_rbp, call_rax, pop_rbx, mov_r12d_1, pop_rbp, mov_eax_r12d, pop_r12, ret, mov_rax_qword_ptr_[rbx+0x10], test_rax_rax, jne_0xffffffffffffffcf, xor_r12d_r12d, jmp_0xffffffffffffff9@@ 2
push_rbp, mov_rbp_rsp, push_r15, push_r14, push_r13, push_r12, push_rbx, sub_rsp_0x48, mov_dword_ptr_[rbp-0x6@@ c]_ecx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x38]_rax, xor_eax_eax, test_rdi_rdi, je_0x2@@ 6a, movsxd_rax@@ _dword_ptr_[rbp-0x@@ 6c], mov_r12_rdi, mov_rbx_rdx, test_eax_eax, jle_0x@@ 4c0, cmp_eax_0x20, mov_edx_0x20, cmovle@@ _rdx_rax, lea_r14_[r@@ bp-0x@@ 60], xor_eax_eax, mov_byte_ptr_[r14@@ +rax@@ ]_9, inc_rax, cmp_edx_eax, jg@@ _0xfffffffffffffff@@ 6, xor_esi@@ _1, mov_eax_esi, and_eax_1, mov_byte_ptr_[rbp@@ +rdx@@ -0x@@ 60]_0, mov_byte_ptr_[rbp-0x@@ 65@@ ]_al, mov_rax_qword_ptr_[r12+0x20], mov_dword_ptr_[rbp-0x@@ 64]_0, lea_r13_[rip+0x@@ 90@@ 80], test_rax_rax, je_0x24, mov_r15d_dword_ptr_[r@@ ax+0x18], lea_r13_[rip+0x@@ fc@@ 7b], test_r15b@@ _2, lea_rax_[rip+0x@@ 90@@ 65], cmove@@ _r13_rax, and@@ _r15d_1, mov_dword_ptr_[rbp-0x6@@ 4]_r15d, mov_rax_qword_ptr_[rbx+0x10], test_rax_rax, je_0x17, mov_rax_qword_ptr_[rax], test_rax_rax, je_0xf, mov_rdx_qword_ptr_[rbx+0x18], lea_rsi_[rbp-0x@@ 60], mov_rdi_r12, call_rax, mov_rdi_qword_ptr_[rbx], call_0xfffffffffffffe@@ 29, test_eax_eax, je_0x4@@ 31, mov_r15_qword_ptr_[r@@ 12], mov_esi_0x2@@ 3, mov_rdi_r15, call_0xfffffffffffe@@ 50@@ 60, test_rax_rax, je_0x1@@ e0, mov_rdi_r15, call_0x2@@ 60@@ f, add_rax@@ _0x19, mov_rdx_rax, mov_rcx_rsp, and_rax@@ _0xffffffffffff@@ f000, sub_rcx_rax, mov_rax_rcx, and_rdx@@ _0xfffffffffffffff0, cmp_rsp@@ _rax, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rax, jne_0xffffffffffffffed, and_edx@@ _0xfff, sub_rsp@@ _rdx, test_rdx_rdx, je_8, or_qword_ptr_[r@@ sp@@ +rdx@@ -8]_0, lea_rdx_[rsp+0x@@ f], and_rdx@@ _0xfffffffffffffff0, mov_byte_ptr_[rdx]@@ _0x22, mov_r14_rdx, lea_rdi_[r@@ dx+1], mov_rsi_qword_ptr_[r12], mov_r15_rdx, call_0x2@@ 958, mov_rdx_r14, mov_ecx_dword_ptr_[rdx], add_rdx_4, lea_eax_[rcx-0x1010101], not_ecx, and_eax_ecx, and_eax_0x80808080, je_0xffffffffffffffeb, mov_ecx_eax, shr_ecx_0x10, test_eax_0x8080, cmove_eax_ecx, lea_rcx_[rdx+2], cmove_rdx_rcx, mov_ecx_eax, add_cl_al, sbb_rdx_3, mov_ecx@@ _0x22, mov_word_ptr_[r@@ dx@@ ]_cx, lea_r14_[r@@ bp-0x@@ 60], xor_eax_eax, mov_rcx_r15, mov_rdx_r14, lea_rsi_[rip+0xd@@ 66@@ 2], mov_rdi_rbx, call_0xffffffffffffe@@ 70@@ e, test_eax_eax, je_0x3@@ 59, mov_r15_qword_ptr_[r@@ 12+0x20], test_r15_r15, je_0x1@@ 39, xor_eax_eax, mov_rcx_r13, mov_rdx_r13, lea_rsi_[rip+0xf@@ 64@@ 2], mov_rdi_rbx, call_0xffffffffffffe@@ 6e@@ 1, test_eax_eax, je_0x3@@ 52, cmp_qword_ptr_[r@@ 15+0x1@@ 0]_0, jne_0x1@@ 9f, mov_eax_dword_ptr_[rbp-0x64], test_eax_eax, je_0x2@@ 44, cmp_dword_ptr_[r@@ 15@@ ]_3, je_0x1e, xor_eax_eax, mov_rdx_r13, lea_rsi_[rip+0x@@ f6@@ 10], mov_rdi_rbx, call_0xffffffffffffe@@ 6a@@ 9, test_eax_eax, je_0x3@@ 9b, mov_rsi_r15, mov_rdi_rbx, call_0xffffffffffffe@@ 8c@@ 6, test_eax_eax, je_0x2@@ 27, cmp_dword_ptr_[r@@ 15@@ ]_3, jne_0x2@@ 55, mov_rsi_rbx, mov_rdi_r12, call_0xfffffffffffffc@@ f2, test_eax_eax, je_0x2@@ d0, mov_rax_qword_ptr_[rbx+0x10], test_rax_rax, je_0x17, mov_rax_qword_ptr_[rax+0x10], test_rax_rax, je_0xe, mov_rdx_qword_ptr_[rbx+0x18], mov_rsi_r14, mov_rdi_r12, call_rax, mov_r12_qword_ptr_[r@@ 12+0x10], test_r12_r12, je_0xf, cmp_byte_ptr_[rbp-0x@@ 65@@ ]_0, jne_0xfffffffffffffd@@ e5, mov_r9d_1, mov_rax_qword_ptr_[rbp-0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x3@@ 22, lea_rsp_[rbp-0x28], pop_rbx, pop_r12, pop_r13, pop_r14, pop_r15, mov_eax_r9d, pop_rbp, ret, mov_esi_0x2@@ 2, mov_rdi_r15, call_0xfffffffffffe@@ 4e@@ 70, test_rax_rax, jne_0xfffffffffffffe@@ 16, mov_esi_0x2@@ 1, mov_rdi_r15, call_0xfffffffffffe@@ 4e@@ 5a, test_rax_rax, jne_0xfffffffffffffe@@ 00, jmp_0xfffffffffffffea@@ 8, xor_eax_eax, lea_rsi_[rip+0xf@@ 50@@ e], mov_rdi_rbx, call_0xffffffffffffe@@ 5b@@ 4, test_eax_eax, je_0x2@@ 38, mov_rsi_rbx, mov_rdi_r12, call_0xfffffffffffffc@@ 21, test_eax_eax, je_0x2@@ 51, mov_eax_dword_ptr_[rbp-0x6c], mov_rdi_qword_ptr_[r@@ 12+0x18], xor_esi_esi, lea_ecx_[rax+1], mov_rdx_rbx, call_0xfffffffffffffcc@@ 4, test_eax_eax, je_0x2@@ 1e, mov_rdi_qword_ptr_[rbx], call_0xfffffffffffffb@@ a4, test_eax_eax, je_0x2@@ 3a, xor_eax_eax, mov_rdx_r14, lea_rsi_[rip+0xf@@ 4b@@ 5], mov_rdi_rbx, call_0xffffffffffffe@@ 55@@ 8, test_eax_eax, jne_0xfffffffffffffe@@ d9, mov_dword_ptr_[rbp-0x@@ 64]_eax, lea_r8_[rip+0xd@@ 33@@ 6], xor_ecx_ecx, mov_edx_0x1@@ 83, jmp_0x1@@ 4b, xor_eax_eax, mov_rdx_r13, lea_rsi_[rip+0x@@ f4@@ 88], mov_rdi_rbx, call_0xffffffffffffe5@@ 21, test_eax_eax, je_0x1@@ fd, mov_eax_dword_ptr_[r15], cmp_eax_3, je_0x56, mov_rsi_r15, mov_rdi_rbx, call_0xffffffffffffe7@@ 36, test_eax_eax, je_0xff, mov_r15_qword_ptr_[r@@ 15+0x10], test_r15_r15, je_0x3a, cmp_dword_ptr_[r@@ 15@@ ]_3, je_0x34, xor_eax_eax, mov_rdx_r13, lea_rsi_[rip+0xf@@ 44@@ 6], mov_rdi_rbx, call_0xffffffffffffe@@ 4d@@ b, test_eax_eax, jne_0xffffffffffffffc0, mov_dword_ptr_[rbp-0x@@ 64]_eax, lea_r8_[rip+0xd@@ 2b@@ d], xor_ecx_ecx, mov_edx_0x1@@ 8f, jmp_0x@@ d2, xor_eax_eax, mov_rdx_r13, lea_rsi_[rip+0xf@@ 32@@ e], mov_rdi_rbx, call_0xffffffffffffe@@ 4a@@ 9, test_eax_eax, jne_0xfffffffffffffe@@ 2a, mov_dword_ptr_[rbp-0x@@ 64]_eax, lea_r8_[rip+0xd@@ 28@@ 7], xor_ecx_ecx, mov_edx_0x1@@ 91, jmp_0x@@ 9c, mov_rsi_r15, mov_rdi_rbx, call_0xffffffffffffe@@ 6a@@ a, test_eax_eax, jne_0xfffffffffffffd@@ fb, lea_r9_[rip+0x@@ 1a@@ e7@@ 1], lea_r8_[rip+0xd@@ 24@@ f], xor_ecx_ecx, mov_edx_0x1@@ 96, lea_rsi_[rip+0xf@@ 2a8], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], xor_r9d_r9d, jmp_0xfffffffffffffe@@ 1f, xor_eax_eax, mov_rdx_r13, lea_rsi_[rip+0xf@@ 2a@@ 6], mov_rdi_rbx, call_0xffffffffffffe@@ 42@@ 1, test_eax_eax, jne_0xfffffffffffffd@@ a2, mov_dword_ptr_[rbp-0x@@ 64]_eax, lea_r8_[rip+0xd@@ 1@@ ff], xor_ecx_ecx, mov_edx_0x1@@ 98, jmp_0x14, mov_dword_ptr_[rbp-0x@@ 64]_eax, lea_r8_[rip+0xd@@ 1e@@ b], xor_ecx_ecx, mov_edx_0x1@@ 8c, lea_r10_[rip+0x@@ 1a@@ d@@ f8], lea_rsi_[rip+0xf@@ 23@@ d], mov_edi_7, xor_eax_eax, call_qword_ptr_[r10], mov_r9d_dword_ptr_[rbp-0x@@ 64], jmp_0xfffffffffffffd@@ b3, xor_edx_edx, jmp_0xfffffffffffffb@@ 62, mov_dword_ptr_[rbp-0x@@ 64]_eax, lea_r8_[rip+0xd@@ 1a@@ c], xor_ecx_ecx, mov_edx_0x1@@ 71, jmp_0xffffffffffffffc1, mov_dword_ptr_[rbp-0x@@ 64]_eax, lea_r8_[rip+0xd@@ 19@@ 9], xor_ecx_ecx, mov_edx_0x1@@ 78, jmp_0xffffffffffffffae, mov_dword_ptr_[rbp-0x@@ 64]_eax, lea_r8_[rip+0xd@@ 18@@ 6], xor_ecx_ecx, mov_edx_0x1@@ 9c, jmp_0xffffffffffffff9b, mov_dword_ptr_[rbp-0x@@ 64]_eax, lea_r8_[rip+0xd@@ 17@@ 3], xor_ecx_ecx, mov_edx_0x1@@ 87, jmp_0xffffffffffffff88, mov_dword_ptr_[rbp-0x@@ 64]_eax, lea_r8_[rip+0xd@@ 160], xor_ecx_ecx, mov_edx_0x1@@ 7c, jmp_0xffffffffffffff75, mov_dword_ptr_[rbp-0x@@ 64]_eax, lea_r8_[rip+0xd@@ 14@@ a], xor_ecx_ecx, mov_edx_0x1@@ 80, jmp_0xffffffffffffff5f, mov_dword_ptr_[rbp-0x@@ 64]_eax, lea_r8_[rip+0xd@@ 134], xor_ecx_ecx, mov_edx_0x1@@ 7e, jmp_0xffffffffffffff49, mov_dword_ptr_[rbp-0x@@ 64]_eax, lea_r8_[rip+0xd@@ 11@@ e], xor_ecx_ecx, mov_edx_0x1@@ 82, jmp_0xffffffffffffff33, mov_dword_ptr_[rbp-0x@@ 64]_eax, lea_r8_[rip+0xd@@ 108], xor_ecx_ecx, mov_edx_0x1@@ 89, jmp_0xffffffffffffff1d, mov_dword_ptr_[rbp-0x@@ 64]_eax, lea_r8_[rip+0x@@ d0@@ f2], xor_ecx_ecx, mov_edx_0x1@@ 94, jmp_0xffffffffffffff07, call_0xfffffffffffe@@ 4c@@ 7@@ 1
push_r14, mov_r14d_esi, mov_esi_0x400, push_r13, mov_r13_rdi, lea_rdi_[rip+0xf@@ 23@@ 6], push_r12, mov_r12_r8, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rcx, sub_rsp_0x30, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0x2@@ fe@@ 9, mov_qword_ptr_[rsp]_rax, mov_qword_ptr_[rsp+8]@@ _rbp, mov_qword_ptr_[rsp+0x10]_rbx, mov_qword_ptr_[rsp+0x1@@ 8]_r12, test_rax_rax, je_0x7e, mov_rdi_r13, mov_rdx_rsp, xor_ecx_ecx, mov_esi_r14d, call_0xfffffffffffff9c@@ 1, mov_r12d_eax, mov_rdi_qword_ptr_[rsp], test_eax_eax, je_0x33, call_0x30@@ 61, mov_r12d_1, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x71, add_rsp_0x30, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, ret, call_0x30@@ 30, lea_r9_[rip+0x@@ 1a@@ c@@ 44], lea_r8_[rip+0x@@ d0@@ 22], xor_ecx_ecx, mov_edx_0x1@@ b8, lea_rsi_[rip+0x@@ f0@@ 7b], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], jmp_0xffffffffffffffaf, lea_r9_[rip+0x@@ 1a@@ c@@ 19], lea_r8_[rip+0xc@@ ff@@ 7], xor_ecx_ecx, mov_edx_0x1@@ b4, lea_rsi_[rip+0x@@ f0@@ 50], mov_edi_7, call_qword_ptr_[r9], xor_r12d_r12d, jmp_0xffffffffffffff83, call_0xfffffffffffe@@ 4b@@ 6@@ 7
push_rbp, mov_r8_rsi, mov_rsi_rdx, push_rbx, mov_ebp_ecx, mov_rbx_rdx, sub_rsp_8, call_r8, test_rax_rax, je_0x11, mov_rdx_qword_ptr_[rax+0x20], mov_eax_dword_ptr_[rdx], test_eax_eax, je_0x5f, cmp_eax_2, je_0x42, sub_rsp_8, push_rbp, lea_r10_[rip+0x@@ 1a@@ bb@@ c], mov_r9_rbx, mov_edx_0x4@@ 3d, xor_eax_eax, lea_r8_[rip+0x@@ ef@@ 1b], xor_ecx_ecx, lea_rsi_[rip+0xe@@ fe@@ e], mov_edi_6, call_qword_ptr_[r10], pop_rax, pop_rdx, add_rsp_8, pop_rbx, mov_eax_ebp, pop_rbp, ret, mov_rdi_qword_ptr_[rdx+8], add_rsp_8, pop_rbx, mov_esi_ebp, pop_rbp, jmp_0xffffffffffffe@@ 65@@ c, xor_eax_eax, cmp_qword_ptr_[r@@ dx+@@ 8]_0, setne_al, add_rsp_8, pop_rbx, pop_rbp, ret
endbr64, push_r12, mov_r8_rdi, mov_r12_rsi, push_rbp, xor_ecx_ecx, push_rbx, mov_rbx_rdx, sub_rsp_0x40, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_rdi_qword_ptr_[r@@ dx+0x10], mov_rax_qword_ptr_[rdx], mov_rsi_rsp, mov_rdx_r8, mov_qword_ptr_[rsp+0x18]_rax, call_0xffffffffffffe@@ 86@@ 7, test_rax_rax, je_0x47, mov_rsi_qword_ptr_[r@@ 12+0x20], mov_rdi_qword_ptr_[rbx+0x10], mov_rbp_rax, call_0xffffffffffffe@@ 6c@@ 1, mov_qword_ptr_[rbp+0x20]_rax, test_rax_rax, je_0x5d, mov_rax_qword_ptr_[rsp+0x18], mov_qword_ptr_[rbx]_rax, mov_eax_1, mov_rcx_qword_ptr_[rsp+0x38], xor_rcx_qword_ptr_fs:[0x28], jne_0x68, add_rsp_0x40, pop_rbx, pop_rbp, pop_r12, ret, lea_r9_[rip+0x@@ 1a@@ ac@@ 1], xor_eax_eax, lea_r8_[rip+0x@@ ce@@ 9d], xor_ecx_ecx, mov_edx_0x5@@ 9c, lea_rsi_[rip+0x@@ ee@@ f6], mov_edi_7, call_qword_ptr_[r9], xor_eax_eax, jmp_0xffffffffffffffba, lea_r9_[rip+0x@@ 1a@@ a@@ 91], lea_r8_[rip+0x@@ ce@@ 6f], xor_ecx_ecx, mov_edx_0x5@@ 9e, lea_rsi_[rip+0xe@@ ec@@ 8], mov_edi_7, call_qword_ptr_[r9], xor_eax_eax, jmp_0xffffffffffffff8c, call_0xfffffffffffe4@@ 9e@@ 0
push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_qword_ptr_[rsp]_0, test_rsi_rsi, je_0xa9, mov_rbp_rdi, mov_rbx_rsi, mov_r12_rdx, mov_r14_rsp, lea_r13_[rip+0x@@ d@@ 30@@ 1], jmp_0x27, call_0xffffffffffffff@@ b8, test_eax_eax, je_0xd9, mov_rdi_qword_ptr_[rsp], call_0xfffffffffffe4@@ 5d@@ 7, mov_rbx_qword_ptr_[rbx+0x10], test_rbx_rbx, je_0x6b, mov_rcx_qword_ptr_[rbx], xor_eax_eax, mov_rdx_rbp, mov_rsi_r13, mov_rdi_r14, call_0x1d@@ 1b, test_eax_eax, js_0x7@@ c, mov_rsi_qword_ptr_[rbx+0x18], mov_rdi_qword_ptr_[rsp], mov_rdx_r12, test_rsi_rsi, jne_0xffffffffffffffbc, mov_rsi_rbx, call_0xfffffffffffffe@@ 7f, test_eax_eax, jne_0xffffffffffffffbd, lea_r9_[rip+0x@@ 1a@@ 9b@@ f], lea_r8_[rip+0x@@ cd@@ 9d], xor_ecx_ecx, mov_edx_0x5@@ af, lea_rsi_[rip+0x@@ ed@@ f6], mov_edi_7, call_qword_ptr_[r9], mov_rdi_qword_ptr_[rsp], call_0xfffffffffffe4@@ 56@@ e, xor_eax_eax, jmp_0xc, mov_eax_1, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x6e, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, lea_r9_[rip+0x@@ 1a@@ 96@@ 1], xor_eax_eax, lea_r8_[rip+0x@@ cd@@ 3d], xor_ecx_ecx, mov_edx_0x5@@ a9, lea_rsi_[rip+0x@@ ed@@ 96], mov_edi_7, call_qword_ptr_[r9], xor_eax_eax, jmp_0xffffffffffffffb5, lea_r9_[rip+0x@@ 1a@@ 93@@ 1], lea_r8_[rip+0xc@@ d0@@ f], xor_ecx_ecx, mov_edx_0x5@@ ac, lea_rsi_[rip+0x@@ ed@@ 68], mov_edi_7, call_qword_ptr_[r9], jmp_0xffffffffffffff72, call_0xfffffffffffe@@ 48@@ 7@@ f
endbr64, push_r12, mov_esi_0x2@@ 800, lea_rdi_[rip+0x@@ ee@@ 58], push_rbp, sub_rsp_8, call_0x2c@@ 19, test_rax_rax, je_0x31, mov_esi_0x20, mov_rdi_rax, mov_rbp_rax, call_0x3@@ 134, mov_r12_rax, test_rax_rax, je_0x59, mov_qword_ptr_[rax+0x1@@ 0]_rbp, add_rsp_8, pop_rbp, mov_rax_r12, pop_r12, ret, lea_r9_[rip+0x@@ 1a@@ 8a@@ 9], xor_eax_eax, lea_r8_[rip+0x@@ ec@@ 40], mov_ecx_0xffffffff, mov_edx_0x6@@ 9, lea_rsi_[rip+0x@@ ec@@ db], mov_edi_3, call_qword_ptr_[r9], add_rsp_8, xor_r12d_r12d, pop_rbp, mov_rax_r12, pop_r12, ret, lea_r9_[rip+0x@@ 1a@@ 86@@ 9], lea_r8_[rip+0x@@ ec@@ 22], mov_ecx_0xffffffff, mov_edx_0x6@@ e, lea_rsi_[rip+0x@@ ec@@ 9d], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], mov_rdi_rbp, call_0x2c@@ 24, jmp_0xffffffffffffff7@@ c
endbr64, mov_qword_ptr_[rdi+0x1@@ 8]_rsi, ret
endbr64, mov_rax_qword_ptr_[rdi+0x18], ret
endbr64, mov_rdi_qword_ptr_[rdi+0x10], jmp_0x2@@ be@@ 8
endbr64, test_rdi_rdi, je_0x19, mov_rax_qword_ptr_[rdi+8], mov_qword_ptr_[rdi+8]_0, ret, xor_eax_eax, ret
endbr64, mov_qword_ptr_[rdi+@@ 8]_rsi, mov_rax_rdi, ret
endbr64, mov_r9_rsi, mov_rcx_rdx, lea_rsi_[r@@ di+0x10], xor_r8d_r8d, mov_rdx_r9, jmp_0xfffffffffffff@@ 20@@ c
endbr64, mov_r9_rsi, mov_rcx_rdx, lea_rsi_[r@@ di+0x10], mov_r8d_1, mov_rdx_r9, jmp_0xfffffffffffff@@ 1e@@ 9
endbr64, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, call_0xfffffffffffffe@@ 72, mov_r12_rax, test_rax_rax, je_0x2f, mov_rdi_rbp, call_0xfffffffffffe4@@ 34@@ 2, lea_rdx_[r@@ bp+rax], mov_rsi_rbp, mov_rdi_r12, call_0xffffffffffffff@@ 92, test_eax_eax, je_0x4b, add_rsp_8, pop_rbp, mov_rax_r12, pop_r12, ret, lea_r9_[rip+0x@@ 1a@@ 7@@ 31], xor_eax_eax, lea_r8_[rip+0xc@@ b0@@ d], xor_ecx_ecx, mov_edx_0x@@ d7, lea_rsi_[rip+0x@@ eb@@ 66], mov_edi_7, call_qword_ptr_[r9], add_rsp_8, pop_rbp, mov_rax_r12, pop_r12, ret, mov_rdi_r12, call_0xfffffffffffffee@@ d, lea_r9_[rip+0x@@ 1a@@ 6f@@ 1], lea_r8_[rip+0x@@ ca@@ cf], xor_ecx_ecx, mov_edx_0x@@ db, lea_rsi_[rip+0x@@ eb@@ 28], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], xor_r12d_r12d, jmp_0xffffffffffffff8@@ 6
endbr64, mov_r8_rdx, xor_ecx_ecx, mov_rdx_rsi, mov_esi_1, jmp_0xfffffffffffff9b@@ f
endbr64, mov_r8_rdx, xor_ecx_ecx, mov_rdx_rsi, xor_esi_esi, jmp_0xfffffffffffff9a@@ 2
endbr64, mov_rcx_rsi, mov_r8_rdx, mov_esi_1, xor_edx_edx, jmp_0xfffffffffffff97@@ f
endbr64, mov_rcx_rsi, mov_r8_rdx, xor_esi_esi, xor_edx_edx, jmp_0xfffffffffffff96@@ 2
endbr64, mov_rcx_rdx, xor_r8d_r8d, mov_rdx_rsi, lea_rsi_[rip-0x@@ 1a@@ 64], jmp_0xffffffffffffd@@ 6d@@ c
endbr64, mov_rcx_rdx, mov_r8d_1, mov_rdx_rsi, lea_rsi_[rip-0x@@ 1a@@ 87], jmp_0xffffffffffffd@@ 6b@@ 9
endbr64, sub_rsp_0x48, pxor_xmm0_xmm0, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_rdx_rsi, movaps_xmmword_ptr_[rsp+0x10]_xmm0, xor_ecx_ecx, mov_qword_ptr_[rsp+0x18]_rdi, mov_rsi_rsp, xor_edi_edi, movaps_xmmword_ptr_[rsp]_xmm0, movaps_xmmword_ptr_[rsp+0x20]_xmm0, call_0xffffffffffffe3@@ 17, mov_rcx_qword_ptr_[rsp+0x38], xor_rcx_qword_ptr_fs:[0x28], jne_7, add_rsp_0x48, ret, call_0xfffffffffffe@@ 45@@ 1@@ d
endbr64, sub_rsp_8, movsxd_rcx_edx, mov_rdx_rsi, lea_rsi_[rip-0x@@ 1b0@@ 5], call_0xffffffffffffd@@ 6e@@ b, add_rsp_8, ret
endbr64, mov_rcx_rdx, mov_rdx_rsi, lea_rsi_[rip-0x@@ 1b@@ 21], jmp_0xffffffffffffd@@ 6c@@ f
endbr64, mov_rdx_rsi, lea_rsi_[rip-0x@@ 1b@@ 3e], jmp_0xffffffffffffd@@ 73@@ 2
endbr64, mov_ecx_edx, mov_rdx_rsi, lea_rsi_[rip-0x@@ 1b@@ 60], jmp_0xfffffffffffff94@@ 0
endbr64, test_rdi_rdi, je_0x39, mov_edx_dword_ptr_[rdi], mov_eax_1, test_edx_edx, je_9, xor_eax_eax, cmp_edx_2, je_7, ret, sub_rsp_8, mov_rdi_qword_ptr_[rdi+8], mov_esi_0xffffffff, call_0xffffffffffffd@@ fd@@ 3, cmp_eax_-1, setne_al, movzx_eax_al, add_rsp_8, ret, xor_eax_eax, ret
endbr64, jmp_0xffffffffffffe@@ 49@@ c
endbr64, mov_rcx_rdx, xor_r8d_r8d, mov_rdx_rsi, lea_rsi_[rip-0x@@ 1b@@ 84], jmp_0xffffffffffffd@@ 55@@ c
endbr64, mov_rcx_rdx, mov_r8d_1, mov_rdx_rsi, lea_rsi_[rip-0x@@ 1b@@ a7], jmp_0xffffffffffffd@@ 53@@ 9
endbr64, sub_rsp_8, movsxd_rcx_edx, mov_rdx_rsi, lea_rsi_[rip-0x@@ 1b@@ c5], call_0xffffffffffffd@@ 5c@@ b, add_rsp_8, ret
endbr64, mov_rcx_rdx, mov_rdx_rsi, lea_rsi_[rip-0x@@ 1b@@ e1], jmp_0xffffffffffffd@@ 5a@@ f
endbr64, mov_rdx_rsi, lea_rsi_[rip-0x@@ 1b@@ fe], jmp_0xffffffffffffd@@ 6@@ 1@@ 2
endbr64, mov_ecx_edx, mov_rdx_rsi, lea_rsi_[rip-0x@@ 1c@@ 20], jmp_0xfffffffffffff8@@ 2@@ 0
endbr64, push_rbx, pxor_xmm0_xmm0, mov_r8_rsi, sub_rsp_0x40, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_rbx_rdx, movaps_xmmword_ptr_[rsp+0x10]_xmm0, xor_ecx_ecx, mov_qword_ptr_[rsp+0x18]_rdi, mov_rsi_rsp, xor_edi_edi, mov_rdx_r8, movaps_xmmword_ptr_[rsp]_xmm0, movaps_xmmword_ptr_[rsp+0x20]_xmm0, call_0xffffffffffffe@@ 110, test_rax_rax, je_0x48, mov_rax_qword_ptr_[rax+0x20], xor_r8d_r8d, test_rax_rax, je_0x19, mov_edx_dword_ptr_[rax], test_edx_edx, jne_0x13, mov_r8d_1, test_rbx_rbx, je_8, mov_rax_qword_ptr_[rax+8], mov_dword_ptr_[rbx]_eax, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x1a, add_rsp_0x40, mov_eax_r8d, pop_rbx, ret, xor_r8d_r8d, jmp_0xffffffffffffffda, call_0xfffffffffffe4@@ 2d@@ b
endbr64, push_rbx, pxor_xmm0_xmm0, mov_r8_rsi, sub_rsp_0x40, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_rbx_rdx, movaps_xmmword_ptr_[rsp+0x10]_xmm0, xor_ecx_ecx, mov_qword_ptr_[rsp+0x18]_rdi, mov_rsi_rsp, xor_edi_edi, mov_rdx_r8, movaps_xmmword_ptr_[rsp]_xmm0, movaps_xmmword_ptr_[rsp+0x20]_xmm0, call_0xffffffffffffe0@@ 70, test_rax_rax, je_0x48, mov_rax_qword_ptr_[rax+0x20], xor_r8d_r8d, test_rax_rax, je_0x1a, mov_edx_dword_ptr_[rax], test_edx_edx, jne_0x14, mov_r8d_1, test_rbx_rbx, je_9, mov_rax_qword_ptr_[rax+8], mov_qword_ptr_[rbx]_rax, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x19, add_rsp_0x40, mov_eax_r8d, pop_rbx, ret, xor_r8d_r8d, jmp_0xffffffffffffffdb, call_0xfffffffffffe4@@ 23@@ b
endbr64, push_rbx, pxor_xmm0_xmm0, mov_r8_rsi, sub_rsp_0x40, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_rbx_rdx, movaps_xmmword_ptr_[rsp+0x10]_xmm0, xor_ecx_ecx, mov_qword_ptr_[rsp+0x18]_rdi, mov_rsi_rsp, xor_edi_edi, mov_rdx_r8, movaps_xmmword_ptr_[rsp]_xmm0, movaps_xmmword_ptr_[rsp+0x20]_xmm0, call_0xffffffffffffd@@ fd0, test_rax_rax, je_0x48, mov_rax_qword_ptr_[rax+0x20], xor_r8d_r8d, test_rax_rax, je_7, cmp_dword_ptr_[rax]_2, je_0x1f, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x2c, add_rsp_0x40, mov_eax_r8d, pop_rbx, ret, mov_r8d_1, test_rbx_rbx, je_0xffffffffffffffda, mov_rax_qword_ptr_[rax+8], mov_qword_ptr_[rbx]_rax, jmp_0xffffffffffffffd1, xor_r8d_r8d, jmp_0xffffffffffffffc8, call_0xfffffffffffe4@@ 19@@ b
endbr64, push_rbx, pxor_xmm0_xmm0, mov_r8_rsi, sub_rsp_0x40, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_rbx_rdx, movaps_xmmword_ptr_[rsp+0x10]_xmm0, xor_ecx_ecx, mov_qword_ptr_[rsp+0x18]_rdi, mov_rsi_rsp, xor_edi_edi, mov_rdx_r8, movaps_xmmword_ptr_[rsp]_xmm0, movaps_xmmword_ptr_[rsp+0x20]_xmm0, call_0xffffffffffffdf@@ 30, test_rax_rax, je_0x38, mov_rax_qword_ptr_[rax+0x20], test_rax_rax, je_0x2f, mov_r8d_1, test_rbx_rbx, je_5, mov_qword_ptr_[rbx]_rax, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x16, add_rsp_0x40, mov_eax_r8d, pop_rbx, ret, xor_r8d_r8d, jmp_0xffffffffffffffde, call_0xfffffffffffe4@@ 10@@ b
endbr64, push_rbx, mov_r8_rsi, pxor_xmm0_xmm0, sub_rsp_0x40, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_rbx_rdx, movaps_xmmword_ptr_[rsp+0x10]_xmm0, mov_rdx_r8, mov_qword_ptr_[rsp+0x18]_rdi, mov_rsi_rsp, xor_ecx_ecx, xor_edi_edi, movaps_xmmword_ptr_[rsp]_xmm0, movaps_xmmword_ptr_[rsp+0x20]_xmm0, call_0xffffffffffffd@@ ea0, xor_r8d_r8d, test_rax_rax, je_9, cmp_qword_ptr_[rax+0x20]_0, je_0x1e, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x1e, add_rsp_0x40, mov_eax_r8d, pop_rbx, ret, mov_r8d_1, test_rbx_rbx, je_0xffffffffffffffdb, mov_qword_ptr_[rbx]_rax, jmp_0xffffffffffffffd6, call_0xfffffffffffe@@ 40@@ 8@@ 0
endbr64, sub_rsp_0x48, pxor_xmm0_xmm0, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, xor_ecx_ecx, mov_rdx_rsi, movaps_xmmword_ptr_[rsp+0x10]_xmm0, mov_rsi_rsp, mov_qword_ptr_[rsp+0x18]_rdi, xor_edi_edi, movaps_xmmword_ptr_[rsp]_xmm0, movaps_xmmword_ptr_[rsp+0x20]_xmm0, call_0xffffffffffffde@@ 17, test_rax_rax, setne_al, mov_rcx_qword_ptr_[rsp+0x38], xor_rcx_qword_ptr_fs:[0x28], jne_0xa, movzx_eax_al, add_rsp_0x48, ret, call_0xfffffffffffe@@ 40@@ 1@@ 4
endbr64, mov_rdx_qword_ptr_[rdi+8], lea_rax_[rip+0x@@ e@@ 5f@@ 2], test_rdx_rdx, je_5, mov_rax_qword_ptr_[rdx], ret
endbr64, push_r12, mov_r12d_esi, mov_rsi_r12, push_rbp, mov_edx_0x7@@ b, mov_rbp_rdi, push_rbx, call_0x1@@ 44@@ a, mov_edx_0x7@@ d, mov_rsi_r12, mov_rdi_rbp, mov_ebx_eax, call_0x14@@ 38, mov_edx_eax, test_ebx_ebx, setne_al, test_edx_edx, setne_cl, and_eax_ecx, cmp_ebx@@ _edx, sete_dl, pop_rbx, movzx_edx_dl, pop_rbp, and_eax_edx, pop_r12, ret
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, test_rsi_rsi, je_0xef, mov_rbx_rsi, mov_esi_0x30, mov_rbp_rdi, mov_r13d_edx, call_0x2@@ 85@@ b, mov_r12_rax, test_rax_rax, je_0x1@@ 10, mov_rsi_qword_ptr_[rbx], test_rsi_rsi, je_0x17, mov_rdi_rbp, call_0x2@@ 78@@ f, mov_qword_ptr_[r12]_rax, test_rax_rax, je_0x123, mov_eax_dword_ptr_[rbx+0x28], mov_rsi_qword_ptr_[rbx+0x20], mov_dword_ptr_[r12+0x@@ 28]_eax, test_rsi_rsi, je_0x14, mov_rdi_rbp, call_0xffffffffffffdb@@ 79, mov_qword_ptr_[r12+0x@@ 20]_rax, test_rax_rax, je_0x5c, mov_rsi_qword_ptr_[rbx+0x18], test_rsi_rsi, je_0x19, mov_edx_1, mov_rdi_rbp, call_0xffffffffffffff@@ 79, mov_qword_ptr_[r12+0x1@@ 8]_rax, test_rax_rax, je_0x3c, test_r13d_r13d, je_0x20, mov_rsi_qword_ptr_[rbx+0x10], test_rsi_rsi, je_0x17, mov_edx_r13d, mov_rdi_rbp, call_0xffffffffffffff@@ 56, mov_qword_ptr_[r12+0x10]_rax, test_rax_rax, je_0x19, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, lea_r9_[rip+0x@@ 19@@ f4@@ 9], lea_r8_[rip+0xc@@ 32@@ 7], xor_ecx_ecx, mov_edx_0x5@@ 60, lea_rsi_[rip+0xe@@ 380], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], xor_r12d_r12d, jmp_0xffffffffffffffc0, lea_r9_[rip+0x@@ 19@@ f@@ 19], xor_eax_eax, lea_r8_[rip+0xe@@ 2f0], mov_ecx_0xffffffff, mov_edx_0x5@@ 4d, lea_rsi_[rip+0xe@@ 34@@ b], mov_edi_3, call_qword_ptr_[r9], add_rsp_8, pop_rbx, xor_r12d_r12d, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, lea_r9_[rip+0x@@ 19@@ ed@@ 9], lea_r8_[rip+0xe@@ 44@@ a], mov_ecx_0xffffffff, mov_edx_0x5@@ 52, lea_rsi_[rip+0xe@@ 30@@ d], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], jmp_0xffffffffffffff50, lea_r9_[rip+0x@@ 19@@ ea@@ 9], lea_r8_[rip+0xe@@ 2a@@ 2], mov_ecx_0xffffffff, mov_edx_0x5@@ 57, lea_rsi_[rip+0xe@@ 2@@ dd], mov_edi_3, call_qword_ptr_[r9], xor_r12d_r12d, jmp_0xffffffffffffff1@@ f
endbr64, mov_rdi_qword_ptr_[rdi+0x10], jmp_0xfffffffffffffe@@ 5@@ 8
endbr64, push_r12, push_rbp, mov_rbp_rsi, mov_esi_0x30, push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+0x10], call_0x2@@ 6b@@ 9, mov_r12_rax, test_rax_rax, je_0x36, mov_rdi_qword_ptr_[rbx+0x10], mov_rsi_rbp, call_0x2@@ 5f@@ 5, mov_qword_ptr_[r12]_rax, test_rax_rax, je_0x59, mov_qword_ptr_[r12@@ +8]_0, mov_qword_ptr_[r12+0x@@ 20]_0, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, lea_r9_[rip+0x@@ 19@@ e@@ 11], xor_eax_eax, lea_r8_[rip+0xe@@ 3@@ 9d], mov_ecx_0xffffffff, mov_edx_0x5@@ 6f, lea_rsi_[rip+0xe@@ 24@@ 3], mov_edi_3, call_qword_ptr_[r9], pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, lea_r9_[rip+0x@@ 19@@ dd@@ 9], lea_r8_[rip+0xe@@ 1f@@ a], mov_ecx_0xffffffff, mov_edx_0x5@@ 73, lea_rsi_[rip+0xe@@ 20@@ d], mov_edi_3, call_qword_ptr_[r9], xor_r12d_r12d, jmp_0xffffffffffffff9@@ 1
endbr64, mov_rdi_qword_ptr_[rdi+0x10], mov_esi_0x20, jmp_0x2@@ 60@@ 3
endbr64, test_rdi_rdi, je_5, mov_dword_ptr_[rdi+0x1@@ 8]_esi, ret
endbr64, test_rdi_rdi, je_9, mov_eax_dword_ptr_[rdi+0x18], ret, xor_eax_eax, ret
endbr64, mov_rax_qword_ptr_[rdi+0x10], ret
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, call_0xfffffffffffff4@@ 3f, mov_r12_rax, test_rax_rax, je_0x40, xor_edx_edx, lea_r13_[rip+0x@@ 7b@@ 58], test_rbp_rbp, je_0x58, mov_rax_rbp, mov_rbx_rax, mov_rax_qword_ptr_[rax+8], cmp_rax_rdx, jne_0xfffffffffffffff6, mov_rsi_qword_ptr_[rbx], mov_rdx_r12, mov_rdi_r13, call_0xfffffffffffff2a@@ 3, cmp_rbx_rbp, je_0x2d, mov_rdx_rbx, jmp_0xffffffffffffffd6, lea_r9_[rip+0x@@ 19@@ ce@@ d], lea_r8_[rip+0x@@ c0@@ cb], xor_ecx_ecx, mov_edx_0x5@@ be, lea_rsi_[rip+0xe@@ 124], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret
endbr64, mov_rax_qword_ptr_[rdi+0x18], test_rax_rax, je_0x41, cmp_rax_rsi, jne_0xd, jmp_0x2c, cmp_rsi_rax, je_0x15, mov_rdx_rax, mov_rax_qword_ptr_[rax+0x10], test_rax_rax, jne_0xfffffffffffffff1, ret, mov_rax_qword_ptr_[rsi+0x10], mov_qword_ptr_[rdx+0x1@@ 0]_rax, mov_eax_1, ret, mov_rax_qword_ptr_[rax+0x10], mov_qword_ptr_[rdi+0x1@@ 8]_rax, mov_eax_1, ret, xor_eax_eax, ret
push_rbp, mov_rsi_rdi, push_rbx, mov_rbx_rdi, mov_edi_1, sub_rsp_0xa8, mov_rdx_rsp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, call_0xfffffffffffe@@ 3c@@ d6, test_eax_eax, js_0x7@@ 7, mov_eax_dword_ptr_[rsp+0x18], mov_r8d_1, and_eax_0xf000, cmp_eax_0x4000, jne_0x29, mov_rax_qword_ptr_[rsp+0x98], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ bb, add_rsp_0xa8, pop_rbx, mov_eax_r8d, pop_rbp, ret, lea_r10_[rip+0x@@ 19@@ bf@@ 9], lea_r8_[rip+0xe@@ 40@@ 2], mov_r9_rbx, mov_ecx_0xffffffff, mov_edx_0x2@@ 1, lea_rsi_[rip+0xe@@ 38@@ 8], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], xor_r8d_r8d, jmp_0xffffffffffffffaa, lea_rax_[rip+0x@@ 19@@ bc@@ 1], mov_rbp_qword_ptr_[rax], call_0xfffffffffffe@@ 3a@@ ce, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 38@@ e7, mov_r8_rax, cmp_byte_ptr_[rbx]_0, lea_rdx_[rip+0x7@@ 9d@@ 4], lea_rax_[rip+0x@@ bf@@ 4b], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0xc@@ 45@@ f], lea_r8_[rip+0xc@@ 14@@ 5], push_rcx, mov_r9_rbx, mov_ecx_0xffffffff, push_rax, mov_edx_0x1@@ c, lea_rsi_[rip+0xe@@ 3@@ 1a], mov_edi_3, xor_eax_eax, call_rbp, add_rsp_0x20, xor_r8d_r8d, jmp_0xffffffffffffff39, call_0xfffffffffffe@@ 3a@@ c@@ b
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0xa8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, cmp_byte_ptr_[rdi]_0, jne_0x31, mov_eax_1, mov_rcx_qword_ptr_[rsp+0x98], xor_rcx_qword_ptr_fs:[0x28], jne_0x2@@ 6d, add_rsp_0xa8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_rbp_rdi, mov_rsi_rdi, mov_rdx_rsp, mov_edi_1, call_0xfffffffffffe@@ 3b@@ 7a, test_eax_eax, jne_0x12, mov_eax_dword_ptr_[rsp+0x18], and_eax_0xf000, cmp_eax_0x4000, je_0xffffffffffffff@@ ac, lea_r13_[rip+0x@@ 19@@ ac@@ a], mov_r9_rbp, lea_r8_[rip+0xe@@ 28@@ 5], xor_ecx_ecx, mov_edx_0x2@@ e, lea_rsi_[rip+0xe@@ 25@@ c], mov_edi_5, xor_eax_eax, call_qword_ptr_[r@@ 13], mov_rdi_rbp, call_0xfffffffffffe3@@ 9c@@ 4, mov_r12_rax, test_rax_rax, je_0x1@@ fa, mov_rdi_rax, jmp_0xf, mov_byte_ptr_[rbx]@@ _0x2f, lea_rdi_[r@@ bx+1], mov_esi_0x2f, call_0xfffffffffffe@@ 38@@ ec, mov_rbx_rax, test_rax_rax, je_0x69, mov_byte_ptr_[rbx]_0, cmp_byte_ptr_[r12]_0, je_0xffffffffffffffdf, mov_esi_0x1@@ ff, mov_rdi_r12, call_0xfffffffffffe@@ 3c@@ ad, test_eax_eax, jns_0xffffffffffffff@@ ce, call_0xfffffffffffe@@ 39@@ 64, mov_edi_dword_ptr_[rax], cmp_edi@@ _0x11, jne_0x15@@ 2, mov_rdi_r12, call_0xfffffffffffffdd@@ 1, test_eax_eax, jne_0xffffffffffffffb2, lea_r8_[rip+0x@@ be@@ 16], xor_ecx_ecx, mov_edx_0x3@@ d, lea_rsi_[rip+0xe@@ 1c@@ d], mov_edi_7, call_qword_ptr_[r@@ 13], mov_rdi_r12, call_0xfffffffffffe3@@ 5e@@ 7, mov_rbx_qword_ptr_[r@@ 13], jmp_0x4@@ f, mov_esi_0x1@@ ff, mov_rdi_rbp, call_0xfffffffffffe@@ 3c@@ 50, test_eax_eax, js_0x1@@ 9, mov_rdi_r12, call_0xfffffffffffe3@@ 5c@@ 4, jmp_0xfffffffffffffec8, call_0xfffffffffffe@@ 38@@ f0, mov_edi_dword_ptr_[rax], cmp_edi@@ _0x11, je_0xb6, mov_rbx_qword_ptr_[r@@ 13], cmp_edi@@ _0x1e, jne_0x39, mov_rdi_r12, call_0xfffffffffffe@@ 35@@ 94, xor_eax_eax, lea_r8_[rip+0x@@ bd@@ 9b], xor_ecx_ecx, mov_edx_0x6@@ 6, lea_rsi_[rip+0xe@@ 15@@ 2], mov_edi_7, call_rbx, xor_eax_eax, jmp_0xfffffffffffffe@@ 7d, call_0xfffffffffffe3@@ 6c0, mov_r8_rax, cmp_byte_ptr_[r12]_0, lea_rdx_[rip+0x7@@ 7a@@ b], lea_rax_[rip+0x@@ bd@@ 22], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x@@ e@@ 14@@ 1], mov_r9_r12, push_rcx, lea_r8_[rip+0x@@ bf@@ 18], mov_ecx_0xffffffff, push_rax, mov_edx@@ _0x50, lea_rsi_[rip+0x@@ e0@@ f1], mov_edi_3, xor_eax_eax, call_rbx, add_rsp_0x20, mov_rdi_r12, call_0xfffffffffffe3@@ 50@@ 7, mov_rbx_qword_ptr_[r@@ 13], jmp_0xffffffffffffff6f, mov_rdi_rbp, call_0xfffffffffffffc@@ ad, test_eax_eax, jne_0xffffffffffffff@@ 1f, lea_r8_[rip+0x@@ bc@@ ee], xor_ecx_ecx, mov_edx_0x4@@ d, jmp_0xfffffffffffffed8, mov_rbx_qword_ptr_[r@@ 13], cmp_edi@@ _0x1e, je_0xffffffffffffff@@ 2a, call_0xfffffffffffe@@ 36@@ 1b, mov_r8_rax, cmp_byte_ptr_[r12]_0, lea_rdx_[rip+0x7@@ 70@@ 6], lea_rax_[rip+0x@@ bc@@ 7d], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x@@ e0@@ 9c], mov_r9_r12, push_rcx, lea_r8_[rip+0x@@ be@@ 73], mov_ecx_0xffffffff, push_rax, mov_edx_0x40, jmp_0xffffffffffffff5b, call_0xfffffffffffe@@ 38@@ 14, lea_r8_[rip+0x@@ e0@@ d0], or_ecx_0xffffffff, mov_edx_0x3@@ 2, lea_rsi_[rip+0x@@ e0@@ 33], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ 13], mov_rbx_qword_ptr_[r@@ 13], jmp_0xfffffffffffffeb@@ b
endbr64, push_r12, push_rbp, push_rbx, mov_rbx_rdi, call_0xfffffffffffe@@ 34@@ 85, mov_rbp_rax, test_rax_rax, je_0xd1, mov_rdi_rbp, call_0xfffffffffffe@@ 3a@@ 81, test_rax_rax, je_0x41, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x2e, je_0xffffffffffffffee, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x2@@ e@@ 2e, je_0x1a, mov_rdi_rbp, xor_r12d_r12d, call_0xfffffffffffe3@@ 90@@ 2, test_eax_eax, jne_0x35, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, cmp_byte_ptr_[rax+0x1@@ 5]_0, jne_0xffffffffffffffe4, mov_rdi_rbp, call_0xfffffffffffe@@ 3a@@ 47, test_rax_rax, jne_0xffffffffffffffc8, mov_rdi_rbp, mov_r12d_1, call_0xfffffffffffe@@ 38@@ cf, test_eax_eax, je_0xffffffffffffffcf, lea_rax_[rip+0x@@ 19@@ 7e@@ f], mov_rbp_qword_ptr_[rax], call_0xfffffffffffe@@ 36@@ fc, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 35@@ 15, mov_r8_rax, cmp_byte_ptr_[rbx]_0, lea_rdx_[rip+0x7@@ 60@@ 2], lea_rax_[rip+0x@@ bb@@ 79], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x@@ be@@ 6c], mov_r9_rbx, push_rcx, lea_r8_[rip+0x@@ bd@@ 6f], mov_ecx_0xffffffff, push_rax, mov_edx_0x7@@ a, xor_eax_eax, lea_rsi_[rip+0xd@@ f4@@ 6], mov_edi_3, call_rbp, add_rsp_0x20, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, lea_rax_[rip+0x@@ 19@@ 78@@ 2], mov_rbp_qword_ptr_[rax], call_0xfffffffffffe@@ 36@@ 8f, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 34@@ a8, mov_r8_rax, cmp_byte_ptr_[rbx]_0, lea_rdx_[rip+0x@@ 75@@ 95], lea_rax_[rip+0x@@ bb@@ 0c], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rsi_[rip+0x@@ bd@@ 4c], mov_r9_rbx, push_rsi, lea_r8_[rip+0xb@@ d0@@ 2], mov_ecx_0xffffffff, push_rax, mov_edx_0x7@@ 1, lea_rsi_[rip+0xd@@ ed@@ b], mov_edi_3, xor_eax_eax, call_rbp, xor_r12d_r12d, add_rsp_0x20, jmp_0xfffffffffffffef@@ 8
endbr64, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, call_0xfffffffffffe3@@ 30@@ 3, mov_ebx_eax, mov_rdi_rbp, call_0xfffffffffffe@@ 37@@ 59, test_ebx_ebx, je_0x22, test_eax_eax, jne_0x1e, call_0xfffffffffffe@@ 35@@ fc, mov_dword_ptr_[rax]_0, add_rsp_8, mov_eax_0xffffffff, pop_rbx, pop_rbp, ret, or@@ _ebx_eax, setne_al, add_rsp_8, movzx_eax_al, pop_rbx, neg_eax, pop_rbp, ret
endbr64, push_r14, mov_edx_0x1@@ a4, mov_esi_0x4@@ 1, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x60, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x58]_rax, xor_eax_eax, call_0xfffffffffffe3@@ 3c@@ 3, test_eax_eax, js@@ _0x10@@ c, mov_qword_ptr_[rsp+8]_0, mov_dword_ptr_[rsp@@ ]_1, mov_qword_ptr_[rsp+0x10]_0, mov_ebp_eax, mov_r13d@@ _0x15, mov_r12_rsp, xor_eax_eax, mov_rdx_r12, mov_esi_6, mov_edi_ebp, call_0xfffffffffffe@@ 34@@ 56, test_eax_eax, jns@@ _0x1@@ 1f, call_0xfffffffffffe3@@ 54@@ 9, mov_edi_dword_ptr_[rax], lea_eax_[r@@ di-0x@@ b], and_eax_0xfffffffd, je_0x64, cmp_edi@@ _4, je_0xffffffffffffff@@ d5, lea_r12_[rip+0x@@ 19@@ 6@@ 1e], lea_r8_[rip+0x@@ dd@@ fa], mov_ecx_0xffffffff, mov_edx_0x@@ b2, lea_rsi_[rip+0x@@ dd@@ b0], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ 12], mov_edi_ebp, call_0xfffffffffffe@@ 2e@@ b9, test_eax_eax, jne_0x42, mov_rcx_qword_ptr_[rsp+0x58], xor_rcx_qword_ptr_fs:[0x28], jne_0x3@@ 74, add_rsp_0x60, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, dec@@ _r13d, je_0x2@@ 75, mov_edi@@ _0x3e8, call_0xfffffffffffe3@@ 2d@@ a, jmp_0xffffffffffffff63, call_0xfffffffffffe@@ 34@@ c0, mov_edi_dword_ptr_[rax], mov_rbp_qword_ptr_[r@@ 12], call_0xfffffffffffe3@@ 2d@@ 5, push_rax, lea_rax_[rip+0xb@@ 69@@ 3], mov_edx_0x@@ ea, push_rax, mov_r9_rbx, xor_eax_eax, lea_r8_[rip+0x@@ bb@@ bb], xor_ecx_ecx, lea_rsi_[rip+0x@@ dd@@ 27], mov_edi_7, call_rbp, pop_rax, pop_rdx, xor_eax_eax, jmp_0xffffffffffffff82, lea_rax_[rip+0x@@ 19@@ 56@@ 9], mov_rbp_qword_ptr_[rax], call_0xfffffffffffe@@ 34@@ 76, mov_edi_dword_ptr_[rax], call_0xfffffffffffe3@@ 28@@ f, sub_rsp_8, push_rax, mov_r9_rbx, xor_eax_eax, lea_r8_[rip+0x@@ dd@@ a9], mov_ecx_0xffffffff, mov_edx_0x@@ 98, lea_rsi_[rip+0x@@ dc@@ e2], mov_edi_3, call_rbp, pop_r14, pop_rax, xor_eax_eax, jmp_0xffffffffffffff3c, xor_esi_esi, mov_edi_ebp, call_0xfffffffffffe3@@ 2e@@ c, test_eax_eax, js_0x2@@ 08, call_0xfffffffffffe2@@ fc@@ f, lea_r12_[rsp+0x20], mov_r9d_eax, lea_r8_[rip+0x@@ dc@@ f9], mov_ecx@@ _0x32, mov_edx_1, mov_esi_0x3@@ 2, mov_rdi_r12, xor_eax_eax, call_0xfffffffffffe3@@ 5d@@ 7, mov_r13_r12, mov_edx_dword_ptr_[r13], add_r13@@ _4, lea_eax_[rdx-0x1010101], not_edx, and_eax_edx, and_eax_0x80808080, je_0xffffffffffffffe9, mov_edx_eax, shr_edx_0x10, test_eax_0x8080, cmove_eax_edx, lea_rdx_[r@@ 13+2], cmove@@ _r13@@ _rdx, mov_ecx_eax, add_cl_al, sbb@@ _r13@@ _3, sub_r13@@ _r12, mov_rdx_r13, mov_rsi_r12, mov_edi_ebp, call_0xfffffffffffe@@ 36@@ 4e, mov_r14_rax, test_rax_rax, js_0x1@@ bb, je_0xed, cmp_rax_r13, jb@@ _0xf@@ 3, xor_edx_edx, xor_eax_eax, mov_esi_1, mov_edi_ebp, call_0xfffffffffffe3@@ 28@@ 3, test_eax_eax, js_0x1@@ c9, or_eax_1, mov_edx_eax, mov_esi_2, mov_edi_ebp, xor_eax_eax, call_0xfffffffffffe3@@ 268, mov_r8d_eax, mov_eax_1, test_r8d_r8d, jns_0xfffffffffffffe@@ 58, call_0xfffffffffffe3@@ 352, lea_r12_[rip+0x@@ 19@@ 43@@ 6], mov_edi_dword_ptr_[rax], mov_r13_qword_ptr_[r@@ 12], call_0xfffffffffffe3@@ 160, sub_rsp_8, push_rax, mov_r9_rbx, lea_r8_[rip+0x@@ dd@@ d4], mov_ecx_0xffffffff, mov_edx_0x@@ db, mov_edi_3, lea_rsi_[rip+0xd@@ ba@@ e], xor_eax_eax, call_r13, pop_rdi, pop_r8, mov_rdi_rbx, call_0xfffffffffffe@@ 2e@@ 69, test_eax_eax, je_0xfffffffffffffd@@ f7, call_0xfffffffffffe@@ 32@@ fc, mov_edi_dword_ptr_[rax], mov_r13_qword_ptr_[r@@ 12], call_0xfffffffffffe3@@ 11@@ 1, push_rax, lea_rax_[rip+0x@@ db@@ d6], xor_ecx_ecx, push_rax, lea_rsi_[rip+0x@@ db@@ 74], mov_r9_rbx, lea_r8_[rip+0xb@@ 9f@@ 5], mov_edx_0x@@ e7, mov_edi_7, xor_eax_eax, call_r13, pop_rcx, pop_rsi, jmp_0xfffffffffffffd@@ b4, call_0xfffffffffffe3@@ 2b0, mov_edi_dword_ptr_[rax], test_edi_edi, jne_0x@@ c6, push_r13, lea_r12_[rip+0x@@ 19@@ 38@@ 8], mov_r9_rbx, push_r14, lea_r8_[rip+0xd@@ ca@@ 4], mov_ecx_0xffffffff, mov_edx_0x@@ cc, lea_rsi_[rip+0x@@ db@@ 15], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ 12], pop_r9, pop_r10, jmp_0xffffffffffffff60, lea_r12_[rip+0x@@ 19@@ 34@@ 9], mov_r13_qword_ptr_[r@@ 12], call_0xfffffffffffe@@ 30@@ 75, sub_rsp_8, push_rax, mov_r9_rbx, lea_r8_[rip+0x@@ db@@ c1], mov_ecx_0xffffffff, mov_edx_0x@@ a9, lea_rsi_[rip+0x@@ da@@ ca], mov_edi_3, xor_eax_eax, call_r13, pop_r11, pop_r13, jmp_0xfffffffffffffd@@ 17, call_0xfffffffffffe@@ 32@@ 1d, lea_r12_[rip+0x@@ 19@@ 30@@ 1], mov_edi_dword_ptr_[rax], mov_r13_qword_ptr_[r@@ 12], call_0xfffffffffffe@@ 30@@ 2b, sub_rsp_8, push_rax, mov_r9_rbx, lea_r8_[rip+0xd@@ ba@@ 7], mov_ecx_0xffffffff, mov_edx_0x@@ b9, jmp_0xfffffffffffffe@@ cd, call_0xfffffffffffe3@@ 1e8, mov_edi_dword_ptr_[rax], lea_r12_[rip+0x@@ 19@@ 2c@@ a], mov_r13_qword_ptr_[r@@ 12], call_0xfffffffffffe2@@ ff@@ 6, sub_rsp_8, push_rax, mov_r9_rbx, lea_r8_[rip+0xd@@ ba@@ 2], mov_ecx_0xffffffff, mov_edx_0x@@ c5, jmp_0xfffffffffffffe@@ 98, call_0xfffffffffffe3@@ 1b@@ 3, lea_r12_[rip+0x@@ 19@@ 29@@ 7], mov_edi_dword_ptr_[rax], mov_r13_qword_ptr_[r@@ 12], call_0xfffffffffffe2@@ fc@@ 1, sub_rsp_8, push_rax, mov_r9_rbx, lea_r8_[rip+0x@@ db@@ f5], mov_ecx_0xffffffff, mov_edx_0x@@ d4, jmp_0xfffffffffffffe@@ 63, call_0xfffffffffffe3@@ 1d@@ e
endbr64, push_r13, xor_esi_esi, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0xfffffffffffe2@@ f7@@ d, test_eax_eax, js_0x@@ e6, mov_ebp_eax, mov_edi_eax, mov_rdx_rsp, xor_eax_eax, mov_esi_5, mov_qword_ptr_[rsp+8]_0, mov_dword_ptr_[rsp@@ ]_1, mov_qword_ptr_[rsp+0x10]_0, call_0xfffffffffffe@@ 30@@ 19, test_eax_eax, js_0x4@@ 2, mov_edi_ebp, call_0xfffffffffffe@@ 2a@@ be, test_eax_eax, je_0x28, lea_r9_[rip+0x@@ 19@@ 1e@@ e], lea_r8_[rip+0xb@@ 5c@@ c], xor_ecx_ecx, mov_edx_0x1@@ 04, lea_rsi_[rip+0xd@@ 98@@ 3], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], xor_eax_eax, cmp_word_ptr_[r@@ sp@@ ]_2, setne_al, jmp_0x7@@ 7, call_0xfffffffffffe@@ 30@@ d0, lea_r12_[rip+0x@@ 19@@ 1b@@ 4], mov_edi_dword_ptr_[rax], mov_r13_qword_ptr_[r@@ 12], call_0xfffffffffffe@@ 2e@@ de, sub_rsp_8, push_rax, mov_ecx_0xffffffff, mov_edx_0x@@ fc, mov_r9_rbx, lea_r8_[rip+0x@@ db@@ 88], lea_rsi_[rip+0xd@@ 93@@ 3], mov_edi_3, xor_eax_eax, call_r13, mov_edi_ebp, call_0xfffffffffffe@@ 2a@@ 3d, pop_rdx, pop_rcx, test_eax_eax, je_0x24, lea_r8_[rip+0x@@ b5@@ 50], xor_ecx_ecx, mov_edx_0x@@ ff, lea_rsi_[rip+0xd@@ 90@@ 7], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ 12], xor_eax_eax, mov_rcx_qword_ptr_[rsp+0x28], xor_rcx_qword_ptr_fs:[0x28], jne_0xd, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, call_0xfffffffffffe@@ 30@@ a@@ 3
movzx_esi_byte_ptr_[r@@ di], mov_rax_rdi, test_sil_sil, jne_0x21, jmp_0x48, movzx_ecx_byte_ptr_[rax], mov_rsi_rdx, mov_byte_ptr_[rdi@@ ]_cl, mov_rdx_rax, mov_rax_rsi, movzx_esi_byte_ptr_[r@@ dx+1], inc_rdi, test_sil_sil, je_0x2b, movzx_ecx_byte_ptr_[r@@ ax+1], lea_rdx_[rax+1], cmp_sil@@ _0x2d, jne_0xffffffffffffffda, test_cl_cl, je_0xffffffffffffffd6, cmp_cl@@ _0x2d, jne_0x18, mov_byte_ptr_[rdi@@ ]_cl, add_rax_2, inc_rdi, movzx_esi_byte_ptr_[r@@ dx+1], test_sil_sil, jne_0xffffffffffffffd9, mov_byte_ptr_[rdi]_0, ret, mov_byte_ptr_[rdi]_0, mov_rax_rdx, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, xor_ebp_ebp, push_rbx, sub_rsp_8, test_esi_esi, je_0x7e, mov_rbx_rdi, movsx_edi_byte_ptr_[rbx], mov_r13_rcx, lea_r14d_[r@@ si-1], mov_r12d_ebp, test_dil_dil, jne_0x11, jmp_0x6@@ 7, movsx_edi_byte_ptr_[r@@ bx+1], inc_rbx, test_dil_dil, je_0x5a, call_0xfffffffffffe3@@ 124, test_eax_eax, jne_0xffffffffffffffed, mov_qword_ptr_[r13@@ +r@@ bp*@@ 8]_rbx, movsx@@ _r15@@ _byte_ptr_[rbx], test_r15b_r15b, je_0x29, call_0xfffffffffffe@@ 2c@@ cd, mov_rax_qword_ptr_[rax], jmp_0xe, movsx@@ _r15@@ _byte_ptr_[rbx], test_r15b_r15b, je_0x13, mov_rdx_rbx, inc_rbx, test_byte_ptr_[rax+r@@ 15*@@ 2+1]_0x20, je_0xffffffffffffffeb, mov_byte_ptr_[rdx]_0, inc_r12d, lea_rax_[r@@ bp+1], cmp_r14@@ _rbp, je_0x21, movsx_edi_byte_ptr_[rbx], mov_rbp_rax, mov_r12d_ebp, test_dil_dil, jne_0xffffffffffffffaa, add_rsp_8, pop_rbx, mov_eax_ebp, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_ebp_r12d, jmp_0xffffffffffffffe@@ c
endbr64, push_rbp, push_rbx, mov_rbx_r8, sub_rsp_0x18, test_rcx_rcx, sete_r8b, test_rbx_rbx, sete_al, or@@ _r8@@ b@@ _al, jne_0x63, test_rdx_rdx, je_0x5e, mov_rbp_rcx, test_rdi_rdi, je_0x8e, test_rsi_rsi, je_0xa5, mov_qword_ptr_[rsp+8]_rdx, call_0x1@@ 78@@ 2, mov_rdx_qword_ptr_[rsp+8], mov_rdi_rax, mov_qword_ptr_[rdx]_rax, test_rax_rax, je_0x87, call_0xfffffffffffffe@@ 99, mov_qword_ptr_[rbp]_rax, mov_rdi_rax, call_0xfffffffffffffe@@ 8d, mov_qword_ptr_[rbx]_rax, mov_rdi_rax, call_0xfffffffffffffe@@ 82, add_rsp_0x18, pop_rbx, mov_eax_1, pop_rbp, ret, lea_r8_[rip+0x@@ db@@ 19], mov_ecx_0xffffffff, mov_edx_0x6@@ 3, lea_r9_[rip+0x@@ 18@@ f@@ 78], xor_eax_eax, lea_rsi_[rip+0x@@ da@@ 8d], mov_edi_3, call_qword_ptr_[r9], add_rsp_0x18, pop_rbx, xor_eax_eax, pop_rbp, ret, mov_rdi_qword_ptr_[rdx], test_rdi_rdi, jne_0xffffffffffffff@@ 99, lea_r8_[rip+0xd@@ aa@@ 2], mov_ecx_0xffffffff, mov_edx_0x6@@ b, jmp_0xffffffffffffffc0, lea_r8_[rip+0x@@ da@@ 6c], mov_ecx_0xffffffff, mov_edx@@ _0x68, jmp_0xffffffffffffffa@@ 8
endbr64, push_rbx, mov_rbx_rsi, sub_rsp_0xd0, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_r8_rdx, lea_rax_[rsp+0x20], mov_r9@@ _rsp, mov_rcx_-1, mov_edx_1, mov_rsi_rbx, mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffe2@@ 97@@ c, test_eax_eax, js_0x2@@ 9, movsxd_rdx_eax, cmp_rdx_rbx, mov_edx_0xffffffff, cmovae@@ _eax_edx, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x12, add_rsp_0xd0, pop_rbx, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffe2, call_0xfffffffffffe@@ 2d@@ b@@ 5
endbr64, push_rbx, mov_esi_0x2f, mov_rbx_rdi, call_0xfffffffffffe@@ 2a@@ c3, lea_rdi_[rax+1], test_rax_rax, mov_rax_rbx, cmovne_rax@@ _rdi, pop_rbx, ret
endbr64, push_r15, push_r14, push_r13, mov_r13_rdx, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x48, mov_qword_ptr_[rsp+0x18]_rdi, mov_qword_ptr_[rsp+8]_rsi, mov_edi_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, call_0xfffffffffffe@@ 28@@ 19, mov_qword_ptr_[rbx]_0, test_rax_rax, je_0xee, mov_dword_ptr_[rsp+0x14]_0, mov_r15_rax, mov_ebp@@ _0x10, lea_r12_[rsp+0x20], mov_r14d@@ _0x10, jmp_0x36, mov_rdi_r15, call_0xfffffffffffe2@@ 96@@ d, add@@ _ebp_ebp, lea_eax_[rbx+1], test_ebx_ebx, cmovns@@ _ebp_eax, movsxd_r14@@ _ebp, mov_rdi_r14, call_0xfffffffffffe@@ 27@@ c8, mov_r15_rax, test_rax_rax, je_0xa1, inc_dword_ptr_[r@@ sp+0x14], movdqu_xmm0_xmmword_ptr_[r@@ 13], mov_rax_qword_ptr_[r13+0x10], mov_r8_qword_ptr_[rsp+8], mov_r9_r12, mov_rcx_-1, mov_edx_1, mov_rsi_r14, mov_rdi_r15, mov_qword_ptr_[r12+0x10]_rax, movups_xmmword_ptr_[r@@ 12@@ ]_xmm0, call_0xfffffffffffe@@ 28@@ 45, mov_ebx_eax, cmp_eax_ebp, jae_0xffffffffffffff@@ 9c, cmp_dword_ptr_[rsp+0x1@@ 4]_1, jg@@ _0x35, mov_rax_qword_ptr_[rsp+0x18], mov_qword_ptr_[rax]@@ _r15, lea_eax_[rbx+1], mov_rcx_qword_ptr_[rsp+0x38], xor_rcx_qword_ptr_fs:[0x28], jne_0x45, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_r15, call_0xfffffffffffe@@ 2c@@ 1d, mov_rcx_qword_ptr_[rsp+0x18], mov_rdi_r15, mov_qword_ptr_[rcx]_rax, test_rax_rax, je_9, call_0xfffffffffffe@@ 28@@ b8, jmp_0xffffffffffffffb8, call_0xfffffffffffe@@ 28@@ b1, mov_eax_0xffffffff, jmp_0xffffffffffffffaf, call_0xfffffffffffe@@ 2c@@ 4@@ 5
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]_0x10, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffffe@@ 2d, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xfffffffffffe@@ 2b@@ 9@@ 0
endbr64, test_rsi_rsi, je_0x29, add_rsi_rdi, xor_eax_eax, movsx_ecx@@ _byte_ptr_[rdi], cmp_ecx_edx, sete_cl, movzx_ecx_cl, inc_rdi, add_eax_ecx, cmp_rdi_rsi, jne_0xffffffffffffffed, ret, xor_eax_eax, ret
endbr64, movzx_edx_byte_ptr_[rdi], test_dl_dl, je_0x47, xor_ecx_ecx, mov_eax_1, jmp_0x17, cmp_esi@@ _0x22, je_0x16, inc_rax, movzx_edx_byte_ptr_[r@@ di@@ +rax-1], test_dl_dl, je_0x18, movsx_esi@@ _dl, cmp_dl@@ _0x5c, jne_0xffffffffffffffe9, inc_rax, movzx_edx_byte_ptr_[r@@ di@@ +rax-1], inc@@ _ecx, test_dl_dl, jne_0xffffffffffffffec, movsxd_rcx_ecx, add_rax_rcx, ret, mov_eax_1, ret
endbr64, push_r14, mov_eax_1, mov_r9d_1, push_r13, mov_r13_rcx, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rsi, push_rbx, movzx_edx_byte_ptr_[rsi], test_dl_dl, je_0x23, cmp_dl@@ _0x2d, sete_dl, movzx_edx_dl, inc@@ _r9, add_eax_edx, movzx_edx_byte_ptr_[r@@ bp+r@@ 9@@ -1], test_dl_dl, jne_0xffffffffffffffea, movzx_edx_byte_ptr_[r@@ 12], test_dl_dl, je_0x28, mov_rcx_r12, sub_rcx@@ _r9, cmp_dl@@ _0x2d, sete_dl, movzx_edx_dl, inc@@ _r9, add_eax_edx, movzx_edx_byte_ptr_[r@@ cx+r@@ 9], test_dl_dl, jne_0xffffffffffffffeb, test_r13_r13, je_0xf, movzx_edx_byte_ptr_[r@@ 13], test_dl_dl, jne_0x13@@ d, cdqe, lea_rbx@@ _[rax+r@@ 9], mov_rsi_rbx, call_0xfd@@ e, mov_r14_rax, test_rax_rax, je_0x1@@ 63, movzx_esi_byte_ptr_[r@@ bp], mov_rdx_rax, test_sil_sil, jne_0x27, jmp_0x49, mov_rsi_rcx, mov_rcx_rdx, mov_rdx_rsi, movzx_esi_byte_ptr_[r@@ bp], inc_rbp, mov_byte_ptr_[rcx@@ ]_sil, movzx_esi_byte_ptr_[r@@ bp], test_sil_sil, je_0x2e, lea_rcx_[rdx+1], lea_rax_[rdx@@ +2], cmp_sil@@ _0x2d, jne_0xffffffffffffffd8, lea_rsi_[r@@ dx+3], mov_byte_ptr_[rdx]@@ _0x2d, mov_rdx_rax, mov_rax_rsi, jmp_0xffffffffffffffd2, lea_rax@@ _[rax+1], mov_byte_ptr_[rdx]@@ _0x2d, movzx_ecx_byte_ptr_[r@@ 12], test_cl_cl, jne_0x22, jmp_0x34, mov_rcx_rdx, mov_rdx_rax, mov_rax_rcx, movzx_ecx_byte_ptr_[r@@ 12], inc_r12, mov_byte_ptr_[rdx@@ ]_cl, movzx_ecx_byte_ptr_[r@@ 12], test_cl_cl, je_0x16, lea_rdx_[rax+1], cmp_cl@@ _0x2d, jne_0xffffffffffffffdd, mov_byte_ptr_[rax]@@ _0x2d, add_rax_2, jmp_0xffffffffffffffdd, test_r13_r13, je_0x65, movzx_edx_byte_ptr_[r@@ 13], test_dl_dl, je_0x5c, cmp_dl@@ _0x5f, je_0xa7, mov_byte_ptr_[rax]@@ _0x2d, lea_rcx_[rax+1], movzx_edx_byte_ptr_[r@@ 13], test_dl_dl, je_0x39, mov_rax_rcx, jmp_0x22, mov_rdx_rcx, mov_rcx_rax, mov_rax_rdx, movzx_edx_byte_ptr_[r@@ 13], inc@@ _r13, mov_byte_ptr_[rcx@@ ]_dl, movzx_edx_byte_ptr_[r@@ 13], test_dl_dl, je_0x1e, lea_rcx_[rax+1], cmp_dl@@ _0x2d, jne_0xffffffffffffffdd, mov_byte_ptr_[rax]@@ _0x2d, add_rax_2, jmp_0xffffffffffffffdd, mov_rax_rcx, mov_byte_ptr_[rax]_0, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_rax_r14, pop_r14, ret, mov_rsi_r13, sub_rsi@@ _r9, lea_ecx_[rax+1], cmp_dl@@ _0x2d, jne_9, lea_edx_[rax@@ +2], mov_eax_ecx, mov_ecx_edx, inc@@ _r9, movzx_edx_byte_ptr_[r@@ si+r@@ 9], test_dl_dl, jne_0xffffffffffffffe7, mov_eax_ecx, jmp_0xfffffffffffffe@@ 9c, mov_rcx_rax, jmp_0xffffffffffffff6c, sub_rsp_8, push_r13, lea_r10_[rip+0x@@ 18@@ 96@@ 3], mov_r9_rbx, push_r12, lea_r8_[rip+0x@@ d5@@ 2f], mov_ecx_0xffffffff, push_rbp, mov_edx_0x1@@ 5f, lea_rsi_[rip+0xd@@ 46@@ 3], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], add_rsp_0x20, jmp_0xffffffffffffff7@@ 2
endbr64, push_r15, push_r14, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, mov_rdi_rsi, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rcx, sub_rsp_8, call_0xfffffffffffe@@ 24@@ ef, mov_rdi_rbp, mov_r15_rax, call_0xfffffffffffe@@ 24@@ e4, mov_r14_rax, test_rbx_rbx, je_0x79, mov_rdi_rbx, call_0xfffffffffffe@@ 24@@ d4, lea_r14_[r@@ 15+r@@ 14+2], add_r14_rax, mov_rdi_r12, mov_rsi_r14, call_0xd@@ e1, mov_r12_rax, test_rax_rax, je_0x7e, cmp_byte_ptr_[rbx]_0, lea_rax_[rip+0xd@@ 43@@ f], lea_rdx_[rip+0x@@ 66@@ f2], cmove_rax_rdx, push_rbx, mov_rdx_-1, mov_r9_rbp, push_rax, mov_r8_r13, lea_rcx_[rip+0xd@@ 420], mov_esi_1, mov_rdi_r12, xor_eax_eax, call_0xfffffffffffe2@@ 97@@ f, pop_rax, pop_rdx, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_r14_[r@@ 15@@ +rax+2], mov_rdi_r12, mov_rsi_r14, call_0xd@@ 75, mov_r12_rax, lea_rbx_[rip+0x@@ 66@@ 95], test_rax_rax, je_0xb, mov_rax_rbx, jmp_0xffffffffffffff9f, push_rbx, lea_r10_[rip+0x@@ 18@@ 8@@ 50], mov_ecx_0xffffffff, push_rbp, lea_rsi_[rip+0xd@@ 36@@ 1], mov_r9_r14, lea_r8_[rip+0xd@@ 44@@ 9], mov_edx_0x1@@ 7f, mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], pop_rcx, pop_rsi, xor_r12d_r12d, jmp_0xffffffffffffff8@@ d
endbr64, movzx_edx_byte_ptr_[rsi], mov_rax_rdi, mov_rcx_rdi, test_dl_dl, jne_0x28, jmp_0x3f, cmp_r9d@@ _0x22, je_0x28, mov_rdx_r8, mov_r8_rcx, mov_rcx_rdx, movzx_edx_byte_ptr_[rsi], inc@@ _rsi, mov_byte_ptr_[r@@ 8]_dl, movzx_edx_byte_ptr_[rsi], test_dl_dl, je_0x1b, movsx@@ _r9d@@ _dl, lea_r8_[r@@ cx+1], cmp_dl@@ _0x5c, jne_0xffffffffffffffd6, mov_byte_ptr_[rcx@@ ]@@ _0x5c, add_rcx@@ _2, jmp_0xffffffffffffffdc, mov_byte_ptr_[rcx@@ ]_0, ret
endbr64, movzx_edx_byte_ptr_[rdi], lea_rax_[r@@ di+1], test_dl_dl, jne_0x15, jmp_0x8@@ 9, movzx_edx_byte_ptr_[rax], inc_rax, test_dl_dl, je_0x78, lea_rsi@@ _[rax-1], cmp_dl@@ _0x5c, jne_0xffffffffffffffef, movzx_edx_byte_ptr_[rax], cmp_dl@@ _0x22, je_7, cmp_dl@@ _0x5c, jne_0xffffffffffffffe2, mov_byte_ptr_[rsi@@ ]_dl, movzx_edx_byte_ptr_[r@@ si+2], lea_rdi_[r@@ si+2], lea_rcx_[r@@ si+@@ 3], test_dl_dl, jne_0x1e, jmp_0x47, mov_byte_ptr_[rax]_dl, lea_rsi_[r@@ cx+1], inc_rax, movzx_edx_byte_ptr_[r@@ cx], test_dl_dl, je_0x33, mov_rdi_rcx, mov_rcx_rsi, cmp_dl@@ _0x5c, jne_0xffffffffffffffe7, movzx_esi_byte_ptr_[r@@ di+1], cmp_sil@@ _0x5c, je_8, cmp_sil@@ _0x22, jne_0xffffffffffffffd7, mov_edx_esi, mov_byte_ptr_[rax]_dl, lea_rcx_[r@@ di+2], inc_rax, movzx_edx_byte_ptr_[r@@ cx], lea_rsi_[r@@ cx+1], test_dl_dl, jne_0xffffffffffffffd1, mov_byte_ptr_[rax]_0, ret, ret
endbr64, movzx_eax_byte_ptr_[rdi], lea_r9_[r@@ di+1], mov_rcx_rdi, xor_r10d_r10d, xor_r8d_r8d, test_al_al, jne_0x2d, jmp_0x5@@ 8, cmp_al_0x3a, jne_0x6e, test_r8_r8, cmove@@ _r8@@ _rcx, mov_eax@@ _0x3a, mov_rdi_r9, mov_byte_ptr_[rcx@@ ]_al, inc_rcx, lea_r9_[r@@ di+1], movzx_eax_byte_ptr_[rdi], test_al_al, je_0x2f, cmp_al_0x5c, jne_0xffffffffffffffdb, movzx_eax_byte_ptr_[r@@ di+1], cmp_al_0x3a, je_0x1b, cmp_al_0x5c, je_0x17, cmp_al@@ _0x40, je_0x13, mov_eax@@ _0x5c, mov_rdi_r9, jmp_0xffffffffffffffd4, add_rdi_2, jmp_0xffffffffffffffc7, mov_byte_ptr_[rcx@@ ]_0, test_rsi_rsi, je_5, mov_qword_ptr_[rsi@@ ]_r8, test_rdx_rdx, je_0xa, mov_qword_ptr_[rdx@@ ]_r10, ret, ret, cmp_al@@ _0x40, jne_7, test_r10_r10, je_9, mov_rdi_r9, jmp_0xffffffffffffff97, mov_r10@@ _rcx, mov_eax_0x40, jmp_0xfffffffffffffff@@ 1
endbr64, push_rbp, mov_rcx_rdx, mov_rbp_rdi, push_rbx, mov_rbx_rdx, xor_edx_edx, sub_rsp_8, call_0xfffffffffffe@@ 26@@ 7b, mov_r8_rax, mov_eax_1, test_r8_r8, je_0xb, add_rsp_8, pop_rbx, pop_rbp, ret, xor_eax_eax, test_rbx_rbx, je_0xfffffffffffffff2, mov_byte_ptr_[rbp+r@@ bx@@ -1]_0, add_rsp_8, pop_rbx, pop_rbp, ret
endbr64, push_r13, mov_r13_rsi, push_r12, mov_r12d_edx, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rcx, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x10]_0, test_rcx_rcx, je_5, mov_qword_ptr_[rbx@@ ]_rdi, call_0xfffffffffffe2@@ 24@@ 5, mov_rax_qword_ptr_[rax], movsx_rcx@@ _byte_ptr_[r@@ bp], mov_rdx_rcx, test_byte_ptr_[rax@@ +rcx*@@ 2+1]_8, jne_0x70, test_r12d_r12d, je_6, test_cl_cl, jne_0x37, pxor_xmm1_xmm1, mov_eax_1, mov_byte_ptr_[r13@@ ]_dl, movzx_esi_byte_ptr_[r@@ bp], lea_edx_[r@@ si-0x@@ 42], cmp_dl@@ _0x32, ja_0x2@@ 4, lea_rcx_[rip+0xd@@ 23@@ d], movzx_edx_dl, movsxd_rdx_dword_ptr_[r@@ cx+rdx*4], add_rdx_rcx, jmp_rdx, cmp_byte_ptr_[rbp+@@ 1]_0, je_0xffffffffffffffc7, xor_eax_eax, mov_rdi_qword_ptr_[rsp+0x18], xor_rdi_qword_ptr_fs:[0x28], jne_0x2@@ 34, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, lea_rsi_[rsp+0x10], mov_rdi_rbp, call_0xfffffffffffe@@ 27@@ 78, cmp_qword_ptr_[rsp+0x1@@ 0]_rbp, je_0xffffffffffffff@@ c4, xor_esi_esi, mov_edx_0xa, mov_rdi_rbp, movsd_qword_ptr_[rsp+8]_xmm0, call_0xfffffffffffe2@@ 5e@@ c, test_rax_rax, movsd_xmm1@@ _qword_ptr_[rsp+8], js_0x4@@ e, pxor_xmm0_xmm0, cvtsi2sd_xmm0_rax, subsd_xmm0_xmm1, movsd_xmm2_qword_ptr_[rip+0x@@ aa@@ 07], and@@ pd@@ _xmm0_xmmword_ptr_[r@@ ip+0x@@ a@@ 9e@@ f], comisd@@ _xmm2_xmm0, jbe_@@ 6, pxor_xmm1_xmm1, mov_rbp_qword_ptr_[rsp+0x10], test_r12d_r12d, jne_0x1@@ 7d, cmp_rax_1, je_0x1@@ b2, mov_edx_0x5@@ 5, jmp_0xffffffffffffff2c, mov_rdx_rax, mov_rcx_rax, shr_rdx_1, and_ecx_1, or@@ _rdx_rcx, pxor_xmm0_xmm0, cvtsi2sd_xmm0_rdx, addsd_xmm0_xmm0, jmp_0xffffffffffffffa1, cmp_byte_ptr_[rbp]_0, je_0xfffffffffffffe@@ 85, cmp_byte_ptr_[rbp+@@ 1]_0, je_0xfffffffffffffe@@ 7b, jmp_0xfffffffffffffd@@ e2, call_0xfffffffffffe@@ 22@@ b6, movzx_edx_byte_ptr_[r@@ bp], jmp_0xfffffffffffffd@@ 7@@ c
endbr64, push_r15, mov_r15d_edx, push_r14, mov_r14d_edx, mov_edx_0x2@@ 40, push_r13, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, lea_rsi_[rip+0x18@@ 3@@ 1b], push_rbx, mov_rbx_r8, sub_rsp_0x2@@ 88, mov_dword_ptr_[rsp+8]_ecx, mov_dword_ptr_[rsp+0x10]_r9d, lea_r13_[rsp+0x30], mov_rdi_r13, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x2@@ 78]_rax, xor_eax_eax, mov_byte_ptr_[rsp+0x@@ 2f@@ ]_0, call_0xfffffffffffe@@ 24@@ d7, mov_esi_0x80, mov_rdi_r12, call_0x7c@@ a, test_rax_rax, je_0x2@@ 82, mov_r12_rax, mov_eax_dword_ptr_[rsp+8], test_eax_eax, jne_0x1@@ b3, call_0xfffffffffffe@@ 1e@@ 4d, mov_rdi_qword_ptr_[rax], movsx@@ _r8@@ _r15b, mov_esi_dword_ptr_[r@@ di+r@@ 8*4], mov_rdx_r13, xor_eax_eax, mov_rcx_qword_ptr_[r@@ dx+0x28], mov_r9d_eax, movsx_ecx_byte_ptr_[r@@ cx], inc_eax, cmp_ecx_esi, je_0x4@@ 0a, add_rdx@@ _0x18, cmp_eax_6, jne_0xffffffffffffffe5, mov_rax_qword_ptr_[rsp+0x@@ 238], movsx_eax_byte_ptr_[r@@ ax], cmp_esi_eax, je_0x4@@ d6, mov_rax_qword_ptr_[rsp+0x@@ 250], movsx_eax_byte_ptr_[r@@ ax], cmp_esi_eax, je_0x4@@ d1, mov_rax_qword_ptr_[rsp+0x@@ 268], movsx_eax_byte_ptr_[r@@ ax], cmp_eax_esi, je_0x4@@ cf, test_rbp_rbp, je_0x2@@ 37, shl_rbp@@ _9, cmp_r15b@@ _0x48, je_0x1@@ b1, movabs@@ _rbx@@ _0x1@@ 00000000@@ 0000000, mov_r8d@@ _0x400, mov_r14d@@ _8, cmp_r15b@@ _0x5@@ 2, je_0x1@@ 91, mov_r9d_dword_ptr_[rsp+8], mov_eax_1, test_r9d_r9d, cmove@@ _r14d_eax, test_rbp_rbp, js_0x1@@ 57, pxor_xmm1_xmm1, cvtsi2sd_xmm1@@ _rbp, cmp_rbx_rbp, jbe_0x@@ 23@@ 5, xor_ecx_ecx, mov_rax_rbx, xor_edx_edx, div@@ _r8, inc@@ _ecx, mov_rbx_rax, cmp_ecx@@ _5, ja@@ _7, cmp_rax_rbp, ja_0xffffffffffffff@@ eb, add_r14d@@ _ecx, lea_r9_[rip+0x@@ 5@@ fe@@ 6], cmp_ecx@@ _5, jbe_0x@@ 20@@ 4, mov_eax_r14d, lea_rdx_[rax+rax*2], mov_rdx_qword_ptr_[r@@ sp@@ +rdx*8+0x@@ 40], xor_esi_esi, movsx_rdx_byte_ptr_[r@@ dx], mov_edx_dword_ptr_[r@@ di@@ +rdx*4], cmp_edx@@ _0x42, je_0xd, xor_esi_esi, cmp_edx@@ _0x5@@ 3, setne_sil, add@@ _esi_esi, mov_edx_dword_ptr_[rsp+0x@@ 2c0], lea_rax_[rax+rax*2], add_rax_rdx, mov_rcx_qword_ptr_[r@@ sp+rax*8+0x@@ 30], test_rbx_rbx, js_0x1@@ 13, pxor_xmm0_xmm0, cvtsi2sd_xmm0@@ _rbx, divsd@@ _xmm1_xmm0, push_rcx, mov_edx_1, lea_r8_[rip+0x@@ cc@@ d9], push_rsi, mov_rcx_-1, mov_esi_0x80, mov_rdi_r12, mov_eax_1, movapd_xmm0_xmm1, call_0xfffffffffffe@@ 22@@ 2a, pop_rax, pop_rdx, mov_rax_qword_ptr_[rsp+0x@@ 278], xor_rax_qword_ptr_fs:[0x28], jne_0x3@@ ba, add_rsp_0x2@@ 88, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_r13, mov_rdx_r13, xor_r9d_r9d, mov_rcx_qword_ptr_[r@@ dx+0x1@@ 78], cmp_byte_ptr_[rcx@@ ]@@ _r14b, je_0x1@@ ed, inc@@ _r9d, add_rdx@@ _0x18, cmp_r9d@@ _6, jne_0xffffffffffffffe5, xor_r9d_r9d, mov_rdx_qword_ptr_[rax+0x@@ d0], cmp_byte_ptr_[rdx]@@ _r14b, je_0x3@@ 05, inc@@ _r9d, add_rax_0x18, cmp_r9d@@ _6, jne_0xffffffffffffffe5, call_0xfffffffffffe@@ 1c@@ 5a, mov_rdi_qword_ptr_[rax], movsx@@ _r8@@ _r14b, mov_esi_dword_ptr_[r@@ di+r@@ 8*4], jmp_0xfffffffffffffe@@ 2f, mov_rax_rbp, shr_rax_1, pxor_xmm1_xmm1, cvtsi2sd_xmm1_rax, addsd@@ _xmm1_xmm1, jmp_0xfffffffffffffea@@ 5, movabs@@ _rbx@@ _0x@@ d@@ e0@@ b@@ 6b@@ 3a@@ 7@@ 64@@ 0000, mov_r8d@@ _0x3e8, mov_r14d@@ _0xf, jmp_0xfffffffffffffe@@ 5f, mov_rdx_rbx, shr_rdx_1, and_ebx_1, or_rdx@@ _rbx, pxor_xmm0_xmm0, cvtsi2sd_xmm0_rdx, addsd_xmm0_xmm0, jmp_0xfffffffffffffe@@ e3, lea_r9_[rip+0x@@ 180@@ 39], lea_r8_[rip+0x@@ cc@@ 72], mov_ecx_0xffffffff, mov_edx_0x2@@ 02, lea_rsi_[rip+0x@@ cb@@ 3f], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], lea_r12_[rip+0x@@ 5e@@ 3f], jmp_0xfffffffffffffe@@ dd, xor_r13d_r13d, xor_r9d_r9d, mov_ebx_dword_ptr_[r@@ sp+0x10], lea_r8_[rip+0x@@ 5e@@ 26], test_ebx_ebx, je_0x19, mov_ecx_dword_ptr_[rsp+0x@@ 2c0], lea_edx_[r@@ 9+r@@ 13], lea_rax_[rdx@@ +rdx*2], add_rax_rcx, mov_r8_qword_ptr_[r@@ sp+rax*8+0x@@ 30], lea_rcx_[rip+0x@@ cb@@ 57], mov_rdx_-1, mov_esi_1, mov_rdi_r12, xor_eax_eax, call_0xfffffffffffe@@ 20@@ a4, jmp_0xfffffffffffffe@@ 8c, and_r15d@@ _0xffffffdf, lea_r9_[rip+0x@@ 5@@ dd@@ 4], cmp_r15b@@ _0x5@@ 2, jne_0xfffffffffffffd@@ f3, movapd@@ _xmm3@@ _xmm1, mulsd@@ _xmm3@@ _qword_ptr_[rip+0x@@ cc@@ ff], pxor_xmm0_xmm0, cvtsi2sd_xmm0@@ _rbx, mov_qword_ptr_[rsp+0x18]_rdi, movsd_qword_ptr_[r@@ sp+0x10@@ ]_xmm1, divsd@@ _xmm3@@ _xmm0, movapd@@ _xmm0_xmm3, movsd_qword_ptr_[rsp+8@@ ]_xmm3, call_0xfffffffffffe@@ 1a@@ 1d, movsd_xmm3@@ _qword_ptr_[rsp+8], movq@@ _xmm5@@ _qword_ptr_[rip+0x@@ a@@ 43@@ a], movsd@@ _xmm7@@ _qword_ptr_[rip+0x@@ cc@@ ca], movapd@@ _xmm6@@ _xmm3, and@@ pd@@ _xmm6@@ _xmm5, ucomisd@@ _xmm7@@ _xmm6, movsd_xmm1@@ _qword_ptr_[rsp+0x10], mov_rdi_qword_ptr_[rsp+0x18], movapd@@ _xmm2@@ _xmm3, movapd@@ _xmm4@@ _xmm5, ja_0x1@@ 7b, subsd@@ _xmm2_xmm0, movsd_xmm0_qword_ptr_[rip+0x@@ a4@@ 11], lea_rax_[rip+0x@@ 5d@@ 49], and@@ pd@@ _xmm2@@ _xmm5, comisd@@ _xmm0_xmm2, lea_r9_[rip+0x@@ ca@@ 8b], cmova@@ _r9_rax, jmp_0xfffffffffffffd@@ 59, mov_r13d@@ _0xf, test_rbp_rbp, je_0xfffffffffffffe@@ f5, test_rbx_rbx, je_0x7e, mov_dword_ptr_[rsp+8]_r9d, call_0xfffffffffffe@@ 1a@@ 87, mov_r9d_dword_ptr_[rsp+8], mov_r8_rax, lea_eax_[r@@ 13+r@@ 9], lea_rdx_[rax+rax*2], mov_rdx_qword_ptr_[r@@ sp@@ +rdx*8+0x@@ 40], xor_esi_esi, movsx_rcx@@ _byte_ptr_[r@@ dx], mov_rdx_qword_ptr_[r@@ 8], mov_edx_dword_ptr_[r@@ dx@@ +rcx*4], cmp_edx@@ _0x42, je_0xd, xor_esi_esi, cmp_edx@@ _0x5@@ 3, setne_sil, add@@ _esi_esi, shl_rbp@@ _9, js_0x@@ cc, pxor_xmm1_xmm1, cvtsi2sd_xmm1@@ _rbp, mov_edi_dword_ptr_[rsp+0x10], lea_r9_[rip+0x@@ 5c@@ c1], mov_rcx_r9, test_edi_edi, je_0xfffffffffffffd@@ 17, jmp_0xfffffffffffffc@@ fe, mov_r13d_1, jmp_0xffffffffffffff80, xor_ecx_ecx, lea_rsi_[rsp+0x@@ 2f], lea_rdi_[rsp+0x@@ 27@@ 6], mov_edx_1, mov_dword_ptr_[rsp+8]_r9d, mov_byte_ptr_[rsp+0x@@ 27@@ 6]@@ _r15b, mov_byte_ptr_[rsp+0x@@ 27@@ 7]_0, call_0xfffffffffffff8@@ 27, mov_rbx_rax, test_rbx_rbx, movsx_eax@@ _byte_ptr_[rsp+0x@@ 2f], mov_r9d_dword_ptr_[rsp+8], je_0xb, cmp_al@@ _r15b, je_0xffffffffffffff@@ 41, sub_rsp_8, push_rax, lea_r10_[rip+0x@@ 17@@ e@@ 1b], movsx@@ _r9d@@ _r15b, lea_r8_[rip+0x@@ ca@@ 78], mov_ecx_0xffffffff, mov_edx_0x2@@ 38, lea_rsi_[rip+0x@@ c9@@ 1d], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], pop_r10, pop_r11, lea_r12_[rip+0x@@ 5c@@ 19], jmp_0xfffffffffffffc@@ b7, shr@@ _rbp@@ _1, pxor_xmm1_xmm1, cvtsi2sd_xmm1@@ _rbp, addsd@@ _xmm1_xmm1, jmp_0xffffffffffffff33, mov_r13d@@ _8, jmp_0xfffffffffffffec8, cvttsd2si@@ _rax@@ _xmm3, pxor_xmm2_xmm2, and@@ n@@ pd@@ _xmm4@@ _xmm3, cvtsi2sd@@ _xmm2@@ _rax, or@@ pd@@ _xmm2@@ _xmm4, jmp_0xfffffffffffffe@@ 75, xor_r9d_r9d, mov_r13d@@ _0x15, jmp_0xfffffffffffffe@@ 95, mov_r9d_1, mov_r13d@@ _0x15, jmp_0xfffffffffffffe@@ 84, mov_r9d_2, mov_r13d@@ _0x15, jmp_0xfffffffffffffe@@ 73, call_0xfffffffffffe@@ 1c@@ d@@ 8
push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rdx, mov_r12_qword_ptr_[r@@ si], test_r12_r12, je_0x10, mov_rax_qword_ptr_[r12+8], sub_rax_qword_ptr_[r@@ 12], cmp_rax_rdx, jge_0x@@ 3a, mov_rdi_rbx, call_0xfffffffffffe@@ 17@@ 7d, mov_r12_rax, test_rax_rax, je_0x33, lea_rax_[r@@ ax+0x18], add_rbx@@ _r12, mov_qword_ptr_[r12]_rax, mov_qword_ptr_[r12+@@ 8]_rbx, mov_rax_qword_ptr_[rbp], mov_qword_ptr_[r12+0x10]_rax, mov_qword_ptr_[rbp@@ ]_r12, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, mov_qword_ptr_[rsi]_0, jmp_0xffffffffffffffe1, lea_r10_[rip+0x@@ 17@@ c@@ f8], mov_r9_rbx, lea_r8_[rip+0x@@ ca@@ 6e], or_ecx_0xffffffff, mov_edx_0x1@@ 21, lea_rsi_[rip+0xc@@ be@@ d], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], jmp_0xffffffffffffffc@@ 2
endbr64, push_r12, push_rbp, mov_rbp_rdi, mov_edi_1, push_rbx, mov_rbx_rsi, mov_esi_0x4@@ 8, call_0xfffffffffffe@@ 1c@@ c8, mov_r12_rax, test_rax_rax, je_0x59, lea_rsi_[r@@ bx+0x18], mov_qword_ptr_[rax+0x20]@@ _rbp, mov_eax@@ _0x400, cmp_rsi@@ _0x400, jbe_0x@@ f, add_rax_rax, cmp_rsi_rax, ja@@ _0xfffffffffffffffa, lea_rdi_[rip+0x2@@ 19@@ 2f@@ 1], mov_qword_ptr_[r12+0x@@ 28]_rax, call_0xfffffffffffe@@ 1d@@ fc, lea_rdi_[rip+0x17@@ ec0], mov_rsi_r12, call_0x5@@ 1d@@ d, lea_rdi_[rip+0x2@@ 19@@ 2d@@ 1], call_0xfffffffffffe@@ 1e@@ 41, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, push_rax, lea_r10_[rip+0x@@ 17@@ c@@ 4c], or_ecx_0xffffffff, push@@ _0x48, mov_edx_0x3@@ 7, mov_r9_rbp, lea_r8_[rip+0x@@ c9@@ e0], lea_rsi_[rip+0x@@ cb@@ 3f], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], pop_rdx, pop_rcx, jmp_0xffffffffffffffc@@ 9
endbr64, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, mov_rdi_qword_ptr_[rdi+0x18], call_0xfffffffffffe@@ 17@@ df, mov_rbx_qword_ptr_[r@@ bp+0x10], test_rbx_rbx, je_0x14, mov_rdi_rbx, mov_rbx_qword_ptr_[rbx+0x10], call_0xfffffffffffe@@ 17@@ c9, test_rbx_rbx, jne_0xfffffffffffffff1, lea_rdi_[rip+0x2@@ 19@@ 258], call_0xfffffffffffe@@ 1d@@ 68, mov_rdi_rbp, call_0x5@@ 1e0, lea_rdi_[rip+0x2@@ 19@@ 24@@ 4], call_0xfffffffffffe@@ 1d@@ b4, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffffe@@ 17@@ 9@@ 6
endbr64, push_r12, mov_r12d_edx, push_rbp, mov_rbp_r12, push_rbx, mov_rbx_rsi, mov_rdx_qword_ptr_[r@@ di+0x10], test_rdx_rdx, je_0x22, mov_rax_qword_ptr_[rdx], lea_ecx_[r@@ 12-1], and@@ _rcx_rax, mov_rsi_r12, sub_rsi_rcx, mov_rcx_qword_ptr_[rdx+8], add_rax_rsi, mov_qword_ptr_[rdx]_rax, cmp_rcx_rax, jae_0x@@ 48, mov_rax_qword_ptr_[rdi+0x28], lea_rdx_[r@@ 12+r@@ bx+0x18], cmp_rdx_rax, cmovb@@ _rdx_rax, lea_rsi_[r@@ di+0x18], add_rdi_0x10, call_0xfffffffffffffe0@@ e, mov_rdx_rax, test_rax_rax, je_0x33, mov_rax_qword_ptr_[rax], lea_ecx_[r@@ bp-1], and@@ _rcx_rax, sub_r12@@ _rcx, add_rax_r12, mov_qword_ptr_[rdx]_rax, add_rbx_rax, mov_qword_ptr_[rdx@@ ]_rbx, pop_rbx, pop_rbp, pop_r12, ret, sub_rcx_rax, movsxd_rsi@@ _ebx, cmp_rcx_rsi, jl_0xffffffffffffff@@ b1, jmp_0xffffffffffffff@@ e6, lea_r9_[rip+0x@@ 17@@ b@@ 29], xor_eax_eax, lea_r8_[rip+0x9@@ f0@@ 5], xor_ecx_ecx, mov_edx_0x6@@ f, lea_rsi_[rip+0x@@ ca@@ 20], mov_edi_7, call_qword_ptr_[r9], xor_eax_eax, jmp_0xffffffffffffffb@@ f
endbr64, mov_edx_8, jmp_0xffffffffffffff3@@ 7
endbr64, push_r12, push_rbp, push_rbx, mov_rbx_qword_ptr_[rdi+0x10], test_rbx_rbx, je_0x3e, mov_rbp_rdi, mov_r12_rsi, cmp_r12_rbx, jb@@ e_8, cmp_qword_ptr_[rbx+@@ 8]_r12, ja_0x5@@ 7, mov_rdi_qword_ptr_[rbp+0x18], test_rdi_rdi, je_7, call_0xfffffffffffe@@ 16@@ 8c, lea_rax_[r@@ bx+0x18], mov_qword_ptr_[rbx]_rax, mov_qword_ptr_[rbp+0x1@@ 8]_rbx, mov_rbx_qword_ptr_[rbx+0x10], test_rbx_rbx, jne_0xffffffffffffffd5, lea_rax_[rip+0x@@ 17@@ a@@ 9c], pop_rbx, mov_r9_qword_ptr_[rax], pop_rbp, lea_r8_[rip+0x@@ c8@@ 68], mov_ecx_0xffffffff, mov_edx_0x@@ a4, lea_rsi_[rip+0x@@ c9@@ 8d], mov_edi_3, xor_eax_eax, pop_r12, jmp_r9, mov_qword_ptr_[rbx@@ ]_r12, mov_qword_ptr_[rbp+0x1@@ 0]_rbx, pop_rbx, pop_rbp, pop_r12, ret
endbr64, mov_rsi_qword_ptr_[r@@ di+0x10], jmp_0x14, mov_rax_qword_ptr_[rsi+0x10], test_rax_rax, je_0x11, mov_rsi_rax, test_rsi_rsi, jne_0xfffffffffffffff1, ret, add_rsi@@ _0x18, jmp_0xffffffffffffff4@@ 4
endbr64, mov_rax_qword_ptr_[rdi+0x10], mov_qword_ptr_[rdi+0x@@ 30]_0, mov_dword_ptr_[rdi+0x@@ 38@@ ]_8, test_rax_rax, je_0x19, mov_rdx_qword_ptr_[rax], and_rdx@@ _0xfffffffffffffff8, add_rdx_8, mov_qword_ptr_[rax]_rdx, mov_rax_qword_ptr_[rax+8], cmp_rax_rdx, jae_0x@@ 47, sub_rsp_8, mov_rdx_qword_ptr_[r@@ di+0x28], lea_rax_[r@@ si+0x20], lea_rcx_[rdx@@ -0x18], cmp_rcx_rsi, cmovb@@ _rdx_rax, lea_rsi_[r@@ di+0x18], add_rdi_0x10, call_0xfffffffffffffc@@ 6e, test_rax_rax, je_0x36, mov_rdx_qword_ptr_[rax], and_rdx@@ _0xfffffffffffffff8, add_rdx_8, mov_qword_ptr_[rax]_rdx, mov_eax_1, add_rsp_8, ret, sub_rax_rdx, movsxd_rdx@@ _esi, cmp_rax_rdx, jl_0xffffffffffffff@@ b2, mov_eax_1, ret, xor_eax_eax, add_rsp_8, ret
endbr64, push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_r13_qword_ptr_[r@@ di+0x10], test_rdx_rdx, jne_0xd, mov_rdi_rsi, call_0xfffffffffffe@@ 15@@ 3d, mov_rbp_rax, mov_rdx_qword_ptr_[rbx+0x30], mov_rdi_qword_ptr_[r13], mov_rax_qword_ptr_[r13+8], add_rdi_rdx, sub_rax_rdi, movsxd_rcx@@ _ebp, cmp_rax_rcx, jge_0x@@ 5f, mov_r8_qword_ptr_[r@@ bx+0x28], add_rdx@@ _rbp, mov_rax_r8, shr_rax_1, lea_rdi_[r@@ bx+0x10], lea_rsi_[r@@ bx+0x18], cmp_rdx_rax, ja_0x6@@ b, mov_rdx_r8, call_0xfffffffffffffbb@@ e, xor_r8d_r8d, test_rax_rax, je_0x4a, mov_edi_dword_ptr_[r@@ bx+0x38], mov_rcx_qword_ptr_[rbx+0x10], mov_rdx_rdi, mov_rax_qword_ptr_[rcx], dec@@ _edx, and@@ _rdx_rax, sub_rdi_rdx, add_rdi_rax, mov_qword_ptr_[rcx@@ ]_rdi, mov_rdx_qword_ptr_[rbx+0x30], mov_rsi_qword_ptr_[r13], call_0xfffffffffffe@@ 1a@@ ee, mov_rax_qword_ptr_[rbx+0x10], mov_rdi_qword_ptr_[rbx+0x30], add_rdi_qword_ptr_[r@@ ax], mov_rdx_rbp, mov_rsi_r12, call_0xfffffffffffe@@ 1a@@ d8, add_qword_ptr_[rbx+0x@@ 30]@@ _rbp, mov_r8d_1, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_eax_r8d, pop_r13, ret, add_rdx_rdx, call_0xfffffffffffffb@@ 55, jmp_0xffffffffffffff9@@ 7
endbr64, mov_rdx_qword_ptr_[r@@ di+0x10], mov_rcx_qword_ptr_[r@@ di+0x30], mov_rax_qword_ptr_[rdx], add_rcx_rax, mov_qword_ptr_[rdx]_rcx, mov_qword_ptr_[rdi+0x@@ 30]_0, mov_dword_ptr_[rdi+0x@@ 38@@ ]_8, ret
endbr64, mov_qword_ptr_[rdi+0x@@ 30]_0, mov_dword_ptr_[rdi+0x@@ 38@@ ]_8, ret
endbr64, push_r13, mov_r13_rdi, mov_rdi_rsi, push_r12, push_rbp, mov_rbp_rsi, call_0xfffffffffffe@@ 14@@ 1e, lea_r12@@ _[rax+1], mov_rsi_r12, mov_rdi_r13, call_0xfffffffffffffd@@ 2f, mov_r8_rax, test_rax_rax, je_0x13, mov_rdx_r12, mov_rsi_rbp, mov_rdi_rax, call_0xfffffffffffe@@ 1a@@ 19, mov_r8_rax, pop_rbp, pop_r12, mov_rax_r8, pop_r13, ret
endbr64, push_r13, mov_r13_rdx, push_r12, mov_r12_rdi, mov_rdi_rsi, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_8, call_0xfffffffffffe@@ 13@@ c6, lea_rsi_[r@@ 13+1], mov_rdi_r12, mov_rbx_rax, call_0xfffffffffffffc@@ d7, mov_r8_rax, test_rax_rax, je_0x1e, cmp_rbx_r13, mov_rdx_r13, cmovbe@@ _rdx@@ _rbx, mov_rsi_rbp, mov_byte_ptr_[rax@@ +rdx]_0, mov_rdi_rax, call_0xfffffffffffe@@ 19@@ b6, mov_r8_rax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_rax_r8, pop_r13, ret
endbr64, push_r12, mov_r12_rsi, call_0xfffffffffffffc@@ 97, mov_r8_rax, test_rax_rax, je_0x12, mov_rdx_r12, xor_esi_esi, mov_rdi_rax, call_0xfffffffffffe0@@ ff@@ 2, mov_r8_rax, mov_rax_r8, pop_r12, ret
endbr64, push_r13, lea_rdi_[rip+0x2@@ 18@@ dd@@ 3], push_r12, push_rbp, push_rbx, sub_rsp_8, call_0xfffffffffffe@@ 18d@@ b, lea_rdi_[rip+0x17@@ 99@@ f], call_0x4d@@ 9f, test_eax_eax, jne_0x@@ c8, lea_rbp_[rip+0x@@ 17@@ 7@@ 3b], lea_r8_[rip+0xc@@ 54@@ c], mov_ecx_0xffffffff, mov_edx_0x5@@ e, lea_rsi_[rip+0xc@@ 64@@ e], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ bp], mov_rbx_qword_ptr_[rip+0x@@ 17@@ 96@@ 2], lea_r12_[rip+0x@@ 17@@ 95@@ b], cmp_rbx_r12, je_0x42, lea_r13_[rip+0x@@ c@@ 64@@ 2], sub_rsp_8, push_qword_ptr_[r@@ bx+0x20], mov_r9_rbx, mov_edx_0x6@@ 5, xor_eax_eax, mov_r8_r13, mov_ecx_0xffffffff, lea_rsi_[rip+0xc@@ 60@@ 3], mov_edi_3, call_qword_ptr_[r@@ bp], mov_rbx_qword_ptr_[rbx], pop_rax, pop_rdx, cmp_rbx_r12, jne_0xffffffffffffffd0, lea_rdi_[rip+0x2@@ 18d@@ 2f], call_0xfffffffffffe@@ 18@@ 9f, mov_r9_qword_ptr_[r@@ bp], add_rsp_8, pop_rbx, pop_rbp, pop_r12, lea_r8_[rip+0xc@@ 4f@@ 7], mov_ecx_0xffffffff, mov_edx_0x6@@ 9, lea_rsi_[rip+0xc@@ 5c@@ 1], mov_edi_3, xor_eax_eax, pop_r13, jmp_r9, add_rsp_8, pop_rbx, pop_rbp, pop_r12, lea_rdi_[rip+0x2@@ 18@@ ce@@ 1], pop_r13, jmp_0xfffffffffffe@@ 18@@ 4@@ f
endbr64, mov_eax_dword_ptr_[rdi+0x@@ 3c], ret
endbr64, sub_rsp_8, lea_rax_[rip+0x@@ 17@@ 64@@ 1], mov_r9_qword_ptr_[r@@ di+0x20], mov_r10_qword_ptr_[r@@ ax], mov_eax_dword_ptr_[rdi+0x@@ 3c], test_eax_eax, jne_0x95, test_esi_esi, je_0x5a, mov_r8_qword_ptr_[r@@ di+0x10], xor_eax_eax, test_r8_r8, je_0x4b, mov_rdx_qword_ptr_[r@@ 8], mov_rsi_qword_ptr_[r@@ 8+8], mov_rcx_rdx, and_rcx@@ _0xfffffffffffffff8, cmp_rdx_rsi, cmovb@@ _rsi@@ _rcx, cmp_rsi@@ _r8, jbe_0x@@ 28, mov_rdx_r8, add_rax_qword_ptr_[r@@ dx], mov_rcx_rax, shl_rcx@@ _0xa, add_rax_rcx, mov_rcx_rax, add_rdx_8, sar_rcx@@ _6, xor_rax@@ _rcx, cmp_rdx_rsi, jb_0xffffffffffffff@@ e2, mov_r8_qword_ptr_[r@@ 8+0x10], test_r8_r8, jne_0xffffffffffffffb9, mov_qword_ptr_[rdi+0x@@ 40]_rax, mov_dword_ptr_[rdi+0x@@ 3c]_1, xor_eax_eax, lea_r8_[rip+0xc@@ 50@@ f], mov_ecx_1, mov_edx_0x@@ 98, lea_rsi_[rip+0xc@@ 4@@ dd], mov_edi_7, call_r10, mov_eax_1, add_rsp_8, ret, xor_eax_eax, lea_r8_[rip+0x@@ c4@@ 1f], mov_ecx_0xffffffff, mov_edx_0x8@@ 9, lea_rsi_[rip+0xc@@ 4b@@ 1], mov_edi_3, call_r10, xor_eax_eax, add_rsp_8, ret
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, lea_rbx_[rip+0x@@ 17@@ 55@@ b], mov_r12d_dword_ptr_[r@@ di+0x@@ 3c], mov_r10_qword_ptr_[r@@ bx], mov_r9_qword_ptr_[r@@ di+0x20], test_r12d_r12d, je_0xed, mov_dword_ptr_[rdi+0x@@ 3c]_0, mov_rbp_rdi, mov_r13d_esi, lea_r8_[rip+0xc@@ 49@@ 2], mov_ecx_1, mov_edx_0x@@ b7, lea_rsi_[rip+0xc@@ 44@@ d], mov_edi_7, xor_eax_eax, call_r10, mov_r12d_1, test_r13d_r13d, je_0x9b, mov_rdi_qword_ptr_[rbp+0x10], mov_r8_qword_ptr_[r@@ bp+0x40], xor_eax_eax, test_rdi_rdi, je_0x55, mov_rdx_qword_ptr_[rdi], mov_rsi_qword_ptr_[r@@ di+8], mov_rcx_rdx, and_rcx@@ _0xfffffffffffffff8, cmp_rdx_rsi, cmovb@@ _rsi@@ _rcx, cmp_rsi@@ _rdi, jbe_0x@@ 28, mov_rdx_rdi, add_rax_qword_ptr_[r@@ dx], mov_rcx_rax, shl_rcx@@ _0xa, add_rax_rcx, mov_rcx_rax, add_rdx_8, sar_rcx@@ _6, xor_rax@@ _rcx, cmp_rdx_rsi, jb_0xffffffffffffff@@ e2, mov_rdi_qword_ptr_[rdi+0x10], test_rdi_rdi, jne_0xffffffffffffffb9, mov_r12d_1, cmp_r8_rax, je_0x2a, mov_r9_qword_ptr_[r@@ bp+0x20], lea_r8_[rip+0xc@@ 37@@ 9], mov_ecx_0xffffffff, mov_edx_0x@@ ba, lea_rsi_[rip+0xc@@ 3a@@ b], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ bx], xor_r12d_r12d, add_rsp_8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, xor_eax_eax, lea_r8_[rip+0xc@@ 30@@ f], mov_ecx_0xffffffff, mov_edx_0x@@ ad, lea_rsi_[rip+0xc@@ 37@@ 1], mov_edi_3, call_r10, add_rsp_8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret
push_r15, mov_r15_rdx, push_r14, mov_r14_rsi, lea_rsi_[rip+0xc@@ 5@@ 98], push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1@@ 48, mov_qword_ptr_[rsp]_rdi, mov_dword_ptr_[rsp+0xc]_ecx, lea_r13_[rsp+0x@@ 28], lea_r12_[rsp+0x20], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 38]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x20]_0, call_0xfffffffffffe@@ 15@@ 14, mov_rbp_rax, lea_rbx_[rsp+0x@@ 30], test_rax_rax, je_0x1@@ af, mov_rcx_rbp, mov_edx_0xa, mov_rsi_r13, mov_rdi_r12, call_0xfffffffffffe0@@ c@@ 1a, cmp_rax_-1, je_0x61, mov_rdi_qword_ptr_[rsp+0x20], xor_eax_eax, lea_rdx_[r@@ sp+0x1c], mov_rcx_rbx, lea_rsi_[rip+0xc@@ 30@@ d], call_0xfffffffffffe0@@ d@@ 19, cmp_eax_2, jne_0xffffffffffffffc9, mov_rsi_rbx, mov_rdi_r14, call_0xfffffffffffe@@ 13@@ 09, test_eax_eax, jne_0xffffffffffffffba, mov_ecx_dword_ptr_[rsp+0x1c], test_r15_r15, jne_0x12@@ d, mov_rsi_qword_ptr_[rip+0x2@@ 18@@ a@@ 2c], mov_eax_ecx, mov_edx_1, shr_eax@@ _5, shl_edx_cl, or_dword_ptr_[r@@ si@@ +rax*4@@ +@@ 4]_edx, jmp_0xffffffffffffff94, mov_rdi_rbp, call_0xfffffffffffe@@ 13@@ ad, test_eax_eax, jne_0x8e, mov_rdi_qword_ptr_[rsp+0x20], call_0xfffffffffffe0@@ f0@@ b, mov_eax_1, test_r15_r15, je_0x47, mov_ecx_dword_ptr_[rsp+0xc], mov_eax_2, test_ecx_ecx, je_0x3a, sub_rsp_8, push_r14, lea_r10_[rip+0x@@ 17@@ 3@@ 12], mov_edx_0x@@ e3, mov_r9_qword_ptr_[rsp+0x10], xor_eax_eax, lea_r8_[rip+0xc@@ 27@@ d], mov_ecx_0xffffffff, lea_rsi_[rip+0xc@@ 4a@@ b], mov_edi_3, call_qword_ptr_[r10], pop_rax, pop_rdx, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x1@@ 38], xor_rbx_qword_ptr_fs:[0x28], jne_0x1@@ 8b, add_rsp_0x1@@ 48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rax_[rip+0x@@ 17@@ 2b@@ 1], mov_rbx_qword_ptr_[rax], call_0xfffffffffffe@@ 11@@ be, mov_edi_dword_ptr_[rax], call_0xfffffffffffe0@@ fd@@ 7, mov_r9_qword_ptr_[rsp], mov_r8_rax, cmp_byte_ptr_[r@@ 9]_0, lea_rdx_[rip+0x@@ 50@@ bf], lea_rax_[rip+0x@@ 96@@ 36], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x@@ 98@@ 49], lea_r8_[rip+0x@@ 98@@ 30], push_rcx, mov_edx_0x@@ de, mov_ecx_0xffffffff, push_rax, lea_rsi_[rip+0xc@@ 4@@ 16], mov_edi_3, xor_eax_eax, call_rbx, add_rsp_0x20, jmp_0xffffffffffffff11, mov_dword_ptr_[r15@@ ]_ecx, mov_rdi_rbp, call_0xfffffffffffe@@ 12@@ a6, test_eax_eax, jne_0x@@ 88, mov_rdi_qword_ptr_[rsp+0x20], call_0xfffffffffffe0@@ e0@@ 4, mov_eax_1, jmp_0xffffffffffffff43, lea_rax_[rip+0x@@ 17@@ 21@@ e], mov_rbx_qword_ptr_[rax], call_0xfffffffffffe@@ 112@@ b, mov_edi_dword_ptr_[rax], call_0xfffffffffffe0@@ f@@ 44, mov_r9_qword_ptr_[rsp], mov_r8_rax, cmp_byte_ptr_[r@@ 9]_0, lea_rdx_[rip+0x@@ 50@@ 2c], lea_rax_[rip+0x@@ 9@@ 5a@@ 3], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x@@ 9a@@ 33], lea_r8_[rip+0x@@ 97@@ 9d], push_rcx, mov_edx_0x@@ cb, mov_ecx_0xffffffff, push_rax, lea_rsi_[rip+0xc@@ 38@@ 3], xor_eax_eax, mov_edi_3, call_rbx, add_rsp_0x20, xor_eax_eax, jmp_0xfffffffffffffed5, lea_rax_[rip+0x@@ 17@@ 1b0], mov_rbx_qword_ptr_[rax], call_0xfffffffffffe@@ 10@@ bd, mov_edi_dword_ptr_[rax], call_0xfffffffffffe0@@ ed@@ 6, mov_r9_qword_ptr_[rsp], mov_r8_rax, cmp_byte_ptr_[r@@ 9]_0, lea_rdx_[rip+0x4@@ fb@@ e], lea_rax_[rip+0x@@ 95@@ 35], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rcx_[rip+0x@@ 97@@ 48], lea_r8_[rip+0x@@ 97@@ 2f], push_rcx, mov_edx_0x@@ d5, mov_ecx_0xffffffff, push_rax, lea_rsi_[rip+0xc@@ 3@@ 15], mov_edi_3, xor_eax_eax, call_rbx, add_rsp_0x20, jmp_0xffffffffffffff17, call_0xfffffffffffe@@ 10@@ b@@ b
push_r12, push_rbx, sub_rsp_0x1@@ 98, mov_r12d_dword_ptr_[rip+0x2@@ 18@@ 7c@@ b], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 88]_rax, xor_eax_eax, test_r12d_r12d, je_0x31, mov_r12d_1, mov_rax_qword_ptr_[rsp+0x1@@ 88], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ f1, add_rsp_0x1@@ 98, pop_rbx, mov_eax_r12d, pop_r12, ret, mov_rdi_rsp, call_0xfffffffffffe0@@ a@@ 45, test_eax_eax, jne_0x5e, xor_eax_eax, lea_rdi_[rsp+0x@@ 82], lea_r8_[rip+0x2@@ 18@@ 76@@ b], lea_rcx_[rip+0x2@@ 18@@ 7@@ 68], lea_rdx_[rip+0x2@@ 18@@ 76@@ 5], lea_rsi_[rip+0x7@@ 47@@ 1], call_0xfffffffffffe0@@ a@@ 36, test_eax_eax, jle_0x@@ 6f, cmp_dword_ptr_[rip+0x2@@ 18@@ 7@@ 4e@@ ]_2, ja@@ _7, cmp_eax_2, jle_0x@@ 61, mov_dword_ptr_[rip+0x2@@ 18@@ 73@@ 1]_1, mov_r12d_1, jmp_0xffffffffffffff7e, lea_rax_[rip+0x@@ 170@@ 79], mov_rbx_qword_ptr_[rax], call_0xfffffffffffe0@@ f@@ 86, mov_edi_dword_ptr_[rax], call_0xfffffffffffe0@@ d@@ 9f, mov_r9_rax, lea_r8_[rip+0xb@@ ff@@ 8], mov_ecx_0xffffffff, mov_edx_0x@@ 9d, lea_rsi_[rip+0xc@@ 20@@ 7], mov_edi_3, xor_eax_eax, call_rbx, jmp_0xffffffffffffff35, lea_r9_[rip+0x@@ 170@@ 39], lea_r8_[rip+0xc@@ 2@@ 12], mov_ecx_0xffffffff, mov_edx_0x@@ a6, lea_rsi_[rip+0xc@@ 1d@@ 9], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], xor_r12d_r12d, jmp_0xffffffffffffff03, call_0xfffffffffffe0@@ f7@@ f
cmp_qword_ptr_[rip+0x2@@ 18@@ 6b@@ 8]_0, je_8, mov_eax_1, ret, mov_edx_dword_ptr_[rip+0x2@@ 18@@ 6a@@ 2], test_edx_edx, jne_0xfffffffffffffff2, push_r12, mov_r12d_edi, sub_rsp_0x10, call_0xfffffffffffffe@@ 9d, test_eax_eax, je_0x5e, mov_eax_dword_ptr_[rip+0x218@@ 67@@ 6], mov_edx_dword_ptr_[rip+0x2@@ 18@@ 66@@ c], shl_eax_0x10, shl_edx_8, add_eax_edx, add_eax@@ _dword_ptr_[rip+0x2@@ 18@@ 65@@ a], cmp_eax_0x2@@ 0@@ 5@@ ff, jbe_0x@@ 45, mov_dword_ptr_[rip+0x@@ 17@@ 2@@ 11]_0, mov_ecx_r12d, lea_rdx_[rip+0x2@@ 18@@ 65@@ 7], lea_rsi_[rip+0xb@@ f@@ 41], lea_rdi_[rip+0x@@ bf@@ 48], call_0xfffffffffffffb@@ 61, test_eax_eax, setne_al, movzx_eax_al, add_rsp_0x10, pop_r12, ret, xor_eax_eax, jmp_0xfffffffffffffff@@ 2, mov_eax_dword_ptr_[rip+0x@@ 17@@ 1d@@ 2], test_eax_eax, je_0xffffffffffffff@@ bf, mov_esi_0x1000, xor_edi_edi, call_0x4@@ 00@@ f, mov_qword_ptr_[rip+0x218@@ 6@@ 13@@ ]_rax, test_rax_rax, je_0xffffffffffffffd8, xor_edx_edx, mov_ecx_r12d, lea_rsi_[rip+0xb@@ ee@@ b], lea_rdi_[rip+0x@@ be@@ f2], call_0xfffffffffffffb0@@ b, test_eax@@ _0xfffffffd, je_0x11, add_rsp_0x10, mov_eax_1, pop_r12, ret, mov_rdi_qword_ptr_[rip+0x2@@ 18@@ 5d@@ 9], mov_dword_ptr_[rsp+0xc]_eax, call_0x4@@ 005, mov_eax_dword_ptr_[rsp+0xc], mov_qword_ptr_[rip+0x218@@ 5c@@ 1]_0, cmp_eax_2, sete_al, movzx_eax_al, jmp_0xffffffffffffff7@@ 4
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0xb8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x10@@ a8]_rax, xor_eax_eax, cmp_dword_ptr_[rip+0x@@ 17@@ 11d@@ ]_-1, mov_dword_ptr_[rsp]@@ _0xa, mov_dword_ptr_[rsp+4]@@ _0x@@ ec, je_0x3a, mov_r12d_1, mov_rax_qword_ptr_[r@@ sp+0x10@@ a8], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ 66@@ a, add_rsp_0x10@@ b8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xfffffffffffffd@@ 30, test_eax_eax, jne_9, xor_r12d_r12d, jmp_0xffffffffffffffc2, call_0xffffffffffff7@@ 1b0, lea_r12_[rsp+0x@@ a0], mov_rcx_rax, lea_r8_[rip+0xb@@ e0@@ e], xor_eax_eax, lea_rdx_[rip+0x@@ 97@@ 21], mov_esi_0x1000, mov_rdi_r12, call_0xffffffffffffdf@@ 18, test_eax_eax, js_0x3@@ d9, mov_eax_dword_ptr_[rip+0x218@@ 4c@@ d], mov_edx_dword_ptr_[rip+0x2@@ 18@@ 4c@@ 3], shl_eax_0x10, shl_edx_8, add_eax_edx, add_eax@@ _dword_ptr_[rip+0x2@@ 18@@ 4b@@ 1], cmp_eax_0x2@@ 0@@ 6@@ 23, ja_0x@@ d1, mov_rdx_rsp, mov_ecx_1, lea_rsi_[rip+0xb@@ dc@@ a], lea_rdi_[rip+0xb@@ da@@ 7], call_0xfffffffffffff9c@@ 0, test_eax_eax, jne_0x@@ 89, mov_dword_ptr_[rsp]_0, lea_rbx_[rip+0x@@ 16@@ dd@@ 5], lea_r8_[rip+0x9@@ 1b@@ 3], xor_ecx_ecx, mov_edx_0x1@@ b7, lea_rsi_[rip+0xb@@ f@@ 78], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], xor_eax_eax, lea_r8_[rip+0x@@ c0@@ 2e], mov_ecx_0xffffffff, mov_edx_0x1@@ cf, lea_rsi_[rip+0xb@@ f5@@ 5], mov_edi_3, call_qword_ptr_[r@@ bx], call_0xfffffffffffe0@@ 8e@@ 6, test_eax_eax, jne_0xffffffffffffff@@ 28, lea_r8_[rip+0x@@ c0@@ 42], mov_ecx_0xffffffff, mov_edx_0x1@@ d1, lea_rsi_[rip+0xb@@ f2@@ 9], mov_edi_3, call_qword_ptr_[r@@ bx], jmp_0xffffffffffffff03, lea_rdx_[rsp+4], mov_ecx_1, lea_rsi_[rip+0x@@ bc@@ f8], lea_rdi_[rip+0x@@ bd@@ 15], call_0xfffffffffffff9@@ 18, test_eax_eax, je_0xffffffffffffff@@ 5e, lea_rdx_[rsp+0x10], mov_rsi_r12, mov_edi_1, mov_ebp_dword_ptr_[r@@ sp+4], mov_r13d_dword_ptr_[r@@ sp], call_0xfffffffffffe0@@ db@@ 6, test_eax_eax, js_0x2@@ f7, mov_eax_dword_ptr_[rsp+0x28], mov_edx_eax, and_edx@@ _0xf000, cmp_edx@@ _0x2000, je_0x1@@ 77, lea_rbx_[rip+0x@@ 16@@ cf@@ a], xor_ecx_ecx, mov_edi_5, xor_eax_eax, mov_r9_r12, lea_r8_[rip+0xb@@ cb@@ f], mov_edx_0x1@@ 06, lea_rsi_[rip+0x@@ be@@ 93], call_qword_ptr_[r@@ bx], mov_rdi_r12, call_0xfffffffffffe0@@ 746, test_eax_eax, jne_0x3@@ 27, call_0xffffffffffff70@@ 19, mov_rdi_rax, mov_esi_0x4000, call_0xffffffffffff6@@ 6c@@ c, mov_edi@@ _0x12, call_0xfffffffffffe0@@ ea@@ 2, mov_r15d_eax, call_0xffffffffffff6@@ ff@@ a, mov_rdi_rax, call_0xffffffffffffd@@ 15@@ 2, mov_edi_r15d, mov_r14d_eax, call_0xfffffffffffe0@@ e@@ 87, xor_esi_esi, xor_edi_edi, call_0xffffffffffff66@@ 9e, test_r14d_r14d, je_0x3@@ 36, push_rbp, mov_r9_r12, lea_r8_[rip+0x@@ bc@@ 62], push_r13, xor_ecx_ecx, mov_edx_0x1@@ 33, lea_rsi_[rip+0x@@ be@@ 1d], mov_edi_5, xor_eax_eax, call_qword_ptr_[r@@ bx], mov_esi_0x2000, mov_rdi_r12, call_0xffffffffffff66@@ 64, mov_edi@@ _0x7f, call_0xfffffffffffe0@@ e@@ 3a, mov_r14d_eax, shl_r13@@ _8, movzx_eax@@ _bpl, shl_rbp@@ _0xc, or@@ _r13_rax, and@@ _rbp@@ _0xffffffff@@ fff@@ 00000, lea_rcx_[rsp+0x18], mov_edx_0x2@@ 180, or@@ _rbp@@ _r13, mov_rsi_r12, xor_edi_edi, mov_qword_ptr_[rsp+0x1@@ 8]_rbp, call_0xfffffffffffe0@@ a@@ 75, pop_rdx, pop_rcx, test_eax_eax, js_0x3@@ 6c, mov_edi_r14d, call_0xfffffffffffe0@@ d@@ f3, xor_esi_esi, xor_edi_edi, call_0xffffffffffff6@@ 60@@ a, mov_esi_2, mov_rdi_r12, xor_eax_eax, call_0xfffffffffffe0@@ 92@@ b, mov_dword_ptr_[rip+0x@@ 16@@ e@@ 44]_eax, test_eax_eax, js_0x2@@ b1, mov_edi_1, call_0xfffffffffffffb@@ d3, mov_r12d_eax, test_eax_eax, jne_0xfffffffffffffd@@ 21, lea_r9_[rip+0x@@ 16@@ bb@@ c], lea_r8_[rip+0x@@ bd@@ fd], mov_ecx_0xffffffff, mov_edx_0x1@@ c8, lea_rsi_[rip+0x@@ bd@@ 5c], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], jmp_0xfffffffffffffc@@ f8, test_r13d_r13d, je_0xffffffffffffff@@ 98, mov_ecx_r13d, shl_rcx@@ _8, movzx_edx@@ _bpl, or@@ _rdx_rcx, mov_ecx_ebp, shl_rcx@@ _0xc, and_rcx@@ _0xffffffff@@ fff@@ 00000, or@@ _rdx_rcx, cmp_qword_ptr_[rsp+0x@@ 38]_rdx, je_0xffffffffffffff@@ 73, push_rbp, mov_edx_eax, shr_edx@@ _0xc, push_r13, movzx_ecx_al, and_edx@@ _0xfff@@ 00, or_edx_ecx, push_rdx, shr_eax@@ _8, and_eax@@ _0xfff, push_rax, lea_rbx_[rip+0x@@ 16@@ b@@ 3e], xor_ecx_ecx, mov_edi_5, xor_eax_eax, mov_r9_r12, lea_r8_[rip+0x@@ bd@@ 3b], mov_edx_0x1@@ 0e, lea_rsi_[rip+0xb@@ cd@@ 7], call_qword_ptr_[r@@ bx], add_rsp_0x20, mov_rdi_r12, call_0xfffffffffffe0@@ 58@@ 6, test_eax_eax, je_0xfffffffffffffe@@ 46, call_0xfffffffffffe0@@ a@@ 19, mov_edi_dword_ptr_[rax], mov_rbp_qword_ptr_[rbx], call_0xfffffffffffe0@@ 8@@ 2f, mov_r8_rax, cmp_byte_ptr_[rsp+0x@@ a0]_0, lea_rdx_[rip+0x@@ 49@@ 17], lea_rax_[rip+0x@@ 8e@@ 8e], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rsi_[rip+0xb@@ 2d@@ 2], mov_r9_r12, push_rsi, lea_r8_[rip+0x@@ 90@@ 84], mov_ecx_0xffffffff, push_rax, mov_edx_0x1@@ 14, lea_rsi_[rip+0x@@ bc@@ 61], mov_edi_3, xor_eax_eax, call_rbp, add_rsp_0x20, lea_r8_[rip+0x@@ 8e@@ 7a], xor_ecx_ecx, mov_edx_0x1@@ 26, lea_rsi_[rip+0x@@ bc@@ 3f], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], lea_r8_[rip+0x@@ 8e@@ 5c], xor_ecx_ecx, mov_edx_0x1@@ bf, lea_rsi_[rip+0x@@ bc@@ 21], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], jmp_0xfffffffffffffc@@ a9, lea_rbx_[rip+0x@@ 16@@ a@@ 51], lea_r8_[rip+0x@@ 8e@@ 2f], xor_ecx_ecx, mov_edx_0x1@@ af, lea_rsi_[rip+0x@@ bb@@ f4], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], jmp_0xfffffffffffffc@@ 7c, call_0xfffffffffffe0@@ 938, mov_edi_dword_ptr_[rax], lea_rbx_[rip+0x@@ 16@@ a@@ 1a], cmp_edi_2, je_0xfffffffffffffd@@ 4e, mov_r14_qword_ptr_[r@@ bx], call_0xfffffffffffe0@@ 7@@ 3e, mov_r8_rax, cmp_byte_ptr_[rsp+0x@@ a0]_0, lea_rdx_[rip+0x@@ 48@@ 26], lea_rax_[rip+0x@@ 8d@@ 9d], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rsi_[rip+0x9@@ 2b@@ 1], mov_r9_r12, push_rsi, lea_r8_[rip+0x@@ 8f@@ 93], mov_ecx_0xffffffff, push_rax, mov_edx_0x1@@ 01, lea_rsi_[rip+0x@@ bb@@ 7a], mov_edi_3, xor_eax_eax, call_r14, add_rsp_0x20, jmp_0xfffffffffffffc@@ eb, call_0xfffffffffffe0@@ 8b@@ 8, mov_edi_dword_ptr_[rax], mov_rbp_qword_ptr_[rbx], call_0xfffffffffffe0@@ 6c@@ e, mov_r8_rax, cmp_byte_ptr_[rsp+0x@@ a0]_0, lea_rdx_[rip+0x@@ 47@@ b6], lea_rax_[rip+0x@@ 8d@@ 2d], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rsi_[rip+0xb@@ 17@@ 1], mov_r9_r12, push_rsi, lea_r8_[rip+0x@@ 8f@@ 23], mov_ecx_0xffffffff, push_rax, mov_edx_0x1@@ 09, jmp_0xfffffffffffffea9, lea_r8_[rip+0x@@ 8d@@ 2e], xor_ecx_ecx, mov_edx_0x1@@ 31, lea_rsi_[rip+0x@@ ba@@ f3], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], jmp_0xfffffffffffffe@@ b4, call_0xfffffffffffe0@@ 8@@ 3d, lea_rbx_[rip+0x@@ 16@@ 92@@ 1], mov_edi_dword_ptr_[rax], mov_rbp_qword_ptr_[rbx], call_0xfffffffffffe0@@ 64@@ c, mov_r8_rax, cmp_byte_ptr_[rsp+0x@@ a0]_0, lea_rdx_[rip+0x@@ 47@@ 34], lea_rax_[rip+0x@@ 8c@@ ab], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rsi_[rip+0x9@@ 13c], mov_r9_r12, push_rsi, lea_r8_[rip+0x8@@ ea@@ 1], mov_ecx_0xffffffff, push_rax, mov_edx_0x1@@ 99, xor_eax_eax, lea_rsi_[rip+0x@@ ba@@ 86], mov_edi_3, call_rbp, add_rsp_0x20, lea_r8_[rip+0x@@ 8c@@ a1], xor_ecx_ecx, mov_edx_0x1@@ c5, lea_rsi_[rip+0x@@ ba@@ 66], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], jmp_0xfffffffffffffa@@ ee, call_0xfffffffffffe0@@ 7b@@ 0, mov_edi_dword_ptr_[rax], mov_rbp_qword_ptr_[rbx], call_0xfffffffffffe0@@ 5c@@ 6, mov_r8_rax, cmp_byte_ptr_[rsp+0x@@ a0]_0, lea_rdx_[rip+0x4@@ 6a@@ e], lea_rax_[rip+0x@@ 8c@@ 25], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rsi_[rip+0xb@@ 8@@ 70], mov_r9_r12, push_rsi, lea_r8_[rip+0x@@ 8e@@ 1b], mov_ecx_0xffffffff, push_rax, mov_edx_0x1@@ 39, lea_rsi_[rip+0xb@@ a0@@ 2], xor_eax_eax, mov_edi_3, call_rbp, mov_edi_r14d, add_rsp_0x20, call_0xfffffffffffe0@@ a@@ 2a, xor_esi_esi, xor_edi_edi, call_0xffffffffffff6@@ 24@@ 1, jmp_0xfffffffffffffd@@ ae, call_0xfffffffffffe0@@ 79@@ 7
sub_rsp_8, mov_edx_dword_ptr_[r@@ di+0xc], xor_esi_esi, call_0xfffffffffffe@@ 00@@ 87, mov_rdi_rax, add_rsp_8, jmp_0xfffffffffff@@ e0@@ 3d@@ b
push_rbp, mov_rbp_rdi, call_0xfffffffffffe0@@ 3d@@ c, mov_rdx_rax, xor_esi_esi, mov_rdi_rbp, call_0xfffffffffffe@@ 00@@ 5f, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffff@@ e0@@ 3b@@ 6
push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_8, mov_rbx_qword_ptr_[rdi], test_rbx_rbx, je_0x35, mov_rbp_rbx, mov_rdi_qword_ptr_[rbp+0x18], mov_rbx_qword_ptr_[r@@ bx+0x20], test_rdi_rdi, je_7, call_0xffffffffffffff@@ b0, mov_rdi_qword_ptr_[rbp+0x10], call_0xfffffffffffe0@@ 37@@ 7, mov_rdi_rbp, call_0xfffffffffffe0@@ 36@@ f, test_rbx_rbx, jne_0xffffffffffffffd7, mov_qword_ptr_[r13]_0, mov_qword_ptr_[r12]_0, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, test_r8d_r8d, jne_0x1f, mov_r15d_1, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r15d, pop_r15, ret, mov_r13_rdx, mov_edx_r8d, mov_rbp_rdi, mov_r12_rsi, mov_r14_rcx, mov_ebx_r8d, call_0xffffffffffff4a@@ 9e, mov_r15d_eax, test_eax_eax, jne_0x34, lea_r9_[rip+0x@@ 16@@ 7@@ 1b], lea_r8_[rip+0x@@ 8a@@ f9], xor_ecx_ecx, mov_edx_0x6@@ c0, lea_rsi_[rip+0xb@@ 8b@@ e], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], jmp_0xffffffffffffffa5, mov_rdi_rbp, call_0xfffffffffffe0@@ 2c@@ d, mov_rdx_rax, mov_r9d_ebx, mov_r8_r14, mov_rcx_r13, mov_rsi_r12, mov_rdi_rbp, call_0xffffffffffff@@ 55@@ 16, test_eax_eax, js@@ _0x5f, je_0xffffffffffffff@@ 70, mov_rdx_r13, mov_ecx_dword_ptr_[rdx], add_rdx_4, lea_eax_[rcx-0x1010101], not_ecx, and_eax_ecx, and_eax_0x80808080, je_0xffffffffffffffeb, mov_ecx_eax, shr_ecx_0x10, test_eax_0x8080, cmove_eax_ecx, lea_rcx_[rdx+2], cmove_rdx_rcx, mov_ebx_eax, add@@ _bl@@ _al, sbb_rdx_3, sub_rdx@@ _r13, inc_rdx, mov_rsi_r13, mov_rdi_rbp, call_0xfffffffffffe0@@ 88@@ 4, jmp_0xffffffffffffff22, sub_rsp_8, push_rbp, lea_r10_[rip+0x@@ 16@@ 66@@ 4], mov_edx_0x6@@ c3, xor_eax_eax, mov_r9_r12, lea_r8_[rip+0xb@@ 94@@ b], mov_ecx_4, lea_rsi_[rip+0xb@@ 7@@ ff], mov_edi_7, call_qword_ptr_[r10], pop_rax, pop_rdx, xor_r15d_r15d, jmp_0xfffffffffffffee@@ 3
test_@@ di@@ _di, jne_0xd, mov_eax_1, ret, movzx_edi@@ _di, or_edi@@ _0x@@ d@@ 4d@@ 0000, jmp_0xffffffffffff@@ 9@@ 4a@@ 7
endbr64, push_r13, mov_r13_rsi, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rdx, sub_rsp_8, call_0xfffffffffffff4b@@ 9, test_eax_eax, je_0x32, mov_eax_dword_ptr_[rip+0x2@@ 17@@ c9@@ 2], mov_r12d_1, mov_dword_ptr_[rbp]_eax, mov_eax_dword_ptr_[rip+0x2@@ 17@@ c7@@ f], mov_dword_ptr_[r13]_eax, mov_eax_dword_ptr_[rip+0x2@@ 17@@ c7@@ 1], mov_dword_ptr_[rbx]_eax, add_rsp_8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, lea_r9_[rip+0x@@ 16@@ 5b@@ 9], mov_r12d_eax, lea_r8_[rip+0x8@@ 99@@ 4], xor_eax_eax, xor_ecx_ecx, mov_edx_0x@@ b1, lea_rsi_[rip+0xb@@ 75@@ 7], mov_edi_7, call_qword_ptr_[r9], add_rsp_8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret
endbr64, push_rbx, mov_ebx_edi, xor_edi_edi, call_0xfffffffffffff57@@ 7, test_eax_eax, je_0x32, mov_eax_dword_ptr_[rip+0x@@ 16@@ 7d0], test_eax_eax, je_0x2e, mov_rsi_qword_ptr_[rip+0x2@@ 17@@ c@@ 1d], xor_eax_eax, test_rsi_rsi, je_0x1a, mov_eax_ebx, mov_edx_1, mov_ecx_ebx, shr_eax@@ _5, shl_edx_cl, test_dword_ptr_[r@@ si@@ +rax*4@@ +@@ 4]_edx, setne_al, movzx_eax_al, pop_rbx, ret, mov_edx_dword_ptr_[rip+0x2@@ 17@@ b@@ ea], xor_eax_eax, test_edx_edx, je_0xfffffffffffffff@@ 0, xor_eax_eax, cmp_edx@@ _ebx, sete_al, pop_rbx, ret
endbr64, push_rbp, lea_rsi_[r@@ di+0x20], mov_rbp_rdi, add_rdi@@ _0x18, call_0xfffffffffffffd@@ 30, mov_rdi_qword_ptr_[rbp+0x@@ 50], test_rdi_rdi, je_7, call_0xfffffffffffffc@@ e2, mov_rdi_qword_ptr_[rbp+8], call_0xfffffffffffe@@ 00@@ c9, mov_rdi_qword_ptr_[rbp+0x10], call_0xfffffffffffe@@ 00@@ c0, mov_rdi_qword_ptr_[rbp+0x@@ 58], call_0xfffffffffffe@@ 00@@ b7, mov_rdi_qword_ptr_[rbp+0x@@ 60], call_0xfffffffffffe@@ 00@@ ae, mov_rdi_qword_ptr_[rbp+0x@@ 68], call_0xfffffffffffe@@ 00@@ a5, mov_rdi_qword_ptr_[rbp+0x@@ c0], call_0xfffffffffffe@@ 00@@ 99, mov_rdi_qword_ptr_[rbp+0x@@ c8], call_0xfffffffffffe@@ 00@@ 8d, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffffe@@ 00@@ 8@@ 4
endbr64, push_rbp, push_rbx, mov_rbx_rsi, sub_rsp_8, mov_rax_qword_ptr_[rdi+0x@@ 50], test_rax_rax, je_0x9c, mov_ecx_dword_ptr_[rax+8], mov_rbp_rdx, mov_edx_dword_ptr_[rax+4], mov_dword_ptr_[rip+0x2@@ 17@@ b@@ 4b@@ ]_ecx, mov_dword_ptr_[rip+0x2@@ 17@@ b@@ 49@@ ]_edx, test_rsi_rsi, je_0x2d, push_rcx, lea_r8_[rip+0x@@ 68@@ 1f], mov_rcx_-1, push_rdx, mov_rsi_rbp, mov_edx_1, mov_r9d_dword_ptr_[r@@ ax], mov_rdi_rbx, xor_eax_eax, call_0xfffffffffffe0@@ 5@@ 3c, pop_rdx, pop_rcx, test_eax_eax, js_0x1@@ 3, add_rsp_8, pop_rbx, mov_eax_1, pop_rbp, ret, lea_r9_[rip+0x@@ 16@@ 42@@ 9], xor_eax_eax, lea_r8_[rip+0x@@ b7@@ 58], mov_ecx_0xffffffff, mov_edx_0x2@@ 19, lea_rsi_[rip+0xb@@ 5c@@ 7], mov_edi_3, call_qword_ptr_[r9], test_rbp_rbp, je_5, mov_byte_ptr_[rbx]_0, xor_eax_eax, add_rsp_8, pop_rbx, pop_rbp, ret, test_rsi_rsi, jne_0xffffffffffffffeb, xor_eax_eax, jmp_0xffffffffffffffe@@ c
endbr64, test_rsi_rsi, je_0x29, mov_rax_qword_ptr_[rsi], mov_qword_ptr_[rdx]_rax, mov_rax_qword_ptr_[rsi+8], mov_qword_ptr_[rcx]_rax, mov_rax_qword_ptr_[rsi+0x10], mov_qword_ptr_[r@@ 8]_rax, mov_rax_qword_ptr_[r@@ si+0x18], mov_qword_ptr_[r@@ 9]_rax, mov_rax_qword_ptr_[r@@ si+0x20], ret, mov_rsi_qword_ptr_[r@@ di+0x18], test_rsi_rsi, jne_0xffffffffffffffd2, mov_qword_ptr_[rdx]_0, xor_eax_eax, mov_qword_ptr_[rcx]_0, mov_qword_ptr_[r@@ 8]_0, mov_qword_ptr_[r@@ 9]_0, ret
endbr64, xor_eax_eax, cmp_esi@@ _7, jg@@ _7, ret, push_rbx, mov_r9d_edx, mov_ebx_esi, sub_rsp_8, push_rcx, mov_edx_1, mov_rcx_-1, movsxd_rsi_esi, lea_r8_[rip+0x@@ 8b@@ f8], call_0xfffffffffffe0@@ 4@@ 3f, cmp_ebx_eax, pop_rdx, pop_rcx, setg_al, movzx_eax_al, pop_rbx, ret
endbr64, xor_eax_eax, cmp_qword_ptr_[rdi+0x@@ 50]_0, je_0xaa, pxor_xmm0_xmm0, movups_xmmword_ptr_[r@@ si@@ ]_xmm0, movups_xmmword_ptr_[r@@ si+0x1@@ 0]_xmm0, movups_xmmword_ptr_[r@@ si+0x@@ 20]_xmm0, mov_rcx_qword_ptr_[r@@ di+0x@@ 50], mov_edx_dword_ptr_[r@@ cx+0x1@@ c], mov_eax_edx, shr_eax@@ _2, and_eax_1, mov_dword_ptr_[rsi]_eax, je_0x7f, mov_edi_edx, shr_edi@@ _1, and_edi_1, mov_dword_ptr_[rsi+@@ 4]_edi, mov_edi_edx, and_edi_1, mov_dword_ptr_[rsi+0x@@ 20]@@ _edi, mov_edi_edx, shr_edi@@ _5, and_edi_1, mov_dword_ptr_[rsi+@@ 8]_edi, mov_edi_edx, shr_edi@@ _6, and_edi_1, mov_dword_ptr_[rsi+0x@@ c]_edi, mov_edi_edx, shr_edx@@ _0x12, and_edx_1, mov_dword_ptr_[rsi+0x@@ 2@@ c]_edx, mov_edx_dword_ptr_[r@@ cx+0x1@@ 4], and_edi@@ _0x20000, mov_dword_ptr_[rsi+0x@@ 2@@ 4]_edx, mov_edx_dword_ptr_[r@@ cx+0x18], mov_dword_ptr_[rsi+0x@@ 28]@@ _edi, mov_dword_ptr_[rsi+0x1@@ 0]_edx, mov_edx_dword_ptr_[r@@ cx+0x20], mov_rcx_qword_ptr_[rcx+0x@@ 28], mov_dword_ptr_[rsi+0x1@@ 4]_edx, mov_rdx_rcx, shr_rdx@@ _8, and_edx@@ _0xfff, mov_dword_ptr_[rsi+0x1@@ 8]_edx, mov_rdx_rcx, shr_rdx@@ _0xc, and_edx@@ _0xfff@@ 00, movzx_ecx_cl, or_edx_ecx, mov_dword_ptr_[rsi+0x1@@ c]_edx, ret, mov_eax_1, ret
endbr64, mov_rax_qword_ptr_[rdi+0x@@ 50], mov_dword_ptr_[rsi@@ ]_0, test_rax_rax, je_0x4f, test_byte_ptr_[rax+0x1@@ c@@ ]_4, je_0x49, cmp_byte_ptr_[rax+0x@@ 30]_0, mov_rcx_rsi, lea_r8_[r@@ ax+0x30], jne_0xb, mov_r8_qword_ptr_[r@@ di+0x10], test_r8_r8, je_0x3b, mov_rsi_qword_ptr_[rax+0x28], mov_rdi_r8, mov_rdx_rsi, shr_rdx@@ _0xc, movzx_eax@@ _sil, and_edx@@ _0xfff@@ 00, shr_rsi@@ _8, or_edx_eax, and_esi@@ _0xfff, jmp_0xffffffffffff@@ 60@@ 2d, xor_eax_eax, ret, mov_r8_qword_ptr_[r@@ di+8], test_r8_r8, jne_0xffffffffffffffc0, sub_rsp_8, lea_r9_[rip+0x@@ 16@@ 1f@@ 4], xor_eax_eax, lea_r8_[rip+0xb@@ 54@@ 3], mov_ecx_0xffffffff, mov_edx_0x2@@ e2, lea_rsi_[rip+0xb@@ 39@@ 2], mov_edi_3, call_qword_ptr_[r9], xor_eax_eax, add_rsp_8, ret
endbr64, mov_rax_qword_ptr_[rdi+0x@@ 50], mov_edx_dword_ptr_[rax+0x10], add_rax_rdx, ret
endbr64, mov_rax_qword_ptr_[rdi+0x@@ 50], mov_edx_dword_ptr_[rax+0x10], add_rax_rdx, ret
endbr64, mov_rax_qword_ptr_[rdi+0x@@ 50], mov_edx_dword_ptr_[rax+0x10], add_rax_rdx, ret
endbr64, push_r12, mov_rax_qword_ptr_[rdi+0x@@ 50], test_byte_ptr_[rax+0x1@@ e]_1, je_0x32, mov_ecx_dword_ptr_[r@@ ax+0x10], mov_edx_dword_ptr_[rax+0xc], lea_r12_[rax@@ +rcx], add_rax_rdx, mov_r9_rcx, cmp_r12_rax, ja@@ _0x2d, sub_rdx_rcx, xor_esi_esi, mov_rdi_r12, call_0xfffffffffffd@@ fa@@ 63, test_rax_rax, je_0x5b, mov_rax_r12, pop_r12, ret, xor_r12d_r12d, mov_rax_r12, pop_r12, ret, sub_rsp_8, push_rdx, lea_r10_[rip+0x@@ 16@@ 134], mov_edx_0x3@@ 07, xor_eax_eax, lea_r8_[rip+0xb@@ 4b@@ 6], mov_ecx_0xffffffff, lea_rsi_[rip+0xb@@ 2d@@ 2], mov_edi_3, call_qword_ptr_[r10], pop_rax, xor_r12d_r12d, pop_rdx, mov_rax_r12, pop_r12, ret, lea_r9_[rip+0x@@ 160@@ f9], lea_r8_[rip+0xb@@ 4c@@ a], mov_ecx_0xffffffff, mov_edx_0x3@@ 0c, lea_rsi_[rip+0xb@@ 29@@ 9], mov_edi_3, call_qword_ptr_[r9], xor_r12d_r12d, jmp_0xffffffffffffff7@@ d
endbr64, mov_dword_ptr_[rdi+0x@@ 28]_1, mov_eax_1, ret
endbr64, mov_dword_ptr_[rdi+0x@@ 4@@ 8]_esi, mov_dword_ptr_[rdi+0x@@ 4@@ c]_edx, mov_eax_1, ret
endbr64, mov_dword_ptr_[rdi+0x@@ 88]_1, mov_eax_1, ret
endbr64, cmp_esi_1, jbe_0x@@ 39, sub_rsp_8, lea_r9_[rip+0x@@ 160@@ 6c], xor_eax_eax, lea_r8_[rip+0x@@ b0@@ 72], mov_ecx_0xffffffff, mov_edx_0x3@@ 30, lea_rsi_[rip+0xb@@ 20@@ a], mov_edi_3, call_qword_ptr_[r9], xor_eax_eax, add_rsp_8, ret, mov_dword_ptr_[rdi+0x@@ 8@@ c]_esi, mov_eax_1, ret
endbr64, push_r13, push_r12, mov_r12_rdi, push_rbp, push_rbx, mov_rbx_rsi, sub_rsp_0x98, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, call_0xffffffffffff4@@ 24@@ 6, mov_rdi_rbx, mov_ebp_eax, call_0xfffffffffffd@@ fb@@ dc, cmp_rax@@ _0x80, jbe_0x@@ 61, mov_r9_rbx, lea_r8_[rip+0xb@@ 00@@ f], mov_ecx_0xffffffff, mov_edx_0x3@@ 3c, lea_r10_[rip+0x@@ 15@@ fd@@ 4], lea_rsi_[rip+0xb@@ 18@@ 5], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], xor_r13d_r13d, mov_rax_qword_ptr_[rsp+0x88], xor_rax_qword_ptr_fs:[0x28], jne_0x13@@ 8, add_rsp_0x98, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, ret, mov_edx_ebp, lea_rsi_[rip+0xa@@ fc@@ 4], mov_rdi_rbx, call_0xffffffffffff4@@ 2f@@ 4, mov_r13d_eax, test_eax_eax, je_0xba, test_ebp_ebp, je_0x7e, mov_rdi_rbx, call_0xfffffffffffd@@ fb@@ 4d, mov_r13_rsp, mov_rdx_rax, mov_r9d_ebp, mov_r8d@@ _0x8@@ 1, mov_rcx_r13, lea_rsi_[rip+0xa@@ f@@ 8c], mov_rdi_rbx, call_0xffffffffffff4@@ 33@@ c, test_eax_eax, js_0x@@ b5, je_0x4b, lea_rax_[rip+0x15@@ f@@ 36], cmp_ebp_1, mov_r10_qword_ptr_[r@@ ax], push_r13, lea_rax_[rip+0x@@ 86@@ 51], lea_r9_[rip+0x@@ 86@@ 45], push_rbx, cmovne@@ _r9_rax, mov_edx_0x3@@ 4b, xor_eax_eax, lea_r8_[rip+0xb@@ 35@@ d], mov_ecx_4, lea_rsi_[rip+0x@@ b0@@ b9], mov_edi_7, call_r10, pop_rax, pop_rdx, mov_rbx_r13, mov_rdi_qword_ptr_[r12+0x@@ 58], call_0xfffffffffffd@@ fa@@ bf, mov_rdi_rbx, call_0xfffffffffffd@@ fe@@ 07, mov_qword_ptr_[r12+0x@@ 58]_rax, test_rax_rax, je_0x68, mov_dword_ptr_[r12+0x@@ 9c@@ ]_1, mov_r13d_1, jmp_0xffffffffffffff06, lea_r9_[rip+0x@@ 15@@ eb@@ 9], lea_r8_[rip+0x8@@ 29@@ 7], xor_ecx_ecx, mov_edx_0x3@@ 41, lea_rsi_[rip+0x@@ b0@@ 5c], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], jmp_0xfffffffffffffe@@ da, mov_r9_rbx, lea_r8_[rip+0xb@@ 2a@@ e], mov_ecx_0xffffffff, mov_edx_0x3@@ 46, jmp_0xfffffffffffffea@@ 1, call_0xfffffffffffd@@ fd@@ e7, lea_r10_[rip+0x@@ 15@@ e6@@ b], mov_r9_rbx, lea_r8_[rip+0xb@@ 2d@@ 9], or_ecx_0xffffffff, mov_edx_0x3@@ 53, lea_rsi_[rip+0xb@@ 00@@ a], mov_edi_3, call_qword_ptr_[r10], xor_r13d_r13d, jmp_0xfffffffffffffe@@ 8@@ 7
endbr64, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rdi_qword_ptr_[rdi+0x@@ 60], call_0xfffffffffffdf@@ 9f@@ c, mov_rdi_rbp, call_0xfffffffffffd@@ fd@@ 44, mov_qword_ptr_[rbx+0x@@ 60]_rax, test_rax_rax, je_0xe, mov_eax_1, add_rsp_8, pop_rbx, pop_rbp, ret, lea_r9_[rip+0x@@ 15@@ e0@@ 3], lea_r8_[rip+0xb@@ 29@@ c], or_ecx_0xffffffff, mov_edx_0x3@@ 5f, lea_rsi_[rip+0xa@@ fa@@ 5], mov_edi_3, call_qword_ptr_[r9], xor_eax_eax, jmp_0xffffffffffffffd@@ 2
endbr64, mov_qword_ptr_[rdi+0x@@ 7@@ 0]_rsi, mov_eax_1, ret
endbr64, push_r14, mov_r14_r8, push_r13, mov_r13_rdx, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rcx, push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+0x@@ 68], call_0xfffffffffffdf@@ 98@@ 1, mov_r8_rbp, lea_rdi_[rbx+0x@@ 68], mov_r9_r14, mov_rcx_r13, mov_rdx_r12, lea_rsi_[rip+0x@@ add@@ b], xor_eax_eax, call_0xffffffffffffd0@@ c3, mov_r8d_eax, mov_eax_1, test_r8d_r8d, js_0x1@@ 3, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, lea_r9_[rip+0x@@ 15@@ d6@@ 9], xor_eax_eax, lea_r8_[rip+0xb@@ 228], mov_ecx_0xffffffff, mov_edx_0x3@@ 73, lea_rsi_[rip+0xa@@ f0@@ 7], mov_edi_3, call_qword_ptr_[r9], pop_rbx, pop_rbp, pop_r12, pop_r13, xor_eax_eax, pop_r14, ret
endbr64, mov_dword_ptr_[rdi+0x@@ 78]_1, mov_eax_1, ret
endbr64, mov_dword_ptr_[rdi+0x@@ 7c@@ ]_1, mov_eax_1, ret
endbr64, mov_dword_ptr_[rdi+0x@@ 80]_1, mov_eax_1, ret
endbr64, mov_dword_ptr_[rdi+0x@@ a0]_1, mov_eax_1, ret
endbr64, mov_dword_ptr_[rdi+0x@@ a@@ 4]_1, mov_eax_1, ret
endbr64, mov_dword_ptr_[rdi+0x@@ a@@ 8]_1, mov_eax_1, ret
endbr64, mov_dword_ptr_[rdi+0x@@ 84@@ ]_1, mov_eax_1, ret
endbr64, mov_dword_ptr_[rdi+0x@@ 2@@ c]_esi, mov_eax_1, ret
endbr64, cmp_qword_ptr_[rip+0x2@@ 17@@ 2@@ fc]_0, je_0x14, mov_dword_ptr_[rdi+0x@@ b@@ 8]_1, mov_eax_1, ret, sub_rsp_0x18, mov_qword_ptr_[rsp+8]_rdi, call_0x2b@@ 47, test_rax_rax, mov_qword_ptr_[rip+0x2@@ 17@@ 2d@@ 0]_rax, mov_rdi_qword_ptr_[rsp+8], jne_0x2d, lea_r9_[rip+0x@@ 15@@ bf@@ a], lea_r8_[rip+0x7@@ fd@@ 8], xor_ecx_ecx, mov_edx_0x3@@ b8, lea_rsi_[rip+0xa@@ d@@ 9d], mov_edi_7, call_qword_ptr_[r9], xor_eax_eax, add_rsp_0x18, ret, mov_dword_ptr_[rdi+0x@@ b@@ 8]_1, mov_eax_1, add_rsp_0x18, ret
endbr64, mov_edx_dword_ptr_[rdi+0x@@ b8], xor_eax_eax, test_edx_edx, je_9, mov_rax_qword_ptr_[rip+0x217@@ 27@@ 1], ret
endbr64, push_r14, mov_r14_rcx, push_r13, mov_r13_rdi, mov_rdi_rdx, push_r12, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rsi, call_0xfffffffffffd@@ f7@@ 65, cmp_rax@@ _0xf, ja@@ _0x5c, mov_esi_0x28, mov_edi_1, call_0xfffffffffffd@@ fb@@ 80, mov_r12_rax, test_rax_rax, je_0xf5, mov_rdi_r14, call_0xfffffffffffd@@ fa@@ 7c, mov_qword_ptr_[r12+0x1@@ 8]_rax, test_rax_rax, je_0xb8, mov_rdi_rbp, call_0xfffffffffffd@@ fa@@ 66, mov_qword_ptr_[r12+0x10]_rax, test_rax_rax, je_0x54, mov_qword_ptr_[r12@@ ]_r13, mov_qword_ptr_[r12+@@ 8]_rbx, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, lea_r10_[rip+0x@@ 15@@ b@@ 19], mov_r9_rbp, xor_eax_eax, lea_r8_[rip+0xa@@ ff@@ d], mov_ecx_0xffffffff, mov_edx_0x3@@ ca, lea_rsi_[rip+0xa@@ cb@@ 4], mov_edi_3, call_qword_ptr_[r10], pop_rbx, pop_rbp, xor_r12d_r12d, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, lea_r9_[rip+0x@@ 15@@ ad@@ e], lea_r8_[rip+0x@@ b0@@ 3f], or_ecx_0xffffffff, mov_edx_0x3@@ da, lea_rsi_[rip+0xa@@ c@@ 80], mov_edi_3, call_qword_ptr_[r9], mov_rdi_qword_ptr_[r@@ 12+0x18], test_rdi_rdi, je_7, call_0xfffffffffffff2b@@ 6, mov_rdi_qword_ptr_[r12+0x10], call_0xfffffffffffdf@@ 67@@ c, mov_rdi_r12, call_0xfffffffffffdf@@ 67@@ 4, xor_r12d_r12d, jmp_0xffffffffffffff6e, lea_r9_[rip+0x@@ 15@@ a@@ 90], lea_r8_[rip+0xa@@ fc@@ 9], or_ecx_0xffffffff, mov_edx_0x3@@ d5, lea_rsi_[rip+0xa@@ c@@ 32], mov_edi_3, call_qword_ptr_[r9], jmp_0xffffffffffffffb2, lea_r10_[rip+0x@@ 15@@ a6@@ 9], mov_r9d@@ _0x28, lea_r8_[rip+0xa@@ f7@@ 4], or_ecx_0xffffffff, mov_edx_0x3@@ cf, lea_rsi_[rip+0xa@@ c0@@ 5], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], jmp_0xffffffffffffff1@@ 5
endbr64, mov_rax_qword_ptr_[rdi+0x@@ 90], ret
endbr64, jmp_0xffffffffffff@@ 7d@@ 3@@ c
endbr64, mov_eax_dword_ptr_[rdi+0x@@ b4], ret
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_0x1@@ 68, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 58]_rax, xor_eax_eax, mov_rax_qword_ptr_[rdi+0x10], mov_qword_ptr_[rsp+0x88]_rax, test_rax_rax, je_0x1@@ 76, mov_rbx_qword_ptr_[r@@ 12+0x@@ c8], test_rbx_rbx, je_0x1@@ 55, mov_r10d_dword_ptr_[r@@ 12], cmp_r10d@@ _0x14, ja_0x10@@ f, test_r10d_r10d, jne_0xae, cmp_qword_ptr_[r12+0x1@@ 8]_0, jne_0x1@@ 7@@ 12, movsxd_rax@@ _r10d, lea_rdi_[rip+0x12@@ d@@ 32], lea_rax_[rax+rax*2], mov_eax_dword_ptr_[r@@ di@@ +rax*8+8], mov_dword_ptr_[rsp+0x8@@ 0]_eax, call_0xffffffffffffea@@ 83, mov_r10d_eax, test_eax_eax, jne_0x13@@ 1, mov_r8d_dword_ptr_[r@@ 12+0x@@ 98], test_r8d_r8d, jne_0x2@@ e8, mov_dword_ptr_[rsp]@@ _r10d, lea_r8_[rip+0x@@ 7d@@ 2c], xor_ecx_ecx, mov_edx_0x7@@ cf, lea_r9_[rip+0x@@ 15@@ 93@@ 9], lea_rsi_[rip+0x@@ aa@@ ea], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], mov_r10d_dword_ptr_[rsp], mov_rax_qword_ptr_[rsp+0x1@@ 58], xor_rax_qword_ptr_fs:[0x28], jne_0x20@@ 81, add_rsp_0x1@@ 68, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r10d, pop_r15, ret, cmp_r10d@@ _0xf, je_0x124, cmp_r10d@@ _1, je_0x1@@ 4@@ 3a, cmp_r10d@@ _4, jne_0xffffffffffffff@@ 4c, mov_r9d_dword_ptr_[r@@ 12+0x@@ ac], test_r9d_r9d, je_0xffffffffffffff@@ 3b, mov_dword_ptr_[r12+0x@@ a@@ c]_0, xor_esi_esi, mov_rdi_r12, call_0x20@@ a0, test_eax_eax, jne_0x1@@ 9d@@ 6, xor_r10d_r10d, jmp_0xffffffffffffff7c, mov_r9d@@ _r10d, lea_r10_[rip+0x@@ 15@@ 88@@ e], lea_r8_[rip+0x@@ ae@@ 17], mov_ecx_0xffffffff, mov_edx_0x7@@ b8, lea_rsi_[rip+0x@@ aa@@ 2e], mov_edi_3, xor_eax_eax, call_qword_ptr_[r10], xor_r10d_r10d, jmp_0xffffffffffffff45, mov_rbx_qword_ptr_[r@@ 12+0x@@ c0], jmp_0xfffffffffffffea9, mov_rax_qword_ptr_[rdi+8], mov_qword_ptr_[rsp+0x88]_rax, jmp_0xfffffffffffffe@@ 84, call_0xffffffffffff3a@@ 58, mov_r9d_eax, mov_eax_dword_ptr_[r12], test_r9d_r9d, jne_0xb@@ f9, lea_rdi_[rip+0x15@@ 8@@ 1c], mov_qword_ptr_[rsp]_rdi, mov_dword_ptr_[rsp+0x@@ 84]_0, mov_dword_ptr_[rsp+0x@@ 7c@@ ]_1, mov_ebp@@ _dword_ptr_[rip+0x2@@ 16@@ ea@@ b], mov_dword_ptr_[r12+0x@@ b@@ 4]_0, mov_r14_qword_ptr_[r@@ 12+0x18], cmp_eax_0x1@@ 3, ja_0x4@@ d4, lea_rsi_[rip+0xb@@ 5b@@ f], mov_ecx_eax, movsxd_rdx_dword_ptr_[r@@ si@@ +rcx*4], add_rdx_rsi, jmp_rdx, mov_rax_qword_ptr_[rsp+0x88], or_rax@@ _rbx, jne_0xfffffffffffffe@@ 31, mov_ebp_dword_ptr_[r@@ 12+0x30], test_ebp_ebp, jg_0xfffffffffffffe@@ 24, call_0xffffffffffff5a@@ fa, mov_rdi_rax, mov_rbx_rax, call_0xfffffffffffdf@@ 3b@@ f, mov_rbp_rax, movabs@@ _r13@@ _0x6@@ c6@@ f7@@ 27@@ 4@@ 6e@@ 6f@@ 63, test_rax_rax, je_0x1@@ ea@@ 2, mov_rdi_rbp, call_0xfffffffffffdf@@ 9a@@ d, test_rax_rax, je_0x60, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x2e, lea_rsi_[r@@ ax+0x13], je_0xffffffffffffffea, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x2@@ e@@ 2e, je_0x1a@@ f2, cmp_qword_ptr_[rax+0x1@@ 3]@@ _r13, je_0xffffffffffffffd8, mov_rdi_r12, call_0xffffffffffff48@@ 73, test_eax_eax, jne_0x1@@ bc@@ b, lea_r9_[rip+0x@@ 15@@ 7@@ 3f], xor_ecx_ecx, mov_edi_7, lea_r8_[rip+0x@@ 7b@@ 16], mov_edx_0x5@@ 2a, lea_rsi_[rip+0xa@@ 8@@ dd], call_qword_ptr_[r9], mov_rdi_rbp, call_0xfffffffffffdf@@ 94@@ f, test_rax_rax, jne_0xffffffffffffffa4, mov_rdi_rbp, call_0xfffffffffffd@@ f7@@ e2, test_eax_eax, jne_0x1@@ d@@ 63, mov_edi_0xd, call_0xffffffffffff3@@ 950, mov_rbp_rax, test_rax_rax, je_0xfffffffffffffe@@ 52, mov_rdi_rax, call_0xfffffffffffffc@@ ec, test_eax_eax, je_0x54, mov_rdi_rbp, call_0xfffffffffffff5@@ 30, mov_r13_rax, test_rax_rax, je_0x44, cmp_qword_ptr_[rax]_0, mov_r10d_1, je_0x3b, xor_eax_eax, xor_ebx_ebx, mov_r14d@@ _r10d, jmp_0x1c, mov_rdi_r12, call_0xfffffffffffffc@@ bb, test_eax_eax, mov_eax_dword_ptr_[r13+8], cmove@@ _r14d@@ _ebx, test_eax_eax, je_0x1@@ db@@ a, add_r13_rax, lea_rsi_[r@@ 13+0xc], mov_rdi_r12, call_0xffffffffffff47@@ ba, test_eax_eax, jne_0xffffffffffffffd5, xor_r10d_r10d, mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _r10d, call_0xfffffffffffff@@ 167, mov_r10d_dword_ptr_[rsp], jmp_0xfffffffffffffd@@ 5a, mov_edi_dword_ptr_[r@@ 12+0x@@ 2c], mov_dword_ptr_[rsp]_eax, call_0xfffffffffffff0@@ 38, mov_r10d_dword_ptr_[rsp], jmp_0xfffffffffffffd@@ 0d, mov_rdi_qword_ptr_[r12+0x@@ 58], mov_rax_qword_ptr_[r12+0x@@ 70], test_rdi_rdi, je_0xe@@ 79, test_rax_rax, jne_0x@@ ea@@ f, cmp_qword_ptr_[r12+0x@@ 60]_0, jne_0x@@ ea@@ 3, cmp_qword_ptr_[r12+0x@@ 68]_0, lea_r8_[rip+0x@@ ad@@ 50], mov_ecx_0xffffffff, mov_edx_0x4@@ 7f, jne_0x3@@ 3e, call_0xfffffffffffdf@@ 1b0, lea_rbx_[r@@ ax+0x1@@ 39], xor_r13d_r13d, mov_eax_0x4@@ 000, cmp_rbx@@ _0x4000, cmovb@@ _rbx_rax, lea_eax_[r@@ bp-1], test_ebp_ebp, je_0x16, dec_eax, add_r@@ bx_rbx, cmp_eax_-1, jne_0xfffffffffffffff@@ 8, mov_rsi_rbx, mov_edi_1, call_0xfffffffffffd@@ f5@@ 9e, mov_r15_rax, test_rax_rax, je_0x2@@ ff, movsxd_rax_dword_ptr_[r@@ 12], lea_rdi_[rip+0x12@@ 92@@ 2], lea_rax_[rax+rax*2], lea_rax_[r@@ di+rax*8], mov_edx_dword_ptr_[rax+0xc], mov_edi_dword_ptr_[r@@ 12+0x@@ 34], mov_dword_ptr_[r15@@ ]_edx, mov_edx_dword_ptr_[rax+0x10], mov_eax_dword_ptr_[rax+0x14], mov_dword_ptr_[r15+@@ 4]_edx, mov_dword_ptr_[r15+@@ 8]_eax, mov_dword_ptr_[r15+0x@@ c]_ebx, mov_dword_ptr_[r15+0x1@@ 0]@@ _0x1@@ 38, test_edi_edi, js_0xa@@ 5, mov_esi_dword_ptr_[rip+0x@@ 15@@ 79@@ f], movsxd_r9@@ _dword_ptr_[r@@ 12+0x30], test_esi_esi, jne_0x50, mov_ecx_dword_ptr_[r12+0x@@ 38], test_ecx_ecx, je_0x47, mov_eax_dword_ptr_[rip+0x2@@ 16@@ bd@@ 7], cmp_eax@@ _r9d, je_0x3c, sub_rsp_8, push_rax, mov_edx_0x4@@ b0, xor_eax_eax, mov_r11_qword_ptr_[rsp+0x10], lea_r8_[rip+0x@@ ac@@ e2], xor_ecx_ecx, lea_rsi_[rip+0xa@@ 6b@@ 1], mov_edi_5, call_qword_ptr_[r@@ 11], movsxd_r9@@ _dword_ptr_[rip+0x2@@ 16@@ ba@@ 2], mov_dword_ptr_[r12+0x@@ 30]@@ _r9d, pop_rax, pop_rdx, lea_r8_[rip+0x@@ ac@@ f9], mov_ecx_0xffffffff, mov_edx_0x4@@ b7, test_r9d_r9d, jle_0x@@ 11d@@ d, movsxd_rax_dword_ptr_[r@@ 12+0x@@ 34], shl@@ _r9@@ _8, mov_rdx_rax, shl_rax@@ _0xc, and_rax@@ _0xffffffff@@ fff@@ 00000, movzx_edx_dl, or_rax_rdx, or_rax@@ _r9, or_dword_ptr_[r@@ 15+0x1@@ c@@ ]_8, mov_qword_ptr_[r15+0x@@ 28]_rax, cmp_dword_ptr_[rip+0x2@@ 16@@ b@@ 6f@@ ]_2, mov_rsi_qword_ptr_[r@@ 12+0x10], mov_rbp_qword_ptr_[r@@ 12+0x@@ c8], jbe_0x@@ d@@ ea, test_rsi_rsi, je_0x1@@ 7f@@ b, mov_r14d_dword_ptr_[r@@ 12], cmp_r14d@@ _5, je_0x1@@ 1d@@ 3, lea_rdi_[r@@ 15+0x30], mov_edx_0x80, call_0xfffffffffffdf@@ 4d@@ 4, test_rbp_rbp, je_0xf@@ 88, lea_rdi_[r@@ 15+0x@@ b0], mov_edx_0x8@@ 1, mov_rsi_rbp, call_0xfffffffffffdf@@ 4b@@ 7, cmp_r14d_4, jne_7, or_dword_ptr_[r@@ 15+0x1@@ c]_2, mov_edi_dword_ptr_[r@@ 12+0x@@ 78], test_edi_edi, je_0x32, cmp_dword_ptr_[rip+0x2@@ 16@@ a@@ ff@@ ]@@ _0xb, ja@@ _0xf@@ 6f, mov_r11_qword_ptr_[rsp], lea_r8_[rip+0xa@@ cc@@ 6], xor_ecx_ecx, mov_edx_0x4@@ d7, lea_rsi_[rip+0xa@@ 5c0], mov_edi_5, xor_eax_eax, call_qword_ptr_[r@@ 11], mov_esi_dword_ptr_[r@@ 12+0x28], test_esi_esi, je_7, or_dword_ptr_[r@@ 15+0x1@@ c]_1, mov_ecx_dword_ptr_[r12+0x@@ 80], test_ecx_ecx, je_0xa, or_dword_ptr_[r@@ 15+0x1@@ c]@@ _0x400, mov_edx_dword_ptr_[r12+0x@@ a8], test_edx_edx, je_0x16, mov_eax_dword_ptr_[r12], sub_eax_2, cmp_eax_1, ja@@ _0xa, or_dword_ptr_[r@@ 15+0x1@@ c]@@ _0x20000, mov_eax_dword_ptr_[r12+0x@@ a0], test_eax_eax, je_0x36, cmp_dword_ptr_[rip+0x2@@ 16@@ a8@@ 1]@@ _0x13, ja_0x2@@ 5, mov_r11_qword_ptr_[rsp], lea_r8_[rip+0x@@ ac@@ 8c], xor_ecx_ecx, mov_edx_0x4@@ e5, lea_rsi_[rip+0xa@@ 54@@ 6], mov_edi_5, xor_eax_eax, call_qword_ptr_[r@@ 11], or_dword_ptr_[r@@ 15+0x1@@ c]@@ _0x8000, mov_eax_dword_ptr_[r12+0x@@ 84], test_eax_eax, jne_0xe@@ 2a, mov_eax_dword_ptr_[r12+0x@@ 9c], test_eax_eax, je_0x17, cmp_dword_ptr_[rip+0x2@@ 16@@ a3@@ 1]@@ _0x12, jbe_0x@@ 10@@ 59, or_dword_ptr_[r@@ 15+0x1@@ c]@@ _0x4000, mov_eax_dword_ptr_[r12+0x@@ 2c], cmp_dword_ptr_[r@@ 12]@@ _0x13, mov_dword_ptr_[r15+0x1@@ 4]_r13d, mov_dword_ptr_[r15+0x@@ 20]_eax, lea_rbp_[r@@ 15+0x1@@ 38], ja_0x5@@ 62, mov_eax_dword_ptr_[r12], lea_rdx_[rip+0xb@@ 15@@ 9], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, test_r14_r14, je_0xfffffffffffffc@@ f8, xor_r13d_r13d, mov_ebx@@ _0x1@@ 38, mov_rdi_qword_ptr_[r@@ 14+0x18], inc_r13d, call_0xfffffffffffde@@ ed@@ 1, mov_r14_qword_ptr_[r@@ 14+0x20], lea_rbx_[r@@ bx+r@@ ax+0x@@ 31], test_r14_r14, jne_0xffffffffffffffe8, cmp_qword_ptr_[r12+0x@@ 70]_0, jne_0xc@@ 18, cmp_qword_ptr_[r12+0x@@ 60]_0, jne_0x@@ c0@@ c, cmp_qword_ptr_[r12+0x@@ 58]_0, jne_0xb@@ c8, cmp_qword_ptr_[r12+0x@@ 68]_0, je_0xfffffffffffffc@@ f3, lea_r8_[rip+0xa@@ 9c@@ 7], mov_ecx_0xffffffff, mov_edx_0x4@@ 75, mov_rbx_qword_ptr_[rsp], lea_rsi_[rip+0xa@@ 44@@ 5], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ bx], mov_rbx_qword_ptr_[rsp], lea_r8_[rip+0x@@ ac@@ 81], mov_ecx_0xffffffff, mov_edx_0x7@@ 03, lea_rsi_[rip+0xa@@ 420], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ bx], mov_eax_dword_ptr_[rsp+0x@@ 84], test_eax_eax, je_0x1@@ 14@@ e, cmp_dword_ptr_[r@@ 12@@ ]_2, jne_0x1@@ 14@@ 3, mov_eax_dword_ptr_[r12+0x@@ a4], test_eax_eax, je_0x1@@ 133, inc@@ _dword_ptr_[rsp+0x@@ 7c], mov_eax_dword_ptr_[rsp+0x@@ 7c], cmp_eax_0x1@@ 9, ja_0x1@@ 12@@ 2, mov_edi@@ _0x3@@ 0@@ d@@ 40, call_0xfffffffffffd@@ ef@@ 3f, mov_ebp@@ _dword_ptr_[rip+0x2@@ 16@@ 8c@@ 0], mov_eax_dword_ptr_[r12], jmp_0xfffffffffffffa@@ 18, mov_r15_qword_ptr_[rsp+0x18], mov_r12_qword_ptr_[rsp+0x20], mov_rbp_r8, mov_rsi_qword_ptr_[r12+0x@@ 58], test_rsi_rsi, je_0xa, mov_rdi_rbp, call_0xfffffffffffdf@@ 18@@ e, mov_rsi_qword_ptr_[r12+0x@@ 60], test_rsi_rsi, je_0x14, mov_rax_qword_ptr_[r12+0x@@ 70], lea_rdi_[r@@ bp+8], mov_qword_ptr_[rbp]_rax, call_0xfffffffffffdf@@ 17@@ 2, mov_rsi_qword_ptr_[r12+0x@@ 68], test_rsi_rsi, je_0xa, mov_rdi_rbp, call_0xfffffffffffdf@@ 160, movsxd_rbx@@ _dword_ptr_[r@@ 12], mov_eax_dword_ptr_[r15+0x1@@ c], mov_r13d_dword_ptr_[r@@ 12+0x@@ 7c], cmp_ebx@@ _0xb, je_0x@@ 80@@ b, mov_edx_eax, or_edx@@ _4, mov_dword_ptr_[r15+0x1@@ c]_edx, test_r13d_r13d, je_0xb, or_eax@@ _0x2@@ 04, mov_dword_ptr_[r15+0x1@@ c]_eax, mov_dword_ptr_[rsp+0x10]_0, cmp_ebx@@ _8, ja@@ _0x3f, mov_eax_0x1@@ 24, bt_rax@@ _rbx, jae_0x@@ 34, call_0x1e@@ 96, test_eax_eax, je_0x1a, mov_eax_dword_ptr_[r12+0x@@ 98], or_dword_ptr_[r@@ 15+0x@@ 20]@@ _0x4@@ 00000, test_eax_eax, je_0xa@@ eb, mov_dword_ptr_[rsp+0x10]_1, mov_r13d_dword_ptr_[r@@ 12+0x@@ 7c], movsxd_rbx@@ _dword_ptr_[r@@ 12], mov_rax_qword_ptr_[rsp], mov_rbp_qword_ptr_[r@@ 12+0x@@ 60], mov_rax_qword_ptr_[rax], mov_qword_ptr_[rsp+0x18]_rax, mov_eax_dword_ptr_[r15+0x@@ c], mov_dword_ptr_[rsp+0x20]_eax, test_rbp_rbp, je_0x9@@ 18, mov_rdi_rbp, mov_edx_7, lea_rsi_[rip+0xa@@ 1a@@ 4], call_0xfffffffffffd@@ f0@@ 73, test_eax_eax, lea_rax_[rip+0xa@@ 19@@ 6], cmove@@ _rbp_rax, mov_rax_qword_ptr_[r12+0x@@ 70], mov_esi_dword_ptr_[r@@ 12+0x@@ ac], mov_qword_ptr_[rsp+0x28]_rax, test_esi_esi, lea_rax_[rip+0x@@ 2f@@ 15], lea_rsi_[rip+0xa@@ 178], cmovne_rax@@ _rsi, mov_edi_dword_ptr_[r@@ 12+0x@@ 84], lea_rsi_[rip+0xa@@ 17@@ 3], test_edi_edi, mov_qword_ptr_[rsp+0x70]_rax, lea_rax_[rip+0x@@ 2e@@ ed], cmovne_rax@@ _rsi, mov_r8d_dword_ptr_[r@@ 12+0x@@ a0], lea_rcx_[rip+0x@@ 2e@@ da], test_r8d_r8d, mov_qword_ptr_[rsp+0x68]_rax, lea_rax_[rip+0xa@@ 14@@ d], cmove_rax@@ _rcx, mov_r9d_dword_ptr_[r@@ 12+0x@@ a8], mov_qword_ptr_[rsp+0x60]_rax, test_r9d_r9d, lea_rax_[rip+0xa@@ 13@@ e], cmove_rax@@ _rcx, mov_r10d_dword_ptr_[r@@ 12+0x@@ a4], mov_qword_ptr_[rsp+0x58]_rax, test_r10d_r10d, lea_rax_[rip+0xa@@ 13@@ 3], cmove_rax@@ _rcx, mov_r11d_dword_ptr_[r@@ 12+0x@@ 80], mov_qword_ptr_[rsp+0x50]_rax, test_r11d_r11d, lea_rax_[rip+0xa@@ 12@@ 5], cmove_rax@@ _rcx, mov_r14d_dword_ptr_[r@@ 12+0x28], mov_qword_ptr_[rsp+0x48]_rax, test_r14d_r14d, lea_rax_[rip+0xa@@ 11@@ 9], cmove_rax@@ _rcx, lea_rdx_[rip+0xa@@ 118], mov_qword_ptr_[rsp+0x40]_rax, mov_eax_dword_ptr_[r12+0x@@ 78], mov_esi_dword_ptr_[r@@ 12+0x30], test_eax_eax, lea_rax_[rip+0xa@@ 10@@ 2], cmovne_rax_rdx, test_r13d_r13d, mov_qword_ptr_[rsp+0x38]_rax, lea_rdx_[rip+0x@@ a0@@ f6], lea_rax_[rip+0x@@ a0@@ f1], cmovne_rax_rdx, mov_qword_ptr_[rsp+0x30]_rax, mov_eax_dword_ptr_[r12+0x@@ 34], test_esi_esi, jle_0x@@ 54@@ 6, lea_r8_[rip+0x@@ 79@@ fe], test_eax_eax, je_0x11, mov_ecx_0, cmovs@@ _eax_ecx, lea_r8_[rip+0x@@ 2d@@ f5], lea_r11_[rip+0x@@ a0@@ 11], lea_r10_[rip+0x@@ 6e@@ ff], lea_r9_[rip+0x@@ a@@ 00@@ 6], mov_rdi_qword_ptr_[r12+0x@@ 58], lea_r13_[rip+0x@@ 9@@ 9d@@ f], test_rdi_rdi, je_0x7@@ a2, mov_edx_dword_ptr_[r12+0x@@ 9c], lea_rcx_[r@@ 15+0x@@ b0], mov_qword_ptr_[rsp+8]_rcx, test_edx_edx, lea_rcx_[rip+0x9@@ fd@@ 7], lea_rdx_[rip+0x2d@@ a7], cmove@@ _rcx_rdx, mov_edx_dword_ptr_[rsp+0x@@ 7c], lea_r14_[r@@ 15+0x30], push_rdx, lea_rbx_[r@@ bx+r@@ bx*2], mov_edx_dword_ptr_[rsp+0x28], push_rdx, mov_edx_0x7@@ 3d, push_rbp, push@@ _qword_ptr_[rsp+0x40], push@@ _qword_ptr_[rsp+0x90], push@@ _qword_ptr_[rsp+0x90], push@@ _qword_ptr_[rsp+0x90], push@@ _qword_ptr_[rsp+0x90], push@@ _qword_ptr_[rsp+0x90], push@@ _qword_ptr_[rsp+0x90], push@@ _qword_ptr_[rsp+0x90], push@@ _qword_ptr_[rsp+0x90], push@@ _qword_ptr_[rsp+0x90], push_r11, push_r8, lea_r8_[rip+0x@@ aa@@ 66], push_rax, lea_rax_[rip+0x@@ 12@@ 2b@@ 6], push_r10, push_rsi, lea_rsi_[rip+0x@@ a0@@ b4], push_r9, mov_r9_qword_ptr_[r@@ ax+r@@ bx*8], xor_eax_eax, push_rdi, mov_edi_7, push_r13, push@@ _qword_ptr_[rsp+0xb0], push_r14, push_rcx, mov_ecx_4, mov_rbx_qword_ptr_[rsp+0x@@ d8], call_rbx, mov_esi_dword_ptr_[r@@ sp+0x1@@ 40], mov_edi_dword_ptr_[rip+0x@@ 15@@ 12@@ a], add_rsp_0x@@ c0, mov_rdx_r15, xor_eax_eax, call_0xfffffffffffde@@ 78@@ a, mov_ecx_dword_ptr_[r12+0x@@ b8], mov_ebx_eax, test_ecx_ecx, jne_0x5@@ 31, test_ebx_ebx, js_0x3@@ 31, mov_edx_dword_ptr_[rsp+0x10], test_edx_edx, jne_0x3@@ 75, mov_ebx_dword_ptr_[r@@ 12], lea_r13_[rsp+0x@@ d0], call_0xffffffffffff30@@ c3, mov_r8d_eax, mov_ecx_0x80, mov_rdx_r13, lea_rsi_[rip+0x@@ 76@@ 27], mov_rdi_r14, call_0xffffffffffffe@@ 6f@@ 9, cmp_ebx@@ _0xd, je_0x@@ 601, test_eax_eax, je_0x5@@ e6, mov_ecx_dword_ptr_[r@@ 12], cmp_ecx_2, je_0x3@@ d4, call_0xffffffffffff30@@ 86, mov_rdi_qword_ptr_[rsp+8], mov_r8d_eax, mov_ecx@@ _0x8@@ 1, mov_rdx_r13, lea_rsi_[rip+0x@@ 9e@@ 6b], call_0xffffffffffffe@@ 6b@@ a, test_eax_eax, je_0x5@@ b0, mov_ecx_dword_ptr_[r@@ 12], test_byte_ptr_[r@@ 15+0x1@@ d]_1, je_0xd@@ 54, cmp_ecx@@ _0x11, ja_0x@@ d@@ 22, mov_eax_1, shl_rax_cl, test_eax@@ _0x3@@ 3c@@ 80, je_0x@@ d0@@ f, mov_eax_dword_ptr_[rip+0x2@@ 16@@ 4@@ 98], mov_rdi_r15, lea_ebp@@ _[rax+1], mov_dword_ptr_[rip+0x2@@ 16@@ 48@@ c]_ebp, call_0xffffffffffffe@@ 5c0, jmp_0xfffffffffffffb@@ c7, mov_r13_qword_ptr_[r@@ 12+0x18], test_r13_r13, je_0xfffffffffffffb@@ cd, lea_rax_[r@@ 15+r@@ bx], mov_qword_ptr_[rsp+8]_rax, lea_rax_[rsp+0x@@ b8], mov_qword_ptr_[rsp+0x10]_rax, mov_qword_ptr_[rsp+0x1@@ 8]_r15, mov_qword_ptr_[rsp+0x20]@@ _r12, mov_r12_r13, mov_r14_qword_ptr_[r@@ 12+0x10], mov_rdi_r14, call_0xfffffffffffde@@ 970, cmp_rax@@ _0xf, ja_0x5@@ 97, mov_rax_qword_ptr_[r12], mov_rdi_qword_ptr_[rsp+0x10], mov_qword_ptr_[rsp+0xa0]_rax, mov_rax_qword_ptr_[r12+8], mov_rsi_r14, mov_edx_0xf, mov_dword_ptr_[rsp+0x@@ b0]_0, mov_qword_ptr_[rsp+0xa8]_rax, call_0xfffffffffffd@@ ed@@ c0, mov_r15_qword_ptr_[r@@ 12+0x18], mov_byte_ptr_[rsp+0x@@ c7@@ ]_0, movzx_r13d_byte_ptr_[r@@ 15], lea_r14_[r@@ bp+0x28], test_r13b_r13b, je_0x8@@ 33, mov_edx_r13d, mov_rax_r15, xor_ebx_ebx, inc_rax, cmp_dl@@ _0x5c, sete_dl, movzx_edx_dl, add_ebx@@ _edx, movzx_edx_byte_ptr_[rax], test_dl_dl, jne_0xffffffffffffffed, mov_rdi_r15, call_0xfffffffffffde@@ 8e@@ 8, mov_rsi_qword_ptr_[rsp+8], lea_edx_[r@@ bx+rax], cmp_rsi@@ _r14, jbe_0x@@ 5c8, movsxd_rdx_edx, lea_r8_[r@@ 14@@ +rdx+1], cmp_rsi@@ _r8, jbe_0x@@ 5b@@ 7, test_ebx_ebx, jne_0x27, jmp_0x5@@ fd, mov_rdx_rax, mov_rax_r14, mov_byte_ptr_[rax]@@ _r13b, inc_r15, mov_r14_rdx, movzx_r13d_byte_ptr_[r@@ 15], test_r13b_r13b, je_0x28, lea_rax_[r@@ 14+1], cmp_r13b@@ _0x5c, jne_0xffffffffffffffe0, mov_byte_ptr_[r@@ 14]@@ _0x5c, inc_r15, add_r14@@ _2, movzx_r13d_byte_ptr_[r@@ 15-1], mov_byte_ptr_[rax]@@ _r13b, movzx_r13d_byte_ptr_[r@@ 15], test_r13b_r13b, jne_0xffffffffffffffdc, mov_byte_ptr_[rax+@@ 1]_0, lea_r8@@ _[rax@@ +2], add_r8@@ _7, and_r8@@ _0xfffffffffffffff8, mov_rax_r8, sub_rax_rbp, mov_dword_ptr_[rsp+0xb@@ 4]_eax, movdqa_xmm0_xmmword_ptr_[rsp+0x@@ a0], mov_rax_qword_ptr_[rsp+0xc0], movdqa_xmm1_xmmword_ptr_[r@@ sp+0x@@ b0], mov_qword_ptr_[rbp+0x20]_rax, movups_xmmword_ptr_[r@@ bp@@ ]_xmm0, movups_xmmword_ptr_[rbp+0x@@ 10]_xmm1, test_r8_r8, je_0x12@@ 4b, mov_r12_qword_ptr_[r@@ 12+0x20], test_r12_r12, je_0xfffffffffffffa@@ 36, mov_rbp_r8, jmp_0xfffffffffffffe@@ 9d, cmp_eax_1, jne_0xfffffffffffff@@ 40@@ a, lea_rax_[rip+0x14@@ c@@ 20], mov_ecx_dword_ptr_[r@@ 12+0x30], mov_qword_ptr_[rsp]_rax, mov_r10_qword_ptr_[r@@ ax], mov_eax_dword_ptr_[r12+0x@@ 34], test_ecx_ecx, jle_0x@@ 10@@ 4c, lea_rdi_[rip+0x@@ 76@@ 25], test_eax_eax, je_0x11, mov_edx_0, cmovs@@ _eax_edx, lea_rdi_[rip+0x2a@@ 1c], lea_rsi_[rip+0x6b@@ 2d], lea_r11_[rip+0x@@ 9c@@ 31], lea_r8_[rip+0x@@ 9c@@ 2d], lea_rbp_[rip+0x@@ 9c@@ 28], test_rbx_rbx, je_0x10@@ 86, mov_r15@@ _qword_ptr_[rsp+0x88], lea_rdx_[rip+0x2@@ 9e@@ 8], test_r15_r15, cmovne_rdx@@ _r15, sub_rsp_8, push_r11, push_rdi, mov_edi_3, push_rax, xor_eax_eax, push_rsi, lea_rsi_[rip+0x@@ 9d@@ 53], push_rcx, mov_ecx_0xffffffff, push_r8, lea_r8_[rip+0xa@@ 1a@@ 4], push_rbx, push_rbp, push_rdx, mov_edx_0x7@@ d4, call_r10, mov_eax_dword_ptr_[r12], add_rsp_0x50, jmp_0xfffffffffffff@@ 36@@ 1, call_0xfffffffffffd@@ ea@@ 80, mov_edi_dword_ptr_[rax], cmp_dword_ptr_[r12+0x@@ b@@ 0]_edi, je_0xfffffffffffffc@@ c6, mov_dword_ptr_[r12+0x@@ b@@ 4]_edi, cmp_edi@@ _6, jne_0x2@@ 18, mov_eax_dword_ptr_[r12], lea_edx_[rax@@ -6], and_edx@@ _0xfffffffb, je_0xb, cmp_eax_0xf, jne_0x20@@ 3, mov_edx_dword_ptr_[rsp+0x10], and_dword_ptr_[r@@ 15+0x1@@ c]@@ _0xfffffffb, test_edx_edx, je_0xfffffffffffffc@@ 9b, call_0xffffffffffff6@@ 250, test_eax_eax, je_0xfffffffffffffc@@ 8a, call_0x16@@ 33, test_eax_eax, je_0xfffffffffffffc@@ 7d, cmp_dword_ptr_[rip+0x2@@ 16@@ 1d@@ 7@@ ]_0x10, jbe_0xfffffffffffffc@@ 70, test_byte_ptr_[r@@ 15+0x1@@ d@@ ]_0x20, jne_0xfffffffffffffc@@ 65, mov_rbx_qword_ptr_[rsp], xor_eax_eax, lea_r8_[rip+0xa@@ 6c@@ 9], mov_ecx_4, mov_edx_0x7@@ 88, lea_rsi_[rip+0x@@ 9c@@ 88], mov_edi_7, call_qword_ptr_[r@@ bx], mov_eax_dword_ptr_[r12+0x@@ 98], test_eax_eax, je_0xfffffffffffffc@@ 30, mov_edi_dword_ptr_[r@@ 12+0x@@ 2c], call_0xffffffffffffe@@ 48@@ 4, jmp_0xfffffffffffffc@@ 20, lea_r11_[rip+0x@@ 28@@ c8], test_eax_eax, mov_ecx_0, cmovs@@ _eax_ecx, mov_r8@@ _r11, mov_r10@@ _r11, xor_esi_esi, mov_r9@@ _r11, jmp_0xfffffffffffffa@@ d3, test_byte_ptr_[r@@ 15+0x1@@ d]_1, jne_0x@@ 98@@ a, mov_edx_dword_ptr_[r12+0x@@ 98], xor_r8d_r8d, test_edx_edx, je_0xe@@ 76, movzx_edx_word_ptr_[r@@ 12+0x@@ 2e], mov_r8d_edx, xor_r8d@@ _1, and_r8d_1, and_edx@@ _0x20, cmp_ecx@@ _0xf, ja_0x8@@ 3, lea_rsi_[rip+0xa@@ 8b@@ e], movsxd_rax_dword_ptr_[r@@ si@@ +rcx*4], add_rax_rsi, jmp_rax, mov_rdi_qword_ptr_[r12+0x@@ 50], test_rdi_rdi, je_7, call_0xffffffffffffe@@ 19@@ 6, mov_qword_ptr_[r12+0x@@ 50]@@ _r15, mov_r10d_1, jmp_0xfffffffffffff0@@ 82, mov_edx_eax, or_edx@@ _0x14, mov_dword_ptr_[r15+0x1@@ c]_edx, or_eax@@ _0x10, test_r13d_r13d, jne_0xfffffffffffff7@@ fa, mov_dword_ptr_[rsp+0x10]_0, jmp_0xfffffffffffff8@@ 3f, mov_rdi_qword_ptr_[rip+0x2@@ 160@@ 39], call_0x1@@ 8f@@ 1, test_eax_eax, jne_0xfffffffffffffa@@ c7, mov_r11_qword_ptr_[rsp], lea_r8_[rip+0x@@ 6d@@ 3e], xor_ecx_ecx, mov_edx_0x7@@ 59, lea_rsi_[rip+0x@@ 9b@@ 03], mov_edi_7, call_qword_ptr_[r@@ 11], jmp_0xfffffffffffffaa@@ 0, mov_rax_qword_ptr_[rsp], mov_ecx_dword_ptr_[rip+0x2@@ 15@@ ff@@ e], mov_rbx_qword_ptr_[rax], test_ecx_ecx, jne_0x34@@ 9, cmp_edi@@ _4, je_0x3@@ 40, call_0xfffffffffffde@@ 64@@ a, mov_ecx_dword_ptr_[r@@ 12+0x30], test_ecx_ecx, jle_0x@@ 86@@ e, mov_edx_dword_ptr_[r12+0x@@ 34], lea_rdi_[rip+0x7@@ 32@@ 1], test_edx_edx, je_0x11, mov_esi_0, cmovs@@ _edx@@ _esi, lea_rdi_[rip+0x27@@ 18], lea_r10_[rip+0x@@ 70@@ 24], lea_r9_[rip+0x@@ 68@@ 22], lea_r8_[rip+0x@@ 99@@ 29], sub_rsp_8, movsxd_rsi_dword_ptr_[r@@ 12], push_rax, lea_rsi_[r@@ si+r@@ si*2], lea_rax_[rip+0x@@ 11@@ c@@ 70], push_r10, push_rdi, mov_edi_3, push_rdx, mov_edx_0x7@@ 6f, push_r9, mov_r9_qword_ptr_[r@@ ax+r@@ si*8], lea_rsi_[rip+0x9a@@ 5d], push_rcx, xor_eax_eax, mov_ecx_0xffffffff, push_r8, lea_r8_[rip+0x@@ a4@@ 3c], push@@ _qword_ptr_[rsp+0x48], push_r14, call_rbx, add_rsp_0x50, xor_eax_eax, cmp_dword_ptr_[r12+0x@@ b@@ 4]@@ _0x10, sete_al, mov_dword_ptr_[rsp+0x@@ 84]_eax, mov_rdi_r15, call_0xffffffffffffe0@@ 50, jmp_0xfffffffffffff@@ 60c, mov_ebp_dword_ptr_[r@@ 15+0x10], add_rbp@@ _r15, cmp_qword_ptr_[rbp]_0, je_0xfffffffffffff@@ 9f@@ 9, xor_edx_edx, lea_rbx_[rip+0x@@ 7@@ 000], add_rbp@@ _rdx, call_0xffffffffffff2a@@ 7d, mov_r8d_eax, mov_rdx_r13, lea_rdi_[rbp+0x@@ c], mov_ecx_0x80, mov_rsi_rbx, call_0xffffffffffffe0@@ b6, mov_edx_dword_ptr_[r@@ bp+8], test_edx_edx, jne_0xffffffffffffffdc, jmp_0xfffffffffffff9b@@ f, lea_rbp_[rip+0x@@ 26@@ 38], jmp_0xfffffffffffff@@ 708, lea_rdi_[rip+0x26@@ 28], mov_r13_rdi, jmp_0xfffffffffffff85@@ a, mov_rbx_qword_ptr_[rsp], mov_r9_r14, lea_r8_[rip+0x@@ 9c@@ d2], mov_ecx_0xffffffff, mov_edx_0x3@@ f3, lea_rsi_[rip+0x9@@ 98@@ 9], mov_edi_3, xor_eax_eax, mov_r15_qword_ptr_[rsp+0x18], mov_r12_qword_ptr_[rsp+0x20], call_qword_ptr_[r@@ bx], mov_rbx_qword_ptr_[rsp], lea_r8_[rip+0x@@ 6b@@ 98], xor_ecx_ecx, mov_edx_0x5@@ 01, lea_rsi_[rip+0x@@ 99@@ 5d], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], mov_rdi_r15, call_0xffffffffffffd@@ f7@@ 9, jmp_0xfffffffffffff5@@ 10, mov_rdi_qword_ptr_[r12+0x@@ 68], test_rdi_rdi, je_0xf@@ 20, test_rax_rax, jne_0xe, cmp_qword_ptr_[r12+0x@@ 60]_0, je_0xfffffffffffff@@ 1a@@ 6, lea_r8_[rip+0x9@@ f0@@ 1], mov_ecx_0xffffffff, mov_edx_0x4@@ 84, jmp_0xfffffffffffff@@ 4c@@ 7, lea_r8_[rip+0x@@ 9e@@ 91], mov_ecx_0xffffffff, mov_edx_0x4@@ 7a, jmp_0xfffffffffffff@@ 4a@@ 7, mov_rbx_qword_ptr_[rsp], lea_r8_[rip+0x@@ a0@@ fd], mov_ecx_0xffffffff, mov_edx_0x40@@ 6, lea_rsi_[rip+0x@@ 98@@ cc], mov_edi_3, xor_eax_eax, mov_r15_qword_ptr_[rsp+0x18], mov_r12_qword_ptr_[rsp+0x20], call_qword_ptr_[r@@ bx], jmp_0xffffffffffffff43, lea_r8_[rip+0x@@ 9d@@ e9], mov_ecx_0xffffffff, mov_edx_0x4@@ 70, jmp_0xfffffffffffff@@ 44@@ f, lea_rdx_[rax+1], mov_rsi_r15, mov_rdi_r14, mov_qword_ptr_[rsp+0x28]_r8, call_0xfffffffffffde@@ 8d@@ 1, mov_r8_qword_ptr_[rsp+0x28], jmp_0xfffffffffffffa@@ 3d, lea_r8_[rip+0x@@ 9d@@ 89], mov_ecx_0xffffffff, mov_edx_0x4@@ 6b, jmp_0xfffffffffffff4@@ 17, test_rsi_rsi, jne_0xfffffffffffff@@ 22@@ 2, mov_rax_qword_ptr_[r12+8], mov_rsi_rax, test_rax_rax, jne_0x@@ 9d@@ 7, test_rbp_rbp, je_0x1@@ 93, mov_r14d_dword_ptr_[r@@ 12], jmp_0xfffffffffffff@@ 22@@ 3, call_0xffffffffffff5d@@ a0, test_eax_eax, je_0xfffffffffffff@@ 5@@ 14, mov_rax_qword_ptr_[rsp], lea_r9_[rip+0x@@ 96@@ b6], mov_r10_qword_ptr_[r@@ ax], mov_eax_dword_ptr_[r12], cmp_eax_5, je_0x17, cmp_eax_2, lea_r9_[rip+0x@@ 96@@ b1], lea_rax_[rip+0x@@ 96@@ bb], cmovne@@ _r9_rax, lea_r8_[rip+0x@@ a0@@ 58], mov_ecx_4, mov_edx_0x7@@ 29, lea_rsi_[rip+0x@@ 97@@ d7], mov_edi_7, xor_eax_eax, call_r10, mov_rbx_qword_ptr_[rsp], lea_r8_[rip+0x@@ a0@@ f2], mov_ecx_4, mov_edx_0x7@@ 30, lea_rsi_[rip+0x@@ 97@@ b1], mov_edi_7, xor_eax_eax, call_qword_ptr_[r@@ bx], or_dword_ptr_[r@@ 15+0x@@ 20]@@ _0x3@@ 0000, jmp_0xfffffffffffff4@@ 93, call_0xfffffffffffde@@ 3@@ 10, mov_ecx_dword_ptr_[r@@ 12+0x30], test_ecx_ecx, jle_0x@@ 4@@ 9c, mov_edx_dword_ptr_[r12+0x@@ 34], lea_rdi_[rip+0x6@@ fe@@ 7], test_edx_edx, je_0x11, mov_esi_0, cmovs@@ _edx@@ _esi, lea_rdi_[rip+0x2@@ 3d@@ e], lea_r10_[rip+0x@@ 6c@@ ea], lea_r9_[rip+0x@@ 64@@ e8], lea_r8_[rip+0x9@@ 5e@@ f], sub_rsp_8, movsxd_rsi_dword_ptr_[r@@ 12], push_rax, lea_rsi_[r@@ si+r@@ si*2], lea_rax_[rip+0x@@ 11@@ 93@@ 6], push_r10, push_rdi, mov_edi_5, push_rdx, mov_edx_0x7@@ 63, push_r9, mov_r9_qword_ptr_[r@@ ax+r@@ si*8], lea_rsi_[rip+0x@@ 97@@ 23], push_rcx, xor_eax_eax, xor_ecx_ecx, push_r8, lea_r8_[rip+0xa@@ 10@@ 5], push@@ _qword_ptr_[rsp+0x48], push_r14, call_rbx, add_rsp_0x50, jmp_0xfffffffffffffc@@ c9, call_0x10@@ 68, test_eax_eax, je_0x2@@ 71, mov_eax_dword_ptr_[rip+0x215@@ c0@@ d], cmp_eax_0xf, ja_0x1@@ d, cmp_eax_0xb, jne_0x2@@ 5d, mov_eax_dword_ptr_[rip+0x215@@ bf@@ 5], sub_eax@@ _6, cmp_eax_0x22, ja_0x2@@ 4b, or_dword_ptr_[r@@ 15+0x1@@ c]@@ _0x1000, jmp_0xfffffffffffff@@ 1a@@ 1, xor_ebx_ebx, jmp_0xfffffffffffff7f@@ 3, cmp_qword_ptr_[r12+0x@@ c0]_0, jne_0xf, mov_rbp_qword_ptr_[r@@ 15+0x28], test_rbp_rbp, jne_0x7@@ 56, mov_r14d_dword_ptr_[r@@ 12], mov_rbp_qword_ptr_[r@@ 12+0x@@ c0], test_rbp_rbp, je_0xfffffffffffff0@@ 87, jmp_0xfffffffffffff0@@ 6d, or_dword_ptr_[r@@ 15+0x1@@ c]@@ _0x800, jmp_0xfffffffffffff0@@ b2, mov_r11d_dword_ptr_[r@@ 12+0x@@ 88], test_r11d_r11d, je_0xffffffffffff@@ eb@@ 11, mov_edi@@ _0xb, mov_dword_ptr_[rsp]@@ _r10d, call_0xffffffffffff26@@ de, test_rax_rax, mov_r10d_dword_ptr_[rsp], mov_rbp_rax, je_0xa@@ 08, mov_rsi_qword_ptr_[r12+8], test_rsi_rsi, je_0x1a, mov_rdi_rax, mov_dword_ptr_[rsp]@@ _r10d, call_0xffffffffffff3@@ 588, test_eax_eax, mov_r10d_dword_ptr_[rsp], je_0x@@ 8c@@ c, mov_rsi_qword_ptr_[r12+0x@@ c0], test_rsi_rsi, je_0x1a, mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _r10d, call_0xffffffffffff3b@@ 03, test_eax_eax, mov_r10d_dword_ptr_[rsp], je_0x@@ 8a@@ 7, mov_eax_dword_ptr_[r12+0x@@ 30], mov_rdi_rbp, mov_dword_ptr_[rbp+0x@@ 30]_eax, mov_eax_dword_ptr_[r12+0x@@ 34], mov_dword_ptr_[rsp]@@ _r10d, mov_dword_ptr_[rbp+0x@@ 34]_eax, call_0xffffffffffffea@@ 1b, test_eax_eax, mov_r10d_dword_ptr_[rsp], je_0x@@ 87@@ f, mov_r13_qword_ptr_[r@@ bp+0x18], mov_rax_r13, jmp_0x13, mov_rdx_qword_ptr_[rax+0x20], test_rdx_rdx, je_0x@@ 85@@ 9, mov_rax_rdx, test_rax_rax, jne_0xffffffffffffffed, xor_eax_eax, mov_qword_ptr_[r12+0x@@ 90]_rax, mov_rax_qword_ptr_[rbp+0x@@ 50], mov_eax_dword_ptr_[rax+0x1c], and_eax_1, cmp_eax_dword_ptr_[r@@ 12+0x28], jne_0xae, mov_r14_qword_ptr_[r@@ 12+0x18], test_r13_r13, je_0x97, test_r14_r14, je_0x8e, mov_r15d@@ _r10d, mov_rbx_qword_ptr_[r@@ 13+0x18], mov_rdi_rbx, call_0xfffffffffffdd@@ f@@ 89, lea_rdx_[rax-1], test_rax_rax, jne_0x1d, jmp_0x24, dec@@ _rdx, mov_byte_ptr_[rax]_0, cmp_rdx_-1, je_0xf, mov_rbx_qword_ptr_[r@@ 13+0x18], lea_rax_[r@@ bx+rdx], cmp_byte_ptr_[rax]@@ _0x20, je_0xffffffffffffffe9, mov_rax_qword_ptr_[r13], cmp_qword_ptr_[r@@ 14@@ ]_rax, jne_0x4c, mov_rax_qword_ptr_[r13+8], cmp_qword_ptr_[r@@ 14@@ +8]_rax, jne_0x42, mov_rsi_qword_ptr_[r@@ 13+0x10], mov_rdi_qword_ptr_[r14+0x10], call_0xfffffffffffde@@ 2d@@ c, test_eax_eax, jne_0x31, mov_rsi_qword_ptr_[r13+0x18], mov_rdi_qword_ptr_[r@@ 14+0x18], call_0xfffffffffffde@@ 2c@@ b, test_eax_eax, jne_0x20, mov_r14_qword_ptr_[r@@ 14+0x20], mov_r13_qword_ptr_[r@@ 13+0x20], test_r14_r14, je_7, test_r13_r13, jne_0xffffffffffffff@@ 82, mov_r10d@@ _r15d, or@@ _r14@@ _r13, je_0xa@@ 9d, mov_rdi_rbp, call_0xffffffffffffd@@ e0@@ 1, mov_dword_ptr_[r12+0x@@ 88]_0, mov_rdi_r12, call_0xffffffffffffe@@ 90@@ d, mov_r10d_eax, jmp_0xffffffffffffe@@ 9e@@ 1, lea_r8_[rip+0x@@ 9c@@ 89], mov_ecx_0xffffffff, mov_edx_0x4@@ f1, mov_rbx_qword_ptr_[rsp], lea_rsi_[rip+0x@@ 94@@ 9c], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ bx], jmp_0xfffffffffffffb@@ 3f, mov_r11_qword_ptr_[rsp], lea_r8_[rip+0x@@ 9c@@ 05], xor_ecx_ecx, mov_edx_0x4@@ eb, lea_rsi_[rip+0x@@ 94@@ 6f], mov_edi_0x84, xor_eax_eax, call_qword_ptr_[r@@ 11], or_dword_ptr_[r@@ 15+0x1@@ c]@@ _0x1000, jmp_0xffffffffffffef@@ 39, mov_eax_dword_ptr_[r12+0x@@ 34], test_eax_eax, js_0xffffffffffff@@ ee@@ 2c, mov_r8d_dword_ptr_[r@@ 12+0x30], test_r8d_r8d, jns_0xffffffffffff@@ ee@@ 2c, jmp_0xffffffffffffee@@ 18, xor_edi_edi, mov_dword_ptr_[rsp]@@ _r10d, call_0xffffffffffff24@@ ca, test_rax_rax, mov_r10d_dword_ptr_[rsp], mov_rbp_rax, je_0x@@ 60@@ a, mov_rsi_qword_ptr_[r12+8], test_rsi_rsi, je_0x28, mov_rdi_rax, mov_dword_ptr_[rsp]@@ _r10d, call_0xffffffffffff3@@ 37@@ 4, xor_ecx_ecx, test_eax_eax, mov_r10d_dword_ptr_[rsp], lea_r8_[rip+0x@@ 66@@ 25], mov_edx_0x5@@ 93, je_0xaa, mov_rsi_qword_ptr_[r12+0x@@ c0], test_rsi_rsi, je_0x24, mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _r10d, call_0xffffffffffff38@@ e1, xor_ecx_ecx, test_eax_eax, mov_r10d_dword_ptr_[rsp], lea_r8_[rip+0x6@@ 5f@@ 2], mov_edx_0x5@@ 96, je_0x77, mov_eax_dword_ptr_[r12+0x@@ 30], mov_rdi_rbp, mov_dword_ptr_[rbp+0x@@ 30]_eax, mov_eax_dword_ptr_[r12+0x@@ 34], mov_dword_ptr_[rsp]@@ _r10d, mov_dword_ptr_[rbp+0x@@ 34]_eax, mov_eax_dword_ptr_[r12+0x@@ 3c], mov_dword_ptr_[rbp+0x@@ 3c]_eax, mov_eax_dword_ptr_[r12+0x@@ 40], mov_dword_ptr_[rbp+0x@@ 40]_eax, mov_eax_dword_ptr_[r12+0x@@ 44], mov_dword_ptr_[rbp+0x@@ 44]_eax, mov_eax_dword_ptr_[r12+0x@@ 2c], xor@@ _ax@@ _ax, mov_dword_ptr_[rbp+0x@@ 2c]_eax, mov_eax_dword_ptr_[r12+0x@@ 98], mov_dword_ptr_[rbp+0x@@ 9@@ 8]_eax, mov_eax_dword_ptr_[r12+0x@@ 8c], mov_dword_ptr_[rbp+0x@@ 8c]_eax, call_0xffffffffffffe@@ 7b@@ 0, test_eax_eax, mov_r10d_dword_ptr_[rsp], jne_0x12@@ e, lea_r8_[rip+0x6@@ 57@@ d], xor_ecx_ecx, mov_edx_0x5@@ a3, endbr64, lea_r9_[rip+0x@@ 14@@ 18@@ 6], lea_rsi_[rip+0x9@@ 33@@ 7], mov_edi_7, call_qword_ptr_[r9], mov_r10d_dword_ptr_[rsp], mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _r10d, call_0xffffffffffffdc@@ 4c, mov_r13d_dword_ptr_[r@@ 12+0x@@ 98], mov_r10d_dword_ptr_[rsp], test_r13d_r13d, je_0xffffffffffff@@ e8@@ 34, mov_edi_dword_ptr_[r@@ 12+0x@@ 2c], call_0xffffffffffffdb@@ 1d, mov_r10d_dword_ptr_[rsp], jmp_0xffffffffffffe@@ 8@@ 20, mov_esi_dword_ptr_[r@@ 12+0x@@ 34], lea_r10_[rip+0x@@ 1f@@ 5b], test_esi_esi, mov_edx_0, cmovns@@ _edx@@ _dword_ptr_[r@@ 12+0x@@ 34], mov_rdi_r10, mov_r9@@ _r10, xor_ecx_ecx, mov_r8@@ _r10, jmp_0xfffffffffffffb@@ 7a, mov_eax_dword_ptr_[r12+0x@@ 98], test_eax_eax, je_0xffffffffffffe@@ 85@@ b, mov_edi_dword_ptr_[r@@ 12+0x@@ 2c], call_0xffffffffffffda@@ c3, jmp_0xffffffffffffe@@ 84@@ b, mov_rbx_qword_ptr_[rsp], mov_ecx_0xffffffff, lea_r8_[rip+0x@@ 9d@@ 19], mov_edx@@ _0x80@@ 3, lea_rsi_[rip+0x9@@ 28@@ 5], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ bx], mov_ecx_dword_ptr_[r@@ 12], mov_edx_dword_ptr_[r12+0x@@ 98], xor_r8d_r8d, test_edx_edx, je_0xfffffffffffff@@ 66@@ d, jmp_0xfffffffffffff65@@ 3, mov_ecx_dword_ptr_[r12+0x@@ 34], lea_r10_[rip+0x@@ 1ec@@ 3], test_ecx_ecx, mov_edx_0, cmovns@@ _edx@@ _dword_ptr_[r@@ 12+0x@@ 34], mov_rdi_r10, mov_r9@@ _r10, xor_ecx_ecx, mov_r8@@ _r10, jmp_0xfffffffffffff7a@@ 8, mov_rdi_rbp, mov_dword_ptr_[rsp]@@ _r10d, call_0xffffffffffffdb@@ 50, mov_edi_1, call_0xffffffffffff22@@ b6, xor_ecx_ecx, test_rax_rax, mov_r10d_dword_ptr_[rsp], mov_rbp_rax, lea_r13_[r@@ 12+0x18], lea_r14_[r@@ 12+0x20], lea_r8_[rip+0x@@ 64@@ 29], mov_edx_0x5@@ a9, je_0x90, mov_rsi_qword_ptr_[r12+8], test_rsi_rsi, je_0x1a, mov_rdi_rax, mov_dword_ptr_[rsp]@@ _r10d, call_0xffffffffffff3@@ 148, test_eax_eax, mov_r10d_dword_ptr_[rsp], je_0x5@@ d7, mov_eax_dword_ptr_[r12+0x@@ 28], mov_rdi_rbp, mov_dword_ptr_[rbp+0x@@ 28]_eax, mov_rax_qword_ptr_[r12+0x18], mov_dword_ptr_[rsp]@@ _r10d, mov_qword_ptr_[rbp+0x18]_rax, mov_rax_qword_ptr_[r12+0x20], mov_qword_ptr_[rbp+0x20]_rax, mov_eax_dword_ptr_[r12+0x@@ a0], mov_dword_ptr_[rbp+0x@@ a@@ 0]_eax, call_0xffffffffffffe@@ 5e8, mov_qword_ptr_[rbp+0x@@ 18]_0, mov_qword_ptr_[rbp+0x@@ 20]_0, mov_ebx_eax, mov_rdi_rbp, call_0xffffffffffffd@@ aa@@ e, test_ebx_ebx, mov_r10d_dword_ptr_[rsp], jne_0x4@@ 8a, lea_r8_[rip+0x6@@ 39@@ b], xor_ecx_ecx, mov_edx_0x5@@ c2, lea_r9_[rip+0x@@ 13@@ fa@@ 8], xor_eax_eax, lea_rsi_[rip+0x9@@ 15@@ 7], mov_edi_7, call_qword_ptr_[r9], mov_r15d_dword_ptr_[r@@ 12+0x@@ 98], mov_r10d_dword_ptr_[rsp], test_r15d_r15d, je_0x10, mov_edi_dword_ptr_[r@@ 12+0x@@ 2c], call_0xffffffffffffd@@ 95@@ 1, mov_r10d_dword_ptr_[rsp], mov_dword_ptr_[r12@@ ]_2, mov_rdi_qword_ptr_[r12+0x@@ c0], mov_dword_ptr_[rsp]@@ _r10d, call_0xfffffffffffdd@@ b@@ 34, mov_qword_ptr_[r12+0x@@ c0]_0, mov_rdi_qword_ptr_[r12+0x@@ c8], call_0xfffffffffffdd@@ b@@ 1b, mov_qword_ptr_[r12+0x@@ c8]_0, mov_rsi_r14, mov_rdi_r13, call_0xffffffffffffd@@ 75@@ 4, mov_r14d_dword_ptr_[r@@ 12+0x@@ 98], mov_r10d_dword_ptr_[rsp], test_r14d_r14d, jne_0x4@@ 49, mov_rdi_r12, mov_dword_ptr_[rsp]@@ _r10d, call_0xffffffffffffe5@@ 13, test_eax_eax, mov_r10d_dword_ptr_[rsp], jne_0xffffffffffffe@@ 5e@@ 4, lea_r9_[rip+0x@@ 13@@ ef@@ b], lea_r8_[rip+0x@@ 94@@ b4], mov_ecx_0xffffffff, mov_edx_0x5@@ e8, lea_rsi_[rip+0x@@ 90@@ 9b], mov_edi_3, call_qword_ptr_[r9], xor_r10d_r10d, jmp_0xffffffffffffe@@ 5b@@ 4, mov_rdi_r12, call_0xffffffffffffe@@ 4d@@ 0, mov_r10d_eax, jmp_0xffffffffffffe@@ 5a@@ 4, lea_rax_[r@@ 15+0x30], mov_edi_0xd, mov_qword_ptr_[rsp+8]_rax, call_0xffffffffffff@@ 1fc@@ a, mov_r14_rax, test_rax_rax, je_0x1@@ 47, mov_rdi_rax, call_0xffffffffffffe@@ 36@@ 6, mov_rdi_r14, test_eax_eax, je_0x12f, call_0xffffffffffffd@@ ba@@ 6, test_rax_rax, je_0x1@@ 1e, mov_rsi_qword_ptr_[rax], test_rsi_rsi, je_0x112, xor_edx_edx, jmp_0x19, mov_edx_dword_ptr_[rax+8], test_edx_edx, je_0xfb, mov_rsi_qword_ptr_[r@@ ax+rdx], add_rax_rdx, cmp_rbp@@ _rsi, jne_0xffffffffffffffeb, mov_rbp_qword_ptr_[rsp+8], lea_rsi_[r@@ ax+0xc], mov_edx_0x80, mov_rdi_rbp, call_0xfffffffffffdd@@ d@@ 78, mov_rdi_r14, call_0xffffffffffffd7@@ e0, push_rbp, mov_eax_dword_ptr_[r12+0x@@ 34], lea_rsi_[rip+0x8@@ ea@@ 6], push_rax, lea_r8_[rip+0x@@ 95@@ 36], xor_ecx_ecx, mov_r11_qword_ptr_[rsp+0x10], mov_r9d_dword_ptr_[r@@ 12+0x30], mov_edx_0x4@@ c6, mov_edi_5, xor_eax_eax, call_qword_ptr_[r@@ 11], pop_r11, mov_rsi_qword_ptr_[r@@ 12+0x10], mov_rbp_qword_ptr_[r@@ 12+0x@@ c8], pop_r14, jmp_0xffffffffffffe@@ 8@@ 36, mov_r14d_dword_ptr_[r@@ 12], cmp_r14d@@ _5, jne_0xffffffffffffe@@ 840, mov_edx_dword_ptr_[r12+0x@@ 34], test_edx_edx, js_0xffffffffffff@@ e8@@ 33, cmp_dword_ptr_[r12+0x@@ 30]_0, jns_0xffffffffffff@@ e8@@ 35, mov_rsi_rax, jmp_0xffffffffffffe@@ 8@@ 1e, mov_rsi_qword_ptr_[r12+8], mov_r14d_dword_ptr_[r@@ 12], mov_rax_rsi, test_rsi_rsi, jne_0xffffffffffffffc6, jmp_0xffffffffffffe@@ 8@@ 16, cmp_byte_ptr_[rsi+@@ 2]_0, je_0xffffffffffffe@@ 4e@@ c, jmp_0xffffffffffffe@@ 50@@ a, mov_eax_dword_ptr_[r12+0x@@ 98], test_eax_eax, je_0x10, mov_edi_dword_ptr_[r@@ 12+0x@@ 2c], call_0xffffffffffffd6@@ 20, mov_r10d_dword_ptr_[rsp], mov_dword_ptr_[rsp]@@ _r10d, lea_r8_[rip+0x@@ 60@@ 21], xor_ecx_ecx, mov_edx_0x5@@ 8e, jmp_0xffffffffffffe@@ 2f@@ 5, mov_rdi_r14, call_0xffffffffffffd@@ 70d, mov_eax_dword_ptr_[r12+0x@@ 34], sub_rsp_8, push_rax, lea_r8_[rip+0x@@ 94@@ 9f], mov_ecx_0xffffffff, mov_rbx_qword_ptr_[rsp+0x10], mov_r9d_dword_ptr_[r@@ 12+0x30], mov_edx_0x4@@ c2, lea_rsi_[rip+0x@@ 8d@@ b4], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ bx], pop_r9, pop_r10, jmp_0xfffffffffffff@@ 45@@ 3, mov_rax_qword_ptr_[rsp+0x88], test_rax_rax, je_0xfffffffffffff@@ 2@@ 1f, test_edx_edx, jne_0xfffffffffffff@@ 2@@ 17, mov_esi_r8d, mov_rdi_rax, call_0xffffffffffff3e@@ 6b, jmp_0xfffffffffffff@@ 20@@ 6, lea_rsi_[rip+0x19@@ e9], test_eax_eax, mov_edx_0, cmovs@@ _eax_edx, mov_rdi_rsi, mov_r11@@ _rsi, xor_ecx_ecx, mov_r8_rsi, jmp_0xffffffffffffe@@ fc@@ d, mov_rdx_qword_ptr_[rax+8], add_rdx_qword_ptr_[r@@ ax], mov_rax_rdx, jmp_0xfffffffffffff7a@@ d, mov_rdi_rbp, call_0xffffffffffffd@@ 66@@ e, xor_r10d_r10d, jmp_0xffffffffffffe@@ 26@@ 2, mov_rdi_r12, call_0xffffffffffffe@@ 17@@ e, test_eax_eax, jne_0xffffffffffffe@@ 3f@@ 7, lea_r9_[rip+0x@@ 13@@ b6@@ a], lea_r8_[rip+0x@@ 5f@@ 48], xor_ecx_ecx, mov_edx_0x5@@ 2f, lea_rsi_[rip+0x@@ 8d@@ 0d], mov_edi_7, call_qword_ptr_[r9], jmp_0xffffffffffffe@@ 3c@@ d, lea_rbx_[rip+0x@@ 19@@ 70], mov_rbp_rbx, jmp_0xffffffffffffe@@ f7@@ 6, mov_dword_ptr_[r12@@ ]_5, mov_rdi_qword_ptr_[r12+0x@@ c0], mov_dword_ptr_[rsp]@@ _r10d, call_0xfffffffffffdd@@ 6f@@ 5, mov_qword_ptr_[r12+0x@@ c0]_0, mov_rdi_qword_ptr_[r12+0x@@ c8], call_0xfffffffffffdd@@ 6d@@ c, mov_qword_ptr_[r12+0x@@ c8]_0, mov_rsi_r14, mov_rdi_r13, call_0xffffffffffffd3@@ 15, mov_rdi_r12, call_0xffffffffffffe0@@ ed, test_eax_eax, mov_r10d_dword_ptr_[rsp], je_0xfffffffffffffb@@ 6a, jmp_0xfffffffffffff@@ 130, mov_edx_dword_ptr_[r12+0x@@ 2c], lea_rsi_[rsp+0x@@ 9c], movzx_eax@@ _dx, or_eax@@ _0x@@ d@@ 4d@@ 0000, shr_edx_0x10, mov_rdi_r12, mov_dword_ptr_[rsp+0x@@ 9c]_eax, call_0xffffffffffff6@@ 3e@@ 5, test_eax_eax, mov_r10d_dword_ptr_[rsp], jne_0xfffffffffffffb@@ 90, lea_r9_[rip+0x@@ 13@@ a@@ 9d], lea_r8_[rip+0x@@ 5e@@ 7b], xor_ecx_ecx, mov_edx_0x5@@ e4, lea_rsi_[rip+0x@@ 8c@@ 40], mov_edi_7, call_qword_ptr_[r9], mov_r10d_dword_ptr_[rsp], jmp_0xfffffffffffffb@@ 62, lea_r9_[rip+0x@@ 13@@ a@@ 70], lea_r8_[rip+0x@@ 90@@ 51], mov_ecx_0xffffffff, mov_edx_0x6@@ 01, lea_rsi_[rip+0x@@ 8c@@ 10], mov_edi_3, xor_eax_eax, call_qword_ptr_[r9], xor_r10d_r10d, jmp_0xffffffffffffe@@ 12@@ 7, lea_r9_[rip+0x@@ 13@@ a@@ 3f], xor_ecx_ecx, lea_r8_[rip+0x@@ 5e@@ 1b], mov_edx_0x5@@ b0, lea_rsi_[rip+0x8b@@ e2], mov_edi_7, call_qword_ptr_[r9], mov_rdi_rbp, call_0xffffffffffffd4@@ ff, mov_eax_dword_ptr_[r12+0x@@ 98], mov_r10d_dword_ptr_[rsp], test_eax_eax, je_0xfffffffffffffa@@ 94, jmp_0xfffffffffffffa@@ 80, mov_r15_qword_ptr_[rsp+0x18], mov_r12_qword_ptr_[rsp+0x20], jmp_0xfffffffffffff@@ 23@@ 9, lea_rax_[rip+0x13@@ 9a@@ 1], mov_rbp_qword_ptr_[rax], call_0xfffffffffffdd@@ 8a@@ e, mov_edi_dword_ptr_[rax], call_0xfffffffffffdd@@ 6c@@ 7, mov_r8_rax, cmp_byte_ptr_[rbx]_0, lea_rdx_[rip+0x17@@ b4], lea_rax_[rip+0x@@ 5d@@ 2b], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rdi_[rip+0x@@ 60@@ 1e], mov_r9_rbx, push_rdi, lea_r8_[rip+0x@@ 5f@@ 21], mov_ecx_0xffffffff, push_rax, mov_edx_0x5@@ 34, lea_rsi_[rip+0x8b@@ 08], mov_edi_3, xor_eax_eax, call_rbp, add_rsp_0x20, jmp_0xffffffffffffe@@ 23@@ e, mov_r10d@@ _r14d, jmp_0xffffffffffffe@@ 25@@ f, lea_rax_[rip+0x13@@ 8e@@ 1], mov_rbp_qword_ptr_[rax], call_0xfffffffffffdd@@ 7e@@ e, mov_edi_dword_ptr_[rax], call_0xfffffffffffdd@@ 607, mov_r8_rax, cmp_byte_ptr_[rbx]_0, lea_rdx_[rip+0x16@@ f4], lea_rax_[rip+0x@@ 5c@@ 6b], cmove_rax_rdx, sub_rsp_8, push_r8, lea_rdi_[rip+0x5@@ ea@@ b], mov_r9_rbx, push_rdi, lea_r8_[rip+0x@@ 5e@@ 61], mov_ecx_0xffffffff, push_rax, mov_edx_0x5@@ 1f, jmp_0xffffffffffffff40, call_0xfffffffffffdd@@ 80@@ 2, mov_rax_qword_ptr_[rbp+0x@@ 50], mov_rdi_rbp, mov_qword_ptr_[r12+0x@@ 50]_rax, mov_qword_ptr_[rbp+0x@@ 50]_0, mov_dword_ptr_[rsp]@@ _r10d, call_0xffffffffffffd@@ 35@@ 5, mov_r10d_dword_ptr_[rsp], jmp_0xffffffffffffd@@ f@@ 48, mov_rdi_qword_ptr_[r12+0x@@ 60], test_rax_rax, je_0x30, xor_r13d_r13d, lea_r8_[rip+0x@@ 90@@ 13], mov_ecx_0xffffffff, mov_edx_0x4@@ 89, test_rdi_rdi, je_0xffffffffffffe@@ 5a@@ e, call_0xfffffffffffdd@@ 4@@ 20, lea_rbx_[r@@ ax+0x1@@ 41], jmp_0xffffffffffffe@@ 27@@ 3, mov_ebx@@ _0x1@@ 38, xor_r13d_r13d, test_rdi_rdi, jne_0xffffffffffffffe4, jmp_0xffffffffffffe@@ 26@@ 1
push_r13, push_r12, mov_r12_rsi, push_rbp, push_rbx, mov_rbx_rdi, mov_edi_7, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, call_0xffffffffffff1a@@ 3b, test_rax_rax, je_0x1@@ db, mov_rbp_rax, test_r12_r12, je_0x1@@ 7f, mov_rax_r12, shr_rax@@ _8, and_eax@@ _0xfff, mov_dword_ptr_[rbp+0x@@ 30]_eax, mov_rax_r12, shr_rax@@ _0xc, and_eax@@ _0xfff@@ 00, movzx_edx@@ _r12b, or_eax_edx, mov_dword_ptr_[rbp+0x@@ 34]_eax, mov_eax_dword_ptr_[rbx+0x@@ 3c], mov_rdi_rbp, mov_dword_ptr_[rbp+0x@@ 3c]_eax, mov_eax_dword_ptr_[rbx+0x@@ 40], mov_dword_ptr_[rbp+0x@@ 40]_eax, mov_eax_dword_ptr_[rbx+0x@@ 44], mov_dword_ptr_[rbp+0x@@ 44]_eax, mov_eax_dword_ptr_[rbx+0x@@ 2c], xor@@ _ax@@ _ax, mov_dword_ptr_[rbp+0x@@ 2c]_eax, mov_eax_dword_ptr_[rbx+0x@@ 98], mov_dword_ptr_[rbp+0x@@ 9@@ 8]_eax, mov_eax_dword_ptr_[rbx+0x@@ 8c], mov_dword_ptr_[rbp+0x@@ 8c]_eax, call_0xffffffffffffdd@@ 77, mov_r13d_eax, test_eax_eax, je_0x1@@ 5d, mov_rsi_rsp, mov_rdi_rbp, call_0xffffffffffffd4@@ 31, test_eax_eax, je_0xd2, mov_edi_dword_ptr_[r@@ sp], test_edi_edi, je_0xc7, mov_esi_dword_ptr_[rsp+4], test_esi_esi, je_0x1@@ 43, lea_rax_[rip+0x13@@ 7@@ 36], mov_ecx_dword_ptr_[rsp+0x1c], mov_r10_qword_ptr_[r@@ ax], mov_edx_dword_ptr_[rsp+0x18], test_r12_r12, je_0x1@@ 88, mov_edi_dword_ptr_[r@@ bx+0x30], mov_eax_dword_ptr_[rbx+0x@@ 34], test_edi_edi, jle_0x@@ 1c@@ a, lea_r11_[rip+0x@@ 6@@ 13@@ 2], test_eax_eax, je_0x11, mov_esi_0, cmovs@@ _eax@@ _esi, lea_r11_[rip+0x@@ 15@@ 29], lea_r8_[rip+0x@@ 56@@ 3a], lea_r13_[rip+0x@@ 87@@ 3e], lea_r12_[rip+0x@@ 87@@ 3a], mov_rsi_qword_ptr_[rbx+0x@@ c8], test_rsi_rsi, je_0x1@@ d3, mov_r9_qword_ptr_[r@@ bx+0x10], test_r9_r9, je_0x1@@ a6, sub_rsp_8, push_rcx, mov_ecx_0xffffffff, push_rdx, mov_edx_0x6@@ 76, push_r13, mov_r13d_1, push_r11, push_rax, xor_eax_eax, push_r8, lea_r8_[rip+0x9@@ 35@@ a], push_rdi, mov_edi_3, push_r12, push_rsi, lea_rsi_[rip+0x@@ 88@@ 4a], call_r10, add_rsp_0x50, mov_rdi_rbp, call_0xffffffffffffd@@ 16@@ 5, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ 86, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, ret, mov_rsi_qword_ptr_[rbx+8], test_rsi_rsi, je_0xe, mov_rdi_rax, call_0xffffffffffff27@@ 6c, test_eax_eax, je_0x35, mov_rsi_qword_ptr_[rbx+0x@@ c0], test_rsi_rsi, je_0xe, mov_rdi_rbp, call_0xffffffffffff2c@@ f4, test_eax_eax, je_0x1d, mov_eax_dword_ptr_[rbx+0x@@ 30], mov_dword_ptr_[rbp+0x@@ 30]_eax, mov_eax_dword_ptr_[rbx+0x@@ 34], mov_dword_ptr_[rbp+0x@@ 34]_eax, jmp_0xfffffffffffffe@@ 72, xor_r13d_r13d, jmp_0xffffffffffffff85, xor_r13d_r13d, jmp_0xffffffffffffff85, mov_rdi_rbp, call_0xffffffffffffd4@@ 3d, mov_r12_rax, test_rax_rax, je_0xffffffffffffff@@ 6a, mov_eax_dword_ptr_[rax], xor_ebx_ebx, test_eax_eax, jne_0x16, jmp_0x8@@ 4, inc_ebx, cmp_dword_ptr_[r@@ 12]@@ _ebx, jbe_0x@@ 72, mov_eax_ebx, mov_rsi_qword_ptr_[r@@ 12@@ +rax*8+8], mov_edx_dword_ptr_[rip+0x2@@ 14@@ c7@@ b], mov_rax_rsi, shr_rax@@ _8, and_eax@@ _0xfff, cmp_rax_rdx, jne_0xffffffffffffffdc, mov_rdi_rbp, call_0xfffffffffffffd@@ 9f, test_eax_eax, jne_0xffffffffffffffd0, jmp_0xffffffffffffff1e, sub_rsp_8, push_rcx, mov_r9d_edx, mov_ecx_4, mov_edx_0x6@@ 73, lea_r8_[rip+0x9@@ 1f@@ 7], lea_rsi_[rip+0x@@ 87@@ 38], mov_edi_7, xor_eax_eax, call_r10, pop_rdx, pop_rcx, mov_r13d_1, jmp_0xfffffffffffffee6, mov_r13d_1, jmp_0xfffffffffffffe@@ d2, lea_r8_[rip+0x13@@ 78], test_eax_eax, mov_esi_0, cmovs@@ _eax@@ _esi, mov_r11@@ _r8, mov_r13_r8, xor_edi_edi, mov_r12_r8, jmp_0xfffffffffffffe@@ 4f, mov_r9_qword_ptr_[r@@ bx+8], test_r9_r9, jne_0xfffffffffffffe@@ 59, lea_r9_[rip+0x@@ 13@@ 43], jmp_0xfffffffffffffe@@ 4c, mov_rsi_qword_ptr_[rbx+0x@@ c0], test_rsi_rsi, jne_0xfffffffffffffe@@ 29, lea_rsi_[rip+0x13@@ 20], jmp_0xfffffffffffffe@@ 1c, call_0xfffffffffffdd@@ 45@@ c
endbr64, push_r13, pxor_xmm0_xmm0, push_r12, push_rbp, push_rbx, sub_rsp_0x98, mov_r12d_dword_ptr_[rip+0x2@@ 14@@ b@@ 74], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, movaps_xmmword_ptr_[rsp]_xmm0, movaps_xmmword_ptr_[rsp+0x10]_xmm0, movaps_xmmword_ptr_[rsp+0x20]_xmm0, movaps_xmmword_ptr_[rsp+0x30]_xmm0, movaps_xmmword_ptr_[rsp+0x40]_xmm0, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm0, movaps_xmmword_ptr_[rsp+0x70]_xmm0, test_r12d_r12d, je_0x37, mov_r12d@@ _dword_ptr_[rip+0x@@ 13@@ 6d@@ e], mov_rax_qword_ptr_[rsp+0x88], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ 79, add_rsp_0x98, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, mov_edi@@ _9, mov_dword_ptr_[rip+0x2@@ 14@@ af@@ 1]_1, call_0xffffffffffff16@@ 91, mov_rbp_rax, test_rax_rax, je_0x10e, mov_rdi_rax, call_0xffffffffffffda@@ 2d, lea_rsi_[rsp+0x40], mov_edx_0x40, mov_rdi_rbp, mov_ebx_eax, call_0xffffffffffffc@@ f7@@ 9, test_eax_eax, jne_0x27, lea_r13_[rip+0x@@ 13@@ 40@@ 9], lea_r8_[rip+0x@@ 57@@ e7], xor_ecx_ecx, mov_edx_0x2@@ 32, lea_rsi_[rip+0x8@@ 5a@@ c], mov_edi_7, call_qword_ptr_[r@@ 13], mov_rdi_rbp, call_0xffffffffffffc@@ ec8, mov_dword_ptr_[rip+0x2@@ 14@@ aa@@ 9]_0, test_ebx_ebx, je_0x17, mov_r12d_1, jmp_0xffffffffffffff51, lea_r13_[rip+0x@@ 13@@ 3b@@ 9], mov_rbx_rsp, xor_ecx_ecx, lea_r8_[rip+0x@@ 57@@ 92], mov_edx_0x2@@ 4b, xor_eax_eax, lea_rsi_[rip+0x8@@ 55@@ 7], mov_edi_7, call_qword_ptr_[r@@ 13], mov_esi_0x40, mov_rdi_rbx, call_0xffffffffffff14@@ be, cmp_byte_ptr_[rsp+0x@@ 40]_0, lea_rax_[rsp+0x40], lea_r9_[rip+0x@@ 8@@ 47@@ e], cmove_rax@@ _r9, mov_r10_qword_ptr_[r@@ 13], cmp_byte_ptr_[r@@ sp]_0, push_rax, lea_rax_[rip+0x@@ 11@@ 93], cmovne@@ _r9@@ _rbx, push_rax, mov_edx_0x2@@ 5a, xor_eax_eax, lea_r8_[rip+0x@@ 90@@ a1], mov_ecx_0xffffffff, lea_rsi_[rip+0x@@ 84@@ fd], mov_edi_3, call_r10, pop_rax, mov_dword_ptr_[rip+0x@@ 13@@ 5@@ 92@@ ]_0, pop_rdx, jmp_0xfffffffffffffe@@ b3, lea_r13_[rip+0x@@ 13@@ 32@@ 1], lea_r8_[rip+0x@@ 90@@ 42], mov_ecx_0xffffffff, mov_edx_0x2@@ 28, lea_rsi_[rip+0x8@@ 4c@@ 1], mov_edi_3, xor_eax_eax, call_qword_ptr_[r@@ 13], mov_byte_ptr_[rsp+0x@@ 40]_0, jmp_0xffffffffffffff40, call_0xfffffffffffdd@@ 26@@ 4
endbr64, sub_rsp_8, call_0xfffffffffffffd@@ f8, test_eax_eax, je_0xe, xor_eax_eax, cmp_dword_ptr_[rip+0x2@@ 14@@ 9@@ 9e@@ ]@@ _0xe, seta_al, add_rsp_8, ret
endbr64, xor_eax_eax, test_edi_edi, setne_al, mov_dword_ptr_[rip+0x2@@ 14@@ 95@@ 3]_eax, lea_rax_[rip+0x13@@ 298], lea_r9_[rip+0x@@ 10@@ c0], mov_r10_qword_ptr_[r@@ ax], lea_rax_[rip+0x@@ 12@@ 15], cmove@@ _r9_rax, lea_r8_[rip+0x9@@ 00@@ 4], xor_ecx_ecx, mov_edx_0x8@@ 51, lea_rsi_[rip+0x@@ 84@@ 26], mov_edi_7, xor_eax_eax, jmp@@ _r1@@ 0
endbr64, mov_eax_dword_ptr_[rip+0x214@@ 90@@ a], push_rbx, test_eax_eax, je_0x23, mov_rdi_qword_ptr_[rip+0x2@@ 14@@ 9@@ 12], call_0x2@@ ea, pop_rbx, mov_qword_ptr_[rip+0x2@@ 14@@ 90@@ 1]_0, jmp_0xffffffffffff@@ 55@@ 59, mov_edi_dword_ptr_[rip+0x@@ 13@@ 48@@ e], cmp_edi_-1, je_0xffffffffffffffd6, call_0xfffffffffffd@@ ca@@ e5, test_eax_eax, js@@ _0xe, mov_dword_ptr_[rip+0x@@ 13@@ 47@@ 6]@@ _0xffffffff, jmp_0xffffffffffffffc1, lea_rax_[rip+0x13@@ 20@@ 9], mov_rbx_qword_ptr_[rax], call_0xfffffffffffdd@@ 11@@ 6, mov_edi_dword_ptr_[rax], call_0xfffffffffffd@@ cf@@ 2f, sub_rsp_8, push_rax, lea_rax_[rip+0x5@@ 2e@@ 9], lea_r9_[rip+0x@@ 82@@ ff], push_rax, lea_rax_[rip+0x5@@ 58@@ c], lea_r8_[rip+0x@@ 57@@ 97], push_rax, mov_ecx_0xffffffff, mov_edx_0x1@@ 90, lea_rsi_[rip+0x8@@ 37@@ e], mov_edi_3, xor_eax_eax, call_rbx, add_rsp_0x20, jmp_0xffffffffffffff9@@ d
endbr64, push_rbx, mov_rbx_rsi, sub_rsp_0x40, mov_rsi_rsp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, call_0xffffffffffffce@@ 61, test_eax_eax, je_0x22, mov_rax_qword_ptr_[rsp+0x20], movdqa_xmm0_xmmword_ptr_[r@@ sp], movdqa_xmm1_xmmword_ptr_[r@@ sp+0x10], mov_qword_ptr_[rbx+0x20]_rax, movups_xmmword_ptr_[r@@ bx@@ ]_xmm0, movups_xmmword_ptr_[r@@ bx+0x1@@ 0@@ ]_xmm1, mov_eax_1, mov_rdx_qword_ptr_[rsp+0x38], xor_rdx_qword_ptr_fs:[0x28], jne_8, add_rsp_0x40, pop_rbx, ret, call_0xfffffffffffdd@@ 0@@ c@@ 2
endbr64, push_rbx, mov_rbx_rsi, sub_rsp_0x40, mov_rsi_rsp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, call_0xffffffffffffcd@@ f1, test_eax_eax, je_0x29, mov_rax_qword_ptr_[rsp+0x20], movdqa_xmm0_xmmword_ptr_[r@@ sp], mov_qword_ptr_[rbx+0x20]_rax, movdqa_xmm1_xmmword_ptr_[r@@ sp+0x10], mov_eax_dword_ptr_[rsp+0x28], movups_xmmword_ptr_[r@@ bx@@ ]_xmm0, mov_dword_ptr_[rbx+0x@@ 28]_eax, movups_xmmword_ptr_[r@@ bx+0x1@@ 0@@ ]_xmm1, mov_eax_1, mov_rdx_qword_ptr_[rsp+0x38], xor_rdx_qword_ptr_fs:[0x28], jne_8, add_rsp_0x40, pop_rbx, ret, call_0xfffffffffffdd@@ 0@@ 4@@ b
endbr64, push_r12, mov_esi_0x10, mov_edi_1, call_0xfffffffffffdd@@ 0@@ d0, mov_r12_rax, test_rax_rax, je_8, mov_rax_r12, pop_r12, ret, lea_r9_[rip+0x@@ 130@@ a6], lea_r8_[rip+0x@@ 54@@ 84], xor_ecx_ecx, mov_edx_0x3@@ a, lea_rsi_[rip+0x8@@ f7@@ 9], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], jmp_0xffffffffffffffd@@ 4
endbr64, xor_eax_eax, test_rdi_rdi, je_0x2f, push_rbp, mov_rsi_rdi, push_rbx, mov_rbx_rdi, mov_edi_1, sub_rsp_8, call_0xfffffffffffdc@@ 99@@ 4, mov_r8d_eax, mov_eax_1, test_r8d_r8d, jne_0x14, add_rsp_8, pop_rbx, pop_rbp, ret, ret, lea_rax_[rip+0x@@ 130@@ 39], mov_rbp_qword_ptr_[rax], call_0xfffffffffffd@@ cf@@ 46, mov_edi_dword_ptr_[rax], call_0xfffffffffffd@@ cd@@ 5f, sub_rsp_8, push_rax, lea_rax_[rip+0x@@ 8e@@ f8], lea_r9_[rip+0x@@ 8@@ ee@@ 3], push_rax, lea_rax_[rip+0x5@@ 3b@@ c], lea_r8_[rip+0x5@@ 5c@@ 7], push_rax, mov_ecx_0xffffffff, xor_eax_eax, mov_edx_0x4@@ 5, lea_rsi_[rip+0x8@@ ed@@ c], mov_edi_3, call_rbp, mov_qword_ptr_[rbx]_0, mov_qword_ptr_[rbx+8]_0, add_rsp_0x20, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret
endbr64, imul_rdx@@ _qword_ptr_[r@@ di]@@ _0x3@@ b9a@@ ca@@ 00, imul_rcx@@ _qword_ptr_[r@@ si@@ ]@@ _0x3@@ b9a@@ ca@@ 00, xor_eax_eax, add_rdx_qword_ptr_[r@@ di+8], add_rcx_qword_ptr_[r@@ si+8], cmp_rcx_rdx, seta_al, neg_eax, cmp_rcx_rdx, mov_edx_1, cmovb@@ _eax_edx, ret
endbr64, imul_rcx@@ _qword_ptr_[r@@ si@@ ]@@ _0x3@@ b9a@@ ca@@ 00, imul_rdx@@ _qword_ptr_[r@@ di]@@ _0x3@@ b9a@@ ca@@ 00, add_rcx_qword_ptr_[r@@ si+8], add_rdx_qword_ptr_[r@@ di+8], mov_rsi_rdx, mov_rax_rcx, sub_rsi_rcx, sub_rax_rdx, cmp_rcx_rdx, cmovb@@ _rax@@ _rsi, ret
endbr64, movdqu_xmm0_xmmword_ptr_[rsi], movups_xmmword_ptr_[r@@ di@@ ]_xmm0, ret
endbr64, jmp_0xfffffffffffd@@ cb@@ 2@@ c
endbr64, push_rbx, mov_ebx_esi, shr_esi@@ _5, add_esi@@ _2, shl_rsi@@ _2, test_rdi_rdi, je_0x14, call_0xffffffffffffb7@@ 9a, test_rax_rax, je_4, mov_dword_ptr_[rax]@@ _ebx, pop_rbx, ret, mov_edi_1, call_0xfffffffffffd@@ cf@@ 33, jmp_0xffffffffffffffe@@ 9
endbr64, jmp_0xfffffffffffd@@ ca@@ d@@ c
endbr64, mov_eax_dword_ptr_[rdi], shr_eax@@ _5, inc_eax, mov_edx_dword_ptr_[r@@ si@@ +rax*4], cmp_dword_ptr_[r@@ di@@ +rax*@@ 4]_edx, jne_0x12, dec_rax, test_eax_eax, jne_0xfffffffffffffff3, mov_eax_1, ret, xor_eax_eax, ret
endbr64, mov_eax_dword_ptr_[rsi], shr_eax@@ _5, inc_eax, mov_ecx_dword_ptr_[r@@ si@@ +rax*4], and_ecx@@ _dword_ptr_[r@@ dx+rax*4], mov_dword_ptr_[rdi@@ +rax*@@ 4]_ecx, dec_rax, test_eax_eax, jne_0xfffffffffffffff2, ret
endbr64, mov_eax_dword_ptr_[rsi], shr_eax@@ _5, inc_eax, mov_ecx_dword_ptr_[r@@ si@@ +rax*4], or_ecx@@ _dword_ptr_[r@@ dx+rax*4], mov_dword_ptr_[rdi@@ +rax*@@ 4]_ecx, dec_rax, test_eax_eax, jne_0xfffffffffffffff2, ret
endbr64, lea_ecx_[r@@ si+1], mov_esi_dword_ptr_[r@@ di], cmp_ecx_esi, jge_0x@@ 35, mov_eax_ecx, sar_eax@@ _5, cdqe, mov_edx_dword_ptr_[r@@ di@@ +rax*4@@ +4], mov_r8d_ecx, shr_edx_cl, and_r8d@@ _0x1f, test_edx_edx, je_0x2d, bsf@@ _edx_edx, mov_ecx_0xffffffff, cmove@@ _edx_ecx, shl_eax@@ _5, add_edx@@ _r8d, add_eax_edx, ret, mov_eax_0xffffffff, ret, and_ecx@@ _0xffffff@@ e0, add_ecx@@ _0x20, cmp_ecx_esi, jge_0xffffffffffffff@@ e8, mov_eax_ecx, sar_eax@@ _5, cdqe, mov_edx_dword_ptr_[r@@ di@@ +rax*4@@ +4], test_edx_edx, je_0xffffffffffffffe9, xor_r8d_r8d, jmp_0xffffffffffffffb@@ 9
endbr64, mov_eax_esi, dec_eax, js_0x5@@ 1, mov_r9d@@ _0x1f, jmp_0x10, and_eax_0xffffff@@ e0, lea_eax@@ _[rax-1], je_0x3a, mov_esi_eax, sar_esi@@ _5, movsxd_rsi_esi, mov_r8d_eax, mov_edx_dword_ptr_[r@@ di+r@@ si@@ *4+4], and_r8d@@ _0x1f, mov_ecx_r9d, sub_ecx@@ _r8d, shl_edx_cl, test_edx_edx, je_0xffffffffffffffdb, bs@@ r@@ _edx_edx, xor_edx@@ _0x1f, sub_r8d@@ _edx, js_0xffffffffffffff@@ d0, shl_esi@@ _5, lea_eax_[r@@ si+r@@ 8], ret, ret, mov_eax_0xffffffff, ret
endbr64, mov_esi_0xffffffff, jmp_0xffffffffffffff2@@ 7
endbr64, mov_eax_dword_ptr_[rdi], lea_esi_[rax+1], jmp_0xffffffffffffff8@@ 7
endbr64, push_r15, push_r14, push_r13, xor_r13d_r13d, push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_0x28, mov_qword_ptr_[rsp+8]_rsi, mov_qword_ptr_[rsp+0x18]_rdx, mov_rdi_r12, call_0xfffffffffffdc@@ 93@@ b, mov_dword_ptr_[rsp+0x14]_0, mov_rbx_rax, mov_rbp_r12, xor_r15d_r15d, xor_r14d_r14d, test_rbx_rbx, je_0x1@@ ca, call_0xfffffffffffdc@@ 999, mov_r8_qword_ptr_[rax], mov_edi_r15d, xor_r9d_r9d, mov_r10d_1, xor_esi_esi, xor_ecx_ecx, jmp_0x5@@ e, cmp_edx@@ _0x2c, sete@@ _r11b, test_edx_edx, je_0x1@@ 7f, test_r11b_r11b, jne_0x1@@ 76, cmp_r15d@@ _edi, je_0xe, test_byte_ptr_[r@@ 8+r@@ 14*@@ 2+1]_0x20, jne_0x1@@ ed, cmp_edx@@ _0x2d, je_0xc4, test_ah_8, je_0x1@@ ee, lea_eax_[r@@ si+r@@ si*4], test_r9d_r9d, lea_esi_[rdx@@ +rax*2@@ -0x30], cmove@@ _ecx@@ _esi, movsxd_r14@@ _edx, inc@@ _edi, xor_r10d_r10d, test_rbx_rbx, je_0x1f, movsx_rdx_byte_ptr_[r@@ bp], inc_rbp, movzx_eax_word_ptr_[r@@ 8@@ +rdx*2], dec@@ _rbx, test_ah@@ _0x20, je_0xffffffffffffff@@ 98, movsxd_r14@@ _edx, test_rbx_rbx, jne_0xffffffffffffffe5, cmp_edi@@ _r15d, je_0x12@@ e, test_r9d_r9d, je_0xb, test_r10d_r10d, jne_0x1@@ ce, cmp_esi_ecx, jb_0x1@@ b3, mov_edx_dword_ptr_[rsp+0x14], lea_eax_[r@@ si+1], cmp_edx_esi, cmova@@ _eax_edx, cmp_r14d@@ _0x2c, sete@@ _r11b, test_rbx_rbx, mov_dword_ptr_[rsp+0x14]_eax, setne_al, and_r11d@@ _eax, test_r13_r13, je_0xe5, mov_eax_ecx, mov_edx_1, shl_edx_cl, shr_eax@@ _5, inc@@ _ecx, or_dword_ptr_[r@@ 13@@ +rax*4@@ +@@ 4]_edx, cmp_ecx_esi, jbe_0xffffffffffffff@@ eb, test_r11b_r11b, je_0x62, mov_r15d@@ _edi, mov_r14d@@ _0x2c, jmp_0xfffffffffffffef1, or_r9d@@ _r10d, je_0x65, lea_r8_[rip+0x5@@ 00@@ 1], xor_ecx_ecx, mov_edx_0x@@ c2, endbr64, lea_r9_[rip+0x@@ 12@@ c0@@ a], xor_eax_eax, lea_rsi_[rip+0x8b@@ 09], mov_edi_7, call_qword_ptr_[r9], test_r13_r13, je_0x1a, mov_rax_qword_ptr_[rsp+8], test_rax_rax, je_0x4c, mov_rsi_r13, mov_rdi_rax, call_0xffffffffffffb0@@ f4, xor_r13d_r13d, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, mov_rax_r13, pop_r13, pop_r14, pop_r15, ret, mov_r14d@@ _0x2d, mov_r9d_1, mov_r10d_1, xor_esi_esi, jmp_0xfffffffffffffe@@ e4, mov_rdi_r13, call_0xfffffffffffffc@@ 8d, xor_r13d_r13d, jmp_0xffffffffffffffb9, cmp_r15d@@ _edi, jne_0xa@@ b, test_rbx_rbx, setne_al, and_r11d@@ _eax, test_r11b_r11b, jne_0xffffffffffffff@@ 3f, test_r13_r13, jne_0xffffffffffffff@@ 96, mov_rcx_qword_ptr_[rsp+0x18], test_rcx_rcx, je_0x14, movsxd_rax_dword_ptr_[r@@ sp+0x14], mov_rdi_rax, cmp_rax_rcx, cmovb@@ _edi@@ _ecx, mov_dword_ptr_[rsp+0x1@@ 4]_edi, mov_esi_dword_ptr_[rsp+0x14], mov_rdi_qword_ptr_[rsp+8], call_0xfffffffffffffb@@ fb, mov_r13_rax, test_rax_rax, jne_0xfffffffffffffd@@ e2, lea_r9_[rip+0x@@ 12@@ b@@ 33], lea_r8_[rip+0x@@ 4f@@ 11], xor_ecx_ecx, mov_edx_0x@@ e6, lea_rsi_[rip+0x@@ 8a@@ 26], mov_edi_7, xor_eax_eax, call_qword_ptr_[r9], jmp_0xffffffffffffff38, lea_r8_[rip+0x4@@ ee@@ 6], xor_ecx_ecx, mov_edx_0x@@ be, jmp_0xfffffffffffffee5, lea_r8_[rip+0x4@@ ed@@ 3], xor_ecx_ecx, mov_edx_0x@@ ca, jmp_0xfffffffffffffe@@ d2, mov_r14d_edx, jmp_0xfffffffffffffe@@ 42, lea_r8_[rip+0x4@@ eb@@ 8], xor_ecx_ecx, mov_edx_0x@@ d8, jmp_0xfffffffffffffeb7, lea_r8_[rip+0x4@@ ea@@ 5], xor_ecx_ecx, mov_edx_0x@@ d6, jmp_0xfffffffffffffea@@ 4
endbr64, xor_edx_edx, jmp_0xfffffffffffffd@@ 2@@ a
endbr64, mov_qword_ptr_[rdi+@@ 8]_rdi, mov_qword_ptr_[rdi@@ ]_rdi, ret
endbr64, cmp_qword_ptr_[rdi]_0, je_0x19, mov_rax_qword_ptr_[rdi+8], mov_qword_ptr_[rsi@@ ]_rdi, mov_qword_ptr_[rsi+8]_rax, mov_rax_qword_ptr_[rdi+8], mov_qword_ptr_[rax]_rsi, mov_qword_ptr_[rdi+@@ 8]_rsi, ret, push_rax, lea_rcx_[rip+0x8@@ 9d@@ f], mov_edx_0x2@@ 4, lea_rsi_[rip+0x8@@ 98@@ 5], lea_rdi_[rip+0x8@@ 99@@ 6], call_0xfffffffffffdc@@ 42@@ 4
endbr64, mov_rax_qword_ptr_[rdi], test_rax_rax, je_0x11, mov_qword_ptr_[rsi]_rax, mov_qword_ptr_[rsi+@@ 8]_rdi, mov_qword_ptr_[rax+@@ 8]_rsi, mov_qword_ptr_[rdi@@ ]_rsi, ret, push_rax, lea_rcx_[rip+0x8@@ 98@@ 5], mov_edx_0x3@@ 3, lea_rsi_[rip+0x8@@ 93@@ b], lea_rdi_[rip+0x8@@ 94@@ c], call_0xfffffffffffdc@@ 3d@@ a
endbr64, mov_rdx_qword_ptr_[rdi], mov_rax_qword_ptr_[rdi+8], mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[rax]_rdx, ret
endbr64, push_r12, mov_r12_rdi, mov_rdi_rsi, push_rbp, mov_rbp_rsi, sub_rsp_8, call_0xffffffffffffff@@ cc, add_rsp_8, mov_rsi_rbp, pop_rbp, mov_rdi_r12, pop_r12, jmp_0xffffffffffffff2@@ a
endbr64, xor_eax_eax, cmp_qword_ptr_[rdi]@@ _rdi, sete_al, ret
endbr64, xor_eax_eax, cmp_qword_ptr_[r@@ si+@@ 8]_rdi, sete_al, ret
endbr64, xor_eax_eax, cmp_qword_ptr_[rsi@@ ]_rdi, sete_al, ret
endbr64, push_rbx, mov_rbx_rdi, call_0xffffffffffffff@@ c8, mov_r8d_eax, xor_eax_eax, test_r8d_r8d, jne_5, mov_rax_qword_ptr_[rbx], pop_rbx, ret
endbr64, push_rbx, mov_rbx_rdi, call_0xffffffffffffff@@ a8, mov_r8d_eax, xor_eax_eax, test_r8d_r8d, jne_6, mov_rax_qword_ptr_[rbx+8], pop_rbx, ret
endbr64, push_rbx, mov_rbx_rsi, call_0xffffffffffffff@@ 98, mov_r8d_eax, xor_eax_eax, test_r8d_r8d, jne_6, mov_rax_qword_ptr_[rbx+8], pop_rbx, ret
endbr64, push_rbx, mov_rbx_rsi, call_0xffffffffffffff@@ 88, mov_r8d_eax, xor_eax_eax, test_r8d_r8d, jne_5, mov_rax_qword_ptr_[rbx], pop_rbx, ret
endbr64, mov_rax_qword_ptr_[rdi], xor_r8d_r8d, cmp_rdi_rax, je_0xe, mov_rax_qword_ptr_[rax], inc@@ _r8d, cmp_rdi_rax, jne_0xfffffffffffffff7, mov_eax_r8d, ret
endbr64, push_rbp, push_rbx, sub_rsp_8, cmp_qword_ptr_[rdi]_0, je_0x71, cmp_qword_ptr_[rsi@@ ]_0, mov_rbp_rsi, je_0x49, mov_rbx_rdi, mov_rdi_rsi, call_0xffffffffffffff@@ 11, test_eax_eax, je_0xa, add_rsp_8, pop_rbx, pop_rbp, ret, mov_rax_qword_ptr_[rbp+8], mov_rdx_qword_ptr_[rbx+8], mov_qword_ptr_[rax]_rbx, mov_rdi_rbp, mov_rax_qword_ptr_[rbp], mov_qword_ptr_[rax+8]_rdx, mov_rdx_qword_ptr_[rbx+8], mov_qword_ptr_[rdx]_rax, mov_rax_qword_ptr_[rbp+8], mov_qword_ptr_[rbx+8]_rax, add_rsp_8, pop_rbx, pop_rbp, jmp_0xfffffffffffffd@@ e5, lea_rcx_[rip+0x@@ 87@@ d1], mov_edx_0x@@ 9e, lea_rsi_[rip+0x@@ 87@@ 97], lea_rdi_[rip+0x@@ 87@@ b0], call_0xfffffffffffdc@@ 23@@ 6, lea_rcx_[rip+0x@@ 87@@ b2], mov_edx_0x@@ 9d, lea_rsi_[rip+0x@@ 87@@ 78], lea_rdi_[rip+0x@@ 87@@ 89], call_0xfffffffffffdc@@ 21@@ 7
endbr64, push_r15, lea_r15_[rip+0x@@ fb@@ a3], push_r14, mov_r14_rdx, push_r13, mov_r13_rsi, push_r12, mov_r12d_edi, push_rbp, lea_rbp_[rip+0x@@ fb@@ 9c], push_rbx, sub_rbp@@ _r15, sub_rsp_8, call_0xfffffffffffdb@@ 5a@@ 4, sar@@ _rbp@@ _3, je_0x21, xor_ebx_ebx, mov_rdx_r14, mov_rsi_r13, mov_edi_r12d, call_qword_ptr_[r@@ 15+r@@ bx*8], add_rbx_1, cmp_rbp_rbx, jne_0xffffffffffffffec, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
endbr64, ret
endbr64, sub_rsp_8, add_rsp_8, ret
