endbr64, sub_rsp_8, mov_rax_qword_ptr_[rip+0x@@ 38@@ f@@ 99], test_rax_rax, je_4, call_rax, add_rsp_8, ret
push_qword_ptr_[rip+0x@@ 38@@ c0@@ 2], b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ c0@@ 3@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 8d@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 90@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 5@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 55@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 54@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 54@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 5@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 5@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 5@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 5@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 5@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 5@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 50@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 50@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4f@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4c@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4c@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4b@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4b@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4a@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4a@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 48@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 47@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 47@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4@@ 6d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 46@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 44@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 44@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 4@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 40@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 40@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3f@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3e@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3e@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3d@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3c@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3c@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3b@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3b@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3a@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3a@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 37@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 37@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 36@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 36@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 34@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 34@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 32@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 3@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 30@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 30@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2f@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2e@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2d@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2c@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2c@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2b@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2b@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2a@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2a@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 28@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 27@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 27@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 26@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 26@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 24@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 24@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 22@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 22@@ 5@@ ]
call_0xfffffffffffff9f@@ 0
call_0xfffffffffffff9e@@ b
call_0xfffffffffffff9e@@ 6
call_0xfffffffffffff9e@@ 1
call_0xfffffffffffff9d@@ c
call_0xfffffffffffff9d@@ 7
call_0xfffffffffffff9d@@ 2
call_0xfffffffffffff9c@@ d
call_0xfffffffffffff9c@@ 8
call_0xfffffffffffff9c@@ 3
call_0xfffffffffffff9b@@ e
call_0xfffffffffffff9b@@ 9
call_0xfffffffffffff9b@@ 4
call_0xfffffffffffff9a@@ f
call_0xfffffffffffff9a@@ a
call_0xfffffffffffff9a@@ 5
mov_qword_ptr_[rsp]_0, mov_rax_qword_ptr_[0x@@ 10], u@@ d@@ 2
endbr64, sub_rsp_8, call_0x2@@ 88, call_0x54@@ 3, xor_eax_eax, add_rsp_8, ret
endbr64, xor_ebp_ebp, mov_r9_rdx, pop_rsi, mov_rdx_rsp, and_rsp_0xfffffffffffffff0, push_rax, push_rsp, lea_r8_[rip+0x@@ 25@@ 28@@ 6], lea_rcx_[rip+0x@@ 25@@ 20@@ f], lea_rdi_[rip-0x@@ 48], call_qword_ptr_[rip+0x@@ 38@@ 0@@ fa], hlt
lea_rdi_[rip+0x3@@ 9d@@ 69], lea_rax_[rip+0x3@@ 9d@@ 62], cmp_rax_rdi, je_0x17, mov_rax_qword_ptr_[rip+0x@@ 38@@ 0@@ be], test_rax_rax, je_0xb, jmp_rax, ret
lea_rdi_[rip+0x3@@ 9d@@ 39], lea_rsi_[rip+0x3@@ 9d@@ 32], sub_rsi_rdi, mov_rax_rsi, shr_rsi@@ _0x3f, sar_rax_3, add_rsi_rax, sar_rsi_1, je_0x16, mov_rax_qword_ptr_[rip+0x@@ 38@@ 0@@ d5], test_rax_rax, je_0xa, jmp_rax, ret
endbr64, cmp_byte_ptr_[rip+0x@@ 3@@ 9d@@ 0@@ 5]_0, jne_0x2d, push_rbp, cmp_qword_ptr_[rip+0x@@ 38@@ 0@@ b@@ 2]_0, mov_rbp_rsp, je_0xe, mov_rdi_qword_ptr_[rip+0x@@ 38@@ 0@@ d6], call_0xfffffffffffff78@@ e, call_0xffffffffffffff@@ 69, mov_byte_ptr_[rip+0x@@ 3@@ 9c@@ dd@@ ]_1, pop_rbp, ret, ret
endbr64, jmp_0xffffffffffffff7@@ c
endbr64, sub_rsp_8, xor_esi_esi, mov_edi_0xe, call_0xfffffffffffffa@@ 61, xor_edx_edx, lea_rsi_[rip+0xb@@ 3], xor_edi_edi, add_rsp_8, jmp_0x1@@ 9e@@ d
endbr64, push_rbx, lea_rbx_[rip+0x@@ 38@@ 0@@ 84], mov_eax_dword_ptr_[rbx+0x28], test_eax_eax, jne_0x1f, mov_rdi_qword_ptr_[rbx+0x20], test_rdi_rdi, je_0xf, call_0xfffffffffffff8@@ 64, mov_qword_ptr_[rbx+0x20]_0, pop_rbx, ret, call_0x5@@ 2e0, jmp_0xffffffffffffffd@@ e
endbr64, push_rbx, lea_rbx_[rip+0x@@ 3@@ 9c@@ 64], mov_eax_dword_ptr_[rbx], test_eax_eax, je_8, pop_rbx, ret, call_0x10@@ 368, test_eax_eax, setne_al, movzx_eax_al, inc_eax, mov_esi_1, mov_edi_2, mov_dword_ptr_[rbx]_eax, call_0xfffffffffffff9c@@ d, mov_esi_1, mov_edi@@ _0xf, call_0xfffffffffffff9b@@ e, lea_rsi_[rip-0x@@ be], mov_edi_0xe, pop_rbx, jmp_0xfffffffffffff9a@@ c
endbr64, push_r12, lea_rax_[rip+0x3@@ 9c@@ eb], push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_qword_ptr_[rax], test_rbx_rbx, je_0x58, lea_r12_[rip+0x@@ 25@@ fb@@ 7], jmp_0x25, cmp_rax_rbp, je_0x75, mov_rcx_qword_ptr_[rbp+0x@@ 12@@ 80], cmp_qword_ptr_[rax+0x1@@ 28@@ 0]_rcx, je_0x65, mov_rbx_qword_ptr_[rbx+8], test_rbx_rbx, je_0x2c, mov_edi_dword_ptr_[rbx], call_0x1@@ 958, test_rax_rax, jne_0xffffffffffffffd8, mov_edx_dword_ptr_[rbx], mov_rsi_r12, mov_edi_1, call_0xfffffffffffffb@@ 14, mov_rbx_qword_ptr_[rbx+8], test_rbx_rbx, jne_0xffffffffffffffde, mov_r8d_dword_ptr_[r@@ bp+0x18], lea_rsi_[rip+0x25@@ fc@@ 3], mov_edi_2, lea_rcx_[rip+0x@@ 25@@ f@@ 99], mov_edx_0x3@@ d, xor_eax_eax, call_0x1@@ 11@@ 82, mov_edi_dword_ptr_[r@@ bp+0x18], mov_esi_0x1@@ 3, call_0xfffffffffffff9a@@ 5, pop_rbx, pop_rbp, mov_eax_1, pop_r12, ret
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1@@ 28, mov_ebp_edi, lea_rdi_[rip-0x@@ 17@@ 6], mov_r12_rsi, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 11@@ 8]_rax, xor_eax_eax, call_0x25@@ 004, lea_rsi_[rip-0x@@ 158], mov_edi_2, call_0xfffffffffffff8a@@ 3, lea_rsi_[rip-0x@@ 16@@ 9], mov_edi@@ _0xf, call_0xfffffffffffff8@@ 92, mov_rsi_r12, mov_edi_ebp, call_0xd@@ 28, mov_r13_rax, call_0x45@@ 90, lea_rbp_[rip+0x@@ 3@@ 9b@@ c4], lea_r12_[r@@ sp+0x110], mov_rbx_qword_ptr_[rbp], test_rbx_rbx, jne_0x35, jmp_0x@@ fa, call_0x4@@ 64@@ 8, mov_rdi_qword_ptr_[rbp], mov_rbx_qword_ptr_[rdi], test_byte_ptr_[rdi+0x1@@ 0]_1, jne_0x@@ c0, call_0xfffffffffffff56@@ 2, mov_qword_ptr_[rbp]_rbx, test_rbx_rbx, je_0xcd, mov_rdi_qword_ptr_[rbx+8], cmp_byte_ptr_[rdi]@@ _0x7e, jne_0xffffffffffffffd1, lea_rdi_[rip+0x@@ 25@@ ec@@ a], call_0xfffffffffffff5@@ 20, mov_rsi_rax, test_rax_rax, je_0xffffffffffffffc2, mov_edx_0x@@ fff, mov_rdi_r12, call_0xfffffffffffff5a@@ b, mov_byte_ptr_[rsp+0x1@@ 10@@ f]_0, mov_rdx_r12, mov_ecx_dword_ptr_[rdx], add_rdx_4, lea_eax_[rcx-0x1010101], not_ecx, and_eax_ecx, and_eax_0x80808080, je_0xffffffffffffffeb, mov_ecx_eax, shr_ecx_0x10, test_eax_0x8080, cmove_eax_ecx, lea_rcx_[rdx+2], cmove_rdx_rcx, mov_esi_eax, add_sil@@ _al, sbb_rdx_3, mov_rax_r12, sub_rax_rdx, lea_rdx_[rax+0x@@ fff@@ ], mov_rax_qword_ptr_[rbp], mov_ecx_0x1000, mov_rsi_qword_ptr_[rax+8], mov_rdi_r12, inc@@ _rsi, call_0xfffffffffffffa@@ 96, mov_rdi_r12, call_0x4@@ 58@@ e, mov_rdi_qword_ptr_[rbp], mov_rbx_qword_ptr_[rdi], test_byte_ptr_[rdi+0x1@@ 0]_1, je_0xffffffffffffff@@ 4c, mov_rdi_qword_ptr_[rdi+8], call_0xfffffffffffff4a@@ 4, mov_rdi_qword_ptr_[rbp], call_0xfffffffffffff4@@ 9b, mov_qword_ptr_[rbp]_rbx, test_rbx_rbx, jne_0xffffffffffffff@@ 3f, lea_rbx_[rip+0x@@ 39@@ 9d@@ a], mov_rsi_qword_ptr_[rbx], test_rsi_rsi, je_0x48, mov_rbp_rsp, mov_rdi_rbp, call_0x1@@ 2c@@ 44, test_eax_eax, jne_0xad, mov_rdi_rbp, call_0x1@@ 2d@@ e4, mov_rdi_qword_ptr_[rbx], mov_rsi_r13, call_0x1@@ 3f@@ 19, mov_rdi_qword_ptr_[rbx], mov_esi_eax, mov_ebp_eax, call_0x1@@ 95@@ d, mov_rdi_rax, test_rax_rax, je_0x53, call_0xf@@ 260, mov_edi_ebp, call_0xf@@ 3b@@ 9, lea_rax_[rip+0x3@@ 9a@@ 65], mov_rbx_qword_ptr_[rax], test_rbx_rbx, je_0x17, mov_edi_dword_ptr_[rbx], call_0x1a@@ de, mov_rbx_qword_ptr_[rbx+8], test_rbx_rbx, jne_0xfffffffffffffff2, mov_rax_qword_ptr_[rsp+0x1@@ 118], xor_rax_qword_ptr_fs:[0x28], jne_0x49, add_rsp_0x1@@ 128, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, call_0xfffffffffffff44@@ f, mov_edi_dword_ptr_[rax], call_0xfffffffffffff9d@@ 8, mov_r8_rax, mov_rax_qword_ptr_[rip+0x@@ 37@@ cc@@ 9], mov_rcx_qword_ptr_[rbx], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x2@@ 5d@@ 0c], mov_esi_1, xor_eax_eax, call_0xfffffffffffff98@@ 5, mov_edi_1, call_0xfffffffffffff94@@ b, call_0xfffffffffffff5@@ 1@@ 6
endbr64, push_r15, lea_r15_[rip+0x@@ 3@@ 99@@ 13], push_r14, lea_r14_[rip+0x@@ 39@@ 98@@ a], push_r13, mov_r13_rdi, push_r12, push_rbp, push_rbx, mov_ebx_esi, sub_rsp_8, mov_eax_dword_ptr_[r@@ 14+r@@ bx*4], mov_rdi_qword_ptr_[r@@ 15+r@@ bx*8], lea_r12d@@ _[rax+1], movsxd_rbp@@ _r12d, shl_rbp@@ _3, mov_rsi_rbp, call_0xfffffffffffff8@@ 15, mov_qword_ptr_[rax+r@@ bp-@@ 8]_r13, mov_dword_ptr_[r@@ 14+r@@ bx*@@ 4]_r12d, mov_qword_ptr_[r@@ 15+r@@ bx*@@ 8]_rax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
endbr64, push_r14, push_r13, lea_r13_[rip+0x@@ 3@@ 98@@ 91], push_r12, lea_r12_[rip+0x@@ 3@@ 98@@ a8], push_rbp, push_rbx, lea_rbx_[rip+0x@@ 3@@ 99@@ 1f], call_0xb@@ 1d@@ f, mov_rbp_rax, mov_eax_dword_ptr_[rax+0x10], cmp_eax_1, je_0x50, mov_rdx_qword_ptr_[rbp+8], test_rdx_rdx, je_7, cmp_dword_ptr_[rdx@@ ]_2, je_0x23, mov_edx_dword_ptr_[r@@ bx+rax*4], xor_r14d_r14d, test_edx_edx, jle_0x@@ 19, mov_rax_qword_ptr_[r@@ 12+rax*8], mov_rdi_rbp, call_qword_ptr_[r@@ ax+r@@ 14*8], mov_eax_dword_ptr_[rbp+0x10], inc@@ _r14, cmp_dword_ptr_[rbx@@ +rax*@@ 4]_r14d, jg_0xffffffffffffff@@ eb, mov_rdi_rbp, call_0x14@@ 56@@ 6, call_0xb@@ 19@@ 1, mov_rbp_rax, mov_eax_dword_ptr_[rax+0x10], cmp_eax_1, jne_0xffffffffffffffbb, mov_ecx_dword_ptr_[r@@ 13], test_ecx_ecx, je_0xffffffffffffff@@ b3, cmp_dword_ptr_[rbp+0x@@ 18]@@ _0x13, jne_0xffffffffffffffad, mov_rdi_rbp, call_0x14@@ 540, jmp_0xffffffffffffffd@@ a
push_rax, pop_rax, lea_rdx_[rip+0x2@@ 5c@@ 37], mov_esi_1, sub_rsp_8, mov_rax_qword_ptr_[rip+0x@@ 37@@ b8@@ 7], mov_rcx_qword_ptr_[rip+0x@@ 3a@@ 8@@ e0], mov_rdi_qword_ptr_[rax], xor_eax_eax, call_0xfffffffffffff84@@ b, mov_edi_1, call_0xfffffffffffff8@@ 1@@ 1
push_rbp, mov_rbp_rsp, push_r15, push_r14, push_r13, push_r12, push_rbx, sub_rsp_0x1@@ 48, mov_qword_ptr_[rbp-0x15@@ 8]_rdi, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x38]_rax, xor_eax_eax, cmp_byte_ptr_[rsi]_0, je_0x5@@ 03, cmp_edx_1, sbb_eax_eax, and_eax_2, cdqe, lea_rdx_[rip+0x26@@ 77@@ a], lea_rbx_[rax@@ +rdx], lea_rdx_[rip+0x26@@ 77@@ 3], add_rax_rdx, mov_qword_ptr_[rbp-0x14@@ 0]_rbx, mov_qword_ptr_[rbp-0x16@@ 8]_rax, mov_dword_ptr_[rbp-0x12@@ c]_0, mov_r15_rsi, mov_rsi_qword_ptr_[rbp-0x@@ 140], mov_rdi_r15, call_0xfffffffffffff45@@ 6, lea_rbx_[r@@ 15+rax], movzx_edx_byte_ptr_[rbx], test_dl_dl, je_0x2@@ 70, lea_r12_[r@@ 15@@ +rax+1], lea_eax_[rdx-0x@@ 2b], test_al@@ _0xfd, jne_0x3@@ a8, xor_eax_eax, cmp_dl@@ _0x2d, sete_al, mov_dword_ptr_[rbp-0x@@ 13@@ 0]_eax, mov_byte_ptr_[rbx]_0, mov_rbx_r12, mov_rdi_r15, call_0xfffffffffffff30@@ b, lea_rdx_[r@@ 15@@ +rax-1], movzx_eax_byte_ptr_[r15], cmp_al_0x2f, jne_0x4a@@ 3, lea_r13_[r@@ 15+1], cmp_r15@@ _rdx, je_0x4@@ ce, lea_rsi_[rip+0x2@@ bb@@ 4a], cmp_byte_ptr_[rdx]@@ _0x2f, mov_r12_rsi, jne_0x@@ 4c@@ 2, mov_byte_ptr_[rdx]_0, mov_dword_ptr_[rbp-0x14@@ 8]_1, mov_r15_r13, cmp_byte_ptr_[rsi@@ ]@@ _0x2f, jne_0x6@@ 86, mov_byte_ptr_[rsi@@ ]_0, dec@@ _rsi, cmp_r12@@ _rsi, je_0xd, cmp_byte_ptr_[r@@ 12]@@ _0x2f, je_0x5@@ 84, mov_rax_qword_ptr_[rip+0x@@ 37@@ a@@ 3f], mov_edx_0x1@@ f, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x2@@ 5b@@ 3b], call_0xfffffffffffff6d@@ b, mov_dword_ptr_[rbp-0x14@@ c]_1, movzx_eax_byte_ptr_[r12], movzx_edx_byte_ptr_[r@@ 15], mov_r13_r15, mov_r15_rbx, test_dl_dl, lea_rcx_[rip+0x@@ 2b@@ ac@@ d], cmove@@ _r13@@ _rcx, test_al_al, cmove@@ _r12@@ _rcx, mov_edi@@ _0x58, call_0xfffffffffffff4e@@ 5, mov_edi_0x4@@ 8, mov_qword_ptr_[rbp-0x12@@ 8]_rax, call_0xfffffffffffff4d@@ 4, cmp_qword_ptr_[rbp-0x@@ 12@@ 8]_0, mov_r14_rax, je_0x5@@ 2e, test_rax_rax, je_0x5@@ 25, mov_rdi_r13, mov_qword_ptr_[rbp-0x13@@ 8]@@ _rsp, call_0xfffffffffffff2@@ 1b, add_rax@@ _0x12, mov_rdx_rax, mov_rcx_rsp, and_rax@@ _0xffffffffffff@@ f000, sub_rcx_rax, mov_rax_rcx, and_rdx@@ _0xfffffffffffffff0, cmp_rsp@@ _rax, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rax, jne_0xffffffffffffffed, and_edx@@ _0xfff, sub_rsp@@ _rdx, test_rdx_rdx, je_8, or_qword_ptr_[r@@ sp@@ +rdx@@ -8]_0, mov_r9@@ _rsp, mov_rdx_-1, xor_eax_eax, mov_r8_r13, lea_rcx_[rip+0x@@ 26@@ 5e@@ 4], mov_esi_1, mov_rdi_rsp, mov_qword_ptr_[rbp-0x16@@ 0]_r9, call_0xfffffffffffff6a@@ 9, mov_edx_dword_ptr_[rbp-0x@@ 148], mov_r9_qword_ptr_[rbp-0x@@ 160], test_edx_edx, jne_0x@@ e5, lea_rax_[rip+0x@@ 5a@@ 48], lea_r13_[r@@ bp-0x@@ 120], xor_edx_edx, mov_rsi_r9, mov_rdi_r13, call_rax, test_eax_eax, jne_0x2@@ 85, mov_ecx_5, mov_rsi_r12, lea_rdi_[rip+0x26@@ 5e@@ b], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], mov_r@@ sp@@ _qword_ptr_[rbp-0x@@ 138], seta_al, sbb_al_0, test_al_al, jne_0xb0, mov_rdi_r14, call_0x57@@ 97, push_qword_ptr_[rbp-0x@@ e8], mov_rdx_r14, push_qword_ptr_[rbp-0x@@ f0], push_qword_ptr_[rbp-0x@@ f8], push_qword_ptr_[rbp-0x@@ 100], push_qword_ptr_[rbp-0x@@ 108], push_qword_ptr_[rbp-0x@@ 110], push_qword_ptr_[rbp-0x@@ 118], push_qword_ptr_[rbp-0x@@ 120], mov_r14_qword_ptr_[rbp-0x@@ 128], mov_esi_dword_ptr_[rbp-0x@@ 12@@ c], mov_rdi_r14, call_0x5@@ 66@@ f, mov_rdi_qword_ptr_[rbp-0x@@ 158], add_rsp_0x40, mov_rsi_r14, call_0x56@@ 9c, cmp_byte_ptr_[rbx]_0, je_0x2@@ 54, mov_eax_dword_ptr_[rbp-0x@@ 130], mov_dword_ptr_[rbp-0x12@@ c]_eax, jmp_0xfffffffffffffd@@ 82, mov_eax_dword_ptr_[rbp-0x@@ 12@@ c], mov_dword_ptr_[rbp-0x@@ 13@@ 0]_eax, jmp_0xfffffffffffffd@@ ae, mov_rax_qword_ptr_[rip+0x@@ 37@@ 7f@@ 9], jmp_0xffffffffffffff21, mov_rdi_r12, mov_qword_ptr_[rbp-0x13@@ 8]@@ _rsp, call_0xfffffffffffff0@@ 96, add_rax@@ _0x12, mov_rdx_rax, mov_rsi_rsp, and_rax@@ _0xffffffffffff@@ f000, sub_rsi_rax, mov_rax_rsi, and_rdx@@ _0xfffffffffffffff0, cmp_rsp@@ _rax, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rax, jne_0xffffffffffffffed, and_edx@@ _0xfff, sub_rsp@@ _rdx, test_rdx_rdx, je_8, or_qword_ptr_[r@@ sp@@ +rdx@@ -8]_0, mov_r10@@ _rsp, mov_r8_r12, xor_eax_eax, lea_rcx_[rip+0x@@ 26@@ 46@@ 6], mov_rdx_-1, mov_esi_1, mov_rdi_rsp, mov_qword_ptr_[rbp-0x14@@ 8]_r10, call_0xfffffffffffff5@@ 24, mov_eax_dword_ptr_[rbp-0x@@ 14@@ c], xor_r12d_r12d, cmp_byte_ptr_[r@@ sp@@ ]@@ _0x2f, sete_r12b, test_eax_eax, mov_r10_qword_ptr_[rbp-0x@@ 148], jne_0x1@@ 9d, lea_rax_[rip+0x@@ 58@@ b8], lea_r9_[r@@ bp-0x@@ e0], xor_edx_edx, mov_rdi_r9, mov_rsi_r10, mov_qword_ptr_[rbp-0x14@@ 8]_r9, call_rax, test_eax_eax, mov_r9_qword_ptr_[rbp-0x@@ 148], jne_0x2@@ 1b, push_qword_ptr_[rbp-0x@@ a8], mov_esi_r12d, mov_rdi_r14, push_qword_ptr_[rbp-0x@@ b0], push_qword_ptr_[rbp-0x@@ b8], push_qword_ptr_[rbp-0x@@ c0], push_qword_ptr_[rbp-0x@@ c8], push_qword_ptr_[rbp-0x@@ d0], push_qword_ptr_[rbp-0x@@ d8], push_qword_ptr_[rbp-0x@@ e0], call_0x5@@ 57@@ b, mov_r@@ sp@@ _qword_ptr_[rbp-0x@@ 138], jmp_0xfffffffffffffe@@ 4d, cmp_dl@@ _0x40, jne_0x2@@ ca, mov_byte_ptr_[rbx]_0, mov_rsi_qword_ptr_[rbp-0x@@ 168], mov_rdi_r12, call_0xfffffffffffff0@@ 7a, test_rax_rax, je_0x1@@ 92, lea_rbx_[r@@ 12+rax], movzx_edx_byte_ptr_[rbx], test_dl_dl, je_0x2@@ 13, cmp_dl@@ _0x2d, sete_cl, sub_edx@@ _0x2b, and_edx@@ _0xfd, jne_0x2@@ e3, movzx_esi@@ _cl, mov_dword_ptr_[rbp-0x@@ 13@@ 0]_esi, mov_byte_ptr_[rbx]_0, lea_rbx_[r@@ 12@@ +rax+1], cmp_byte_ptr_[r12]_0, je_0x2@@ 50, mov_rdi_r12, call_0xffffffffffffef@@ 19, cmp_byte_ptr_[r@@ 15]@@ _0x2f, lea_rsi_[r@@ 12@@ +rax-1], je_0x2@@ 77, mov_dword_ptr_[rbp-0x14@@ 8]_0, jmp_0xfffffffffffffc@@ 36, lea_r12_[r@@ bp-0x@@ a0], mov_ecx@@ _0x64, mov_rdx_r12, mov_rsi_r13, mov_edi_eax, call_0xfffffffffffff0@@ fc, mov_rax_qword_ptr_[rip+0x@@ 37@@ 670], mov_r8_r12, mov_rdi_qword_ptr_[rax], mov_rcx_rbx, lea_rdx_[rip+0x2@@ 57@@ 90], mov_esi_1, xor_eax_eax, call_0xfffffffffffff32@@ 9, mov_r@@ sp@@ _qword_ptr_[rbp-0x@@ 138], mov_rdi_qword_ptr_[rbp-0x@@ 128], call_0xffffffffffffed@@ 56, mov_rdi_r14, call_0xffffffffffffed@@ 4e, cmp_byte_ptr_[rbx]_0, jne_0xfffffffffffffd@@ b8, mov_rax_qword_ptr_[rbp-0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ 65, lea_rsp_[rbp-0x28], pop_rbx, pop_r12, pop_r13, pop_r14, pop_r15, xor_eax_eax, pop_rbp, ret, mov_rax_qword_ptr_[rip+0x@@ 37@@ 5b@@ 1], jmp_0xfffffffffffffe@@ 69, test_al_al, jne_0x@@ ee, lea_r13_[rip+0x@@ 2b@@ 6b@@ 2], mov_dword_ptr_[rbp-0x14@@ 8]_0, mov_dword_ptr_[rbp-0x14@@ c]_0, mov_r15_rbx, mov_r12_r13, jmp_0xfffffffffffffb@@ d5, lea_r12_[rip+0x@@ 2b@@ 68@@ 2], mov_rax_qword_ptr_[rip+0x@@ 37@@ 5b@@ 2], mov_edx_0x1@@ e, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x2@@ 56@@ 8e], call_0xfffffffffffff24@@ e, movzx_eax_byte_ptr_[r12], movzx_edx_byte_ptr_[r@@ 15+1], mov_dword_ptr_[rbp-0x14@@ 8]_1, mov_dword_ptr_[rbp-0x14@@ c]_1, mov_r15_rbx, jmp_0xfffffffffffffb@@ 6b, mov_eax_dword_ptr_[rbp-0x@@ 12@@ c], mov_rbx_r12, mov_dword_ptr_[rbp-0x@@ 13@@ 0]_eax, jmp_0xfffffffffffffa@@ b3, lea_r12_[r@@ bp-0x@@ a0], mov_rsi_r9, mov_rdx_r12, mov_ecx@@ _0x64, mov_edi_eax, call_0xffffffffffffe@@ fc8, mov_rax_qword_ptr_[rip+0x@@ 37@@ 5@@ 3c], mov_r8_r12, mov_rdi_qword_ptr_[rax], mov_rcx_rbx, lea_rdx_[rip+0x2@@ 56@@ 5c], mov_esi_1, xor_eax_eax, call_0xfffffffffffff1f@@ 5, mov_r@@ sp@@ _qword_ptr_[rbp-0x@@ 138], mov_rdi_r13, call_0xffffffffffffed@@ 66, jmp_0xfffffffffffffe@@ c4, mov_r13_r15, mov_dword_ptr_[rbp-0x14@@ 8]_0, mov_dword_ptr_[rbp-0x14@@ c]_0, mov_r15_rbx, lea_r12_[rip+0x@@ 2b@@ 5b0], jmp_0xfffffffffffffa@@ ed, mov_eax_dword_ptr_[rbp-0x@@ 12@@ c], mov_dword_ptr_[rbp-0x@@ 13@@ 0]_eax, jmp_0xfffffffffffffe@@ 0d, movzx_edx_byte_ptr_[r@@ 15], movzx_eax_byte_ptr_[r@@ 12+1], mov_r13_r15, mov_dword_ptr_[rbp-0x14@@ c]_1, mov_r15_rbx, inc_r12, jmp_0xfffffffffffffa@@ 9e, call_0xffffffffffffec@@ 16, mov_edi_dword_ptr_[rax], call_0xfffffffffffff@@ 19@@ f, mov_r8_rax, mov_rax_qword_ptr_[rip+0x@@ 37@@ 4@@ 90], mov_rcx_rbx, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x@@ 25@@ 5b@@ 3], mov_esi_1, xor_eax_eax, call_0xfffffffffffff@@ 14@@ c, jmp_0xfffffffffffffe@@ 2a, lea_rcx_[rip+0x@@ 26@@ 2@@ bb], mov_edx_0x1@@ 49, lea_rsi_[rip+0x2@@ 60@@ c4], lea_rdi_[rip+0x2@@ 60@@ d6], call_0xffffffffffffed@@ 48, lea_rcx_[rip+0x@@ 26@@ 29@@ c], mov_edx_0x1@@ 37, lea_rsi_[rip+0x2@@ 60@@ a5], lea_rdi_[rip+0x2@@ 60@@ a8], call_0xffffffffffffed@@ 29, xor_eax_eax, or_rcx_0xffffffffffffffff, mov_rdi_r15, repne_scasb_al_byte_ptr_[rdi], lea_r13_[r@@ 15+1], mov_rax_rcx, not_rax, lea_rdx_[r@@ 15@@ +rax@@ -2], cmp_rdx@@ _r15, je_0xb, cmp_byte_ptr_[rdx]@@ _0x2f, je_0xfffffffffffff@@ 99@@ d, cmp_byte_ptr_[rsi@@ ]@@ _0x2f, jne_0xfffffffffffffe@@ 50, mov_byte_ptr_[rsi@@ ]_0, jmp_0xfffffffffffffe@@ 67, lea_rcx_[rip+0x@@ 26@@ 24@@ 4], mov_edx_0x1@@ 41, lea_rsi_[rip+0x2@@ 60@@ 4d], lea_rdi_[rip+0x@@ 25@@ 4a@@ 9], call_0xffffffffffffe@@ cd@@ 1, movzx_edx_byte_ptr_[r@@ 15], mov_r13_r15, mov_dword_ptr_[rbp-0x14@@ c]_0, movzx_eax_byte_ptr_[r12], mov_r15_rbx, jmp_0xfffffffffffff9b@@ 6, call_0xffffffffffffec@@ 2@@ e
push_rbp, xor_edx_edx, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_0x18, mov_rdi_qword_ptr_[rdi], mov_rsi_rsp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xffffffffffffc@@ 8f@@ c, mov_rdx_qword_ptr_[rsp], cmp_qword_ptr_[r@@ bx@@ ]_rdx, je_0x22, mov_qword_ptr_[rbx]_rdx, mov_qword_ptr_[rbp]_rax, xor_eax_eax, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x2b, add_rsp_0x18, pop_rbx, pop_rbp, ret, mov_esi_dword_ptr_[rip+0x@@ 37@@ c0@@ 8], mov_rdi_qword_ptr_[rip+0x@@ 37@@ bf@@ 9], xor_eax_eax, lea_rdx_[rip+0x24@@ 22@@ 7], call_0x12@@ ff8, mov_eax_0xffffffff, jmp_0xffffffffffffffc9, call_0xffffffffffffc@@ 6c@@ c
push_r14, mov_r14d_esi, push_r13, mov_r13_rdi, mov_edi_0x10, push_r12, call_0xffffffffffffed@@ 8f, mov_r12_rax, test_rax_rax, je_0x61, mov_rdi_rax, call_0x50@@ 3f, mov_edx_r14d, mov_rsi_r13, mov_rdi_r12, call_0xfffffffffffff7@@ 21, test_eax_eax, js_0x1@@ 2, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, mov_rax_qword_ptr_[rip+0x@@ 37@@ 26@@ 1], mov_rcx_r13, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x2@@ 5e@@ e5], mov_esi_1, xor_eax_eax, call_0xffffffffffffef@@ 1d, mov_rdi_r12, xor_r12d_r12d, call_0xffffffffffffe@@ 95@@ 2, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, call_0xffffffffffffe@@ 9a@@ 3, mov_edi_dword_ptr_[rax], call_0xffffffffffffef@@ 2c, mov_r8_rax, mov_rax_qword_ptr_[rip+0x@@ 37@@ 2@@ 1d], mov_rcx_r13, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x@@ 25@@ 3d@@ 8], mov_esi_1, xor_eax_eax, call_0xffffffffffffe@@ ed@@ 9, jmp_0xffffffffffffff8@@ c
push_r12, mov_r12_rdi, push_rbp, push_rbx, mov_rbx_rsi, call_0xffffffffffffe@@ ee@@ 6, test_rax_rax, je_0x48, cmp_byte_ptr_[rax]@@ _0x21, mov_rbp_rax, jne_5, mov_byte_ptr_[rax]@@ _0x2d, mov_rax_qword_ptr_[rbx], test_rax_rax, je_0x19, mov_rsi_rax, mov_rax_qword_ptr_[rax], test_rax_rax, jne_0xfffffffffffffff7, mov_rbx_rsi, mov_rdi_rbp, mov_esi_1, call_0xffffffffffffff@@ 0a, mov_qword_ptr_[rbx]_rax, mov_rdi_rbp, pop_rbx, pop_rbp, pop_r12, jmp_0xffffffffffffe@@ 8b@@ b, call_0xffffffffffffe9@@ 16, mov_edi_dword_ptr_[rax], call_0xffffffffffffee@@ 9f, mov_r8_rax, mov_rax_qword_ptr_[rip+0x@@ 37@@ 190], pop_rbx, mov_rdi_qword_ptr_[rax], pop_rbp, mov_rcx_r12, lea_rdx_[rip+0x@@ 25@@ 37@@ 9], mov_esi_1, xor_eax_eax, pop_r12, jmp_0xffffffffffffee@@ 4@@ 8
endbr64, push_rbp, mov_rbp_rsp, push_r15, push_r14, push_r13, mov_r13d_edi, lea_rdi_[rip+0x2@@ 5e@@ 07], push_r12, mov_r12_rsi, push_rbx, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x38]_rax, xor_eax_eax, mov_rax_qword_ptr_[rsi], lea_r14_[rip+0x@@ 37@@ 17@@ 5], mov_qword_ptr_[rip+0x3@@ 9e@@ 8e@@ ]_rax, mov_rax_qword_ptr_[rip+0x@@ 37@@ 12@@ 7], mov_dword_ptr_[r14+0x@@ 44]_0, mov_rax_qword_ptr_[rax], mov_dword_ptr_[r14]@@ _0x32, mov_qword_ptr_[r14+0x@@ 20]_rax, call_0xffffffffffffe@@ 80@@ 1, test_rax_rax, je_0xb, cmp_byte_ptr_[rax]_0, jne_0x4@@ 44, lea_rax_[rbp-0x40], mov_qword_ptr_[rbp-0x60]_rax, mov_rdx_rax, mov_esi_0x5@@ 4@@ 13, xor_eax_eax, mov_edi_1, call_0xffffffffffffea@@ 07, cmp_eax_-1, je_0x3@@ ef, movzx_eax_word_ptr_[rbp-0x@@ 3e], test_ax_ax, je_0x3@@ e2, lea_eax_[rax@@ +rax*4], sar_eax@@ _3, mov_dword_ptr_[r14]_eax, mov_dword_ptr_[rbp-0x@@ 58]_1, lea_r15_[r@@ bp-0x@@ 44], lea_rbx_[rip+0x@@ 2@@ 5e@@ 21], mov_r8_r15, lea_rcx_[rip+0x@@ 37@@ 16@@ 7], lea_rdx_[rip+0x@@ 25@@ 2c0], mov_rsi_r12, mov_edi_r13d, mov_dword_ptr_[rbp-0x@@ 44]_0, call_0xffffffffffffe@@ 92@@ 3, cmp_eax_-1, je_0x3@@ fb, sub_eax@@ _0x41, cmp_eax@@ _0x37, ja_0x5@@ 2a, movsxd_rax_dword_ptr_[r@@ bx+rax*4], add_rax_rbx, jmp_rax, xor_esi_esi, mov_rdi_r9, mov_qword_ptr_[rbp-0x7@@ 0]_rdx, call_0xfffffffffffffb@@ dc, mov_rdx_qword_ptr_[rbp-0x70], mov_qword_ptr_[rdx]_rax, mov_r@@ sp@@ _qword_ptr_[rbp-0x@@ 68], jmp_0xfffffffffffffd@@ cb, mov_rdx_qword_ptr_[rbp-0x60], xor_eax_eax, mov_esi_0x5@@ 4@@ 13, mov_edi_2, call_0xffffffffffffe6@@ 00, cmp_eax_-1, je_0xfffffffffffffc@@ 15, movzx_eax_word_ptr_[rbp-0x@@ 3e], test_ax_ax, je_0xfffffffffffffc@@ 08, jmp_0xfffffffffffffb@@ f9, lea_rcx_[rbp-0x@@ 40], xor_edx_edx, mov_rsi_rcx, mov_rdi_rax, mov_qword_ptr_[rbp-0x6@@ 0]_rcx, call_0xffffffffffffe7@@ 00, test_eax_eax, jle_0xffffffffffff@@ fb@@ e6, mov_rdx_qword_ptr_[rbp-0x40], cmp_byte_ptr_[rdx]_0, jne_0xfffffffffffffb@@ d9, jmp_0xfffffffffffffb@@ ca, mov_rax_qword_ptr_[rip+0x3@@ 6c@@ 31], movsxd_rax_dword_ptr_[r@@ ax], sub_r13@@ d_eax, lea_rax_[r@@ 12+rax*8], lea_r12_[rip+0x@@ 38@@ 9b@@ 8], mov_qword_ptr_[rbp-0x60]_rax, mov_rbx_qword_ptr_[r12], test_rbx_rbx, je_0x12@@ 6, mov_rax_qword_ptr_[rbx], xor_edx_edx, jmp_0xb, mov_rdx_rbx, mov_rbx_rax, mov_rax_qword_ptr_[rax], mov_qword_ptr_[rbx]_rdx, test_rax_rax, jne_0xfffffffffffffff1, mov_edi_dword_ptr_[rbp-0x@@ 58], mov_qword_ptr_[r12@@ ]_rbx, mov_rax_qword_ptr_[r14+0x@@ 48], test_edi_edi, je_0x62, test_rax_rax, je_0x1@@ 3a, lea_rax_[rip+0x@@ 38@@ 9@@ 78], cmp_qword_ptr_[rax]_0, je_0x64, lea_rax_[rip+0x@@ 38@@ 97@@ b], mov_esi_dword_ptr_[rax], test_esi_esi, je_0x13, lea_rax_[rip+0x@@ 38@@ 96@@ a], mov_ecx_dword_ptr_[rax], test_ecx_ecx, jne_0x99, test_r13d_r13d, jg_0x5@@ 7, mov_rax_qword_ptr_[rbp-0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ 8d, mov_rax_qword_ptr_[rbp-0x60], lea_rsp_[rbp-0x28], pop_rbx, pop_r12, pop_r13, pop_r14, pop_r15, pop_rbp, ret, test_rax_rax, je_0xffffffffffffff@@ a6, mov_rcx_qword_ptr_[rip+0x@@ 3@@ 99@@ 34], lea_rdx_[rip+0x2@@ 57@@ cd], jmp_0x6@@ 2, test_r13d_r13d, jle_0x@@ 24@@ 5, lea_rax_[rip+0x@@ 38@@ 9@@ 10], mov_edx_dword_ptr_[rax], test_edx_edx, jne_0x2e, mov_rax_qword_ptr_[rbp-0x60], mov_esi_0x2f, mov_r14_qword_ptr_[rax], mov_rdi_r14, call_0xffffffffffffe@@ 45@@ 3, test_rax_rax, je_0xc0, lea_rax_[rip+0x@@ 38@@ 7f@@ 6], mov_qword_ptr_[rax]@@ _r14, jmp_0xffffffffffffff84, lea_rax_[rip+0x@@ 38@@ 8d@@ 3], mov_eax_dword_ptr_[rax], test_eax_eax, je_0xffffffffffffffc9, mov_rcx_qword_ptr_[rip+0x@@ 39@@ 8d@@ 2], lea_rdx_[rip+0x2@@ 57@@ 9b], mov_rax_qword_ptr_[rip+0x@@ 36@@ b@@ 64], mov_esi_1, mov_rdi_qword_ptr_[rax], xor_eax_eax, call_0xffffffffffffe8@@ 2a, call_0xffffffffffffe@@ fb@@ 5, lea_rdx_[r@@ 14+0x@@ 58], jmp_0xfffffffffffffc@@ b7, mov_edi_0x18, call_0xffffffffffffe6@@ 32, mov_edi_0x18, mov_rbx_rax, call_0xffffffffffffe6@@ 25, lea_rcx_[rip+0x2@@ 57@@ f3], mov_qword_ptr_[rbx+@@ 8]_rcx, lea_rcx_[rip+0x2@@ 57@@ f7], and_byte_ptr_[r@@ bx+0x1@@ 0]@@ _0xfe, and_byte_ptr_[r@@ ax+0x1@@ 0]@@ _0xfe, mov_qword_ptr_[rbx]_rax, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+8]_rcx, jmp_0xfffffffffffffea@@ 4, cmp_qword_ptr_[r14+0x@@ 58]_0, jne_0xfffffffffffffe@@ c7, lea_rsi_[r@@ 14+0x@@ 48], lea_rdi_[rip+0x2@@ 57@@ d7], call_0xfffffffffffff8e@@ d, mov_dword_ptr_[r14+0x@@ 60]_1, jmp_0xfffffffffffffea9, lea_rdi_[rip+0x2@@ 57@@ db], call_0xffffffffffffe@@ 1c@@ 4, mov_r12_rax, lea_r13_[rip+0x@@ 38@@ 8@@ 25], test_rax_rax, jne_0x94, jmp_0xffffffffffffff27, sub_rax_r12, mov_ebx_eax, inc_eax, mov_dword_ptr_[rbp-0x5@@ 8]_eax, mov_rdi_r14, movsxd_r15@@ _ebx, call_0xffffffffffffe3@@ 00, lea_rax_[r@@ 15@@ +rax+1], cmp_rax@@ _0xfff, ja_0x@@ e6, mov_rdi_r13, mov_ecx_0x1000, mov_rdx_r15, mov_rsi_r12, call_0xffffffffffffe@@ 5d@@ c, mov_rdi_r13, test_ebx_ebx, je_0x24, lea_eax_[rbx-1], cdqe, cmp_byte_ptr_[r@@ 13@@ +rax]@@ _0x2f, lea_rdi_[r@@ 13+r@@ 15], je_0x12, lea_eax_[rbx+1], mov_byte_ptr_[r@@ 13+r@@ 15]@@ _0x2f, cdqe, lea_rdi_[r@@ 13+rax], mov_rsi_r14, call_0xffffffffffffe@@ 2@@ 1b, mov_esi_1, mov_rdi_r13, call_0xffffffffffffe@@ 64@@ e, test_eax_eax, je_0x3d, movsxd_rax@@ _dword_ptr_[rbp-0x@@ 58], add_r12_rax, cmp_byte_ptr_[r12]_0, je_0xfffffffffffffe@@ 94, mov_esi_0x3a, mov_rdi_r12, call_0xffffffffffffe@@ 2c@@ b, test_rax_rax, jne_0xffffffffffffff@@ 63, mov_rdi_r12, call_0xffffffffffffe@@ 26@@ a, mov_dword_ptr_[rbp-0x5@@ 8]_eax, mov_rbx_rax, jmp_0xffffffffffffff59, lea_r14_[rip+0x@@ 38@@ 75@@ 3], jmp_0xfffffffffffffe@@ 5e, mov_rax_qword_ptr_[rip+0x@@ 36@@ 9a@@ 3], lea_rdi_[rip+0x2@@ 56@@ a8], mov_rcx_qword_ptr_[rax], mov_edx_0x1@@ a, mov_esi_1, call_0xffffffffffffe6@@ 3f, mov_edi_1, call_0xffffffffffffe6@@ 25, mov_rcx_qword_ptr_[rip+0x@@ 3@@ 96@@ d9], lea_rdx_[rip+0x@@ 25@@ 66@@ 2], jmp_0xfffffffffffffe@@ 07, call_0xffffffffffffe@@ 1d@@ d
endbr64, xor_eax_eax, cmp_dword_ptr_[rdi+0x1@@ 8]_esi, setne_al, ret
endbr64, push_rbp, mov_rdi_rsi, mov_rbp_rsi, call_0xf@@ 22@@ 5, mov_rdi_rbp, call_0xffffffffffffd@@ fa@@ d, mov_eax_1, pop_rbp, ret
endbr64, push_rbx, lea_rcx_[rip+0x2@@ 56@@ e1], mov_rbx_rdi, mov_rax_qword_ptr_[rdi+0x1@@ 280], mov_r8d_dword_ptr_[r@@ di+0x18], mov_r9d_dword_ptr_[rax+0x18], mov_edx_0x2@@ ad, xor_eax_eax, lea_rsi_[rip+0x2@@ 56@@ df], mov_edi_0x20, call_0x@@ fa@@ bf, mov_qword_ptr_[rbx+0x1@@ 28@@ 0]_0, mov_eax_1, pop_rbx, ret
endbr64, sub_rsp_8, mov_edi_dword_ptr_[r@@ di+0x18], call_0x@@ dec@@ 5, mov_eax_1, add_rsp_8, ret
endbr64, cmp_qword_ptr_[r@@ dx+@@ 8]_0, je_7, ret, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rdx, sub_rsp_8, mov_rax_qword_ptr_[rdx], cmp_rax_rdi, je_0xe, test_rax_rax, je_0x10, add_rsp_8, pop_rbx, pop_rbp, ret, mov_qword_ptr_[rdx]_0, mov_rdx_qword_ptr_[rbx+0x20], mov_rdi_qword_ptr_[rbx+0x10], call_qword_ptr_[r@@ bx+0x18], and_eax_0xfffffffd, jne_0xffffffffffffffe4, mov_qword_ptr_[rbx+@@ 8]_rbp, jmp_0xffffffffffffffd@@ e
mov_rax_qword_ptr_[rip+0x3@@ 95@@ 31], cmp_rax_rdi, je_0x2e, mov_rdx_rax, mov_rax_qword_ptr_[rax+0x1@@ 278], test_rax_rax, je_0x2a, cmp_rax_rdi, jne_0xffffffffffffffee, mov_rax_qword_ptr_[rax+0x1@@ 278], mov_qword_ptr_[rdx+0x1@@ 27@@ 8]_rax, ret, mov_rax_qword_ptr_[rax+0x1@@ 278], mov_qword_ptr_[rip+0x3@@ 94@@ f2@@ ]_rax, ret, sub_rsp_8, lea_rcx_[rip+0x2@@ 5a@@ e6], mov_edx_0x2@@ 42, lea_rsi_[rip+0x25@@ 5e@@ d], lea_rdi_[rip+0x@@ 25@@ 5e@@ d], call_0xffffffffffffe0@@ 5@@ b
push_rbp, mov_rbp_rdi, mov_rdi_qword_ptr_[rdi+0x10], call_0xffffffffffffde@@ 68, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffffff7@@ f
sub_rsp_8, mov_rax_qword_ptr_[rdi+0x1@@ 280], test_rax_rax, je_0x13, cmp_rax_rdi, jne_0x4c, cmp_qword_ptr_[rax+0x20]_0, je_0x26, add_rsp_8, ret, lea_rcx_[rip+0x@@ 25@@ 9@@ 60], mov_edx_0x3@@ 8f, lea_rsi_[rip+0x25@@ 58@@ 7], lea_rdi_[rip+0x2@@ 55@@ 99], call_0xffffffffffffd@@ ff@@ 5, lea_rcx_[rip+0x@@ 25@@ 94@@ 1], mov_edx_0x3@@ 91, lea_rsi_[rip+0x2@@ 55@@ 68], lea_rdi_[rip+0x@@ 25@@ 5a4], call_0xffffffffffffd@@ fd@@ 6, lea_rcx_[rip+0x@@ 25@@ 92@@ 2], mov_edx_0x3@@ 90, lea_rsi_[rip+0x25@@ 54@@ 9], lea_rdi_[rip+0x2@@ 55@@ 70], call_0xffffffffffffd@@ fb@@ 7
endbr64, xor_eax_eax, ret
endbr64, ret
endbr64, xor_eax_eax, ret
endbr64, xor_eax_eax, ret
endbr64, ret
endbr64, push_r13, mov_r13_rdx, push_r12, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_8, mov_r12_qword_ptr_[rip+0x@@ 39@@ 3b@@ d], test_rdi_rdi, je_0x2a, mov_r12_qword_ptr_[r@@ di+0x1@@ 278], jmp_0x21, mov_rsi_r13, mov_rdi_r12, mov_rbx_qword_ptr_[r@@ 12+0x1@@ 278], call_rbp, and_eax_0xfffffffd, je_0xa, mov_r12_rbx, test_r12_r12, jne_0xffffffffffffffe5, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret
endbr64, movsxd_rdx@@ _edi, lea_rsi_[rip-0x@@ 2b@@ e], xor_edi_edi, jmp_0xffffffffffffff9@@ 0
push_r13, push_r12, mov_r12d_ecx, push_rbp, mov_ebp_edx, push_rbx, mov_rbx_rdi, sub_rsp_0x18, test_ecx_ecx, jne_0x6c, mov_r13_rsi, mov_edx_0x1@@ 2@@ 98, xor_esi_esi, call_0xffffffffffffd@@ ed0, mov_rdi_r13, call_0xffffffffffffe@@ 2b@@ 8, mov_qword_ptr_[rbx+0x10]_rax, test_rax_rax, je_0x8b, mov_dword_ptr_[rbx+0x1@@ 8]_ebp, test_ebp_ebp, jne_0x48, lea_rax_[rip+0x3@@ 93@@ 10], mov_rdx_qword_ptr_[rax], mov_qword_ptr_[rbx+0x1@@ 27@@ 8]_rdx, mov_qword_ptr_[rax]_rbx, mov_rax_qword_ptr_[rbx+0x1@@ 280], test_rax_rax, je_0x60, cmp_rbx_rax, je_0x3f, mov_qword_ptr_[rbx+0x20]_0, xor_eax_eax, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_dword_ptr_[rbx+0x1@@ 8]_edx, test_edx_edx, je_0xffffffffffffffd0, mov_edi_ebp, call_0xc@@ 3d@@ 7, test_eax_eax, je_0xffffffffffffff@@ c5, cmp_eax_dword_ptr_[r@@ bx+0x18], jne_0x53, mov_qword_ptr_[rbx+0x1@@ 28@@ 0]_rbx, test_r12d_r12d, je_0xffffffffffffff@@ a0, lea_rsi_[rip+0x3a@@ c6], lea_rdi_[rip+0x3a@@ 8f], call_0x@@ fb@@ 1f, mov_qword_ptr_[rbx+0x20]_rax, test_rax_rax, jne_0xffffffffffffffb1, mov_rdi_qword_ptr_[rbx+0x10], call_0xffffffffffffdc@@ 3d, mov_rdi_qword_ptr_[rbx+0x20], mov_eax_0xffffffff, test_rdi_rdi, je_0xffffffffffffff@@ 9c, mov_dword_ptr_[rsp+0xc]_eax, call_0x@@ fb@@ 86, mov_eax_dword_ptr_[rsp+0xc], jmp_0xffffffffffffff8d, mov_edi_eax, call_0xfffffffffffffe@@ f6, mov_qword_ptr_[rbx+0x1@@ 28@@ 0]_rax, test_rax_rax, je_0x17, test_r12d_r12d, jne_0xffffffffffffff@@ 63, add_rax_0x1@@ 27@@ 8, jmp_0xffffffffffffff3e, test_r12d_r12d, je_0xffffffffffffff@@ 2e, jmp_0xffffffffffffffa@@ 6
endbr64, push_r12, xor_ecx_ecx, mov_r12d_edx, push_rbp, mov_rbp_rdi, push_rbx, call_0xfffffffffffffed@@ 0, test_eax_eax, js@@ _0xa8, mov_rdi_rbp, call_0xcb@@ 20, test_eax_eax, js_0xa@@ 9, mov_rdi_rbp, call_0xfffffffffffffd@@ e0, test_eax_eax, js_0x@@ 91, cmp_qword_ptr_[rbp+0x@@ 12@@ 8@@ 0]_rbp, je_0xc, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, ret, mov_rdi_rbp, call_0xf@@ 4a@@ d, test_eax_eax, jns_0xffffffffffffff@@ ec, mov_rbx_qword_ptr_[rip+0x@@ 36@@ 46@@ d], mov_ecx_dword_ptr_[r@@ bp+0x18], mov_rdi_qword_ptr_[rbx], lea_rdx_[rip+0x2@@ 54@@ 68], mov_esi_1, xor_eax_eax, call_0xffffffffffffe@@ 12@@ 9, mov_rdi_qword_ptr_[rbp+0x20], call_0x@@ fa@@ c0, mov_rdi_rbp, call_0xfffffffffffffc@@ e8, call_0xffffffffffffd@@ bb0, mov_edi_dword_ptr_[rax], call_0xffffffffffffe@@ 13@@ 9, mov_rdi_qword_ptr_[rbx], mov_r8_rax, mov_ecx_r12d, lea_rdx_[rip+0x@@ 25@@ 40@@ 4], mov_esi_1, xor_eax_eax, call_0xffffffffffffe0@@ ed, mov_eax_0xffffffff, jmp_0xffffffffffffff8b, mov_rbx_qword_ptr_[rip+0x@@ 36@@ 40@@ a], jmp_0xffffffffffffffca, mov_rdi_rbp, call_0xca@@ 95, mov_rdi_qword_ptr_[rbp+0x20], call_0x@@ fa@@ 6c, mov_rdi_rbp, call_0xfffffffffffffc@@ 94, mov_rbx_qword_ptr_[rip+0x@@ 36@@ 3e@@ 8], jmp_0xffffffffffffffa@@ 8
endbr64, push_r13, push_r12, push_rbp, test_esi_esi, je_0x49, mov_rbp_rdi, mov_edi_0x1@@ 2@@ 98, mov_r13d_esi, call_0xffffffffffffd@@ eb@@ 8, mov_r12_rax, test_rax_rax, je_0x1d, mov_edx_r13d, mov_rsi_rbp, mov_rdi_rax, call_0xfffffffffffffee@@ 2, test_eax_eax, js@@ _0xb, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, mov_rdi_r12, call_0xffffffffffffd@@ aa@@ d, xor_r12d_r12d, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, lea_rcx_[rip+0x2@@ 56@@ dd], mov_edx_0x1@@ 22, lea_rsi_[rip+0x25@@ 1f@@ 4], lea_rdi_[rip+0x27@@ fd@@ a], call_0xffffffffffffdc@@ 6@@ 2
push_r12, mov_r8d_edi, lea_rcx_[rip+0x@@ 25@@ 22@@ c], push_rbp, mov_edx_0x1@@ cd, mov_ebp_edi, sub_rsp_8, lea_rsi_[rip+0x25@@ 1b@@ c], mov_edi_0x10, xor_eax_eax, call_0xf@@ 5@@ 9a, mov_edi_ebp, call_0xc0@@ f3, mov_r12_rax, test_rax_rax, je_0x40, mov_edi_ebp, call_0xd@@ 7f@@ 4, test_eax_eax, js_0x3@@ 5, mov_esi_ebp, mov_rdi_r12, call_0xffffffffffffff@@ 36, mov_rbp_rax, test_rax_rax, je_0x23, mov_rdi_r12, call_0xffffffffffffda@@ 16, mov_rdi_rbp, call_0xd@@ 8@@ 2e, xor_eax_eax, add_rsp_8, pop_rbp, pop_r12, ret, mov_rdi_r12, call_0xffffffffffffd@@ 9f@@ 5, mov_eax_0xffffffff, jmp_0xffffffffffffffe@@ 4
endbr64, push_r14, push_r13, push_r12, push_rbp, push_rbx, test_rdi_rdi, je_0x6a, mov_rbp_rdx, mov_r13_rcx, test_rsi_rsi, je_0x56, mov_rbx_qword_ptr_[r@@ si+0x1@@ 278], test_rbx_rbx, je_0x37, mov_r14_qword_ptr_[r@@ bx+0x1@@ 280], jmp_0x12, cmp_qword_ptr_[rbx+0x1@@ 28@@ 0]_r14, jne_0x1e, mov_r12_rbx, mov_rsi_r13, mov_rdi_r12, mov_rbx_qword_ptr_[r@@ bx+0x1@@ 278], call_rbp, and_eax_0xfffffffd, je_0xa, test_rbx_rbx, jne_0xffffffffffffffdd, xor_r12d_r12d, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, mov_rbx_qword_ptr_[r@@ di+0x1@@ 280], jmp_0xffffffffffffffac, lea_rcx_[rip+0x@@ 25@@ 58@@ 8], mov_edx_0x2@@ 68, lea_rsi_[rip+0x2@@ 50@@ bf], lea_rdi_[rip+0x@@ 25@@ 12@@ a], call_0xffffffffffffdb@@ 2@@ d
endbr64, push_r15, mov_r8d_edi, lea_rcx_[rip+0x@@ 25@@ 11@@ a], push_r14, mov_edx_0x1@@ eb, lea_rsi_[rip+0x2@@ 50@@ 8d], push_r13, push_r12, push_rbp, mov_ebp_edi, mov_edi_0x10, push_rbx, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xf@@ 45@@ 1, mov_edi_ebp, call_0xfffffffffffffb@@ da, test_rax_rax, je_0x2a, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ 7e, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_edi_ebp, call_0xfffffffffffffe@@ 56, test_eax_eax, jne_0x1@@ 1a, xor_r12d_r12d, lea_r15_[r@@ sp+0x10], lea_r14_[r@@ sp+8], mov_rdx_r15, mov_rsi_r14, mov_edi_ebp, call_0xc@@ 1a0, test_eax_eax, js_0x@@ 98, xor_r13d_r13d, cmp_qword_ptr_[rsp+0x10]_0, mov_rdi_qword_ptr_[rsp+8], mov_ebx_1, jne_0x17, jmp_0x6@@ 6, inc@@ _r13, mov_rdi_qword_ptr_[rsp+8], cmp_qword_ptr_[rsp+0x1@@ 0]_r13, jbe_0x@@ 3b, mov_edi_dword_ptr_[r@@ di+r@@ 13*4], call_0xfffffffffffffb@@ 45, test_rax_rax, jne_0xffffffffffffffe5, mov_rax_qword_ptr_[rsp+8], mov_edi_dword_ptr_[r@@ ax+r@@ 13*4], call_0xfffffffffffffd@@ e2, test_eax_eax, mov_eax_0, cmovne_ebx_eax, inc@@ _r13, mov_rdi_qword_ptr_[rsp+8], cmp_qword_ptr_[rsp+0x1@@ 0]_r13, ja_0xffffffffffffff@@ cd, call_0xffffffffffffd8@@ 30, test_ebx_ebx, jne_0x16, mov_r12_qword_ptr_[rsp+0x10], jmp_0xffffffffffffff7a, call_0xffffffffffffd8@@ 18, mov_rax_qword_ptr_[rsp+0x10], cmp_rax_r12, je_0x38, mov_r12_rax, jmp_0xffffffffffffff5e, call_0xffffffffffffd@@ 86@@ 1, mov_edi_dword_ptr_[rax], call_0xffffffffffffdd@@ ea, mov_r8_rax, mov_rax_qword_ptr_[rip+0x3@@ 60@@ db], mov_ecx_ebp, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x2@@ 50@@ f7], mov_esi_1, xor_eax_eax, call_0xffffffffffffdd@@ 98, mov_edi_ebp, call_0xfffffffffffffa@@ b1, mov_rbp_qword_ptr_[r@@ ax+0x1@@ 280], mov_rdi_rbp, call_0xfffffffffffffa@@ 32, xor_ecx_ecx, lea_rdx_[rip-0x@@ 7@@ 9c], xor_esi_esi, mov_rdi_rbp, call_0xfffffffffffffd@@ cf, jmp_0xfffffffffffffeba, call_0xffffffffffffd@@ 80@@ 5, mov_r12d_dword_ptr_[rax], mov_edi_r12d, call_0xffffffffffffdd@@ 8a, mov_r8_rax, mov_rax_qword_ptr_[rip+0x3@@ 60@@ 7b], mov_ecx_ebp, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x24@@ f7@@ a], mov_esi_1, xor_eax_eax, call_0xffffffffffffdd@@ 38, mov_esi_r12d, mov_edi_ebp, call_0xd@@ 3f@@ e, jmp_0xfffffffffffffe@@ 79, call_0xffffffffffffd@@ 8c@@ 4
endbr64, cmp_qword_ptr_[rdi+0x1@@ 28@@ 0]_rsi, je_0x4d, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_8, test_rsi_rsi, je_0x40, mov_rbx_rdi, call_0xfffffffffffff85@@ 2, mov_qword_ptr_[rbx+0x1@@ 28@@ 0]_rbp, cmp_rbx_rbp, lea_rax_[rbp+0x@@ 12@@ 78], lea_rdx_[rip+0x3@@ 8d@@ 6d], cmove_rax_rdx, mov_rdx_qword_ptr_[rax], mov_qword_ptr_[rbx+0x1@@ 27@@ 8]_rdx, mov_qword_ptr_[rax]_rbx, add_rsp_8, pop_rbx, pop_rbp, ret, ret, lea_rcx_[rip+0x@@ 25@@ 300], mov_edx_0x2@@ a0, lea_rsi_[rip+0x24@@ e4@@ f], lea_rdi_[rip+0x24@@ e6@@ 7], call_0xffffffffffffd@@ 8b@@ d
endbr64, push_rbp, mov_r9_rsi, xor_eax_eax, push_rbx, mov_rbp_rsi, mov_rbx_rdi, sub_rsp_8, mov_r8d_dword_ptr_[r@@ di+0x18], lea_rcx_[rip+0x@@ 24@@ ff@@ 0], mov_edx_0x2@@ c4, lea_rsi_[rip+0x24@@ e0@@ f], mov_edi_0x20, call_0xf@@ 1e@@ f, cmp_qword_ptr_[rbx+0x1@@ 27@@ 0]_0, jne_0x10, mov_qword_ptr_[rbx+0x1@@ 27@@ 0]_rbp, add_rsp_8, pop_rbx, pop_rbp, ret, lea_rcx_[rip+0x@@ 25@@ 26@@ b], mov_edx_0x2@@ c5, lea_rsi_[rip+0x24@@ dd@@ a], lea_rdi_[rip+0x24@@ e80], call_0xffffffffffffd@@ 84@@ 8
endbr64, push_rbp, xor_eax_eax, lea_rcx_[rip+0x@@ 24@@ fb@@ a], push_rbx, mov_edx_0x2@@ cd, mov_rbx_rdi, sub_rsp_8, mov_rbp_qword_ptr_[r@@ di+0x1@@ 270], mov_r8d_dword_ptr_[r@@ di+0x18], mov_r9_rbp, lea_rsi_[rip+0x24@@ d@@ 9b], mov_edi_0x20, call_0xf@@ 17@@ b, test_rbp_rbp, je_0x2a, mov_rax_qword_ptr_[rbp+8], test_rax_rax, je_7, mov_rdi_rbp, call_rax, mov_rdi_rbp, call_0xffffffffffffd6@@ 10, mov_qword_ptr_[rbx+0x1@@ 27@@ 0]_0, add_rsp_8, pop_rbx, pop_rbp, ret, lea_rcx_[rip+0x@@ 25@@ 1c@@ 2], mov_edx_0x2@@ ce, lea_rsi_[rip+0x24@@ d@@ 51], lea_rdi_[rip+0x24@@ e@@ 13], call_0xffffffffffffd@@ 7b@@ f
endbr64, mov_rax_qword_ptr_[rdi+0x1@@ 240], test_rax_rax, je_0x22, cmp_rsi_rax, jne_0x12, jmp_0x21, cmp_rsi_rax, je_0x1a, mov_rdx_rax, mov_rax_qword_ptr_[rax], test_rax_rax, jne_0xfffffffffffffff2, mov_eax_0xffffffff, ret, lea_rdx_[r@@ di+0x1@@ 240], mov_rax_qword_ptr_[rsi], mov_qword_ptr_[rdx]_rax, xor_eax_eax, ret
endbr64, push_r14, mov_r14_rcx, push_r13, mov_r13_rdx, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, test_rsi_rsi, je_0x35, mov_rdx_r14, mov_rsi_r12, mov_rdi_rbp, mov_rbx_qword_ptr_[r12], call_r13, and_eax_0xfffffffd, je_0xa, mov_r12_rbx, test_r12_r12, jne_0xffffffffffffffe5, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, mov_r12_qword_ptr_[r@@ di+0x1@@ 240], jmp_0xffffffffffffffe@@ 1
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_rbp_qword_ptr_[r@@ si], test_rbp_rbp, jne_0x@@ e7, mov_rax_qword_ptr_[rdi+0x1@@ 240], mov_edx_0x3@@ 4d, mov_qword_ptr_[rsi]_rax, mov_eax_dword_ptr_[rdi+0x18], mov_qword_ptr_[rdi+0x1@@ 24@@ 0]_rsi, push_rax, mov_r12_rdi, xor_eax_eax, push_qword_ptr_[r@@ si+0x40], mov_rbx_rsi, lea_rcx_[rip+0x@@ 24@@ e6@@ a], mov_r9_qword_ptr_[r@@ si+0x10], mov_r8_qword_ptr_[r@@ si+0x38], mov_edi_0x10, lea_rsi_[rip+0x24@@ c@@ 31], call_0x@@ f0@@ 16, pop_rax, pop_rdx, lea_r13_[rip+0x@@ 5@@ 58], jmp_0x3d, call_0xffffffffffffd5@@ 10, mov_edi_dword_ptr_[rax], call_0xffffffffffffda@@ 99, mov_r9_rax, mov_rax_qword_ptr_[rip+0x3@@ 5d@@ 8a], mov_rcx_qword_ptr_[r@@ bp+0x10], mov_rdi_qword_ptr_[rax], mov_r8d_dword_ptr_[r@@ 12+0x18], lea_rdx_[rip+0x24@@ e@@ 37], mov_esi_1, xor_eax_eax, call_0xffffffffffffda@@ 40, mov_rsi_rbp, mov_rcx_r12, mov_rdx_r13, mov_rdi_rbx, call_0x38@@ ff, mov_rbp_rax, test_rax_rax, jne_0xffffffffffffffb4, mov_rcx_qword_ptr_[r@@ bx+0x30], xor_esi_esi, lea_rdx_[rip+0x@@ 42@@ 5], mov_rdi_r12, call_0xfffffffffffffed@@ 2, test_rax_rax, je_0x1a, call_0xffffffffffffd@@ 4a@@ 8, mov_edi_dword_ptr_[rax], call_0xffffffffffffda@@ 31, mov_rax_qword_ptr_[0x@@ 10], ud2, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, lea_rcx_[rip+0x@@ 24@@ f8@@ e], mov_edx_0x3@@ 4a, lea_rsi_[rip+0x24@@ b7@@ d], lea_rdi_[rip+0x24@@ c4@@ f], call_0xffffffffffffd@@ 5e@@ b
endbr64, push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, mov_rdi_rsi, mov_r12_qword_ptr_[r@@ si+0x10], call_0xe@@ 9a@@ b, sub_rsp_8, push_r12, mov_r8d_dword_ptr_[r@@ bx+0x18], mov_r9_rax, lea_rcx_[rip+0x@@ 24@@ db@@ 2], mov_edx_0x3@@ 97, lea_rsi_[rip+0x24@@ b@@ 31], xor_eax_eax, mov_edi_0x20, call_0xe@@ f0@@ f, mov_rdi_rbx, call_0xfffffffffffff56@@ 7, mov_rsi_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rbx+0x20], call_0xf@@ 5d@@ a, pop_rdx, pop_rcx, test_rax_rax, jne_0x65, mov_rsi_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rbx+0x20], mov_rdx_rbp, call_0xf@@ 3a@@ 3, test_eax_eax, js@@ _9, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, ret, call_0xffffffffffffd@@ 3e@@ 3, mov_edi_dword_ptr_[rax], call_0xffffffffffffd@@ 96@@ c, mov_rdi_rbp, mov_r12_qword_ptr_[r@@ bp+0x10], mov_rbx_rax, call_0xe@@ 92@@ d, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x3@@ 5c@@ 4e], mov_r9_rbx, mov_rdi_qword_ptr_[rax], mov_r8_r12, lea_rdx_[rip+0x24@@ d8@@ e], mov_esi_1, xor_eax_eax, call_0xffffffffffffd@@ 90@@ 7, mov_eax_0xffffffff, jmp_0xffffffffffffffb5, lea_rcx_[rip+0x@@ 24@@ e@@ 84], mov_edx_0x3@@ 9e, lea_rsi_[rip+0x24@@ a@@ 93], lea_rdi_[rip+0x24@@ d@@ 29], call_0xffffffffffffd@@ 50@@ 1
endbr64, mov_eax_dword_ptr_[r@@ dx+0x10], test_eax_eax, je_7, ret, push_r12, mov_edi_0x20, mov_r12_rsi, push_rbp, push_rbx, mov_rbx_rdx, call_0xffffffffffffd@@ 6d@@ 1, mov_rbp_rax, mov_rsi_qword_ptr_[rbx+8], test_rax_rax, je_0x3a, mov_rcx_qword_ptr_[rbx], mov_rdx_r12, mov_rdi_rax, call_0xe@@ 56@@ 7, test_eax_eax, js@@ _0x28, mov_rax_qword_ptr_[rbx+8], mov_rsi_rbp, mov_rdi_qword_ptr_[r@@ ax+0x1@@ 280], call_0xfffffffffffffec@@ 0, test_eax_eax, js@@ _9, pop_rbx, pop_rbp, pop_r12, ret, mov_rdi_rbp, call_0xe@@ 5@@ 1d, mov_rdi_rbp, call_0xffffffffffffd@@ 2a@@ 5, mov_dword_ptr_[rbx+0x1@@ 0]_0xffffffff, jmp_0xffffffffffffffc@@ b
endbr64, push_r12, push_rbp, mov_rbp_rdi, mov_rdi_rsi, push_rbx, mov_rbx_rsi, mov_r12_qword_ptr_[r@@ si+0x10], call_0xe@@ 8@@ 3b, sub_rsp_8, push_r12, mov_r8d_dword_ptr_[r@@ bp+0x18], mov_r9_rax, lea_rcx_[rip+0x@@ 24@@ cd@@ a], mov_edx_0x3@@ ad, lea_rsi_[rip+0x24@@ 9c@@ 1], xor_eax_eax, mov_edi_0x20, call_0x@@ ed@@ 9f, mov_rdi_rbp, call_0xfffffffffffff3f@@ 7, mov_rsi_qword_ptr_[rbx+0x10], mov_rdi_qword_ptr_[rbp+0x20], call_0xf@@ 35@@ a, pop_rdx, pop_rcx, cmp_rbx_rax, jne_7, pop_rbx, pop_rbp, pop_r12, ret, lea_rcx_[rip+0x@@ 24@@ d@@ 42], mov_edx_0x3@@ b1, lea_rsi_[rip+0x24@@ 98@@ 1], lea_rdi_[rip+0x24@@ a6@@ 5], call_0xffffffffffffd@@ 3e@@ f
push_r14, push_r13, push_r12, push_rbp, sub_rsp_8, cmp_qword_ptr_[r@@ si+0x1@@ 28@@ 0]_rsi, jne_0x10@@ 6, mov_r12_rdi, mov_rbp_rsi, test_byte_ptr_[rdi+0x@@ 24@@ ]_6, jne_0x3e, mov_rsi_rdi, mov_rdi_rbp, call_0xa@@ e@@ 36, mov_rdi_qword_ptr_[rbp+0x20], mov_rsi_rax, mov_r13_rax, call_0xf@@ 3f@@ 7, test_rax_rax, je_0x5f, cmp_qword_ptr_[rax+8]_0, jne_0x@@ ef, mov_qword_ptr_[rax+@@ 8]_r12, xor_eax_eax, add_rsp_8, pop_rbp, pop_r12, pop_r13, pop_r14, ret, sub_rsp_8, push_qword_ptr_[r@@ di+0x18], mov_r8d_dword_ptr_[r@@ si+0x18], mov_edx_0x2@@ dd, mov_r9_qword_ptr_[r@@ di+0x10], xor_eax_eax, lea_rcx_[rip+0x@@ 24@@ c@@ 23], lea_rsi_[rip+0x24@@ 8e@@ 7], mov_edi_0x20, call_0xec@@ c7, pop_rax, pop_rdx, add_rsp_8, pop_rbp, pop_r12, pop_r13, xor_eax_eax, pop_r14, ret, mov_edi_0x20, call_0xffffffffffffd5@@ 3b, mov_r14_rax, test_rax_rax, je_0x56, mov_rcx_r12, mov_rdx_r13, mov_rsi_rbp, mov_rdi_rax, call_0xe@@ 352, test_eax_eax, js_0x4@@ 1, mov_rsi_r14, mov_rdi_rbp, call_0xfffffffffffffd@@ 33, test_eax_eax, js_0x2@@ a, mov_rsi_rbp, mov_rdi_r14, call_0xe@@ 4@@ 94, test_eax_eax, js@@ _0x10, add_rsp_8, pop_rbp, pop_r12, pop_r13, xor_eax_eax, pop_r14, ret, mov_rsi_r14, mov_rdi_rbp, call_0xfffffffffffffe@@ 77, mov_rdi_r14, call_0xe@@ 36@@ f, mov_rdi_r14, call_0xffffffffffffd0@@ f7, mov_eax_0xffffffff, jmp_0xffffffffffffff41, lea_rcx_[rip+0x@@ 24@@ c7@@ 1], mov_edx_0x2@@ d9, lea_rsi_[rip+0x24@@ 8@@ 40], lea_rdi_[rip+0x24@@ 86@@ 7], call_0xffffffffffffd@@ 2a@@ e, lea_rcx_[rip+0x@@ 24@@ c5@@ 2], mov_edx_0x3@@ 01, lea_rsi_[rip+0x24@@ 8@@ 21], lea_rdi_[rip+0x26@@ e@@ 98], call_0xffffffffffffd@@ 28@@ f
endbr64, push_r12, push_rbp, sub_rsp_8, movzx_eax_byte_ptr_[r@@ si+0x@@ 24], test_al_4, je_0x3f, and_eax_0xfffffffb, mov_byte_ptr_[rsi+0x@@ 24@@ ]_al, mov_r12_rdi, mov_rbp_rsi, mov_edi_0x20, lea_rsi_[rip+0x24@@ 7e0], lea_rcx_[rip+0x@@ 24@@ 8e@@ 2], mov_edx_0x3@@ 32, xor_eax_eax, call_0xe@@ bb@@ 7, add_rsp_8, mov_rdi_rbp, pop_rbp, mov_rsi_r12, pop_r12, jmp_0xfffffffffffffe@@ 55, lea_rcx_[rip+0x@@ 24@@ bf@@ 9], mov_edx_0x3@@ 30, lea_rsi_[rip+0x24@@ 7a@@ 8], lea_rdi_[rip+0x24@@ 89@@ a], call_0xffffffffffffd@@ 21@@ 6
endbr64, test_rdx_rdx, je_0xb5, push_r15, lea_r15_[rip+0x@@ 24@@ 8a@@ 7], push_r14, mov_r14_rdi, push_r13, push_r12, mov_r12_rsi, push_rbp, push_rbx, mov_rbx_rdx, sub_rsp_8, lea_r13_[rip+0x@@ 30@@ 6e], xor_ebp_ebp, mov_rcx_qword_ptr_[rbx+8], mov_rsi_rbp, mov_rdx_r13, mov_rdi_r12, call_0x34@@ 7b, mov_rbp_rax, test_rax_rax, je_0x50, movzx_eax_byte_ptr_[rbp+0x@@ 24], test_al_2, je_0xffffffffffffffe0, and_eax_0xfffffffd, mov_byte_ptr_[rbp+0x@@ 24@@ ]_al, lea_rsi_[rip+0x24@@ 7@@ 34], mov_edi_0x20, xor_eax_eax, mov_rcx_r15, mov_edx_0x3@@ 28, call_0x@@ eb@@ 0a, mov_rsi_r14, mov_rdi_rbp, call_0xfffffffffffffd@@ af, test_eax_eax, jns_0xffffffffffffff@@ b0, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_2, pop_r15, ret, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, jne_0xffffffffffffff@@ 8c, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_1, pop_r15, ret, mov_eax_1, ret
endbr64, sub_rsp_8, call_0xfffffffffffffd@@ 58, shr_eax_0x1f, inc_eax, add_rsp_8, ret
endbr64, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x10]_rdi, mov_rdi_qword_ptr_[rdi+0x20], mov_qword_ptr_[rsp]_rsi, mov_qword_ptr_[rsp+0x18]_rdx, lea_rsi_[rip-0x@@ 10@@ 21], mov_rdx_rsp, mov_qword_ptr_[rsp+0x20]_rcx, mov_qword_ptr_[rsp+8]_0, call_0xf@@ 1d@@ e, mov_rcx_qword_ptr_[rsp+0x28], xor_rcx_qword_ptr_fs:[0x28], mov_rax_qword_ptr_[rsp+8], jne_7, add_rsp_0x38, ret, call_0xffffffffffffd0@@ 3@@ f
push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_ebx_esi, mov_rax_qword_ptr_[rdi+0x@@ 38], test_rax_rax, je_0x32, lea_rax_[rax@@ +rax*8@@ -9], lea_rax_[r@@ bp+rax*8], mov_edx_dword_ptr_[rax+0x@@ 48], test_edx_edx, jne_0xa, mov_qword_ptr_[rax+0x@@ 50]_0, mov_rdi_rbp, call_0x1@@ 20@@ 4c, mov_rax_qword_ptr_[rbp+0x@@ 38], test_rax_rax, jne_0xffffffffffffffd8, test_ebx_ebx, je_0x6c, mov_rbx_qword_ptr_[rbp+0x@@ 12@@ 40], test_rbx_rbx, je_0x23, mov_r12_rbx, mov_rdi_r12, mov_rbx_qword_ptr_[rbx], call_0x2@@ fff, mov_rdi_r12, call_0xffffffffffffce@@ 67, test_rbx_rbx, jne_0xffffffffffffffe7, cmp_qword_ptr_[rbp+0x@@ 20]_0, mov_qword_ptr_[rbp+0x@@ 12@@ 40]_0, je_0x26, xor_ecx_ecx, lea_rdx_[rip-0x@@ 11@@ 7e], xor_esi_esi, mov_rdi_rbp, call_0xfffffffffffffe@@ fd, mov_rdi_qword_ptr_[rbp+0x20], call_0x@@ ed@@ 94, mov_qword_ptr_[rbp+0x@@ 20]_0, pop_rbx, pop_rbp, pop_r12, ret, mov_rdi_qword_ptr_[rbp+0x10], call_0xffffffffffffce@@ 1c, jmp_0xffffffffffffff8@@ d
endbr64, push_rbp, mov_rbp_rdi, call_0xfffffffffffff0@@ 48, mov_rdi_rbp, call_0xbd@@ 80, mov_rdi_rbp, xor_esi_esi, pop_rbp, jmp_0xffffffffffffff2@@ 5
endbr64, push_rbp, xor_eax_eax, mov_rbp_rdi, mov_r8d_dword_ptr_[r@@ di+0x18], lea_rcx_[rip+0x@@ 24@@ 6@@ 80], mov_edx_0x2@@ b6, lea_rsi_[rip+0x24@@ 53@@ a], mov_edi_0x20, call_0xe@@ 9@@ 1a, cmp_qword_ptr_[rbp+0x@@ 12@@ 8@@ 0]_rbp, je_0x26, mov_rdi_rbp, call_0xffffffffffffe@@ ed@@ 9, mov_rdi_rbp, call_0xbb@@ 41, mov_rdi_rbp, call_0xffffffffffffff@@ 99, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffff@@ cd@@ a0, xor_ecx_ecx, lea_rdx_[rip-0x@@ 12@@ 11], xor_esi_esi, mov_rdi_rbp, call_0xfffffffffffff3a@@ a, jmp_0xffffffffffffffc@@ 9
endbr64, push_rbx, mov_rbx_rdi, call_0xffffffffffffe@@ fd8, test_eax_eax, js_0x6@@ a, mov_rdi_rbx, call_0xbd@@ 1c, test_eax_eax, js_0x5@@ e, mov_esi_1, mov_rdi_rbx, call_0xfffffffffffffe@@ 8b, mov_edx_dword_ptr_[r@@ bx+0x18], xor_esi_esi, mov_ecx_1, mov_rdi_rbx, call_0xfffffffffffff0@@ 49, test_eax_eax, js@@ _0x3b, mov_rdi_rbx, call_0xe@@ 65@@ d, test_eax_eax, js@@ _6, xor_eax_eax, pop_rbx, ret, mov_rax_qword_ptr_[rip+0x3@@ 56@@ 19], mov_ecx_dword_ptr_[r@@ bx+0x18], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x24@@ 6@@ 14], mov_esi_1, xor_eax_eax, call_0xffffffffffffd@@ 2d@@ 5, mov_rdi_qword_ptr_[rbx+0x20], call_0xec@@ 6c, mov_eax_0xffffffff, pop_rbx, ret
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rcx, push_rbx, sub_rsp_8, mov_rcx_qword_ptr_[r@@ si+8], test_rcx_rcx, je_0x70, mov_r12_rdx, lea_rdx_[rip+0x3@@ 24@@ c], mov_r13_rsi, add_rcx_8, xor_esi_esi, call_0xfffffffffffff75@@ 3, mov_rbx_rax, test_rax_rax, je_0x48, mov_rcx_qword_ptr_[r@@ 13+0x10], lea_rdx_[rip+0x2d@@ 2b], xor_esi_esi, mov_rdi_rax, call_0x3@@ 14@@ 6, test_rax_rax, je_0x2e, test_r12_r12, je_6, mov_qword_ptr_[r12@@ ]_rbx, xor_r8d_r8d, test_rbp_rbp, je_6, mov_qword_ptr_[rbp]_rax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_eax_r8d, pop_r13, ret, mov_r8d_0xffffffff, jmp_0xffffffffffffffe3, lea_rcx_[rip+0x@@ 24@@ 77@@ 1], mov_edx_0x3@@ eb, lea_rsi_[rip+0x24@@ 3d0], lea_rdi_[rip+0x24@@ 5@@ 17], call_0xffffffffffffce@@ 3@@ e
endbr64, push_r15, xor_ecx_ecx, push_r14, push_r13, mov_r13d_edx, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x38, mov_rsi_qword_ptr_[r@@ si+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0xffffffffffffef@@ 1f, test_eax_eax, js@@ _0xf@@ 3, mov_eax_dword_ptr_[r12+0x@@ 30], mov_dword_ptr_[rbp+0x@@ 30]_eax, movzx_eax_word_ptr_[r@@ 12+0x1@@ 268], mov_word_ptr_[rbp+0x@@ 12@@ 68@@ ]_ax, movzx_eax_byte_ptr_[r@@ 12+0x1@@ 26@@ a], mov_byte_ptr_[rbp+0x@@ 12@@ 6a@@ ]_al, cmp_qword_ptr_[rbp+0x@@ 12@@ 8@@ 0]_rbp, je_0x2c, xor_eax_eax, mov_rcx_qword_ptr_[rsp+0x28], xor_rcx_qword_ptr_fs:[0x28], jne_0x2@@ d7, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[r12+0x1@@ 280], lea_rbx_[r@@ bp+0x@@ 12@@ 40], mov_r14_qword_ptr_[r@@ ax+0x1@@ 240], test_r14_r14, jne_0x1e, jmp_0x@@ c5, mov_r14_qword_ptr_[r@@ 14], mov_rbx_qword_ptr_[rbx], test_r14_r14, je_0xa7, mov_edi@@ _0x50, call_0xffffffffffffcf@@ 5c, mov_qword_ptr_[rbx]_rax, mov_rdi_rax, test_rax_rax, je_0xe, mov_rsi_r14, call_0x2@@ da@@ 9, test_eax_eax, jns_0xffffffffffffff@@ d2, mov_rdi_qword_ptr_[rbp+0x20], call_0xea@@ bc, mov_rdi_rbp, call_0xffffffffffffec@@ e4, mov_rbx_qword_ptr_[rbp+0x@@ 12@@ 40], test_rbx_rbx, je_0x20, mov_rbp_rbx, mov_rdi_rbp, mov_rbx_qword_ptr_[rbx], call_0x2@@ cc@@ 7, mov_rdi_rbp, call_0xffffffffffffcb@@ 2f, test_rbx_rbx, jne_0xffffffffffffffe7, call_0xffffffffffffcb@@ 85, mov_edi_dword_ptr_[rax], call_0xffffffffffffd@@ 10e, mov_r9_rax, mov_rax_qword_ptr_[rip+0x@@ 35@@ 3@@ ff], mov_ecx_dword_ptr_[r@@ 12+0x18], mov_rdi_qword_ptr_[rax], mov_r8d_r13d, lea_rdx_[rip+0x24@@ 5c@@ d], mov_esi_1, xor_eax_eax, call_0xffffffffffffd0@@ b6, mov_eax_0xffffffff, jmp_0xffffffffffffff0c, mov_rax_qword_ptr_[r12+0x1@@ 280], mov_rdi_qword_ptr_[rax+0x20], lea_rdx_[rsp+0x10], lea_rsi_[rip-0x@@ 8@@ 48], mov_qword_ptr_[rsp+0x10]@@ _r12, mov_qword_ptr_[rsp+0x1@@ 8]_rbp, mov_dword_ptr_[rsp+0x20]_0, call_0x@@ ed@@ 96, mov_edx_dword_ptr_[rsp+0x20], test_edx_edx, js_0xffffffffffffff@@ 4b, lea_rbx_[r@@ bp+0x40], lea_rsi_[r12+0x@@ 40], mov_edx_0x1@@ 200, mov_rdi_rbx, call_0xffffffffffffcd@@ f4, mov_rax_qword_ptr_[r12+0x@@ 38], xor_r14d_r14d, mov_qword_ptr_[rbp+0x@@ 38]_rax, test_rax_rax, je_0x9c, mov_rsi_qword_ptr_[rbx+0x28], test_rsi_rsi, je_0x17, mov_rdi_rbp, call_0x5@@ f0@@ 4, test_rax_rax, je_0x1@@ 30, mov_qword_ptr_[rbx+0x28]_rax, mov_rsi_qword_ptr_[rbx+0x@@ 30], test_rsi_rsi, mov_qword_ptr_[rsp+8]_rsi, je_0x2d, mov_edi_0x40, call_0xffffffffffffce@@ 1f, test_rax_rax, mov_rsi_qword_ptr_[rsp+8], mov_r15_rax, je_0x8f, mov_rdi_rax, call_0x5@@ 29@@ 6, test_eax_eax, js@@ _0x7f, mov_qword_ptr_[rbx+0x@@ 30]@@ _r15, mov_eax_dword_ptr_[rbx+8], test_eax_eax, jne_0x1f, mov_rsi_qword_ptr_[rbx], test_rsi_rsi, je_0x17, xor_edx_edx, mov_rcx_rbx, mov_rdi_rbp, call_0xfffffffffffffd@@ 02, test_eax_eax, jne_0x@@ e1, inc@@ _r14, add_rbx@@ _0x48, cmp_qword_ptr_[rbp+0x@@ 3@@ 8]_r14, ja_0xffffffffffffff@@ 7a, mov_rsi_r12, mov_rdi_rbp, call_0xb@@ 96@@ e, test_eax_eax, js_0x1@@ d, mov_rsi_r12, mov_rdi_rbp, call_0xffffffffffffec@@ 1f, test_eax_eax, jns_0xffffffffffff@@ fd@@ e6, mov_rdi_rbp, call_0xb@@ 93@@ f, xor_esi_esi, mov_rdi_rbp, call_0xfffffffffffffa@@ e5, mov_eax_0xffffffff, jmp_0xfffffffffffffd@@ cb, test_r14_r14, je_0x3b, lea_rax_[r@@ 14+r@@ 14*8], lea_r15_[r@@ bp+rax*8], mov_rdi_qword_ptr_[r15+0x@@ 70], xor_ebx_ebx, mov_qword_ptr_[rsp+8]_rdi, call_0x5@@ 57@@ 3, mov_rdi_qword_ptr_[rsp+8], inc_rbx, call_0xffffffffffffc@@ 97@@ 6, mov_qword_ptr_[r15+0x@@ 70]_0, xor_edi_edi, cmp_rbx_r14, jne_0xffffffffffffffdc, lea_r15_[r@@ 14+1], lea_rax_[r@@ 14+r@@ 14*8], lea_r14_[r@@ bp+rax*8], mov_rdi_qword_ptr_[r14+0x@@ 68], xor_ebx_ebx, inc_rbx, call_0x5e@@ 15, mov_qword_ptr_[r14+0x@@ 68]_0, xor_edi_edi, cmp_r15@@ _rbx, ja_0xffffffffffffff@@ eb, jmp_0xfffffffffffffdd@@ 1, endbr64, test_r14_r14, je_0xfffffffffffffd@@ c5, mov_r15_r14, jmp_0xffffffffffffffbe, lea_rcx_[rip+0x@@ 24@@ 54@@ b], mov_edx_0x1@@ b5, lea_rsi_[rip+0x24@@ 0@@ 72], lea_rdi_[rip+0x24@@ 1c@@ 5], call_0xffffffffffffca@@ e0, call_0xffffffffffffca@@ 5@@ b
endbr64, push_r12, mov_r12_rcx, push_rbp, mov_rbp_rdx, push_rbx, test_rsi_rsi, je_0x37, mov_rbx_qword_ptr_[r@@ si+8], jmp_0x22, mov_rcx_r12, mov_rdx_rbp, mov_rdi_rbx, call_0x2d@@ 57, mov_rsi_rax, test_rax_rax, jne_0xc, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, jne_0xffffffffffffffe4, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, ret, mov_rbx_qword_ptr_[r@@ di+0x1@@ 240], jmp_0xffffffffffffffe@@ a
mov_rax_qword_ptr_[rdi], movsx_r8d@@ _byte_ptr_[rax], cmp_r8b@@ _sil, jne_0xb, inc_rax, mov_qword_ptr_[rdi]_rax, xor_eax_eax, ret, sub_rsp_8, movsx_ecx@@ _sil, mov_rdi_qword_ptr_[rip+0x@@ 37@@ ee@@ 4], mov_esi_dword_ptr_[rip+0x@@ 37@@ ee@@ 6], xor_eax_eax, lea_rdx_[rip+0x24@@ 4c@@ 4], call_0x13@@ 2d@@ d, mov_eax_0xffffffff, add_rsp_8, ret
push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, mov_rdi_rsi, push_rbx, sub_rsp_8, call_0xffffffffffffc@@ 97@@ d, mov_rbx_qword_ptr_[rbp], mov_rdx_rax, mov_rsi_r12, mov_rdi_rbx, mov_r13_rax, call_0xffffffffffffc@@ 8b@@ 8, test_eax_eax, jne_0x31, mov_r12d_eax, add_rbx@@ _r13, call_0xffffffffffffce@@ 39, mov_rax_qword_ptr_[rax], movsx_rdx@@ _byte_ptr_[rbx], test_byte_ptr_[rax+rdx*@@ 2@@ ]_8, jne_0x19, mov_qword_ptr_[rbp]_rbx, add_rsp_8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, mov_r12d_0xffffffff, jmp_0xffffffffffffffe@@ 7
push_r12, push_rbx, sub_rsp_8, lea_rax_[rip+0x@@ 37@@ e@@ 22], mov_r12_qword_ptr_[rax], test_r12_r12, je_0x26, mov_rbx_rdi, jmp_0x11, mov_r12_qword_ptr_[r@@ 12+0x18], test_r12_r12, je_0x12, mov_rsi_qword_ptr_[r12], mov_rdi_rbx, call_0xffffffffffffca@@ 6f, test_eax_eax, jne_0xffffffffffffffe8, add_rsp_8, pop_rbx, mov_rax_r12, pop_r12, ret
sub_rsp_8, mov_rcx_rdi, mov_esi_dword_ptr_[rip+0x@@ 37@@ df@@ 3], mov_rdi_qword_ptr_[rip+0x@@ 37@@ de@@ 4], xor_eax_eax, lea_rdx_[rip+0x24@@ 3e@@ 2], call_0x13@@ 1e@@ 3, mov_eax_0xffffffff, add_rsp_8, ret
push_r12, push_rbp, push_rbx, mov_r12d_dword_ptr_[r@@ si], test_r12d_r12d, je_0x16, xor_r12d_r12d, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, mov_rbp_rdi, mov_edi_0x38, mov_rbx_rsi, call_0xffffffffffffc@@ b0@@ 5, test_rax_rax, je_0x39, mov_rdx_qword_ptr_[rbp], movdqu_xmm0_xmmword_ptr_[r@@ dx], movups_xmmword_ptr_[rax]_xmm0, movdqu_xmm1_xmmword_ptr_[r@@ dx+0x10], movups_xmmword_ptr_[rax+0x1@@ 0@@ ]_xmm1, movdqu_xmm2_xmmword_ptr_[r@@ dx+0x20], movups_xmmword_ptr_[rax+0x@@ 20]_xmm2, mov_rdx_qword_ptr_[rdx+0x@@ 30], mov_qword_ptr_[rbp]_rax, mov_qword_ptr_[rax+0x30]_rdx, mov_dword_ptr_[rbx@@ ]_1, mov_eax_r12d, pop_rbx, pop_rbp, pop_r12, ret, call_0xffffffffffffc@@ 74@@ 4, mov_edi_dword_ptr_[rax], or_r12d@@ _0xffffffff, call_0xffffffffffffc@@ cc@@ 9, mov_esi_dword_ptr_[rip+0x@@ 37@@ d@@ 4e], mov_rdi_qword_ptr_[rip+0x@@ 37@@ d@@ 3f], mov_rcx_rax, lea_rdx_[rip+0x24@@ 35@@ 2], xor_eax_eax, call_0x13@@ 13b, jmp_0xffffffffffffff7@@ 5
mov_rax_qword_ptr_[rdi+0x20], mov_rsi_qword_ptr_[r@@ di+8], cmp_rax_rsi, jb@@ _0x8@@ d, lea_r10_[rip+0x@@ 9@@ 1b8], mov_dword_ptr_[rdi+0x@@ 28]_1, mov_rdx_-0x@@ 30, movzx_r8d_word_ptr_[r@@ 10], and_r8@@ w@@ _4, jne_0x33, mov_dword_ptr_[rdi+0x@@ 28]_1, xor_eax_eax, xor_edx_edx, ret, test_r8@@ w@@ _r8w, je_0x8f, lea_rdx_[rdx@@ +rdx*4], add_rdx_rdx, mov_dword_ptr_[rdi+0x@@ 28]_1, mov_rcx@@ _-0x@@ 30, add_rdx_rcx, cmp_rsi_rax, jbe_0xffffffffffffff@@ db, mov_rcx_qword_ptr_[rdi], movsx_ecx_byte_ptr_[r@@ cx+rax], movzx_r11d@@ _cl, test_byte_ptr_[r@@ 10+r@@ 11@@ *@@ 2@@ ]_4, je_0x5c, lea_rdx_[rdx@@ +rdx*4], add_rdx_rdx, test_cl_cl, je_0xffffffffffffffcf, add_rax_1, sub_ecx@@ _0x30, mov_qword_ptr_[rdi+0x@@ 20]_rax, movsxd_rcx_ecx, jmp_0xffffffffffffffcd, mov_rdx_qword_ptr_[rdi], movzx_ecx_byte_ptr_[r@@ dx+rax], test_cl_cl, je_0xffffffffffffff@@ 70, lea_r10_[rip+0x@@ 9@@ 12@@ 2], add_rax_1, movzx_r8d@@ _cl, movsx_edx@@ _cl, mov_qword_ptr_[rdi+0x@@ 20]_rax, test_byte_ptr_[r@@ 10+r@@ 8@@ *@@ 2@@ ]_4, je_0xffffffffffffff@@ 6f, sub_edx@@ _0x30, movsxd_rdx_edx, cmp_cl@@ _0x30, jne_0x2b, mov_rcx_rdx, add_rcx_rax, mov_qword_ptr_[rdi+0x@@ 20]_rcx, jb_0xffffffffffffff@@ 54, cmp_rcx_rsi, ja_0xffffffffffffff@@ 4b, add_rax_qword_ptr_[r@@ di], mov_ecx_0, test_rdx_rdx, cmove_rax@@ _rcx, ret, movzx_r8d_word_ptr_[r@@ 10], and_r8d@@ _4, jmp_0xffffffffffffff5@@ e
push_r15, push_r14, mov_r14d_edx, push_r13, push_r12, push_rbp, mov_rbp_rdi, mov_edi_0x4@@ 8, push_rbx, mov_rbx_rsi, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xffffffffffffc@@ 9@@ 14, mov_r12_rax, test_rax_rax, je_0x90, call_0xffffffffffffcb@@ 53, mov_rdx_qword_ptr_[rbp], mov_rax_qword_ptr_[rax], movsx_rdx_byte_ptr_[r@@ dx], test_byte_ptr_[rax+rdx*@@ 2+1]_8, je_0x9e, lea_rsi_[rsp+0x10], mov_rdi_rbp, call_0xffffffffffffff@@ 20, test_eax_eax, js_0x2@@ 71, mov_rdi_qword_ptr_[rsp+0x10], test_rdi_rdi, js_0x2@@ 3f, movsxd_rax@@ _edi, cmp_rdi_rax, jne_0x3@@ a4, mov_edi_3, call_0x3@@ 3d@@ 4, mov_rsi_qword_ptr_[rsp+0x10], xor_ecx_ecx, mov_rdx_rax, mov_rdi_r12, call_0x5@@ 23@@ 2, test_r14d_r14d, je_0x1b, mov_esi_1, mov_rdi_r12, call_0x68@@ 30, test_rax_rax, je_0x2@@ 20, mov_r12_rax, mov_dword_ptr_[rbx@@ ]_1, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x3@@ 74, add_rsp_0x28, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_rbp, call_0xfffffffffffffd@@ bd, mov_r13_rax, test_rax_rax, je_0x2@@ 12, movzx_eax_byte_ptr_[rax], mov_r15d_eax, sub_r15d@@ _0x61, jne_0x11, movzx_r15d_byte_ptr_[r@@ 13+1], sub_r15d@@ _0x72, je_0x1@@ 87, cmp_eax_0x6@@ 5, jne_0xae, cmp_byte_ptr_[r13+@@ 1]@@ _0x6c, jne_0xa3, cmp_byte_ptr_[r13+@@ 2]@@ _0x74, jne_0x98, lea_rax_[r@@ 13+@@ 3], lea_rsi_[rsp+8], lea_rdi_[rsp+0x10], mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffffe@@ 2f, test_eax_eax, js_0x1@@ b8, mov_rdi_qword_ptr_[rsp+8], movsxd_rax@@ _edi, cmp_rdi_rax, jne_0x2@@ ce, test_r15d_r15d, jne_0x1@@ be, mov_rsi_qword_ptr_[rsp+8], test_rsi_rsi, jne_0x1@@ a0, xor_edx_edx, lea_rsi_[rip+0x24@@ 0@@ 8b], mov_rdi_r12, call_0x50@@ 6e, test_r14d_r14d, je_0x1@@ 56, mov_esi_1, mov_rdi_r12, call_0x67@@ 38, mov_rbp_rax, test_rax_rax, je_0x1@@ 5d, mov_rdi_r13, call_0xffffffffffffc@@ 3a@@ 4, mov_r12_rbp, mov_dword_ptr_[rbx@@ ]_1, jmp_0xfffffffffffffefd, lea_r8_[rip+0x@@ 24@@ 0@@ 43], mov_ecx_7, mov_rsi_r13, mov_rdi_r8, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x1@@ bd, mov_ecx_5, lea_rdi_[rip+0x@@ 25@@ 110], mov_rsi_r13, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x1@@ df, mov_rcx_qword_ptr_[rbp], movzx_edx_byte_ptr_[r@@ cx], cmp_dl_0x20, jne_0x1a, lea_rax_[r@@ cx+1], mov_qword_ptr_[rbp]_rax, mov_rcx_rax, inc_rax, movzx_edx_byte_ptr_[r@@ ax-1], cmp_dl_0x20, je_0xffffffffffffffef, cmp_dl@@ _0x28, jne_0x1@@ 8a, inc_rcx, mov_qword_ptr_[rbp@@ ]_rcx, lea_rsi_[rsp+0x10], xor_edx_edx, mov_rdi_rbp, call_0xfffffffffffffd@@ b3, mov_r14_rax, test_rax_rax, je_0xb8, mov_esi_0x2@@ 9, mov_rdi_rbp, call_0xfffffffffffffa@@ 6a, test_eax_eax, js_0x1@@ a3, mov_esi_dword_ptr_[rsp+0x10], mov_rdi_r14, call_0x66@@ 66, test_rax_rax, je_0x1@@ 8e, mov_dword_ptr_[rbx@@ ]_1, mov_r12_rax, jmp_0xfffffffffffffe@@ 36, movzx_r15d_byte_ptr_[r@@ 13+2], sub_r15d@@ _0x6@@ 7, je_0xfffffffffffffe@@ 95, jmp_0xfffffffffffffe@@ 70, mov_rcx_rdi, mov_esi_dword_ptr_[rip+0x@@ 37@@ 92@@ 3], mov_rdi_qword_ptr_[rip+0x@@ 37@@ 9@@ 14], lea_rdx_[rip+0x24@@ 15@@ 5], xor_eax_eax, call_0x1@@ 2d@@ 13, mov_rdi_r12, call_0xffffffffffffc@@ 28@@ 5, xor_r12d_r12d, jmp_0xfffffffffffffd@@ e4, mov_rbp_r12, jmp_0xfffffffffffffe@@ c6, mov_rdi_rbp, call_0xffffffffffffc@@ 26@@ 5, mov_rdi_r15, call_0xffffffffffffc@@ 25@@ d, mov_rdi_r13, call_0xffffffffffffc@@ 24@@ d, jmp_0xffffffffffffffc0, dec@@ _rsi, mov_rdi_r12, call_0x4f@@ 1a, jmp_0xfffffffffffffe@@ 6c, mov_edi_0x4@@ 8, call_0xffffffffffffc@@ 60@@ b, mov_edi_0x4@@ 8, mov_rbp_rax, call_0xffffffffffffc@@ 5f@@ e, mov_r15_rax, test_rbp_rbp, je_0xffffffffffffff@@ ab, test_rax_rax, je_0xffffffffffffff@@ a6, call_0x56@@ 1c, mov_rsi_rax, xor_edx_edx, mov_rdi_rbp, call_0x5@@ 00@@ f, mov_edi_3, call_0x30@@ f5, mov_rdx_rax, mov_rax_qword_ptr_[rsp+8], xor_ecx_ecx, lea_rsi@@ _[rax-1], mov_rdi_r15, call_0x4f@@ 4f, mov_r8d_1, mov_rcx_r15, mov_edx_1, mov_rsi_rbp, mov_rdi_r12, call_0x4@@ fa@@ 6, jmp_0xfffffffffffffd@@ f8, xor_edx_edx, mov_rsi_r8, mov_rdi_r12, call_0x4e@@ 50, jmp_0xfffffffffffffd@@ e2, mov_rdi_r12, call_0xffffffffffffc@@ 19@@ d, mov_dword_ptr_[rbx]_0, call_0x6@@ 56@@ 2, test_rax_rax, je_0xffffffffffffff@@ 3a, mov_r12_rax, jmp_0xfffffffffffffc@@ e8, mov_esi_dword_ptr_[rip+0x@@ 37@@ 7f@@ 2], mov_rdi_qword_ptr_[rip+0x@@ 37@@ 7e@@ 3], mov_rcx_r13, lea_rdx_[rip+0x24@@ 0@@ 49], xor_eax_eax, call_0x1@@ 2b@@ df, jmp_0xffffffffffffff0a, mov_rdi_r14, call_0x50@@ 1d, mov_rdi_r14, call_0xffffffffffffc@@ 14@@ 5, jmp_0xfffffffffffffef0, call_0xfffffffffffff9b@@ b, test_eax_eax, jns_0xffffffffffff@@ fc@@ 5b, jmp_0xfffffffffffffea@@ 6, call_0xfffffffffffff9a@@ 9, test_eax_eax, jns_0xffffffffffff@@ fd@@ 31, jmp_0xfffffffffffffecc, call_0xffffffffffffc@@ 27@@ 7
push_rbp, mov_rbp_rsp, push_r15, push_r14, push_r13, mov_r13_rdi, push_r12, push_rbx, mov_rbx_rcx, mov_ecx_4, sub_rsp_0x48, mov_r12_qword_ptr_[rdi], mov_qword_ptr_[rbp-0x5@@ 8]_rsi, mov_qword_ptr_[rbp-0x6@@ 0]_rdx, lea_rdi_[rip+0x2@@ 3d@@ a3], mov_rsi_r12, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x38]_rax, xor_eax_eax, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], lea_r14_[r@@ 12+4], seta_al, sbb_al_0, xor_r15d_r15d, test_al_al, je_0x2@@ c2, movzx_edx_byte_ptr_[r@@ 12], cmp_edx@@ _0x69, je_0x2@@ 91, mov_ecx_4, lea_rdi_[rip+0x2@@ 3d@@ 65], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], lea_r14_[r@@ 12+4], mov_r15d@@ _2, seta_al, sbb_al_0, test_al_al, je_0x2@@ 8b, mov_ecx_4, lea_rdi_[rip+0x2@@ 98@@ 25], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], lea_r14_[r@@ 12+4], mov_r15d@@ _3, seta_al, sbb_al_0, test_al_al, je_0x2@@ 62, mov_ecx_5, lea_rdi_[rip+0x2@@ 3d@@ 18], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], lea_r14_[r@@ 12+@@ 5], mov_r15d@@ _4, seta_al, sbb_al_0, test_al_al, je_0x2@@ 39, mov_ecx_4, lea_rdi_[rip+0x2@@ 97@@ af], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], lea_r14_[r@@ 12+4], mov_r15d@@ _5, seta_al, sbb_al_0, test_al_al, je_0x2@@ 10, mov_ecx_5, lea_rdi_[rip+0x2@@ 97@@ ca], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], lea_r14_[r@@ 12+@@ 5], mov_r15d@@ _6, seta_al, sbb_al_0, test_al_al, je_0x1@@ e7, mov_ecx_6, lea_rdi_[rip+0x2@@ 3c@@ a3], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], lea_r14_[r@@ 12+@@ 6], mov_r15d@@ _7, seta_al, sbb_al_0, test_al_al, je_0x1@@ be, mov_ecx_5, lea_rdi_[rip+0x2@@ 9b@@ 3d], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], lea_r14_[r@@ 12+@@ 5], mov_r15d@@ _8, seta_al, sbb_al_0, test_al_al, je_0x1@@ 95, mov_ecx_6, lea_rdi_[rip+0x2@@ 96@@ f0], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], lea_r14_[r@@ 12+@@ 6], mov_r15d@@ _9, seta_al, sbb_al_0, test_al_al, je_0x1@@ 6c, mov_ecx_5, lea_rdi_[rip+0x2@@ 3c@@ 2f], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], lea_r15_[r@@ 12+@@ 5], mov_r14d@@ _0xa, seta_al, sbb_al_0, test_al_al, je_0x5@@ c2, mov_ecx_6, lea_rdi_[rip+0x@@ 25@@ 970], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], lea_r15_[r@@ 12+@@ 6], mov_r14d@@ _0xb, seta_al, sbb_al_0, test_al_al, je_0x5@@ 99, cmp_edx@@ _0x69, jne_0x1e, cmp_byte_ptr_[r12+@@ 1]@@ _0x74, jne_0x16, cmp_byte_ptr_[r12+@@ 2]@@ _0x6e, je_0xf6, mov_ecx_6, lea_rdi_[rip+0x@@ 29@@ 5e@@ d], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x1@@ 30, lea_rsi_[rip+0x2@@ 3b@@ a9], mov_rdi_r13, call_0xfffffffffffff68@@ 8, test_eax_eax, js_0x1@@ 41, mov_r14_qword_ptr_[rbp-0x@@ 58], test_r14_r14, je_0x1@@ 34, lea_rsi_[rbp-0x@@ 48], mov_rdx_rbx, mov_rdi_r13, call_0xb@@ a4, test_eax_eax, js_0x1@@ 14, cmp_qword_ptr_[r@@ 14]_0, jne_0x@@ 7d@@ 2, mov_edi_0x40, call_0xffffffffffffc@@ 268, mov_r15_rax, mov_rax_qword_ptr_[rbp-0x58], mov_qword_ptr_[rax]@@ _r15, test_r15_r15, je_0xed, mov_edi_0x4@@ 8, call_0xffffffffffffc@@ 24@@ b, mov_r12_rax, test_rax_rax, je_0x@@ 88@@ 1, mov_rsi_qword_ptr_[rbp-0x@@ 60], mov_rdi_rax, call_0x4b@@ 33, mov_rax_qword_ptr_[rbp-0x58], mov_edx_1, mov_rdi_qword_ptr_[rax], mov_rsi_r12, call_0x5@@ fe@@ f, mov_r12_qword_ptr_[rbp-0x@@ 48], test_r12_r12, je_0xd2, mov_dword_ptr_[rbx]_0, jmp_0x5@@ 5, cmp_byte_ptr_[r12+@@ 1]@@ _0x6e, jne_0xfffffffffffffd@@ 6f, cmp_byte_ptr_[r12+@@ 2]@@ _0x74, jne_0xfffffffffffffd@@ 63, lea_r14_[r@@ 12+@@ 3], mov_r15d_1, call_0xffffffffffffc@@ 42@@ d, mov_rax_qword_ptr_[rax], movsx_rcx@@ _byte_ptr_[r@@ 14], test_byte_ptr_[rax@@ +rcx*@@ 2@@ ]_8, jne_0xfffffffffffffe@@ fd, mov_qword_ptr_[r13@@ ]_r14, mov_dword_ptr_[rbx]_0, mov_edi_r15d, call_0x2@@ cd@@ a, mov_r12_rax, mov_rax_qword_ptr_[rbp-0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x7@@ 63, lea_rsp_[rbp-0x28], pop_rbx, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, pop_rbp, ret, add_r12@@ _6, mov_qword_ptr_[r13@@ ]_r12, lea_rsi_[rbp-0x@@ 48], mov_rdx_rbx, mov_rdi_r13, call_0xa@@ 96, test_eax_eax, jns_0xffffffffffffff@@ 55, xor_r12d_r12d, jmp_0xffffffffffffffb4, lea_rsi_[rip+0x2@@ 3a@@ 5e], mov_rdi_r13, call_0xfffffffffffff5@@ 36, test_eax_eax, jns@@ _0x1@@ 1f, mov_qword_ptr_[rbp-0x4@@ 8]_0, mov_r14_qword_ptr_[r@@ 13], movzx_r12d_byte_ptr_[r@@ 14], test_r12b_r12b, je_0xf8, call_0xffffffffffffc@@ 380, mov_rdx_qword_ptr_[rax], mov_rcx_r14, movsx_rax@@ _r12b, test_byte_ptr_[rdx@@ +rax*2@@ ]_8, jne_8, cmp_r12b@@ _0x5f, jne_0xf, movzx_r12d_byte_ptr_[r@@ cx+1], inc_rcx, test_r12b_r12b, jne_0xffffffffffffffe5, cmp_r14@@ _rcx, je_0xc2, mov_r12_rcx, sub_r12@@ _r14, lea_rax_[r12+0x10], mov_rdx_rax, mov_rsi_rsp, and_rax@@ _0xffffffffffff@@ f000, sub_rsi_rax, mov_rax_rsi, mov_r15@@ _rsp, and_rdx@@ _0xfffffffffffffff0, cmp_rsp@@ _rax, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rax, jne_0xffffffffffffffed, and_edx@@ _0xfff, sub_rsp@@ _rdx, test_rdx_rdx, je_8, or_qword_ptr_[r@@ sp@@ +rdx@@ -8]_0, mov_rdi_rsp, mov_rdx_r12, mov_rsi_r14, mov_qword_ptr_[rbp-0x5@@ 8]_rcx, call_0xffffffffffffc0@@ 1b, mov_rcx_qword_ptr_[rbp-0x@@ 58], mov_byte_ptr_[rsp+r@@ 12]_0, mov_qword_ptr_[r13@@ ]_rcx, mov_rdi_rsp, call_0xfffffffffffff4d@@ 6, test_rax_rax, je_0x3d, mov_r12_qword_ptr_[r@@ ax+8], mov_r@@ sp@@ _r15, mov_qword_ptr_[rbp-0x4@@ 8]_r12, test_r12_r12, jne_0xfffffffffffffe@@ 61, mov_rcx_qword_ptr_[r13], mov_esi_dword_ptr_[rip+0x@@ 37@@ 2@@ fe], mov_rdi_qword_ptr_[rip+0x@@ 37@@ 2e@@ f], lea_rdx_[rip+0x@@ 23@@ 96@@ f], xor_eax_eax, call_0x1@@ 26@@ ee, xor_r12d_r12d, jmp_0xfffffffffffffe@@ 94, mov_r@@ sp@@ _r15, mov_qword_ptr_[rbp-0x4@@ 8]_0, jmp_0xffffffffffffffce, mov_rax_qword_ptr_[r13], movzx_edx_byte_ptr_[rax], cmp_dl_0x20, jne_0x16, inc_rax, mov_qword_ptr_[r13]_rax, inc_rax, movzx_edx_byte_ptr_[r@@ ax-1], cmp_dl_0x20, je_0xfffffffffffffff2, cmp_dl@@ _0x5b, je_0x1@@ fd, mov_edi_1, call_0x2b@@ 22, mov_qword_ptr_[rbp-0x48]_rax, mov_dword_ptr_[rbx]_0, lea_rdi_[rbp-0x@@ 48], mov_rsi_rbx, call_0xfffffffffffff4b@@ c, test_eax_eax, js_0x1@@ ad, mov_rdx_qword_ptr_[r13], cmp_byte_ptr_[rdx@@ ]_0x20, lea_rax_[rdx+1], jne_0x11, mov_qword_ptr_[r13]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff@@ 5, mov_esi_0x28, mov_rdi_r13, call_0xfffffffffffff@@ 34@@ b, test_eax_eax, js_0x1@@ 7c, mov_edi_0x30, call_0xffffffffffffb@@ fa@@ 9, mov_r12_rax, test_rax_rax, je_0x5@@ b0, mov_rdi_rax, call_0x77@@ 35, mov_rax_qword_ptr_[rbp-0x48], mov_qword_ptr_[rax+0x@@ 28]@@ _r12, mov_dword_ptr_[rax+0x@@ 30]_1, lea_rax_[rbp-0x40], mov_qword_ptr_[rbp-0x4@@ 0]_0, mov_qword_ptr_[rbp-0x58]_rax, mov_rax_qword_ptr_[r13], movzx_edx_byte_ptr_[rax], cmp_dl_0x20, jne_0x16, inc_rax, mov_qword_ptr_[r13]_rax, inc_rax, movzx_edx_byte_ptr_[r@@ ax-1], cmp_dl_0x20, je_0xfffffffffffffff2, test_dl_dl, je_0x1@@ de, cmp_dl@@ _0x29, je_0x1@@ d5, mov_rdi_r12, call_0x77@@ 9c, test_rax_rax, jne_0x9c, mov_rdx_qword_ptr_[r13], cmp_byte_ptr_[rdx@@ ]_0x20, lea_rax_[rdx+1], jne_0x10, mov_qword_ptr_[r13]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff@@ 5, mov_rdi_r13, call_0xfffffffffffff48@@ 0, mov_r14_rax, test_rax_rax, je_0xc5, mov_rdx_qword_ptr_[r13], cmp_byte_ptr_[rdx]@@ _0x3d, je_0x78, mov_edi_0x30, call_0xffffffffffffb@@ ef@@ 1, mov_r15_rax, test_rax_rax, je_0xa6, mov_rdx_qword_ptr_[rbp-0x48], xor_ecx_ecx, xor_esi_esi, mov_rdi_rax, call_0x36@@ 95, mov_rsi_qword_ptr_[rbp-0x@@ 40], mov_rdi_r15, call_0x3a@@ 79, mov_r8d_1, mov_rcx_r15, mov_edx_1, mov_rsi_r14, mov_rdi_r12, call_0x7@@ 6@@ 90, test_eax_eax, js@@ _0x69, inc@@ _qword_ptr_[rbp-0x@@ 40], jmp_0xffffffffffffff33, mov_esi_0x2c, mov_rdi_r13, call_0xfffffffffffff@@ 220, jmp_0xffffffffffffff5d, lea_rax_[rdx+1], mov_qword_ptr_[r13]_rax, lea_rax_[rdx@@ +2], cmp_byte_ptr_[rdx+@@ 1]@@ _0x20, jne_0x15, mov_qword_ptr_[r13]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff@@ 5, mov_rsi_qword_ptr_[rbp-0x@@ 58], mov_rdi_r13, call_0xfffffffffffff4@@ 94, test_eax_eax, jns_0xffffffffffffff@@ 57, mov_rdi_r14, call_0xffffffffffffba@@ 5d, mov_eax_dword_ptr_[rbx], test_eax_eax, je_0xfffffffffffffc@@ cb, mov_rdi_qword_ptr_[rbp-0x@@ 48], xor_r12d_r12d, call_0x2c@@ 37, mov_rdi_qword_ptr_[rbp-0x@@ 48], call_0xffffffffffffba@@ 3e, jmp_0xfffffffffffffc@@ 67, mov_esi_0x5@@ b, mov_rdi_r13, call_0xfffffffffffff@@ 198, mov_rdx_qword_ptr_[r13], cmp_byte_ptr_[rdx@@ ]_0x20, lea_rax_[rdx+1], jne_0x15, mov_qword_ptr_[r13]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff@@ 5, xor_r8d_r8d, mov_rcx_rbx, xor_edx_edx, xor_esi_esi, mov_rdi_r13, call_0xfffffffffffff8e@@ 6, mov_qword_ptr_[rbp-0x48]_rax, test_rax_rax, je_0xfffffffffffffc@@ 61, mov_edi_dword_ptr_[rax], call_0x3@@ 32@@ 2, test_eax_eax, je_0x3@@ 7e, mov_rdx_qword_ptr_[r13], cmp_byte_ptr_[rdx@@ ]_0x20, lea_rax_[rdx+1], jne_0x17, mov_qword_ptr_[r13]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff@@ 5, mov_esi_0x5@@ d, mov_rdi_r13, call_0xfffffffffffff@@ 11b, test_eax_eax, jns_0xffffffffffff@@ fd@@ 91, jmp_0xffffffffffffff46, mov_esi_0x2@@ 9, mov_rdi_r13, call_0xfffffffffffff0@@ f8, jmp_0xfffffffffffffb@@ 49, mov_qword_ptr_[rbp-0x6@@ 8]_r8, call_0xffffffffffffb@@ fa@@ a, mov_rax_qword_ptr_[rax], movsx_rcx@@ _byte_ptr_[r@@ 15], mov_r8_qword_ptr_[rbp-0x@@ 68], test_byte_ptr_[rax@@ +rcx*@@ 2@@ ]_8, jne_0xfffffffffffffa@@ 76, mov_qword_ptr_[r13@@ ]_r15, mov_edi_0x38, mov_qword_ptr_[rbp-0x5@@ 8]_r8, call_0xffffffffffffbd@@ 33, test_rax_rax, mov_r8_qword_ptr_[rbp-0x@@ 58], mov_r12_rax, je_0x3@@ 07, mov_dword_ptr_[rbx@@ ]_1, cmp_r14d@@ _0xa, je_0x1@@ 54, movzx_ecx_byte_ptr_[r@@ 15], lea_rax_[r@@ 15+1], cmp_cl@@ _0x20, jne_0x13, mov_qword_ptr_[r13]_rax, inc_rax, movzx_ecx_byte_ptr_[r@@ ax-1], cmp_cl@@ _0x20, je_0xfffffffffffffff2, cmp_cl@@ _0x3b, jne_0x2d, test_r8_r8, je_0x2@@ 67, mov_rdi_r12, mov_qword_ptr_[rbp-0x5@@ 8]_r8, call_0x2@@ 8e@@ b, mov_r8_qword_ptr_[rbp-0x@@ 58], or_byte_ptr_[r@@ 8+0x1@@ 4]_1, jmp_0xfffffffffffffb@@ 1b, mov_esi_0x28, mov_rdi_r13, call_0xfffffffffffff0@@ 48, test_eax_eax, js_0x@@ c3, mov_rdx_qword_ptr_[r13], cmp_byte_ptr_[rdx@@ ]_0x20, lea_rax_[rdx+1], jne_0x15, mov_qword_ptr_[r13]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff@@ 5, mov_rdi_r12, call_0x28@@ 98, lea_rbx_[r@@ bp-0x@@ 40], mov_rdx_qword_ptr_[r13], movzx_eax_byte_ptr_[rdx], cmp_al_0x20, jne_0x15, inc_rdx, mov_qword_ptr_[r13@@ ]_rdx, movzx_eax_byte_ptr_[rdx], cmp_al_0x20, je_0xfffffffffffffff4, test_al_al, je_0x1@@ a5, cmp_al_0x2@@ 9, je_0x1@@ 9d, mov_rdi_r12, call_0x2@@ 9a7, test_rax_rax, jne_0x67, mov_rdx_qword_ptr_[r13], cmp_byte_ptr_[rdx@@ ]_0x20, lea_rax_[rdx+1], jne_0xf, mov_qword_ptr_[r13]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff@@ 5, xor_esi_esi, xor_r8d_r8d, mov_rcx_rbx, xor_edx_edx, mov_rdi_r13, call_0x34@@ 6, mov_rsi_rax, test_rax_rax, je_0x15, mov_edx_dword_ptr_[rbp-0x@@ 40], mov_rdi_r12, call_0x2@@ 84@@ 3, test_eax_eax, je_0xffffffffffffff@@ 84, mov_rdi_r12, call_0x2@@ a0@@ 3, mov_rdi_r12, call_0xffffffffffffb@@ 80@@ b, xor_r12d_r12d, jmp_0xfffffffffffffa@@ 31, mov_esi_0x2c, mov_rdi_r13, call_0xffffffffffffef@@ 60, jmp_0xffffffffffffff8e, cmp_byte_ptr_[r@@ 15@@ ]_0x20, lea_rax_[r@@ 15+1], jne_0x15, mov_qword_ptr_[r13]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff@@ 5, mov_esi_0x28, mov_rdi_r13, call_0xffffffffffffef@@ 2b, test_eax_eax, js_0xffffffffffffff@@ a6, mov_rax_qword_ptr_[r13], cmp_byte_ptr_[rax]@@ _0x20, jne_0x17, inc_rax, mov_qword_ptr_[r13]_rax, cmp_byte_ptr_[rax]@@ _0x20, je_0xfffffffffffffff6, lea_rcx_[rbp-0x@@ 48], xor_r8d_r8d, xor_edx_edx, xor_esi_esi, mov_rdi_r13, call_0x2@@ 96, mov_r14_rax, test_rax_rax, je_0xffffffffffffff@@ 6d, mov_rdx_qword_ptr_[r13], cmp_byte_ptr_[rdx@@ ]_0x20, lea_rax_[rdx+1], jne_0x17, mov_qword_ptr_[r13]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff@@ 5, mov_esi_0x2c, mov_rdi_r13, call_0xffffffffffffeeb@@ b, mov_rdx_qword_ptr_[r13], cmp_byte_ptr_[rdx@@ ]_0x20, lea_rax_[rdx+1], jne_0x18, mov_qword_ptr_[r13]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff@@ 5, lea_rsi_[rbp-0x@@ 40], xor_edx_edx, mov_rdi_r13, call_0xfffffffffffff@@ 1b@@ a, mov_rcx_rax, test_rax_rax, je_0x8e, mov_edx_dword_ptr_[rbp-0x@@ 48], mov_r8d_dword_ptr_[rbp-0x@@ 40], mov_rsi_r14, mov_rdi_r12, call_0x2@@ 87@@ c, mov_rdx_qword_ptr_[r13], cmp_byte_ptr_[rdx@@ ]_0x20, lea_rax_[rdx+1], jne_0x19, mov_qword_ptr_[r13]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff@@ 5, mov_esi_0x2@@ 9, mov_rdi_r13, call_0xffffffffffffee@@ 3b, jmp_0xfffffffffffff8f@@ 4, mov_esi_dword_ptr_[rip+0x@@ 36@@ d@@ 3b], mov_rdi_qword_ptr_[rip+0x@@ 36@@ d@@ 2c], lea_rdx_[rip+0x@@ 23@@ 5b@@ 5], xor_eax_eax, call_0x12@@ 12@@ b, jmp_0xfffffffffffff9@@ 1d, mov_esi_dword_ptr_[rip+0x@@ 36@@ d@@ 1b], mov_rdi_qword_ptr_[rip+0x@@ 36@@ d0@@ c], lea_rdx_[rip+0x@@ 23@@ 5e@@ d], xor_eax_eax, call_0x12@@ 10b, jmp_0xfffffffffffffe@@ 78, cmp_dword_ptr_[rbp-0x@@ 48]_0, je_0xfffffffffffffe@@ 6f, mov_rdi_r14, call_0x28@@ 64, mov_rdi_r14, call_0xffffffffffffb@@ 66@@ c, jmp_0xfffffffffffffe@@ 59, call_0xffffffffffffb@@ 7c@@ 2, mov_esi_dword_ptr_[rip+0x@@ 3@@ 6c@@ d7], mov_rdi_qword_ptr_[rip+0x3@@ 6c@@ c8], lea_rdx_[rip+0x@@ 23@@ 58@@ 1], xor_eax_eax, call_0x1@@ 20@@ c7, jmp_0xfffffffffffffb@@ ea, call_0xffffffffffffb6@@ 9d, mov_edi_dword_ptr_[rax], call_0xffffffffffffbc@@ 26, mov_esi_dword_ptr_[rip+0x@@ 3@@ 6c@@ ab], mov_rdi_qword_ptr_[rip+0x3@@ 6c@@ 9c], mov_rcx_rax, lea_rdx_[rip+0x@@ 23@@ 2a@@ f], xor_eax_eax, call_0x1@@ 20@@ 98, jmp_0xfffffffffffff84@@ 1, call_0xffffffffffffb@@ 66@@ e, mov_edi_dword_ptr_[rax], call_0xffffffffffffbb@@ f7, mov_esi_dword_ptr_[rip+0x@@ 3@@ 6c@@ 7c], mov_rdi_qword_ptr_[rip+0x3@@ 6c@@ 6d], mov_rcx_rax, lea_rdx_[rip+0x@@ 23@@ 2d@@ 5], xor_eax_eax, call_0x1@@ 20@@ 69, jmp_0xfffffffffffff8@@ 12, mov_rdi_r15, call_0xffffffffffffb@@ 5d@@ c, jmp_0xfffffffffffff80@@ 5
push_r13, push_r12, mov_r12_rcx, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, call_0xfffffffffffff4b@@ 0, mov_r13_rax, test_rax_rax, je_0x9d, mov_rax_qword_ptr_[rbx], movzx_edx_byte_ptr_[rax], cmp_dl_0x20, jne_0x19, inc_rax, mov_qword_ptr_[rbx]_rax, inc_rax, movzx_edx_byte_ptr_[r@@ ax-1], cmp_dl_0x20, je_0xfffffffffffffff@@ 3, cmp_dl@@ _0x2a, jne_0x6e, mov_edi_0x38, call_0xffffffffffffb@@ 95@@ f, mov_rbp_rax, test_rax_rax, je_0x27, mov_edx_dword_ptr_[r12], mov_rsi_r13, mov_rdi_rax, call_0x27@@ 28, mov_rax_qword_ptr_[rbx], mov_dword_ptr_[r12]_1, inc_rax, mov_qword_ptr_[rbx]_rax, mov_r13_rbp, jmp_0xffffffffffffffa7, mov_eax_dword_ptr_[r12], test_eax_eax, jne_0x3d, call_0xffffffffffffb@@ 5a@@ 5, mov_edi_dword_ptr_[rax], xor_r13d_r13d, call_0xffffffffffffbb@@ 2b, mov_esi_dword_ptr_[rip+0x@@ 36@@ bb@@ 0], mov_rdi_qword_ptr_[rip+0x@@ 36@@ ba@@ 1], mov_rcx_rax, lea_rdx_[rip+0x@@ 23@@ 1b@@ 4], xor_eax_eax, call_0x1@@ 1f@@ 9d, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_rax_r13, pop_r13, ret, mov_rdi_r13, call_0x2@@ 6f@@ 7, mov_rdi_r13, call_0xffffffffffffb4@@ ff, jmp_0xffffffffffffffb@@ 5
push_r15, mov_r15_rdi, push_r14, mov_r14_r8, push_r13, mov_r13_rdx, push_r12, xor_r12d_r12d, push_rbp, mov_rbp_rcx, push_rbx, lea_rbx_[rip+0x@@ 3@@ 37@@ 80], sub_rsp_0x28, mov_qword_ptr_[rsp+8]_rsi, lea_rsi_[rip+0x23@@ 1d8], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, jmp_0x13, mov_rax_r12, shl_rax_4, mov_rsi_qword_ptr_[r@@ bx+rax], mov_rdi_r15, call_0xffffffffffffec@@ 5a, test_eax_eax, je_0xd3, inc_r12, cmp_r12@@ _7, jne_0xffffffffffffffde, xor_ebx_ebx, mov_rax_qword_ptr_[r15], cmp_byte_ptr_[rax]@@ _0x20, lea_rdx_[rax+1], jne_0x14, mov_qword_ptr_[r15@@ ]_rdx, inc_rdx, cmp_byte_ptr_[rdx@@ -1]@@ _0x20, je_0xfffffffffffffff6, mov_rsi_qword_ptr_[rsp+8], mov_r8_r14, mov_rcx_rbp, mov_rdx_r13, mov_rdi_r15, call_0xfffffffffffffe@@ 83, mov_qword_ptr_[rsp+0x10]_rax, test_rax_rax, je_0x136, test_rbx_rbx, je_0x53, mov_rdx_qword_ptr_[r15], cmp_byte_ptr_[rdx@@ ]_0x20, lea_rax_[rdx+1], jne_0x15, mov_qword_ptr_[r15]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff6, mov_esi_0x2@@ 9, mov_rdi_r15, call_0xffffffffffffeb@@ 84, lea_rdi_[rsp+0x10], mov_rsi_rbp, call_0xffffffffffffecb@@ 7, test_eax_eax, js@@ _0xf0, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rax+0x@@ 2@@ 8]_rbx, mov_dword_ptr_[rax+0x@@ 30]_0, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x@@ d3, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdx_r12, shl_rdx_4, lea_rax_[rip+0x3@@ 36@@ 62], mov_rbx_qword_ptr_[r@@ ax@@ +rdx@@ +8], mov_rax_qword_ptr_[r15], movzx_edx_byte_ptr_[rax], test_rbx_rbx, je_0xffffffffffffff@@ 25, inc_rax, cmp_dl_0x20, jne_0x17, mov_qword_ptr_[r15]_rax, inc_rax, movzx_edx_byte_ptr_[r@@ ax-1], cmp_dl_0x20, je_0xfffffffffffffff@@ 3, cmp_rbx@@ _qword_ptr_[rip+0x@@ 3@@ 3c@@ 42], jne_7, cmp_dl@@ _0x28, jne_0x3d, mov_esi_0x28, mov_rdi_r15, call_0xffffffffffffea@@ db, test_eax_eax, jns_0xfffffffffffffe@@ e2, mov_esi_dword_ptr_[rip+0x@@ 36@@ 9d@@ 8], mov_rdi_qword_ptr_[rip+0x@@ 36@@ 9c@@ 9], xor_eax_eax, lea_rdx_[rip+0x@@ 23@@ 2e@@ 8], call_0x1@@ 1d@@ c8, xor_eax_eax, jmp_0xffffffffffffff57, mov_edi_1, call_0x2@@ 23@@ 3, mov_qword_ptr_[rsp+0x10]_rax, mov_dword_ptr_[rbp]_0, lea_rbx_[rip+0x@@ 34@@ 0@@ cb], jmp_0xffffffffffffff0c, xor_eax_eax, jmp_0xffffffffffffff24, call_0xffffffffffffb@@ 46@@ 9
push_r15, push_r14, push_r13, mov_r13_rdx, push_r12, push_rbp, mov_rbp_rdi, mov_edi@@ _0x70, push_rbx, mov_rbx_rsi, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xffffffffffffb@@ 6b@@ 4, test_rax_rax, je_0x2@@ 92, mov_r12_rax, call_0xffffffffffffb@@ 8f@@ 3, mov_r14_qword_ptr_[r@@ bp], mov_rax_qword_ptr_[rax], movsx_rcx@@ _byte_ptr_[r@@ 14], mov_rdx_rcx, test_byte_ptr_[rax@@ +rcx*@@ 2+1]_8, jne_0x14@@ 3, lea_rax_[r@@ 14+1], cmp_cl@@ _0x20, jne_0x19, mov_qword_ptr_[rbp]_rax, mov_r14_rax, inc_rax, movzx_edx_byte_ptr_[r@@ ax-1], cmp_dl_0x20, je_0xffffffffffffffef, cmp_dl@@ _0x5b, je_0x9a, cmp_dl@@ _0x28, je_0x1@@ a9, call_0x56@@ 43, mov_dword_ptr_[rsp+0xc]_0, mov_r14_rax, xor_ebp_ebp, mov_edi_5, call_0x2@@ 15@@ c, lea_r15_[r@@ 12+0x@@ 38], mov_rsi_rax, mov_r8d_ebp, mov_rcx_r14, xor_edx_edx, mov_rdi_r15, call_0x2@@ 3c@@ 4, xor_edx_edx, mov_rsi_r15, mov_rdi_r12, call_0x2@@ 3f@@ 7, mov_dword_ptr_[r13@@ ]_1, lea_rax_[rip+0x3@@ 3f@@ 83], mov_dword_ptr_[r12+0x@@ 30]_0, mov_qword_ptr_[r12+0x@@ 28]_rax, mov_qword_ptr_[rbx@@ ]_r12, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x18], xor_rbx_qword_ptr_fs:[0x28], jne_0x1@@ df, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rax_[r@@ 14+1], mov_qword_ptr_[rbp]_rax, lea_rax_[r@@ 14+2], cmp_byte_ptr_[r14+@@ 1]@@ _0x20, jne_0x14, mov_qword_ptr_[rbp]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff@@ 5, lea_rsi_[rsp+0xc], mov_edx_1, mov_rdi_rbp, call_0xffffffffffffec@@ 56, mov_r14_rax, test_rax_rax, je_0x1@@ 5f, mov_rdx_qword_ptr_[rbp], cmp_byte_ptr_[rdx@@ ]_0x20, lea_rax_[rdx+1], jne_0x17, mov_qword_ptr_[rbp]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff@@ 5, mov_rdi_rbp, mov_esi_0x5@@ d, call_0xffffffffffffe@@ 8e@@ b, mov_ebp@@ _dword_ptr_[rsp+0xc], jmp_0xffffffffffffff11, lea_rsi_[rsp+0x10], mov_rdi_rbp, call_0xffffffffffffeb@@ 80, test_eax_eax, js@@ _0x10@@ d, mov_rdi_qword_ptr_[rsp+0x10], movsxd_rax@@ _edi, cmp_rdi_rax, jne_0x@@ ef, mov_edi_0x4@@ 8, call_0xffffffffffffb5@@ 1d, mov_rbp_rax, test_rax_rax, je_0xe6, mov_rsi_qword_ptr_[rsp+0x10], test_rsi_rsi, je_0x3c, dec@@ _rsi, mov_rdi_rax, call_0x3d@@ fc, mov_esi_1, mov_rdi_rbp, call_0x54@@ 8f, mov_r14_rax, test_rax_rax, je_0xcf, mov_dword_ptr_[rsp+0xc]_1, mov_ebp_1, jmp_0xfffffffffffffe@@ 90, xor_edx_edx, lea_rsi_[rip+0x22@@ d@@ 99], mov_rdi_rax, call_0x3d@@ 7c, jmp_0xffffffffffffffc0, lea_rax_[r@@ 14+1], mov_qword_ptr_[rbp]_rax, mov_rdi_r12, call_0xffffffffffffb0@@ c5, cmp_byte_ptr_[r14+@@ 1]@@ _0x20, lea_rax_[r@@ 14+2], jne_0x14, mov_qword_ptr_[rbp]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff@@ 5, xor_r8d_r8d, mov_rcx_r13, xor_edx_edx, xor_esi_esi, mov_rdi_rbp, call_0xfffffffffffffa@@ c6, mov_r12_rax, test_rax_rax, je_0x51, mov_rdx_qword_ptr_[rbp], cmp_byte_ptr_[rdx@@ ]_0x20, lea_rax_[rdx+1], jne_0x13, mov_qword_ptr_[rbp]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff@@ 5, mov_esi_0x2@@ 9, mov_rdi_rbp, call_0xffffffffffffe@@ 7d@@ 3, jmp_0xfffffffffffffe@@ 34, call_0xffffffffffffe@@ 8d@@ 9, test_eax_eax, jns_0xffffffffffffff@@ 10, mov_rdi_r12, call_0xffffffffffffb0@@ 49, mov_eax_0xffffffff, jmp_0xfffffffffffffe@@ 2f, xor_r12d_r12d, jmp_0xffffffffffffff@@ eb, mov_rdi_rbp, call_0x3f@@ 02, mov_rdi_rbp, call_0xffffffffffffb0@@ 2a, jmp_0xffffffffffffffd9, call_0xffffffffffffb@@ 18@@ 3
endbr64, push_r13, mov_esi_1, mov_edi@@ _0x70, push_r12, push_rbp, push_rbx, sub_rsp_8, call_0xffffffffffffb@@ 2a8, test_rax_rax, je_0x99, mov_rbx_rax, mov_dword_ptr_[rax]_0xc, lea_rax_[r@@ ax+0x38], mov_qword_ptr_[rbx+8]_rax, mov_dword_ptr_[rbx+0x@@ 38]_0, lea_rdi_[rip+0x22@@ d0@@ 5], call_0xffffffffffffb@@ 5a@@ b, mov_edi_0x20, mov_r12_rax, call_0xffffffffffffb@@ 3@@ 9e, and_byte_ptr_[r@@ ax+0x1@@ 4]@@ _0xfe, lea_r13_[rip+0x@@ 36@@ 60@@ e], mov_qword_ptr_[rax]_r12, mov_qword_ptr_[rax+8]_rbx, mov_dword_ptr_[rax+0x1@@ 0]_0, mov_rbp_rax, mov_rax_qword_ptr_[r13], lea_rdi_[rip+0x26@@ 94@@ 5], mov_qword_ptr_[rbp+0x18]_rax, call_0xffffffffffffb@@ 56@@ e, mov_edi_0x20, mov_r12_rax, call_0xffffffffffffb@@ 36@@ 1, and_byte_ptr_[r@@ ax+0x1@@ 4]@@ _0xfe, mov_qword_ptr_[rax]_r12, mov_qword_ptr_[rax+8]_rbx, mov_dword_ptr_[rax+0x10]_1, mov_qword_ptr_[rax+0x1@@ 8]_rbp, mov_qword_ptr_[r13]_rax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, call_0xffffffffffffa@@ fb@@ 7, mov_esi_dword_ptr_[rax], lea_rdx_[rip+0x2@@ 2c@@ 66], mov_edi_1, xor_eax_eax, call_0xffffffffffffb4@@ 1@@ 2
endbr64, push_r15, lea_rsi_[rip+0x2@@ 3d@@ 1d], push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x4@@ 48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x4@@ 38]_rax, xor_eax_eax, mov_qword_ptr_[rip+0x@@ 36@@ 57@@ 2]@@ _rdi, call_0xffffffffffffb4@@ 1a, test_rax_rax, je_0x6@@ 6a, mov_r8_qword_ptr_[rip+0x@@ 36@@ 55@@ d], mov_r13_rax, lea_rcx_[rip+0x2@@ 2c@@ 1a], mov_edx_0x5@@ 04, lea_rsi_[rip+0x2@@ 2c@@ 2a], mov_edi_1, xor_eax_eax, call_0xca@@ 18, mov_dword_ptr_[rip+0x@@ 36@@ 5@@ 39@@ ]_0, lea_r12_[rsp+0x@@ 30], mov_rdx_r13, mov_esi_0x400, mov_rdi_r12, call_0xffffffffffffb@@ 14@@ 5, test_rax_rax, je_0x@@ 60@@ d, mov_eax_dword_ptr_[rip+0x@@ 36@@ 5@@ 11], mov_r9_qword_ptr_[r@@ ip+0x@@ 36@@ 50@@ 2], lea_r8d@@ _[rax+1], mov_edx_0x4@@ 59, lea_rcx_[rip+0x@@ 22@@ b@@ e8], lea_rsi_[rip+0x22@@ bc@@ e], mov_edi_3, xor_eax_eax, mov_dword_ptr_[rip+0x@@ 36@@ 4e@@ 5]@@ _r8d, mov_qword_ptr_[rsp+0x1@@ 8]_r12, call_0xc@@ 9b0, mov_r8_qword_ptr_[rsp+0x18], movzx_edx_byte_ptr_[r@@ 8], cmp_dl_0x20, jne_0x23, lea_rax_[r@@ 8+1], mov_qword_ptr_[rsp+0x18]_rax, mov_r8_rax, inc_rax, movzx_edx_byte_ptr_[r@@ ax-1], cmp_dl_0x20, je_0xffffffffffffffee, cmp_dl@@ _0x3b, ja@@ _0x16, movabs_rax@@ _0x800000000@@ 000@@ 401, bt@@ _rax_rdx, jb_0xffffffffffffff@@ 69, mov_ecx_7, mov_rsi_r8, lea_rdi_[rip+0x22@@ b8@@ a], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x3@@ cb, mov_esi_0x30, mov_edi_1, call_0xffffffffffffb0@@ 9b, mov_r14_rax, test_rax_rax, je_0x8@@ 16, lea_rbp_[r@@ sp+0x18], lea_rcx_[r@@ ax+0x18], xor_r8d_r8d, xor_edx_edx, xor_esi_esi, mov_rdi_rbp, call_0xfffffffffffff8d@@ 7, mov_qword_ptr_[r14+0x1@@ 0]_rax, test_rax_rax, je_0xdb, mov_r8d_dword_ptr_[rax], lea_rcx_[rip+0x@@ 22@@ b@@ 8d], mov_edx_0x4@@ 74, lea_rsi_[rip+0x22@@ af@@ a], mov_edi_4, xor_eax_eax, call_0xc@@ 8e@@ 8, mov_rdx_qword_ptr_[rsp+0x18], movzx_ecx_byte_ptr_[rdx], cmp_cl@@ _0x20, jne_0x1c, lea_rax_[rdx+1], mov_qword_ptr_[rsp+0x18]_rax, mov_rdx_rax, inc_rax, movzx_ecx_byte_ptr_[r@@ ax-1], cmp_cl@@ _0x20, je_0xffffffffffffffee, test_cl_cl, je_0x65, mov_rdi_rdx, mov_qword_ptr_[rsp]_rdx, call_0xffffffffffffa@@ eb@@ 1, mov_rdx_qword_ptr_[rsp], lea_rbx_[rdx@@ +rax-1], cmp_rbx_rdx, jb_0x4@@ b, xor_r15d_r15d, movzx_eax_byte_ptr_[rbx], cmp_rdx_rbx, jb_0x1@@ 5, jmp_0x1b, dec@@ _rbx, movzx_eax_byte_ptr_[rbx], cmp_rbx_rdx, je_0xa, lea_ecx_[rax@@ -0x@@ 28], cmp_cl@@ _1, ja_0xffffffffffffff@@ ef, cmp_al_0x2@@ 9, je_0xb3, cmp_al@@ _0x28, jne_0x16, dec@@ _r15d, test_r15d_r15d, jle_0x@@ b3, dec@@ _rbx, cmp_rbx_rdx, jae_0xffffffffffffff@@ bf, mov_esi_dword_ptr_[rip+0x@@ 36@@ 37@@ f], mov_rdi_qword_ptr_[rip+0x@@ 36@@ 370], lea_rdx_[rip+0x22@@ ae@@ 5], xor_eax_eax, call_0x1@@ 17@@ 6f, mov_r8d_dword_ptr_[rip+0x@@ 36@@ 35@@ 9], mov_edi_3, lea_rcx_[rip+0x@@ 22@@ a@@ 9d], mov_edx_0x4@@ 70, lea_rsi_[rip+0x22@@ a@@ 1c], xor_eax_eax, call_0xc@@ 80@@ f, mov_edi_dword_ptr_[r@@ 14+0x18], test_edi_edi, jne_0x2@@ 64, xor_ebx_ebx, cmp_qword_ptr_[r14+0x@@ 20]_0, je_0x20, mov_rdi_rbx, shl_rdi@@ _6, add_rdi_qword_ptr_[r@@ 14+8], inc_rbx, call_0x4@@ 77@@ 2, cmp_rbx_qword_ptr_[r@@ 14+0x20], jb_0xffffffffffffff@@ e9, mov_rdi_qword_ptr_[r14+8], call_0xffffffffffffac@@ 83, jmp_0xfffffffffffffd@@ ce, inc@@ _r15d, jmp_0xffffffffffffff60, jne_0xffffffffffffff@@ 5b, mov_byte_ptr_[rbx]_0, inc_rbx, mov_rdi_qword_ptr_[rsp+0x18], call_0xffffffffffffb@@ 22@@ f, mov_qword_ptr_[r14]_rax, mov_r8_rax, mov_edx_0x4@@ 7f, lea_rcx_[rip+0x@@ 22@@ ac@@ c], lea_rsi_[rip+0x22@@ 98@@ c], mov_edi_3, xor_eax_eax, mov_qword_ptr_[rsp+0x18]_rbx, call_0xc@@ 77@@ 5, mov_qword_ptr_[rsp+0x20]_0, mov_rdx_qword_ptr_[rsp+0x18], xor_ebx_ebx, movzx_eax_byte_ptr_[rdx], cmp_al_0x20, jne_0x1b, inc_rdx, mov_qword_ptr_[rsp+0x18]_rdx, inc_rdx, movzx_eax_byte_ptr_[r@@ dx@@ -1], cmp_al_0x20, je_0xfffffffffffffff2, mov_rdx_qword_ptr_[r@@ 14+0x20], cmp_al_0x2@@ 9, je_0x3@@ da, lea_rcx_[rdx+1], cmp_al_0x2b, jne_0x16, test_r15d_r15d, je_0x1@@ 31, inc@@ _qword_ptr_[rsp+0x18], mov_r15d_1, cmp_rbx@@ _rcx, ja@@ _0x2f, test_rbx_rbx, je_0xa8, mov_rsi_rbx, shl_rsi@@ _7, add_r@@ bx_rbx, mov_rdi_qword_ptr_[r14+8], call_0xffffffffffffb0@@ 4c, test_rax_rax, je_0x3@@ 5b, mov_qword_ptr_[r14+8]_rax, mov_rdx_qword_ptr_[r@@ 14+0x20], movsxd_rax_r15d, lea_rsi_[rsp+0x20], lea_rcx_[rsp+0x28], sub_rdx_rax, xor_r8d_r8d, mov_rdi_rbp, call_0xfffffffffffff6@@ 90, mov_rsi_rax, test_rax_rax, je_0x4@@ 8d, mov_rdi_qword_ptr_[r14+0x@@ 20], mov_edx_dword_ptr_[rsp+0x28], lea_rax_[r@@ di+1], mov_qword_ptr_[r14+0x@@ 20]_rax, shl_rdi@@ _6, add_rdi_qword_ptr_[r@@ 14+8], call_0x4@@ 40@@ 7, mov_rdx_qword_ptr_[rsp+0x18], movzx_eax_byte_ptr_[rdx], cmp_al_0x20, jne_0x1b, lea_rcx_[rdx+1], mov_qword_ptr_[rsp+0x18]_rcx, mov_rdx_rcx, inc_rcx, movzx_eax_byte_ptr_[r@@ cx-1], cmp_al_0x20, je_0xffffffffffffffef, cmp_al_0x2@@ c, je_0x73, cmp_al_0x2@@ 9, jne_0x27, mov_rdx_qword_ptr_[rsp+0x18], jmp_0xffffffffffffff10, mov_esi_0x200, mov_ebx_8, jmp_0xffffffffffffff5e, mov_rdi_rdx, mov_qword_ptr_[rsp]_rdx, call_0xffffffffffffac@@ 49, mov_rdx_qword_ptr_[rsp], lea_rax_[rdx@@ +rax-1], cmp_byte_ptr_[rax]@@ _0xa, jne_5, mov_byte_ptr_[rax]_0, mov_rcx_qword_ptr_[rsp+0x18], mov_esi_dword_ptr_[rip+0x@@ 36@@ 158], mov_rdi_qword_ptr_[rip+0x@@ 36@@ 14@@ 9], lea_rdx_[rip+0x2@@ 28@@ f6], xor_eax_eax, call_0x1@@ 15@@ 48, jmp_0xfffffffffffffd@@ e3, inc_rdx, mov_qword_ptr_[rsp+0x18]_rdx, jmp_0xfffffffffffffea@@ 0, mov_rdi_qword_ptr_[r14+8], cmp_rbx@@ _rcx, ja_0x3@@ 2, test_rbx_rbx, je_0x2@@ 44, mov_rsi_rbx, shl_rsi@@ _7, add_r@@ bx_rbx, call_0xffffffffffffaf@@ 2c, mov_rdi_rax, test_rax_rax, je_0x2@@ 38, mov_rdx_qword_ptr_[r@@ 14+0x20], mov_qword_ptr_[r14+8]_rax, lea_rcx_[rdx+1], mov_qword_ptr_[r14+0x@@ 20]_rcx, shl_rdx@@ _6, add_rdi_rdx, call_0x4@@ 33@@ 4, mov_rdx_qword_ptr_[r@@ 14+0x20], lea_rcx_[rdx+1], jmp_0xfffffffffffffe@@ 84, mov_rdi_qword_ptr_[r14+0x10], call_0x1c@@ 3c, mov_rdi_qword_ptr_[r14+0x10], call_0xffffffffffffaa@@ 43, jmp_0xfffffffffffffd@@ 90, lea_rax_[r@@ 8+@@ 7], mov_qword_ptr_[rsp+0x18]_rax, lea_rax_[r@@ 8+8], cmp_byte_ptr_[r@@ 8+@@ 7@@ ]_0x20, jne_0x14, mov_qword_ptr_[rsp+0x18]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff4, lea_rbp_[r@@ sp+0x18], mov_rdi_rbp, call_0xffffffffffffe@@ 352, mov_rdi_rax, mov_r15_rax, call_0xffffffffffffe@@ 22@@ 7, mov_rbx_rax, test_rax_rax, je_0x19, mov_rax_qword_ptr_[rax+8], cmp_dword_ptr_[rax]@@ _0xb, jne_0x12@@ 3, test_byte_ptr_[rbx+0x1@@ 4]_1, je_0x1@@ 19, mov_rdx_qword_ptr_[rsp+0x18], cmp_byte_ptr_[rdx@@ ]_0x20, lea_rax_[rdx+1], jne_0x15, mov_qword_ptr_[rsp+0x18]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff4, mov_esi_0x3d, mov_rdi_rbp, call_0xffffffffffffe@@ 11@@ a, test_eax_eax, js_0x3@@ 24, mov_rdx_qword_ptr_[rsp+0x18], cmp_byte_ptr_[rdx@@ ]_0x20, lea_rax_[rdx+1], jne_0x17, mov_qword_ptr_[rsp+0x18]_rax, inc_rax, cmp_byte_ptr_[rax@@ -1]@@ _0x20, je_0xfffffffffffffff4, mov_edi_0x20, call_0xffffffffffffad@@ 55, and_byte_ptr_[r@@ ax+0x1@@ 4]@@ _0xfe, mov_qword_ptr_[rax]@@ _r15, mov_qword_ptr_[rax+8]_0, mov_dword_ptr_[rax+0x1@@ 0]_0, mov_qword_ptr_[rax+0x18]_0, lea_rcx_[r@@ ax+0x10], mov_r8_rax, xor_edx_edx, xor_esi_esi, mov_rdi_rbp, mov_r14_rax, call_0xfffffffffffff45@@ 1, mov_qword_ptr_[r14+8]_rax, test_rax_rax, je_0x2@@ ae, test_rbx_rbx, je_0x3@@ 4c, cmp_dword_ptr_[rax]@@ _0xb, jne_0x2@@ 63, mov_r8d_dword_ptr_[r@@ 14+0x10], test_r8d_r8d, je_0x3@@ 9f, mov_rdi_qword_ptr_[rbx+8], call_0x1a@@ fc, mov_rdi_qword_ptr_[r14+8], mov_rax_qword_ptr_[rbx+8], movdqu_xmm0_xmmword_ptr_[r@@ di], movups_xmmword_ptr_[rax]_xmm0, movdqu_xmm1_xmmword_ptr_[r@@ di+0x10], movups_xmmword_ptr_[rax+0x1@@ 0@@ ]_xmm1, movdqu_xmm2_xmmword_ptr_[r@@ di+0x20], movups_xmmword_ptr_[rax+0x@@ 20]_xmm2, mov_rdx_qword_ptr_[r@@ di+0x30], mov_qword_ptr_[rax+0x30]_rdx, and_byte_ptr_[r@@ bx+0x1@@ 4]@@ _0xfe, call_0xffffffffffffa@@ 8d@@ a, mov_rdi_r15, call_0xffffffffffffa@@ 8d@@ 2, mov_rdi_r14, call_0xffffffffffffa@@ 8c@@ a, jmp_0xfffffffffffffa@@ 15, mov_esi_dword_ptr_[rip+0x@@ 35@@ f@@ 3a], mov_rdi_qword_ptr_[rip+0x@@ 35@@ f2@@ b], mov_rcx_r15, lea_rdx_[rip+0x22@@ 63@@ 7], xor_eax_eax, call_0x1@@ 13@@ 27, mov_rdi_r15, call_0xffffffffffffa8@@ 9f, jmp_0xfffffffffffff9@@ ea, mov_rdi_r13, call_0xffffffffffffa@@ 9a@@ d, mov_rax_qword_ptr_[rsp+0x@@ 4@@ 38], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ dc, add_rsp_0x4@@ 48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_esi_0x200, mov_ebx_8, jmp_0xfffffffffffffd@@ c2, call_0xffffffffffffa@@ 8a@@ 9, mov_edi_dword_ptr_[rax], call_0xffffffffffffae@@ 32, mov_esi_dword_ptr_[rip+0x@@ 3@@ 5e@@ b7], mov_rdi_qword_ptr_[rip+0x@@ 35@@ ea@@ 8], mov_rcx_rax, lea_rdx_[rip+0x22@@ 6@@ 27], xor_eax_eax, call_0x1@@ 12@@ a4, jmp_0xfffffffffffffb@@ 3f, cmp_rdx_1, je_0x1@@ 9c, test_rdx_rdx, je_0x8c, mov_rdi_qword_ptr_[r14+8], lea_rax_[r@@ sp+0x14], mov_qword_ptr_[rsp]_rax, xor_r15d_r15d, jmp_9, mov_rdi_qword_ptr_[r14+8], mov_rbp_r15, shl_rbp@@ _6, add_rdi_rbp, mov_edx_dword_ptr_[rdi], test_edx_edx, jne_0x56, mov_rax_qword_ptr_[rdi+8], mov_eax_dword_ptr_[rax], test_eax_eax, jne_0x4c, mov_esi_dword_ptr_[rip+0x@@ 3@@ 5e@@ 44], mov_rdi_qword_ptr_[rip+0x3@@ 5e@@ 35], xor_eax_eax, lea_rdx_[rip+0x22@@ 7a@@ c], call_0x1@@ 12@@ f4, cmp_qword_ptr_[rip+0x@@ 3@@ 5e@@ 17@@ ]_0, je_0x1@@ 67, mov_rdi_qword_ptr_[r14+8], add_rdi_rbp, call_0x4@@ 27@@ a, mov_rdi_qword_ptr_[r14+8], mov_rsi_qword_ptr_[rip+0x@@ 3@@ 5d@@ fa], add_rdi_rbp, xor_edx_edx, call_0x40@@ 35, inc_r15, cmp_r15@@ _qword_ptr_[r@@ 14+0x20], jb_0xffffffffffffff@@ 91, mov_rdx_qword_ptr_[rsp+0x20], test_rdx_rdx, je_0x4b, mov_rax_qword_ptr_[r14+0x20], cmp_rax_rbx, jae_0x@@ 1d0, lea_rcx_[rax+1], mov_qword_ptr_[r14+0x@@ 20]_rcx, shl_rax_6, add_rax_qword_ptr_[r@@ 14+8], movdqu_xmm3_xmmword_ptr_[r@@ dx], movups_xmmword_ptr_[r@@ ax@@ ]_xmm3, movdqu_xmm4@@ _xmmword_ptr_[r@@ dx+0x10], mov_rdi_qword_ptr_[rsp+0x20], movups_xmmword_ptr_[rax+0x1@@ 0@@ ]_xmm4, movdqu@@ _xmm5@@ _xmmword_ptr_[r@@ dx+0x20], movups_xmmword_ptr_[rax+0x@@ 20@@ ]_xmm5, movdqu@@ _xmm6@@ _xmmword_ptr_[r@@ dx+0x30], movups_xmmword_ptr_[rax+0x@@ 30@@ ]_xmm6, call_0xffffffffffffa7@@ 29, mov_r8_qword_ptr_[r@@ 14], mov_edx_0x5@@ 0d, xor_eax_eax, lea_rcx_[rip+0x@@ 22@@ 5@@ 94], lea_rsi_[rip+0x2@@ 24@@ 67], mov_edi_2, call_0xc@@ 25@@ 7, lea_rax_[rip+0x3@@ 5d@@ 63], mov_rdx_qword_ptr_[rax], mov_qword_ptr_[r14+0x@@ 28]_rdx, mov_qword_ptr_[rax]@@ _r14, jmp_0xfffffffffffff84@@ 1, mov_esi_dword_ptr_[rip+0x@@ 3@@ 5d@@ 62], mov_rdi_qword_ptr_[rip+0x3@@ 5d@@ 53], lea_rdx_[rip+0x2@@ 24@@ ea], xor_eax_eax, call_0x1@@ 115@@ 2, jmp_0xfffffffffffff9e@@ d, mov_esi_dword_ptr_[rip+0x@@ 3@@ 5d@@ 3a], mov_rdi_qword_ptr_[rip+0x3@@ 5d@@ 2b], mov_rcx_r15, lea_rdx_[rip+0x22@@ 67@@ 1], xor_eax_eax, call_0x1@@ 112@@ 7, mov_r9d_dword_ptr_[r@@ 14+0x10], test_r9d_r9d, je_0x14, mov_rdi_qword_ptr_[r14+8], call_0x1@@ 88@@ 5, mov_rdi_qword_ptr_[r14+8], call_0xffffffffffffa@@ 68@@ c, mov_rdi_r14, call_0xffffffffffffa@@ 68@@ 4, mov_rdi_r15, call_0xffffffffffffa@@ 67@@ c, jmp_0xfffffffffffff7c@@ 7, mov_rdi_qword_ptr_[r14+8], mov_esi_dword_ptr_[r@@ di], test_esi_esi, jne_0xfffffffffffffe@@ 6f, mov_rax_qword_ptr_[rdi+8], mov_ecx_dword_ptr_[rax], test_ecx_ecx, jne_0xfffffffffffffe@@ 61, call_0x4@@ 134, mov_qword_ptr_[r14+0x@@ 20]_0, jmp_0xfffffffffffffe@@ d0, lea_rdi_[rip+0x2@@ 24@@ 7e], call_0xffffffffffffac@@ 19, mov_qword_ptr_[rsp+0x28]_rax, test_rax_rax, je_0xf3, mov_rcx_qword_ptr_[rsp], xor_r8d_r8d, xor_edx_edx, xor_esi_esi, lea_rdi_[rsp+0x28], mov_qword_ptr_[rsp+8]_rax, call_0xfffffffffffff@@ 12@@ 1, test_rax_rax, mov_r11_qword_ptr_[rsp+8], je_0xac, mov_rdi_r11, mov_qword_ptr_[rsp+8]_rax, call_0xffffffffffffa@@ 5f@@ 6, mov_rax_qword_ptr_[rsp+8], mov_qword_ptr_[rip+0x3@@ 5c@@ 55@@ ]_rax, jmp_0xfffffffffffffe@@ 44, lea_rax_[rip+0x3@@ 5c@@ 39], mov_rdx_qword_ptr_[rax], mov_qword_ptr_[r14+0x1@@ 8]_rdx, mov_qword_ptr_[rax]@@ _r14, jmp_0xfffffffffffff7@@ 1f, call_0xffffffffffffa6@@ 2a, mov_edi_dword_ptr_[rax], call_0xffffffffffffa@@ bb@@ 3, mov_esi_dword_ptr_[rip+0x@@ 3@@ 5c@@ 38], mov_rdi_qword_ptr_[rip+0x3@@ 5c@@ 29], mov_rcx_rax, lea_rdx_[rip+0x22@@ 36@@ 4], xor_eax_eax, call_0x1@@ 10@@ 25, jmp_0xfffffffffffff6f@@ 0, call_0xffffffffffffa@@ 6f@@ b, lea_rcx_[rip+0x@@ 22@@ 5d@@ 7], mov_edx_0x4@@ e0, lea_rsi_[rip+0x22@@ 2d@@ e], lea_rdi_[rip+0x22@@ 3e@@ 4], call_0xffffffffffffa@@ 75@@ c, lea_rcx_[rip+0x@@ 22@@ 5a8], mov_edx_0x1@@ e2, lea_rsi_[rip+0x22@@ 2b@@ f], lea_rdi_[rip+0x22@@ 308], call_0xffffffffffffa7@@ 3d, lea_rcx_[rip+0x@@ 22@@ 57@@ 9], mov_edx_0x4@@ 4e, lea_rsi_[rip+0x22@@ 2a0], lea_rdi_[rip+0x22@@ 39@@ 9], call_0xffffffffffffa7@@ 1e, lea_rcx_[rip+0x@@ 22@@ 55@@ a], mov_edx_0x4@@ 4b, lea_rsi_[rip+0x22@@ 28@@ 1], lea_rdi_[rip+0x22@@ 36@@ e], call_0xffffffffffffa@@ 6f@@ f
endbr64, mov_rax_qword_ptr_[rsi+0x10], mov_rdx_qword_ptr_[r@@ di+0x10], cmp_rax_rdx, je_9, sub_eax_edx, ret, mov_rax_qword_ptr_[r@@ si+0x18], sub_eax_dword_ptr_[r@@ di+0x18], ret
endbr64, push_r13, push_r12, mov_r12_rdi, push_rbp, push_rbx, mov_rbx_rsi, sub_rsp_8, mov_eax_dword_ptr_[rip+0x3@@ 5b@@ 76], mov_rdi_qword_ptr_[rip+0x3@@ 5b@@ 67], lea_ebp@@ _[rax+1], movsxd_r13@@ _ebp, shl_r13@@ _5, mov_rsi_r13, call_0xffffffffffffa@@ 96@@ 2, mov_qword_ptr_[rip+0x3@@ 5b@@ 4e@@ ]_rax, test_rax_rax, je_0x4c, mov_edx_dword_ptr_[rbx], movdqu_xmm0_xmmword_ptr_[r@@ bx+8], lea_rax_[rax+r@@ 13@@ -0x20], mov_dword_ptr_[rax+8]_edx, mov_qword_ptr_[rax]_r12, movups_xmmword_ptr_[rax+0x1@@ 0]_xmm0, add_dword_ptr_[rip+0x@@ 3@@ 5b@@ 25@@ ]_edx, mov_rax_qword_ptr_[rbx+0x10], imul_rdx@@ _qword_ptr_[r@@ bx+@@ 8]@@ _0xf4240, add_rax@@ _qword_ptr_[rip+0x@@ 3@@ 5b@@ 0a], mov_dword_ptr_[rip+0x3@@ 5b@@ 1c]@@ _ebp, add_rax_rdx, mov_qword_ptr_[rip+0x3@@ 5a@@ fa@@ ]_rax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, lea_rdi_[rip+0x2@@ 24@@ b5], call_0xffffffffffffa@@ 9a0, mov_edi_1, call_0xffffffffffffa@@ 9e@@ 6
endbr64, push_r15, xor_edx_edx, lea_rsi_[rip-0x@@ af], push_r14, xor_r14d_r14d, push_r13, movabs@@ _r13@@ _0x@@ cccc@@ cccc@@ cccccccd, push_r12, movabs@@ _r12@@ _0x2@@ 8f@@ 5c@@ 28@@ f@@ 5c@@ 28@@ f@@ 5c3, push_rbp, push_rbx, sub_rsp_0x18, lea_rax_[rip+0x3@@ 5c@@ b7], mov_dword_ptr_[rip+0x3@@ 5a@@ ad@@ ]_0, mov_rdi_qword_ptr_[rax], mov_qword_ptr_[rip+0x3@@ 5a@@ 97@@ ]_0, call_0xc@@ 6d@@ f, movsxd_rsi@@ _dword_ptr_[rip+0x3@@ 5a@@ 93], mov_rdi_qword_ptr_[rip+0x3@@ 5a@@ 84], lea_rcx_[rip-0x@@ 12@@ b], mov_edx_0x20, call_0xffffffffffffa@@ 4c0, lea_rbp_[rip+0x@@ 3@@ 2d@@ 04], lea_rdx_[rip+0x2@@ 24@@ 2d], mov_rdi_qword_ptr_[rbp+0x20], mov_esi_1, xor_eax_eax, call_0xffffffffffffa@@ 98@@ 2, mov_rcx_qword_ptr_[r@@ bp+0x20], mov_edx_0x3@@ e, mov_esi_1, lea_rdi_[rip+0x2@@ 24@@ 48], call_0xffffffffffffa@@ 948, mov_edx_dword_ptr_[rip+0x@@ 3@@ 5a@@ 3d], test_edx_edx, jg@@ _0x8@@ 3, jmp_0x1@@ 05, mov_rax_rcx, mul@@ _r13, shr_rcx@@ _3, movsxd_r10@@ _dword_ptr_[r@@ di+8], mov_r8_rdx, shr_rdx@@ _5, mov_rax_rdx, mul@@ _r12, movabs_rax@@ _0x20@@ c4@@ 9ba@@ 5e@@ 35@@ 3f7@@ cf, mov_rdi_qword_ptr_[rbp+0x20], shr_rdx@@ _2, imul_rsi@@ _rdx@@ _0x64, mul@@ _rcx, mov_rax_rbx, push_r11, mov_rcx_rdx, xor_edx_edx, div@@ _r10, push_r10, shr_r8@@ _3, sub_r8@@ _rsi, shr_rcx@@ _4, lea_rdx_[rip+0x2@@ 24@@ 4b], mov_esi_1, inc@@ _r14, push_rax, xor_eax_eax, push_r15, call_0xffffffffffffa@@ 8e@@ e, add_rsp_0x20, cmp_dword_ptr_[rip+0x@@ 35@@ 9b@@ e]@@ _r14d, jle_0x@@ 8e, mov_rdi_qword_ptr_[rip+0x@@ 35@@ 9a@@ 9], mov_rsi_r14, shl_rsi@@ _5, add_rdi@@ _rsi, mov_rax_qword_ptr_[rdi+0x10], mov_rdx_qword_ptr_[r@@ di+0x18], imul@@ _ebx@@ _eax@@ _0xf4240, mov_r9d_eax, mov_r15d_edx, add_ebx@@ _edx, movsxd_rbx_ebx, imul_rax@@ _rbx@@ _0x1@@ 86@@ a0, xor_edx_edx, mov_r11_qword_ptr_[r@@ di], div@@ _qword_ptr_[rip+0x@@ 35@@ 96@@ 3], lea_rcx_[rax@@ +5], mov_eax_dword_ptr_[rbp+0x@@ 14], test_eax_eax, je_0xffffffffffffff@@ 42, mov_rdi_r11, mov_qword_ptr_[rsp+8]_rsi, mov_qword_ptr_[rsp]_rcx, call_0xc0@@ 90, mov_rsi_qword_ptr_[rsp+8], mov_rcx_qword_ptr_[rsp], add_rsi@@ _qword_ptr_[rip+0x@@ 35@@ 94@@ 3], mov_r15d_dword_ptr_[r@@ si+0x18], mov_r9d_dword_ptr_[r@@ si+0x10], mov_r11_rax, mov_rdi_rsi, jmp_0xffffffffffffff0d, mov_rcx_qword_ptr_[r@@ bp+0x20], mov_edx_0x3@@ e, mov_esi_1, lea_rdi_[rip+0x22@@ 3@@ 1b], call_0xffffffffffffa8@@ 1b, mov_r8_qword_ptr_[rip+0x@@ 3@@ 58@@ f7], movabs_rcx@@ _0x4@@ 31b@@ de@@ 82d@@ 7b@@ 634@@ db, mov_rax_r8, mul@@ _rcx, mov_rdi_qword_ptr_[rbp+0x20], mov_r9d_dword_ptr_[r@@ ip+0x@@ 3@@ 58@@ e4], add_rsp_0x18, pop_rbx, mov_rcx_rdx, pop_rbp, shr_rcx@@ _0x12, pop_r12, imul_rax@@ _rcx@@ _0xf4240, pop_r13, pop_r14, sub_r8@@ _rax, lea_rdx_[rip+0x22@@ 310], mov_esi_1, xor_eax_eax, pop_r15, jmp_0xffffffffffffa@@ 7e@@ 7
endbr64, ret
endbr64, ret
endbr64, ret
endbr64, xor_eax_eax, ret
endbr64, ret
endbr64, xor_eax_eax, ret
endbr64, push_rbp, push_rbx, mov_rbx_rdi, shr@@ _rbx@@ _0x20, sub_rsp_8, mov_edi@@ _edi, call_0xc@@ 5d@@ d, mov_rdi_rbx, mov_ebp_eax, call_0xc@@ 5d@@ 3, add_rsp_8, pop_rbx, xor_eax@@ _ebp, pop_rbp, ret
endbr64, xor_eax_eax, cmp_rdi_rsi, seta_al, neg_eax, mov_edx_1, cmp_rdi_rsi, cmovb@@ _eax_edx, ret
endbr64, movzx_eax_byte_ptr_[rdi+0x@@ 24], and_ecx_1, and_eax_0xfffffff@@ 8, or_eax_ecx, mov_qword_ptr_[rdi]_0, mov_qword_ptr_[rdi+8]_0, mov_dword_ptr_[rdi+0x@@ 20]@@ _r8d, mov_qword_ptr_[rdi+0x1@@ 0]_rdx, mov_byte_ptr_[rdi+0x@@ 24@@ ]_al, mov_qword_ptr_[rdi+0x1@@ 8]_rsi, jmp_0xffffffffffffff5@@ 2
endbr64, mov_rax_qword_ptr_[r@@ si+0x18], cmp_qword_ptr_[rdi+0x1@@ 8]_rax, jb@@ _0x44, ja@@ _0x22, mov_rdi_qword_ptr_[rdi+0x10], mov_rsi_qword_ptr_[r@@ si+0x10], test_rdi_rdi, je_0x25, test_rsi_rsi, je_0x10, jmp_0xffffffffffffa@@ 3d@@ e, mov_eax_1, ret, xor_eax_eax, test_rsi_rsi, setne_al, neg_eax, ret, mov_eax_0xffffffff, ret
endbr64, push_r12, mov_r12_rsi, push_rbp, mov_ebp_edx, push_rbx, mov_rbx_rdi, test_byte_ptr_[rdi+0x@@ 24]_1, jne_0x1c, movzx_edx_byte_ptr_[r@@ bx+0x24], and_ebp@@ _1, and_edx@@ _0xfffffffe, or_edx@@ _ebp, mov_qword_ptr_[rbx+0x1@@ 0]_r12, mov_byte_ptr_[rbx+0x@@ 24]@@ _dl, pop_rbx, pop_rbp, pop_r12, ret, mov_rdi_qword_ptr_[rdi+0x10], call_0xffffffffffffa0@@ 9c, jmp_0xffffffffffffffd@@ d
endbr64, test_rdi_rdi, je_0x19, push_rbp, xor_edx_edx, mov_rbp_rdi, xor_esi_esi, call_0xffffffffffffff@@ af, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffffffe@@ 96, ret
endbr64, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x18, movzx_ebx_byte_ptr_[r@@ si+0x@@ 24], mov_rdi_qword_ptr_[r@@ si+0x10], shl_ebx@@ _7, sar@@ _bl@@ _7, je_7, test_rdi_rdi, jne_0x58, mov_eax_dword_ptr_[r@@ si+0x20], movzx_edx_byte_ptr_[r@@ si+0x@@ 24], mov_rcx_qword_ptr_[rsi+0x18], mov_dword_ptr_[rbp+0x@@ 20]_eax, movzx_eax_byte_ptr_[rbp+0x@@ 24], and_ebx_1, and_eax_0xfffffff@@ 8, or@@ _ebx_eax, and_edx@@ _6, or_ebx@@ _edx, mov_qword_ptr_[rbp+0x1@@ 0]_rdi, mov_qword_ptr_[rbp]_0, mov_qword_ptr_[rbp@@ +8]_0, mov_byte_ptr_[rbp+0x@@ 24@@ ]_bl, mov_qword_ptr_[rbp+0x1@@ 8]_rcx, mov_rdi_rbp, call_0xfffffffffffffe@@ 31, test_eax_eax, js@@ _0x32, xor_eax_eax, add_rsp_0x18, pop_rbx, pop_rbp, ret, mov_qword_ptr_[rsp+8]_rsi, call_0xffffffffffffa@@ 5c3, test_rax_rax, mov_rsi_qword_ptr_[rsp+8], mov_rdi_rax, jne_0xffffffffffffff@@ 95, or_eax_0xffffffff, jmp_0xffffffffffffffd8, xor_edx_edx, xor_esi_esi, mov_rdi_rbp, call_0xfffffffffffffe@@ f1, mov_eax_0xffffffff, jmp_0xffffffffffffffc@@ 1
endbr64, sub_rsp_8, call_0xfffffffffffffe@@ 78, test_eax_eax, setne_al, movzx_eax_al, add_rsp_8, ret
endbr64, sub_rsp_8, mov_rdi_qword_ptr_[rdi+0x10], call_0xffffffffffffa@@ 25@@ 4, test_eax_eax, setne_al, movzx_eax_al, add_rsp_8, ret
endbr64, movzx_eax_byte_ptr_[rdi+0x@@ 24], shr_al@@ _2, xor_eax_1, and_eax_1, ret
endbr64, and_byte_ptr_[r@@ di+0x@@ 4c]@@ _0xfc, mov_qword_ptr_[rdi]_0, mov_qword_ptr_[rdi+8]_0, mov_qword_ptr_[rdi+0x10]_0, mov_qword_ptr_[rdi+0x1@@ 8]_0, mov_qword_ptr_[rdi+0x@@ 20]_0, mov_qword_ptr_[rdi+0x@@ 38]_0, mov_qword_ptr_[rdi+0x@@ 40]_0, mov_qword_ptr_[rdi+0x@@ 28]_0, mov_qword_ptr_[rdi+0x@@ 30]_0, mov_dword_ptr_[rdi+0x@@ 4@@ 8]_esi, jmp_0xfffffffffffffc@@ d@@ e
endbr64, push_r12, mov_r12_rsi, push_rbp, mov_ebp_edx, push_rbx, mov_rbx_rdi, test_byte_ptr_[rdi+0x@@ 4c]_1, jne_0x1c, movzx_edx_byte_ptr_[r@@ bx+0x@@ 4c], and_ebp@@ _1, and_edx@@ _0xfffffffe, or_edx@@ _ebp, mov_qword_ptr_[rbx+0x3@@ 8]_r12, mov_byte_ptr_[rbx+0x@@ 4c]@@ _dl, pop_rbx, pop_rbp, pop_r12, ret, mov_rdi_qword_ptr_[rdi+0x@@ 38], call_0xffffffffffff9e@@ bc, jmp_0xffffffffffffffd@@ d
endbr64, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, mov_ebx_edx, test_byte_ptr_[rdi+0x@@ 4c@@ ]_2, jne_0x1c, movzx_edx_byte_ptr_[r@@ bp+0x@@ 4c], and_ebx_1, add@@ _ebx_ebx, and_edx@@ _0xfffffffd, or_ebx@@ _edx, mov_byte_ptr_[rbp+0x@@ 4c@@ ]_bl, pop_rbx, mov_qword_ptr_[rbp+0x@@ 4@@ 0]_r12, pop_rbp, pop_r12, ret, mov_rdi_qword_ptr_[rdi+0x@@ 40], call_0xffffffffffff9e@@ 7c, jmp_0xffffffffffffffd@@ d
endbr64, test_rdi_rdi, je_0xa1, push_r12, mov_r12_rdi, push_rbp, push_rbx, call_0xfffffffffffffc@@ 4c, xor_edx_edx, xor_esi_esi, mov_rdi_r12, call_0xffffffffffffff@@ 60, xor_edx_edx, xor_esi_esi, mov_rdi_r12, call_0xffffffffffffff@@ 94, mov_rbx_qword_ptr_[r@@ 12+0x28], test_rbx_rbx, je_0x22, mov_rbp_rbx, mov_rdi_rbp, mov_rbx_qword_ptr_[rbx], call_0xfffffffffffffd@@ 97, mov_rdi_rbp, call_0xffffffffffff9e@@ 1f, test_rbx_rbx, jne_0xffffffffffffffe7, mov_rbx_qword_ptr_[r@@ 12+0x30], test_rbx_rbx, jne_0x1a, jmp_0x3a, mov_rdi_rbp, call_0xffffffffffff9d@@ fd, test_rbx_rbx, je_0x24, mov_rbp_rbx, mov_rbx_qword_ptr_[rbx], test_byte_ptr_[rbp+0x@@ 10]_1, je_0xffffffffffffffe9, mov_rdi_qword_ptr_[rbp+8], call_0xffffffffffff9d@@ e3, mov_rdi_rbp, call_0xffffffffffff9@@ dd@@ b, test_rbx_rbx, jne_0xffffffffffffffe0, pop_rbx, pop_rbp, pop_r12, ret, ret
endbr64, push_r14, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_0x10, movzx_eax_byte_ptr_[r@@ 13+0x@@ 4c], mov_rsi_qword_ptr_[r@@ si+0x38], test_al_1, je_0xb, test_rsi_rsi, jne_0x1@@ aa, mov_rbp_qword_ptr_[r@@ 13+0x40], test_al_2, je_0xb, test_rbp_rbp, jne_0x1@@ b9, mov_eax_dword_ptr_[r13+0x@@ 48], and_byte_ptr_[r@@ 12+0x@@ 4c]@@ _0xfc, mov_dword_ptr_[r12+0x@@ 48]_eax, mov_qword_ptr_[r12]_0, mov_qword_ptr_[r12@@ +8]_0, movzx_edx_byte_ptr_[r@@ 13+0x@@ 4c], mov_qword_ptr_[r12+0x1@@ 0]_0, mov_qword_ptr_[r12+0x1@@ 8]_0, mov_qword_ptr_[r12+0x@@ 20]_0, mov_qword_ptr_[r12+0x@@ 38]_0, mov_qword_ptr_[r12+0x@@ 40]_0, mov_qword_ptr_[r12+0x@@ 28]_0, mov_qword_ptr_[r12+0x@@ 30]_0, shl_edx@@ _0x1f, sar_edx_0x1f, mov_rdi_r12, call_0xfffffffffffffe@@ 26, movzx_edx_byte_ptr_[r@@ 13+0x@@ 4c], mov_rsi_rbp, shl_edx@@ _0x1e, sar_edx_0x1f, mov_rdi_r12, call_0xfffffffffffffe@@ 50, mov_rsi_r13, mov_rdi_r12, call_0xfffffffffffffa@@ f5, mov_rax_qword_ptr_[r13+8], mov_rbx_qword_ptr_[r@@ 13+0x28], mov_qword_ptr_[r12+8]_rax, lea_rbp_[r@@ 12+0x28], test_rbx_rbx, jne_0x1b, jmp_0x61, mov_rbp_qword_ptr_[rbp], mov_rbx_qword_ptr_[rbx], mov_qword_ptr_[rbp+@@ 8]_r12, test_rbx_rbx, je_0x4a, mov_edi_0x28, call_0xffffffffffffa0@@ 9b, mov_qword_ptr_[rbp]_rax, mov_rdi_rax, test_rax_rax, je_0x12, mov_rsi_rbx, call_0xfffffffffffffc@@ 47, test_eax_eax, jns_0xffffffffffffff@@ d0, mov_rdi_qword_ptr_[rbp], call_0xffffffffffff9c@@ 9a, mov_rdi_r12, call_0xfffffffffffffe@@ 22, mov_eax_0xffffffff, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rbx_qword_ptr_[r@@ 13+0x30], mov_qword_ptr_[rbp]_0, lea_r14_[r@@ 12+0x30], test_rbx_rbx, jne_0x4f, mov_qword_ptr_[r@@ 14]_0, add_rsp_0x10, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, call_0xffffffffffffa@@ 228, mov_rdi_rax, test_rdi_rdi, je_0xb5, movzx_edx_byte_ptr_[r@@ bx+0x10], movzx_eax_byte_ptr_[r@@ bp+0x10], and_edx_1, and_eax_0xfffffffe, or_eax_edx, mov_byte_ptr_[rbp+0x@@ 10@@ ]_al, mov_qword_ptr_[rbp+@@ 8]_rdi, mov_rbx_qword_ptr_[rbx], mov_r14_qword_ptr_[r@@ 14], test_rbx_rbx, je_0xffffffffffffff@@ b5, mov_edi_0x18, call_0xffffffffffff9@@ ff0, mov_qword_ptr_[r14]_rax, mov_rbp_rax, test_rax_rax, je_0x7a, mov_rdi_qword_ptr_[rbx+8], test_byte_ptr_[rbx+0x1@@ 0]_1, je_0xffffffffffffff@@ b8, jmp_0xffffffffffffffae, mov_rdi_rsi, call_0xffffffffffffa@@ 1c@@ d, mov_rsi_rax, test_rax_rax, je_0x30, movzx_eax_byte_ptr_[r@@ 13+0x@@ 4c], jmp_0xfffffffffffffe@@ 47, mov_rdi_rbp, mov_qword_ptr_[rsp+8]_rsi, call_0xffffffffffffa@@ 1a8, test_rax_rax, mov_rsi_qword_ptr_[rsp+8], mov_rbp_rax, jne_0xfffffffffffffe@@ 35, mov_eax_0xffffffff, test_byte_ptr_[r13+0x@@ 4c]_1, je_0xffffffffffffff@@ 20, mov_rdi_rsi, mov_dword_ptr_[rsp+8]_eax, call_0xffffffffffff9b@@ 9b, mov_eax_dword_ptr_[rsp+8], jmp_0xffffffffffffff0a, mov_rdi_rbp, call_0xffffffffffff9b@@ 85, jmp_0xfffffffffffffee@@ b
endbr64, push_r13, mov_r13_rcx, push_r12, push_rbp, mov_rbp_rdx, push_rbx, sub_rsp_8, test_rsi_rsi, je_0x39, mov_r12_qword_ptr_[r@@ si], jmp_0x18, mov_rsi_r13, mov_rdi_r12, mov_rbx_qword_ptr_[r12], call_rbp, and_eax_0xfffffffd, je_0xa, mov_r12_rbx, test_r12_r12, jne_0xffffffffffffffe9, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, mov_r12_qword_ptr_[r@@ di+0x28], jmp_0xffffffffffffffe@@ 0
endbr64, mov_rax_rsi, jmp_0x18, mov_rdx_qword_ptr_[rax], mov_qword_ptr_[rax+@@ 8]_rdi, test_rdx_rdx, je_0x16, mov_rax_rdx, test_rax_rax, jne_0xffffffffffffffee, mov_rax_qword_ptr_@@ [@@ 0], ud2, mov_rdx_qword_ptr_[r@@ di+0x28], mov_qword_ptr_[rax]_rdx, mov_qword_ptr_[rdi+0x@@ 28]_rsi, ret
endbr64, mov_rdi_qword_ptr_[r@@ si+0x38], cmp_rdi_rdx, je_0x25, sub_rsp_8, mov_rsi_rdx, call_0xffffffffffff9d@@ 8c, test_eax_eax, setne_al, movzx_eax_al, add_rsp_8, ret, xor_eax_eax, ret
endbr64, mov_rax_qword_ptr_[rdx], cmp_qword_ptr_[r@@ si+@@ 8]_rax, setne_al, movzx_eax_al, ret
push_r13, xor_r8d_r8d, xor_ecx_ecx, push_r12, xor_edx_edx, mov_r12_rsi, push_rbp, mov_rbp_rdi, mov_r13d_1, push_rbx, sub_rsp_0xd8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xc8]_rax, xor_eax_eax, call_0xffffffffffff9e@@ 5d, test_eax_eax, je_0x42, mov_edi_eax, xor_r13d_r13d, cmp_eax_1, je_0x38, mov_rbx_rsp, mov_ecx_0x@@ c8, mov_rdx_rbx, mov_rsi_rbp, call_0xffffffffffff9d@@ 8c, mov_rax_qword_ptr_[rip+0x@@ 32@@ 300], mov_r8_rbx, mov_rdi_qword_ptr_[rax], mov_rcx_r12, lea_rdx_[rip+0x2@@ 1b@@ 32], mov_esi_1, xor_eax_eax, call_0xffffffffffff9@@ fb@@ 9, mov_rax_qword_ptr_[rsp+0xc8], xor_rax_qword_ptr_fs:[0x28], jne_0x13, add_rsp_0xd8, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, ret, call_0xffffffffffff9b@@ 3@@ 0
mov_eax_dword_ptr_[rdi], cmp_eax_1, je_0x2b, cmp_eax_2, je_0x46, test_eax_eax, je_0x32, push_rcx, mov_edx_0x8@@ c, lea_rcx_[rip+0x2@@ 1b@@ 33], lea_rsi_[rip+0x2@@ 1a@@ ea], lea_rdi_[rip+0x2@@ 1a@@ fd], call_0xffffffffffff9b@@ 75, mov_rsi_qword_ptr_[r@@ si+0x40], add_rdi_8, jmp_0xffffffffffffff18, mov_rsi_qword_ptr_[r@@ si+0x38], add_rdi_8, jmp_0xffffffffffffff08, mov_edx_dword_ptr_[r@@ si+0x@@ 48], xor_eax_eax, test_edx_edx, sete_al, ret
endbr64, mov_qword_ptr_[rdi+8]_0, mov_qword_ptr_[rdi]_0, ret
endbr64, movdqu_xmm0_xmmword_ptr_[r@@ sp+8], movdqu_xmm1_xmmword_ptr_[r@@ sp+0x18], movdqu_xmm2_xmmword_ptr_[r@@ sp+0x@@ 28], movdqu_xmm3_xmmword_ptr_[r@@ sp+0x@@ 38], mov_dword_ptr_[rdi+0x@@ 50]@@ _esi, mov_qword_ptr_[rdi@@ +8]_rdx, mov_qword_ptr_[rdi]_0, movups_xmmword_ptr_[r@@ di+0x1@@ 0]_xmm0, movups_xmmword_ptr_[r@@ di+0x@@ 20@@ ]_xmm1, movups_xmmword_ptr_[r@@ di+0x@@ 30@@ ]_xmm2, movups_xmmword_ptr_[r@@ di+0x@@ 40@@ ]_xmm3, ret
endbr64, mov_rax_qword_ptr_[rdi+8], test_rax_rax, je_0x15, mov_rdx_rax, mov_rax_qword_ptr_[rax], test_rax_rax, jne_0xfffffffffffffff7, mov_qword_ptr_[rdx@@ ]_rsi, ret, lea_rdx_[r@@ di+8], mov_qword_ptr_[rdx@@ ]_rsi, ret
endbr64, sub_rsp_8, cmp_esi_1, ja_0x3@@ 5, movdqu_xmm0_xmmword_ptr_[r@@ sp+0x10], movdqu_xmm1_xmmword_ptr_[r@@ sp+0x@@ 20], movdqu_xmm2_xmmword_ptr_[r@@ sp+0x@@ 30], movdqu_xmm3_xmmword_ptr_[r@@ sp+0x@@ 40], mov_dword_ptr_[rdi]@@ _esi, movups_xmmword_ptr_[r@@ di+@@ 8]_xmm0, movups_xmmword_ptr_[r@@ di+0x1@@ 8@@ ]_xmm1, movups_xmmword_ptr_[r@@ di+0x@@ 28@@ ]_xmm2, movups_xmmword_ptr_[r@@ di+0x@@ 38@@ ]_xmm3, add_rsp_8, ret, cmp_esi_2, jne_0xfffffffffffffff4, lea_rcx_[rip+0x2@@ 1a@@ 34], mov_edx_0x5@@ 2, lea_rsi_[rip+0x2@@ 19@@ c6], lea_rdi_[rip+0x2@@ 19@@ c8], call_0xffffffffffff9a@@ 5@@ 1
endbr64, mov_dword_ptr_[rdi@@ ]_2, ret
endbr64, cmp_dword_ptr_[r@@ di@@ ]_1, jbe_@@ 9, ret, add_rdi_8, jmp_0xffffffffffff@@ 9@@ 97@@ c
endbr64, push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+8], call_0xffffffffffffff@@ d4, lea_rdi_[r@@ bx+0x10], pop_rbx, jmp_0xffffffffffff@@ 99@@ 5@@ a
endbr64, push_rbx, mov_rbx_qword_ptr_[r@@ di+8], test_rbx_rbx, je_0x14, mov_rdi_rbx, mov_rbx_qword_ptr_[rbx], call_0xffffffffffffff@@ ca, test_rbx_rbx, jne_0xfffffffffffffff2, pop_rbx, ret
endbr64, test_rdi_rdi, je_0x59, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_qword_ptr_[r@@ bp+8], test_rbx_rbx, je_0x11, mov_eax_dword_ptr_[rbx+0x@@ 50], test_eax_eax, je_0x1f, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, jne_0xfffffffffffffff3, mov_rbp_qword_ptr_[rbp], test_rbp_rbp, jne_0xffffffffffffffe1, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret, mov_rdi_qword_ptr_[rbx+8], mov_rsi_r12, call_0xfffffffffffffdd@@ 9, test_eax_eax, je_0xffffffffffffff@@ d5, pop_rbx, pop_rbp, mov_eax_1, pop_r12, ret, xor_eax_eax, ret
endbr64, test_rdi_rdi, je_0xe4, push_r14, mov_r14_rsi, push_r13, mov_r13_rdi, push_r12, mov_r12_rdx, push_rbp, push_rbx, mov_rbx_qword_ptr_[r@@ 13+8], xor_ebp_ebp, test_rbx_rbx, jne_0x2c, jmp_0x7@@ b, cmp_eax_1, jne_0xa, test_ebp_ebp, je_0x89, mov_rdi_qword_ptr_[rbx+8], mov_rsi_r12, call_0xfffffffffffffd@@ 6c, test_eax_eax, jne_0x35, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, je_0x4f, mov_eax_dword_ptr_[rbx+0x@@ 50], test_eax_eax, jne_0xffffffffffffffd6, test_ebp_ebp, je_0xffffffffffffffdf, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, je_0x77, mov_eax_dword_ptr_[rbx+0x@@ 50], test_eax_eax, je_0xfffffffffffffff@@ 3, mov_rdi_qword_ptr_[rbx+8], mov_rsi_r12, call_0xfffffffffffffd@@ 3a, test_eax_eax, je_0xffffffffffffffd0, lea_rdi_[r@@ bx+0x10], mov_rsi_r14, call_0xfffffffffffffc@@ 79, mov_r8d_eax, mov_rbx_qword_ptr_[rbx], mov_eax_ebp, xor_eax_1, test_r8d_r8d, cmovne@@ _ebp_eax, test_rbx_rbx, jne_0xffffffffffffffb5, test_ebp_ebp, jne_0x39, mov_r13_qword_ptr_[r@@ 13], test_r13_r13, jne_0xffffffffffffff@@ 73, pop_rbx, pop_rbp, pop_r12, pop_r13, xor_eax_eax, pop_r14, ret, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, je_0xffffffffffffffe0, mov_eax_dword_ptr_[rbx+0x@@ 50], test_eax_eax, je_0xffffffffffffff@@ 70, cmp_eax_1, je_0xffffffffffffffea, jmp_0xffffffffffffff65, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_eax_1, pop_r14, ret, xor_eax_eax, ret
push_r15, push_r14, push_r13, mov_r13_r8, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rcx, sub_rsp_0x18, test_rdx_rdx, jne_0xd, mov_rdi_rsi, call_0xffffffffffff97@@ ae, mov_rdx_rax, mov_rax_qword_ptr_[rbx], mov_rdi_qword_ptr_[r12], lea_r14@@ _[rax@@ +rdx], cmp_qword_ptr_[r@@ 13]@@ _r14, jae_0x@@ 2b, lea_r15_[r@@ 14+r@@ 14], mov_rsi_r15, mov_qword_ptr_[rsp+8]_rdx, call_0xffffffffffff9a@@ d9, mov_rdi_rax, test_rax_rax, je_0x31, mov_qword_ptr_[r13@@ ]_r15, mov_rdx_qword_ptr_[rsp+8], mov_qword_ptr_[r12]_rax, mov_rax_qword_ptr_[rbx], add_rdi_rax, mov_rsi_rbp, call_0xffffffffffff9@@ 97@@ 6, mov_qword_ptr_[rbx@@ ]_r14, xor_eax_eax, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, or_eax_0xffffffff, jmp_0xffffffffffffffe@@ e
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0x68, mov_qword_ptr_[rsp+0x20]_rdi, mov_dword_ptr_[rsp+0x2@@ c]_edx, mov_rdi_rsi, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x58]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x38]_0, mov_qword_ptr_[rsp+0x40]_0, mov_qword_ptr_[rsp+0x48]_0, call_0xffffffffffff96@@ f4, test_rax_rax, je_0x1@@ 45, mov_r12_rax, lea_rax_[rax@@ -1], mov_qword_ptr_[rsp+8]_rax, xor_r13d_r13d, xor_ebx_ebx, lea_r14_[rsp+0x@@ 38], jmp_0x5@@ 8, cmp_al_0x5c, je_0x2@@ b6, cmp_al_0x2@@ a, je_0x2@@ 7e, cmp_al@@ _0x3f, je_0x2@@ 46, lea_rcx_[rsp+0x40], lea_rsi_[rsp+0x@@ 56], lea_rdi_[rsp+0x@@ 48], mov_r8_r14, mov_edx_2, mov_byte_ptr_[rsp+0x@@ 56@@ ]@@ _0x5c, mov_byte_ptr_[rsp+0x@@ 57@@ ]_al, call_0xfffffffffffffec@@ 0, test_eax_eax, js@@ _0x69, xor_r13d_r13d, inc_rbx, cmp_r12_rbx, jbe_0x@@ ce, movzx_eax_byte_ptr_[r@@ bp+r@@ bx], mov_byte_ptr_[rsp+0x@@ 37@@ ]_al, test_r13d_r13d, jne_0xffffffffffffffa4, cmp_al_0x5c, je_0x1@@ e8, cmp_al_0x5@@ b, je_0x1@@ 68, lea_rcx_[rsp+0x40], cmp_al_0x2@@ a, je_0x1@@ 33, cmp_al@@ _0x3f, je_0x103, cmp_al_0x2e, je_0x63, lea_rsi_[rsp+0x@@ 37], lea_rdi_[rsp+0x@@ 48], mov_r8_r14, mov_edx_1, call_0xfffffffffffffe@@ 5f, test_eax_eax, jns_0xffffffffffffff@@ a4, mov_rdi_qword_ptr_[rsp+0x48], mov_r12d@@ _0xc, call_0xffffffffffff9@@ 4c@@ 5, mov_rax_qword_ptr_[rsp+0x58], xor_rax_qword_ptr_fs:[0x28], jne_0x3@@ 7f, add_rsp_0x68, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, xor_edx_edx, lea_rdi_[rsp+0x@@ 48], mov_r8_r14, lea_rsi_[rip+0x2@@ 16@@ 58], call_0xfffffffffffffd@@ ff, test_eax_eax, js_0xffffffffffffff@@ a8, inc_rbx, cmp_r12_rbx, ja_0xffffffffffffff@@ 48, test_r13d_r13d, jne_0x3@@ 15, lea_rcx_[rsp+0x40], lea_rsi_[rsp+0x@@ 37], lea_rdi_[rsp+0x@@ 48], lea_r8_[rsp+0x@@ 38], mov_edx_1, mov_byte_ptr_[rsp+0x@@ 37@@ ]_0, call_0xfffffffffffffd@@ b9, test_eax_eax, js_0xffffffffffffff@@ 62, mov_rbp@@ _qword_ptr_[rsp+0x48], test_rbp_rbp, je_0x2@@ f6, mov_rdi_qword_ptr_[rsp+0x20], mov_edx_dword_ptr_[rsp+0x2c], mov_rsi_rbp, call_0xffffffffffff9@@ 3d@@ 2, mov_rdi_rbp, mov_r12d_eax, call_0xffffffffffff9@@ 40@@ 7, jmp_0xffffffffffffff42, xor_edx_edx, lea_rdi_[rsp+0x@@ 48], mov_r8_r14, lea_rsi_[rip+0x2@@ 1@@ 140], call_0xfffffffffffffd@@ 67, test_eax_eax, jns_0xffffffffffff@@ f@@ ea@@ c, jmp_0xffffffffffffff0a, xor_edx_edx, lea_rdi_[rsp+0x@@ 48], mov_r8_r14, lea_rsi_[rip+0x2@@ 15@@ 95], call_0xfffffffffffffd@@ 3f, test_eax_eax, jns_0xfffffffffffffe@@ 84, jmp_0xfffffffffffffe@@ e2, lea_rax_[rbx+1], cmp_r12_rax, jbe_0x@@ 54, movzx_edx_byte_ptr_[r@@ bp+r@@ bx+1], cmp_dl@@ _0x21, sete_cl, cmp_dl@@ _0x5@@ e, je_0x1@@ a1, xor_r9d_r9d, test_cl_cl, jne_0x1@@ 96, lea_r15@@ _[rax+1], cmp_dl@@ _0x5b, je_0x1@@ ac, cmp_r12@@ _r15, jbe_0x@@ 20, movzx_eax_byte_ptr_[r@@ bp+r@@ 15], cmp_al_0x5@@ b, je_0x123, cmp_al@@ _0x5d, je_0xcb, inc_r15, cmp_r12@@ _r15, ja_0xffffffffffffff@@ e4, mov_rdi_qword_ptr_[rsp+0x48], mov_r12d@@ _7, call_0xffffffffffff9@@ 34@@ 2, jmp_0xfffffffffffffe@@ 7d, mov_r13d_1, jmp_0xfffffffffffffd@@ f6, xor_edx_edx, lea_rcx_[rsp+0x40], lea_rdi_[rsp+0x@@ 48], mov_r8_r14, lea_rsi_[rip+0x2@@ 5a@@ 33], call_0xfffffffffffffc@@ 8a, test_eax_eax, jns_0xffffffffffff@@ fd@@ cc, jmp_0xfffffffffffffe@@ 2d, xor_edx_edx, lea_rcx_[rsp+0x40], lea_rdi_[rsp+0x@@ 48], mov_r8_r14, lea_rsi_[rip+0x2@@ 14@@ aa], call_0xfffffffffffffc@@ 5a, test_eax_eax, jns_0xffffffffffff@@ fd@@ 9c, jmp_0xfffffffffffffd@@ fd, xor_edx_edx, lea_rcx_[rsp+0x40], lea_rdi_[rsp+0x@@ 48], mov_r8_r14, lea_rsi_[rip+0x2@@ 14@@ 77], call_0xfffffffffffffc@@ 2a, test_eax_eax, jns_0xffffffffffff@@ fd@@ 6c, jmp_0xfffffffffffffd@@ cd, test_r9d_r9d, jne_0x@@ f5, lea_rcx_[rsp+0x40], lea_rdi_[rsp+0x@@ 48], add_r@@ 9d_r9d, mov_edx_1, movsxd_r9@@ _r9d, sub_rdx_rbx, sub_rdx@@ _r9, add_r9@@ _rbx, add_rdx@@ _r15, lea_rsi_[r@@ bp+r@@ 9], mov_r8_r14, call_0xfffffffffffffb@@ de, test_eax_eax, js_0xffffffffffff@@ fd@@ 87, mov_rbx_r15, jmp_0xfffffffffffffd@@ 1a, cmp_byte_ptr_[r@@ bp+r@@ 15+@@ 1]@@ _0x3a, lea_rax_[r@@ 15+1], je_0xe, mov_r15_rax, jmp_0xfffffffffffffe@@ c1, add_r15@@ _2, jmp_0xf, inc_r15, cmp_byte_ptr_[r@@ bp+r@@ 15]@@ _0x3a, je_9, cmp_r15@@ _qword_ptr_[rsp+8], jb@@ _0xfffffffffffffff0, cmp_r12@@ _r15, jbe_0xfffffffffffffe@@ be, cmp_byte_ptr_[r@@ bp+r@@ 15+@@ 1]@@ _0x5d, jne_0xfffffffffffffe@@ b2, add_r15@@ _2, jmp_0xfffffffffffffe@@ 85, lea_rax_[r@@ bx+2], movzx_r9d@@ _cl, cmp_r12_rax, jbe_0xfffffffffffffe@@ 98, movzx_edx_byte_ptr_[r@@ bp+r@@ bx+2], lea_r15@@ _[rax+1], cmp_dl@@ _0x5b, jne_0xfffffffffffffe@@ 63, cmp_byte_ptr_[rbp@@ +rax+@@ 1]@@ _0x3a, jne_0xfffffffffffffe@@ 58, lea_r15@@ _[rax@@ +2], mov_rax_qword_ptr_[rsp+8], jmp_0x14, inc_r15, cmp_byte_ptr_[r@@ bp+r@@ 15]@@ _0x3a, je_0xffffffffffffff@@ 99, cmp_r15_rax, jb@@ _0xfffffffffffffff@@ 2, jmp_0xffffffffffffff92, lea_rcx_[rsp+0x40], lea_rdi_[rsp+0x@@ 48], mov_r8_r14, mov_edx_2, lea_rsi_[rip+0x2@@ 13@@ 52], mov_dword_ptr_[rsp+0x28]@@ _r9d, mov_qword_ptr_[rsp+0x18]_rcx, mov_qword_ptr_[rsp+0x10]_rdi, call_0xfffffffffffffa@@ f0, test_eax_eax, mov_rdi_qword_ptr_[rsp+0x10], mov_rcx_qword_ptr_[rsp+0x18], mov_r9d_dword_ptr_[rsp+0x@@ 28], jns_0xfffffffffffffe@@ dd, jmp_0xfffffffffffffc@@ 84, mov_rdi_qword_ptr_[rsp+0x48], mov_r12d@@ _5, call_0xffffffffffff9@@ 13d, jmp_0xfffffffffffffc@@ 78, call_0xffffffffffff@@ 92@@ 93, lea_rcx_[rip+0x2@@ 13@@ 1f], mov_edx_0x@@ c1, lea_rsi_[rip+0x2@@ 12@@ f7], lea_rdi_[rip+0x2@@ 12@@ f7], call_0xffffffffffff9@@ 2f@@ 4
endbr64, sub_rsp_8, cmp_edi@@ _0xc, ja_0xffffffffffff@@ 97@@ 55, lea_rdx_[rip+0x2@@ 13@@ 68], mov_edi@@ _edi, movsxd_rax_dword_ptr_[r@@ dx+r@@ di*4], add_rax_rdx, jmp_rax
endbr64, mov_dword_ptr_[rdi]@@ _0xb, mov_qword_ptr_[rdi+0x@@ 28]_0, mov_dword_ptr_[rdi+0x@@ 30]_0, mov_esi_0x10, add_rdi_8, jmp_0x2@@ 50@@ e
endbr64, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, cmp_dword_ptr_[rdi]@@ _0xb, jne_0x32, cmp_qword_ptr_[rdi+0x@@ 20]@@ _0x10, mov_qword_ptr_[rsp]_rsi, mov_dword_ptr_[rsp+8]_edx, jne_0x47, add_rdi_8, mov_rsi_rsp, call_0x2@@ 5a@@ d, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x26, add_rsp_0x28, ret, lea_rcx_[rip+0x2@@ 13@@ 8c], mov_edx_0x5@@ 6, lea_rsi_[rip+0x2@@ 11@@ 81], lea_rdi_[rip+0x2@@ 11@@ 97], call_0xffffffffffff9@@ 15@@ 9, call_0xffffffffffff90@@ d4, lea_rcx_[rip+0x2@@ 13@@ 68], mov_edx@@ _0x58, lea_rsi_[rip+0x2@@ 115@@ d], lea_rdi_[rip+0x2@@ 13@@ 75], call_0xffffffffffff9@@ 13@@ 5
endbr64, sub_rsp_8, cmp_dword_ptr_[rdi]@@ _0xb, jne_0x24, cmp_qword_ptr_[rdi+0x@@ 20]@@ _0x10, jne_0x5b, mov_rax_rsi, cmp_qword_ptr_[rdi+0x1@@ 0]_rsi, jbe_0x@@ 33, shl_rax_4, add_rax_qword_ptr_[r@@ di+8], je_5, mov_rax_qword_ptr_[rax], add_rsp_8, ret, lea_rcx_[rip+0x2@@ 130@@ a], mov_edx_0x5@@ e, lea_rsi_[rip+0x2@@ 110@@ f], lea_rdi_[rip+0x2@@ 112@@ 5], call_0xffffffffffff90@@ e7, lea_rcx_[rip+0x2@@ 12@@ eb], mov_edx_0x5@@ f, lea_rsi_[rip+0x2@@ 10@@ f0], lea_rdi_[rip+0x2@@ 13@@ 80], call_0xffffffffffff90@@ c8, lea_rcx_[rip+0x2@@ 12@@ cc], mov_edx_0x5@@ f, lea_rsi_[rip+0x2@@ 10@@ d1], lea_rdi_[rip+0x2@@ 13@@ 21], call_0xffffffffffff90@@ a@@ 9
endbr64, cmp_dword_ptr_[rdi]@@ _0xb, jne_0xb, add_rdi_8, jmp_0x2@@ 46@@ 3, push_rax, lea_rcx_[rip+0x2@@ 12@@ 76], mov_edx_0x6@@ 9, lea_rsi_[rip+0x2@@ 10@@ 9b], lea_rdi_[rip+0x2@@ 10@@ b1], call_0xffffffffffff90@@ 7@@ 3
endbr64, and_r8d_1, and_edx_1, add_r@@ 8d_r8d, or_r8d@@ _edx, movzx_edx_byte_ptr_[r@@ di+0x18], mov_dword_ptr_[rdi]@@ _0xa, and_edx@@ _0xfffffffc, or_r8d@@ _edx, mov_qword_ptr_[rdi+0x@@ 28]_0, mov_dword_ptr_[rdi+0x@@ 30]_0, mov_qword_ptr_[rdi+@@ 8]_rsi, mov_qword_ptr_[rdi+0x1@@ 0]_rcx, mov_byte_ptr_[r@@ di+0x1@@ 8]@@ _r8b, ret
endbr64, mov_eax_edx, movzx_edx_byte_ptr_[r@@ di+0x10], and_eax_1, and_edx@@ _0xfffffffe, or_edx_eax, mov_dword_ptr_[rdi]@@ _0xc, mov_qword_ptr_[rdi+0x@@ 28]_0, mov_dword_ptr_[rdi+0x@@ 30]_0, mov_qword_ptr_[rdi+@@ 8]_rsi, mov_byte_ptr_[r@@ di+0x1@@ 0]_dl, ret
endbr64, test_rdi_rdi, je_0xc9, push_rbx, mov_rbx_rdi, mov_eax_dword_ptr_[rdi], cmp_eax_0xb, je_0x7a, cmp_eax_0xc, je_0x55, cmp_eax_0xa, je_0x28, mov_eax_dword_ptr_[rbx+0x@@ 30], test_eax_eax, jne_9, pop_rbx, ret, mov_rdi_qword_ptr_[rbx+0x28], call_0x3@@ 2a@@ c, mov_rdi_qword_ptr_[rbx+0x28], pop_rbx, jmp_0xffffffffffff@@ 8@@ dd@@ 2, movzx_eax_byte_ptr_[r@@ di+0x18], test_al_1, jne_0x62, test_al_2, je_0xffffffffffffffd0, mov_rdi_qword_ptr_[rbx+0x10], call_0x1c@@ 88, mov_rdi_qword_ptr_[rbx+0x10], call_0xffffffffffff8d@@ af, jmp_0xffffffffffffffbc, test_byte_ptr_[rdi+0x1@@ 0]_1, je_0xffffffffffffff@@ ae, mov_rdi_qword_ptr_[rdi+8], call_0xffffffffffffff@@ 86, mov_rdi_qword_ptr_[rbx+8], call_0xffffffffffff8d@@ 8d, jmp_0xffffffffffffff9a, cmp_qword_ptr_[rdi+0x@@ 20]@@ _0x10, jne_0x3c, lea_rdi_[r@@ di+8], xor_edx_edx, lea_rsi_[rip+0x@@ 4c], call_0x2@@ 3d@@ c, jmp_0xffffffffffffff79, mov_rdi_qword_ptr_[rdi+8], call_0xffffffffffffff@@ 4c, mov_rdi_qword_ptr_[rbx+8], call_0xffffffffffff8d@@ 53, movzx_eax_byte_ptr_[r@@ bx+0x18], jmp_0xffffffffffffff8a, ret, lea_rcx_[rip+0x2@@ 10@@ e8], mov_edx_0x7@@ 9, lea_rsi_[rip+0x20@@ f2@@ d], lea_rdi_[rip+0x2@@ 11@@ 7d], call_0xffffffffffff8@@ f0@@ 5
endbr64, mov_eax_dword_ptr_[rdi+8], test_eax_eax, jne_7, ret, push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi], call_0xfffffffffffffe@@ f9, mov_rdi_qword_ptr_[rbx], pop_rbx, jmp_0xffffffffffff@@ 8d@@ 0@@ 0
endbr64, test_rsi_rsi, je_0x1e, mov_rax_rdi, xor_edx_edx, div_rsi, mov_r8_rdi, test_rdx_rdx, je_0xa, lea_r8@@ _[rax+1], imul@@ _r8@@ _rsi, mov_rax_r8, ret, push_rax, lea_rcx_[rip+0x2@@ 10@@ 69], mov_edx_0x1@@ 1b, lea_rsi_[rip+0x20@@ eb@@ 8], lea_rdi_[rip+0x20@@ ee@@ b], call_0xffffffffffff8e@@ 9@@ 0
endbr64, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0x68@@ 1f, cmp_rax@@ _-2, jne_0x2b, mov_eax_dword_ptr_[rbp], sub_eax_3, cmp_eax_9, ja_0x@@ 9b, lea_rdx_[rip+0x20@@ f@@ 12], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x77, add_rsp_0x18, pop_rbp, pop_r12, ret, mov_eax_4, jmp_0xffffffffffffff80, call_0xffffffffffff8d@@ 2@@ 6
push_r15, mov_r15_rdi, push_r14, push_r13, mov_r13_rsi, push_r12, push_rbp, push_rbx, sub_rsp_0x48, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x20]_r8, mov_qword_ptr_[rsp+0x10@@ ]_-1, test_r8_r8, je_0xa, mov_rax_qword_ptr_[r@@ 8], mov_qword_ptr_[rsp+0x10]_rax, cmp_dword_ptr_[r@@ 13]@@ _0xb, jne_0x1@@ 6e, lea_rax_[r@@ 13+8], mov_qword_ptr_[rsp+0x18]_rax, mov_rax_qword_ptr_[rsp+0x30], mov_qword_ptr_[rsp+8]_0, or_rax@@ _qword_ptr_[rsp+0x38], mov_qword_ptr_[rsp+0x28]_rax, xor_ebx_ebx, xor_ebp_ebp, jmp_0x8@@ e, cmp_qword_ptr_[r13+0x@@ 20]@@ _0x10, jne_0x@@ f9, cmp_qword_ptr_[r13+0x1@@ 0]_rbx, jbe_0x@@ 10e, mov_r12_rbx, shl_r12@@ _4, add_r12@@ _qword_ptr_[r@@ 13+8], mov_rsi_qword_ptr_[r12], mov_rdi_r15, call_0xfffffffffffffe@@ 89, mov_r14_rax, cmp_rax_-1, je_0xa5, mov_rdi_rbp, mov_rsi_rax, call_0xfffffffffffffe@@ 21, mov_rbp_rax, cmp_rbx@@ _qword_ptr_[rsp+0x10], jne_0x12, mov_rax_qword_ptr_[rsp+0x20], cmp_qword_ptr_[rsp+0x28]_0, mov_qword_ptr_[rax]_rbp, je_0x65, mov_rsi_qword_ptr_[r12], mov_rdi_r15, call_0x@@ fb, cmp_rax_-1, je_0x6a, add_rbp_rax, mov_rax_qword_ptr_[rsp+8], cmp_rax_r14, cmovae@@ _r14@@ _rax, inc_rbx, mov_qword_ptr_[rsp+8]@@ _r14, mov_rdi_qword_ptr_[rsp+0x18], call_0x20@@ 74, cmp_rax_rbx, ja_0xffffffffffffff@@ 6c, cmp_qword_ptr_[rsp+8]_0, jne_0x4c, mov_rax_qword_ptr_[rsp+0x30], test_rax_rax, je_5, mov_qword_ptr_[rax]_rbp, mov_rax_qword_ptr_[rsp+0x38], test_rax_rax, je_0xa, mov_rcx_qword_ptr_[rsp+8], mov_qword_ptr_[rax]_rcx, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_0xffffffff, pop_r15, ret, mov_rsi_qword_ptr_[rsp+8], mov_rdi_rbp, call_0xfffffffffffffd@@ 6c, mov_rbp_rax, jmp_0xffffffffffffffa6, lea_rcx_[rip+0x20@@ de@@ 3], mov_edx_0x8@@ b, lea_rsi_[rip+0x20@@ c@@ 40], lea_rdi_[rip+0x20@@ e@@ 90], call_0xffffffffffff8c@@ 18, lea_rcx_[rip+0x20@@ dc@@ 4], mov_edx_0x8@@ b, lea_rsi_[rip+0x20@@ c@@ 21], lea_rdi_[rip+0x20@@ ed@@ 9], call_0xffffffffffff8b@@ f9, lea_rcx_[rip+0x20@@ da@@ 5], mov_edx@@ _0x88, lea_rsi_[rip+0x20@@ c0@@ 2], lea_rdi_[rip+0x20@@ c@@ 18], call_0xffffffffffff8b@@ d@@ a
endbr64, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0x6@@ 4a@@ f, cmp_rax@@ _-2, jne_0x6e, cmp_dword_ptr_[r@@ bp]@@ _0xc, ja_0xffffffffffff@@ 90@@ 25, mov_eax_dword_ptr_[rbp], lea_rdx_[rip+0x20@@ c@@ 8c], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x@@ 86, add_rsp_0x18, pop_rbp, pop_r12, ret, call_0xffffffffffff8a@@ 2@@ 4
endbr64, push_r13, push_r12, push_rbp, sub_rsp_0x10, mov_eax_dword_ptr_[rsi], mov_qword_ptr_[rsp+8]_rdx, lea_edx_[rax-0x@@ a], cmp_edx_1, ja_0x8@@ f, mov_r12_rdi, mov_rbp_rsi, cmp_eax_0xb, je_0x5f, mov_rsi_qword_ptr_[r@@ si+8], call_0xfffffffffffffb@@ e1, mov_r13_rax, cmp_rax_-1, je_0x35, mov_rsi_qword_ptr_[rbp+8], mov_rdi_r12, call_0xfffffffffffffe@@ 7c, mov_rdi_rax, cmp_rax_-1, je_0x20, mov_rsi_r13, call_0xfffffffffffffb@@ 6b, imul_rax@@ _qword_ptr_[rsp+8], add_rsp_0x10, pop_rbp, pop_r12, pop_r13, ret, add_rsp_0x10, pop_rbp, pop_r12, mov_rax_-1, pop_r13, ret, xor_ecx_ecx, xor_edx_edx, lea_r8_[r@@ sp+8], call_0xfffffffffffffc@@ 5f, test_eax_eax, js_0xffffffffffffff@@ d8, mov_rax_qword_ptr_[rsp+8], add_rsp_0x10, pop_rbp, pop_r12, pop_r13, ret, lea_rcx_[rip+0x20@@ b@@ 88], mov_edx_0x1@@ a1, lea_rsi_[rip+0x20@@ 9f@@ 5], lea_rdi_[rip+0x20@@ cc@@ d], call_0xffffffffffff8@@ 9c@@ d
endbr64, sub_rsp_0x18, mov_eax_dword_ptr_[rdi], lea_edx_[rax-0x@@ a], cmp_edx_1, ja_0x3@@ 5, cmp_eax_0xb, je_0xb, mov_rax_qword_ptr_[rdi+8], add_rsp_0x18, ret, mov_qword_ptr_[rsp+8]_rsi, mov_qword_ptr_[rsp]_rdi, call_0xfffffffffffff8f@@ 7, mov_rsi_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[rsp], cmp_rax_rsi, jbe_0x@@ 2a, add_rsp_0x18, jmp_0xfffffffffffff85@@ 0, lea_rcx_[rip+0x20@@ b0@@ c], mov_edx_0x1@@ bf, lea_rsi_[rip+0x20@@ 98@@ 9], lea_rdi_[rip+0x20@@ ca@@ 1], call_0xffffffffffff8@@ 96@@ 1, lea_rcx_[rip+0x20@@ ae@@ d], mov_edx_0x1@@ c7, lea_rsi_[rip+0x20@@ 96@@ a], lea_rdi_[rip+0x20@@ 9a@@ c], call_0xffffffffffff8@@ 94@@ 2
endbr64, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_eax_dword_ptr_[rdi], lea_edx_[rax-0x@@ a], cmp_edx_1, ja_0x4@@ 7, cmp_eax_0xb, je_0x3b, mov_rdi_qword_ptr_[rdi+0x10], mov_rsi_rsp, call_0x1a@@ e2, test_eax_eax, mov_rax_-1, cmovns@@ _rax@@ _qword_ptr_[rsp], mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x37, add_rsp_0x18, ret, call_0xfffffffffffff8@@ 30, jmp_0xffffffffffffffdc, lea_rcx_[rip+0x20@@ a4@@ 2], mov_edx_0x1@@ d2, lea_rsi_[rip+0x20@@ 8d@@ 7], lea_rdi_[rip+0x20@@ be@@ f], call_0xffffffffffff88@@ af, call_0xffffffffffff88@@ 2@@ a
endbr64, cmp_edi@@ _7, ja_0x1@@ 1, xor_eax_eax, test_edi_edi, setne_al, ret, sub_edi@@ _8, sub_rsp_8, cmp_edi@@ _4, ja_0xffffffffffff@@ 8d@@ 08, xor_eax_eax, add_rsp_8, ret
endbr64, push_rbx, mov_ebx_edi, mov_edi_ebx, call_0xffffffffffffff@@ c7, test_eax_eax, je_0x27, cmp_ebx@@ _7, ja_0xffffffffffff@@ 8c@@ ea, lea_rdx_[rip+0x20@@ 97@@ e], movsxd_rax_dword_ptr_[r@@ dx+r@@ bx*4], add_rax_rdx, jmp_rax, lea_rcx_[rip+0x20@@ 99@@ a], mov_edx_0x1@@ ff, lea_rsi_[rip+0x20@@ 84@@ 7], lea_rdi_[rip+0x20@@ 8a@@ 6], call_0xffffffffffff88@@ 1@@ f
endbr64, push_rbp, mov_rbp_rdi, mov_eax_dword_ptr_[rdi], cmp_eax_0xb, je_0x1f, jmp_0x31, mov_rdi_rbp, xor_esi_esi, call_0xfffffffffffffe@@ 33, mov_rbp_rax, mov_eax_dword_ptr_[rax], cmp_eax_0xb, jne_0x16, mov_rdi_rbp, call_0xfffffffffffff74@@ 1, cmp_rax_1, je_0xffffffffffffffe0, xor_eax_eax, pop_rbp, ret, cmp_eax_9, ja_0x1@@ 5, cmp_eax_8, mov_eax_0, cmovae@@ _rax@@ _rbp, pop_rbp, ret, sub_eax@@ _0xa, and_eax_0xfffffffd, jne_0xffffffffffff@@ 8c@@ 46, jmp_0xffffffffffffffd@@ 6
endbr64, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, test_rdi_rdi, je_0xc9, mov_eax_dword_ptr_[rdi], mov_r13_rdi, sub_eax@@ _0xa, cmp_eax_1, ja_0x7@@ c, mov_rbp_rsi, call_0xfffffffffffffe@@ 37, cmp_rax_-1, je_0x6e, mov_qword_ptr_[rbp]_0, lea_rbx@@ _[rax-1], test_rax_rax, je_0x5d, xor_r14d_r14d, mov_r12_rsp, jmp_0x1b, cmp_dword_ptr_[r@@ 14]_eax, jne_0x4d, mov_rax_qword_ptr_[rsp], dec@@ _rbx, add_qword_ptr_[r@@ bp@@ ]_rax, cmp_rbx@@ _-1, je_0x3f, mov_rdi_r13, mov_rsi_rbx, call_0xfffffffffffffd@@ 64, mov_rdi_rax, mov_eax_dword_ptr_[rax], mov_qword_ptr_[rsp@@ ]_1, lea_edx_[rax-0x@@ a], cmp_edx_1, jbe_0x@@ 44, test_r14_r14, jne_0xffffffffffffffc7, mov_eax_dword_ptr_[rdi], sub_eax@@ _8, cmp_eax_1, ja@@ _0xd, mov_r14_rdi, jmp_0xffffffffffffffbd, xor_r14d_r14d, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x4a, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_rax_r14, pop_r14, ret, mov_rsi_r12, call_0xffffffffffffff@@ 25, mov_rdi_rax, test_rax_rax, je_0xffffffffffffff@@ ca, mov_eax_dword_ptr_[rax], jmp_0xffffffffffffffac, lea_rcx_[rip+0x20@@ 7@@ fd], mov_edx_0x2@@ 3f, lea_rsi_[rip+0x20@@ 6c@@ 2], lea_rdi_[rip+0x20@@ 3@@ 15], call_0xffffffffffff86@@ 9a, call_0xffffffffffff86@@ 1@@ 5
endbr64, test_rsi_rsi, je_0x29, mov_qword_ptr_[rdi]_rcx, mov_dword_ptr_[rdi+0x@@ 2c]@@ _r8d, mov_qword_ptr_[rdi+@@ 8]_rsi, mov_qword_ptr_[rdi+0x@@ 20]_0, mov_dword_ptr_[rdi+0x@@ 28]_0, mov_qword_ptr_[rdi+0x1@@ 0]_rdx, mov_qword_ptr_[rdi+0x1@@ 8]_-1, ret, push_rax, lea_rcx_[rip+0x20@@ b@@ c0], mov_edx_0x3@@ 1, lea_rsi_[rip+0x20@@ 9c@@ 8], lea_rdi_[rip+0x20@@ 9c@@ e], call_0xffffffffffff86@@ 4@@ 5
endbr64, mov_qword_ptr_[rdi]_rdx, mov_dword_ptr_[rdi+0x@@ 2@@ c]_ecx, mov_qword_ptr_[rdi+8]_0, mov_qword_ptr_[rdi+0x@@ 20]_0, mov_dword_ptr_[rdi+0x@@ 28]_0, mov_qword_ptr_[rdi+0x1@@ 0]_rsi, mov_qword_ptr_[rdi+0x1@@ 8]_-1, ret
endbr64, push_r12, mov_r12_rsi, push_rbp, mov_ebp_edx, push_rbx, mov_rbx_rdi, mov_eax_dword_ptr_[rdi+0x@@ 2c], test_eax_eax, jne_0x13, mov_qword_ptr_[rbx@@ ]_r12, mov_dword_ptr_[rbx+0x@@ 2c]@@ _ebp, pop_rbx, pop_rbp, pop_r12, ret, mov_rdi_qword_ptr_[rdi], call_0xfffffffffffff5f@@ 5, mov_rdi_qword_ptr_[rbx], call_0xffffffffffff8@@ 3f@@ d, mov_qword_ptr_[rbx@@ ]_r12, mov_dword_ptr_[rbx+0x@@ 2c]@@ _ebp, pop_rbx, pop_rbp, pop_r12, ret
endbr64, mov_rax_qword_ptr_[rdi], mov_qword_ptr_[rsi]_rax, mov_eax_dword_ptr_[rdi+0x@@ 2c], mov_dword_ptr_[rdx]_eax, mov_dword_ptr_[rdi+0x@@ 2c]_0, ret
endbr64, test_rdi_rdi, je_0x29, push_rbx, mov_rbx_rdi, cmp_dword_ptr_[rdi+0x@@ 28]_2, je_7, pop_rbx, ret, mov_rdi_qword_ptr_[rdi+0x20], call_0xffffffffffff8@@ 3a@@ 4, mov_dword_ptr_[rbx+0x@@ 28]_0, pop_rbx, ret, ret
endbr64, test_rdi_rdi, je_0x19, push_rbp, mov_rbp_rdi, call_0xffffffffffffff@@ b3, mov_rdi_rbp, xor_edx_edx, xor_esi_esi, pop_rbp, jmp_0xffffffffffffff36, ret
endbr64, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, call_0xffffffffffffff@@ 80, mov_qword_ptr_[rbx+0x20]@@ _rbp, mov_dword_ptr_[rbx+0x@@ 28]_1, add_rsp_8, pop_rbx, pop_rbp, ret
endbr64, sub_rsp_8, mov_eax_dword_ptr_[rdi+0x@@ 28], cmp_eax_3, ja_0x1@@ 2, cmp_eax_1, ja_0x1@@ d, test_eax_eax, jne_0x22, xor_eax_eax, add_rsp_8, ret, cmp_eax_4, jne_0x1b, lea_rax_[r@@ di+0x20], add_rsp_8, ret, mov_rax_qword_ptr_[rdi+0x20], add_rsp_8, ret, jmp_0xffffffffffff@@ 8@@ 960, lea_rcx_[rip+0x20@@ 9f@@ b], mov_edx_0x@@ b8, lea_rsi_[rip+0x20@@ 8@@ 2b], lea_rdi_[rip+0x20@@ 8@@ a0], call_0xffffffffffff8@@ 4a@@ 8
endbr64, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, sub_rsp_8, call_0xfffffffffffffee@@ f, cmp_r12@@ _8, ja_0x2@@ 6, mov_dword_ptr_[rbp+0x@@ 28@@ ]_4, mov_qword_ptr_[rbp+0x@@ 20]_0, add_rsp_8, mov_rdi_rbp, pop_rbp, pop_r12, jmp_0xffffffffffffff6b, mov_dword_ptr_[rbp+0x@@ 28]_2, mov_esi_1, mov_rdi_r12, call_0xffffffffffff@@ 85@@ 21, mov_qword_ptr_[rbp+0x20]_rax, test_rax_rax, jne_0xffffffffffffffd0, pop_rdx, pop_rbp, xor_eax_eax, pop_r12, ret
endbr64, push_r13, xor_r13d_r13d, push_r12, push_rbp, push_rbx, sub_rsp_8, movdqu_xmm0_xmmword_ptr_[rsi], movups_xmmword_ptr_[r@@ di@@ ]_xmm0, movdqu_xmm1_xmmword_ptr_[r@@ si+0x10], movups_xmmword_ptr_[r@@ di+0x10@@ ]_xmm1, movdqu_xmm2_xmmword_ptr_[r@@ si+0x20], movups_xmmword_ptr_[r@@ di+0x@@ 20]_xmm2, cmp_dword_ptr_[rsi+0x@@ 28]_2, je_0x12, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, ret, mov_rbp_rdi, mov_rdi_qword_ptr_[r@@ si+8], mov_rbx_rsi, test_rdi_rdi, je_0x49, mov_rsi_qword_ptr_[rsi], call_0xfffffffffffff80@@ e, mov_r12_rax, cmp_rax_-1, je_0x30, mov_rdi_rax, call_0xffffffffffff8@@ 5c@@ d, mov_qword_ptr_[rbp+0x20]_rax, mov_rdi_rax, test_rax_rax, je_0x1c, mov_rsi_qword_ptr_[rbx+0x20], mov_rdx_r12, call_0xffffffffffff@@ 85@@ 35, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, ret, mov_r13d_0xffffffff, jmp_0xffffffffffffff9c, lea_rcx_[rip+0x20@@ 8@@ bb], mov_edx_0x@@ c1, lea_rsi_[rip+0x20@@ 70@@ 3], lea_rdi_[rip+0x20@@ 70@@ 4], call_0xffffffffffff8@@ 38@@ 0
endbr64, push_r13, mov_r13_rdx, push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rdi_qword_ptr_[r@@ si+8], mov_rsi_qword_ptr_[rsi], call_0xfffffffffffff8c@@ 2, cmp_rax_-1, je_0xc9, mov_rdi_qword_ptr_[rbp], mov_rsi_r13, mov_r12_rax, call_0xfffffffffffff97@@ 9, test_rax_rax, je_0xb1, mov_rdx_qword_ptr_[rbp+8], mov_qword_ptr_[rbx+0x20]_0, mov_qword_ptr_[rbx+0x28]_0, mov_qword_ptr_[rbx]_rax, mov_qword_ptr_[rbx+@@ 8]_rdx, mov_eax_dword_ptr_[rbp+0x@@ 28], mov_qword_ptr_[rbx+0x1@@ 0]_rbp, mov_qword_ptr_[rbx+0x1@@ 8]_-1, cmp_eax_3, ja@@ _0x2e, cmp_eax_1, ja_0x5@@ 9, test_eax_eax, je_0x7c, add_r12@@ _qword_ptr_[r@@ bp+0x20], mov_qword_ptr_[rbx+0x20]@@ _r12, mov_dword_ptr_[rbx+0x@@ 28]_1, xor_eax_eax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, cmp_eax_4, jne_0x73, mov_rdi_rbp, call_0xfffffffffffffd@@ c8, add_r12_rax, mov_qword_ptr_[rbx+0x20]@@ _r12, mov_dword_ptr_[rbx+0x28@@ ]_3, add_rsp_8, pop_rbx, pop_rbp, pop_r12, xor_eax_eax, pop_r13, ret, add_r12@@ _qword_ptr_[r@@ bp+0x20], mov_qword_ptr_[rbx+0x20]@@ _r12, mov_dword_ptr_[rbx+0x28@@ ]_3, add_rsp_8, pop_rbx, pop_rbp, pop_r12, xor_eax_eax, pop_r13, ret, mov_eax_0xffffffff, jmp_0xffffffffffffff99, lea_rcx_[rip+0x20@@ 78@@ 2], mov_edx_0x1@@ 0c, lea_rsi_[rip+0x20@@ 5e@@ 2], lea_rdi_[rip+0x20@@ 5f@@ 9], call_0xffffffffffff8@@ 25@@ f, jmp_0xffffffffffff@@ 86@@ f@@ 8
endbr64, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_0x18, mov_rdi_qword_ptr_[rdi+8], mov_rsi_qword_ptr_[rbx], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xfffffffffffff65@@ 9, cmp_rax_-1, je_0xb3, cmp_rax@@ _8, ja_0x8@@ a, lea_rdx_[rip+0x20@@ 67@@ 9], movsxd_rax_dword_ptr_[rdx+rax*4], mov_dword_ptr_[rbx+0x28@@ ]_4, add_rax_rdx, xor_ecx_ecx, jmp_rax, lea_rcx_[rip+0x20@@ 65@@ d], mov_edx_0x1@@ 48, lea_rsi_[rip+0x20@@ 4f@@ 5], lea_rdi_[rip+0x20@@ 53@@ 5], call_0xffffffffffff8@@ 17@@ 2, lea_rcx_[rip+0x20@@ 63@@ e], mov_edx_0x1@@ 47, lea_rsi_[rip+0x20@@ 4d@@ 6], lea_rdi_[rip+0x20@@ 50@@ 5], call_0xffffffffffff8@@ 15@@ 3
endbr64, push_r13, mov_r13_rdx, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x18, mov_rdi_qword_ptr_[rdi+8], mov_rsi_qword_ptr_[rbp], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xfffffffffffff54@@ 1, cmp_rax_-1, je_0xce, mov_rbx_rax, cmp_rax@@ _8, ja_0x@@ cb, test_rax_rax, jne_0x32, mov_qword_ptr_[r12]_0, xor_eax_eax, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0xc7, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_rsi_r13, mov_rdi_rbp, mov_qword_ptr_[rsp]_0, call_0x2@@ 82, mov_rsi_rax, test_rax_rax, je_0x6d, mov_rdi_rsp, mov_ecx_8, mov_rdx_rbx, call_0xffffffffffff8@@ 1c@@ a, cmp_rbx@@ _4, je_0x49, ja_0x1@@ 7, cmp_rbx@@ _1, jne_0x29, movzx_eax_byte_ptr_[r@@ sp], mov_qword_ptr_[r12]_rax, xor_eax_eax, jmp_0xffffffffffffff97, cmp_rbx@@ _8, jne_0x68, mov_rax_qword_ptr_[rsp], mov_qword_ptr_[r12]_rax, xor_eax_eax, jmp_0xffffffffffffff82, cmp_rbx@@ _2, jne_0x50, movzx_eax_word_ptr_[r@@ sp], mov_qword_ptr_[r12]_rax, xor_eax_eax, jmp_0xffffffffffffff6a, mov_eax_dword_ptr_[rsp], mov_qword_ptr_[r12]_rax, xor_eax_eax, jmp_0xffffffffffffff59, mov_eax_0xffffffff, jmp_0xffffffffffffff4f, lea_rcx_[rip+0x20@@ 4e@@ 9], mov_edx_0x1@@ 79, lea_rsi_[rip+0x20@@ 39@@ 9], lea_rdi_[rip+0x20@@ 3d@@ 9], call_0xffffffffffff80@@ 16, call_0xffffffffffff7f@@ 91, lea_rcx_[rip+0x20@@ 4c@@ 5], mov_edx_0x1@@ 92, lea_rsi_[rip+0x20@@ 37@@ 5], lea_rdi_[rip+0x20@@ 3d@@ 2], call_0xffffffffffff7@@ ff@@ 2
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x58, mov_r12_qword_ptr_[r@@ di+0x18], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, cmp_r12@@ _-1, jne_0x20, mov_r13_rsi, mov_rsi_qword_ptr_[rdi], mov_rbx_rdi, cmp_dword_ptr_[r@@ si@@ ]@@ _0xa, je_0x34, mov_rdi_qword_ptr_[rdi+8], call_0xfffffffffffff3d@@ 6, mov_qword_ptr_[rbx+0x18]_rax, mov_r12_rax, mov_rax_qword_ptr_[rsp+0x48], xor_rax_qword_ptr_fs:[0x28], jne_0x77, add_rsp_0x58, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, mov_rdi_qword_ptr_[r@@ si+0x10], lea_rbp_[rsp+0x10], mov_rcx_rbp, mov_rdx_r13, mov_rsi_rbx, call_0xea@@ 6, test_eax_eax, js_0xffffffffffffff@@ c5, mov_rdx_r13, mov_rdi_rbp, lea_rsi_[rsp+8], call_0xfffffffffffffe@@ 12, mov_r13d_eax, mov_rdi_rbp, call_0xfffffffffffff9e@@ 7, test_r13d_r13d, js_0xffffffffffffff@@ a5, mov_rax_qword_ptr_[rbx], mov_rdi_qword_ptr_[rbx+8], mov_rsi_qword_ptr_[rax+8], call_0xfffffffffffff@@ 36@@ 2, cmp_rax_-1, je_0xffffffffffffff@@ 8f, imul_rax@@ _qword_ptr_[rsp+8], mov_qword_ptr_[rbx+0x18]_rax, mov_r12_rax, jmp_0xffffffffffffff80, call_0xffffffffffff7e@@ 9@@ 5
endbr64, cmp_dword_ptr_[rdi+0x@@ 28]_1, jne_0x58, push_r12, push_rbp, push_rbx, mov_rbx_rdi, cmp_qword_ptr_[rdi+@@ 8]_0, je_0x8c, call_0xffffffffffffff@@ 14, mov_rbp_rax, cmp_rax_-1, je_0xa8, cmp_rax@@ _8, ja_0x3@@ 6, mov_rsi_qword_ptr_[rbx+0x20], mov_rdi_qword_ptr_[rbx+8], lea_rdx_[r@@ bx+0x20], mov_rcx_rax, call_0x8@@ 97@@ d, cmp_rbp_rax, ja_0x8@@ 5, mov_dword_ptr_[rbx+0x28@@ ]_4, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, ret, xor_eax_eax, ret, mov_rdi_rax, call_0xffffffffffff80@@ a5, mov_r12_rax, test_rax_rax, je_0x5a, mov_rsi_qword_ptr_[rbx+0x20], mov_rdi_qword_ptr_[rbx+8], mov_rcx_rbp, mov_rdx_rax, call_0x8@@ 93@@ a, cmp_rbp_rax, ja_0x3@@ 3, mov_dword_ptr_[rbx+0x@@ 28]_2, mov_qword_ptr_[rbx+0x20]@@ _r12, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, ret, lea_rcx_[rip+0x20@@ 3b@@ f], mov_edx_0x8@@ 2, lea_rsi_[rip+0x20@@ 1d@@ 7], lea_rdi_[rip+0x20@@ 1d8], call_0xffffffffffff7e@@ 54, mov_rdi_r12, call_0xffffffffffff7c@@ 6c, mov_eax_0xffffffff, jmp_0xffffffffffffff8@@ 5
endbr64, push_rbp, mov_rbp_rdi, call_0xffffffffffffff@@ 18, test_eax_eax, js_0x1@@ 1, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffffff9@@ 1b, xor_eax_eax, pop_rbp, ret
endbr64, push_rbp, push_rbx, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_rax_qword_ptr_[rsi], cmp_dword_ptr_[rax]@@ _0xc, jne_0x6f, mov_rbp_rsi, mov_rbx_rdi, xor_edx_edx, mov_rsi_rsp, mov_rdi_rbp, call_0xfffffffffffffc@@ 90, test_eax_eax, js_0x5@@ 1, mov_rdx_qword_ptr_[rbp], mov_rax_qword_ptr_[rbp+8], mov_rdx_qword_ptr_[rdx+8], mov_qword_ptr_[rbx+8]_rax, mov_qword_ptr_[rbx]_rdx, mov_rax_qword_ptr_[rsp], mov_qword_ptr_[rbx+0x1@@ 0]_rbp, mov_qword_ptr_[rbx+0x1@@ 8]_-1, mov_qword_ptr_[rbx+0x@@ 28]_1, mov_qword_ptr_[rbx+0x20]_rax, xor_eax_eax, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x36, add_rsp_0x18, pop_rbx, pop_rbp, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffdd, lea_rcx_[rip+0x20@@ 25@@ a], mov_edx_0x1@@ 15, lea_rsi_[rip+0x2@@ 00@@ da], lea_rdi_[rip+0x20@@ 17@@ 7], call_0xffffffffffff7d@@ 57, call_0xffffffffffff7@@ cd@@ 2
endbr64, push_r14, mov_r14_rdx, push_r13, mov_r13_rsi, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, mov_rdi_qword_ptr_[rdi+8], mov_rsi_qword_ptr_[rbp], call_0xfffffffffffff@@ 150, cmp_rax_-1, je_0x37, mov_rsi_r14, mov_rdi_rbp, mov_r12_rax, call_0xfffffffffffffed@@ c, mov_rsi_rax, test_rax_rax, je_0x21, mov_rdx_r12, mov_rdi_r13, call_0xffffffffffff7e@@ 79, xor_eax_eax, add_rsp_8, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffe@@ 9
endbr64, mov_rax_qword_ptr_[rdi+0x10], test_rax_rax, jne_0xe, jmp_0x14, mov_rax_qword_ptr_[rax+0x10], test_rax_rax, je_0xa, mov_rdx_qword_ptr_[rax], cmp_dword_ptr_[rdx@@ ]@@ _0xb, jne_0xfffffffffffffff1, ret
endbr64, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, call_0xfffffffffffffe@@ 63, test_rax_rax, je_0x4b, mov_rdi_qword_ptr_[rbp+8], mov_rsi_qword_ptr_[rbp], mov_rbx_rax, call_0xfffffffffffff0@@ ae, cmp_rax_-1, je_0x35, test_rax_rax, je_0x40, mov_rdx_rbx, add_rax_rbx, jmp_0x10, inc_rdx, cmp_rdx_rax, je_0x2a, cmp_byte_ptr_[rdx]_0, je_0xfffffffffffffff@@ 5, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret, add_rsp_8, pop_rbx, mov_eax_0xffffffff, pop_rbp, ret, add_rsp_8, pop_rbx, mov_eax_1, pop_rbp, ret
endbr64, push_r14, mov_r14_rdx, push_r13, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, sub_rsp_8, mov_rdi_qword_ptr_[rdi+8], mov_rsi_qword_ptr_[r12], call_0xfffffffffffff0@@ 30, mov_rdi_qword_ptr_[rbp+8], mov_rsi_qword_ptr_[rbp], mov_r13_rax, call_0xfffffffffffff0@@ 20, cmp_r13@@ _-1, je_0x77, cmp_rax_-1, je_0x71, xor_r8d_r8d, cmp_r13_rax, je_0x19, add_rsp_8, pop_rbp, pop_r12, pop_r13, mov_eax_r8d, pop_r14, ret, mov_rdi_r12, mov_rsi_r14, call_0xfffffffffffffd@@ 8a, mov_rsi_r14, mov_rdi_rbp, mov_r12_rax, call_0xfffffffffffffd@@ 7c, mov_rsi_rax, test_r12_r12, je_0x31, test_rax_rax, je_0x2c, mov_rdx_r13, mov_rdi_r12, call_0xffffffffffff7c@@ 34, xor_r8d_r8d, test_eax_eax, sete_r8b, add_rsp_8, pop_rbp, pop_r12, pop_r13, mov_eax_r8d, pop_r14, ret, add_rsp_8, pop_rbp, pop_r12, mov_r8d_0xffffffff, pop_r13, mov_eax_r8d, pop_r14, ret
endbr64, push_r12, push_rbp, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, test_rdi_rdi, je_0x87, mov_rax_qword_ptr_[rdi], mov_rbp_rdi, cmp_dword_ptr_[rax]@@ _0xb, jne_0xa1, mov_esi_1, mov_edi_0x38, call_0xffffffffffff7@@ be@@ 3, mov_r12_rax, test_rax_rax, je_0x81, lea_rdx_[rsp+0xc], lea_rsi_[rsp+0x10], mov_rdi_rbp, call_0xfffffffffffff5@@ 39, mov_edx_dword_ptr_[rsp+0xc], mov_rsi_qword_ptr_[rsp+0x10], mov_rdi_r12, call_0xffffffffffffea@@ c8, mov_rax_qword_ptr_[rsp+0x10], mov_edx_1, mov_rax_qword_ptr_[rax+0x28], mov_rsi_r12, mov_rdi_rbp, mov_qword_ptr_[r12+0x@@ 28]_rax, call_0xfffffffffffff4b@@ a, xor_eax_eax, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x29, add_rsp_0x28, pop_rbp, pop_r12, ret, lea_rcx_[rip+0x@@ 1ff@@ 44], mov_edx_0x1@@ d6, lea_rsi_[rip+0x1@@ fe@@ 14], lea_rdi_[rip+0x@@ 1fe@@ 7a], call_0xffffffffffff7a@@ 91, call_0xffffffffffff7@@ a0@@ c, or_eax_0xffffffff, jmp_0xffffffffffffffc1, lea_rcx_[rip+0x@@ 1ff@@ 1b], mov_edx_0x1@@ d7, lea_rsi_[rip+0x1@@ fd@@ eb], lea_rdi_[rip+0x@@ 1fe@@ b0], call_0xffffffffffff7@@ a6@@ 8
endbr64, jmp_0xfffffffffffff6@@ 2@@ c
endbr64, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, sub_rsp_8, mov_rdi_qword_ptr_[rsi], call_0xffffffffffff7e@@ 3d, mov_qword_ptr_[rbp]_rax, test_rax_rax, je_0x33, mov_dword_ptr_[rbp+0x@@ 38]_1, lea_rsi_[rbx+8], lea_rdi_[r@@ bp+8], call_0xfffffffffffff5f@@ 0, test_eax_eax, js@@ _0xb, xor_eax_eax, add_rsp_8, pop_rbx, pop_rbp, ret, mov_rdi_qword_ptr_[rbp], call_0xffffffffffff7@@ 8@@ 2a, mov_eax_0xffffffff, jmp_0xffffffffffffff@@ eb, or_eax_0xffffffff, jmp_0xffffffffffffffe@@ 6
endbr64, push_rbx, mov_rbx_rdi, mov_eax_dword_ptr_[rdi+0x@@ 38], test_eax_eax, jne_0x13, lea_rdi_[rbx+8], pop_rbx, jmp_0xfffffffffffff@@ 47@@ c, mov_rdi_qword_ptr_[rdi], call_0xffffffffffff7@@ 7e@@ d, lea_rdi_[rbx+8], pop_rbx, jmp_0xfffffffffffff@@ 46@@ 3
endbr64, jmp_0xfffffffffffff@@ 44@@ c
endbr64, push_rbx, mov_esi_0x30, mov_rbx_rdi, call_0xcd@@ 3, lea_rdi_[r@@ bx+0x20], mov_esi_0x40, pop_rbx, jmp_0x@@ cc@@ 4
endbr64, push_rbp, push_rbx, sub_rsp_8, cmp_qword_ptr_[r@@ si+0x1@@ 8]@@ _0x30, jne_0xa@@ b, xor_r8d_r8d, lea_rcx_[rip-0x@@ 5f], lea_rdx_[rip-0x@@ 11@@ 6], mov_rbp_rdi, mov_rbx_rsi, call_0xe@@ 44, test_eax_eax, js@@ _0x61, cmp_qword_ptr_[rbx+0x@@ 38]@@ _0x40, lea_rsi_[r@@ bx+0x20], jne_0x5d, xor_r8d_r8d, lea_rdi_[r@@ bp+0x20], lea_rcx_[rip-0x@@ ce], lea_rdx_[rip-0x@@ 13@@ 5], call_0xe@@ 1b, mov_r8d_eax, xor_eax_eax, test_r8d_r8d, js@@ _0xe, add_rsp_8, pop_rbx, pop_rbp, ret, cmp_qword_ptr_[rbp+0x@@ 18]@@ _0x30, jne_0x64, mov_rdi_rbp, xor_edx_edx, lea_rsi_[rip-0x@@ c3], call_0xd@@ 7d, add_rsp_8, pop_rbx, mov_eax_0xffffffff, pop_rbp, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffcb, lea_rcx_[rip+0x2@@ 00@@ c6], mov_edx_0x5@@ 4, lea_rsi_[rip+0x1@@ fe@@ 35], lea_rdi_[rip+0x@@ 1fe@@ 8b], call_0xffffffffffff7@@ 8b@@ b, lea_rcx_[rip+0x2@@ 00@@ a7], mov_edx@@ _0x50, lea_rsi_[rip+0x1@@ fe@@ 16], lea_rdi_[rip+0x@@ 1fe@@ 3c], call_0xffffffffffff7@@ 8@@ 9c, lea_rcx_[rip+0x2@@ 00@@ 88], mov_edx_0x5@@ 6, lea_rsi_[rip+0x1@@ fd@@ f7], lea_rdi_[rip+0x@@ 1fe@@ 85], call_0xffffffffffff7@@ 87@@ d
endbr64, cmp_qword_ptr_[rdi+0x1@@ 8]@@ _0x30, jne_7, jmp_0x@@ c@@ 85, push_rax, lea_rcx_[rip+0x2@@ 00@@ 38], mov_edx_0x6@@ 0, lea_rsi_[rip+0x1@@ fd@@ bf], lea_rdi_[rip+0x@@ 1fe@@ 85], call_0xffffffffffff7@@ 84@@ 5
endbr64, push_r13, mov_r13d_ecx, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_0x58, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, test_ecx_ecx, jne_0x64, movdqu_xmm0_xmmword_ptr_[r@@ bp], movdqu_xmm1_xmmword_ptr_[r@@ bp+0x10], movdqu_xmm2_xmmword_ptr_[r@@ bp+0x20], cmp_qword_ptr_[rbx+0x@@ 38]@@ _0x40, mov_qword_ptr_[rsp]@@ _r12, mov_dword_ptr_[rsp+0x38]@@ _r13d, movups_xmmword_ptr_[r@@ sp+@@ 8]_xmm0, movups_xmmword_ptr_[r@@ sp+0x1@@ 8@@ ]_xmm1, movups_xmmword_ptr_[rsp+0x@@ 28@@ ]_xmm2, jne_0x61, mov_rsi_rsp, lea_rdi_[r@@ bx+0x20], call_0xb@@ fd, test_eax_eax, js@@ _0x3d, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x48], xor_rbx_qword_ptr_fs:[0x28], jne_0x3a, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_rdi_rdx, call_0xffffffffffff7@@ ba@@ d, mov_r12_rax, test_rax_rax, jne_0xffffffffffffff@@ 90, mov_eax_0xffffffff, jmp_0xffffffffffffffc9, test_r13d_r13d, je_0xfffffffffffffff6, mov_rdi_r12, call_0xffffffffffff7@@ 5b@@ 1, jmp_0xffffffffffffff@@ ec, call_0xffffffffffff7@@ 70@@ a, lea_rcx_[rip+0x@@ 1ff@@ 3e], mov_edx_0x6@@ a, lea_rsi_[rip+0x1@@ fc@@ e5], lea_rdi_[rip+0x@@ 1f@@ dd@@ b], call_0xffffffffffff7@@ 76@@ b
endbr64, jmp_0xb@@ 2@@ c
endbr64, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, call_0xb@@ 10, cmp_rax_rbp, jbe_0x@@ 22, cmp_qword_ptr_[rbx+0x1@@ 8]@@ _0x30, jne_0x59, cmp_qword_ptr_[rbx+@@ 8]_rbp, jbe_0x@@ 34, lea_rax_[rbp+r@@ bp@@ *2], shl_rax_4, add_rax_qword_ptr_[r@@ bx], add_rsp_8, pop_rbx, pop_rbp, ret, lea_rcx_[rip+0x@@ 1f@@ ea@@ f], mov_edx_0x7@@ b, lea_rsi_[rip+0x1@@ fc@@ 76], lea_rdi_[rip+0x@@ 1fd@@ 9c], call_0xffffffffffff7@@ 6f@@ c, lea_rcx_[rip+0x@@ 1fe@@ 90], mov_edx_0x7@@ c, lea_rsi_[rip+0x1@@ fc@@ 57], lea_rdi_[rip+0x@@ 1f@@ dd@@ d], call_0xffffffffffff7@@ 6d@@ d, lea_rcx_[rip+0x@@ 1fe@@ 71], mov_edx_0x7@@ c, lea_rsi_[rip+0x1@@ fc@@ 38], lea_rdi_[rip+0x@@ 1fd@@ 86], call_0xffffffffffff7@@ 6b@@ e
endbr64, push_r14, lea_r14_[r@@ di+0x20], push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, push_rbp, push_rbx, xor_ebx_ebx, jmp_0x36, cmp_qword_ptr_[r12+0x@@ 38]@@ _0x40, jne_0x76, cmp_qword_ptr_[r12+0x@@ 2@@ 8]_rbx, jbe_0x@@ 50, mov_rbp_rbx, shl_rbp@@ _6, add_rbp@@ _qword_ptr_[r@@ 12+0x20], mov_rdi_qword_ptr_[rbp], mov_rsi_r13, call_0xffffffffffff7@@ 75@@ e, test_eax_eax, je_0x27, inc_rbx, mov_rdi_r14, call_0xa@@ 2f, cmp_rax_rbx, ja_0xffffffffffffff@@ c7, pop_rbx, pop_rbp, pop_r12, pop_r13, xor_eax_eax, pop_r14, ret, pop_rbx, lea_rax_[r@@ bp+8], pop_rbp, pop_r12, pop_r13, pop_r14, ret, lea_rcx_[rip+0x@@ 1fd@@ ac], mov_edx_0x8@@ 5, lea_rsi_[rip+0x1@@ fb@@ 93], lea_rdi_[rip+0x@@ 1fb@@ 99], call_0xffffffffffff7@@ 6@@ 19, lea_rcx_[rip+0x@@ 1fd@@ 8d], mov_edx_0x8@@ 5, lea_rsi_[rip+0x1@@ fb@@ 74], lea_rdi_[rip+0x@@ 1fd@@ 1a], call_0xffffffffffff7@@ 5f@@ a
endbr64, test_rdi_rdi, je_0x39, push_rbx, mov_rbx_rdi, cmp_qword_ptr_[rdi+0x1@@ 8]@@ _0x30, jne_0x2f, xor_edx_edx, lea_rsi_[rip-0x@@ 3@@ dd], call_0xa@@ 63, cmp_qword_ptr_[rbx+0x@@ 38]@@ _0x40, jne_0x39, lea_rdi_[r@@ bx+0x20], xor_edx_edx, lea_rsi_[rip-0x@@ 43@@ 6], pop_rbx, jmp_0xa@@ 49, ret, lea_rcx_[rip+0x@@ 1fd@@ 08], mov_edx_0x@@ 92, lea_rsi_[rip+0x1@@ fb@@ 0f], lea_rdi_[rip+0x@@ 1fc@@ 5d], call_0xffffffffffff7@@ 5@@ 95, lea_rcx_[rip+0x@@ 1fc@@ e9], mov_edx_0x@@ 93, lea_rsi_[rip+0x1@@ fa@@ f0], lea_rdi_[rip+0x@@ 1fc@@ 96], call_0xffffffffffff7@@ 57@@ 6
endbr64, pxor_xmm0_xmm0, mov_dword_ptr_[rdi]_0, mov_qword_ptr_[rdi+8]_0, mov_dword_ptr_[rdi+0x1@@ 0]_0, movups_xmmword_ptr_[r@@ di+0x1@@ 8]_xmm0, movups_xmmword_ptr_[r@@ di+0x@@ 28]_xmm0, movups_xmmword_ptr_[r@@ di+0x@@ 38]_xmm0, ret
endbr64, pxor_xmm0_xmm0, movups_xmmword_ptr_[r@@ di+0x@@ 20]_xmm0, mov_dword_ptr_[rdi@@ ]_1, mov_qword_ptr_[rdi+8]_0, mov_dword_ptr_[rdi+0x1@@ 0]_0, mov_qword_ptr_[rdi+0x@@ 40]_0, mov_qword_ptr_[rdi+0x1@@ 8]_rsi, mov_dword_ptr_[rdi+0x@@ 20]_edx, movups_xmmword_ptr_[r@@ di+0x@@ 30]_xmm0, ret
endbr64, pxor_xmm0_xmm0, mov_dword_ptr_[rdi@@ ]_2, mov_qword_ptr_[rdi+8]_0, mov_dword_ptr_[rdi+0x1@@ 0]_0, mov_qword_ptr_[rdi+0x@@ 40]_0, mov_qword_ptr_[rdi+0x1@@ 8]_rsi, movups_xmmword_ptr_[r@@ di+0x@@ 20]_xmm0, movups_xmmword_ptr_[r@@ di+0x@@ 30]_xmm0, ret
endbr64, mov_dword_ptr_[rdi@@ ]_3, mov_qword_ptr_[rdi+8]_0, mov_dword_ptr_[rdi+0x1@@ 0]_0, pxor_xmm0_xmm0, movups_xmmword_ptr_[r@@ di+0x1@@ 8]_xmm0, movups_xmmword_ptr_[r@@ di+0x@@ 28]_xmm0, movups_xmmword_ptr_[r@@ di+0x@@ 38]_xmm0, movdqu_xmm1_xmmword_ptr_[r@@ si], movups_xmmword_ptr_[r@@ di+0x1@@ 8@@ ]_xmm1, movdqu_xmm2_xmmword_ptr_[r@@ si+0x10], movups_xmmword_ptr_[r@@ di+0x@@ 28@@ ]_xmm2, movdqu_xmm3_xmmword_ptr_[r@@ si+0x20], movups_xmmword_ptr_[r@@ di+0x@@ 38@@ ]_xmm3, ret
endbr64, push_r13, mov_r13_rsi, xor_esi_esi, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_0x40, mov_r12_rsp, mov_rdi_r12, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, call_0xffffffffffffe@@ e0@@ 5, mov_rsi_r13, mov_rdi_r12, call_0xfffffffffffff@@ 1@@ ea, mov_rsi_r12, mov_rdi_rbp, call_0xffffffffffffff@@ 6f, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0xc, add_rsp_0x40, pop_rbp, pop_r12, pop_r13, ret, call_0xffffffffffff7@@ 39@@ 0
endbr64, pxor_xmm0_xmm0, movups_xmmword_ptr_[r@@ di+0x@@ 20]_xmm0, mov_dword_ptr_[rdi@@ ]_4, mov_qword_ptr_[rdi+0x@@ 40]_0, mov_qword_ptr_[rdi+@@ 8]_rsi, mov_dword_ptr_[rdi+0x1@@ 0]_edx, mov_qword_ptr_[rdi+0x1@@ 8]_rcx, mov_dword_ptr_[rdi+0x@@ 20]@@ _r8d, movups_xmmword_ptr_[r@@ di+0x@@ 30]_xmm0, ret
endbr64, test_rsi_rsi, je_0x20, pxor_xmm0_xmm0, mov_dword_ptr_[rdi@@ ]_5, mov_qword_ptr_[rdi+@@ 8]_rsi, mov_dword_ptr_[rdi+0x1@@ 0]_edx, movups_xmmword_ptr_[r@@ di+0x1@@ 8]_xmm0, movups_xmmword_ptr_[r@@ di+0x@@ 28]_xmm0, movups_xmmword_ptr_[r@@ di+0x@@ 38]_xmm0, ret, push_rax, lea_rcx_[rip+0x@@ 1fc@@ 79], mov_edx_0x5@@ c, lea_rsi_[rip+0x1@@ fb@@ 9c], lea_rdi_[rip+0x@@ 1fb@@ 9c], call_0xffffffffffff7@@ 38@@ e
endbr64, pxor_xmm0_xmm0, mov_dword_ptr_[rdi@@ ]_6, mov_qword_ptr_[rdi@@ +8]_rdx, mov_dword_ptr_[rdi+0x1@@ 0]_ecx, mov_qword_ptr_[rdi+0x1@@ 8]_rsi, mov_qword_ptr_[rdi+0x@@ 20]@@ _r8, movups_xmmword_ptr_[r@@ di+0x@@ 28]_xmm0, movups_xmmword_ptr_[r@@ di+0x@@ 38]_xmm0, ret
endbr64, mov_rax_qword_ptr_[rsp+8], pxor_xmm0_xmm0, movups_xmmword_ptr_[r@@ di+0x@@ 30]_xmm0, mov_dword_ptr_[rdi@@ ]_7, mov_qword_ptr_[rdi+0x@@ 40]_0, mov_qword_ptr_[rdi@@ +8]_rdx, mov_dword_ptr_[rdi+0x1@@ 0]_ecx, mov_qword_ptr_[rdi+0x@@ 2@@ 8]_r8, mov_dword_ptr_[rdi+0x@@ 30]@@ _r9d, mov_qword_ptr_[rdi+0x1@@ 8]_rsi, mov_qword_ptr_[rdi+0x@@ 20]_rax, ret
endbr64, test_rdi_rdi, je_0x89, push_rbx, mov_rbx_rdi, cmp_dword_ptr_[r@@ di@@ ]_7, ja_0x8@@ e, mov_eax_dword_ptr_[rdi], lea_rdx_[rip+0x@@ 1fb@@ 4d], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, ret, lea_rcx_[rip+0x@@ 1fb@@ 2f], mov_edx_0x@@ ab, lea_rsi_[rip+0x1@@ fa@@ 62], lea_rdi_[rip+0x@@ 1fa@@ 6e], call_0xffffffffffff7@@ 25@@ 4
test_esi_esi, jne_6, ret, sub_rsp_0x18, mov_qword_ptr_[rsp+8]_rdi, call_0xffffffffffffff@@ 1f, mov_rdi_qword_ptr_[rsp+8], add_rsp_0x18, jmp_0xffffffffffff@@ 70@@ 4@@ 1
endbr64, xor_eax_eax, cmp_dword_ptr_[r@@ di@@ ]_3, sete_al, ret
endbr64, push_r13, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rcx, sub_rsp_0x40, mov_r13_rsp, mov_rcx_r13, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, call_0x1@@ 17, test_eax_eax, js@@ _0x40, mov_rdx_r12, mov_rdi_r13, mov_rsi_rbp, call_0xfffffffffffff0@@ 85, sar_eax_0x1f, mov_rdi_r13, mov_r12d_eax, call_0xffffffffffffec@@ 57, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x1c, add_rsp_0x40, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, mov_r12d_0xffffffff, jmp_0xffffffffffffffd8, call_0xffffffffffff7@@ 10@@ 8
endbr64, push_r14, push_r13, mov_r13_rcx, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_0x50, lea_r14_[rsp+0x10], mov_rdi_qword_ptr_[rdi+8], mov_rcx_r14, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, call_0x@@ 88, test_eax_eax, js_0x5@@ 1, mov_rdi_qword_ptr_[rbx+0x18], lea_rcx_[rsp+8], mov_rdx_r12, mov_rsi_rbp, call_0xffffffffffffff@@ 30, test_eax_eax, js_0x4@@ 9, mov_rdx_qword_ptr_[rsp+8], mov_rsi_r14, mov_rdi_r13, call_0xffffffffffffe@@ da@@ c, test_eax_eax, js_0x3@@ 5, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x48], xor_rbx_qword_ptr_fs:[0x28], jne_0x32, add_rsp_0x50, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffda, mov_rdi_r14, call_0xffffffffffffeb@@ 7d, mov_eax_0xffffffff, jmp_0xffffffffffffffc2, call_0xffffffffffff70@@ 5@@ 1
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, add_rsp_-0x80, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x78]_rax, xor_eax_eax, cmp_dword_ptr_[r@@ di@@ ]_7, ja_0x2@@ 31, mov_eax_dword_ptr_[rdi], mov_r13_rdx, lea_rdx_[rip+0x@@ 1f@@ 90@@ a], movsxd_rax_dword_ptr_[rdx+rax*4], mov_rbp_rdi, add_rax_rdx, mov_r12_rcx, jmp_rax, lea_rcx_[rip+0x@@ 1f7@@ 1c], mov_edx_0x1@@ 2e, lea_rsi_[rip+0x1f@@ 65@@ f], lea_rdi_[rip+0x@@ 1f@@ 68@@ 9], call_0xffffffffffff6e@@ 5@@ 1
endbr64, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, sub_rsp_8, call_0xfffffffffffffb@@ ff, test_eax_eax, je_0x18, add_rsp_8, mov_rdi_rbp, pop_rbp, mov_rcx_r12, xor_edx_edx, xor_esi_esi, pop_r12, jmp_0xfffffffffffffb@@ f5, lea_rcx_[rip+0x@@ 1f@@ 68@@ 9], mov_edx_0x1@@ 43, lea_rsi_[rip+0x1f@@ 5e@@ 4], lea_rdi_[rip+0x@@ 1f@@ 6b@@ e], call_0xffffffffffff6@@ dd@@ 6
endbr64, mov_rax_qword_ptr_[rip+0x@@ 32@@ 2c@@ d], test_rax_rax, je_0xa, ret, mov_edi_0x4@@ 8, sub_rsp_8, call_0xffffffffffff6@@ fa@@ f, mov_qword_ptr_[rip+0x3@@ 22@@ ab@@ ]_rax, mov_rdi_rax, test_rax_rax, je_0x13, call_0xfffffffffffff8@@ 2b, mov_rax_qword_ptr_[rip+0x3@@ 22@@ 97], add_rsp_8, ret, call_0xffffffffffff6c@@ 0a, mov_esi_dword_ptr_[rax], lea_rdx_[rip+0x@@ 1f@@ 5c@@ a], mov_edi_1, xor_eax_eax, call_0xffffffffffff70@@ 6@@ 5
endbr64, xor_eax_eax, ret
endbr64, ret
endbr64, jmp_0x3@@ f7@@ c
endbr64, jmp@@ _0x40@@ 3@@ c
endbr64, jmp_0x4@@ 1b@@ c
endbr64, jmp_0x4@@ 24@@ c
endbr64, jmp_0x4@@ 3d@@ c
endbr64, jmp_0xffffffffffffff8@@ c
endbr64, jmp_0xffffffffffffff8@@ c
endbr64, sub_rsp_8, mov_rdx_qword_ptr_[rdx+0x18], call_0xffffffffffff6e@@ 54, xor_eax_eax, add_rsp_8, ret
endbr64, mov_qword_ptr_[rdi]_0, mov_qword_ptr_[rdi+8]_0, mov_qword_ptr_[rdi+0x10]_0, mov_qword_ptr_[rdi+0x1@@ 8]_rsi, ret
endbr64, mov_rax_qword_ptr_[rdi+0x10], cmp_rax_rsi, jae_0x@@ 55, push_rbp, mov_rbp_rdi, push_rbx, lea_rbx_[rax@@ +rax], sub_rsp_8, test_rax_rax, mov_eax_4, cmove_rbx_rax, cmp_rbx@@ _rsi, jae_0x@@ f, add_r@@ bx_rbx, cmp_rsi@@ _rbx, ja@@ _0xfffffffffffffffa, mov_rsi_qword_ptr_[rbp+0x18], mov_rdi_qword_ptr_[rbp], imul_rsi@@ _rbx, call_0xffffffffffff6f@@ 1c, test_rax_rax, je_0x17, mov_qword_ptr_[rbp+0x1@@ 0]_rbx, mov_qword_ptr_[rbp]_rax, xor_eax_eax, add_rsp_8, pop_rbx, pop_rbp, ret, xor_eax_eax, ret, or_eax_0xffffffff, jmp_0xfffffffffffffff@@ 2
endbr64, mov_rax_qword_ptr_[rdi+8], ret
endbr64, xor_eax_eax, cmp_qword_ptr_[rdi+@@ 8]_0, sete_al, ret
endbr64, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, sub_rsp_8, call_0xffffffffffffff@@ d0, add_rsp_8, lea_rsi@@ _[rax+r@@ bx], pop_rbx, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffffff4@@ e
endbr64, push_rbp, mov_rbp_rsi, mov_esi_1, push_rbx, mov_rbx_rdi, sub_rsp_8, call_0xffffffffffffff@@ bb, test_eax_eax, js_0x3@@ 4, mov_rdi_qword_ptr_[rbx+8], mov_rdx_qword_ptr_[rbx+0x18], lea_rax_[r@@ di+1], imul_rdi@@ _rdx, mov_qword_ptr_[rbx+8]_rax, mov_rsi_rbp, add_rdi_qword_ptr_[r@@ bx], call_0xffffffffffff6d@@ 28, xor_eax_eax, add_rsp_8, pop_rbx, pop_rbp, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffe@@ a
endbr64, dec@@ _qword_ptr_[r@@ di+8], ret
endbr64, test_rdi_rdi, je_0x59, push_r14, mov_r14_rdi, push_r13, push_r12, push_rbp, mov_rbp_rsi, push_rbx, test_rsi_rsi, je_0x2e, mov_r12_rdx, call_0xffffffffffffff@@ 21, mov_r13_rax, test_rax_rax, je_0x1e, xor_ebx_ebx, mov_rdi_qword_ptr_[r@@ 14+0x18], mov_rsi_r12, imul_rdi@@ _rbx, inc_rbx, add_rdi_qword_ptr_[r@@ 14], call_rbp, cmp_r13_rbx, jne_0xffffffffffffffea, pop_rbx, pop_rbp, pop_r12, mov_rdi_qword_ptr_[r14], pop_r13, pop_r14, jmp_0xffffffffffff@@ 6@@ 93d, ret
endbr64, push_r15, mov_r15_rdi, push_r14, mov_r14_rsi, push_r13, mov_r13_rcx, push_r12, mov_r12_rdx, push_rbp, mov_rbp_r8, push_rbx, sub_rsp_8, mov_rsi_qword_ptr_[r@@ si+0x18], call_0xfffffffffffffe@@ 1b, mov_rsi_qword_ptr_[r14+8], mov_rdi_r15, call_0xfffffffffffffe@@ 2f, test_eax_eax, js_0x@@ dc, test_r12_r12, je_0xbf, test_r13_r13, je_0xd1, mov_rax_qword_ptr_[r14+8], test_rax_rax, je_0x91, xor_ebx_ebx, jmp_0x15, mov_rax_qword_ptr_[r14+8], inc_rbx, cmp_rax_rbx, jbe_0x@@ 76, mov_rsi_qword_ptr_[r14+0x18], mov_rdi_qword_ptr_[r15+0x18], imul_rsi@@ _rbx, imul_rdi@@ _rbx, mov_rdx_rbp, add_rsi_qword_ptr_[r@@ 14], add_rdi_qword_ptr_[r@@ 15], call_r12, test_eax_eax, jns_0xffffffffffffff@@ d6, test_r13_r13, je_0x2b, lea_r12_[r@@ bx-1], test_rbx_rbx, je_0x22, mov_rdi_qword_ptr_[r15+0x18], mov_rsi_rbp, imul_rdi@@ _r12, dec@@ _r12, add_rdi_qword_ptr_[r@@ 15], call_r13, cmp_r12@@ _-1, jne_0xffffffffffffffe8, mov_rdi_r15, xor_edx_edx, xor_esi_esi, call_0xfffffffffffffec@@ 7, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_0xffffffff, pop_r15, ret, mov_qword_ptr_[r15+8]_rax, xor_eax_eax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, test_r13_r13, jne_0x37, mov_rbp_r15, lea_r12_[r@@ ip-0x@@ 2e@@ f], jmp_0xffffffffffffff41, mov_eax_0xffffffff, jmp_0xffffffffffffffd5, lea_rcx_[rip+0x@@ 1f@@ 30@@ 6], mov_edx_0x4@@ 3, lea_rsi_[rip+0x1f@@ 2d@@ 9], lea_rdi_[rip+0x@@ 1f@@ 2e@@ 6], call_0xffffffffffff6@@ 9c@@ b, lea_rcx_[rip+0x@@ 1f@@ 2e@@ 7], mov_edx@@ _0x3f, lea_rsi_[rip+0x1f@@ 2b@@ a], lea_rdi_[rip+0x@@ 1f@@ 2b@@ a], call_0xffffffffffff6@@ 9a@@ c
endbr64, push_r14, mov_r14_rcx, push_r13, mov_r13_rdx, push_r12, push_rbp, mov_rbp_rdi, push_rbx, xor_ebx_ebx, test_rsi_rsi, je_0x12, mov_rax_rsi, sub_rax_qword_ptr_[r@@ di], xor_edx_edx, div@@ _qword_ptr_[r@@ di+0x18], lea_rbx_[rax+1], cmp_rbx_qword_ptr_[r@@ bp+8], jae_0x@@ 2b, mov_r12_qword_ptr_[r@@ bp+0x18], mov_rsi_r14, imul@@ _r12@@ _rbx, add_r12@@ _qword_ptr_[r@@ bp], mov_rdi_r12, call_r13, and_eax_0xfffffffd, je_0xe, inc_rbx, cmp_qword_ptr_[r@@ bp+@@ 8]_rbx, ja_0xffffffffffffff@@ df, xor_r12d_r12d, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret
endbr64, mov_dword_ptr_[rdi]_0, mov_qword_ptr_[rdi+@@ 8]_rsi, mov_dword_ptr_[rdi+0x1@@ 0]_edx, ret
endbr64, mov_dword_ptr_[rdi@@ ]_2, ret
endbr64, mov_rax_qword_ptr_[rsp+8], mov_dword_ptr_[rdi@@ ]_1, mov_qword_ptr_[rdi+0x@@ 28]_rax, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rdi@@ +8]_rdx, mov_qword_ptr_[rdi+0x@@ 30]_rax, mov_rax_qword_ptr_[rsp+0x18], mov_qword_ptr_[rdi+0x1@@ 0]_rcx, mov_dword_ptr_[rdi+0x1@@ 8]_r8d, mov_dword_ptr_[rdi+0x1@@ c]_esi, mov_qword_ptr_[rdi+0x@@ 20]@@ _r9, mov_qword_ptr_[rdi+0x@@ 38]_rax, ret
endbr64, push_rbp, mov_rbp_rsp, push_r15, push_r14, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, push_rbx, sub_rsp_0x58, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x38]_rax, xor_eax_eax, mov_rax_qword_ptr_[rdi+0x10], mov_rcx_rsp, lea_rax_[rax+rax*2], shl_rax_4, mov_rdx_rax, and_rdx@@ _0xffffffffffff@@ f000, sub_rcx_rdx, mov_rdx_rcx, cmp_rsp@@ _rdx, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rdx, jne_0xffffffffffffffed, and_eax@@ _0xfff, sub_rsp_rax, test_rax_rax, jne_0x@@ ea, xor_edi_edi, mov_r15@@ _rsp, mov_qword_ptr_[rbp-0x7@@ 8]_r15, call_0xffffffffffffd@@ 56@@ 3, mov_rdx_rax, lea_rax_[rbp-0x@@ 70], xor_ecx_ecx, xor_esi_esi, mov_rdi_rax, mov_qword_ptr_[rbp-0x80]_rax, call_0xffffffffffffe@@ 1e@@ c, mov_r14_qword_ptr_[r@@ 12+0x10], test_r14_r14, je_0x95, xor_ebx_ebx, jmp_0x1c, mov_rsi_qword_ptr_[r@@ 12+0x10], lea_r14_[r@@ bx+1], add_r15@@ _0x30, cmp_rsi@@ _r14, jbe_0x@@ 80, mov_rbx_r14, mov_rdx_qword_ptr_[r12+8], lea_rax_[rbx+r@@ bx*8], mov_rsi_qword_ptr_[rbp-0x@@ 80], lea_rdi_[r@@ dx+rax*8], mov_rcx_r15, mov_rdx_r13, call_0xfffffffffffff7@@ 24, test_eax_eax, jns_0xffffffffffffff@@ cd, mov_r14_rbx, xor_r13d_r13d, dec@@ _rbx, test_r14_r14, je_0x24, lea_rbx_[r@@ bx+r@@ bx*2], shl_rbx_4, add_rbx@@ _qword_ptr_[rbp-0x@@ 78], mov_rdi_rbx, call_0xffffffffffffe@@ 25@@ d, mov_rax_rbx, sub_rbx@@ _0x30, cmp_rax_qword_ptr_[rbp-0x@@ 78], jne_0xffffffffffffffed, mov_rax_qword_ptr_[rbp-0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x41, lea_rsp_[rbp-0x28], pop_rbx, pop_r12, mov_rax_r13, pop_r13, pop_r14, pop_r15, pop_rbp, ret, xor_esi_esi, mov_rbx@@ _-1, mov_rdi_qword_ptr_[rbp-0x@@ 78], mov_rdx_r13, call_qword_ptr_[r@@ 12+0x20], mov_r13_rax, jmp_0xffffffffffffff9f, or_qword_ptr_[r@@ sp@@ +rax@@ -8]_0, jmp_0xffffffffffffff16, call_0xffffffffffff66@@ d@@ d
endbr64, mov_r8_rdi, mov_rdi_rsi, mov_rsi_rdx, mov_rdx_rcx, jmp_qword_ptr_[r@@ 8+0x@@ 28@@ ]
endbr64, mov_r8_rdi, mov_rdi_rsi, mov_rsi_rdx, jmp_qword_ptr_[r@@ 8+0x@@ 30@@ ]
endbr64, mov_r8_rdi, mov_rdi_rsi, jmp_qword_ptr_[r@@ 8+0x@@ 38@@ ]
endbr64, test_rdi_rdi, je_0xa9, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_eax_dword_ptr_[rdi], cmp_eax_1, je_0x45, cmp_eax_2, je_0x2f, test_eax_eax, je_0x24, lea_rcx_[rip+0x@@ 1f0@@ 3b], mov_edx_0x8@@ b, lea_rsi_[rip+0x1e@@ ff@@ a], lea_rdi_[rip+0x@@ 1f@@ 000], call_0xffffffffffff6@@ 6c0, mov_edx_dword_ptr_[r@@ di+0x10], test_edx_edx, jne_0x53, add_rsp_8, pop_rbx, pop_rbp, ret, mov_eax_dword_ptr_[rdi+0x18], test_eax_eax, je_0xffffffffffffffea, cmp_qword_ptr_[rdi+0x1@@ 0]_0, je_0x1f, xor_ebp_ebp, mov_rax_qword_ptr_[rbx+8], lea_rdx_[r@@ bp+r@@ bp*8], lea_rdi_[rax@@ +rdx*8], inc_rbp, call_0xfffffffffffff@@ 370, cmp_qword_ptr_[rbx+0x1@@ 0]_rbp, ja_0xffffffffffffff@@ e7, mov_rdi_qword_ptr_[rbx+8], add_rsp_8, pop_rbx, pop_rbp, jmp_0xffffffffffff@@ 6@@ 48@@ b, mov_rdi_qword_ptr_[rdi+8], call_0xffffffffffffd@@ 66@@ c, jmp_0xffffffffffffffe2, ret
endbr64, push_rbp, mov_rbp_rdi, call_0xffffffffffffe0@@ d8, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffff@@ 6@@ 44@@ f
endbr64, push_r15, pxor_xmm0_xmm0, push_r14, push_r13, push_r12, mov_r12_rsi, push_rbp, push_rbx, sub_rsp_0x48, mov_rbx_qword_ptr_[rdi+0x@@ 48], mov_rcx_qword_ptr_[r@@ di+0x@@ 50], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x20]_0, mov_byte_ptr_[rsp+0x@@ 28]_0, movaps_xmmword_ptr_[rsp+0x10]_xmm0, cmp_rcx@@ _rbx, jbe_0x@@ 49, mov_rbp_rdi, xor_r15d_r15d, xor_r13d_r13d, xor_r14d_r14d, lea_rdx_[rip+0x1e@@ f@@ 64], mov_esi_dword_ptr_[r@@ bp+0x30], movzx_eax_byte_ptr_[rbx], test_esi_esi, je_0x1@@ ac, sub_eax@@ _0x25, cmp_al_0x5@@ 5, ja_0x1@@ 5, movzx_eax_al, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, inc_rbx, mov_qword_ptr_[rbp+0x@@ 4@@ 8]_rbx, cmp_rbx@@ _rcx, jne_0xffffffffffffffce, xor_edi_edi, call_0xffffffffffffd@@ 2a@@ e, movdqu@@ _xmm7@@ _xmmword_ptr_[r@@ ax], movups_xmmword_ptr_[r@@ 12@@ ]_xmm7, movdqu@@ _xmm7@@ _xmmword_ptr_[r@@ ax+0x10], movups_xmmword_ptr_[r@@ 12+0x1@@ 0@@ ]_xmm7, movdqu@@ _xmm7@@ _xmmword_ptr_[r@@ ax+0x20], movups_xmmword_ptr_[r@@ 12+0x@@ 20@@ ]_xmm7, mov_rax_qword_ptr_[rax+0x30], mov_qword_ptr_[r12+0x@@ 30]_rax, xor_eax_eax, jmp_0x1@@ b8, cmp_al_0x25, jne_0xfffffffffffffe@@ 72, mov_dword_ptr_[rbp+0x@@ 30]_1, jmp_0xfffffffffffffe@@ 65, mov_rsi_qword_ptr_[rsp+0x38], xor_rsi_qword_ptr_fs:[0x28], jne_0x1@@ af, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xffffffffffff6@@ 16@@ a
endbr64, push_rbx, mov_rbx_rdi, mov_rdi_rsi, mov_rsi_qword_ptr_[rbx+0x@@ 38], test_rsi_rsi, je_0xd, xor_edx_edx, call_0xffffffffffffe0@@ 5a, test_eax_eax, js_0x1@@ 3, mov_eax_1, pop_rbx, ret, mov_rdi_qword_ptr_[rbx+0x38], test_rdi_rdi, je_0xffffffffffffffe8, call_0xffffffffffff5f@@ 97, mov_qword_ptr_[rbx+0x@@ 38]_0, mov_eax_1, pop_rbx, ret
endbr64, push_r13, push_r12, push_rbp, cmp_rsi@@ _1, jne_0x@@ e0, mov_rax_qword_ptr_[rdi], mov_rbp_rdi, cmp_dword_ptr_[rax]@@ _0xc, jne_0xac, mov_rax_qword_ptr_[rax+8], cmp_dword_ptr_[rax]@@ _0xa, jne_0x9f, mov_rax_qword_ptr_[rax+8], cmp_dword_ptr_[rax@@ ]_5, jne_0x92, mov_edi@@ _0x58, mov_r13_rdx, call_0xffffffffffff6@@ 3@@ 1c, mov_r12_rax, test_rax_rax, je_0x91, mov_rsi_rbp, mov_rdi_rax, call_0xffffffffffffe@@ 30@@ 5, test_eax_eax, js_0x7@@ e, mov_rax_qword_ptr_[r12], cmp_dword_ptr_[rax]@@ _0xa, jne_0xa1, mov_rsi_r13, mov_rdi_r12, call_0xffffffffffffe@@ 2b@@ 9, mov_qword_ptr_[r12+0x@@ 40]_rax, test_rax_rax, je_0x54, mov_rsi_r13, mov_rdi_r12, call_0xffffffffffffe0@@ f4, cmp_rax_-1, je_0x43, mov_rdx_qword_ptr_[r12+0x@@ 40], mov_dword_ptr_[r12+0x@@ 30]_0, add_rax_rdx, mov_qword_ptr_[r12+0x@@ 50]_rax, mov_qword_ptr_[r12+0x@@ 48]_rdx, mov_qword_ptr_[r12+0x@@ 38]_0, mov_rax_r12, pop_rbp, pop_r12, pop_r13, ret, xor_r12d_r12d, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, mov_rdi_r12, call_0xffffffffffffdb@@ 25, mov_rdi_r12, call_0xffffffffffff5e@@ 9d, xor_r12d_r12d, jmp_0xffffffffffffffe0, lea_rcx_[rip+0x@@ 1eb@@ 6c], mov_edx@@ _0x30, lea_rsi_[rip+0x1e@@ 9d@@ 6], lea_rdi_[rip+0x1e@@ 9e@@ e], call_0xffffffffffff60@@ 59, lea_rcx_[rip+0x@@ 1e@@ b4@@ d], mov_edx_0x4@@ 3, lea_rsi_[rip+0x1e@@ 9b@@ 7], lea_rdi_[rip+0x1e@@ ba@@ a], call_0xffffffffffff60@@ 3@@ a
endbr64, sub_rsp_0x10, lea_rax_[rip-0x@@ 6@@ 1f], push_rax, lea_rax_[rip-0x@@ 19@@ 7], mov_r8d_edx, push_rax, lea_rax_[rip-0x@@ 6@@ 12], mov_rdx_rsi, push_rax, lea_r9_[rip-0x@@ 15@@ d], mov_ecx_1, mov_esi_1, call_0xfffffffffffff6f@@ 9, add_rsp_0x28, ret
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x58, mov_qword_ptr_[rsp+8]_rdi, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, test_rcx_rcx, je_0xa7, mov_r13_rsi, mov_r15_rdx, mov_r12_rcx, xor_ebx_ebx, lea_rbp_[rsp+0x10], jmp_0x27, mov_rdi_rbp, mov_rsi_r15, call_0xffffffffffffe@@ 2f@@ a, mov_r14d_eax, mov_rdi_rbp, call_0xffffffffffffda@@ 2f, test_r14d_r14d, jne_0x27, inc_rbx, cmp_rbx_r12, je_0x1f, mov_rdx_rbx, mov_rsi_r13, mov_rdi_rbp, call_0xffffffffffffd@@ c0@@ 4, test_eax_eax, jns_0xffffffffffffff@@ cd, mov_eax_0xffffffff, jmp_0x34, mov_rbp_rbx, mov_edi_3, call_0xffffffffffffcc@@ 78, mov_rbx_qword_ptr_[rsp+8], mov_rdx_rax, xor_ecx_ecx, xor_esi_esi, mov_rdi_rbx, call_0xffffffffffffd@@ 90@@ 4, mov_rsi_rbp, mov_rdi_rbx, call_0xffffffffffffdc@@ e9, xor_eax_eax, mov_rcx_qword_ptr_[rsp+0x48], xor_rcx_qword_ptr_fs:[0x28], jne_0x15, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, xor_ebp_ebp, jmp_0xffffffffffffffb4, call_0xffffffffffff5e@@ 8@@ f
endbr64, push_r13, mov_r13_rsi, push_r12, mov_r12_rcx, push_rbp, mov_rbp_rdi, mov_rdi_rdx, sub_rsp_0x10, mov_rsi_rsp, mov_rdx_rcx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xffffffffffffdd@@ 91, test_eax_eax, js_0x4@@ e, mov_rcx_qword_ptr_[rsp], test_rcx_rcx, js_0x3@@ 1, mov_rdx_r12, mov_rsi_r13, mov_rdi_rbp, call_0xfffffffffffffed@@ 6, mov_rdx_qword_ptr_[rsp+8], xor_rdx_qword_ptr_fs:[0x28], jne_0x2e, add_rsp_0x10, pop_rbp, pop_r12, pop_r13, ret, lea_rdi_[rip+0x@@ 1ea@@ 21], xor_eax_eax, call_0xc@@ 8a@@ 7, mov_rcx_qword_ptr_[rsp], jmp_0xffffffffffffffbf, mov_eax_0xffffffff, jmp_0xffffffffffffffc6, call_0xffffffffffff5d@@ f@@ 5
endbr64, mov_rcx_-1, jmp_0xfffffffffffffe@@ 8@@ 5
endbr64, push_r12, push_rbp, mov_ebp_esi, push_rbx, mov_rbx_rdi, mov_edi_0x4@@ 8, call_0xffffffffffff60@@ 4e, mov_r12_rax, test_rax_rax, je_0x29, call_0xfffffffffffff0@@ 71, sub_rsp_8, push_0, mov_rdx_rax, mov_r9d_ebp, mov_r8_rbx, xor_ecx_ecx, lea_rsi_[rip-0x@@ dc], mov_rdi_r12, call_0xffffffffffffea@@ d1, pop_rax, pop_rdx, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret
endbr64, mov_rax_qword_ptr_[rip+0x3@@ 13@@ 15], test_rax_rax, je_0xa, ret, sub_rsp_8, mov_edi_0x4@@ 8, call_0xffffffffffff5@@ fe@@ f, mov_qword_ptr_[rip+0x3@@ 12@@ f@@ 3]_rax, test_rax_rax, je_0x32, call_0xfffffffffffff@@ 00@@ e, mov_rdi_qword_ptr_[rip+0x3@@ 12@@ e2], mov_rdx_rax, mov_r8@@ _-1, xor_ecx_ecx, lea_rsi_[rip-0x@@ b1], call_0xffffffffffffea@@ 3f, mov_rax_qword_ptr_[rip+0x3@@ 12@@ c3], add_rsp_8, ret, call_0xffffffffffff5c@@ 2e, mov_esi_dword_ptr_[rax], lea_rdx_[rip+0x1e@@ 95@@ c], mov_edi_1, xor_eax_eax, call_0xffffffffffff60@@ 8@@ 9
endbr64, mov_rax_qword_ptr_[rdi], test_rax_rax, je_4, jmp_rax, push_rax, lea_rcx_[rip+0x@@ 1e@@ 97@@ 2], mov_edx_0x3@@ 4, lea_rsi_[rip+0x1e@@ 9@@ 40], lea_rdi_[rip+0x1e@@ 9@@ 40], call_0xffffffffffff5d@@ 6@@ 7
endbr64, mov_r10_rdi, mov_r9_rsi, mov_rcx_rdx, mov_rax_rsi, test_rsi_rsi, jne_0x1f, jmp_0x25, mov_rdi_qword_ptr_[r@@ 8+0x@@ 28], test_rdi_rdi, jne_0x1a, mov_rax_qword_ptr_[rax+0x10], test_rax_rax, je_0xa, mov_r8_qword_ptr_[rax], test_r8_r8, jne_0xffffffffffffffe8, lea_rdi_[rip+0x2e@@ 90@@ f], mov_rdx_r9, mov_rsi_r10, jmp_0xffffffffffffff8@@ 9
endbr64, test_rdi_rdi, je_0x11, mov_rax_qword_ptr_[rdi+8], test_rax_rax, je_8, jmp_rax, ret
endbr64, xor_eax_eax, ret
endbr64, push_rbp, mov_rbp_rdi, mov_rdx_qword_ptr_[r@@ si+8], mov_rsi_qword_ptr_[rsi], call_0xffffffffffff3e@@ 71, test_eax_eax, js@@ _0xa, pop_rbp, ret, mov_rdi_rbp, lea_rdx_[rip+0x16@@ 0@@ ff], mov_esi_1, xor_eax_eax, pop_rbp, jmp_0xfffffffffffe@@ 9f@@ 8@@ e
push_rbp, mov_rbp_rdi, mov_rdi_rsi, sub_rsp_0xd0, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_rcx_rsp, mov_qword_ptr_[rsp+8]_rax, mov_esi_1, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffff5a@@ 8a, mov_esi_eax, mov_rdi_rbp, call_0xc@@ 2e0, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0xb, add_rsp_0xd0, pop_rbp, ret, call_0xffffffffffff5b@@ 9@@ 2
push_rbp, mov_rbp_rdi, mov_rdi_rsi, sub_rsp_0x20, lea_rsi_[rsp+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xffffffffffffd@@ aa@@ 0, test_eax_eax, js@@ _0xf@@ a, mov_rcx_qword_ptr_[rsp+0x10], cmp_ecx@@ _0xd, jg@@ _0x5b, cmp_ecx_-1, jl@@ _0x62, lea_eax_[r@@ cx+1], cmp_eax@@ _0xe, ja_0x5@@ a, lea_rdx_[rip+0x1e@@ 89@@ 5], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_esi_1, mov_rdi_rbp, xor_eax_eax, call_0xffffffffffff5@@ f7@@ a, mov_rsi_qword_ptr_[rsp+0x18], xor_rsi_qword_ptr_fs:[0x28], jne_0xb2, add_rsp_0x20, pop_rbp, ret, lea_rdx_[rip+0x1d@@ b5@@ 6], cmp_ecx@@ _0x5c, je_0xffffffffffffffc2, mov_qword_ptr_[rsp+8]_rcx, call_0xffffffffffff5@@ fa@@ f, mov_r8_rax, mov_rcx_qword_ptr_[rsp+8], mov_rdx_qword_ptr_[r@@ 8], movsxd_rax_ecx, test_byte_ptr_[rdx@@ +rax*@@ 2+1]@@ _0x40, jne_0xe, lea_rdx_[rip+0x1e@@ 75@@ e], cmp_ecx@@ _0x20, jne_0xffffffffffffff@@ 97, lea_rdx_[rip+0x1e@@ 7@@ 58], jmp_0xffffffffffffff8e, mov_eax_0xffffffff, jmp_0xffffffffffffff45, call_0xffffffffffff5a@@ 5@@ 5
push_r14, push_r13, mov_r13_rdi, push_r12, mov_r12_rcx, push_rbp, mov_rbp_rsi, push_rbx, mov_ebx_edx, sub_rsp_0x10, mov_rdi_qword_ptr_[r@@ si+8], mov_rsi_qword_ptr_[rsi], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xffffffffffffc@@ ed@@ 2, mov_r14_rsp, cmp_rax@@ _4, je_0xc6, ja@@ _0x50, cmp_rax_1, je_0x1@@ ba, cmp_rax_2, jne_0x20@@ c, mov_r14_rsp, mov_rdx_r12, mov_rsi_r14, mov_rdi_rbp, call_0xffffffffffffd@@ 92@@ e, test_eax_eax, js@@ _0x3a, mov_rsi_qword_ptr_[rsp], movzx_r8d@@ _si, cmp_ebx@@ _5, ja_0x8@@ a, lea_rcx_[rip+0x@@ 1e@@ 76@@ 9], movsxd_rax_dword_ptr_[r@@ cx+r@@ bx*4], add_rax_rcx, jmp_rax, mov_r14_rsp, cmp_rax@@ _8, je_0x39, cmp_rax_-1, jne_0x1@@ bf, mov_eax_0xffffffff, mov_rbx_qword_ptr_[rsp+8], xor_rbx_qword_ptr_fs:[0x28], jne_0x1@@ c5, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rdx_r12, mov_rsi_r14, mov_rdi_rbp, call_0xffffffffffffd@@ 8b@@ 7, test_eax_eax, js_0xffffffffffffff@@ c3, mov_rcx_qword_ptr_[rsp], cmp_ebx@@ _5, ja_0x1@@ 73, lea_rdx_[rip+0x1e@@ 70@@ e], movsxd_rax_dword_ptr_[r@@ dx+r@@ bx*4], add_rax_rdx, jmp_rax, mov_rdx_r12, mov_rsi_r14, mov_rdi_rbp, call_0xffffffffffffd@@ 88@@ 7, test_eax_eax, js_0xffffffffffffff@@ 93, mov_rcx_qword_ptr_[rsp], mov_r8d_ecx, cmp_ebx@@ _5, ja_0xffffffffffffff@@ b4, lea_rsi_[rip+0x1e@@ 6f@@ 7], movsxd_rax_dword_ptr_[r@@ si+r@@ bx*4], add_rax_rsi, jmp_rax, mov_r14_rsp, mov_rdx_r12, mov_rsi_r14, mov_rdi_rbp, call_0xffffffffffffd@@ 78@@ 4, test_eax_eax, js_0xfffffffffffffe@@ 90, mov_rsi_qword_ptr_[rsp], movzx_r8d@@ _sil, cmp_ebx@@ _5, ja_0xfffffffffffffe@@ 35, lea_rcx_[rip+0x@@ 1e@@ 60@@ 3], movsxd_rax_dword_ptr_[r@@ cx+r@@ bx*4], add_rax_rcx, jmp_rax, lea_rcx_[rip+0x@@ 1e@@ 67@@ 5], mov_edx_0x6@@ 7, lea_rsi_[rip+0x1e@@ 49@@ a], lea_rdi_[rip+0x1e@@ 4a@@ 2], call_0xffffffffffff58@@ 5a, call_0xffffffffffff57@@ d@@ 5
cmp_esi@@ _3, je_0x1d, lea_rdx_[rip+0x1e@@ 4a@@ c], mov_esi_1, mov_eax_1, jmp_0xffffffffffff@@ 5c@@ 1a, lea_rdx_[rip+0x1e@@ 48@@ e], mov_esi_1, mov_eax_1, jmp_0xffffffffffff@@ 5b@@ f@@ f
mov_rcx_rsi, mov_r8_rdx, cmp_rsi_rdx, je_0x17, lea_rdx_[rip+0x1e@@ 46@@ 9], mov_esi_1, xor_eax_eax, jmp_0xffffffffffff@@ 5b@@ d7, lea_rdx_[rip+0x1e@@ 4@@ 58], mov_esi_1, xor_eax_eax, jmp_0xffffffffffff@@ 5b@@ c@@ 2
endbr64, push_rbp, mov_rbp_rsp, push_r15, mov_r15_rdx, push_r14, push_r13, mov_r13_rdi, mov_rdi_rsi, push_r12, push_rbx, sub_rsp_0x58, mov_qword_ptr_[rbp-0x7@@ 8]_rsi, mov_rsi_rdx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x38]_rax, xor_eax_eax, call_0xffffffffffffda@@ fc, test_eax_eax, jne_0x2@@ 25, cmp_qword_ptr_[rip+0x@@ 30@@ cc@@ f]_0, lea_r14_[rip+0x@@ 30@@ c@@ b0], je_0x1@@ b0, lea_rdi_[rip+0x30@@ ca@@ 3], call_0xffffffffffffeb@@ 43, mov_r12_rax, mov_rax_qword_ptr_[rbp-0x78], mov_rax_qword_ptr_[rax], cmp_dword_ptr_[rax]@@ _0xc, jne_0x2@@ fb, mov_rsi_qword_ptr_[rax+8], cmp_dword_ptr_[r@@ si@@ ]@@ _0xb, je_0xf4, lea_rbx_[r@@ 12-1], jmp_0x48, cmp_rax@@ _8, jne_0x2@@ 3b, cmp_qword_ptr_[rip+0x@@ 30@@ c@@ 67@@ ]_rbx, jbe_0x@@ 24@@ d, mov_rax_qword_ptr_[r14], mov_rdi_qword_ptr_[rbp-0x@@ 78], mov_rsi_qword_ptr_[rax+r@@ bx*8], mov_rdx_r15, call_0xffffffffffffda@@ fb, test_eax_eax, js_0x1@@ 5c, lea_rdx_[r@@ bx-1], jne_0x1@@ 62, mov_rbx_rdx, mov_rax_qword_ptr_[rip+0x@@ 30@@ c4@@ 2], cmp_rbx@@ _-1, jne_0xffffffffffffffb6, cmp_rax@@ _8, jne_0x2@@ a9, lea_rsi_[rbp-0x@@ 78], lea_rdi_[rip+0x30@@ c0@@ f], call_0xffffffffffffea@@ ff, test_eax_eax, js_0x1@@ 20, mov_rsi_qword_ptr_[rbp-0x@@ 78], lea_r12_[r@@ bp-0x@@ 70], mov_rdi_r12, call_0xffffffffffffd@@ 8c@@ 7, mov_r8d_eax, mov_eax_0xffffffff, test_r8d_r8d, js_0x1@@ e, mov_rdx_r15, mov_rsi_r12, mov_rdi_r13, call_0xfffffffffffff94@@ c, mov_rdi_r12, mov_dword_ptr_[rbp-0x@@ 7c]_eax, call_0xffffffffffffd@@ 14@@ 1, mov_eax_dword_ptr_[rbp-0x@@ 7c], lea_rdi_[rip+0x30@@ bc@@ 2], mov_dword_ptr_[rbp-0x@@ 7c]_eax, call_0xffffffffffffe@@ b0@@ f, mov_eax_dword_ptr_[rbp-0x@@ 7c], mov_rdi_qword_ptr_[rbp-0x@@ 38], xor_rdi_qword_ptr_fs:[0x28], jne_0x2@@ 52, lea_rsp_[rbp-0x28], pop_rbx, pop_r12, pop_r13, pop_r14, pop_r15, pop_rbp, ret, test_r12_r12, je_0x1@@ 55, xor_edx_edx, xor_eax_eax, cmp_qword_ptr_[rip+0x@@ 30@@ b@@ 93@@ ]_8, mov_r8_qword_ptr_[rip+0x@@ 30@@ b@@ 7c], mov_rdi_qword_ptr_[rip+0x@@ 30@@ b6@@ d], jne_0x1@@ 7a, cmp_r8_rax, je_0x1@@ 89, mov_rcx_qword_ptr_[r@@ di+rax*8], mov_rcx_qword_ptr_[r@@ cx], cmp_dword_ptr_[r@@ cx@@ ]@@ _0xc, jne_0x1@@ 98, cmp_rsi_qword_ptr_[r@@ cx+8], sete_cl, movzx_ecx_cl, inc_rax, add_rdx_rcx, cmp_r12_rax, jne_0xffffffffffffffd4, lea_rax_[rip+0x2@@ dd@@ 4b], cmp_qword_ptr_[rax+0x@@ 30]_rdx, ja_0xfffffffffffff@@ ea@@ 9, lea_rdx_[rip+0x1d@@ 16@@ 1], mov_esi_1, mov_rdi_r13, xor_eax_eax, call_0xffffffffffff5@@ 9c0, jmp_0xffffffffffffff54, mov_esi_8, mov_rdi_r14, call_0xffffffffffffe@@ 908, jmp_0xfffffffffffffe@@ 49, mov_eax_0xffffffff, jmp_0xffffffffffffff2c, sub_r12@@ _rbx, lea_rax_[r@@ 12+0x@@ f], mov_rdx_rax, mov_rdi_rsp, and_rax@@ _0xffffffffffff@@ f000, sub_rdi_rax, mov_r14_rsp, and_rdx@@ _0xfffffffffffffff0, mov_rax_rdi, cmp_rsp@@ _rax, je_0x2f, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, jmp_0xffffffffffffff@@ eb, lea_rdx_[rip+0x1e@@ 1d@@ c], mov_esi_1, mov_rdi_r13, xor_eax_eax, call_0xffffffffffff5@@ 93@@ f, jmp_0xfffffffffffffe@@ d3, and_edx@@ _0xfff, sub_rsp@@ _rdx, test_rdx_rdx, jne_0x39, mov_rdi_rsp, mov_rdx_r12, mov_esi_0x5@@ e, call_0xffffffffffff5@@ 54@@ c, mov_byte_ptr_[rsp+r@@ 12@@ -1]_0, mov_rcx_rsp, lea_rdx_[rip+0x1e@@ 1b@@ 6], mov_esi_1, mov_rdi_r13, xor_eax_eax, call_0xffffffffffff58@@ fd, mov_r@@ sp@@ _r14, jmp_0xfffffffffffffe@@ 8e, or_qword_ptr_[r@@ sp@@ +rdx@@ -8]_0, jmp_0xffffffffffffffc3, xor_edx_edx, jmp_0xffffffffffffff04, lea_rcx_[rip+0x@@ 1e@@ 3@@ 12], mov_edx_0x1@@ 29, lea_rsi_[rip+0x1e@@ 12@@ 7], lea_rdi_[rip+0x1e@@ 33@@ 7], call_0xffffffffffff54@@ e7, lea_rcx_[rip+0x@@ 1e@@ 2f@@ 3], mov_edx_0x1@@ 29, lea_rsi_[rip+0x1e@@ 108], lea_rdi_[rip+0x1e@@ 13@@ f], call_0xffffffffffff5@@ 4c8, lea_rcx_[rip+0x@@ 1e@@ 2d@@ 4], mov_edx_0x1@@ 1d, lea_rsi_[rip+0x1e@@ 0@@ e9], lea_rdi_[rip+0x1e@@ 2f@@ 9], call_0xffffffffffff5@@ 4a@@ 9, lea_rcx_[rip+0x@@ 1e@@ 2b@@ 5], mov_edx_0x1@@ 1d, lea_rsi_[rip+0x1e@@ 0@@ ca], lea_rdi_[rip+0x1e@@ 101], call_0xffffffffffff54@@ 8a, lea_rcx_[rip+0x@@ 1e@@ 29@@ 6], mov_edx_0x1@@ 1e, lea_rsi_[rip+0x1e@@ 0@@ ab], lea_rdi_[rip+0x1e@@ 2e@@ b], call_0xffffffffffff54@@ 6b, lea_rcx_[rip+0x@@ 1e@@ 27@@ 7], mov_edx_0x1@@ 17, lea_rsi_[rip+0x1e@@ 0@@ 8c], lea_rdi_[rip+0x1e@@ 27@@ 4], call_0xffffffffffff54@@ 4c, lea_rcx_[rip+0x@@ 1e@@ 258], mov_edx_0x1@@ 37, lea_rsi_[rip+0x1e@@ 0@@ 6d], lea_rdi_[rip+0x1e@@ 2d@@ 5], call_0xffffffffffff54@@ 2d, call_0xffffffffffff5@@ 3a@@ 8
endbr64, push_rbp, mov_rdi_rdx, mov_rbp_rsp, push_r15, mov_r15_rcx, push_r14, mov_r14_rsi, mov_rsi_rcx, push_r13, mov_r13_rdx, push_r12, push_rbx, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x38]_rax, xor_eax_eax, call_0xffffffffffffd@@ 5b@@ d, test_rax_rax, je_0x2@@ b2, mov_rdi_qword_ptr_[r13+8], mov_rsi_qword_ptr_[r13], mov_qword_ptr_[rbp-0x58]_rax, call_0xffffffffffffc@@ 80@@ 3, mov_rbx_rax, cmp_rax_-1, je_0x2@@ 94, lea_rax_[r@@ ax+0x@@ f], mov_rdx_rax, mov_rdi_rsp, and_rax@@ _0xffffffffffff@@ f000, sub_rdi_rax, mov_rax_rdi, mov_r8_qword_ptr_[rbp-0x@@ 58], and_rdx@@ _0xfffffffffffffff0, cmp_rsp@@ _rax, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rax, jne_0xffffffffffffffed, and_edx@@ _0xfff, sub_rsp@@ _rdx, test_rdx_rdx, jne_0x2@@ a5, mov_rax_qword_ptr_[r13], mov_r12_rsp, mov_eax_dword_ptr_[rax], cmp_eax_0xb, jbe_0x@@ 37, cmp_eax_0xc, jne_0x3b, mov_rdx_r15, mov_rsi_r13, mov_rdi_r14, call_0xfffffffffffffb@@ 8b, mov_rdi_qword_ptr_[rbp-0x@@ 38], xor_rdi_qword_ptr_fs:[0x28], jne_0x2@@ 96, lea_rsp_[rbp-0x28], pop_rbx, pop_r12, pop_r13, pop_r14, pop_r15, pop_rbp, ret, cmp_eax_9, ja_0x2@@ 51, cmp_rbx@@ _8, ja_0x2@@ 79, mov_rdx_rbx, lea_rdi_[rbp-0x@@ 40], mov_ecx_8, mov_rsi_r8, call_0xffffffffffff54@@ 32, movzx_edx_byte_ptr_[rbp-0x@@ 40], cmp_rbx@@ _1, je_0x23, movzx_edx_word_ptr_[r@@ bp-0x@@ 40], cmp_rbx@@ _2, je_0x19, cmp_rbx@@ _4, je_0x2@@ 3a, mov_rdx_qword_ptr_[rbp-0x40], test_rbx_rbx, je_0x1@@ bf, xor_eax_eax, mov_byte_ptr_[r12@@ +rax]_dl, inc_rax, shr_rdx@@ _8, cmp_rbx_rax, ja@@ _0xfffffffffffffff@@ 2, lea_rax_[rbx+r@@ 12], mov_qword_ptr_[rbp-0x60]_rax, mov_rsi_r12, xor_edi_edi, test_rbx_rbx, je_0x1@@ 97, movzx_eax_byte_ptr_[rsi], test_eax_eax, je_0x1a, xor_ecx_ecx, lea_edx_[rax-1], inc@@ _ecx, and_eax_edx, jne_0xfffffffffffffff@@ 9, movsxd_rcx_ecx, add_rdi@@ _rcx, inc@@ _rsi, cmp_qword_ptr_[rbp-0x@@ 6@@ 0]_rsi, jne_0xffffffffffffffda, lea_rax_[r@@ bx*4], cmp_rax_rdi, jae_0x@@ 154, lea_rax_[rbp-0x@@ 44], mov_qword_ptr_[rbp-0x68]_rax, mov_rdi_rax, lea_rcx_[rip+0x@@ 1d@@ f0@@ f], xor_eax_eax, lea_rdx_[rip+0x1d@@ f0@@ 8], mov_rsi_r14, mov_dword_ptr_[rbp-0x@@ 44]_0, call_0xfffffffffffff58@@ 2, test_eax_eax, js_0x1@@ 18, mov_r15d@@ _0xff, mov_byte_ptr_[rbp-0x@@ 69@@ ]@@ _r15b, mov_qword_ptr_[rbp-0x5@@ 8]_r12, mov_rsi@@ _-1, xor_r12d_r12d, mov_rax_qword_ptr_[rbp-0x58], movzx_r13d_byte_ptr_[r@@ bp-0x@@ 69], mov_r15_r12, xor@@ _r13@@ b@@ _byte_ptr_[rax], add_r12_8, mov_ebx_1, jmp_0x1e, test_al_al, je_0x86, lea_rax_[r@@ 15+1], add@@ _ebx_ebx, cmp_r12_rax, je_0x2b, mov_r15_rax, mov_eax_r13d, and_eax@@ _ebx, test_rsi_rsi, jns_0xffffffffffffff@@ e2, test_al_al, je_0xffffffffffffffe6, cmp_rsi@@ _-2, je_0x90, lea_rax_[r@@ 15+1], mov_rsi_r15, add@@ _ebx_ebx, cmp_r12_rax, jne_0xffffffffffffffd9, inc@@ _qword_ptr_[rbp-0x@@ 58], mov_rax_qword_ptr_[rbp-0x58], cmp_qword_ptr_[rbp-0x@@ 60]_rax, jne_0xffffffffffffff98, test_rsi_rsi, js_0x1@@ c, mov_rdi_r14, mov_rdx_r15, call_0xfffffffffffff9a@@ 3, mov_rdi_qword_ptr_[rbp-0x@@ 68], mov_esi_eax, call_0xb@@ 85@@ 8, test_eax_eax, js@@ _0x6e, mov_rsi_r14, mov_edi@@ _0x3e, call_0xffffffffffff5@@ 1f@@ 7, test_eax_eax, js@@ _0x5d, mov_eax_dword_ptr_[rbp-0x44], inc_eax, jmp_0xfffffffffffffe@@ 33, mov_rdi_r14, lea_rdx_[r@@ 15-1], call_0xfffffffffffff96@@ 9, mov_rdi_qword_ptr_[rbp-0x@@ 68], mov_esi_eax, call_0xb@@ 8@@ 1e, test_eax_eax, js_0x3@@ 4, mov_rsi@@ _-2, jmp_0xffffffffffffff5e, mov_rdi_qword_ptr_[rbp-0x@@ 68], xor_eax_eax, lea_rdx_[rip+0x@@ 1dd@@ f3], mov_rsi_r14, call_0xfffffffffffff47@@ 0, test_eax_eax, jns_0xffffffffffffff@@ 5f, mov_eax_0xffffffff, jmp_0xfffffffffffffdd@@ 8, lea_rax_[rbp-0x@@ 44], mov_qword_ptr_[rbp-0x68]_rax, mov_rdi_rax, lea_rcx_[rip+0x@@ 1dd@@ c2], xor_eax_eax, lea_rdx_[rip+0x@@ 1dd@@ ba], mov_rsi_r14, mov_dword_ptr_[rbp-0x@@ 44]_0, call_0xfffffffffffff4@@ 34, test_eax_eax, js_0xffffffffffffff@@ ca, lea_rax_[rbx+r@@ 12], mov_qword_ptr_[rbp-0x60]_rax, xor_r15d_r15d, test_rbx_rbx, jne_0xfffffffffffffea@@ e, jmp_0xffffffffffffff48, mov_r12_r8, jmp_0xfffffffffffffe@@ 0d, or_qword_ptr_[r@@ sp@@ +rdx@@ -8]_0, mov_rax_qword_ptr_[r13], mov_r12_rsp, mov_eax_dword_ptr_[rax], cmp_eax_0xb, ja_0xfffffffffffffd@@ 5d, jmp_0xfffffffffffffd@@ 8c, mov_edx_dword_ptr_[rbp-0x@@ 40], jmp_0xfffffffffffffdd@@ 6, call_0xffffffffffff50@@ 33, lea_rcx_[rip+0x@@ 1d@@ e@@ 97], mov_edx_0x2@@ 8b, lea_rsi_[rip+0x1d@@ cd@@ 4], lea_rdi_[rip+0x@@ 1dd@@ 2d], call_0xffffffffffff50@@ 9@@ 4
endbr64, push_r15, push_r14, mov_r14_rdx, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, mov_rdi_rcx, push_rbp, push_rbx, sub_rsp_0x88, mov_rax_qword_ptr_[rsp+0xc8], mov_qword_ptr_[rsp+8]_r8, mov_qword_ptr_[rsp+0x28]_rax, mov_rax_qword_ptr_[rsp+0xd0], mov_dword_ptr_[rsp+0x24]@@ _r9d, mov_qword_ptr_[rsp+0x18]_rax, lea_rcx_[rsp+0x@@ 38], mov_rbx_qword_ptr_[rsp+0x@@ c0], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x78]_rax, xor_eax_eax, call_0xffffffffffffde@@ 1e, test_eax_eax, js_0x@@ dc, mov_rax_qword_ptr_[rsp+0x38], lea_r15_[rsp+0x@@ 34], mov_qword_ptr_[rsp+0x10]_rax, mov_rcx_rbx, xor_eax_eax, lea_rdx_[rip+0x1c@@ ab@@ 3], mov_rsi_r12, mov_rdi_r15, mov_dword_ptr_[rsp+0x34]_0, call_0xfffffffffffff3@@ 18, test_eax_eax, js_0xa@@ 6, xor_ebx_ebx, cmp_qword_ptr_[rsp+0x10]_0, je_0xeb, cmp_qword_ptr_[rsp+8]_0, je_0xbc, lea_rbp_[rsp+0x@@ 40], jmp_0x6@@ f, mov_rdx_r14, mov_rsi_rbp, mov_rdi_r12, call_0xfffffffffffff24@@ 7, mov_rdi_rbp, mov_dword_ptr_[rsp+0x20]_eax, call_0xffffffffffffca@@ 3b, mov_eax_dword_ptr_[rsp+0x20], test_eax_eax, js_0x5@@ 5, inc_rbx, add_dword_ptr_[rsp+0x@@ 34]_eax, cmp_qword_ptr_[rsp+0x1@@ 0]_rbx, jbe_0x@@ 9a, cmp_qword_ptr_[rsp+@@ 8]_rbx, jb@@ _0x8@@ f, cmp_qword_ptr_[rsp+@@ 8]_rbx, je_0x5c, mov_rcx_qword_ptr_[rsp+0x18], xor_eax_eax, lea_rdx_[rip+0x1c@@ a@@ 19], mov_rsi_r12, mov_rdi_r15, call_0xfffffffffffff@@ 28@@ 6, test_eax_eax, js_0x1@@ 4, mov_rdx_rbx, mov_rsi_r13, mov_rdi_rbp, call_0xffffffffffffc@@ bd@@ 4, test_eax_eax, jns_0xffffffffffffff@@ 8d, mov_eax_0xffffffff, mov_rcx_qword_ptr_[rsp+0x78], xor_rcx_qword_ptr_fs:[0x28], jne_0x9d, add_rsp_0x88, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rbx_qword_ptr_[rsp+8], mov_edx_dword_ptr_[rsp+0x24], test_edx_edx, je_0x1d, xor_eax_eax, lea_rdx_[rip+0x1c@@ a7@@ 1], mov_rsi_r12, mov_rdi_r15, call_0xfffffffffffff@@ 22@@ 4, test_eax_eax, js_0xffffffffffffff@@ b2, mov_rcx_qword_ptr_[rsp+0x28], xor_eax_eax, lea_rdx_[rip+0x1c@@ 99@@ 7], mov_rsi_r12, mov_rdi_r15, call_0xfffffffffffff20@@ 4, test_eax_eax, js_0xffffffffffffff@@ 92, cmp_qword_ptr_[rsp+@@ 8]_rbx, jne_0xa, mov_eax_dword_ptr_[rsp+0x24], test_eax_eax, je_0xe, mov_eax_dword_ptr_[rsp+0x34], jmp_0xffffffffffffff82, xor_eax_eax, lea_rdx_[rip+0x1c@@ a@@ 1e], mov_rsi_r12, mov_rdi_r15, call_0xfffffffffffff1d@@ 1, test_eax_eax, js_0xffffffffffffff@@ 5f, mov_eax_dword_ptr_[rsp+0x34], jmp_0xffffffffffffff5a, call_0xffffffffffff4@@ e0@@ b
push_r15, push_r14, mov_r14d_ecx, push_r13, push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_0x78, mov_rdi_qword_ptr_[rsi], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x68]_rax, xor_eax_eax, mov_ecx_dword_ptr_[r@@ di], cmp_ecx@@ _0xc, ja_0xffffffffffff@@ 5@@ 2f@@ 7, mov_rbp_rsi, mov_r13_rdx, lea_rsi_[rip+0x1d@@ bb@@ d], mov_edx_ecx, movsxd_rax_dword_ptr_[r@@ si@@ +rdx*4], add_rax_rsi, jmp_rax
endbr64, mov_rdi_rsi, mov_rsi_rdx, mov_rdx_rcx, mov_ecx_5, jmp_0xfffffffffffffc@@ f@@ e
endbr64, mov_rdi_rsi, mov_rsi_rdx, mov_rdx_rcx, mov_ecx_2, jmp_0xfffffffffffffc@@ d@@ e
endbr64, mov_rdi_rsi, mov_rsi_rdx, mov_rdx_rcx, mov_ecx_3, jmp_0xfffffffffffffc@@ b@@ e
endbr64, mov_rdi_rsi, mov_rsi_rdx, mov_rdx_rcx, mov_ecx_1, jmp_0xfffffffffffffc@@ 9@@ e
endbr64, mov_rdi_rsi, mov_rsi_rdx, mov_rdx_rcx, mov_ecx_4, jmp_0xfffffffffffffc@@ 7@@ e
endbr64, push_rbp, mov_rdi_rdx, mov_rbp_rsi, mov_rax_qword_ptr_[rdi], mov_rdx_rcx, mov_eax_dword_ptr_[rax], cmp_eax_7, ja_0x1@@ a, test_eax_eax, jne_0x26, mov_rsi_rdi, mov_ecx_5, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffffffc@@ 48, sub_eax@@ _8, cmp_eax_4, jbe_0xffffffffffffff@@ e6, jmp_0xffffffffffff@@ 4f@@ 60, mov_rsi_rcx, call_0xffffffffffffc@@ e0@@ d, test_eax_eax, js@@ _0x22, lea_rdx_[rip+0x1d@@ 76@@ 5], jne_9, lea_rdx_[rip+0x1d@@ 76@@ 2], mov_rdi_rbp, mov_esi_1, xor_eax_eax, pop_rbp, jmp_0xffffffffffff@@ 4e@@ 69, mov_eax_0xffffffff, pop_rbp, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdx, push_rbx, sub_rsp_0xc8, mov_rdx_qword_ptr_[rdx], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xb8]_rax, xor_eax_eax, cmp_dword_ptr_[rdx@@ ]@@ _0xc, ja_0xffffffffffff@@ 4@@ ee@@ c, mov_eax_dword_ptr_[rdx], mov_r13_rcx, lea_rcx_[rip+0x@@ 1d@@ 7@@ dd], movsxd_rax_dword_ptr_[r@@ cx+rax*4], mov_r12_rsi, add_rax_rcx, jmp_rax
endbr64, cmp_qword_ptr_[rdi+0x@@ 28]@@ _0x20, jne_0x14, add_rdi_0x10, xor_edx_edx, lea_rsi_[rip+0x@@ 28], jmp_0xffffffffffffdd@@ 28, push_rax, lea_rcx_[rip+0x@@ 1d@@ 89@@ b], mov_edx_0x3@@ 6, lea_rsi_[rip+0x1d@@ 75@@ 2], lea_rdi_[rip+0x1d@@ 7@@ 78], call_0xffffffffffff48@@ 7@@ 8
endbr64, push_rbx, mov_rbx_rdi, mov_edx_dword_ptr_[r@@ di+8], test_edx_edx, jne_0x13, mov_eax_dword_ptr_[rbx+0x18], test_eax_eax, jne_0x1b, pop_rbx, ret, mov_rdi_qword_ptr_[rdi], call_0xffffffffffff4@@ 66@@ d, mov_eax_dword_ptr_[rbx+0x18], test_eax_eax, je_0xffffffffffffffe9, mov_rdi_qword_ptr_[rbx+0x10], call_0xffffffffffffc@@ 2d@@ d, mov_rdi_qword_ptr_[rbx+0x10], pop_rbx, jmp_0xffffffffffff@@ 46@@ 5@@ 3
endbr64, push_r15, lea_rax_[r@@ di+0x10], push_r14, mov_r14_rcx, push_r13, push_r12, mov_r12_rdx, push_rbp, xor_ebp_ebp, push_rbx, mov_rbx_rdi, sub_rsp_0x38, mov_qword_ptr_[rsp+8]_rsi, mov_qword_ptr_[rsp+0x10]_rax, jmp_0x7@@ 6, cmp_rax_-1, je_0xca, mov_rax_qword_ptr_[r15], mov_rsi_qword_ptr_[r12], mov_eax_dword_ptr_[rax], cmp_dword_ptr_[r@@ si@@ ]_eax, jne_0x15@@ 4, mov_rsi_r14, mov_rdi_r15, mov_qword_ptr_[rsp+0x20]_rdx, call_0xffffffffffffc@@ 99@@ a, mov_rsi_r14, mov_rdi_r15, mov_qword_ptr_[rsp+0x18]_rax, call_0xffffffffffffc@@ 7d@@ a, mov_r8_qword_ptr_[rsp+0x18], test_r8_r8, je_0x8b, cmp_rax_-1, je_0x81, mov_rdx_qword_ptr_[rsp+0x20], mov_rsi_r13, cmp_rdx_rax, cmova@@ _rdx_rax, mov_rdi_r8, call_0xffffffffffff48@@ 2f, test_eax_eax, je_0x90, inc_rbp, mov_rdi_qword_ptr_[rsp+0x10], call_0xffffffffffffdb@@ 4a, cmp_rbp_rax, jae_0x@@ 50, cmp_qword_ptr_[rbx+0x@@ 28]@@ _0x20, jne_0xa6, cmp_qword_ptr_[rbx+0x1@@ 8]_rbp, jbe_0x@@ bb, mov_r15_rbp, shl_r15@@ _5, add_r15@@ _qword_ptr_[r@@ bx+0x10], mov_rsi_r14, mov_rdi_r12, mov_qword_ptr_[rsp+0x2@@ 8]_r15, mov_r15_qword_ptr_[r@@ 15+0x10], call_0xffffffffffffc@@ 9@@ 11, mov_rsi_r14, mov_rdi_r12, mov_r13_rax, call_0xffffffffffffc@@ 75@@ 3, mov_rdx_rax, test_r13_r13, jne_0xffffffffffffff@@ 38, mov_rsi_qword_ptr_[rsp+8], lea_rdi_[rip+0x2d@@ 30@@ 6], add_rsp_0x38, pop_rbx, pop_rbp, mov_rdx_r12, pop_r12, pop_r13, mov_rcx_r14, pop_r14, pop_r15, jmp_0xffffffffffffe@@ 97@@ 2, mov_rax_qword_ptr_[rsp+0x28], mov_rcx_qword_ptr_[rax], test_rcx_rcx, je_0xffffffffffffffcb, mov_rdi_qword_ptr_[rsp+8], add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, lea_rdx_[rip+0x1c@@ 190], mov_esi_1, xor_eax_eax, pop_r15, jmp_0xffffffffffff@@ 4a@@ aa, lea_rcx_[rip+0x@@ 1d@@ 6b@@ 6], mov_edx_0x6@@ d, lea_rsi_[rip+0x1d@@ 58@@ 5], lea_rdi_[rip+0x1d@@ 5e@@ 3], call_0xffffffffffff4@@ 6a@@ b, lea_rcx_[rip+0x@@ 1d@@ 69@@ 7], mov_edx_0x6@@ d, lea_rsi_[rip+0x1d@@ 56@@ 6], lea_rdi_[rip+0x1d@@ 56@@ b], call_0xffffffffffff@@ 46@@ 8c, lea_rcx_[rip+0x@@ 1d@@ 660], mov_edx_0x5@@ 7, lea_rsi_[rip+0x1d@@ 54@@ 7], lea_rdi_[rip+0x1d@@ 5@@ dd], call_0xffffffffffff4@@ 66@@ d
endbr64, lea_rax_[rip-0x@@ 1c@@ b], mov_qword_ptr_[rdi]_rax, lea_rax_[rip-0x@@ 26@@ 5], mov_qword_ptr_[rdi@@ +8]_rax, pxor_xmm0_xmm0, movups_xmmword_ptr_[r@@ di+0x1@@ 0]_xmm0, movups_xmmword_ptr_[r@@ di+0x@@ 20]_xmm0, mov_esi_0x20, add_rdi_0x10, jmp_0xffffffffffffd@@ 97@@ 2
endbr64, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, cmp_qword_ptr_[rdi+0x@@ 28]@@ _0x20, mov_qword_ptr_[rsp]_rsi, mov_dword_ptr_[rsp+8]_edx, mov_qword_ptr_[rsp+0x10]_rcx, mov_dword_ptr_[rsp+0x18]_r8d, jne_0x23, add_rdi_0x10, mov_rsi_rsp, call_0xffffffffffffd@@ a0@@ 8, mov_rdx_qword_ptr_[rsp+0x28], xor_rdx_qword_ptr_fs:[0x28], jne_0x26, add_rsp_0x38, ret, lea_rcx_[rip+0x@@ 1d@@ 59@@ 7], mov_edx_0x@@ 98, lea_rsi_[rip+0x1d@@ 48@@ e], lea_rdi_[rip+0x1d@@ 55@@ 4], call_0xffffffffffff4@@ 5b@@ 4, call_0xffffffffffff@@ 45@@ 2@@ f
endbr64, add_rdi_0x10, jmp_0xffffffffffffd@@ 96@@ 8
endbr64, xor_eax_eax, ret
endbr64, mov_rax_qword_ptr_[rdi+8], test_rax_rax, je_0x25, mov_rax_qword_ptr_[rax+0x1@@ 280], test_rax_rax, je_0x19, cmp_qword_ptr_[rax+0x1@@ 27@@ 0]_0, sete_al, movzx_eax_al, add_eax_eax, ret, mov_eax_2, ret
endbr64, xor_eax_eax, cmp_qword_ptr_[rdi+@@ 8]_rsi, sete_al, add_eax_eax, ret
endbr64, push_rbx, lea_rcx_[rip+0x@@ 1d@@ 54@@ c], mov_rbx_rdi, mov_rax_qword_ptr_[rdi+8], mov_r9d_dword_ptr_[r@@ di+0x10], mov_r8d_dword_ptr_[r@@ ax+0x18], mov_edi_0x20, xor_eax_eax, mov_edx_0x3@@ b, lea_rsi_[rip+0x1d@@ 7@@ 3d], call_0x5e@@ 72, mov_edi_0x20, call_0xffffffffffff4@@ 6f@@ 8, test_rax_rax, je_0x55, movdqu_xmm0_xmmword_ptr_[r@@ bx], movdqu_xmm1_xmmword_ptr_[r@@ bx+0x10], mov_rdx_qword_ptr_[rip+0x2@@ fa@@ 36], movups_xmmword_ptr_[rax]_xmm0, mov_rcx_qword_ptr_[rip+0x2@@ fa@@ 34], mov_qword_ptr_[rax]_0, movups_xmmword_ptr_[rax+0x1@@ 0@@ ]_xmm1, test_rdx_rdx, je_0x16, test_rcx_rcx, je_0x53, mov_qword_ptr_[rdx]_rax, mov_qword_ptr_[rip+0x2@@ fa@@ 0@@ d@@ ]_rax, pop_rbx, ret, test_rcx_rcx, jne_0x5e, mov_qword_ptr_[rip+0x2@@ fa@@ 0@@ 4]_rax, mov_qword_ptr_[rip+0x2@@ f@@ 9f@@ 5]_rax, pop_rbx, ret, call_0xffffffffffff4@@ 3@@ 1b, mov_edi_dword_ptr_[rax], call_0xffffffffffff48@@ a4, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x2@@ cb@@ 95], lea_rdx_[rip+0x1d@@ 6c@@ 2], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, pop_rbx, jmp_0xffffffffffff@@ 48@@ 53, lea_rcx_[rip+0x@@ 1d@@ 7a@@ 7], mov_edx_0x4@@ a, lea_rsi_[rip+0x1d@@ 69@@ 6], lea_rdi_[rip+0x1d@@ 6c@@ 9], call_0xffffffffffff44@@ 54, lea_rcx_[rip+0x@@ 1d@@ 7@@ 88], mov_edx_0x4@@ 6, lea_rsi_[rip+0x1d@@ 67@@ 7], lea_rdi_[rip+0x1d@@ 69@@ 3], call_0xffffffffffff44@@ 3@@ 5
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, sub_rsp_8, mov_r13_qword_ptr_[rip+0x2@@ f@@ 97@@ 5], mov_r12_r13, test_r13_r13, je_0x25, mov_rsi_rbx, mov_rdi_r12, call_rbp, cmp_eax_1, je_0x1b, cmp_eax_2, je_0x2d, test_eax_eax, jne_0xffffffffffffffec, mov_rax_qword_ptr_[r12], test_rax_rax, jne_0x@@ b1, xor_r12d_r12d, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, mov_rax_qword_ptr_[r12+8], mov_r9d@@ _0xffffffff, test_rax_rax, je_6, mov_r9d_dword_ptr_[rax+0x18], mov_r8d_dword_ptr_[r@@ 12+0x10], xor_eax_eax, lea_rcx_[rip+0x@@ 1d@@ 63@@ a], mov_edx_0x5@@ c, lea_rsi_[rip+0x1d@@ 5@@ dd], mov_edi_0x20, call_0x5d@@ 0d, cmp_qword_ptr_[rip+0x2@@ f@@ 8e@@ 9]@@ _r12, je_0x49, mov_rax_qword_ptr_[rip+0x2@@ f@@ 8e@@ 8], mov_rdx_qword_ptr_[r12], cmp_rax_r12, je_0x29, mov_qword_ptr_[r13@@ ]_rdx, test_rax_rax, jne_0xffffffffffffff@@ 91, mov_qword_ptr_[rip+0x2@@ f@@ 8c@@ 3]_0, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, mov_qword_ptr_[rip+0x2@@ f@@ 8b@@ 1]@@ _rdx, mov_rax_rdx, jmp_0xffffffffffffffd3, mov_qword_ptr_[rip+0x2@@ f8@@ 99@@ ]_r13, jmp_0xffffffffffffffb2, mov_r13_r12, mov_r12_rax, jmp_0xffffffffffffff2@@ c
endbr64, push_r13, lea_rsi_[rip+0x1d@@ 55@@ e], mov_edi_0x20, push_r12, lea_rcx_[rip+0x@@ 1d@@ 5@@ bb], mov_edx_0x@@ 90, push_rbp, push_rbx, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0x5c@@ 6a, xor_esi_esi, lea_rdi_[rip-0x@@ 29@@ 4], call_0xfffffffffffffeb@@ c, test_rax_rax, je_0x4c, movdqu_xmm0_xmmword_ptr_[r@@ ax], mov_rdi_rax, movaps_xmmword_ptr_[r@@ ip+0x2@@ f8@@ 44@@ ]_xmm0, movdqu_xmm1_xmmword_ptr_[r@@ ax+0x10], movaps_xmmword_ptr_[r@@ ip+0x2@@ f8@@ 48@@ ]_xmm1, call_0xffffffffffff40@@ e8, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ 66@@ 3, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, lea_rax_[rip+0x@@ 2f@@ 8@@ 10], pop_r13, ret, xor_edx_edx, xor_edi_edi, lea_rsi_[rip-0x@@ 30@@ 3], call_0xffffffffffff6@@ 32@@ d, test_rax_rax, je_0x1@@ 55, lea_rbp_[rip+0x@@ 2@@ f7@@ c8], lea_rsi_[rsp+0x18], mov_edx_0x4@@ 0000000, mov_edi_0xffffffff, mov_dword_ptr_[rbp@@ ]_1, call_0xffffffffffff4@@ 56@@ 2, mov_ebx_eax, mov_dword_ptr_[rbp]_0, cmp_eax_-1, jne_0x51, call_0xffffffffffff40@@ cf, mov_eax_dword_ptr_[rax], cmp_eax_0xa, je_0x3@@ 65, cmp_eax_4, jne_0x@@ 5e@@ f, lea_rcx_[rip+0x@@ 1d@@ 29@@ f], mov_edx_0x@@ a6, lea_rsi_[rip+0x1d@@ 45@@ e], mov_edi_8, xor_eax_eax, call_0x5b@@ 8c, mov_dword_ptr_[rip+0x2@@ f7@@ 8d@@ ]_0, jmp_0xffffffffffffff4a, mov_edi_eax, call_0xffffffffffff6@@ 2f@@ e, mov_qword_ptr_[rip+0x2@@ f7@@ 6a@@ ]_rax, mov_rdi_rax, test_rax_rax, je_0xe4, cmp_dword_ptr_[rax@@ ]_1, je_0xdb, call_0x1@@ 8c@@ d, mov_edx_0x@@ c9, xor_eax_eax, mov_r8d_ebx, lea_rcx_[rip+0x@@ 1d@@ 4a@@ 4], lea_rsi_[rip+0x1d@@ 3f@@ b], mov_edi_3, call_0x5b@@ 2b, mov_eax_dword_ptr_[rsp+0x18], mov_rbp_qword_ptr_[rip+0x2@@ f7@@ 23], mov_edx_eax, and_edx@@ _0x7f, inc_edx, mov_qword_ptr_[rbp+0x@@ 12@@ 48@@ ]_-1, mov_r12_qword_ptr_[r@@ bp+0x@@ 12@@ 80], cmp_dl_1, jg_0x2@@ df, test_al@@ _0x7f, je_0x107, mov_rdi_rbp, call_0x2f@@ 5e, mov_qword_ptr_[rbp+0x@@ 12@@ 48]_rax, mov_rdi_qword_ptr_[rip+0x2@@ f@@ 6e@@ 3], cmp_qword_ptr_[rdi+0x1@@ 24@@ 8]_-1, je_0x2@@ f3, mov_esi_dword_ptr_[rsp+0x18], lea_rdx_[r@@ sp+0x1c], call_0x1@@ 87@@ 4, inc_eax, cmp_eax_5, ja_0x2@@ 2d, lea_rdx_[rip+0x1d@@ 46@@ 5], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_edi_8, lea_rcx_[rip+0x@@ 1d@@ 16@@ c], mov_edx_0x@@ 99, lea_rsi_[rip+0x1d@@ 35@@ 3], call_0x5a@@ 88, xor_edi_edi, call_0xffffffffffff4@@ 4c@@ 1, mov_ebp@@ _0x64, lea_r12_[rip+0x@@ 1d@@ 3a@@ f], jmp_0x38, mov_edi_2, xor_eax_eax, mov_r8d_ebx, mov_rcx_r12, mov_edx_0x@@ c0, lea_rsi_[rip+0x1d@@ 3@@ 12], call_0x5a@@ 47, mov_edi_0x2@@ 710, call_0xffffffffffff@@ 45@@ 2d, dec@@ _ebp, je_0xe, mov_edi_ebx, call_0x27@@ 22, cmp_eax_2, jne_0xffffffffffffffca, mov_r8d_ebx, lea_rcx_[rip+0x@@ 1d@@ 3@@ 78], mov_edx_0x@@ c5, lea_rsi_[rip+0x1d@@ 2@@ dd], mov_edi_8, xor_eax_eax, mov_dword_ptr_[rip+0x2@@ f6@@ 1d@@ ]_ebx, mov_dword_ptr_[rip+0x2@@ f@@ 60@@ b@@ ]@@ _0xe, call_0x5@@ 9f@@ b, jmp_0xfffffffffffffd@@ c3, mov_r9d_eax, sar@@ _r9d@@ _8, movzx_eax@@ _ah, mov_dword_ptr_[rip+0x2@@ f@@ 5f@@ 8]_eax, movzx_r9d@@ _r9b, mov_r8d_ebx, lea_rcx_[rip+0x@@ 1d@@ 12@@ 2], mov_edx_0x@@ f2, lea_rsi_[rip+0x1d@@ 29@@ 1], mov_edi_8, xor_eax_eax, mov_dword_ptr_[rip+0x2@@ f@@ 5c@@ 5@@ ]_2, call_0x5@@ 9b@@ 5, jmp_0xfffffffffffffd@@ 7d, mov_eax_dword_ptr_[rsp+0x18], cmp_al@@ _0x7f, je_0xe9, mov_r8d_ebx, lea_rcx_[rip+0x@@ 1d@@ 0@@ cf], mov_edx_0x1@@ 2e, lea_rsi_[rip+0x1d@@ 13@@ 6], mov_edi_8, xor_eax_eax, mov_dword_ptr_[rip+0x2@@ f4@@ 6a@@ ]_0, call_0x58@@ 5a, jmp_0xfffffffffffffc@@ 22, mov_edi_8, lea_rcx_[rip+0x@@ 1c@@ f@@ 1c], mov_edx_0x@@ a3, lea_rsi_[rip+0x1d@@ 10@@ 3], xor_eax_eax, call_0x58@@ 36, xor_edi_edi, call_0xffffffffffff4@@ 26@@ f, and_eax_0x7f, mov_r9d_eax, mov_dword_ptr_[rip+0x2@@ f4@@ 2c]_eax, mov_r8d_ebx, lea_rcx_[rip+0x@@ 1c@@ f@@ 32], mov_edx_0x@@ ec, lea_rsi_[rip+0x1d@@ 0@@ c9], mov_edi_8, xor_eax_eax, mov_dword_ptr_[rip+0x2@@ f3@@ fd@@ ]_3, call_0x57@@ ed, jmp_0xfffffffffffffbb@@ 5, call_0xffffffffffff3c@@ f0, mov_edi_ebx, mov_r13d_dword_ptr_[r@@ ax], mov_rbp_rax, call_0x2@@ 45@@ 3, inc_eax, lea_rcx_[rip+0x@@ 1c@@ f@@ 35], mov_edx_0x@@ f8, cmp_eax_1, jbe_0x@@ 10@@ 5, mov_dword_ptr_[rbp]@@ _r13d, test_r13d_r13d, jne_0x@@ db, mov_rdi_qword_ptr_[rip+0x2@@ f@@ 3a@@ b], jmp_0xfffffffffffffc@@ d6, mov_edx_eax, sar_edx@@ _0x10, lea_ecx_[rdx-1], cmp_ecx_2, jbe_0x@@ 14@@ 7, cmp_edx_4, je_0x1@@ 97, movzx_ebp@@ _ah, mov_rax_qword_ptr_[rip+0x2@@ f@@ 38@@ 2], cmp_ebp@@ _0xb, mov_rcx_qword_ptr_[r@@ ax+0x1@@ 248], lea_r9_[r@@ cx-1], sete_cl, cmp_ebp@@ _4, sete_dl, or@@ _cl@@ _dl, je_0xb, test_r12_r12, jne_0x@@ d5, mov_eax_dword_ptr_[rax+0x30], or_eax@@ _5, cmp_eax_ebp, je_0x41, cmp_ebp@@ _5, je_0x3c, mov_r9d_ebp, mov_r8d_ebx, lea_rcx_[rip+0x@@ 1c@@ fb@@ a], mov_edx_0x1@@ 47, lea_rsi_[rip+0x1c@@ ff@@ 9], mov_edi_8, xor_eax_eax, mov_dword_ptr_[rip+0x2@@ f@@ 33@@ 9]@@ _ebp, mov_dword_ptr_[rip+0x2@@ f3@@ 27@@ ]_1, call_0x57@@ 17, jmp_0xfffffffffffffa@@ df, mov_r8d_ebx, lea_rcx_[rip+0x@@ 1c@@ fa@@ b], mov_edx_0x1@@ 4f, lea_rsi_[rip+0x1c@@ fc@@ 2], mov_edi_8, xor_eax_eax, mov_qword_ptr_[rip+0x2@@ f@@ 30@@ 1]@@ _r9, mov_dword_ptr_[rip+0x2@@ f@@ 2e@@ f]@@ _0xb, call_0x56@@ df, jmp_0xfffffffffffffaa@@ 7, lea_rdi_[rip+0x1d@@ 0@@ 4d], call_0xffffffffffff40@@ be, jmp_0xffffffffffffff1f, xor_eax_eax, lea_rsi_[rip+0x1c@@ f7@@ a], mov_edi_8, call_0x56@@ aa, mov_dword_ptr_[rip+0x2@@ f@@ 2a@@ b]_0, mov_rax_qword_ptr_[rip+0x2@@ f@@ 29@@ c], mov_edi_dword_ptr_[r@@ ax+0x18], call_0x3a@@ c1, jmp_0xfffffffffffffa@@ 59, mov_rsi_r9, mov_rdi_r12, mov_qword_ptr_[rsp+8]_r9, call_0x4c@@ 4c, test_rax_rax, mov_r9_qword_ptr_[rsp+8], jne_0xffffffffffffff@@ 62, mov_rax_qword_ptr_[rip+0x2@@ f@@ 26@@ a], jmp_0xffffffffffffff0c, xor_eax_eax, cmp_edx_2, sete_al, add_eax_8, lea_rcx_[rsp+0x20], xor_edx_edx, mov_esi_ebx, mov_dword_ptr_[rip+0x2@@ f@@ 24@@ 2]_eax, mov_edi_0x420@@ 1, xor_eax_eax, call_0xffffffffffff3f@@ 0b, mov_r9_qword_ptr_[rsp+0x20], mov_r8d_ebx, lea_rcx_[rip+0x@@ 1c@@ e4@@ f], mov_edx_0x1@@ 21, lea_rsi_[rip+0x1c@@ ed@@ 6], mov_edi_8, xor_eax_eax, mov_dword_ptr_[rip+0x2@@ f2@@ 15]@@ _r9d, call_0x55@@ fd, jmp_0xfffffffffffff9c@@ 5, mov_r8d_ebx, lea_rcx_[rip+0x@@ 1c@@ f8@@ a], mov_edx_0x1@@ 28, lea_rsi_[rip+0x1c@@ ea@@ 8], mov_edi_8, xor_eax_eax, mov_dword_ptr_[rip+0x2@@ f@@ 1d@@ c]@@ _0xa, call_0x5@@ 5cc, jmp_0xfffffffffffff99@@ 4, call_0xffffffffffff3b@@ d2, lea_rdi_[rip+0x@@ 1f@@ 6@@ 94], call_0xffffffffffff3@@ fa@@ 6, mov_edi_1, call_0xffffffffffff3@@ fe@@ c
endbr64, push_rbp, lea_rbp_[r@@ ip-0x@@ 9@@ 1c], push_rbx, mov_rbx_rdi, sub_rsp_8, jmp_0x11, call_0xffffffffffff3a@@ 30, mov_rdi_rbp, mov_rsi_rbx, call_0xfffffffffffff7d@@ 5, mov_rdi_rax, test_rax_rax, jne_0xffffffffffffffea, add_rsp_8, pop_rbx, pop_rbp, ret
endbr64, mov_rax_qword_ptr_[rdi+8], ret
push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, push_rbx, xor_ebx_ebx, jmp_0x15, xor_edx_edx, mov_rdi_r12, call_0xffffffffffffa@@ a0@@ b, test_eax_eax, js_0x3@@ 6, inc_rbx, mov_rdi_rbp, call_0xffffffffffffab@@ 1c, cmp_rax_rbx, jbe_0x@@ 34, mov_rsi_rbx, mov_rdi_rbp, call_0xffffffffffffaa@@ 7c, mov_rsi_rax, test_rax_rax, je_0x28, cmp_dword_ptr_[rax]@@ _0xb, jne_0xffffffffffffffcc, mov_rdi_r12, call_0xffffffffffffff@@ b7, test_eax_eax, jns_0xffffffffffffff@@ ce, pop_rbx, pop_rbp, mov_eax_0xffffffff, pop_r12, ret, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret, lea_rcx_[rip+0x@@ 1d@@ 1f@@ 2], mov_edx_0x1@@ a3, lea_rsi_[rip+0x1c@@ eb@@ 2], lea_rdi_[rip+0x1c@@ eb@@ 3], call_0xffffffffffff3b@@ 5@@ f
push_r13, mov_r13_rdx, push_r12, mov_r12_rcx, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rdi_qword_ptr_[r@@ si+8], mov_rsi_qword_ptr_[rsi], call_0xffffffffffffa@@ cb@@ 3, cmp_rax_r12, mov_rsi_r12, cmovae@@ _rsi_rax, mov_rdi_qword_ptr_[rbx], call_0xffffffffffffac@@ 51, mov_qword_ptr_[rbx]_rax, mov_rdi_rbp, mov_rsi_rax, call_0xffffffffffffb@@ 5e@@ 3, add_qword_ptr_[r@@ bx]@@ _r13, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x58, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, cmp_dword_ptr_[rdx@@ ]@@ _0xc, ja_0x1@@ 52, mov_eax_dword_ptr_[rdx], mov_rbp_rdx, lea_rdx_[rip+0x1d@@ 0@@ 2d], movsxd_rax_dword_ptr_[rdx+rax*4], mov_r12_rdi, add_rax_rdx, mov_r13_rsi, mov_r14_rcx, mov_r15_r8, mov_rbx_r9, jmp_rax, lea_rcx_[rip+0x@@ 1d@@ 0@@ 1e], mov_edx_0x1@@ f8, lea_rsi_[rip+0x1c@@ cc@@ 6], lea_rdi_[rip+0x1c@@ cd@@ 5], call_0xffffffffffff3@@ 97@@ 3
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x38, mov_rax_qword_ptr_[rsp+0x78], mov_qword_ptr_[rsp+0x18]_r8, mov_qword_ptr_[rsp+8]_rax, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, cmp_r9@@ _qword_ptr_[rsp+0x70], jae_0x@@ 104, lea_rax_[rsp+0x@@ 24], mov_qword_ptr_[rsp+0x10]_rax, mov_rbp_rdi, mov_r13_rsi, mov_r12_rdx, mov_r14_rcx, mov_r15_r9, mov_ebx_2, jmp_0x44, cmp_eax_ebx, je_0x2e, cmp_eax_2, je_0x29, cmp_eax_3, je_0x9c, cmp_ebx_3, je_0x93, test_ebx_ebx, sete_bl, test_eax_eax, sete_al, or@@ _ebx_eax, xor_ebx@@ _1, movzx_ebx@@ _bl, inc_r15, cmp_qword_ptr_[rsp+0x@@ 7@@ 0]_r15, je_0x5f, mov_rax_qword_ptr_[rsp+8], mov_rsi_r15, mov_rdi_r12, call_rax, mov_rsi_rax, mov_rdi_rbp, mov_qword_ptr_[rsp]_rax, call_0xffffffffffffa@@ cb@@ f, cmp_rax_-1, je_0x56, mov_r8_qword_ptr_[rsp+0x10], mov_rdx_qword_ptr_[rsp], mov_r9d_1, mov_rcx_r14, mov_rsi_r13, mov_rdi_rbp, call_0xfffffffffffffd@@ 6c, test_rax_rax, js_0x3@@ 4, mov_eax_dword_ptr_[rsp+0x24], cmp_ebx_2, jne_0xffffffffffffff@@ 7b, inc_r15, mov_ebx_eax, cmp_qword_ptr_[rsp+0x@@ 7@@ 0]_r15, jne_0xffffffffffffffa5, mov_rax_qword_ptr_[rsp+0x18], mov_dword_ptr_[rax]@@ _ebx, mov_eax_1, jmp_0x14, mov_ebx@@ _3, jmp_0xffffffffffffff83, mov_rax_-1, mov_rcx_qword_ptr_[rsp+0x28], xor_rcx_qword_ptr_fs:[0x28], jne_0x18, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_ebx_2, jmp_0xffffffffffffffbc, call_0xffffffffffff37@@ 8@@ 3
push_r15, mov_r15_rdx, push_r14, mov_r14_rdi, push_r13, mov_r13_rcx, push_r12, mov_r12_rsi, push_rbp, mov_rbp_r9, push_rbx, sub_rsp_0x28, mov_rax_qword_ptr_[rsp+0x68], mov_qword_ptr_[rsp+8]_r8, mov_qword_ptr_[rsp]_rax, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, cmp_qword_ptr_[rsp+0x@@ 60]_1, jbe_0x@@ df, test_r9_r9, je_0xc6, xor_ebx_ebx, jmp_0x12, inc_rbx, cmp_rbp_rbx, je_0xb2, mov_rdx_rbx, mov_rsi_r15, mov_rdi_r14, call_0xffffffffffffac@@ f3, cmp_rax@@ _7, jbe_0xffffffffffffff@@ e2, push_qword_ptr_[r@@ sp], xor_r9d_r9d, mov_rcx_r13, push_rbx, mov_rdx_r15, mov_rsi_r12, lea_r8_[rsp+0x@@ 20], mov_rdi_r14, call_0xfffffffffffffe@@ 20, pop_r8, pop_r9, test_rax_rax, js_0x4@@ c, push_qword_ptr_[r@@ sp], mov_rsi_r12, mov_rdi_r14, push_rbp, mov_r9_rbx, mov_rcx_r13, lea_r8_[rsp+0x@@ 24], mov_rdx_r15, call_0xfffffffffffffd@@ fa, pop_rsi, pop_rdi, test_rax_rax, js@@ _0x28, mov_eax_dword_ptr_[rsp+0x10], cmp_eax_3, je_0x77, mov_edx_dword_ptr_[rsp+0x14], cmp_edx_3, je_0x6e, mov_rcx_qword_ptr_[rsp+8], mov_dword_ptr_[rcx]_eax, mov_dword_ptr_[rcx+@@ 4]_edx, mov_eax_2, jmp_0xc, mov_rax_-1, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x55, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, xor_ebx_ebx, jmp_0xffffffffffffff66, push_qword_ptr_[r@@ sp], push_r9, xor_r9d_r9d, mov_r8_qword_ptr_[rsp+0x18], call_0xfffffffffffffd@@ 83, pop_rdx, pop_rcx, jmp_0xffffffffffffffbb, mov_rax_qword_ptr_[rsp+8], mov_dword_ptr_[rax@@ ]_3, mov_eax_1, jmp_0xffffffffffffff9f, call_0xffffffffffff36@@ 1@@ e
push_r15, mov_r15_r8, push_r14, mov_r14_rcx, push_r13, mov_r13_rsi, mov_rsi_rdx, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_r9, sub_rsp_8, call_0xffffffffffffaa@@ 9d, cmp_rax_-1, je_0x67, mov_qword_ptr_[rbx]_rax, mov_edx_dword_ptr_[r12], add_rax@@ _7, mov_r9_rax, shr@@ _r9@@ _3, cmp_edx@@ _0xa, je_0x59, cmp_rax@@ _0x17, jbe_@@ 7, cmp_edx@@ _0xb, je_0x2a, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, mov_rdx_r12, pop_r12, mov_rsi_r13, pop_r13, mov_rcx_r14, pop_r14, mov_r8_r15, pop_r15, jmp_0xfffffffffffffb@@ 23, mov_dword_ptr_[r15@@ ]_3, mov_eax_1, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_-1, jmp_0xffffffffffffff@@ ea, lea_rcx_[rip+0x@@ 1c@@ c@@ 9d], mov_edx_0x2@@ 14, lea_rsi_[rip+0x1c@@ 92@@ d], lea_rdi_[rip+0x1c@@ 95@@ 5], call_0xffffffffffff3@@ 5d@@ a
push_r12, push_rbp, push_rbx, mov_rbx_rdi, test_rsi_rsi, je_0x14, mov_rdi_rsi, mov_r12_rdx, mov_rbp_rcx, call_0xffffffffffffb0@@ bb, mov_qword_ptr_[rax+r@@ bp@@ ]_r12, inc_qword_ptr_[r@@ bx], pop_rbx, pop_rbp, pop_r12, ret
sub_rsp_8, mov_rax_qword_ptr_[rdi+0x@@ 2e0], cmp_r8d_1, je_0x39, cmp_r8d@@ _2, jne_0x53, test_rax_rax, je_0xe6, cmp_rax_1, jne_0x10@@ a, mov_rdx_qword_ptr_[rdi+0x@@ 60], add_rdi@@ _0x2@@ e0, call_0xffffffffffffff@@ 9b, xor_eax_eax, add_rsp_8, ret, cmp_rax@@ _5, ja_0x1@@ 1c, lea_rdx_[rip+0x1c@@ ad@@ b], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, cmp_rax@@ _5, ja_0x@@ e1, lea_rdx_[rip+0x1c@@ ad@@ 3], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_rdx_qword_ptr_[rdi+0x@@ 50], add_rdi@@ _0x2@@ e0, call_0xfffffffffffffec@@ 5, xor_eax_eax, add_rsp_8, ret, lea_rcx_[rip+0x@@ 1c@@ ac@@ b], mov_edx_0x1@@ 09, lea_rsi_[rip+0x1c@@ 7a@@ b], lea_rdi_[rip+0x1c@@ 8a@@ 8], call_0xffffffffffff34@@ 58, add_rdi@@ _0x2@@ d8, mov_ecx_8, call_0xfffffffffffff8f@@ 7, mov_eax_3, jmp_0xfffffffffffffed9, lea_rcx_[rip+0x@@ 1c@@ a@@ 91], mov_edx_0x@@ f9, lea_rsi_[rip+0x1c@@ 77@@ 1], lea_rdi_[rip+0x1c@@ 84@@ 6], call_0xffffffffffff34@@ 1@@ e
push_rbx, sub_rsp_0x40, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, cmp_r8d@@ _2, jne_0x@@ 87, test_rsi_rsi, je_0x76, mov_rax_qword_ptr_[rsi], movdqu_xmm0_xmmword_ptr_[r@@ di+0x@@ f8], mov_eax_dword_ptr_[rax], mov_rbx_rcx, movaps_xmmword_ptr_[rsp+0x20]_xmm0, cmp_eax_8, je_0x8@@ 4, cmp_eax_9, jne_0x92, movaps_xmmword_ptr_[rsp+0x10]_xmm0, fld_xword_ptr_[r@@ sp+0x10], fstp@@ _qword_ptr_[rsp+0x20], mov_rdi_rsi, mov_qword_ptr_[rsp+8]_rdx, call_0xffffffffffffa@@ eb@@ 0, mov_rdx_qword_ptr_[rsp+8], lea_rdi_[rax+r@@ bx], lea_rsi_[rsp+0x20], call_0xffffffffffff@@ 35@@ 1d, mov_eax_4, mov_rbx_qword_ptr_[rsp+0x38], xor_rbx_qword_ptr_fs:[0x28], jne_0x47, add_rsp_0x40, pop_rbx, ret, mov_eax_4, jmp_0xffffffffffffffe0, lea_rdi_[r@@ di+0x@@ 2d8], mov_rcx_r9, call_0xfffffffffffff8@@ 16, mov_eax_3, jmp_0xffffffffffffffc9, movaps_xmmword_ptr_[rsp+0x10]_xmm0, fld_xword_ptr_[r@@ sp+0x10], fstp@@ _dword_ptr_[rsp+0x20], jmp_0xffffffffffffff8b, call_0xffffffffffff3@@ 2b@@ e, lea_rcx_[rip+0x@@ 1c@@ 92@@ a], mov_edx_0x@@ cb, lea_rsi_[rip+0x1c@@ 67@@ 2], lea_rdi_[rip+0x1c@@ 6b@@ 6], call_0xffffffffffff@@ 33@@ 1@@ f
push_r12, mov_rcx_rsi, mov_r12d_edx, push_rbp, xor_edx_edx, mov_rbp_rdi, push_rbx, mov_rbx_rsi, xor_eax_eax, mov_esi_dword_ptr_[r@@ di], mov_edi@@ _0xc, call_0xffffffffffff3@@ 54@@ 5, test_rax_rax, js@@ _0x5c, mov_qword_ptr_[rbx+0x@@ 2e@@ 0]_0, test_r12d_r12d, jne_0x1d, mov_qword_ptr_[rbx+0x@@ 2e@@ 8]_-1, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, ret, mov_esi_dword_ptr_[r@@ bp], xor_edx_edx, xor_eax_eax, lea_rcx_[rbx+0x@@ d8], mov_edi_0xe, call_0xffffffffffff34@@ fd, test_rax_rax, js_0x1@@ 4, mov_qword_ptr_[rbx+0x@@ 2e@@ 8]_0, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffb@@ e
push_rbx, mov_ebx_edi, sub_rsp_0x30, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, cmp_edi@@ _4, ja_0xffffffffffff@@ 37@@ 18, mov_rdi_rsi, mov_r10d@@ _ebx, mov_rsi_rdx, mov_rdx_rcx, mov_rcx_r8, mov_r8d@@ _r9d, lea_r9_[rip+0x@@ 1c@@ 80@@ b], movsxd_rax_dword_ptr_[r@@ 9+r@@ 10@@ *4], add_rax@@ _r9, jmp_rax
push_r15, push_r14, mov_r14d_r8d, push_r13, mov_r13_rdi, mov_rdi_rsi, push_r12, mov_rsi_r13, mov_r12_rcx, push_rbp, push_rbx, sub_rsp@@ _0x3@@ 58, lea_rbx_[r@@ sp+0x18], lea_r9_[r@@ sp+0x10], mov_r8_rbx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x@@ 34@@ 8]_rax, xor_eax_eax, call_0xfffffffffffffa@@ 20, cmp_rax_-1, je_0x12@@ 0, mov_rsi_qword_ptr_[rsp+0x10], mov_rdi_r12, mov_rbp_rax, call_0xffffffffffffab@@ f6, test_rax_rax, je_0x107, lea_r15_[rsp+0x20], mov_edx_0x3@@ 20, mov_rsi_r13, mov_rdi_r15, call_0xffffffffffff3@@ 1f8, cmp_rbp@@ _1, je_0x97, test_rbp_rbp, jle_0x@@ a8, lea_rax_[r@@ bp*8], mov_qword_ptr_[rsp+8]_rax, xor_ebp_ebp, xor_r11d_r11d, mov_rax_qword_ptr_[rsp+0x10], mov_r8_rbp, mov_rcx_rax, add_rbp_8, sub_rcx@@ _r8, cmp_rax_rbp, mov_eax_8, cmovae@@ _rcx_rax, mov_edi_dword_ptr_[rbx], mov_r9d_r14d, mov_rdx_r12, mov_rsi_r15, mov_dword_ptr_[rsp+4]@@ _r11d, call_0xfffffffffffffd@@ a0, mov_r11d_dword_ptr_[r@@ sp+4], cmp_eax_dword_ptr_[r@@ bx], mov_eax_1, cmovne@@ _r11d@@ _eax, add_rbx_4, cmp_rbp@@ _qword_ptr_[rsp+8], jne_0xffffffffffffffb4, and_r11d@@ _1, je_0x3e, mov_rdx_qword_ptr_[rsp+0x10], lea_rdi_[r@@ 13+0x@@ 2d8], mov_ecx_8, mov_rsi_r12, call_0xfffffffffffff4@@ 96, xor_eax_eax, jmp_0x33, mov_rcx_qword_ptr_[rsp+0x10], mov_edi_dword_ptr_[r@@ sp+0x18], mov_r9d_r14d, xor_r8d_r8d, mov_rdx_r12, mov_rsi_r15, call_0xfffffffffffffd@@ 43, mov_edx_0x3@@ 20, mov_rsi_r15, mov_rdi_r13, call_0xffffffffffff3@@ 133, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x@@ 3@@ 48], xor_rbx_qword_ptr_fs:[0x28], jne_0x1b, add_rsp@@ _0x3@@ 58, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffd6, call_0xffffffffffff2@@ f0@@ 0
endbr64, push_r13, mov_rsi_rcx, push_r12, mov_r12_rcx, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rax_qword_ptr_[rdi+0x@@ 98], add_rax_4, mov_qword_ptr_[rdi+0x@@ 2d@@ 8]_rax, mov_rdi_rdx, call_0xffffffffffffa@@ 37@@ 1, cmp_rax_-1, je_0x78, cmp_dword_ptr_[r@@ 12]@@ _0xb, lea_r13_[r@@ bx+0x@@ 2f0], je_0x22, mov_rdi_r13, xor_ecx_ecx, xor_edx_edx, xor_esi_esi, call_0xffffffffffffa@@ 8d@@ f, add_rsp_8, mov_rax_rbx, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, xor_r8d_r8d, xor_edx_edx, mov_rdi_r13, mov_rcx_r12, mov_rsi_rbp, call_0xffffffffffffa@@ 86@@ a, mov_rdi_r13, call_0xffffffffffffb@@ 3a@@ 2, test_eax_eax, js_0x2@@ b, lea_rdi_[rbx+0x@@ 2d8], mov_rsi_r13, mov_ecx_4, mov_edx_4, call_0xfffffffffffff38@@ 5, add_rsp_8, mov_rax_rbx, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, add_rsp_8, pop_rbx, pop_rbp, pop_r12, xor_eax_eax, pop_r13, ret
endbr64, push_r12, mov_r12_rdi, lea_r8_[r@@ 12+0x@@ 2f0], sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_rax_qword_ptr_[r12+0x@@ 98], mov_rdi_rdx, add_rax_8, mov_qword_ptr_[r12+0x@@ 2d@@ 8]_rax, mov_rdx_rcx, mov_r9@@ _rsp, xor_ecx_ecx, mov_rsi_r12, call_0xfffffffffffff7d@@ 9, mov_qword_ptr_[r12+0x@@ 2f@@ 8]_rax, cmp_rax_-1, je_0x50, test_rax_rax, jle_0x@@ d, cmp_dword_ptr_[r12+0x@@ 2@@ f0@@ ]_3, je_0x20, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x35, add_rsp_0x10, mov_rax_r12, pop_r12, ret, cmp_rax_1, jne_0x26, mov_rdx_qword_ptr_[rsp], xor_r8d_r8d, xor_ecx_ecx, xor_esi_esi, mov_rdi_r12, call_0xfffffffffffff87@@ 4, jmp_0xffffffffffffffc9, xor_r12d_r12d, jmp_0xffffffffffffffbf, call_0xffffffffffff2d@@ 83, lea_rcx_[rip+0x@@ 1c@@ 4c@@ 7], mov_edx_0x2@@ b5, lea_rsi_[rip+0x1c@@ 13@@ 7], lea_rdi_[rip+0x1c@@ 25@@ c], call_0xffffffffffff2d@@ e@@ 4
endbr64, push_r14, mov_r14_rdx, push_r13, mov_r13d_edi, mov_edi@@ _0x3@@ 20, push_r12, mov_r12_rsi, push_rbp, sub_rsp_8, call_0xffffffffffff2@@ fb@@ 3, test_rax_rax, je_0x81, mov_rbp_rax, mov_eax_r13d, and_eax_0xfffffffd, cmp_eax_1, je_0x77, test_r13d_r13d, sete_dl, lea_rdi_[r@@ 12+0x18], movzx_edx_dl, mov_rsi_rbp, call_0xfffffffffffffa@@ 7a, test_eax_eax, js_0x4@@ 3, cmp_word_ptr_[r@@ 12+0x1@@ 26@@ 8]_3, mov_rcx_r14, mov_rdx_r12, mov_esi_r13d, mov_rdi_rbp, je_0x1b, call_0xfffffffffffffeb@@ 9, test_rax_rax, je_0x21, add_rsp_8, pop_rbp, pop_r12, pop_r13, pop_r14, ret, call_0xfffffffffffffd@@ e0, jmp_0xffffffffffffff@@ e7, mov_rdi_rbp, call_0xffffffffffff2b@@ 5d, add_rsp_8, pop_rbp, pop_r12, pop_r13, xor_eax_eax, pop_r14, ret, xor_eax_eax, jmp_0xffffffffffffffc9, lea_rcx_[rip+0x@@ 1c@@ 35@@ f], mov_edx_0x2@@ c4, lea_rsi_[rip+0x1c@@ 0@@ 5f], lea_rdi_[rip+0x1c@@ 1a@@ c], call_0xffffffffffff2d@@ 0@@ c
endbr64, push_rbp, mov_edi@@ _0x3@@ 20, mov_rbp_rsi, call_0xffffffffffff2e@@ f3, test_rax_rax, je_0x13, mov_rsi_rbp, mov_rdi_rax, mov_edx_0x3@@ 20, pop_rbp, jmp_0xffffffffffff@@ 2e@@ 5d, xor_eax_eax, pop_rbp, ret
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, test_esi@@ _0xfffffffd, je_0x12@@ b, mov_rax_qword_ptr_[rdi+0x@@ 2f@@ 8], mov_rbp_rdi, mov_ebx_esi, mov_rdi_r8, lea_rsi_[rax@@ *8], mov_r13_rdx, mov_r12_r8, call_0xffffffffffffa@@ 7f@@ 9, test_rax_rax, je_0xda, cmp_ebx_1, sete_dl, lea_rdi_[r@@ 13+0x18], movzx_edx_dl, mov_rsi_rbp, call_0xfffffffffffff96@@ b, test_eax_eax, js_0x@@ bd, cmp_qword_ptr_[rbp+0x@@ 2f@@ 8]_1, je_0x7e, mov_rsi_qword_ptr_[r12], mov_rdi_r13, call_0xffffffffffffa0@@ 8d, mov_r13_rax, cmp_rax_-1, je_0x9a, mov_rax_qword_ptr_[rbp+0x@@ 2f@@ 8], cmp_rax_1, je_0xd, mov_r13d@@ _8, test_rax_rax, jle_0x@@ 3d, xor_ebx_ebx, mov_edi_dword_ptr_[r@@ bp+r@@ bx@@ *4+0x@@ 2f0], mov_r9d_2, lea_r8_[r@@ bx*8], mov_rcx_r13, mov_rdx_r12, mov_rsi_rbp, call_0xfffffffffffff99@@ 2, cmp_dword_ptr_[r@@ bp+r@@ bx@@ *4+0x@@ 2f@@ 0]_eax, jne_0x56, inc_rbx, cmp_qword_ptr_[rbp+0x@@ 2f@@ 8]_rbx, jg_0xffffffffffffff@@ ca, xor_eax_eax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, cmp_dword_ptr_[rbp+0x@@ 2@@ f0@@ ]_3, jne_0xffffffffffffff@@ 7d, test_r12_r12, je_0x12, mov_rdi_r12, call_0xffffffffffffb0@@ 83, test_eax_eax, js_0xffffffffffffff@@ 68, mov_dword_ptr_[rbp+0x@@ 2f@@ 0]_0, jmp_0xffffffffffffff58, mov_eax_0xffffffff, jmp_0xffffffffffffffbc, lea_rcx_[rip+0x@@ 1c@@ 1c@@ 9], mov_edx_0x3@@ 24, lea_rsi_[rip+0x1b@@ ee@@ 9], lea_rdi_[rip+0x1c@@ 0@@ a6], call_0xffffffffffff2b@@ 96, lea_rcx_[rip+0x@@ 1c@@ 1a@@ a], mov_edx_0x3@@ 0e, lea_rsi_[rip+0x1b@@ ec@@ a], lea_rdi_[rip+0x1c@@ 0@@ 4f], call_0xffffffffffff2b@@ 7@@ 7
endbr64, push_r12, mov_r9_rdx, mov_r12_r8, push_rbp, mov_rdx_rcx, mov_rbp_rdi, sub_rsp_8, cmp_word_ptr_[r@@ 9+0x1@@ 26@@ 8]_3, je_0x38, cmp_esi_1, jbe_0x@@ 2b, sub_esi@@ _2, cmp_esi_1, ja@@ _0x64, mov_r8d_1, add_rsp_8, mov_rdi_rbp, pop_rbp, mov_rcx_r12, mov_rsi_r9, pop_r12, jmp_0xfffffffffffffa@@ 3b, xor_r8d_r8d, jmp_0xffffffffffffffe2, mov_rsi_rcx, mov_rdi_r9, call_0xffffffffffff9f@@ 42, mov_rdx_rax, cmp_rax_-1, je_0x20, lea_rdi_[rbp+0x@@ 2d8], mov_ecx_4, mov_rsi_r12, call_0xffffffffffffe@@ fa@@ 5, xor_eax_eax, add_rsp_8, pop_rbp, pop_r12, ret, mov_eax_0xffffffff, jmp_0xfffffffffffffff@@ 3, jmp_0xffffffffffff@@ 2f@@ 9@@ 6
endbr64, push_r13, mov_r13_r8, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, sub_rsp_0x10, cmp_word_ptr_[r@@ dx+0x1@@ 26@@ 8]_3, je_0x12, add_rsp_0x10, pop_rbp, pop_r12, pop_r13, jmp_0xfffffffffffffdd@@ 7, cmp_esi_1, sete_dl, lea_rdi_[r@@ 12+0x18], movzx_edx_dl, mov_rsi_rbp, mov_qword_ptr_[rsp+8]_rcx, call_0xfffffffffffff77@@ a, test_eax_eax, mov_rcx_qword_ptr_[rsp+8], js@@ _0xfe, cmp_qword_ptr_[rbp+0x@@ 2f@@ 0]_0, je_0x38, movdqu_xmm0_xmmword_ptr_[r@@ bp+0x@@ 2f0], xor_eax_eax, movups_xmmword_ptr_[r@@ 13@@ ]_xmm0, movdqu_xmm1_xmmword_ptr_[r@@ bp+0x@@ 300], movups_xmmword_ptr_[r@@ 13+0x1@@ 0@@ ]_xmm1, movdqu_xmm2_xmmword_ptr_[r@@ bp+0x@@ 310], movups_xmmword_ptr_[r@@ 13+0x@@ 20]_xmm2, add_rsp_0x10, pop_rbp, pop_r12, pop_r13, ret, mov_rdi_r12, mov_rsi_rcx, mov_qword_ptr_[rsp+8]_rcx, call_0xffffffffffff9e@@ 5d, mov_r12_rax, cmp_rax_-1, je_0xa1, mov_rsi_rax, mov_rdi_r13, call_0xffffffffffffa@@ 57@@ 5, test_rax_rax, je_0x8d, mov_rcx_qword_ptr_[rsp+8], mov_edx_dword_ptr_[r@@ cx], cmp_edx@@ _9, ja_0x1@@ 5, cmp_edx@@ _7, ja@@ _0x38, xor_eax_eax, test_edx_edx, je_0xffffffffffffff@@ ad, jmp_0xd, cmp_edx@@ _0xc, jne_0x6f, xor_ecx_ecx, mov_r8d_2, mov_rdx_r12, mov_rsi_r13, mov_rdi_rbp, call_0xfffffffffffff4@@ 32, test_eax_eax, jne_0x74, xor_eax_eax, jmp_0xffffffffffffff82, xor_ecx_ecx, mov_r9d_4, mov_r8d_2, mov_rdx_r12, mov_rsi_r13, mov_rdi_rbp, call_0xfffffffffffff5@@ 99, cmp_eax_4, je_0xffffffffffffffd8, lea_rcx_[rip+0x@@ 1b@@ f@@ 78], mov_edx_0x2@@ 6f, lea_rsi_[rip+0x1b@@ c@@ d8], lea_rdi_[rip+0x1b@@ d6@@ 3], call_0xffffffffffff2@@ 98@@ 5, mov_eax_0xffffffff, jmp_0xffffffffffffff36, lea_rcx_[rip+0x@@ 1b@@ f4@@ f], mov_edx_0x2@@ 74, lea_rsi_[rip+0x1b@@ ca@@ f], lea_rdi_[rip+0x1b@@ e@@ 94], call_0xffffffffffff2@@ 95@@ c, lea_rcx_[rip+0x@@ 1b@@ f@@ 30], mov_edx_0x2@@ 69, lea_rsi_[rip+0x1b@@ c@@ 90], lea_rdi_[rip+0x1b@@ d0@@ 6], call_0xffffffffffff2@@ 93@@ d
endbr64, test_rdi_rdi, je_9, jmp_0xffffffffffff@@ 27@@ 47, ret
endbr64, cmp_word_ptr_[r@@ di+0x1@@ 26@@ 8]@@ _0x3e, je_0x14, mov_qword_ptr_[rdi+0x@@ 28]_1, ret, movabs_rax_0x1@@ 00000000, mov_qword_ptr_[rdi+0x@@ 28]_rax, ret
endbr64, xor_eax_eax, cmp_sil@@ _0x7f, je_6, ret, push_r15, mov_ecx_esi, movzx_ecx@@ _ch@@ , push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rdx, sub_rsp_8, mov_edx_dword_ptr_[r@@ di+0x30], or_edx@@ _5, cmp_ecx_edx, je_0x17, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_r13_qword_ptr_[r@@ di+0x38], mov_r15d_dword_ptr_[r@@ di+0x18], call_0xffffffffffff27@@ 10, mov_r12_rax, test_r13_r13, je_0x95, lea_rax_[r@@ 13+r@@ 13*8], lea_r14_[r@@ bp@@ +rax*8@@ -8], xor_ecx_ecx, mov_edx@@ _0x78, mov_esi_r15d, mov_edi_3, xor_eax_eax, call_0xffffffffffff2a@@ b4, mov_r13_rax, cmp_rax_-1, je_0xf8, mov_dword_ptr_[rbx]_eax, mov_r12d_dword_ptr_[r@@ 12], mov_rdi_rbp, call_0x16@@ 29, sub_rsp_8, push_r12, mov_r9_rax, mov_r8_r13, mov_edx_0x6@@ 3, xor_eax_eax, lea_rcx_[rip+0x@@ 1b@@ f@@ 11], lea_rsi_[rip+0x18@@ fc@@ 5], mov_edi_0x20, call_0x4@@ 18@@ e, mov_r8d_dword_ptr_[r@@ 14+8], pop_rax, pop_rdx, mov_eax_dword_ptr_[rbx], test_r8d_r8d, je_0x92, cmp_eax_dword_ptr_[r@@ 14], jne_0x@@ 89, mov_eax_2, jmp_0xffffffffffffff4d, xor_ecx_ecx, mov_edx@@ _0x78, mov_esi_r15d, mov_edi_3, xor_eax_eax, call_0xffffffffffff2a@@ 2f, mov_r13_rax, cmp_rax_-1, jne_0xa3, mov_ecx_dword_ptr_[r@@ 12], test_ecx_ecx, jne_0x@@ b7, mov_dword_ptr_[rbx]@@ _0xffffffff, mov_rdi_rbp, mov_r12d_dword_ptr_[r@@ 12], call_0x15@@ 94, sub_rsp_8, push_r12, mov_r9_rax, mov_r8@@ _-1, lea_rsi_[rip+0x18@@ f@@ 3a], mov_edi_0x20, xor_eax_eax, lea_rcx_[rip+0x@@ 1b@@ e7@@ 1], mov_edx_0x6@@ 3, call_0x40@@ f5, pop_rsi, mov_eax_dword_ptr_[rbx], pop_rdi, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, not_eax, pop_r14, shr_eax_0x1f, pop_r15, ret, mov_r10d_dword_ptr_[r@@ 12], mov_eax_0xffffffff, test_r10d_r10d, jne_0xfffffffffffffea@@ 7, mov_r9d_dword_ptr_[r@@ 14+8], test_r9d_r9d, je_8, movsxd_r13@@ _dword_ptr_[r@@ 14], mov_rax_r13, mov_dword_ptr_[rbx]_eax, jmp_0xfffffffffffffeed, mov_dword_ptr_[rbx]@@ _r13d, mov_rdi_rbp, mov_r12d_dword_ptr_[r@@ 12], call_0x1@@ 50@@ 6, sub_rsp_8, push_r12, mov_r9_rax, mov_r8_r13, jmp_0xffffffffffffff76, or_eax_0xffffffff, jmp_0xfffffffffffffe@@ 6@@ 0
endbr64, test_rdi_rdi, je_0x29, cmp_dword_ptr_[r@@ si@@ ]@@ _0xc, ja_0x8@@ 7, mov_eax_dword_ptr_[rsi], lea_rdx_[rip+0x1b@@ de@@ 5], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_rax@@ _-2, ret, push_rax, lea_rcx_[rip+0x@@ 1b@@ df@@ 5], mov_edx_0x@@ 94, lea_rsi_[rip+0x1@@ 8d@@ fb], lea_rdi_[rip+0x1b@@ 9b@@ 4], call_0xffffffffffff26@@ 5@@ 2
endbr64, test_rdi_rdi, je_0x49, cmp_dword_ptr_[r@@ si@@ ]@@ _0xc, ja_0x6@@ a, mov_eax_dword_ptr_[rsi], lea_rdx_[rip+0x1b@@ d5@@ d], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_rax@@ _-2, ret, push_rax, lea_rcx_[rip+0x@@ 1b@@ d@@ 32], mov_edx_0x@@ a1, lea_rsi_[rip+0x1@@ 8d@@ 58], lea_rdi_[rip+0x1b@@ 9@@ 11], call_0xffffffffffff2@@ 5a@@ f
endbr64, mov_rax_qword_ptr_[rdi+0x@@ 68], inc@@ _rsi, shl_rsi_4, add_rax_rsi, ret
endbr64, mov_rax_qword_ptr_[r@@ si+0x18], ret
endbr64, push_rbp, mov_rbp_rdi, mov_rdi_rsi, push_rbx, mov_rbx_rdx, sub_rsp_8, call_0xffffffffffff24@@ cd, movzx_eax_byte_ptr_[r@@ bp+rax], and_eax_0xffffffdf, cmp_al_0x5@@ 4, sete_al, movzx_eax_al, mov_dword_ptr_[rbx]_eax, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret
endbr64, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, mov_rdi_rsi, sub_rsp_8, call_0xffffffffffff24@@ 8d, lea_rdi_[r@@ bx+rax], mov_edx_0xa, xor_esi_esi, call_0xffffffffffff26@@ 6d, mov_dword_ptr_[rbp]_eax, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret
push_rbp, mov_r8d_edi, mov_edx_0x1@@ 5, sub_rsp_0x20, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_rbp_rsp, lea_rcx_[rip+0x@@ 1b@@ c6@@ a], mov_esi_1, mov_rdi_rbp, call_0xffffffffffff2@@ 93@@ 1, lea_rsi_[rip+0x1b@@ 0@@ cf], mov_rdi_rbp, call_0xffffffffffff27@@ f2, mov_rdx_qword_ptr_[rsp+0x18], xor_rdx_qword_ptr_fs:[0x28], jne_8, add_rsp_0x20, pop_rbp, ret, call_0xffffffffffff24@@ 1@@ 7
push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, mov_rdi_rsi, push_rbx, mov_rbx_rsi, sub_rsp_0x38, mov_qword_ptr_[rsp]_rdx, mov_qword_ptr_[rsp+8]_rcx, lea_r15_[rsp+0x20], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0xffffffffffff2@@ 3c@@ b, mov_r12_rax, mov_qword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rsp+0x20]_0, jmp_0x37, lea_rdi_[rsp+0x18], mov_rcx_rbp, mov_edx_0xa, mov_rsi_r15, call_0xffffffffffff2@@ 50@@ 8, test_rax_rax, js_0x2@@ 5, mov_r13_qword_ptr_[r@@ sp+0x18], mov_rdx_r12, mov_rsi_rbx, mov_rdi_r13, call_0xffffffffffff22@@ d0, test_eax_eax, je_0x31, mov_rdi_rbp, call_0xffffffffffff2@@ 55@@ 4, test_eax_eax, je_0xffffffffffffff@@ c5, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x3c, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdx_qword_ptr_[rsp+8], mov_rax_qword_ptr_[rsp], mov_rdi_r13, mov_rsi_rbx, call_rax, mov_r14d_eax, mov_rdi_r13, call_0xffffffffffff2@@ 1e@@ 1, test_r14d_r14d, jne_0xffffffffffffff@@ 69, jmp_0xffffffffffffffb8, call_0xffffffffffff2@@ 33@@ 1
endbr64, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, mov_rdi_rsi, sub_rsp_8, call_0xffffffffffff22@@ fd, add_rbx_rax, movzx_eax_byte_ptr_[rbx], cmp_al_0x5@@ a, je_0xc0, jg@@ _0x3a, cmp_al_0x5@@ 4, je_0x4e, jle_0x@@ 14, mov_dword_ptr_[rbp@@ ]_5, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret, cmp_al@@ _0x44, je_6, cmp_al_0x5@@ 3, jne_0xffffffffffffffe8, mov_dword_ptr_[rbp@@ ]_3, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret, cmp_al_0x7@@ 4, jne_0xffffffffffffffcc, mov_dword_ptr_[rbp@@ ]_2, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret, mov_ecx_0xd, lea_rdi_[rip+0x1b@@ ac@@ d], mov_rsi_rbx, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x3c, mov_ecx_0x1@@ 2, lea_rdi_[rip+0x1b@@ a@@ c0], mov_rsi_rbx, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0xffffffffffffff@@ ba, mov_rax_qword_ptr_[rip+0x2@@ a9@@ fd], mov_rcx_rbx, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x1b@@ a@@ b0], mov_esi_1, xor_eax_eax, call_0xffffffffffff26@@ b9, mov_dword_ptr_[rbp@@ ]_1, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret, mov_dword_ptr_[rbp@@ ]_4, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret
endbr64, push_rbx, mov_rbx_rsi, mov_ecx_0x10, mov_rsi_qword_ptr_[rsi], call_0x2d@@ 50, cmp_rax@@ _0x10, jne_0xf, add_qword_ptr_[r@@ bx]@@ _0x10, xor_eax_eax, pop_rbx, ret, mov_eax_0xffffffff, pop_rbx, ret
endbr64, push_rbp, mov_ecx_8, mov_rbp_rdx, push_rbx, mov_rbx_rsi, sub_rsp_0x18, mov_rsi_qword_ptr_[rsi], mov_rdx_rsp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0x2@@ d0@@ 5, cmp_rax@@ _8, jne_0x34, movsxd_rax_dword_ptr_[r@@ sp], add_qword_ptr_[r@@ bx@@ ]_8, mov_qword_ptr_[rbp]_rax, mov_eax_dword_ptr_[rsp+4], mov_qword_ptr_[rbp+8]_rax, xor_eax_eax, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x15, add_rsp_0x18, pop_rbx, pop_rbp, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffdf, call_0xffffffffffff2@@ 19@@ 1
endbr64, sub_rsp_8, mov_ecx@@ _0x28, call_0x2@@ ca@@ 3, cmp_rax@@ _0x28, setne_al, movzx_eax_al, neg_eax, add_rsp_8, ret
endbr64, push_rbx, mov_ecx_0x14, mov_rbx_rdx, sub_rsp_0x20, mov_rdx_rsp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0x2c@@ 5c, cmp_rax@@ _0x14, jne_0x43, mov_eax_dword_ptr_[rsp], mov_dword_ptr_[rbx]_eax, mov_eax_dword_ptr_[rsp+4], mov_qword_ptr_[rbx+8]_rax, mov_eax_dword_ptr_[rsp+8], mov_qword_ptr_[rbx+0x10]_rax, mov_eax_dword_ptr_[rsp+0xc], mov_dword_ptr_[rbx+0x1@@ 8]_eax, mov_eax_dword_ptr_[rsp+0x10], mov_qword_ptr_[rbx+0x20]_rax, xor_eax_eax, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x14, add_rsp_0x20, pop_rbx, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffe0, call_0xffffffffffff20@@ d@@ 9
endbr64, sub_rsp_8, mov_ecx@@ _0x28, call_0x2b@@ f3, cmp_rax@@ _0x28, setne_al, movzx_eax_al, neg_eax, add_rsp_8, ret
endbr64, push_rbx, mov_ecx_0x14, mov_rbx_rdx, sub_rsp_0x20, mov_rdx_rsp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0x2@@ ba@@ c, cmp_rax@@ _0x14, jne_0x43, mov_eax_dword_ptr_[rsp], mov_qword_ptr_[rbx]_rax, mov_eax_dword_ptr_[rsp+4], mov_qword_ptr_[rbx+8]_rax, mov_eax_dword_ptr_[rsp+8], mov_qword_ptr_[rbx+0x10]_rax, mov_eax_dword_ptr_[rsp+0xc], mov_qword_ptr_[rbx+0x18]_rax, mov_eax_dword_ptr_[rsp+0x10], mov_qword_ptr_[rbx+0x20]_rax, xor_eax_eax, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x12, add_rsp_0x20, pop_rbx, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffe2, call_0xffffffffffff20@@ 2@@ 9
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x68, lea_rcx_[rip+0x@@ 1b@@ 85@@ e], mov_edx_0x1@@ d6, lea_rbp_[r@@ ip-0x@@ e9], movabs@@ _r14@@ _0x6@@ 47@@ 6@@ 2d@@ 7@@ 87@@ 56@@ e6@@ 96@@ c, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x20@@ 58]_rax, xor_eax_eax, mov_rbx_rsi, mov_r15_rdi, lea_rsi_[rip+0x19@@ 5c8], mov_edi_0x20, lea_r13_[rsp+0x20], call_0x3@@ 9a@@ 3, mov_rbx_qword_ptr_[rbx+8], test_rbx_rbx, je_0x1@@ 57, mov_eax_dword_ptr_[r15+0x@@ 28], pxor_xmm0_xmm0, test_eax_eax, lea_rax_[rip-0x@@ 11@@ 1], cmove_rax@@ _rbp, mov_rdx_r13, mov_rsi_rbx, mov_rdi_r15, mov_qword_ptr_[rsp+0x40]_0, movaps_xmmword_ptr_[rsp+0x20]_xmm0, movaps_xmmword_ptr_[rsp+0x30]_xmm0, call_rax, test_eax_eax, js_0x1@@ 43, mov_rsi_qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp+0x18]_rbx, mov_rbx_qword_ptr_[rsp+0x38], test_rsi_rsi, je_0x1@@ 53, lea_r12_[rsp+0x@@ 50], mov_ecx@@ _0x2000, mov_rdx_r12, mov_rdi_r15, call_0x2a@@ 6d, cmp_byte_ptr_[rsp+0x@@ 50]_0, je_0xab, mov_rax_qword_ptr_[rsp+0x50], movabs_rdx@@ _0x3@@ 12@@ e6@@ f7@@ 3@@ 2e@@ 6@@ f7@@ 3, xor_rdx@@ _qword_ptr_[rsp+0x58], xor_rax@@ _r14, or_rdx_rax, je_0x8b, movabs_rcx@@ _0x3@@ 12@@ e6@@ f7@@ 3@@ 2e@@ 6@@ 57@@ 4, movabs_rdx@@ _0x6@@ 16@@ 7@@ 2d@@ 7@@ 87@@ 56@@ e6@@ 96@@ c, xor_rcx@@ _qword_ptr_[r@@ 12+8], xor_rdx@@ _qword_ptr_[r@@ 12], or_rcx@@ _rdx, je_0x65, movabs_rdx@@ _0x2@@ e6@@ f7@@ 3@@ 2e@@ 32@@ 3@@ 36@@ f7@@ 3, xor_rdx@@ _qword_ptr_[r@@ 12+8], or_rdx_rax, jne_0xb, cmp_word_ptr_[r@@ 12+0x1@@ 0]@@ _0x31, je_0x48, mov_rdx_qword_ptr_[r12], movabs_rax@@ _0x2@@ e6@@ f7@@ 3@@ 2e@@ 34@@ 36@@ 6@@ f7@@ 3, xor_rax@@ _qword_ptr_[r@@ 12+8], xor_rdx@@ _r14, or_rax_rdx, jne_0xb, cmp_word_ptr_[r@@ 12+0x1@@ 0]@@ _0x31, je_0x24, lea_rdx_[rip-0x@@ 7d@@ 4d], xor_esi_esi, lea_rcx_[rsp+0x18], mov_rdi_r15, call_0xffffffffffff47@@ b9, test_rax_rax, je_0xb9, test_rbx_rbx, jne_0xfffffffffffffe@@ e5, mov_rax_qword_ptr_[rsp+0x@@ 20@@ 58], xor_rax_qword_ptr_fs:[0x28], jne_0x12@@ d, add_rsp@@ _0x20@@ 68, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rcx_[rip+0x@@ 1b@@ 85@@ 9], mov_edx_0x1@@ d9, lea_rsi_[rip+0x19@@ 4@@ 48], mov_edi_2, xor_eax_eax, call_0x38@@ 26, jmp_0xffffffffffffffb2, lea_rcx_[rip+0x@@ 1b@@ 6@@ 9c], mov_edx_0x1@@ e4, lea_rsi_[rip+0x19@@ 420], mov_edi_2, xor_eax_eax, call_0x37@@ fe, jmp_0xffffffffffffff8a, lea_rcx_[rip+0x@@ 1b@@ 8@@ 39], mov_edx_0x1@@ ed, lea_rsi_[rip+0x19@@ 3f8], mov_edi_2, xor_eax_eax, call_0x37@@ d6, jmp_0xffffffffffffff62, mov_edi@@ _0x50, call_0xffffffffffff20@@ 53, test_rax_rax, je_0x56, mov_rdi_rax, mov_esi_1, mov_qword_ptr_[rsp+8]_rax, call_0xffffffffffff7@@ d0@@ c, mov_r8_qword_ptr_[rsp+8], mov_rcx_qword_ptr_[rsp+0x20], mov_rdi_r8, mov_rdx_r12, mov_rsi_r15, call_0x66@@ 54, test_eax_eax, mov_r8_qword_ptr_[rsp+8], js_0x1@@ b, mov_rax_qword_ptr_[rsp+0x18], mov_rsi_r8, mov_qword_ptr_[r@@ 8@@ +8]_rax, mov_rdi_r15, call_0xffffffffffff4@@ 70@@ 7, jmp_0xfffffffffffffefa, mov_rdi_r8, call_0xffffffffffff7@@ da@@ a, call_0xffffffffffff1c@@ 75, mov_edi_dword_ptr_[rax], call_0xffffffffffff2@@ 1f@@ e, mov_r8_rax, mov_rax_qword_ptr_[rip+0x2a@@ 4e@@ f], mov_rcx_r12, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x1b@@ 7b@@ 2], mov_esi_1, xor_eax_eax, call_0xffffffffffff2@@ 1a@@ b, jmp_0xfffffffffffffe@@ be, call_0xffffffffffff1d@@ 4@@ 1
endbr64, sub_rsp_8, mov_edx_0x10, call_0xffffffffffff1e@@ 33, cmp_rax@@ _0x10, setne_al, movzx_eax_al, neg_eax, add_rsp_8, ret
endbr64, push_rbx, mov_edx_8, mov_rbx_rsi, sub_rsp_0x10, mov_rsi_rsp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xffffffffffff1d@@ ec, cmp_rax@@ _8, jne_0x2b, mov_eax_dword_ptr_[rsp], mov_qword_ptr_[rbx]_rax, mov_eax_dword_ptr_[rsp+4], mov_qword_ptr_[rbx+8]_rax, xor_eax_eax, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x12, add_rsp_0x10, pop_rbx, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffe2, call_0xffffffffffff1c@@ a@@ 1
push_r12, xor_eax_eax, mov_r12_rsi, push_rbp, mov_edx_0x2@@ 28, mov_rbp_rdi, sub_rsp_8, lea_rsi_[rip+0x19@@ 280], mov_edi_0x20, lea_rcx_[rip+0x@@ 1b@@ 540], call_0x36@@ 59, mov_eax_dword_ptr_[rbp+0x@@ 28], lea_rdx_[rip-0x@@ 5@@ 26], test_eax_eax, lea_rax_[rip-0x@@ 4@@ ff], cmove_rax_rdx, mov_rsi_qword_ptr_[rbp+0x@@ 12@@ 88], mov_rdx_r12, mov_rdi_rbp, call_rax, test_eax_eax, js@@ _0xc, xor_eax_eax, add_rsp_8, pop_rbp, pop_r12, ret, xor_eax_eax, lea_rcx_[rip+0x@@ 1b@@ 6a@@ f], mov_edx_0x2@@ 2b, lea_rsi_[rip+0x19@@ 22@@ 6], mov_edi_2, call_0x3@@ 606, mov_eax_0xffffffff, jmp_0xffffffffffffffd@@ 4
endbr64, push_rbp, mov_edi_0x20, lea_rcx_[rip+0x@@ 1b@@ 4d8], push_rbx, mov_edx_0x2@@ 35, mov_rbx_rsi, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, lea_rsi_[rip+0x19@@ 1d@@ 6], mov_rbp_rsp, call_0x3@@ 5b8, mov_rsi_rbp, mov_rdi_rbx, call_0xffffffffffffff@@ 2d, test_eax_eax, js_0x@@ d6, mov_eax_dword_ptr_[rsp+0x18], test_eax_eax, je_0x2a, mov_dword_ptr_[rbx+0x1@@ 29@@ 0]_eax, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ d8, add_rsp_0x38, pop_rbx, pop_rbp, ret, lea_rcx_[rip+0x@@ 1b@@ 47@@ 1], mov_edx_0x2@@ 3e, lea_rsi_[rip+0x19@@ 178], mov_edi_2, call_0x3@@ 55@@ 8, mov_eax_dword_ptr_[rbx+0x1@@ 290], cmp_eax_1, je_0x42, lea_rcx_[rip+0x@@ 1b@@ 47@@ 9], mov_edx_0x2@@ 45, cmp_eax_2, je_0xe, lea_rcx_[rip+0x@@ 1b@@ 48@@ 2], mov_edx_0x2@@ 49, xor_eax_eax, lea_rsi_[rip+0x19@@ 13@@ d], mov_edi_2, call_0x35@@ 1d, mov_eax_dword_ptr_[rsp+0x18], jmp_0xffffffffffffff7c, xor_eax_eax, lea_rcx_[rip+0x@@ 1b@@ 42@@ 1], mov_edx_0x2@@ 41, lea_rsi_[rip+0x19@@ 10@@ e], mov_edi_2, call_0x34@@ ee, mov_rsi_rbp, mov_rdi_rbx, call_0xfffffffffffffa@@ d3, mov_eax_dword_ptr_[rsp+0x18], jmp_0xffffffffffffff42, lea_rcx_[rip+0x@@ 1b@@ 59@@ 1], mov_edx_0x2@@ 39, lea_rsi_[rip+0x19@@ 0@@ d8], mov_edi_2, xor_eax_eax, call_0x34@@ b6, jmp_0xffffffffffffff1f, call_0xffffffffffff1a@@ b@@ c
endbr64, push_rbp, xor_esi_esi, mov_rbp_rsp, push_r14, push_r12, push_rbx, mov_ebx_edi, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x28]_rax, xor_eax_eax, call_0xffffffffffff1c@@ ac, mov_r8d_eax, xor_eax_eax, test_r8d_r8d, jne_0x54, lea_rax_[rbp-0x40], mov_r8d_ebx, mov_rdi_rax, mov_r14_rax, lea_rcx_[rip+0x@@ 1b@@ 3c@@ 3], mov_edx_0x12, mov_esi_1, xor_eax_eax, mov_r12_rsp, call_0xffffffffffff1f@@ 4a, mov_ebx@@ _0x64, jmp_0xc, dec_ebx, je_0x36, xor_esi_esi, mov_rdi_r14, call_0xffffffffffff@@ 1dd@@ f, test_eax_eax, jne_0xfffffffffffffff0, mov_rdi_r14, call_0xffffffffffff1e@@ b3, mov_r@@ sp@@ _r12, mov_rdx_qword_ptr_[rbp-0x28], xor_rdx_qword_ptr_fs:[0x28], jne_0x15, lea_rsp_[rbp-0x@@ 18], pop_rbx, pop_r12, pop_r14, pop_rbp, ret, xor_eax_eax, mov_r@@ sp@@ _r12, jmp_0xffffffffffffffe0, call_0xffffffffffff1a@@ 0@@ 9
endbr64, push_rbp, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_dword_ptr_[rsp+4]_0, call_0xfffffffffffff56@@ f, test_rax_rax, je_0x28, mov_rbp_rax, mov_rdi_rax, lea_rcx_[r@@ sp+4], lea_rdx_[rip-0x@@ ae@@ d], lea_rsi_[rip+0x1b@@ 32@@ 3], call_0xfffffffffffff5a@@ c, mov_rdi_rbp, call_0xffffffffffff19@@ 74, mov_rdx_qword_ptr_[rsp+8], xor_rdx_qword_ptr_fs:[0x28], mov_eax_dword_ptr_[rsp+4], jne_8, add_rsp_0x10, pop_rbp, ret, call_0xffffffffffff19@@ 9@@ 5
endbr64, push_rbp, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_dword_ptr_[rsp+4]@@ _0xffffffff, call_0xfffffffffffff4@@ ff, test_rax_rax, je_0x28, mov_rbp_rax, mov_rdi_rax, lea_rcx_[r@@ sp+4], lea_rdx_[rip-0x@@ b@@ 9d], lea_rsi_[rip+0x1b@@ 2b@@ a], call_0xfffffffffffff5@@ 3c, mov_rdi_rbp, call_0xffffffffffff19@@ 04, mov_rdx_qword_ptr_[rsp+8], xor_rdx_qword_ptr_fs:[0x28], mov_eax_dword_ptr_[rsp+4], jne_8, add_rsp_0x10, pop_rbp, ret, call_0xffffffffffff19@@ 2@@ 5
endbr64, push_r12, mov_r12d_edi, push_rbp, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_dword_ptr_[rsp+4]_0, call_0xfffffffffffff48@@ a, mov_rbp_rax, mov_eax_4, test_rbp_rbp, je_0x2d, lea_rcx_[r@@ sp+4], lea_rdx_[rip-0x@@ a@@ 44], lea_rsi_[rip+0x1b@@ 24@@ 3], mov_rdi_rbp, call_0xfffffffffffff4c@@ 2, mov_rdi_rbp, call_0xffffffffffff18@@ 8a, mov_eax_dword_ptr_[rsp+4], test_eax_eax, je_0x1f, mov_rdx_qword_ptr_[rsp+8], xor_rdx_qword_ptr_fs:[0x28], jne_0x44, add_rsp_0x18, pop_rbp, pop_r12, ret, call_0xffffffffffff17@@ a0, mov_edi_dword_ptr_[rax], call_0xffffffffffff1d@@ 29, mov_r8_rax, mov_rax_qword_ptr_[rip+0x2@@ a0@@ 1a], mov_ecx_r12d, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x1b@@ 1f@@ 3], mov_esi_1, xor_eax_eax, call_0xffffffffffff1c@@ d6, mov_eax_dword_ptr_[rsp+4], jmp_0xffffffffffffffb0, call_0xffffffffffff18@@ 6@@ b
endbr64, push_r15, mov_r8d_edi, mov_r15_rsi, push_r14, lea_rcx_[rip+0x@@ 1b@@ 1d@@ 7], mov_esi_1, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x38, mov_qword_ptr_[rsp]_rdx, lea_rbp_[rsp+0x10], mov_rdi_rbp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_edx_0x1@@ 3, call_0xffffffffffff1d@@ 0b, mov_rdi_rbp, call_0xffffffffffff17@@ e3, test_rax_rax, je_0x113, mov_rbp_rax, xor_r12d_r12d, xor_ebx_ebx, xor_r13d_r13d, mov_rdi_rbp, call_0xffffffffffff1a@@ 5d, test_rax_rax, je_0xa5, cmp_byte_ptr_[rax+0x1@@ 2@@ ]_4, jne_0xffffffffffffffeb, lea_r14_[r@@ ax+0x13], call_0xffffffffffff1c@@ a5, mov_rsi_qword_ptr_[rax], mov_rax_r14, jmp_0xd, inc_rax, movsx_rcx@@ _byte_ptr_[rax], test_byte_ptr_[rsi@@ +rcx*@@ 2+1]_8, jne_0xfffffffffffffff4, test_cl_cl, jne_0xffffffffffffffc0, mov_edx_0xa, xor_esi_esi, mov_rdi_r14, call_0xffffffffffff19@@ 84, mov_rdx_rax, cmp_rbx_r12, jb@@ _0x3d, test_r12_r12, jne_0x8c, mov_esi_0x20, mov_r12d@@ _8, mov_rdi_r13, mov_qword_ptr_[rsp+8]_rdx, call_0xffffffffffff1a@@ bb, test_rax_rax, mov_rdx_qword_ptr_[rsp+8], je_0x82, cmp_rbx_r12, jae_0xffffffffffff@@ 1c@@ a1, mov_r13_rax, mov_dword_ptr_[r@@ 13+r@@ bx*@@ 4]_edx, mov_rdi_rbp, inc_rbx, call_0xffffffffffff19@@ c1, test_rax_rax, jne_0xffffffffffffff@@ 6a, mov_rdi_rbp, call_0xffffffffffff18@@ 0d, mov_rax_qword_ptr_[rsp], mov_qword_ptr_[r15@@ ]_r13, mov_qword_ptr_[rax]_rbx, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x28], xor_rbx_qword_ptr_fs:[0x28], jne_0x2d, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rsi_[r@@ 12*8], add_r12@@ _r12, jmp_0xffffffffffffff7a, mov_eax_0xffffffff, jmp_0xffffffffffffffc7, call_0xffffffffffff16@@ f1, mov_rdi_r13, call_0xffffffffffff15@@ 89, or_eax_0xffffffff, jmp_0xffffffffffffffb@@ 5
endbr64, push_r15, mov_r15_rdi, mov_edi_0x20, push_r14, mov_r14_rcx, push_r13, push_r12, push_rbp, push_rbx, mov_ebx_edx, sub_rsp_0x48, mov_qword_ptr_[rsp+0x18]_rsi, mov_dword_ptr_[rsp+0xc]_edx, mov_qword_ptr_[rsp+0x10]_rcx, mov_edx_0x1@@ 40, lea_rcx_[rip+0x@@ 1b0@@ 31], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, lea_rsi_[rip+0x18@@ c8@@ b], call_0x30@@ 70, cmp_qword_ptr_[rsp+0x18]_0, mov_eax_ebx, sete_dl, shr_eax_0x1f, or_dl_al, jne_0x@@ e8, test_r14_r14, je_0xdf, mov_esi_ebx, movsxd_rax_esi, mov_qword_ptr_[rsp]_rax, mov_ebx@@ _0x66, lea_r14_[rsp+0x20], lea_r13_[r@@ sp+0x18], lea_r12_[r@@ ip-0x@@ bc@@ 3], lea_rbp_[r@@ ip-0x@@ bf@@ a], jmp_0x1a, mov_rax_qword_ptr_[rsp+0x20], test_rax_rax, je_0x28, dec_ebx, je_0x24, cmp_rax_qword_ptr_[r@@ sp], je_0x66, mov_eax_dword_ptr_[r15+0x@@ 28], mov_rdx_r14, test_eax_eax, mov_rax_rbp, cmovne_rax@@ _r12, mov_rsi_r13, mov_rdi_r15, call_rax, test_eax_eax, jns_0xffffffffffffff@@ d2, xor_eax_eax, lea_rcx_[rip+0x@@ 1b0@@ cf], mov_edx_0x1@@ 4d, lea_rsi_[rip+0x18@@ bf@@ 6], mov_edi_2, call_0x2@@ fd@@ 6, mov_eax_0xffffffff, mov_rbx_qword_ptr_[rsp+0x38], xor_rbx_qword_ptr_fs:[0x28], jne_0x52, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[rsp+0x10], mov_r8_qword_ptr_[rsp+0x28], mov_r9d_dword_ptr_[rsp+0xc], mov_qword_ptr_[rax]@@ _r8, lea_rcx_[rip+0x@@ 1a@@ f4@@ e], xor_eax_eax, mov_edx_0x1@@ 55, lea_rsi_[rip+0x18@@ b@@ 9c], mov_edi_2, call_0x2@@ f7@@ c, xor_eax_eax, jmp_0xffffffffffffffa9, mov_eax_0xffffffff, jmp_0xffffffffffffffa2, call_0xffffffffffff15@@ 7@@ c
endbr64, mov_rcx_rdx, mov_edx_0x1@@ 5, jmp_0xfffffffffffffe@@ 9@@ 4
endbr64, push_r13, mov_r9_rsi, mov_edx_0x2@@ 5c, push_r12, lea_rcx_[rip+0x@@ 1a@@ f0@@ 5], mov_r12_rsi, push_rbp, lea_rsi_[rip+0x18@@ b@@ 39], mov_rbp_rdi, sub_rsp_0x40, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_r8d_dword_ptr_[r@@ di+0x18], mov_edi_0x20, call_0x2@@ ef@@ e, lea_rdx_[rbp+0x@@ 12@@ 88], mov_rsi_r12, mov_rdi_rbp, call_0xffffffffffffff@@ 8c, cmp_eax_-1, je_0xb4, lea_r13_[rsp+0x10], mov_rsi_r13, mov_rdi_rbp, call_0xfffffffffffff85@@ 3, mov_r12d_eax, test_eax_eax, js@@ _0x69, mov_rsi_qword_ptr_[rsp+0x20], lea_rdx_[rsp+8], mov_rdi_rbp, mov_qword_ptr_[rsp+8]_rsi, call_0x2@@ 32@@ 5, test_eax_eax, js_0x7@@ 6, mov_rsi_qword_ptr_[rsp+8], xor_edx_edx, mov_rdi_rbp, call_0x2@@ 78@@ 2, lea_rcx_[rip+0x@@ 2a@@ 13@@ 6], mov_qword_ptr_[rax]_rcx, mov_rsi_r13, mov_rdi_rbp, call_0xfffffffffffff47@@ d, xor_r12d_r12d, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x6b, add_rsp_0x40, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, lea_rcx_[rip+0x@@ 1a@@ f8@@ 1], mov_edx_0x2@@ 66, lea_rsi_[rip+0x18@@ a@@ 68], mov_edi_2, xor_eax_eax, call_0x2e@@ 46, jmp_0xffffffffffffffbc, mov_r12d_0xffffffff, jmp_0xffffffffffffffad, mov_r12d_eax, lea_rcx_[rip+0x@@ 1a@@ f2@@ e], mov_edx_0x2@@ 5f, lea_rsi_[rip+0x18@@ a@@ 35], mov_edi_2, xor_eax_eax, call_0x2e@@ 13, jmp_0xffffffffffffff89, call_0xffffffffffff14@@ 1@@ c
endbr64, push_r12, mov_r12d_esi, push_rbp, mov_ebp_edi, sub_rsp_8, call_0xffffffffffff13@@ 00, mov_dword_ptr_[rax]_0, mov_edx_r12d, mov_esi_ebp, mov_edi_0x@@ c8, xor_eax_eax, call_0xffffffffffff15@@ a9, add_rsp_8, pop_rbp, pop_r12, ret
endbr64, jmp_0xffffffffffffd@@ 8@@ 1@@ c
endbr64, push_r15, lea_rcx_[rip+0x@@ 1a@@ d@@ 9d], push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x58, mov_qword_ptr_[rsp+0x10]_rsi, mov_qword_ptr_[rsp+0x18]_rdx, mov_r8d_dword_ptr_[r@@ di+0x18], lea_r15_[rsp+0x@@ 30], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, mov_esi_1, mov_rdi_r15, mov_edx_0x1@@ 3, call_0xffffffffffff18@@ 64, xor_esi_esi, xor_eax_eax, mov_rdi_r15, call_0xffffffffffff16@@ f8, cmp_eax_-1, je_0x11a, mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp]_0, mov_r14d_eax, lea_r13_[rsp+0x20], lea_r12_[r@@ ip-0x@@ 9c@@ 6], lea_rbp_[r@@ ip-0x@@ 9@@ fd], mov_eax_dword_ptr_[rbx+0x28], pxor_xmm0_xmm0, test_eax_eax, mov_rax_rbp, cmovne_rax@@ _r12, mov_rsi_r13, mov_edi_r14d, movaps_xmmword_ptr_[rsp+0x20]_xmm0, call_rax, test_eax_eax, js_0x@@ 94, mov_rax_qword_ptr_[rsp+0x20], cmp_rax@@ _7, je_0x75, cmp_rax@@ _9, je_0x5f, test_rax_rax, jne_0xffffffffffffffc7, mov_rax_qword_ptr_[rsp+0x10], test_rax_rax, je_9, mov_rcx_qword_ptr_[rsp], mov_qword_ptr_[rax]_rcx, mov_rax_qword_ptr_[rsp+0x18], xor_r12d_r12d, test_rax_rax, je_0xa, mov_rcx_qword_ptr_[rsp+8], mov_qword_ptr_[rax]_rcx, mov_edi_r14d, call_0xffffffffffff13@@ 8f, mov_rax_qword_ptr_[rsp+0x48], xor_rax_qword_ptr_fs:[0x28], jne_0xb0, add_rsp_0x58, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp]_rax, jmp_0xffffffffffffff64, mov_rax_qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp+8]_rax, jmp_0xffffffffffffff53, call_0xffffffffffff11@@ 80, mov_edi_dword_ptr_[rax], mov_r12d_0xffffffff, call_0xffffffffffff@@ 170@@ 3, mov_r8_rax, mov_rax_qword_ptr_[rip+0x2@@ 99@@ f4], mov_rcx_r15, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x1a@@ c4@@ f], mov_esi_1, xor_eax_eax, call_0xffffffffffff16@@ b0, jmp_0xffffffffffffff79, call_0xffffffffffff@@ 114@@ 6, mov_edi_dword_ptr_[rax], mov_r12d_0xffffffff, call_0xffffffffffff16@@ c9, mov_r8_rax, mov_rax_qword_ptr_[rip+0x29@@ 9b@@ a], mov_rcx_r15, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x1a@@ c@@ 15], mov_esi_1, xor_eax_eax, call_0xffffffffffff16@@ 76, jmp_0xffffffffffffff47, call_0xffffffffffff@@ 120@@ c
endbr64, mov_qword_ptr_[rdi+0x1@@ 28@@ 8]_0, mov_dword_ptr_[rdi+0x1@@ 29@@ 0]_0, xor_eax_eax, ret
endbr64, ret
endbr64, movdqu_xmm0_xmmword_ptr_[r@@ si+0x1@@ 288], xor_eax_eax, movups_xmmword_ptr_[r@@ di+0x1@@ 28@@ 8]_xmm0, ret
endbr64, xor_eax_eax, ret
endbr64, push_rbx, xor_ecx_ecx, mov_rbx_rdi, mov_esi_dword_ptr_[r@@ di+0x18], xor_eax_eax, mov_edx_0x80, mov_edi_3, call_0xffffffffffff14@@ 57, cmp_word_ptr_[r@@ bx+0x1@@ 26@@ 8]_3, je_0xa, pop_rbx, ret, mov_eax_eax, pop_rbx, ret
endbr64, cmp_word_ptr_[r@@ di+0x1@@ 26@@ 8]_3, mov_rcx_rsi, jne_4, mov_ecx_esi, mov_esi_dword_ptr_[r@@ di+0x18], mov_edx_0x80, mov_edi_6, xor_eax_eax, jmp_0xffffffffffff@@ 140@@ e
endbr64, push_rbp, xor_ecx_ecx, mov_rbp_rdi, push_rbx, mov_edx_0x@@ 98, xor_eax_eax, sub_rsp_8, mov_esi_dword_ptr_[r@@ di+0x18], mov_edi_3, call_0xffffffffffff13@@ e2, mov_rbx_rax, cmp_rax_-1, je_0x1e, mov_eax_ebx, cmp_word_ptr_[r@@ bp+0x@@ 12@@ 68@@ ]_3, cmovne_rax@@ _rbx, add_rsp_8, pop_rbx, pop_rbp, ret, call_0xffffffffffff0@@ fe8, mov_edi_dword_ptr_[rax], test_edi_edi, je_0xffffffffffffffdb, call_0xffffffffffff15@@ 6d, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x2@@ 98@@ 5e], lea_rdx_[rip+0x1a@@ c@@ 17], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xffffffffffff15@@ 1d, xor_eax_eax, jmp_0xffffffffffffffc@@ 0
endbr64, push_rbp, mov_rdx_rsi, mov_rbp_rdi, push_rbx, xor_ecx_ecx, xor_eax_eax, sub_rsp_8, mov_esi_dword_ptr_[r@@ di+0x18], mov_edi_1, call_0xffffffffffff13@@ 64, mov_rbx_rax, cmp_rax_-1, je_0x18, mov_eax_ebx, cmp_word_ptr_[r@@ bp+0x@@ 12@@ 68@@ ]_3, cmovne_rax@@ _rbx, add_rsp_8, pop_rbx, pop_rbp, ret, call_0xffffffffffff0@@ f70, mov_edi_dword_ptr_[rax], test_edi_edi, je_0xffffffffffffffe1, call_0xffffffffffff14@@ f5, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x2@@ 97@@ e6], lea_rdx_[rip+0x1a@@ bb@@ f], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xffffffffffff14@@ a5, xor_eax_eax, jmp_0xffffffffffffffc@@ 6
endbr64, cmp_word_ptr_[r@@ di+0x1@@ 26@@ 8]_3, mov_rcx_rsi, jne_4, mov_ecx_esi, mov_rdx_qword_ptr_[r@@ di+0x1@@ 250], mov_esi_dword_ptr_[r@@ di+0x18], xor_eax_eax, mov_edi_4, jmp_0xffffffffffff@@ 12@@ d@@ c
endbr64, mov_rdx_qword_ptr_[rdi+8], xor_eax_eax, test_rdx_rdx, je_0xa, xor_eax_eax, cmp_dword_ptr_[r@@ dx+0x1@@ 8]_esi, sete_al, ret
endbr64, mov_rdx_qword_ptr_[r@@ di+0x1@@ 270], mov_eax_1, test_rdx_rdx, je_0x12, lea_rax_[rip+0x@@ e@@ 64], cmp_qword_ptr_[rdx@@ ]_rax, setne_al, movzx_eax_al, ret
endbr64, xor_eax_eax, ret
endbr64, mov_rcx_qword_ptr_[rdx], mov_eax_1, cmp_qword_ptr_[rdi+@@ 8]_rcx, je_8, ret, movzx_eax_byte_ptr_[r@@ di+4], mov_qword_ptr_[rdx+@@ 8]_rsi, and_eax_0xf, cmp_al_0xa, setne_al, movzx_eax_al, ret
endbr64, push_rbx, lea_rcx_[rip+0x@@ 1a@@ af@@ 4], mov_edx_0x2@@ a1, mov_rbx_qword_ptr_[rdi+0x10], lea_rsi_[rip+0x17@@ 77@@ 6], mov_edi_1, xor_eax_eax, call_0x2@@ 93d, mov_esi_dword_ptr_[r@@ bx+0x18], xor_ecx_ecx, xor_edx_edx, mov_edi_7, xor_eax_eax, pop_rbx, jmp_0xffffffffffff@@ 120@@ 9
endbr64, sub_rsp_8, cmp_qword_ptr_[rsi+0x@@ 20]_0, je_0x2b, cmp_qword_ptr_[rsi+0x@@ 28]_0, je_0x5c, lea_rcx_[rip+0x@@ 1b@@ 2a@@ 3], mov_edx_0x2@@ 69, lea_rsi_[rip+0x17@@ 7@@ 29], lea_rdi_[rip+0x1a@@ c@@ 70], call_0xffffffffffff0@@ f@@ 80, xor_eax_eax, add_rax_4, mov_r8_qword_ptr_[r@@ si+0x10], mov_qword_ptr_[rsi@@ +rax*@@ 8]_rdi, xor_edx_edx, mov_rsi_rdi, mov_rdi_r8, call_0x2@@ 1b@@ 2, mov_rdi_rax, lea_rsi_[rip+0x2@@ 9b@@ 83], call_0x1@@ fb@@ 3, xor_eax_eax, add_rsp_8, ret, mov_eax_1, jmp_0xffffffffffffffc@@ 5
endbr64, test_rdi_rdi, je_0xf, mov_r8_qword_ptr_[r@@ di+8], cmp_qword_ptr_[r@@ 8+0x1@@ 28@@ 0]_rsi, je_0xc, xor_eax_eax, ret, cmp_dword_ptr_[rdi+0x1@@ 0]@@ _0xb, jne_0xfffffffffffffff2, sub_rsp_8, mov_rsi_qword_ptr_[r@@ di+0x18], mov_rdi_r8, call_0xfffffffffffffd@@ 1f, xor_eax_eax, add_rsp_8, ret
endbr64, mov_r8_rdi, sub_rsp_8, mov_rdi_rsi, mov_rsi_r8, call_0x1@@ dc@@ f, mov_eax_1, add_rsp_8, ret
endbr64, cmp_rdi_rsi, je_0x19, sub_rsp_8, call_0xffffffffffff3e@@ f3, mov_eax_1, add_rsp_8, ret, mov_eax_1, ret
push_rbp, mov_rsi_rdi, mov_rbp_rdi, push_rbx, lea_rdi_[rip-0x@@ 9f], sub_rsp_8, call_0xffffffffffffca@@ 5d, mov_rdi_rbp, call_0x2@@ 4f@@ 5, xor_ecx_ecx, lea_rdx_[rip-0x@@ 79], xor_esi_esi, mov_rdi_rbp, call_0xffffffffffff3d@@ 52, lea_rax_[rip+0x@@ 2b@@ 2b@@ e], mov_rbx_qword_ptr_[rax], test_rbx_rbx, je_0x26, mov_edi_dword_ptr_[rbx], call_0xffffffffffff2f@@ 56, test_rax_rax, je_0xb, cmp_qword_ptr_[rax+0x1@@ 28@@ 0]_rbp, je_0x45, mov_rbx_qword_ptr_[rbx+8], test_rbx_rbx, jne_0xffffffffffffffe4, xor_esi_esi, mov_rdi_rbp, mov_rcx_rbp, lea_rdx_[rip-0x@@ a5], call_0xffffffffffff3@@ 26@@ b, mov_rdi_rbp, call_0xffffffffffff3@@ 5e@@ 3, test_rbp_rbp, je_0x13, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffff@@ 3e@@ 40, add_rsp_8, pop_rbx, pop_rbp, ret, xor_ecx_ecx, lea_rdx_[rip+0xb@@ 17], xor_esi_esi, mov_rdi_rbp, call_0xffffffffffff@@ 32@@ 32, jmp_0xffffffffffffffb@@ 3
push_r12, xor_eax_eax, lea_rcx_[rip+0x@@ 1a@@ af@@ 5], push_rbp, mov_edx_0x2@@ b1, mov_rbp_rsi, push_rbx, lea_rsi_[rip+0x17@@ 56@@ 6], mov_rbx_rdi, mov_r12_qword_ptr_[r@@ di+0x10], mov_edi_0x10, mov_r8d_dword_ptr_[r@@ 12+0x18], call_0x27@@ 23, mov_rsi_qword_ptr_[rbx+0x18], mov_eax_dword_ptr_[r@@ si+0x1c], test_eax_eax, jne_0x15, mov_rdi_rbx, call_rbp, mov_dword_ptr_[rbx+0x@@ 48]_1, pop_rbx, pop_rbp, pop_r12, ret, mov_rdi_r12, call_0x86@@ ed, jmp_0xffffffffffffffe@@ 5
endbr64, lea_rsi_[rip+0xd@@ 55], jmp_0xffffffffffffff9@@ 5
endbr64, mov_rdi_qword_ptr_[rdi+0x@@ 50], jmp_0xffffffffffff@@ 0@@ b8@@ 8
endbr64, mov_rdi_qword_ptr_[rdi+0x10], jmp_0xffffffffffff@@ 0@@ b7@@ 8
test_rdi_rdi, je_0x75, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, or_byte_ptr_[r@@ di+@@ 4]_2, mov_rax_qword_ptr_[rsi], cmp_dword_ptr_[rax+0x1@@ 0]_1, je_0xc, add_rsp_8, pop_rbx, pop_rbp, ret, cmp_dword_ptr_[rax+0x1@@ 8]@@ _0x13, jne_0xfffffffffffffff2, mov_r8d_dword_ptr_[r@@ di], xor_eax_eax, lea_rcx_[rip+0x@@ 1a@@ 8@@ 32], mov_edx_0x1@@ c6, lea_rsi_[rip+0x17@@ 4a@@ c], mov_edi_0x10, call_0x2@@ 67@@ 5, movzx_r8d_byte_ptr_[r@@ bx+4], mov_eax_r8d, and_eax@@ _5, cmp_al_1, jne_0x23, or_r8d@@ _4, mov_byte_ptr_[rbx+@@ 4]@@ _r8b, mov_qword_ptr_[rbp]_0, jmp_0xffffffffffffffaf, ret, mov_rax_qword_ptr_[rip+0x29@@ 3d@@ 9], mov_ecx_dword_ptr_[rbx], mov_rdi_qword_ptr_[rax], mov_r9d_r8d, add_rsp_8, shl@@ _r9d@@ _0x1d, shl_r8d@@ _0x1f, pop_rbx, sar@@ _r9d@@ _0x1f, sar@@ _r8d@@ _0x1f, lea_rdx_[rip+0x1a@@ 9e@@ d], mov_esi_1, xor_eax_eax, pop_rbp, jmp_0xffffffffffff@@ 10@@ 7@@ d
test_rcx_rcx, je_0xad, push_rbx, mov_rbx_rdx, mov_eax_dword_ptr_[r@@ cx+0x10], lea_edx_[rax@@ -2], cmp_edx_1, setbe@@ _dl, test_eax_eax, sete_al, or_dl_al, jne_7, test_rbx_rbx, jne_0x43, mov_rsi_qword_ptr_[rsi], test_rsi_rsi, je_0x29, mov_rax_qword_ptr_[rdi], xor_edx_edx, mov_edi_dword_ptr_[rax], test_edi_edi, je_0xe, movzx_ecx_byte_ptr_[r@@ ax+4], and_ecx@@ _5, cmp_cl@@ _1, je_0x18, inc_rdx, add_rax_8, cmp_rdx_rsi, jne_0xffffffffffffffe4, mov_eax_1, pop_rbx, ret, xor_eax_eax, pop_rbx, ret, test_byte_ptr_[r@@ bx+@@ 4]_1, je_0xffffffffffffff@@ bb, mov_r8d_dword_ptr_[r@@ bx], lea_rcx_[rip+0x@@ 1a@@ 9a@@ 0], mov_edx_0x200, lea_rsi_[rip+0x17@@ 3a@@ e], mov_edi_0x10, xor_eax_eax, call_0x2@@ 57@@ 5, mov_esi_dword_ptr_[rbx], xor_ecx_ecx, xor_edx_edx, mov_edi_0x18, xor_eax_eax, call_0xffffffffffff0@@ e@@ 43, xor_eax_eax, pop_rbx, ret, mov_rsi_qword_ptr_[rsi], test_rsi_rsi, je_0x28, mov_rax_qword_ptr_[rdi], xor_edx_edx, mov_ecx_dword_ptr_[rax], test_ecx_ecx, je_0xe, movzx_ecx_byte_ptr_[r@@ ax+4], and_ecx@@ _5, cmp_cl@@ _1, je_0x14, inc_rdx, add_rax_8, cmp_rdx_rsi, jne_0xffffffffffffffe4, mov_eax_1, ret, xor_eax_eax, ret
cmp_qword_ptr_[rsi@@ ]_0, je_0x6c, push_r13, lea_r13_[r@@ ip-0x@@ 4e@@ f], push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, push_rbx, xor_ebx_ebx, sub_rsp_8, jmp_0x12, inc_rbx, cmp_rbx_qword_ptr_[r@@ bp], jae_0x@@ 31, mov_rax_qword_ptr_[r12], lea_rax_[rax+r@@ bx*8], movsxd_rsi_dword_ptr_[r@@ ax], test_esi_esi, je_0xffffffffffffffea, test_byte_ptr_[r@@ ax+@@ 4]_2, jne_0xffffffffffffffe4, mov_rdi_r13, call_0xffffffffffffc7@@ 27, test_rax_rax, jne_0xffffffffffffffd7, add_rsp_8, pop_rbx, pop_rbp, pop_r12, xor_eax_eax, pop_r13, ret, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_eax_1, pop_r13, ret, mov_eax_1, ret
push_rax, pop_rax, lea_rcx_[rip+0x@@ 1a@@ de@@ f], mov_edx_0x@@ bf, lea_rsi_[rip+0x17@@ 2a@@ d], lea_rdi_[rip+0x1a@@ e@@ 7c], sub_rsp_8, call_0xffffffffffff0@@ b0@@ 0
endbr64, push_r14, mov_edx_0x3@@ b9, lea_rcx_[rip+0x@@ 1a@@ 88@@ e], push_r13, xor_eax_eax, mov_r13_rdi, push_r12, mov_edi_0x10, push_rbp, sub_rsp_0x18, mov_r12_qword_ptr_[r@@ si+8], mov_r9d_dword_ptr_[r@@ si+0x10], mov_r8d_dword_ptr_[r@@ 12+0x18], mov_qword_ptr_[rsp+8]_rsi, lea_rsi_[rip+0x17@@ 25@@ 4], mov_rbp_qword_ptr_[r@@ 12+0x1@@ 280], call_0x24@@ 1a, mov_edx_dword_ptr_[r@@ 12+0x18], test_edx_edx, je_0xd3, mov_rcx_qword_ptr_[r@@ 13+0x18], test_rcx_rcx, je_0x89, mov_r12_qword_ptr_[r@@ 13+0x10], xor_eax_eax, jmp_0x11, inc_rax, add_r12_8, cmp_rax_rcx, je_0x6e, cmp_edx_dword_ptr_[r@@ 12], jne_0xfffffffffffffff0, lea_rsi_[rsp+8], mov_rdi_r12, call_0xfffffffffffffd@@ 16, mov_rcx_qword_ptr_[rsp+8], test_rcx_rcx, je_8, cmp_dword_ptr_[r@@ cx+0x1@@ 0]@@ _0xb, je_0x73, lea_r14_[r@@ 13+0x10], add_r13@@ _0x18, mov_rdx_r12, mov_rsi_r13, mov_rdi_r14, call_0xfffffffffffffd@@ b0, test_eax_eax, jne_0x39, mov_rax_qword_ptr_[rsp+8], test_rax_rax, je_0x18, mov_edx_dword_ptr_[rax+0x10], lea_ecx_[rdx@@ -2], cmp_ecx_1, jbe_0x@@ d, test_edx_edx, mov_edx_0, cmovne_rax_rdx, add_rsp_0x18, pop_rbp, pop_r12, pop_r13, pop_r14, ret, xor_r12d_r12d, jmp_0xffffffffffffff97, mov_rsi_r13, mov_rdi_r14, call_0xfffffffffffffe@@ 5a, test_eax_eax, je_0xffffffffffffff@@ bc, mov_rdi_rbp, call_0xfffffffffffffb@@ 4e, jmp_0xffffffffffffffb2, mov_rdi_rcx, mov_rsi_rbp, call_0xfffffffffffffaa@@ a, mov_rcx_qword_ptr_[rsp+8], jmp_0xffffffffffffff7f, call_0xfffffffffffffea@@ b
push_rbp, push_rbx, sub_rsp_8, mov_rax_qword_ptr_[rdi+0x1@@ 280], mov_rbx_qword_ptr_[r@@ ax+0x1@@ 270], test_rbx_rbx, je_0x47, lea_rax_[rip+0x@@ 9b@@ 0], cmp_qword_ptr_[r@@ bx@@ ]_rax, jne_0x5a, mov_rsi_qword_ptr_[rbx+0x20], mov_rbp_rdi, test_rsi_rsi, je_0xf, call_0x1@@ da@@ f, mov_qword_ptr_[rbx+0x20]_0, mov_rsi_qword_ptr_[rbx+0x28], test_rsi_rsi, je_0x12, mov_rdi_rbp, call_0x1d@@ 96, mov_qword_ptr_[rbx+0x28]_0, add_rsp_8, pop_rbx, pop_rbp, ret, lea_rcx_[rip+0x@@ 1a@@ c4@@ b], mov_edx_0x2@@ 41, lea_rsi_[rip+0x1@@ 70@@ f1], lea_rdi_[rip+0x1a@@ 47@@ c], call_0xffffffffffff0@@ 948, lea_rcx_[rip+0x@@ 1a@@ c@@ 2c], mov_edx_0x2@@ 42, lea_rsi_[rip+0x1@@ 70@@ d2], lea_rdi_[rip+0x1a@@ 70@@ 9], call_0xffffffffffff0@@ 92@@ 9
endbr64, mov_rdi_rsi, jmp_0xffffffffffffff5@@ 9
push_r14, push_r13, push_r12, mov_r12_rsi, push_rbp, push_rbx, mov_rbx_rdi, cmp_qword_ptr_[rdi+0x@@ 58]_0, je_0x38, xor_ebp_ebp, lea_r14_[rip+0x@@ 1a@@ 67@@ a], mov_rax_qword_ptr_[rbx+0x50], lea_r13_[r@@ bp*8], add_rax_r13, mov_r8d_dword_ptr_[rax], test_r8d_r8d, je_0xd, movzx_eax_byte_ptr_[r@@ ax+4], and_eax_7, cmp_al_3, je_0x38, inc_rbp, cmp_rbp@@ _qword_ptr_[r@@ bx+0x@@ 58], jb_0xffffffffffffff@@ d7, mov_rax_qword_ptr_[r12], test_rax_rax, je_8, cmp_dword_ptr_[rax+0x1@@ 0]@@ _0xb, je_0x58, mov_rdi_qword_ptr_[rbx+0x10], call_0xfffffffffffffe@@ f2, mov_qword_ptr_[rbx+0x18]_0, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rcx_r14, xor_eax_eax, mov_edx_0x1@@ e3, lea_rsi_[rip+0x1@@ 70@@ 29], mov_edi_0x10, call_0x2@@ 1f@@ 2, mov_rax_qword_ptr_[rbx+0x50], xor_ecx_ecx, mov_esi_dword_ptr_[r@@ ax+r@@ 13], xor_edx_edx, mov_edi_0x18, xor_eax_eax, call_0xffffffffffff0a@@ ba, jmp_0xffffffffffffff97, mov_qword_ptr_[r12]_0, jmp_0xffffffffffffffa@@ 2
push_rbx, mov_rbx_rsi, call_0xffffffffffffe@@ ea@@ c, test_rbx_rbx, je_4, mov_dword_ptr_[rbx]_eax, cmp_eax_5, ja_0xffffffffffff@@ 0@@ c@@ fe, lea_rdx_[rip+0x1a@@ a@@ 90], mov_eax_eax, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax
endbr64, mov_edi_dword_ptr_[r@@ di+0x18], test_edi_edi, je_0x3d, mov_rcx_qword_ptr_[r@@ si+8], test_rcx_rcx, je_0x24, mov_rax_qword_ptr_[rsi], xor_edx_edx, jmp_0x13, inc_rdx, add_rax_8, cmp_rdx_rcx, je_0xc, cmp_edi@@ _dword_ptr_[r@@ ax], jne_0xfffffffffffffff2, test_byte_ptr_[r@@ ax+@@ 4]_8, jne_0xc, xor_esi_esi, jmp_0xffffffffffffff78, mov_eax_1, ret, push_rax, call_0xfffffffffffffc@@ 9@@ 9
endbr64, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x10, mov_ebx_dword_ptr_[r@@ di+0x18], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, test_ebx_ebx, je_0x1@@ b4, mov_rcx_qword_ptr_[r@@ si+8], mov_r12_rdi, mov_rdi_qword_ptr_[rsi], mov_r13_rsi, mov_rdx_rdi, xor_esi_esi, test_rcx_rcx, jne_0x20, jmp_0x1@@ 83, inc@@ _rsi, add_rdx_8, cmp_rsi_rcx, je_0x106, mov_rbp_rdx, cmp_ebx_dword_ptr_[r@@ dx], jne_0xffffffffffffffeb, cmp_dword_ptr_[r@@ 12@@ ]_1, je_0x6e, mov_edi_dword_ptr_[r@@ 12+0x18], lea_rsi_[rsp+4], call_0xfffffffffffffee@@ 8, cmp_eax_1, je_0x5a, movzx_eax_byte_ptr_[r@@ bp+4], test_al_1, je_0xc, test_al_4, je_0x4e, and_eax_0xfffffffb, mov_byte_ptr_[rbp+@@ 4]_al, cmp_dword_ptr_[rsp+@@ 4]_3, je_0x97, mov_edi_dword_ptr_[r@@ 12+0x18], mov_esi_0x1@@ 3, call_0xfffffffffffff27@@ 7, test_eax_eax, js@@ _0x50, mov_r8d_dword_ptr_[r@@ 12+0x18], lea_rcx_[rip+0x@@ 1a@@ 24@@ f], mov_edx_0x1@@ 3f, lea_rsi_[rip+0x16@@ e@@ 88], mov_edi_0x10, xor_eax_eax, call_0x20@@ 4f, or_byte_ptr_[r@@ bp+@@ 4]_1, mov_eax_1, mov_rdi_qword_ptr_[rsp+8], xor_rdi_qword_ptr_fs:[0x28], jne_0x@@ f1, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rax_qword_ptr_[rip+0x2@@ 8d@@ b9], mov_ecx_dword_ptr_[r@@ 12+0x18], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x1a@@ 4b@@ 2], mov_esi_1, xor_eax_eax, call_0xffffffffffff0a@@ 73, mov_eax_1, jmp_0xffffffffffffffb8, mov_rdi_qword_ptr_[r@@ 12+0x1@@ 280], xor_ecx_ecx, xor_esi_esi, lea_rdx_[rip-0x@@ 9f@@ 3], call_0xffffffffffff2a@@ ad, test_rax_rax, je_0xffffffffffffff@@ 54, or_byte_ptr_[r@@ bp+@@ 4]_8, mov_eax_1, jmp_0xffffffffffffff85, cmp_qword_ptr_[r13+0x1@@ 0]_rsi, jne_0x2b, lea_r14_[r@@ si+r@@ si], shl_rsi_4, mov_rbp_qword_ptr_[r@@ 12+0x1@@ 280], call_0xffffffffffff0@@ 8f@@ a, mov_rdi_rax, test_rax_rax, je_0x29, mov_qword_ptr_[r13]_rax, mov_qword_ptr_[r13+0x1@@ 0]_r14, mov_rcx_qword_ptr_[r@@ 13+8], lea_rbp_[r@@ di@@ +rcx*8], lea_rax_[r@@ cx+1], mov_qword_ptr_[r13+8]_rax, mov_dword_ptr_[rbp+@@ 4]_0, mov_dword_ptr_[rbp@@ ]_ebx, jmp_0xfffffffffffffe@@ c2, lea_rdi_[rip+0x1a@@ 140], call_0xffffffffffff0@@ 95@@ f, mov_rdi_rbp, call_0xffffffffffff2d@@ b7, xor_eax_eax, jmp_0xffffffffffffff1f, cmp_qword_ptr_[r13+0x1@@ 0]_0, jne_0xffffffffffffffc5, mov_esi_0x20, mov_r14d@@ _4, jmp_0xffffffffffffff97, call_0xfffffffffffffa@@ b7, call_0xffffffffffff0@@ 55@@ 2
push_r13, push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, call_0xfffffffffffff3@@ 90, mov_rdi_rbp, mov_r13_qword_ptr_[r@@ bp+0x10], mov_r12_rax, call_0x1@@ 98@@ 1, sub_rsp_8, push_r12, mov_r8_rax, mov_rax_qword_ptr_[rip+0x2@@ 8c@@ 9c], mov_ecx_dword_ptr_[r@@ bx+0x18], mov_rdi_qword_ptr_[rax], mov_r9_r13, mov_esi_1, lea_rdx_[rip+0x1a@@ 3b@@ 7], xor_eax_eax, call_0xffffffffffff0@@ 95@@ 5, mov_rsi_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rbx+0x1@@ 280], add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, jmp_0x1@@ 97@@ b
endbr64, mov_eax_dword_ptr_[rip+0x2@@ ba@@ d6], test_eax_eax, je_4, ret, push_rbx, lea_rdi_[rip+0x1a@@ 0@@ a8], mov_dword_ptr_[rip+0x2@@ ba@@ be@@ ]_1, mov_ebx_esi, call_0xffffffffffff0@@ 35@@ c, cmp_eax_1, je_0xc, cmp_ebx_1, je_0x2f, pop_rbx, ret, mov_rax_qword_ptr_[rip+0x2@@ 8c@@ 21], mov_edx_0x@@ d4, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x1a@@ 37@@ 5], call_0xffffffffffff0@@ 8b@@ d, jmp_0xffffffffffffffd6, mov_rax_qword_ptr_[rip+0x2@@ 8b@@ f9], mov_edx_0x@@ dd, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x1a@@ 42@@ 5], pop_rbx, jmp_0xffffffffffff@@ 0@@ 89@@ 4
endbr64, push_rbp, call_0xffffffffffff0@@ 3e@@ b, mov_r8d_eax, lea_rcx_[rip+0x@@ 1a0@@ 28], xor_eax_eax, mov_edx_0x5@@ 3, lea_rsi_[rip+0x16@@ c@@ 40], mov_edi_0x10, call_0x1@@ e0@@ 9, xor_ecx_ecx, xor_edx_edx, xor_esi_esi, xor_edi_edi, xor_eax_eax, call_0xffffffffffff0@@ 6d@@ a, test_rax_rax, js@@ _4, pop_rbp, ret, call_0xffffffffffff0@@ 2f@@ e, mov_ebp_dword_ptr_[rax], lea_rdi_[rip+0x19@@ ff@@ d], call_0xffffffffffff0@@ 7d@@ 0, call_0xffffffffffff0@@ 3@@ 9b, mov_edi_eax, mov_esi_ebp, call_0xffffffffffffff@@ 12, mov_edi_1, call_0xffffffffffff0@@ 80@@ 8
endbr64, push_rbx, xor_esi_esi, mov_edx_0x4@@ 0000000, mov_ebx_edi, call_0xffffffffffff0@@ 74@@ 2, cmp_eax_ebx, jne_6, xor_eax_eax, pop_rbx, ret, lea_rdi_[rip+0x19@@ fc@@ a], call_0xffffffffffff0@@ 78@@ e, mov_eax_0xffffffff, pop_rbx, ret
endbr64, push_rbp, xor_eax_eax, mov_ebp_edi, mov_r8d_edi, lea_rcx_[rip+0x@@ 19@@ f@@ ea], mov_edx_0x7@@ 1, lea_rsi_[rip+0x16@@ ba@@ 3], mov_edi_0x10, call_0x1d@@ 6c, xor_ecx_ecx, xor_edx_edx, xor_eax_eax, mov_esi_ebp, mov_edi_0x10, call_0xffffffffffff0@@ 6@@ 3a, test_rax_rax, js_0x1@@ 2, mov_edi_ebp, pop_rbp, jmp_0xffffffffffffff8d, mov_eax_0xffffffff, pop_rbp, ret
endbr64, test_byte_ptr_[rdi+0x@@ 30]@@ _0x80, je_8, ret, push_rbp, xor_eax_eax, lea_rcx_[rip+0x@@ 19@@ f5@@ 5], push_rbx, mov_edx_0x8@@ 2, lea_rsi_[rip+0x16@@ b@@ 3b], sub_rsp_8, mov_ebp_dword_ptr_[r@@ di+0x18], mov_rbx_rdi, mov_r8d_ebp, mov_edi_0x10, call_0x1c@@ f7, xor_edx_edx, xor_eax_eax, mov_ecx@@ _0x1f, mov_esi_ebp, mov_edi_0x4@@ 200, call_0xffffffffffff0@@ 5c@@ 2, test_rax_rax, js_0x1@@ a, or_dword_ptr_[rbx+0x@@ 30]@@ _0x80, add_rsp_8, pop_rbx, pop_rbp, ret, xor_edx_edx, xor_eax_eax, mov_ecx@@ _0x1f, mov_esi_ebp, mov_edi_0x1@@ 5, call_0xffffffffffff0@@ 5@@ 90, test_rax_rax, jns_0xffffffffffffff@@ d0, add_rsp_8, pop_rbx, lea_rdi_[rip+0x19@@ ef@@ 3], pop_rbp, jmp_0xffffffffffff@@ 0@@ 68@@ 9
endbr64, push_rbp, mov_r8d_edi, mov_ebp_edi, lea_rcx_[rip+0x@@ 19@@ e@@ ea], mov_edx_0x@@ 91, lea_rsi_[rip+0x16@@ aa@@ 5], mov_edi_0x10, xor_eax_eax, call_0x1c@@ 6c, mov_esi_ebp, xor_ecx_ecx, xor_edx_edx, mov_edi@@ _0x11, xor_eax_eax, pop_rbp, jmp_0xffffffffffff@@ 0@@ 53@@ 9
endbr64, cmp_rdi_rsi, je_0x19, sub_rsp_8, mov_edi_dword_ptr_[r@@ di+0x18], call_0xffffffffffffff@@ b0, mov_eax_1, add_rsp_8, ret, mov_eax_1, ret
endbr64, push_rbp, mov_r9d_esi, mov_ebp_edi, push_rbx, mov_r8d_edi, mov_ebx_esi, sub_rsp_8, lea_rcx_[rip+0x@@ 1a@@ 2c@@ 5], mov_edx_0x@@ 98, lea_rsi_[rip+0x16@@ a@@ 2b], mov_edi_0x10, xor_eax_eax, call_0x1b@@ f2, add_rsp_8, movsxd_rcx@@ _ebx, pop_rbx, mov_esi_ebp, xor_edx_edx, mov_edi_0x18, xor_eax_eax, pop_rbp, jmp_0xffffffffffff@@ 0@@ 4b@@ 9
endbr64, push_rbp, mov_r8d_edi, mov_ebp_edi, lea_rsi_[rip+0x16@@ 9f@@ 1], mov_edi_0x10, xor_eax_eax, lea_rcx_[rip+0x@@ 19@@ e@@ 30], mov_edx_0x@@ ae, call_0x1@@ ba@@ c, movsxd_rsi@@ _ebp, lea_rdi_[rip-0x@@ e5@@ 3], call_0xffffffffffffbd@@ fd, test_rax_rax, je_0x25, lea_rcx_[rip+0x@@ 1a@@ 27@@ c], mov_edx_0x@@ b8, lea_rsi_[rip+0x16@@ 9b@@ 2], mov_edi_0x10, xor_eax_eax, pop_rbp, jmp_0x1@@ b@@ 78, mov_esi_ebp, xor_ecx_ecx, xor_edx_edx, mov_edi_0x18, pop_rbp, jmp_0xffffffffffff@@ 0@@ 44@@ 4
endbr64, push_r12, lea_rcx_[rip+0x@@ 1a@@ 26@@ 3], mov_r12_rsi, push_rbx, mov_edx_0x4@@ 1e, mov_rbx_rdi, sub_rsp_8, mov_rax_qword_ptr_[rsi+8], mov_r9d_dword_ptr_[r@@ si+0x10], mov_r8d_dword_ptr_[r@@ ax+0x18], lea_rsi_[rip+0x16@@ 95@@ 2], xor_eax_eax, mov_edi_0x10, call_0x1b@@ 19, test_rbx_rbx, je_0xde, mov_eax_dword_ptr_[r@@ 12+0x10], cmp_eax_0xa, je_0x2b, jbe_0x@@ 21, cmp_eax_0xb, jne_0xd, cmp_qword_ptr_[rbx+0x10]_0, je_0x95, add_rsp_8, pop_rbx, mov_rax_r12, pop_r12, ret, sub_eax_2, cmp_eax_1, ja_0xffffffffffffff@@ eb, mov_rsi_qword_ptr_[rbx+0x10], mov_rax_qword_ptr_[r12+8], test_rsi_rsi, je_0x37, mov_rax_qword_ptr_[rax+0x1@@ 280], mov_rdi_qword_ptr_[rax+0x20], call_0x2@@ 19@@ f, test_rax_rax, je_9, cmp_qword_ptr_[rax+8]_0, jne_0x5e, mov_rax_qword_ptr_[r12+8], mov_rsi_qword_ptr_[rbx+0x10], mov_rdi_qword_ptr_[rax+8], xor_edx_edx, call_0x1@@ 37@@ f, mov_rax_qword_ptr_[r12+8], mov_rax_qword_ptr_[rax+8], mov_edi_dword_ptr_[r@@ ax+0x18], call_0xfffffffffffffeb@@ e, mov_rdi_qword_ptr_[r12+8], mov_rsi_rdi, call_0xffffffffffff27@@ e1, mov_rdi_qword_ptr_[r12+8], call_0xffffffffffff28@@ c7, add_rsp_8, pop_rbx, mov_rax_r12, pop_r12, ret, mov_rax_qword_ptr_[r12+0x18], mov_qword_ptr_[rbx+0x10]_rax, jmp_0xffffffffffffff68, lea_rcx_[rip+0x@@ 1a@@ 39@@ b], mov_edx_0x4@@ 36, lea_rsi_[rip+0x16@@ 87@@ 1], lea_rdi_[rip+0x19@@ c@@ d0], call_0xffffffffffff00@@ c8, lea_rcx_[rip+0x@@ 1a@@ 37@@ c], mov_edx_0x4@@ 24, lea_rsi_[rip+0x16@@ 85@@ 2], lea_rdi_[rip+0x19@@ b@@ dd], call_0xffffffffffff00@@ a@@ 9
endbr64, mov_eax_1, ret
push_rbx, mov_rcx_rdi, lea_rdx_[rip-0x@@ f2@@ b], mov_rbx_qword_ptr_[rdi+0x10], mov_rsi_qword_ptr_[r@@ di+0x18], mov_rdi_rbx, call_0xffffffffffffff@@ da, test_eax_eax, jle_0x@@ 3b, xor_eax_eax, lea_rcx_[rip+0x@@ 19@@ c@@ 84], mov_edx_0x2@@ 7b, lea_rsi_[rip+0x16@@ 7@@ fe], mov_edi_1, call_0x1@@ 9c@@ 7, mov_esi_dword_ptr_[r@@ bx+0x18], xor_ecx_ecx, xor_edx_edx, xor_eax_eax, mov_edi@@ _9, call_0xffffffffffff0@@ 29@@ 4, test_rax_rax, jne_6, xor_eax_eax, pop_rbx, ret, lea_rdi_[rip+0x19@@ c4@@ b], call_0xffffffffffff0@@ 38@@ f, mov_eax_0xffffffff, pop_rbx, ret
endbr64, push_rbx, mov_rbx_rdi, call_0xffffffffffffff@@ 88, test_eax_eax, js@@ _9, pop_rbx, ret, mov_rsi_qword_ptr_[rbx+0x18], mov_rdi_qword_ptr_[rbx+0x10], pop_rbx, jmp_0xfffffffffffffa@@ 3@@ f
endbr64, push_r15, lea_rcx_[rip+0x@@ 1a0@@ a3], mov_edx_0x2@@ d2, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x30, mov_rax_qword_ptr_[rdi+0x10], mov_r14_qword_ptr_[r@@ si+8], mov_qword_ptr_[rsp+0x10]_rax, mov_eax_dword_ptr_[rdi+0x@@ 48], mov_qword_ptr_[rsp+0x20]_rsi, mov_r9d_dword_ptr_[r@@ si+0x10], mov_r12_qword_ptr_[r@@ 14+0x1@@ 280], mov_r8d_dword_ptr_[r@@ 14+0x18], push_rax, lea_rsi_[rip+0x16@@ 74@@ 5], mov_edi_0x10, xor_eax_eax, call_0x1@@ 90@@ c, mov_ecx_dword_ptr_[r@@ 14+0x18], pop_rsi, pop_rdi, test_ecx_ecx, je_0x4@@ f9, mov_rsi_qword_ptr_[rbx+0x@@ 58], test_rsi_rsi, je_0x3@@ 1a, mov_rax_qword_ptr_[rbx+0x50], xor_edx_edx, jmp_0x16, inc_rdx, add_rax_8, cmp_rdx_rsi, je_0x2@@ fe, mov_r15_rax, cmp_ecx_dword_ptr_[r@@ ax], jne_0xffffffffffffffeb, lea_rbp_[r@@ sp+0x18], mov_rsi_rbp, mov_rdi_rax, call_0xfffffffffffff1f@@ e, mov_rcx_qword_ptr_[rsp+0x18], mov_r10d_dword_ptr_[r@@ bx+0x48], test_rcx_rcx, je_0x1@@ ab, mov_eax_dword_ptr_[r@@ cx+0x10], test_eax_eax, lea_edx_[rax@@ -2], sete@@ _r13b, cmp_edx_1, setb@@ e_@@ sil, or_r13d@@ _esi, xor@@ _r13d@@ _1, movzx_r13d@@ _r13b, cmp_edx_1, jbe_0x@@ 4e, cmp_eax_5, je_0x1@@ 49, cmp_r10d@@ _2, je_0x4c, ja_0x@@ d5, test_r10d_r10d, je_0x3@@ 14, and_r13d@@ _1, test_rcx_rcx, mov_rax_rcx, setne_cl, mov_edx_ecx, cmp_r14@@ _qword_ptr_[rsp+8], jne_0x@@ f2, test_cl_cl, je_0xfd, jmp_0x1@@ 6b, mov_dword_ptr_[r15@@ ]_0, cmp_r10d@@ _2, jne_0xffffffffffffffb8, and_r13d@@ _1, lea_rsi_[rbx+0x@@ 58], lea_rdi_[rbx+0x@@ 50], mov_rdx_r15, call_0xfffffffffffff2@@ 1c, test_eax_eax, je_0x2@@ 26, mov_rax_qword_ptr_[rbx+0x10], mov_edx_0x1@@ 5d, mov_r8d_dword_ptr_[r@@ ax+0x18], lea_rcx_[rip+0x@@ 19@@ ac@@ 9], lea_rsi_[rip+0x16@@ 6@@ 26], mov_edi_0x10, xor_eax_eax, call_0x1@@ 7e@@ d, mov_edx_dword_ptr_[rbx+0x@@ 4c], test_edx_edx, jne_0x2@@ 94, xor_ebp_ebp, cmp_qword_ptr_[rbx+0x@@ 58]_0, jne_0x1b, jmp_0x3@@ 10, inc_rbp, cmp_rbp@@ _qword_ptr_[r@@ bx+0x@@ 58], jae_0x@@ 2f@@ d, mov_rax_qword_ptr_[rbx+0x50], lea_rax_[rax+r@@ bp*8], mov_edi_dword_ptr_[rax], test_edi_edi, je_0xffffffffffffffe7, test_byte_ptr_[r@@ ax+@@ 4]@@ _0x14, je_0xffffffffffffffe1, call_0xfffffffffffffb@@ d7, jmp_0xffffffffffffffda, cmp_r10d@@ _3, jne_0x2@@ 2c, test_rcx_rcx, je_0x1@@ 77, cmp_dword_ptr_[r@@ cx+0x1@@ 0]@@ _0xb, je_0x125, cmp_qword_ptr_[rbx+0x10]_0, je_0x1@@ 38, mov_rax_qword_ptr_[rsp+0x18], test_rax_rax, setne_dl, and_r13d@@ _1, test_dl_dl, je_0x11, test_r13b_r13b, je_0xc, mov_rdi_rax, call_0xffffffffffffb@@ 8b@@ 4, xor_eax_eax, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[r@@ cx+8], mov_edx_0x2@@ e8, mov_r8d_dword_ptr_[r@@ ax+0x18], lea_rcx_[rip+0x@@ 19@@ 9e@@ 2], lea_rsi_[rip+0x16@@ 54@@ f], mov_edi_1, xor_eax_eax, mov_dword_ptr_[rsp+0x14]@@ _r10d, call_0x17@@ 11, or_byte_ptr_[r@@ 15+@@ 4]@@ _0x10, mov_r10d_dword_ptr_[r@@ sp+0x14], cmp_r10d@@ _2, je_0x2@@ 00, ja@@ _0x78, test_r10d_r10d, je_0xe3, mov_rax_qword_ptr_[rsp+0x18], cmp_r14@@ _qword_ptr_[rsp+8], jne_0xffffffffffffff@@ 96, test_rax_rax, je_0xffffffffffffff@@ 91, xor_r13d_r13d, mov_eax_dword_ptr_[rax+0x10], cmp_eax_0xb, je_0x2@@ 8e, cmp_eax_1, je_0x2@@ 58, mov_rdi_rbx, call_qword_ptr_[rbx+0x@@ 38], cmp_eax_1, je_0x2@@ 35, mov_rsi_qword_ptr_[rbx+0x18], mov_ecx_dword_ptr_[r@@ si+0x1c], test_ecx_ecx, jne_0x2@@ 97, mov_rsi_rbp, mov_rdi_rbx, call_0xfffffffffffff4@@ 20, mov_dword_ptr_[rbx+0x@@ 48@@ ]_2, mov_rcx_qword_ptr_[rsp+0x18], jmp_0xfffffffffffffe@@ 68, mov_rax_qword_ptr_[rsp+0x18], cmp_r10d@@ _3, jne_0xffffffffffffff@@ 2a, mov_rcx_qword_ptr_[rsp+0x18], xor_r13d_r13d, jmp_0xfffffffffffffe@@ d3, mov_rsi_r12, mov_rdi_rcx, call_0xffffffffffffe@@ db@@ e, cmp_r14@@ _qword_ptr_[rsp+8], jne_0xfffffffffffffe@@ d1, mov_qword_ptr_[rbx+0x10]_0, lea_rsi_[rbx+0x@@ 58], lea_rdi_[rbx+0x@@ 50], call_0xfffffffffffff@@ 12@@ e, test_eax_eax, je_0xfffffffffffffe@@ bf, mov_rdi_qword_ptr_[rsp+0x18], mov_rsi_r12, call_0xffffffffffffed@@ 89, mov_rdi_r12, call_0xffffffffffffee@@ 11, xor_eax_eax, jmp_0xfffffffffffffe@@ cd, xor_r13d_r13d, xor_esi_esi, lea_rcx_[rbx+0x@@ 50], lea_rdx_[rip-0x@@ b@@ 70], mov_rdi_r12, call_0xffffffffffff20@@ cd, test_rax_rax, je_0x104, mov_rax_qword_ptr_[rsp+0x18], test_rax_rax, setne_dl, jmp_0xfffffffffffffe@@ 84, mov_rax_qword_ptr_[rip+0x28@@ 37@@ 1], lea_rdx_[rip+0x19@@ 8b@@ 1], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, lea_rbp_[r@@ sp+0x18], call_0xffffffffffff00@@ 2b, mov_rsi_rbp, xor_edi_edi, call_0xffffffffffffe@@ ef@@ 1, mov_rcx_qword_ptr_[rsp+0x18], mov_r10d_dword_ptr_[r@@ bx+0x48], test_rcx_rcx, je_0xc5, mov_eax_dword_ptr_[r@@ cx+0x10], lea_edx_[rax@@ -2], cmp_edx_1, setbe@@ _r13b, test_eax_eax, sete_dl, or_r13d@@ _edx, xor@@ _r13d@@ _1, movzx_r13d@@ _r13b, xor_r15d_r15d, jmp_0xfffffffffffffc@@ f6, test_rcx_rcx, setne_dl, mov_rax_rcx, and_r13d@@ _1, jmp_0xfffffffffffffe@@ 03, and_r13d@@ _1, jmp_0xffffffffffffff47, mov_dword_ptr_[rbx+0x@@ 48@@ ]_3, mov_rbx_qword_ptr_[rbx+0x10], mov_rdi_rbx, call_0xffffffffffffe@@ 9b@@ 1, mov_rbp_rax, mov_rax_qword_ptr_[rbx+0x1@@ 280], mov_rsi_rbp, mov_rdi_qword_ptr_[rax+0x20], call_0x1@@ c0@@ b, mov_rsi_rax, test_rax_rax, je_0x4d, mov_rdi_rbx, call_0x7@@ 37@@ b, mov_esi_dword_ptr_[r@@ bx+0x18], xor_ecx_ecx, xor_edx_edx, mov_edi_7, xor_eax_eax, call_0xfffffffffffefd@@ e8, jmp_0xffffffffffffff14, mov_rcx_qword_ptr_[rsp+0x18], xor_r13d_r13d, jmp_0xfffffffffffffc@@ cf, mov_rdi_rbx, call_qword_ptr_[r@@ bx+0x30], mov_rax_qword_ptr_[rsp+0x18], test_rax_rax, setne_dl, jmp_0xfffffffffffffd@@ 80, xor_r15d_r15d, jmp_0xfffffffffffffdd@@ 6, xor_edx_edx, mov_rsi_rbp, mov_rdi_rbx, call_0xda@@ b, jmp_0xffffffffffffffb0, mov_rax_qword_ptr_[rbx+0x10], mov_edi_dword_ptr_[r@@ ax+0x18], call_0xfffffffffffff8e@@ d, mov_eax_dword_ptr_[rbx+0x@@ 4c], test_eax_eax, jne_0xffffffffffffff@@ 64, mov_rdi_rbx, call_qword_ptr_[rbx+0x@@ 40], cmp_eax_1, je_0xffffffffffffff@@ 55, mov_rdi_r12, call_0xffffffffffff22@@ eb, mov_rax_qword_ptr_[rsp+0x18], test_rax_rax, setne_dl, jmp_0xfffffffffffffd@@ 2b, mov_rax_qword_ptr_[rsp+0x18], cmp_dword_ptr_[rax+0x1@@ 0]@@ _0xb, jne_0xb, mov_qword_ptr_[rsp+0x18]_0, mov_rdi_rbx, call_0xfffffffffffffa@@ 6f, test_eax_eax, jns_0xfffffffffffffe@@ 79, mov_rsi_qword_ptr_[rbx+0x18], mov_rdi_qword_ptr_[rbx+0x10], call_0xfffffffffffff5@@ 2a, mov_rsi_rbp, mov_rdi_rbx, call_0xfffffffffffff@@ 1c@@ f, jmp_0xfffffffffffffd@@ af, mov_rdi_r14, call_0xffffffffffffe@@ 8b@@ 2, mov_rsi_rax, mov_rdi_r12, call_0xa0@@ 7, mov_rdi_rax, test_rax_rax, je_0xa, mov_rsi_r14, call_0x8b@@ 7, mov_rax_qword_ptr_[rsp+0x18], mov_eax_dword_ptr_[rax+0x10], jmp_0xfffffffffffffd@@ 4d, mov_rdi_qword_ptr_[rsp+8], call_0x7@@ 270, jmp_0xfffffffffffffd@@ 65, call_0xffffffffffffef7@@ 6
endbr64, lea_rsi_[rip-0x@@ 15@@ 6b], jmp_0xffffffffffffec@@ a@@ 5
endbr64, push_r15, mov_r15_rdx, mov_edx_0x3@@ 61, push_r14, mov_r14_rsi, lea_rsi_[rip+0x16@@ 208], push_r13, mov_r13_rcx, lea_rcx_[rip+0x@@ 19@@ b5@@ a], push_r12, mov_r12_rdi, push_rbp, push_rbx, mov_rbx_r8, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_r8d_dword_ptr_[r@@ di+0x18], mov_edi_0x20, call_0x1@@ 3a@@ 3, mov_esi_1, mov_edi_0x6@@ 8, call_0xfffffffffffefa@@ f4, test_rax_rax, je_0xe3, mov_rbp_rax, test_r15_r15, je_0xb8, lea_rax_[rip-0x@@ 16@@ 2d], test_r13_r13, cmove@@ _r13_rax, test_rbx_rbx, cmove_rbx_rax, lea_rax_[rip-0x@@ 60@@ 2], mov_qword_ptr_[rbp]_rax, lea_rax_[rip-0x@@ 13@@ 8d], mov_qword_ptr_[rbp+8]_rax, mov_qword_ptr_[rbp+0x@@ 10]@@ _r12, mov_qword_ptr_[rbp+0x1@@ 8]_r14, mov_qword_ptr_[rbp+0x@@ 30]@@ _r15, mov_qword_ptr_[rbp+0x@@ 3@@ 8]_r13, mov_qword_ptr_[rbp+0x@@ 4@@ 0]_rbx, mov_rdi_qword_ptr_[r@@ 12+0x1@@ 280], mov_rsi_rbp, call_0xffffffffffff2@@ 110, mov_rdi_qword_ptr_[r@@ 12+0x1@@ 280], xor_esi_esi, lea_rcx_[r@@ bp+0x@@ 50], lea_rdx_[rip-0x@@ e0@@ a], call_0xffffffffffff1d@@ e6, test_rax_rax, jne_0x56, pxor_xmm0_xmm0, mov_rsi_rsp, mov_rdi_rbp, movaps_xmmword_ptr_[rsp]_xmm0, movaps_xmmword_ptr_[rsp+0x10]_xmm0, mov_qword_ptr_[rsp+8]@@ _r12, call_0xfffffffffffff99@@ 4, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x28], xor_rbx_qword_ptr_fs:[0x28], jne_0x3b, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_r15_[r@@ ip-0x@@ 14@@ 2f], jmp_0xffffffffffffff47, mov_rdi_r12, call_0xffffffffffff2@@ 10@@ 5, mov_eax_0xffffffff, jmp_0xffffffffffffffbe, or_eax_0xffffffff, jmp_0xffffffffffffffb9, call_0xfffffffffffef@@ 8b@@ 4
endbr64, push_rbp, xor_eax_eax, mov_rbp_rsi, push_rbx, lea_rcx_[rip+0x@@ 19@@ a@@ 3e], mov_rbx_rdi, sub_rsp_8, mov_r9_qword_ptr_[r@@ si+0x10], mov_r8d_dword_ptr_[r@@ di+0x18], mov_edx_0x3@@ 8d, lea_rsi_[rip+0x16@@ 0@@ 95], mov_edi_0x10, call_0x1@@ 25@@ e, mov_rsi_qword_ptr_[rbp+0x10], mov_rdi_rbx, call_0xffffffffffffe@@ 70@@ 2, mov_eax_dword_ptr_[rbp+0x@@ 1c], test_eax_eax, je_0x34, xor_r8d_r8d, xor_ecx_ecx, xor_edx_edx, mov_rsi_rbp, mov_rdi_rbx, call_0xfffffffffffffe@@ 49, test_eax_eax, js_0x1@@ 2, add_rsp_8, pop_rbx, pop_rbp, ret, lea_rdi_[rip+0x19@@ a0@@ 9], call_0xfffffffffffefc@@ 09, mov_edi_dword_ptr_[r@@ bx+0x18], add_rsp_8, pop_rbx, pop_rbp, jmp_0xfffffffffffff@@ 63@@ b
endbr64, push_rbp, lea_rsi_[rip+0x16@@ 0@@ 26], xor_eax_eax, mov_r8d_dword_ptr_[r@@ di+0x18], mov_rbp_rdi, lea_rcx_[rip+0x@@ 19@@ 4d@@ b], mov_edi_0x10, mov_edx_0x4@@ 4e, call_0x1@@ 1d@@ a, mov_esi_1, mov_edi_0x18, call_0xfffffffffffef@@ 92@@ b, test_rax_rax, je_0x5b, mov_rsi_rax, lea_rax_[rip-0x@@ 999], mov_qword_ptr_[rsi]_rax, mov_rdi_rbp, call_0xffffffffffff1f@@ 91, cmp_qword_ptr_[rbp+0x@@ 12@@ 8@@ 0]_rbp, jne_0x94, mov_rax_qword_ptr_[rbp+0x@@ 12@@ 78], test_rax_rax, je_0xf, cmp_qword_ptr_[rax+0x1@@ 28@@ 0]_rbp, je_0x9a, mov_rax_qword_ptr_[rbp+8], test_rax_rax, je_0x4f, mov_rsi_qword_ptr_[rax+0x1@@ 280], test_rsi_rsi, je_0x24, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffff@@ 1ec@@ d, lea_rdi_[rip+0x19@@ 47@@ 5], call_0xfffffffffffefb@@ 51, mov_rax_qword_ptr_[rbp+8], pop_rbp, mov_edi_dword_ptr_[r@@ ax+0x18], jmp_0xfffffffffffff@@ 58@@ 4, lea_rcx_[rip+0x@@ 19@@ a@@ 78], mov_edx_0x4@@ 63, lea_rsi_[rip+0x15@@ f6@@ e], lea_rdi_[rip+0x19@@ 47@@ 3], call_0xfffffffffffef7@@ c5, lea_rcx_[rip+0x@@ 19@@ a@@ 59], mov_edx_0x4@@ 62, lea_rsi_[rip+0x15@@ f4@@ f], lea_rdi_[rip+0x19@@ 43@@ f], call_0xfffffffffffef7@@ a6, lea_rcx_[rip+0x@@ 19@@ a@@ 3a], mov_edx_0x4@@ 5e, lea_rsi_[rip+0x15@@ f@@ 30], lea_rdi_[rip+0x16@@ d40], call_0xfffffffffffef7@@ 87, lea_rcx_[rip+0x@@ 19@@ a@@ 1b], mov_edx_0x4@@ 5f, lea_rsi_[rip+0x15@@ f@@ 11], lea_rdi_[rip+0x19@@ 8e@@ 8], call_0xfffffffffffef7@@ 6@@ 8
endbr64, test_edx_edx, je_0x43, test_rdi_rdi, je_0x1a, mov_rax_qword_ptr_[rdi+0x1@@ 270], test_rax_rax, je_0xe, lea_rdx_[rip-0x@@ 8@@ b0], cmp_qword_ptr_[rax]@@ _rdx, je_0x35, mov_rax_qword_ptr_[rdi+0x1@@ 280], test_rax_rax, je_0x1a, mov_rax_qword_ptr_[rax+0x1@@ 270], test_rax_rax, je_0xe, lea_rdx_[rip-0x@@ 8d@@ 4], cmp_qword_ptr_[rax]@@ _rdx, je_0x11, mov_edi_dword_ptr_[r@@ di+0x18], jmp_0xfffffffffffff@@ 4b@@ 4, mov_r8d_dword_ptr_[r@@ di+0x18], lea_rcx_[rip+0x@@ 19@@ 8b@@ 5], mov_edx_0x4@@ 75, lea_rsi_[rip+0x15@@ e@@ 93], mov_edi_0x10, xor_eax_eax, jmp_0x1@@ 0@@ 5@@ a
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x18, lea_rax_[rip+0x2@@ 9b@@ 1f], mov_r15_qword_ptr_[rax], test_r15_r15, je_0x7c, lea_r12_[r@@ ip-0x@@ 14@@ 38], lea_r14_[r@@ ip-0x@@ 16@@ af], lea_r13_[r@@ ip-0x@@ 94@@ 6], jmp_0x13, mov_r15_qword_ptr_[r@@ 15+8], test_r15_r15, je_0x54, mov_edi_dword_ptr_[r@@ 15], call_0xffffffffffff17@@ 94, mov_rbx_rax, test_rax_rax, je_0xffffffffffffffe9, mov_rbp_qword_ptr_[r@@ ax+0x1@@ 280], test_rbp_rbp, je_0xffffffffffffffdd, cmp_rbp@@ _qword_ptr_[r@@ bp+0x@@ 12@@ 80], jne_0xffffffffffffffd4, mov_rax_qword_ptr_[rbp+0x@@ 12@@ 70], test_rax_rax, je_0x38, mov_rdx_qword_ptr_[rax], cmp_rdx@@ _r12, je_0xffffffffffffff@@ c0, cmp_rdx@@ _r13, jne_0xa6, mov_r15_qword_ptr_[r@@ 15+8], mov_dword_ptr_[rax+0x@@ 4c]_1, test_r15_r15, jne_0xffffffffffffffb0, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_esi_1, mov_edi_0x28, call_0xfffffffffffef@@ 6f@@ 6, test_rax_rax, je_0x88, mov_qword_ptr_[rax]_r12, mov_qword_ptr_[rax+@@ 8]_r14, mov_rsi_rax, mov_rdi_rbp, mov_qword_ptr_[rsp+8]_rax, call_0xffffffffffff1d@@ 56, mov_rax_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[rbp+0x@@ 12@@ 80], xor_esi_esi, lea_rcx_[r@@ ax+0x10], lea_rdx_[rip-0x@@ 11@@ c8], call_0xffffffffffff1a@@ 28, test_rax_rax, je_0xffffffffffffff@@ 40, mov_rax_qword_ptr_[rip+0x2@@ 7c@@ e3], mov_ecx_dword_ptr_[r@@ bx+0x18], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x19@@ 7e@@ e], mov_esi_1, xor_eax_eax, call_0xfffffffffffef@@ 99@@ f, jmp_0xffffffffffffff1a, lea_rcx_[rip+0x@@ 19@@ 8@@ 2e], mov_edx_0x3@@ e6, lea_rsi_[rip+0x15@@ d@@ 44], lea_rdi_[rip+0x19@@ 78@@ 3], call_0xfffffffffffef@@ 5@@ 9b, lea_rdi_[rip+0x19@@ 25@@ a], call_0xfffffffffffef@@ 8e@@ f, jmp_0xffffffffffffffb@@ 0
endbr64, lea_rax_[rip+0x@@ 2a@@ ac@@ 5], mov_eax_dword_ptr_[rax], test_eax_eax, jne_9, ret, sub_rsp_8, call_0xfffffffffffffe@@ 84, mov_eax_1, add_rsp_8, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, test_rcx_rcx, je_0xed, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp+0xc]_0, mov_qword_ptr_[rsp+0x18]_rax, mov_r13_rdi, mov_rbp_rcx, mov_rbx_rdx, mov_r15_rcx, xor_r12d_r12d, lea_r14_[r@@ si+rcx], jmp_0x2a, mov_qword_ptr_[rbx]_rdx, add_r12_8, sub_r15@@ _8, mov_rax_rbp, sub_rax@@ _r15, mov_dword_ptr_[rsp+0xc]_1, add_rbx_8, cmp_rbp_rax, jbe_0x@@ 78, mov_esi_dword_ptr_[r@@ 13+0x18], mov_rdx_r14, sub_rdx@@ _r15, xor_ecx_ecx, mov_edi_1, xor_eax_eax, call_0xfffffffffffef7@@ 13, mov_qword_ptr_[rsp+0x20]_rax, mov_rdx_rax, cmp_rax_-1, je_0x22, cmp_r15@@ _7, ja_0xffffffffffffff@@ b4, mov_rsi_qword_ptr_[rsp+0x18], mov_rdx_r15, mov_rdi_rbx, call_0xfffffffffffef@@ 6@@ 1f, add_r12@@ _r15, jmp_0xffffffffffffffa6, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffef@@ 30@@ b, mov_eax_dword_ptr_[rax], mov_rdx_qword_ptr_[rsp+0x10], test_eax_eax, je_0xffffffffffffffcd, cmp_eax_5, jne_0xa, mov_eax_dword_ptr_[rsp+0xc], test_eax_eax, jne_0x10, mov_r12@@ _-1, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x19, add_rsp_0x38, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, xor_r12d_r12d, jmp_0xffffffffffffffdb, call_0xfffffffffffef@@ 3b@@ 9
endbr64, push_rbp, mov_rbp_rsp, push_rbx, sub_rsp_0x38, mov_r8_qword_ptr_[r@@ si+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x18]_rax, xor_eax_eax, mov_qword_ptr_[rbp-0x3@@ 0]_r8, mov_qword_ptr_[rbp-0x28]_0, test_r8_r8, jne_0x71, mov_rax_rsp, cmp_rsp@@ _rax, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rax, jne_0xffffffffffffffed, sub_rsp_0x20, or_qword_ptr_[r@@ sp+0x1@@ 8]_0, lea_rcx_[rip+0x@@ 190@@ b3], mov_edx_0x18, mov_esi_1, xor_eax_eax, lea_rdi_[rsp+0x@@ f], and_rdi@@ _0xfffffffffffffff0, mov_qword_ptr_[rbp-0x38]_rdi, call_0xfffffffffffef@@ 8@@ 28, mov_rdi_qword_ptr_[rbp-0x@@ 38], call_0xfffffffffffef7@@ af, mov_rdx_qword_ptr_[rbp-0x18], xor_rdx_qword_ptr_fs:[0x28], jne_0x41, mov_rbx_qword_ptr_[rbp-8], leave, ret, mov_rbx_rsi, lea_rcx_[rbp-0x@@ 30], lea_rdx_[rip-0x@@ 1c@@ 9e], xor_esi_esi, call_0x25@@ 00, sar_rax@@ _0x20, test_eax_eax, js_0x1@@ 5, mov_rdi_qword_ptr_[rbp-0x@@ 28], test_rdi_rdi, jne_0xffffffffffffffbd, mov_r8_qword_ptr_[r@@ bx+0x10], jmp_0xffffffffffffff67, xor_eax_eax, jmp_0xffffffffffffffb4, call_0xfffffffffffef@@ 2d@@ c
endbr64, push_r15, mov_r15_r8, push_r14, mov_r14_rdi, push_r13, mov_r13_rdx, push_r12, mov_r12_rsi, mov_rdi_r12, push_rbp, mov_rsi_rdx, push_rbx, mov_rbx_rcx, sub_rsp_8, call_0xfffffffffffffe@@ f9, mov_rbp_rax, mov_r9_r15, mov_r8_rbx, mov_rcx_r13, mov_rsi_r12, mov_rdi_r14, mov_rdx_rax, call_0x2@@ 2e@@ f, mov_rdi_rbp, mov_ebx_eax, call_0xfffffffffffef@@ 125, add_rsp_8, mov_eax_ebx, pop_rbx, pop_rbp, pop_r12, pop_r13, not_eax, pop_r14, shr_eax_0x1f, pop_r15, ret
endbr64, push_r12, xor_eax_eax, mov_r12_rsi, push_rbp, lea_rcx_[rip+0x@@ 19@@ 5f@@ 6], mov_rbp_rdx, sub_rsp_8, mov_r8d_dword_ptr_[r@@ dx+0x18], lea_rsi_[rip+0x19@@ 5f@@ 9], mov_edx_0x1@@ 29, mov_edi_0x20, call_0xc@@ 21, mov_eax_dword_ptr_[r@@ 12+0x1c], test_eax_eax, jne_0xd, add_rsp_8, pop_rbp, pop_r12, ret, add_rsp_8, mov_rdi_rbp, pop_rbp, mov_rsi_r12, pop_r12, jmp_0x6@@ a5@@ b
endbr64, push_r12, xor_eax_eax, mov_r12_rsi, push_rbp, lea_rcx_[rip+0x@@ 19@@ 5b@@ 9], mov_rbp_rdx, sub_rsp_8, mov_r8d_dword_ptr_[r@@ dx+0x18], lea_rsi_[rip+0x19@@ 59@@ 9], mov_edx_0x1@@ 3d, mov_edi_0x20, call_0xb@@ c1, mov_eax_dword_ptr_[r@@ 12+0x1c], test_eax_eax, jne_0xd, add_rsp_8, pop_rbp, pop_r12, ret, add_rsp_8, mov_rdi_rbp, pop_rbp, mov_rsi_r12, pop_r12, jmp_0x6@@ b8@@ b
endbr64, mov_qword_ptr_[rdx@@ ]_rsi, xor_eax_eax, ret
endbr64, mov_qword_ptr_[rdx@@ ]_rsi, xor_eax_eax, ret
endbr64, test_rdi_rdi, je_0x1a, mov_rax_qword_ptr_[rdi], test_rax_rax, je_0x11, mov_rax_qword_ptr_[rax], test_rax_rax, je_9, jmp_rax, ret, push_rax, lea_rcx_[rip+0x@@ 19@@ 90@@ 7], mov_edx_0x4@@ 1, lea_rsi_[rip+0x19@@ 50@@ 9], lea_rdi_[rip+0x19@@ 57@@ d], call_0xfffffffffffef@@ 1c@@ 4
endbr64, test_rdi_rdi, je_0x24, mov_rax_qword_ptr_[rdi], mov_r8_rsi, test_rax_rax, je_0xe, mov_rax_qword_ptr_[rax+8], test_rax_rax, je_5, jmp_rax, mov_rsi_rdi, mov_rdi_r8, jmp_0xfffffffffffff86@@ a, push_rax, lea_rcx_[rip+0x@@ 19@@ 8@@ 8d], mov_edx_0x4@@ 9, lea_rsi_[rip+0x19@@ 4a@@ f], lea_rdi_[rip+0x19@@ 5@@ 23], call_0xfffffffffffef@@ 16@@ a
endbr64, test_rdi_rdi, je_0x1a, mov_rax_qword_ptr_[rdi], test_rax_rax, je_0x11, mov_rax_qword_ptr_[rax+0x10], test_rax_rax, je_8, jmp_rax, ret, push_rax, lea_rcx_[rip+0x@@ 19@@ 8@@ 27], mov_edx_0x5@@ 3, lea_rsi_[rip+0x19@@ 46@@ 9], lea_rdi_[rip+0x19@@ 4@@ dd], call_0xfffffffffffef@@ 12@@ 4
endbr64, test_rdi_rdi, je_0x1a, mov_rax_qword_ptr_[rdi], test_rax_rax, je_0x11, mov_rax_qword_ptr_[rax+0x18], test_rax_rax, je_8, jmp_rax, ret, push_rax, lea_rcx_[rip+0x@@ 19@@ 7b@@ 7], mov_edx_0x5@@ b, lea_rsi_[rip+0x19@@ 4@@ 19], lea_rdi_[rip+0x19@@ 4@@ 8d], call_0xfffffffffffef0@@ d@@ 4
endbr64, push_rbp, push_rbx, sub_rsp_8, test_rdi_rdi, je_0x54, cmp_qword_ptr_[rdi+0x@@ 20]_0, mov_rbx_rdi, je_0x88, cmp_qword_ptr_[rdi+0x1@@ 28@@ 0]_rdi, jne_0x5c, mov_r8d_dword_ptr_[r@@ di+0x18], mov_rbp_rsi, mov_r9_rsi, mov_edi_0x20, lea_rsi_[rip+0x19@@ 3c@@ 2], lea_rcx_[rip+0x@@ 19@@ 47@@ 5], mov_edx@@ _0x68, xor_eax_eax, call_0x9e@@ 6, mov_rdi_qword_ptr_[rbx+0x20], add_rsp_8, pop_rbx, mov_rsi_rbp, pop_rbp, jmp_0x1@@ 0@@ b4, lea_rcx_[rip+0x@@ 19@@ 70@@ 8], mov_edx_0x6@@ 5, lea_rsi_[rip+0x19@@ 38@@ a], lea_rdi_[rip+0x16@@ 64@@ 2], call_0xfffffffffffef0@@ 45, lea_rcx_[rip+0x@@ 19@@ 6e@@ 9], mov_edx_0x6@@ 7, lea_rsi_[rip+0x19@@ 36@@ b], lea_rdi_[rip+0x16@@ 5d@@ f], call_0xfffffffffffef0@@ 26, lea_rcx_[rip+0x@@ 19@@ 6c@@ a], mov_edx_0x6@@ 6, lea_rsi_[rip+0x19@@ 34@@ c], lea_rdi_[rip+0x16@@ 5d@@ 5], call_0xfffffffffffef@@ 00@@ 7
endbr64, xor_eax_eax, ret
endbr64, ret
endbr64, xor_eax_eax, ret
endbr64, mov_r8_rdi, mov_qword_ptr_[r@@ 8]_0, mov_qword_ptr_[r@@ 8+0x1@@ 0]_rdx, mov_byte_ptr_[r@@ 8+0x1@@ 8]_0, mov_dword_ptr_[r@@ 8+0x1@@ c]_0, mov_qword_ptr_[r@@ 8+@@ 8]_rcx, mov_rdi_rsi, mov_rsi_r8, jmp_0xffffffffffffffa@@ 7
endbr64, cmp_qword_ptr_[rdi]_0, jne_6, mov_qword_ptr_[rdi@@ ]_rsi, ret, push_rax, lea_rcx_[rip+0x@@ 19@@ 6@@ 1a], mov_edx_0x@@ 9a, lea_rsi_[rip+0x19@@ 2b@@ c], lea_rdi_[rip+0x19@@ 2d@@ 9], call_0xfffffffffffee@@ f7@@ 7
endbr64, test_rdi_rdi, je_9, jmp_0xffffffffffffff77, ret
endbr64, push_rbp, mov_rbp_rdi, mov_rdi_rsi, push_rbx, mov_rbx_rdx, sub_rsp_0x18, mov_rsi_qword_ptr_[rdx+8], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_qword_ptr_[rsp]_0, test_rsi_rsi, je_0x14, xor_edx_edx, mov_rcx_rsp, call_0xffffffffffff20@@ 37, test_eax_eax, jne_0x74, mov_rsi_qword_ptr_[rsp], mov_rax_qword_ptr_[rbx+0x10], mov_byte_ptr_[rbp+0x@@ 18]_0, mov_dword_ptr_[rbp+0x@@ 1c]_0, mov_qword_ptr_[rbp+@@ 8]_rsi, mov_qword_ptr_[rbp]_0, mov_qword_ptr_[rbp+0x10]_rax, mov_rsi_rbx, mov_rdi_rbp, movzx_eax_byte_ptr_[r@@ bx+0x18], mov_byte_ptr_[rbp+0x@@ 18@@ ]_al, mov_eax_dword_ptr_[r@@ bx+0x1c], mov_dword_ptr_[rbp+0x@@ 1c]_eax, call_0xfffffffffffffe@@ f8, test_eax_eax, js_0x2@@ 9, mov_rsi_qword_ptr_[rbx], mov_rdi_rbp, call_0xffffffffffffff@@ 29, xor_eax_eax, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x13, add_rsp_0x18, pop_rbx, pop_rbp, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffe1, call_0xfffffffffffeee@@ 21, lea_rcx_[rip+0x@@ 19@@ 50@@ 5], mov_edx_0x@@ ad, lea_rsi_[rip+0x19@@ 1c@@ 7], lea_rdi_[rip+0x16@@ 56@@ 7], call_0xfffffffffffeee@@ 8@@ 2
endbr64, mov_eax_dword_ptr_[rdi+0x1@@ c], inc_eax, mov_dword_ptr_[rdi+0x1@@ c]_eax, cmp_eax_1, je_9, xor_eax_eax, ret, push_r12, mov_r12_rsi, push_rbp, sub_rsp_8, mov_eax_dword_ptr_[r@@ si+0x18], test_eax_eax, je_0x25, mov_rbp_rdi, mov_rsi_rdi, mov_rdi_r12, call_0x6@@ 60@@ e, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffffc@@ d3, add_rsp_8, pop_rbp, xor_eax_eax, pop_r12, ret, lea_rcx_[rip+0x@@ 19@@ 46@@ d], mov_edx_0x@@ be, lea_rsi_[rip+0x19@@ 14@@ f], lea_rdi_[rip+0x19@@ 17@@ c], call_0xfffffffffffeee@@ 0@@ a
endbr64, push_rbx, mov_rbx_rdi, mov_eax_dword_ptr_[rdi+0x1@@ c], dec_eax, mov_dword_ptr_[rdi+0x1@@ c]_eax, je_0x10, test_eax_eax, js_0x1@@ c, xor_eax_eax, pop_rbx, ret, mov_rdi_rsi, mov_rsi_rbx, call_0x67@@ 3a, mov_eax_dword_ptr_[r@@ bx+0x1c], jmp_0xffffffffffffffe4, lea_rcx_[rip+0x@@ 19@@ 3f@@ 9], mov_edx_0x@@ cb, lea_rsi_[rip+0x19@@ 0@@ fb], lea_rdi_[rip+0x19@@ 13@@ 7], call_0xfffffffffffeed@@ b@@ 6
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x18, mov_r15_qword_ptr_[r@@ di+0x1@@ 280], test_r15_r15, je_0x1@@ 52, cmp_qword_ptr_[r15+0x@@ 20]_0, je_0x12@@ 8, mov_rbp_rdi, mov_r12_rsi, mov_r14_rdx, lea_rax_[rip+0x@@ 19b@@ 3c], test_rdx_rdx, je_6, mov_rax_qword_ptr_[rdx+0x10], sub_rsp_8, push_rax, mov_r8d_dword_ptr_[r@@ bp+0x18], mov_edx_0x@@ da, xor_eax_eax, mov_r9_r12, lea_rcx_[rip+0x@@ 19@@ 170], lea_rsi_[rip+0x19@@ 0@@ 87], mov_edi_0x20, call_0x6b@@ 4, pop_rax, pop_rdx, test_r12_r12, je_0xba, mov_rdi_qword_ptr_[r@@ 15+0x20], mov_rsi_r12, call_0xd@@ 7d, mov_r13_rax, test_rax_rax, je_0x2a, mov_rsi_rbp, mov_rdi_r13, call_0xfffffffffffffea@@ a, test_eax_eax, js_0x8@@ 3, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, mov_rax_r13, pop_r13, pop_r14, pop_r15, ret, mov_edi_0x20, call_0xfffffffffffeee@@ f3, mov_qword_ptr_[rsp+8]_rax, mov_rbx_rax, test_rax_rax, je_0x43, mov_rcx_r14, mov_rdx_r12, mov_rsi_rbp, mov_rdi_rax, call_0xfffffffffffffd@@ 05, test_eax_eax, js@@ _0x2e, mov_rsi_rbx, mov_rdi_r15, call_0xffffffffffff16@@ e6, mov_r13_rbx, test_eax_eax, jns_0xffffffffffffff@@ 9c, mov_rdi_rbx, call_0xfffffffffffffd@@ 47, mov_rdi_rbx, call_0xfffffffffffeea@@ cf, xor_r13d_r13d, jmp_0xffffffffffffff9a, mov_rdi_qword_ptr_[rsp+8], call_0xfffffffffffeea@@ bb, jmp_0xffffffffffffff89, mov_rsi_r13, mov_rdi_r15, call_0xffffffffffff18@@ 1a, mov_rbx_r13, jmp_0xffffffffffffffc8, lea_rcx_[rip+0x@@ 19@@ 28@@ 9], mov_edx_0x@@ dd, lea_rsi_[rip+0x18@@ fa@@ b], lea_rdi_[rip+0x19@@ 0@@ 14], call_0xfffffffffffeec@@ 66, lea_rcx_[rip+0x@@ 19@@ 26@@ a], mov_edx_0x@@ d8, lea_rsi_[rip+0x18@@ f@@ 8c], lea_rdi_[rip+0x18@@ fd@@ 9], call_0xfffffffffffeec@@ 47, lea_rcx_[rip+0x@@ 19@@ 24@@ b], mov_edx_0x@@ d7, lea_rsi_[rip+0x18@@ f6@@ d], lea_rdi_[rip+0x16@@ 1d@@ 2], call_0xfffffffffffeec@@ 2@@ 8
endbr64, test_rdi_rdi, je_0x10, mov_rax_qword_ptr_[rdi+8], test_rax_rax, je_6, mov_rax_qword_ptr_[rax+0x10], ret, push_rax, lea_rcx_[rip+0x@@ 19@@ 1e@@ 1], mov_edx_0x1@@ 1b, lea_rsi_[rip+0x18@@ f@@ 33], lea_rdi_[rip+0x18@@ fa@@ 7], call_0xfffffffffffeeb@@ e@@ e
endbr64, push_r13, mov_r9_rsi, lea_rcx_[rip+0x@@ 190@@ 20], push_r12, mov_edx_0x1@@ 01, mov_r12_rdi, push_rbp, xor_eax_eax, mov_rbp_rsi, mov_r8d_dword_ptr_[r@@ di+0x18], lea_rsi_[rip+0x18@@ ef@@ 3], mov_edi_0x20, call_0x5@@ 20, mov_r13_qword_ptr_[r@@ 12+0x1@@ 280], test_r13_r13, je_0x94, mov_rdi_qword_ptr_[r@@ 13+0x20], mov_rsi_rbp, call_0xb@@ e3, mov_rbp_rax, test_rax_rax, je_0x9b, mov_rsi_r12, mov_rdi_rax, call_0xfffffffffffffd@@ 7c, test_eax_eax, js_0x3@@ 5, mov_eax_dword_ptr_[rbp+0x@@ 1c], test_eax_eax, je_0xe, pop_rbp, pop_r12, pop_r13, ret, mov_rsi_rbp, mov_rdi_r13, call_0xffffffffffff16@@ ea, mov_rdi_rbp, call_0xfffffffffffffb@@ e2, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, jmp_0xfffffffffff@@ ee@@ 96@@ 5, mov_rdi_rbp, mov_r12_qword_ptr_[r@@ bp+0x10], call_0xffffffffffffff@@ 19, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x27@@ 23@@ a], pop_rbp, mov_rdi_qword_ptr_[rax], mov_r8_r12, pop_r12, lea_rdx_[rip+0x18@@ f@@ 92], mov_esi_1, xor_eax_eax, pop_r13, jmp_0xfffffffffff@@ ee@@ ef@@ 1, lea_rcx_[rip+0x@@ 190@@ f5], mov_edx_0x1@@ 04, lea_rsi_[rip+0x18@@ e@@ 37], lea_rdi_[rip+0x16@@ 0@@ 9c], call_0xfffffffffffeea@@ f2, lea_rcx_[rip+0x@@ 190@@ d6], mov_edx_0x1@@ 07, lea_rsi_[rip+0x18@@ e@@ 18], lea_rdi_[rip+0x18@@ e8@@ b], call_0xfffffffffffeea@@ d@@ 3
endbr64, test_rsi_rsi, je_0x59, push_r12, push_rbp, mov_rbp_rsi, sub_rsp_8, cmp_qword_ptr_[r@@ si+0x1@@ 28@@ 0]_0, je_0x35, mov_r12_qword_ptr_[r@@ di+0x20], mov_rsi_qword_ptr_[r@@ di+0x10], mov_rdi_rbp, call_0xfffffffffffffeb@@ 8, mov_rdi_rbp, mov_rsi_r12, call_0xffffffffffffd@@ 4b@@ d, add_rsp_8, mov_rdi_rbp, pop_rbp, pop_r12, jmp_0xffffffffffff@@ 0@@ b0@@ e, add_rsp_8, pop_rbp, pop_r12, ret, ret
endbr64, test_rdi_rdi, je_0x10, mov_rax_qword_ptr_[rdi+8], test_rax_rax, je_6, mov_rax_qword_ptr_[rax+8], ret, push_rax, lea_rcx_[rip+0x@@ 18@@ ff@@ 1], mov_edx_0x1@@ 22, lea_rsi_[rip+0x1@@ 8d@@ 63], lea_rdi_[rip+0x18@@ dd@@ 7], call_0xfffffffffffeea@@ 1@@ e
endbr64, push_r12, lea_rcx_[rip+0x@@ 18@@ ea@@ 3], mov_r12_rdi, mov_r8d_dword_ptr_[r@@ di+0x18], mov_edx_0x1@@ 31, lea_rsi_[rip+0x1@@ 8d@@ 2e], mov_edi_0x20, xor_eax_eax, call_0x35@@ 9, mov_r8d_dword_ptr_[r@@ 12+0x18], mov_edi_1, lea_rcx_[rip+0x@@ 18@@ e@@ 93], mov_edx_0x1@@ 33, lea_rsi_[rip+0x1@@ 8d@@ 05], xor_eax_eax, call_0x33@@ 5, mov_rdi_qword_ptr_[r12+0x@@ 20], test_rdi_rdi, je_0x18, mov_rdx_r12, lea_rsi_[rip-0x@@ 9@@ 34], pop_r12, jmp_0x@@ aa@@ a, pop_r12, ret
endbr64, push_r12, xor_eax_eax, mov_r12_rdi, mov_r8d_dword_ptr_[r@@ di+0x18], lea_rcx_[rip+0x@@ 18@@ e6@@ 2], mov_edx_0x1@@ 44, lea_rsi_[rip+0x18@@ ca@@ c], mov_edi_0x20, call_0x2@@ d9, cmp_qword_ptr_[r12+0x1@@ 28@@ 0]_r12, jne_0x18, mov_rdi_qword_ptr_[r12+0x@@ 20], mov_rdx_r12, lea_rsi_[rip-0x@@ 93@@ 5], pop_r12, jmp_0xa@@ 49, lea_rcx_[rip+0x@@ 18@@ e@@ dd], mov_edx_0x1@@ 45, lea_rsi_[rip+0x18@@ c6@@ f], lea_rdi_[rip+0x15@@ ee@@ 3], call_0xfffffffffffee@@ 92@@ a
endbr64, push_rbp, push_rbx, sub_rsp_8, test_rdx_rdx, je_0x34, mov_rbx_rsi, mov_rbp_rcx, mov_rsi_rdi, xor_ecx_ecx, mov_rdi_rbx, call_0xfffffffffffff93@@ 3, test_eax_eax, js@@ _0x16, lea_rax_[rip+0x27@@ 54@@ 3], mov_qword_ptr_[rbx]_rax, mov_rax_qword_ptr_[rbp+0x20], mov_qword_ptr_[rbx+0x20]_rax, xor_eax_eax, add_rsp_8, pop_rbx, pop_rbp, ret, lea_rcx_[rip+0x@@ 18@@ e@@ 58], mov_edx_0x1@@ 66, lea_rsi_[rip+0x18@@ c0@@ a], lea_rdi_[rip+0x18@@ c7@@ 3], call_0xfffffffffffee@@ 8c@@ 5
endbr64, push_r14, xor_eax_eax, lea_rcx_[rip+0x@@ 18@@ c7@@ 5], push_r13, mov_edx_0x1@@ 76, lea_rsi_[rip+0x18@@ be@@ 1], push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, mov_r8d_dword_ptr_[r@@ di+0x18], mov_edi_0x20, call_0x2@@ 00, cmp_qword_ptr_[rbp+0x@@ 20]_0, je_0x1@@ 5f, cmp_qword_ptr_[rbp+0x@@ 12@@ 8@@ 0]_rbp, jne_0x13@@ 3, mov_rsi_qword_ptr_[rbp+0x10], test_rsi_rsi, je_0x107, mov_rdi_rbp, call_0x30@@ a3, mov_r12_rax, test_rax_rax, je_0xe8, mov_edi_0x28, call_0xfffffffffffeea@@ 4d, mov_r13_rax, test_rax_rax, je_0x19, mov_rdx_qword_ptr_[r@@ 12+0x18], mov_rcx_r12, mov_rsi_rax, mov_rdi_rbp, call_0xffffffffffffff@@ 12, test_eax_eax, jns@@ _0x5@@ 3, mov_rax_qword_ptr_[rip+0x2@@ 6f@@ 32], mov_ecx_dword_ptr_[r@@ bp+0x18], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x@@ 18d@@ 1d], mov_esi_1, xor_eax_eax, call_0xfffffffffffeeb@@ ee, mov_rdi_r13, call_0xfffffffffffee@@ 6@@ 26, mov_rsi_r12, mov_rdi_rbp, call_0xffffffffffff10@@ fb, mov_qword_ptr_[rbp+0x@@ 38]_0, xor_r14d_r14d, add_rsp_8, pop_rbp, pop_r12, pop_r13, mov_eax_r14d, pop_r14, ret, mov_rsi_r13, mov_rdi_rbp, call_0xffffffffffff11@@ f2, mov_r14d_eax, test_eax_eax, js_0x2@@ a, mov_rsi_rbp, mov_rdi_r13, call_0xfffffffffffff95@@ 0, mov_r14d_eax, test_eax_eax, jns_0xffffffffffffff@@ b5, mov_rsi_r12, mov_rdi_rbp, call_0xffffffffffff0@@ ffe, mov_rsi_r13, mov_rdi_rbp, call_0xffffffffffff13@@ 33, mov_rdi_r13, call_0xfffffffffffff8@@ 2b, mov_rdi_r12, call_0xffffffffffff47@@ 43, mov_rdi_r13, call_0xfffffffffffee@@ 5a@@ b, add_rsp_8, pop_rbp, pop_r12, pop_r13, mov_eax_r14d, pop_r14, ret, mov_r14d@@ _0xffffffff, jmp_0xffffffffffffff7f, lea_rcx_[rip+0x@@ 18@@ cb@@ e], mov_edx_0x1@@ 81, lea_rsi_[rip+0x18@@ a@@ 90], lea_rdi_[rip+0x18@@ b@@ 28], call_0xfffffffffffee@@ 74@@ b, lea_rcx_[rip+0x@@ 18@@ c9@@ f], mov_edx_0x1@@ 7d, lea_rsi_[rip+0x18@@ a7@@ 1], lea_rdi_[rip+0x15@@ ce@@ 5], call_0xfffffffffffee@@ 7@@ 2c, lea_rcx_[rip+0x@@ 18@@ c@@ 80], mov_edx_0x1@@ 7a, lea_rsi_[rip+0x18@@ a5@@ 2], lea_rdi_[rip+0x15@@ cd@@ b], call_0xfffffffffffee@@ 70@@ d
sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_rcx_rsp, lea_rsi_[rsp+0x@@ f], jmp_7, mov_rsi_rax, mov_edx_edi, and_edx_0xf, lea_eax_[r@@ dx+0x30], add_edx@@ _0x57, cmp_al@@ _0x39, cmova@@ _eax_edx, shr_rdi@@ _4, mov_byte_ptr_[rsi@@ ]_al, lea_rax_[r@@ si-1], cmp_rsi_rcx, jne_0xffffffffffffffe0, mov_edx_0x10, mov_edi_1, call_0xfffffffffffee@@ 5d@@ 4, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_7, add_rsp_0x28, ret, call_0xfffffffffffee@@ 6@@ 1@@ a
endbr64, push_r13, mov_r13d_edx, push_r12, mov_r12_rsi, push_rbp, push_rbx, sub_rsp_0x4@@ e8, mov_qword_ptr_[rsp+0x4@@ 5@@ 0]_r8, mov_qword_ptr_[rsp+0x4@@ 5@@ 8]_r9, test_al_al, je_0x42, movaps_xmmword_ptr_[rsp+0x@@ 4@@ 60]_xmm0, movaps_xmmword_ptr_[rsp+0x@@ 4@@ 70]_xmm1, movaps_xmmword_ptr_[rsp+0x@@ 4@@ 80@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x@@ 4@@ 90@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0x@@ 4a@@ 0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0x@@ 4b0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0x@@ 4c@@ 0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0x@@ 4d@@ 0@@ ]_xmm7, lea_rbx_[rip+0x@@ 26@@ d6@@ e], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x4@@ 28]_rax, xor_eax_eax, test_dword_ptr_[r@@ bx+0x@@ 2c]@@ _edi, je_0x72, lea_rax_[rsp+0x@@ 510], lea_rbp_[rsp+0x20], mov_r8_rcx, mov_qword_ptr_[rsp+0x10]_rax, lea_r9_[r@@ sp+8], lea_rax_[rsp+0x@@ 430], mov_ecx_0x400, mov_edx_1, mov_esi_0x400, mov_rdi_rbp, mov_dword_ptr_[rsp+8]@@ _0x20, mov_dword_ptr_[rsp+0xc]@@ _0x30, mov_qword_ptr_[rsp+0x18]_rax, call_0xfffffffffffee@@ 8@@ 1d, xor_edi_edi, mov_r8_rbp, mov_ecx_r13d, mov_rdx_r12, lea_rsi_[rip+0x18@@ c@@ e8], xor_eax_eax, call_0x4@@ a0@@ 4, mov_rdi_qword_ptr_[rbx+0x20], call_0xfffffffffffee@@ 7a@@ b, mov_rax_qword_ptr_[rsp+0x@@ 428], xor_rax_qword_ptr_fs:[0x28], jne_0x10, add_rsp_0x4@@ e8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, call_0xfffffffffffee@@ 4f@@ 5
endbr64, push_r15, push_r14, mov_r14_rdi, push_r13, push_r12, push_rbp, movsxd_rbp@@ _edx, push_rbx, sub_rsp_0x28, mov_dword_ptr_[rsp+0xc]@@ _ebp, mov_qword_ptr_[rsp]_rsi, shr@@ _rbp@@ _3, inc_rbp, lea_rdi_[r@@ bp*8], mov_rcx_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rcx, xor_ecx_ecx, call_0xfffffffffffee@@ 7@@ 31, test_rax_rax, je_0xf5, mov_r12_rax, mov_rax_qword_ptr_[rsp], xor_r13d_r13d, lea_rdx_[rax@@ +7], and_rdx@@ _0xfffffffffffffff8, mov_rbx_rax, mov_r15_rdx, mov_rdx_r15, xor_ecx_ecx, mov_rsi_r14, mov_edi_1, xor_eax_eax, call_0xfffffffffffee@@ 74@@ 9, mov_qword_ptr_[r12@@ +r@@ 13*@@ 8]_rax, inc@@ _r13, add_r15_8, cmp_rbp@@ _r13, jg_0xffffffffffffff@@ de, mov_eax_dword_ptr_[rsp+0xc], test_eax_eax, jle_0x@@ 81, mov_r13d_eax, dec@@ _r13d, mov_rax_qword_ptr_[rsp], shr@@ _r13d@@ _3, lea_r14@@ _[rax+r@@ 13@@ *8+8], lea_rbp_[r@@ sp+0x1@@ 7], mov_r13_r12, mov_rdi_rbx, call_0xfffffffffffffd@@ bd, mov_edx_1, mov_rsi_rbp, mov_edi_1, mov_byte_ptr_[rsp+0x1@@ 7]@@ _0x2d, add_r13_8, call_0xfffffffffffee@@ 3c@@ 2, mov_edx_1, mov_rsi_rbp, mov_edi_1, mov_byte_ptr_[rsp+0x1@@ 7]@@ _0x3e, call_0xfffffffffffee@@ 3a@@ b, mov_rdi_qword_ptr_[r@@ 13@@ -8], add_rbx_8, call_0xfffffffffffffd@@ 7e, mov_edx_1, mov_rsi_rbp, mov_edi_1, mov_byte_ptr_[rsp+0x1@@ 7]@@ _0xa, call_0xfffffffffffee@@ 38@@ 7, cmp_rbx_r14, jne_0xffffffffffffff9f, mov_rdi_r12, call_0xfffffffffffee@@ 27@@ a, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x29, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret, lea_rdi_[rip+0x15@@ 7f@@ 8], call_0xfffffffffffee@@ 78@@ d, mov_edi_1, call_0xfffffffffffee@@ 7d@@ 3, call_0xfffffffffffee@@ 39@@ e
endbr64, push_r12, mov_r8_rdi, lea_rcx_[rip+0x@@ 18@@ b5@@ 3], push_rbp, mov_edx_0x2@@ b, mov_rbp_rdi, sub_rsp_8, mov_edi_0x20, lea_rsi_[rip+0x18@@ b4@@ f], xor_eax_eax, call_0xfffffffffffffd@@ 55, mov_rdi_qword_ptr_[rip+0x2@@ 9@@ 97@@ 1], test_rdi_rdi, je_0x26, mov_rsi_rbp, call_0x4@@ 21, mov_r12_rax, test_rax_rax, je_0x46, add_rsp_8, pop_rbp, mov_rax_r12, pop_r12, ret, lea_rsi_[rip+0x5@@ 99], lea_rdi_[rip+0x5@@ 22], call_0x@@ 92, mov_rdi_rax, mov_rsi_rbp, mov_qword_ptr_[rip+0x2@@ 99@@ 28]_rax, call_0x3e@@ 0, mov_r12_rax, test_rax_rax, jne_0xffffffffffffffc1, mov_rdi_rbp, call_0xfffffffffffee@@ 77@@ d, mov_rdi_rbp, mov_esi_3, mov_r12_rax, call_0x6@@ 34@@ d, mov_rbp_rax, test_rax_rax, je_0x22, mov_rdi_qword_ptr_[rip+0x2@@ 98@@ f1], mov_rsi_r12, mov_rdx_rbp, call_0x1@@ 83, mov_r12_rbp, jmp_0xffffffffffffff87, test_r12_r12, je_0xffffffffffffff@@ 79, mov_rbp_r12, jmp_0xffffffffffffffd@@ 4
endbr64, jmp_qword_ptr_[r@@ si+@@ 8@@ ]
endbr64, jmp_qword_ptr_[r@@ si@@ ]
endbr64, push_rbp, xor_eax_eax, mov_rbp_rdi, push_rbx, mov_edi_0x20, mov_rbx_rsi, sub_rsp_8, lea_rcx_[rip+0x@@ 18@@ a6@@ 5], mov_edx_0x3@@ c, lea_rsi_[rip+0x16@@ 85@@ f], call_0xfffffffffffffc@@ 56, mov_edi_0x1@@ f@@ 38, call_0xfffffffffffee@@ 4d@@ c, test_rax_rax, je_0x39, mov_rdx_rax, lea_rcx_[r@@ ax+0x1@@ f@@ 28], mov_qword_ptr_[rdx]_0, add_rdx_8, cmp_rdx_rcx, jne_0xfffffffffffffff2, mov_qword_ptr_[rax+0x1@@ f2@@ 8]_rbp, mov_qword_ptr_[rax+0x1@@ f@@ 30]@@ _rbx, add_rsp_8, pop_rbx, pop_rbp, ret, lea_rdi_[rip+0x18@@ a@@ 13], call_0xfffffffffffee@@ 5f@@ 4, mov_edi_1, call_0xfffffffffffee@@ 63@@ a
endbr64, push_r13, xor_eax_eax, mov_r13_rdi, push_r12, lea_rcx_[rip+0x@@ 18@@ 9f@@ 4], mov_edx@@ _0x50, push_rbp, lea_rsi_[rip+0x16@@ 7d@@ 8], mov_edi_0x20, push_rbx, sub_rsp_8, call_0xfffffffffffffb@@ c5, test_r13_r13, je_0x51, mov_rbp_r13, lea_r12_[r@@ 13+0x1@@ f@@ 28], mov_rbx_qword_ptr_[rbp], test_rbx_rbx, je_0x1a, mov_rdi_rbx, mov_rbx_qword_ptr_[rbx+0x18], call_0xfffffffffffee0@@ 49, test_rbx_rbx, jne_0xfffffffffffffff1, mov_qword_ptr_[rbp]_0, add_rbp_8, cmp_rbp_r12, jne_0xffffffffffffffd0, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_rdi_r13, pop_r13, jmp_0xfffffffffff@@ ee@@ 0@@ 21, lea_rcx_[rip+0x@@ 18@@ a6@@ d], mov_edx_0x5@@ 1, lea_rsi_[rip+0x16@@ 76@@ 2], lea_rdi_[rip+0x15@@ df@@ 4], call_0xfffffffffffee@@ 1e@@ 2
endbr64, push_r14, xor_eax_eax, lea_rcx_[rip+0x@@ 18@@ 95@@ 6], push_r13, mov_r13_rdx, mov_edx_0x6@@ 2, push_r12, mov_r12_rsi, lea_rsi_[rip+0x16@@ 7@@ 24], push_rbp, mov_rbp_rdi, mov_edi_0x20, push_rbx, call_0xfffffffffffffb@@ 11, mov_rdi_r12, call_qword_ptr_[rbp+0x@@ 1f@@ 28], mov_ebx_eax, mov_r14_rbx, imul@@ _rbx@@ _rbx@@ _0x6@@ e@@ ec@@ be@@ 1, mov_eax_r14d, mov_edi_0x20, shr@@ _rbx@@ _0x20, mov_r9_rbx, mov_ebx_r14d, sub_ebx@@ _r9d, shr_ebx@@ _1, add_ebx@@ _r9d, shr_ebx@@ _9, imul@@ _ebx@@ _ebx@@ _0x3@@ e5, sub_eax_ebx, mov_ebx_eax, call_0xfffffffffffee@@ 360, test_rax_rax, je_0x82, mov_edx_ebx, lea_rsi_[r@@ bp@@ +rdx*8], mov_dword_ptr_[rax]@@ _r14d, mov_qword_ptr_[rax+@@ 8]_r12, mov_qword_ptr_[rax+0x1@@ 0]_r13, mov_qword_ptr_[rax+0x18]_0, mov_rdx_qword_ptr_[rsi], jmp_0x11, mov_rcx_qword_ptr_[r@@ dx+0x18], test_rcx_rcx, je_0x19, mov_rdx_rcx, test_rdx_rdx, jne_0xfffffffffffffff1, mov_qword_ptr_[rsi]_rax, jmp_0x10, mov_qword_ptr_[rdx+0x1@@ 8]_rax, push_r13, mov_r9d_ebx, mov_r8_rbp, push_r12, mov_edx_0x7@@ c, xor_eax_eax, lea_rcx_[rip+0x@@ 18@@ 8f@@ c], lea_rsi_[rip+0x16@@ 66@@ 6], mov_edi_3, call_0xfffffffffffffa@@ 58, pop_rax, pop_rdx, pop_rbx, pop_rbp, pop_r12, pop_r13, xor_eax_eax, pop_r14, ret, lea_rdi_[rip+0x15@@ 4a@@ 2], call_0xfffffffffffee@@ 42@@ f, mov_edi_1, call_0xfffffffffffee@@ 47@@ 5
endbr64, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x10, test_rdi_rdi, je_0xd7, mov_r13_rdi, mov_r8_rsi, lea_rcx_[rip+0x@@ 18@@ 8@@ 3c], mov_edx_0x8@@ 4, mov_r14_rsi, mov_edi_0x20, lea_rsi_[rip+0x16@@ 5@@ ff], xor_eax_eax, call_0xfffffffffffff9f@@ 4, mov_rdi_r14, call_qword_ptr_[r@@ 13+0x1@@ f@@ 28], mov_r12d_eax, mov_eax_eax, imul_rax_rax@@ _0x6@@ e@@ ec@@ be@@ 1, mov_ecx_r12d, shr_rax_0x20, mov_rdx_rax, mov_eax_r12d, sub_eax_edx, shr_eax_1, add_eax_edx, shr_eax@@ _9, imul_eax_eax@@ _0x3@@ e5, sub_ecx_eax, mov_rbp_qword_ptr_[r@@ 13@@ +rcx*8], lea_rbx_[r@@ 13@@ +rcx*8], test_rbp_rbp, je_0x2e, cmp_dword_ptr_[r@@ bp]@@ _r12d, jne_0x14, mov_rsi_qword_ptr_[rbp+8], mov_rdi_r14, call_qword_ptr_[r@@ 13+0x1@@ f@@ 30], test_eax_eax, je_0x22, mov_rax_qword_ptr_[rbx], mov_rbp_qword_ptr_[r@@ ax+0x18], lea_rbx_[r@@ ax+0x18], test_rbp_rbp, jne_0xffffffffffffffda, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, xor_eax_eax, pop_r14, ret, mov_rax_qword_ptr_[rbp+0x18], mov_rdi_rbp, mov_qword_ptr_[rbx]_rax, mov_rax_qword_ptr_[rbp+0x10], mov_qword_ptr_[rsp+8]_rax, call_0xfffffffffffed@@ e0@@ d, mov_rax_qword_ptr_[rsp+8], add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, lea_rcx_[rip+0x@@ 18@@ 8@@ 37], mov_edx_0x8@@ 3, lea_rsi_[rip+0x16@@ 5@@ 3c], lea_rdi_[rip+0x17@@ 3@@ 14], call_0xfffffffffffed@@ fb@@ c
endbr64, push_r13, lea_rcx_[rip+0x@@ 18@@ 75@@ 5], mov_edx_0x@@ a0, push_r12, mov_r13_rsi, mov_r12_rdi, push_rbp, lea_rsi_[rip+0x16@@ 50@@ 7], mov_edi_0x20, push_rbx, xor_eax_eax, sub_rsp_8, call_0xfffffffffffff8f@@ 2, mov_rdi_r13, call_qword_ptr_[r@@ 12+0x1@@ f@@ 28], mov_ebp_eax, mov_eax_eax, imul_rax_rax@@ _0x6@@ e@@ ec@@ be@@ 1, mov_ecx_ebp, shr_rax_0x20, mov_rdx_rax, mov_eax_ebp, sub_eax_edx, shr_eax_1, add_eax_edx, shr_eax@@ _9, imul_eax_eax@@ _0x3@@ e5, sub_ecx_eax, mov_rbx_qword_ptr_[r@@ 12@@ +rcx*8], test_rbx_rbx, je_0x24, cmp_dword_ptr_[rbx]@@ _ebp, jne_0x15, mov_rsi_qword_ptr_[rbx+8], mov_rdi_r13, call_qword_ptr_[r@@ 12+0x1@@ f@@ 30], test_eax_eax, je_0x1b, mov_rbx_qword_ptr_[rbx+0x18], test_rbx_rbx, jne_0xffffffffffffffe2, add_rsp_8, pop_rbx, pop_rbp, pop_r12, xor_eax_eax, pop_r13, ret, mov_rax_qword_ptr_[rbx+0x10], add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret
endbr64, push_r14, xor_eax_eax, lea_rcx_[rip+0x@@ 18@@ 6b@@ 5], push_r13, mov_r13_rdi, mov_edi_0x20, push_r12, mov_r12_rdx, mov_edx_0x@@ b6, push_rbp, mov_rbp_rsi, lea_rsi_[rip+0x16@@ 44@@ b], push_rbx, call_0xfffffffffffff84@@ 1, test_r13_r13, je_0x38, lea_r14_[r@@ 13+0x1@@ f@@ 28], mov_rbx_qword_ptr_[r@@ 13], test_rbx_rbx, je_0x1f, mov_rsi_qword_ptr_[rbx+0x10], mov_rdi_qword_ptr_[rbx+8], mov_rdx_r12, call_rbp, mov_rbx_qword_ptr_[rbx+0x18], test_rbx_rbx, jne_0xffffffffffffffec, add_r13_8, cmp_r13@@ _r14, jne_0xffffffffffffffd3, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret
endbr64, test_rdi_rdi, je_0x40, movsx_r8d@@ _byte_ptr_[rdi], mov_ecx_5, test_r8b_r8b, jne_0x1c, jmp_0x29, shl_eax_cl, xor_r8d@@ _eax, lea_eax_[rcx@@ +5], sub_ecx@@ _0x13, cmp_eax@@ _0x18, cmovbe@@ _ecx_eax, movsx_eax_byte_ptr_[r@@ di+1], inc_rdi, test_al_al, jne_0xffffffffffffffe6, mov_eax_r8d, ret, xor_r8d_r8d, mov_eax_r8d, ret, push_rax, lea_rcx_[rip+0x@@ 18@@ 68@@ 1], mov_edx_0x@@ cc, lea_rsi_[rip+0x16@@ 39@@ e], lea_rdi_[rip+0x19@@ 94@@ 4], call_0xfffffffffffed@@ e@@ 1@@ e
endbr64, sub_rsp_8, test_rdi_rdi, je_0x10, test_rsi_rsi, je_0x2a, add_rsp_8, jmp_0xfffffffffff@@ ed@@ e@@ ea, lea_rcx_[rip+0x@@ 18@@ 6@@ 1e], mov_edx_0x@@ da, lea_rsi_[rip+0x16@@ 35@@ b], lea_rdi_[rip+0x18@@ 5b@@ 3], call_0xfffffffffffedd@@ db, lea_rcx_[rip+0x@@ 18@@ 5@@ ff], mov_edx_0x@@ db, lea_rsi_[rip+0x16@@ 33@@ c], lea_rdi_[rip+0x18@@ 59@@ 9], call_0xfffffffffffedd@@ b@@ c
endbr64, mov_rax_rdi, ret
endbr64, mov_rax_rdi, sub_rax_rsi, ret
endbr64, push_r15, xor_eax_eax, push_r14, push_r13, push_r12, mov_r12_rdx, mov_edx_0x@@ f2, push_rbp, mov_rbp_rsi, lea_rsi_[rip+0x16@@ 2e@@ 8], push_rbx, mov_rbx_rcx, lea_rcx_[rip+0x@@ 18@@ 54@@ 6], sub_rsp_0x28, mov_qword_ptr_[rsp+0x18]_rdi, mov_edi_0x20, call_0xfffffffffffff6c@@ 6, mov_edi_0x1@@ f@@ 38, call_0xfffffffffffed@@ f@@ 4c, mov_qword_ptr_[rsp+0x10]_rax, test_rax_rax, je_0x1@@ 30, mov_rsi_qword_ptr_[rsp+0x18], mov_rdi_qword_ptr_[rsp+0x10], mov_edx_0x1@@ f@@ 38, call_0xfffffffffffed@@ ea@@ a, mov_qword_ptr_[rsp+8]_0, mov_rax_qword_ptr_[rsp+8], mov_rdx_qword_ptr_[rsp+0x18], mov_r15_qword_ptr_[rsp+0x10], mov_r13_qword_ptr_[r@@ dx+rax], add_r15_rax, test_r13_r13, jne_0x3c, jmp_0x@@ d9, mov_rdi_qword_ptr_[r13+0x10], mov_rsi_rbx, call_r12, test_rax_rax, je_0x7b, mov_rsi_qword_ptr_[r15], mov_r13_qword_ptr_[r@@ 13+0x18], mov_qword_ptr_[rsi+@@ 8]_r14, mov_rcx_qword_ptr_[r@@ 15], mov_qword_ptr_[rcx+0x1@@ 0]_rax, mov_r8_qword_ptr_[r@@ 15], lea_r15_[r@@ 8+0x18], test_r13_r13, je_0xa5, mov_edi_0x20, call_0xfffffffffffe@@ dec@@ 2, mov_qword_ptr_[r15]_rax, test_rax_rax, je_0xa8, movdqu_xmm0_xmmword_ptr_[r@@ 13], mov_rsi_rbx, movups_xmmword_ptr_[rax]_xmm0, movdqu_xmm1_xmmword_ptr_[r@@ 13+0x10], movups_xmmword_ptr_[rax+0x1@@ 0@@ ]_xmm1, mov_rdi_qword_ptr_[r13+8], call_rbp, mov_r14_rax, test_rax_rax, jne_0xffffffffffffff@@ 97, cmp_qword_ptr_[r@@ 13+@@ 8]_0, je_0xffffffffffffff@@ 90, lea_rdi_[rip+0x18@@ 46@@ e], call_0xfffffffffffed@@ fd@@ f, jmp_0x1d, cmp_qword_ptr_[r13+0x1@@ 0]_0, je_0xffffffffffffff@@ 82, lea_rdi_[rip+0x18@@ 45@@ b], call_0xfffffffffffed@@ fc@@ 2, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffff9d@@ 8, mov_rdi_r15, call_0xfffffffffffeda@@ 70, mov_qword_ptr_[rsp+0x10]_0, mov_rax_qword_ptr_[rsp+0x10], add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, add_qword_ptr_[r@@ sp+@@ 8]_8, mov_rax_qword_ptr_[rsp+8], cmp_rax@@ _0x1@@ f@@ 28, jne_0xfffffffffffffe@@ fb, jmp_0xffffffffffffffcf, lea_rdi_[rip+0x18@@ 38@@ 7], call_0xfffffffffffed@@ f@@ 68, mov_edi_1, call_0xfffffffffffed@@ fa@@ e
endbr64, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_rcx_rsp, mov_qword_ptr_[rsp]_rsi, mov_qword_ptr_[rsp+8]_rdx, lea_rsi_[rip-0x@@ 75@@ b], lea_rdx_[rip-0x@@ 77@@ 2], call_0xfffffffffffffe@@ 2e, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_7, add_rsp_0x28, ret, call_0xfffffffffffedb@@ 2@@ 4
endbr64, mov_rdx_qword_ptr_[rdx], mov_rax_qword_ptr_[rsi+0x10], xor_r8d_r8d, cmp_rax_rdx, ja@@ _0x10, add_rax_qword_ptr_[r@@ si+0x20], xor_r8d_r8d, cmp_rax_rdx, seta@@ _r8b, mov_eax_r8d, ret
endbr64, mov_eax_dword_ptr_[rdx], cmp_dword_ptr_[rsi+@@ 4]_eax, sete_al, movzx_eax_al, ret
endbr64, mov_rax_qword_ptr_[rsi], cmp_qword_ptr_[r@@ di]_rax, setne_al, movzx_eax_al, ret
endbr64, mov_rax_qword_ptr_[rsi], cmp_qword_ptr_[rdi+0x1@@ 8]_rax, setne_al, movzx_eax_al, ret
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_ebx_ecx, sub_rsp_0x38, mov_qword_ptr_[rsp]_rsi, mov_qword_ptr_[rsp+8]_rdx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, cmp_rdx_rbx, jbe_0x@@ 92, mov_r12_rdi, mov_r13_rbx, mov_r14_r8, mov_r15_r9, lea_rbp_[rsp+0x10], mov_rdx_rbp, mov_esi_r13d, mov_rdi_r12, call_0xfffffffffffeda@@ 94, test_rax_rax, je_0x74, mov_esi_dword_ptr_[rsp+0x10], mov_rdx_r15, add_rsi@@ _qword_ptr_[rsp], mov_rdi_rbp, call_r14, test_eax_eax, je_0x37, cmp_eax_2, jne_0x42, movabs_rax@@ _0xffffffff@@ 00000000, or_rax@@ _rbx, mov_rcx_qword_ptr_[rsp+0x28], xor_rcx_qword_ptr_fs:[0x28], jne_0x4c, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_eax_[r@@ 13+1], jmp_0xffffffffffffffd9, lea_ebx_[r@@ 13+1], mov_r13_rbx, cmp_rbx@@ _qword_ptr_[rsp+8], jb_0xffffffffffffff@@ 87, xor_eax_eax, jmp_0xffffffffffffffbd, movabs_rax@@ _0xfffffff@@ e@@ 00000000, or_rax@@ _rbx, jmp_0xffffffffffffffa8, call_0xfffffffffffed@@ 9b@@ 9
endbr64, push_rbx, mov_rbx_rdx, mov_rax_qword_ptr_[rdx], mov_edx_dword_ptr_[rsi], mov_rdi_qword_ptr_[rax+8], movzx_esi_word_ptr_[r@@ ax+0x4@@ e], call_0xfffffffffffed@@ 9f@@ b, mov_rsi_qword_ptr_[rbx+8], mov_rdi_rax, call_0xfffffffffffeda@@ ff, test_eax_eax, sete_al, movzx_eax_al, pop_rbx, ret
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x78, mov_qword_ptr_[rsp+0x10]_rdx, mov_qword_ptr_[rsp+0x18]_rcx, mov_qword_ptr_[rsp+8]_r8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x68]_rax, xor_eax_eax, cmp_word_ptr_[r@@ si@@ ]_1, jbe_0x@@ 82, mov_r13_rdi, mov_r12_rsi, mov_r14_r9, mov_ebx_1, lea_rbp_[rsp+0x20], jmp_0x36, mov_rsi_rbp, mov_rdi_rax, call_0xfffffffffffed@@ 80@@ a, test_rax_rax, je_0x36, mov_rax_qword_ptr_[rsp+8], mov_rdx_r14, mov_rsi_rbp, mov_rdi_r15, call_rax, test_eax_eax, jne_0x6e, movzx_eax_word_ptr_[r@@ 12], inc_rbx, cmp_eax_ebx, jle_0x@@ 35, mov_rdi_qword_ptr_[r13], mov_rsi_rbx, call_0xfffffffffffedd@@ 49, mov_r15_rax, test_rax_rax, jne_0xffffffffffffffbe, lea_rcx_[rip+0x@@ 18@@ 1e@@ d], mov_edx_0x8@@ 6, lea_rsi_[rip+0x18@@ 6e@@ 8], mov_edi_1, xor_eax_eax, call_0xfffffffffffff2c@@ 2, mov_eax_0xffffffff, mov_rcx_qword_ptr_[rsp+0x68], xor_rcx_qword_ptr_fs:[0x28], jne_0x52, add_rsp_0x78, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[rsp+0x10], movdqa_xmm0_xmmword_ptr_[rsp+0x@@ 20], mov_qword_ptr_[rax]@@ _r15, movdqa_xmm1_xmmword_ptr_[r@@ sp+0x@@ 30], mov_rax_qword_ptr_[rsp+0x18], movdqa_xmm2_xmmword_ptr_[r@@ sp+0x@@ 40], movdqa_xmm3_xmmword_ptr_[r@@ sp+0x@@ 50], movups_xmmword_ptr_[rax]_xmm0, movups_xmmword_ptr_[rax+0x1@@ 0@@ ]_xmm1, movups_xmmword_ptr_[rax+0x@@ 20]_xmm2, movups_xmmword_ptr_[rax+0x@@ 30]_xmm3, xor_eax_eax, jmp_0xffffffffffffffa2, call_0xfffffffffffed@@ 86@@ 8
push_r15, mov_r15_rdx, push_r14, push_r13, push_r12, mov_r12_r9, push_rbp, mov_rbp_rdi, mov_rdi_rdx, push_rbx, mov_rbx_rcx, sub_rsp_0x68, mov_qword_ptr_[rsp]_rsi, mov_qword_ptr_[rsp+8]_r8, xor_esi_esi, mov_r14@@ _qword_ptr_[rsp+0xa0], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x58]_rax, xor_eax_eax, mov_r13@@ _qword_ptr_[rsp+0x@@ a8], call_0xfffffffffffed@@ 908, mov_qword_ptr_[r12]_rax, mov_rsi_rax, mov_rax_qword_ptr_[rbx+0x20], xor_edx_edx, div@@ _qword_ptr_[r@@ bx+0x38], mov_qword_ptr_[r14]_rax, test_rsi_rsi, je_0xf, mov_rdi_r15, call_0xfffffffffffed@@ 8e@@ 7, test_rax_rax, je_0x14, lea_rax_[rip+0x@@ 25@@ fb@@ 6], cmp_qword_ptr_[rax+0x@@ 50]_0, jne_0x@@ eb, mov_rdi_qword_ptr_[rbp], mov_esi_dword_ptr_[r@@ bx+0x28], call_0xfffffffffffedc@@ 24, mov_rbp_rax, test_rax_rax, je_0xb2, lea_rsi_[rsp+0x10], mov_rdi_rax, call_0xfffffffffffed@@ 6@@ 9b, test_rax_rax, je_0x9c, xor_esi_esi, mov_rdi_rbp, call_0xfffffffffffed@@ 8@@ 98, mov_rbx_rax, test_rax_rax, je_0x4a, mov_rsi_rax, mov_rdi_rbp, call_0xfffffffffffed@@ 88@@ 5, test_rax_rax, jne_0x3a, mov_rax_qword_ptr_[rbx+0x10], cmp_qword_ptr_[rsp+0x@@ 30]_rax, jne_0x2f, cmp_qword_ptr_[rbx+0x1@@ 8]_0, jne_0x28, mov_rax_qword_ptr_[rbx], mov_qword_ptr_[r13]_rax, mov_rax_qword_ptr_[rsp+0x58], xor_rax_qword_ptr_fs:[0x28], jne_0x69, add_rsp_0x68, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_edi_0xffffffff, call_0xfffffffffffed@@ 98@@ e, mov_r8_qword_ptr_[rsp], mov_ecx_dword_ptr_[rsp+0x38], mov_r9_rax, lea_rdx_[rip+0x18@@ 0@@ cf], mov_rax_qword_ptr_[rip+0x25@@ ec0], mov_esi_1, mov_rdi_qword_ptr_[rax], xor_eax_eax, call_0xfffffffffffedb@@ 86, mov_edi_1, call_0xfffffffffffedb@@ 4c, or_edi@@ _0xffffffff, call_0xfffffffffffed@@ 95@@ 4, mov_r9_rax, mov_r8_qword_ptr_[rsp], mov_ecx_dword_ptr_[rsp+0x38], lea_rdx_[rip+0x18@@ 0@@ 5d], jmp_0xffffffffffffffc6, call_0xfffffffffffed@@ 6f@@ b, or_edi@@ _0xffffffff, call_0xfffffffffffed@@ 93@@ 3, mov_r9_rax, mov_rax_qword_ptr_[rip+0x2@@ 5e@@ 74], mov_r8_qword_ptr_[rsp], mov_rdi_qword_ptr_[rax], mov_rcx_qword_ptr_[rsp+8], lea_rdx_[rip+0x18@@ 00@@ 1], mov_esi_1, xor_eax_eax, call_0xfffffffffffedb@@ 2a, mov_edi_1, call_0xfffffffffffeda@@ f@@ 0
push_rbp, mov_rbp_rsp, push_r15, mov_r15_rdx, push_r14, push_r13, mov_r13_rsi, push_r12, push_rbx, sub_rsp_0xd8, mov_rax_qword_ptr_[rbp+0x10], mov_qword_ptr_[rbp-0xf@@ 8]_rdi, mov_qword_ptr_[rbp-0xb@@ 0]_rcx, mov_qword_ptr_[rbp-0xd@@ 8]_r8, mov_qword_ptr_[rbp-0xa@@ 8]_r9, mov_qword_ptr_[rbp-0xe@@ 8]_rax, mov_rcx_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x3@@ 8]_rcx, xor_ecx_ecx, test_rax_rax, je_9, mov_qword_ptr_[rax]_0, mov_rdi_qword_ptr_[rbp-0x@@ a8], mov_qword_ptr_[rbp-0xa@@ 0]_0, shl_rdi_4, call_0xfffffffffffed@@ 8b@@ e, mov_qword_ptr_[rbp-0xb8]_rax, test_rax_rax, je_0x6@@ 39, movzx_ecx_word_ptr_[r@@ 13+0x@@ 4c], mov_rsi_rsp, lea_rax_[rcx@@ *4+0x@@ f], mov_rdx_rax, and_eax@@ _0x7@@ f000, sub_rsi_rax, mov_rax_rsi, and_edx@@ _0x7@@ fff@@ 0, cmp_rsp@@ _rax, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rax, jne_0xffffffffffffffed, and_edx@@ _0xfff, sub_rsp@@ _rdx, test_rdx_rdx, jne_0x55@@ 7, mov_qword_ptr_[rbp-0xf@@ 0]@@ _rsp, mov_r12d_1, lea_rbx_[r@@ bp-0x@@ 80], mov_r14_qword_ptr_[rbp-0x@@ f0], cmp_rcx@@ _1, jbe_0x@@ 540, mov_rdi_qword_ptr_[r13+8], mov_rsi_r12, call_0xfffffffffffed@@ 9f@@ 9, mov_rdi_rax, test_rax_rax, je_0x17, mov_rsi_rbx, call_0xfffffffffffed@@ 47@@ 9, test_rax_rax, je_0xa, mov_rax_qword_ptr_[rbp-0x78], mov_dword_ptr_[r@@ 14+r@@ 12*@@ 4]_eax, movzx_eax_word_ptr_[r@@ 13+0x@@ 4c], inc_r12, cmp_r12_rax, jb_0xffffffffffffff@@ cc, cmp_qword_ptr_[rbp-0x@@ a8]_0, je_0x2@@ 80, mov_qword_ptr_[rbp-0xe@@ 0]_r13, mov_qword_ptr_[rbp-0xc@@ 8]_r15, mov_r14_qword_ptr_[rbp-0x@@ b0], xor_ebx_ebx, lea_r12_[r@@ bp-0x@@ 80], mov_rdx_r12, mov_esi_ebx, mov_rdi_r14, call_0xfffffffffffed@@ 5@@ 98, test_rax_rax, je_0x3@@ 38, movzx_eax_byte_ptr_[rbp-0x@@ 7c], and_eax_0xf, cmp_al_2, jne_0x2@@ 28, cmp_qword_ptr_[rbp-0x@@ 78]_0, je_0x2@@ 1d, cmp_word_ptr_[r@@ bp-0x@@ 7a@@ ]_0, je_0x2@@ 12, mov_r8d_dword_ptr_[rbp-0x@@ 80], mov_rax_qword_ptr_[rbp-0xd8], mov_esi_0x40, lea_r15@@ _[rax+r@@ 8], mov_rdi_r15, call_0xfffffffffffed@@ 5@@ 3e, test_rax_rax, je_0x3@@ 2e, cmp_r15_rax, jae_0x@@ 4d@@ 3, sub_rax@@ _r15, mov_r13_rax, lea_rax_[r13+0x10], mov_rdx_rax, mov_rcx_rsp, and_rax@@ _0xffffffffffff@@ f000, sub_rcx_rax, mov_rax_rcx, mov_qword_ptr_[rbp-0xb@@ 0]@@ _rsp, and_rdx@@ _0xfffffffffffffff0, cmp_rsp@@ _rax, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rax, jne_0xffffffffffffffed, and_edx@@ _0xfff, sub_rsp@@ _rdx, test_rdx_rdx, je_8, or_qword_ptr_[r@@ sp@@ +rdx@@ -8]_0, mov_rdx_r13, mov_rsi_r15, mov_rdi_rsp, mov_qword_ptr_[rbp-0xc@@ 0]@@ _rsp, call_0xfffffffffffed@@ 68@@ 2, mov_byte_ptr_[rsp+r@@ 13]_0, xor_r13d_r13d, cmp_qword_ptr_[rbp-0x@@ e8]_0, je_0x41, mov_rdi_rsp, call_0xfffffffffffed@@ 8e@@ 8, mov_r13_rax, test_rax_rax, je_0x4@@ 12, mov_edi_0x18, call_0xfffffffffffed@@ 6d@@ 2, test_rax_rax, je_0x3@@ ff, mov_rcx_qword_ptr_[rbp-0x@@ e8], or_byte_ptr_[r@@ ax+0x1@@ 0]_1, mov_rdx_qword_ptr_[rcx], mov_qword_ptr_[rax+@@ 8]_r13, mov_qword_ptr_[rax]_rdx, mov_qword_ptr_[rcx]_rax, lea_rax_[rip+0x2@@ 5b@@ f5], mov_rdx_qword_ptr_[rbp-0x@@ c8], mov_rdi_qword_ptr_[r@@ ax+0x50], mov_rsi_qword_ptr_[rbp-0x@@ c0], call_0xffffffffffff3b@@ 43, test_eax_eax, je_0xfc, mov_rax_qword_ptr_[rbp-0xe0], mov_rcx_qword_ptr_[rbp-0x@@ f0], mov_rsi_qword_ptr_[rax+0x@@ f0], movzx_eax_word_ptr_[rbp-0x@@ 7a], add_rsi@@ _qword_ptr_[rbp-0x@@ 78], test_byte_ptr_[rcx@@ +rax*4@@ ]_4, je_0x2@@ 35, mov_qword_ptr_[rbp-0x9@@ 8]_rsi, mov_dword_ptr_[rbp-0x@@ cc@@ ]_0, test_r13_r13, je_0x2@@ 7b, mov_rax_qword_ptr_[rbp-0x98], mov_rsi_qword_ptr_[rbp-0x@@ b8], lea_r8_[rip-0x@@ 7@@ 20], lea_rdx_[rbp-0x@@ a0], lea_rdi_[rbp-0x@@ 90], mov_ecx_0x10, mov_qword_ptr_[rbp-0x90]_rax, mov_qword_ptr_[rbp-0x8@@ 8]_0, call_0xfffffffffffed@@ 6@@ 3b, mov_r8_qword_ptr_[rax+8], mov_r15_r13, test_r8_r8, je_0x2@@ 8c, mov_edx_dword_ptr_[r15], add_r15@@ _4, lea_eax_[rdx-0x1010101], not_edx, and_eax_edx, and_eax_0x80808080, je_0xffffffffffffffea, mov_edx_eax, shr_edx_0x10, test_eax_0x8080, cmove_eax_edx, lea_rdx_[r@@ 15+2], cmove@@ _r15@@ _rdx, mov_ecx_eax, add_cl_al, mov_rdi_qword_ptr_[r@@ 8+0x10], sbb@@ _r15@@ _3, mov_qword_ptr_[rbp-0xc@@ 0]_r8, sub_r15@@ _r13, call_0xfffffffffffed@@ 32@@ 3, cmp_r15_rax, mov_r8_qword_ptr_[rbp-0x@@ c0], jb_0x2@@ 04, mov_eax_dword_ptr_[rbp-0x@@ cc], test_eax_eax, jne_0x2@@ 16, mov_r@@ sp@@ _qword_ptr_[rbp-0x@@ b0], inc_rbx, cmp_qword_ptr_[rbp-0x@@ a@@ 8]_rbx, jne_0xfffffffffffffd@@ af, mov_r15_qword_ptr_[rbp-0x@@ c8], mov_rax_qword_ptr_[rbp-0xb8], xor_ebx_ebx, cmp_qword_ptr_[rbp-0x@@ a0]_0, lea_r14@@ _[rax+8], lea_r13_[r@@ ip-0x@@ 7d@@ a], je_0x8b, mov_r12_qword_ptr_[r@@ 14], test_r12_r12, je_0x2@@ 60, xor_esi_esi, lea_rcx_[r@@ 12+0x18], mov_rdx_r13, mov_rdi_r15, call_0xffffffffffff3@@ 5e@@ 7, test_rax_rax, je_0x19, mov_rdi_r12, call_0xffffffffffff30@@ ba, mov_rdi_r12, call_0xfffffffffffed@@ 142, mov_qword_ptr_[r@@ 14]_0, mov_rax_qword_ptr_[rbp-0xa0], inc_rbx, add_r14_0x10, cmp_rbx_rax, jb_0xffffffffffffff@@ b5, test_rax_rax, je_0x35, mov_r12_qword_ptr_[rbp-0x@@ b8], xor_ebx_ebx, mov_rax_rbx, shl_rax_4, mov_rsi_qword_ptr_[r@@ 12@@ +rax+8], test_rsi_rsi, je_0xa, mov_rdi_r15, call_0xffffffffffff3@@ 5e@@ c, inc_rbx, cmp_rbx@@ _qword_ptr_[rbp-0x@@ a0], jb_0xffffffffffffff@@ dd, mov_rdi_qword_ptr_[rbp-0x@@ b8], call_0xfffffffffffed0@@ e4, xor_eax_eax, mov_rcx_qword_ptr_[rbp-0x38], xor_rcx_qword_ptr_fs:[0x28], jne_0x2@@ 35, lea_rsp_[rbp-0x28], pop_rbx, pop_r12, pop_r13, pop_r14, pop_r15, pop_rbp, ret, dec@@ _qword_ptr_[rbp-0x@@ a0], mov_r@@ sp@@ _qword_ptr_[rbp-0x@@ b0], mov_edi_0xffffffff, call_0xfffffffffffed@@ 44@@ 3, mov_r9_rax, mov_rax_qword_ptr_[rip+0x25@@ 98@@ 4], mov_r8_qword_ptr_[rbp-0x@@ f8], mov_rdi_qword_ptr_[rax], mov_rcx_rbx, lea_rdx_[rip+0x17@@ b@@ d0], mov_esi_1, xor_eax_eax, call_0xfffffffffffed@@ 6@@ 39, jmp_0xfffffffffffffe@@ cb, mov_rdi_r15, call_0xfffffffffffed@@ 1b@@ 5, mov_r13_rax, jmp_0xfffffffffffffc@@ dc, mov_rdi_qword_ptr_[rbp-0x@@ e0], lea_rdx_[rbp-0x@@ 98], call_0xffffffffffffe0@@ 12, test_eax_eax, jns_0xffffffffffff@@ fd@@ c3, call_0xfffffffffffed0@@ 95, mov_edi_dword_ptr_[rax], call_0xfffffffffffed@@ 6@@ 1e, mov_r9_rax, mov_rax_qword_ptr_[rbp-0xc8], mov_rcx_qword_ptr_[rbp-0x@@ c0], mov_r8_qword_ptr_[r@@ ax+0x38], mov_rax_qword_ptr_[rip+0x2@@ 58@@ fd], lea_rdx_[rip+0x17@@ bb@@ 6], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffed@@ 5b@@ c, jmp_0xfffffffffffffe@@ 47, mov_rdi_qword_ptr_[rbp-0x@@ c0], call_0xfffffffffffed@@ 5c@@ 9, mov_r13_rax, test_rax_rax, je_0xffffffffffffff@@ 2a, mov_dword_ptr_[rbp-0x@@ cc@@ ]_1, jmp_0xfffffffffffffd@@ 69, mov_edx_dword_ptr_[rbp-0x@@ cc], mov_rsi_r13, mov_rdi_r8, call_0xffffffffffff2e@@ e4, jmp_0xfffffffffffffd@@ ff, mov_rdi_r13, call_0xfffffffffffec@@ f@@ 9d, jmp_0xfffffffffffffd@@ e8, mov_edi_0x28, mov_qword_ptr_[rbp-0xc0]_rax, call_0xfffffffffffed@@ 3@@ 64, test_rax_rax, mov_r9_qword_ptr_[rbp-0x@@ c0], mov_r15_rax, je_0xfffffffffffffe@@ b7, mov_ecx_dword_ptr_[rbp-0x@@ cc], mov_rsi_qword_ptr_[rbp-0x@@ 98], xor_r8d_r8d, mov_rdx_r13, mov_rdi_rax, mov_qword_ptr_[rbp-0xc@@ 0]_r9, call_0xffffffffffff2@@ dd@@ f, test_eax_eax, js_0xfffffffffffffe@@ 8d, mov_r9_qword_ptr_[rbp-0x@@ c0], mov_rax_qword_ptr_[rbp-0x98], mov_qword_ptr_[r@@ 9+@@ 8]_r15, mov_qword_ptr_[r@@ 9]_rax, jmp_0xfffffffffffffd@@ 7d, or_qword_ptr_[r@@ sp@@ +rdx@@ -8]_0, jmp_0xfffffffffffffaa@@ 9, cmp_qword_ptr_[rbp-0x@@ a8]_0, jne_0xfffffffffffffb@@ 09, jmp_0xfffffffffffffe@@ 24, lea_rcx_[rip+0x@@ 17@@ fb@@ 3], mov_edx_0x3@@ c4, lea_rsi_[rip+0x17@@ e6@@ 6], lea_rdi_[rip+0x17@@ e80], call_0xfffffffffffed0@@ d0, mov_rdi_r13, call_0xfffffffffffec@@ ee@@ 8, mov_rax_qword_ptr_[rip+0x2@@ 57@@ cc], mov_rcx_qword_ptr_[rbp-0x@@ c0], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x17@@ a4@@ 3], mov_esi_1, xor_eax_eax, call_0xfffffffffffed@@ 48@@ 4, jmp_0xfffffffffffffb@@ f3, lea_rcx_[rip+0x@@ 17@@ f6@@ 3], mov_edx_0x3@@ 69, lea_rsi_[rip+0x17@@ e@@ 16], lea_rdi_[rip+0x17@@ e@@ 1c], call_0xfffffffffffed0@@ 80, call_0xfffffffffffec@@ ff@@ b, call_0xfffffffffffec@@ ef@@ 6, mov_edi_dword_ptr_[rax], call_0xfffffffffffed@@ 47@@ f, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x2@@ 57@@ 70], lea_rdx_[rip+0x17@@ 9a@@ 1], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffed@@ 42@@ f, or_eax_0xffffffff, jmp_0xfffffffffffffd@@ 8@@ a
endbr64, xor_eax_eax, ret
endbr64, ret
endbr64, push_r15, mov_rdi_rdx, mov_r15_rcx, push_r14, mov_r14_rsi, push_r13, mov_r13_r9, push_r12, push_rbp, mov_rbp_r8, push_rbx, sub_rsp_8, call_0xfffffffffffed@@ 3@@ ff, mov_r12_rax, test_rax_rax, je_0x7d, mov_rsi_rbp, mov_rdx_r15, mov_rdi_r14, call_0xffffffffffffaa@@ 49, mov_edi_0x28, mov_rbx_rax, call_0xfffffffffffed@@ 1d@@ c, mov_rbp_rax, test_rax_rax, je_0x5a, add_rbx_qword_ptr_[r@@ 14+0x@@ f0], mov_rsi_rbx, mov_r8d_1, mov_ecx_1, mov_rdx_r12, mov_rdi_rax, call_0xffffffffffff2c@@ 64, test_eax_eax, js@@ _0x1f, mov_rax_qword_ptr_[r13], mov_qword_ptr_[r13@@ ]_rbp, mov_qword_ptr_[rbp]_rax, xor_eax_eax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_rbp, call_0xfffffffffffecd@@ ab, mov_rdi_r12, call_0xfffffffffffecd@@ a3, mov_eax_0xffffffff, jmp_0xffffffffffffffdc, call_0xfffffffffffecd@@ f7, mov_edi_dword_ptr_[rax], call_0xfffffffffffed@@ 380, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x2@@ 56@@ 71], lea_rdx_[rip+0x17@@ 95@@ a], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffed@@ 330, jmp_0xffffffffffffffc@@ 5
endbr64, mov_eax_2, ret
endbr64, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, xor_esi_esi, call_0xfffffffffffec@@ f@@ 90, test_rax_rax, je_0x28, mov_rsi_rax, mov_rdi_rbp, mov_r12_rax, call_0xfffffffffffec@@ f7@@ d, test_rax_rax, jne_0x15, cmp_qword_ptr_[r12+0x1@@ 8]_0, jne_0xd, mov_rax_qword_ptr_[rbx+0x20], cmp_qword_ptr_[r12+0x1@@ 0]_rax, je_5, xor_r12d_r12d, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret
endbr64, sub_rsp_0x18, mov_qword_ptr_[rsp+8]_rsi, lea_r9_[r@@ sp+8], lea_rsi_[r@@ di+0x@@ 4c], lea_r8_[rip-0x@@ cc@@ d], add_rdi_8, call_0xfffffffffffff4b@@ f, add_rsp_0x18, ret
endbr64, sub_rsp_0x18, mov_dword_ptr_[rsp+0xc]_esi, lea_r9_[rsp+0x@@ c], lea_rsi_[r@@ di+0x@@ 4c], lea_r8_[rip-0x@@ cc@@ c], add_rdi_8, call_0xfffffffffffff4@@ 90, add_rsp_0x18, ret
endbr64, push_rbp, mov_r8_rdx, mov_ebp_esi, push_rbx, mov_r9_rcx, mov_rbx_rdi, sub_rsp_0x18, test_esi_esi, je_0x49, mov_ecx_esi, shr_ecx@@ _1, and_ebp@@ _1, je_0x34, mov_rdx_qword_ptr_[rbx+0x@@ 58], mov_rsi_qword_ptr_[rbx+0x@@ 60], mov_rdi_qword_ptr_[rbx+0x50], call_0xfffffffffffff@@ 34@@ 2, xor_r8d_r8d, test_eax_eax, je_0x12, lea_r8d@@ _[rax@@ +rax+1], shr_rax_0x20, shl_rax@@ _0x20, or@@ _r8_rax, add_rsp_0x18, pop_rbx, mov_rax_r8, pop_rbp, ret, mov_ebp_ecx, mov_rdx_qword_ptr_[rbx+0x@@ c0], mov_rsi_qword_ptr_[rbx+0x@@ b0], mov_rdi_qword_ptr_[rbx+0x@@ a8], mov_ecx_ebp, mov_qword_ptr_[rsp+8]_r9, mov_qword_ptr_[rsp]_r8, call_0xfffffffffffff2f@@ 0, test_eax_eax, mov_r8_qword_ptr_[rsp], mov_r9_qword_ptr_[rsp+8], mov_ecx_ebp, je_0xffffffffffffff@@ 90, lea_edx_[rax@@ +rax], shr_rax_0x20, shl_rax@@ _0x20, mov_r8_rax, add_rsp_0x18, mov_eax_edx, or@@ _r8_rax, pop_rbx, mov_rax_r8, pop_rbp, ret
endbr64, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_r9@@ _rsp, mov_qword_ptr_[rsp]_rdi, mov_qword_ptr_[rsp+8]_rsi, lea_r8_[rip-0x@@ c9@@ b], lea_rsi_[r@@ di+0x@@ 4c], add_rdi_8, call_0xfffffffffffff38@@ d, mov_rdx_qword_ptr_[rsp+0x18], xor_rdx_qword_ptr_fs:[0x28], jne_7, add_rsp_0x28, ret, call_0xfffffffffffecc@@ f@@ 3
endbr64, sub_rsp_8, test_rdi_rdi, je_0x55, mov_rax_qword_ptr_[rdi+0x10], cmp_rax_rdx, jb@@ _0x1c, sub_rax_rdx, mov_r10d_1, cmp_rax_rsi, jb@@ _0xe, mov_eax_r10d, add_rsp_8, ret, mov_r9_rsi, mov_r8_rdx, xor_eax_eax, lea_rcx_[rip+0x@@ 17@@ 75@@ 1], mov_edx_0x1@@ 0e, lea_rsi_[rip+0x17@@ aa@@ 4], mov_edi_1, call_0xffffffffffffe6@@ 80, xor_r10d_r10d, mov_eax_r10d, add_rsp_8, ret, lea_rcx_[rip+0x@@ 17@@ c@@ 19], mov_edx_0x1@@ 0c, lea_rsi_[rip+0x17@@ a@@ 7c], lea_rdi_[rip+0x17@@ aa@@ 7], call_0xfffffffffffecc@@ e@@ 6
endbr64, push_r12, mov_r12_rdx, mov_edx_1, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, call_0xffffffffffffff@@ 6a, test_eax_eax, je_0x33, mov_rax_qword_ptr_[rbx], test_rax_rax, je_0x1b, movzx_eax_byte_ptr_[r@@ ax+r@@ bp], mov_byte_ptr_[r12@@ ]_al, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, ret, pop_rbx, pop_rbp, mov_byte_ptr_[r@@ 12]_0, pop_r12, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffd@@ c
endbr64, push_r12, mov_r12_rdx, mov_edx_2, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, call_0xffffffffffffff@@ 0a, test_eax_eax, je_0x33, mov_rax_qword_ptr_[rbx], test_rax_rax, je_0x1b, movzx_eax_word_ptr_[rax+r@@ bp], mov_word_ptr_[r@@ 12@@ ]_ax, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, ret, pop_rbx, xor_edx_edx, pop_rbp, mov_word_ptr_[r@@ 12@@ ]_dx, pop_r12, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffd@@ d
endbr64, push_r12, mov_r12_rdx, mov_edx_4, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, call_0xfffffffffffffea@@ a, test_eax_eax, je_0x2b, mov_rax_qword_ptr_[rbx], test_rax_rax, je_0x13, mov_eax_dword_ptr_[rax+r@@ bp], mov_dword_ptr_[r12]_eax, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, ret, pop_rbx, pop_rbp, mov_dword_ptr_[r12@@ ]_0, pop_r12, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffe@@ 3
endbr64, push_r12, mov_r12_rdx, mov_edx_8, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, call_0xfffffffffffffe@@ 5a, test_eax_eax, je_0x33, mov_rax_qword_ptr_[rbx], test_rax_rax, je_0x1b, mov_rax_qword_ptr_[rax+r@@ bp], mov_qword_ptr_[r12]_rax, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, ret, pop_rbx, pop_rbp, mov_qword_ptr_[r12]_0, pop_r12, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffd@@ c
endbr64, push_rbx, mov_rbx_rsi, mov_rsi_qword_ptr_[rsi], call_0xfffffffffffffe@@ 85, test_eax_eax, js@@ _7, inc_qword_ptr_[r@@ bx], xor_eax_eax, pop_rbx, ret
endbr64, push_rbx, mov_rbx_rsi, mov_rsi_qword_ptr_[rsi], call_0xfffffffffffffec@@ 5, test_eax_eax, js@@ _8, add_qword_ptr_[r@@ bx@@ ]_2, xor_eax_eax, pop_rbx, ret
endbr64, push_rbx, mov_rbx_rsi, mov_rsi_qword_ptr_[rsi], call_0xffffffffffffff@@ 05, test_eax_eax, js@@ _8, add_qword_ptr_[r@@ bx@@ ]_4, xor_eax_eax, pop_rbx, ret
endbr64, push_rbx, mov_rbx_rsi, mov_rsi_qword_ptr_[rsi], call_0xffffffffffffff@@ 35, test_eax_eax, js@@ _8, add_qword_ptr_[r@@ bx@@ ]_8, xor_eax_eax, pop_rbx, ret
endbr64, push_r15, xor_r15d_r15d, push_r14, mov_r14_rdx, push_r13, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, push_rbx, xor_ebx_ebx, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, lea_r13_[r@@ sp+7], jmp_0x32, movzx_edx_byte_ptr_[r@@ sp+7], mov_ecx_r15d, mov_rax_rdx, and_eax_0x7f, shl_rax_cl, or@@ _rbx_rax, add_r15d@@ _7, cmp_dl_1, je_8, cmp_r15d@@ _0x40, jg@@ _0x18, test_dl_dl, jns@@ _0x3b, mov_rdx_r13, mov_rsi_rbp, mov_rdi_r12, call_0xffffffffffffff@@ 10, test_eax_eax, jns_0xffffffffffffff@@ c9, mov_eax_0xffffffff, mov_rbx_qword_ptr_[rsp+8], xor_rbx_qword_ptr_fs:[0x28], jne_0x20, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, xor_eax_eax, test_r14_r14, je_0xffffffffffffffd9, mov_qword_ptr_[r14]@@ _rbx, jmp_0xffffffffffffffd4, call_0xfffffffffffec@@ 9c@@ 4
endbr64, sub_rsp_0x18, mov_qword_ptr_[rsp+8]_rsi, lea_rsi_[rsp+8], call_0xffffffffffffff@@ 2e, add_rsp_0x18, ret
endbr64, push_r12, lea_rax_[r@@ di+8], and_rax@@ _0xfffffffffffffff8, push_rbp, mov_rdx_rdi, sub_rdx_rax, push_rbx, mov_qword_ptr_[rdi]_0, mov_qword_ptr_[rdi+0x@@ e8]_0, mov_qword_ptr_[rdi+0x@@ f0]_0, mov_qword_ptr_[rdi+0x@@ f8]_0, mov_qword_ptr_[rdi+0x1@@ 00]_0, add_edx@@ _0x108, mov_r12_rsi, mov_rbx_rdi, xor_esi_esi, and_edx_0xffffff@@ e0, xor_ecx_ecx, mov_edi_ecx, add_ecx@@ _0x20, mov_qword_ptr_[rax+r@@ di]@@ _rsi, mov_qword_ptr_[rax+r@@ di+@@ 8]_rsi, mov_qword_ptr_[rax+r@@ di+0x1@@ 0]_rsi, mov_qword_ptr_[rax+r@@ di+0x1@@ 8]_rsi, cmp_ecx_edx, jb_0xffffffffffffff@@ e6, xor_esi_esi, mov_rdi_r12, xor_eax_eax, call_0xfffffffffffecc@@ a1, mov_dword_ptr_[rbx]_eax, cmp_eax_-1, je_0x97, mov_edi_1, call_0xfffffffffffec@@ 8@@ 2c, mov_edi_dword_ptr_[rbx], xor_edx_edx, mov_esi_8, call_0xfffffffffffecc@@ 0e, mov_qword_ptr_[rbx+8]_rax, mov_rbp_rax, test_rax_rax, je_0xb0, mov_rdi_rax, call_0xfffffffffffecd@@ 96, cmp_eax_3, jne_0x9f, lea_rsi_[r@@ bx+0x10], mov_rdi_rbp, call_0xfffffffffffec@@ 75@@ 1, test_rax_rax, je_0x96, movzx_eax_word_ptr_[r@@ bx+0x20], sub_eax_2, cmp_ax_1, ja_0x@@ ba, movzx_eax_byte_ptr_[r@@ bx+0x14], cmp_al_2, je_0x3c, cmp_al_1, jne_0x3f, cmp_word_ptr_[r@@ bx+0x@@ 22@@ ]_3, jne_0x38, lea_rdi_[rbx+0x@@ 88], mov_esi_0x18, call_0xffffffffffff5c@@ 43, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret, pop_rbx, pop_rbp, mov_eax_1, pop_r12, ret, cmp_word_ptr_[r@@ bx+0x@@ 22@@ ]@@ _0x3e, je_0xffffffffffffffcc, mov_rcx_r12, lea_rdx_[rip+0x17@@ 39@@ 7], mov_rax_qword_ptr_[rip+0x24@@ fd@@ 8], mov_esi_1, mov_rdi_qword_ptr_[rax], xor_eax_eax, call_0xfffffffffffecc@@ 9e, mov_edi_1, call_0xfffffffffffecc@@ 64, mov_rcx_r12, lea_rdx_[rip+0x17@@ 67@@ 3], jmp_0xffffffffffffffd6, or_edi@@ _0xffffffff, call_0xfffffffffffeca@@ 60, mov_r8_rax, mov_rax_qword_ptr_[rip+0x24@@ fa@@ 1], mov_rcx_r12, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x17@@ 2e@@ c], mov_esi_1, xor_eax_eax, call_0xfffffffffffecc@@ 5d, mov_edi_1, call_0xfffffffffffecc@@ 23, mov_rcx_r12, lea_rdx_[rip+0x17@@ 2f@@ 4], jmp_0xffffffffffffff9@@ 5
endbr64, push_rbx, lea_rcx_[rip+0x@@ 17@@ 63@@ b], mov_rbx_rdi, mov_edx_0x1@@ a0, lea_rsi_[rip+0x17@@ 5d@@ 4], xor_eax_eax, mov_edi_0x20, call_0xffffffffffffe@@ 1a@@ e, mov_rdi_qword_ptr_[rbx+8], call_0xfffffffffffec@@ 9a@@ 5, mov_edi_dword_ptr_[rbx], call_0xfffffffffffec@@ 86@@ e, cmp_qword_ptr_[rbx+0x@@ a0]@@ _0x18, jne_0x13, lea_rdi_[rbx+0x@@ 88], xor_edx_edx, xor_esi_esi, pop_rbx, jmp_0xffffffffffff@@ 5c@@ a3, lea_rcx_[rip+0x@@ 17@@ 70@@ f], mov_edx_0x1@@ a3, lea_rsi_[rip+0x17@@ 58@@ a], lea_rdi_[rip+0x17@@ 2e@@ c], call_0xfffffffffffec@@ 7f@@ 4
endbr64, push_r15, mov_r15_rdi, push_r14, push_r13, push_r12, mov_r12_rcx, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdx, sub_rsp_0xa8, movzx_esi_word_ptr_[r@@ di+0x@@ 4c], mov_rdi_rcx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, call_0xffffffffffff5b@@ 95, test_eax_eax, js_0x1@@ 4e, mov_rdi_rbp, mov_rsi_rbx, call_0xfffffffffffff86@@ 2, mov_rbp_rax, test_rax_rax, je_0x1@@ ae, mov_rcx_qword_ptr_[rbx+0x20], mov_r8_qword_ptr_[r@@ bx+0x38], mov_rax_rcx, xor_edx_edx, div@@ _r8, mov_r14_rax, mov_rbx_rdx, test_rdx_rdx, jne_0x1@@ 6b, cmp_rcx@@ _r8, jb_0x1@@ 3f, lea_r13_[rsp+0x30], jmp_0x45, mov_rdx_r13, mov_esi_ebx, mov_rdi_rbp, call_0xfffffffffffec@@ 968, test_rax_rax, je_0xf0, cmp_qword_ptr_[r12+0x1@@ 8]@@ _0x18, jne_0x1@@ 18, mov_rsi_r13, mov_rdi_r12, call_0xffffffffffff5b@@ 48, test_eax_eax, js_0x@@ d1, inc_rbx, cmp_r14_rbx, jbe_0x@@ f5, cmp_dword_ptr_[rbp+@@ 8]_8, jne_0xffffffffffffffbb, lea_rdx_[rsp+0x20], mov_esi_ebx, mov_rdi_rbp, call_0xfffffffffffeca@@ 2f, test_rax_rax, je_0xa7, lea_r8_[rsp+0x@@ 50], mov_rsi_qword_ptr_[rsp+0x20], mov_rax_qword_ptr_[rsp+0x28], lea_rdx_[rsp+0x10], mov_rcx_r8, mov_rdi_r15, mov_qword_ptr_[rsp+0x3@@ 0]_rsi, mov_qword_ptr_[rsp+0x38]_rax, mov_qword_ptr_[rsp+8]_r8, call_0xfffffffffffff7@@ e8, test_eax_eax, js_0x7@@ 1, mov_rdi_qword_ptr_[rsp+0x10], test_rdi_rdi, je_0x67, mov_r8_qword_ptr_[rsp+8], mov_rsi_r8, call_0xfffffffffffff77@@ d, mov_rdi_rax, test_rax_rax, je_0x52, mov_rsi_qword_ptr_[rsp+0x20], lea_rdx_[rsp+0x18], sub_rsi@@ _qword_ptr_[rsp+0x60], sub_rsi@@ _qword_ptr_[r@@ ax+0x18], cmp_byte_ptr_[r@@ 15+0x1@@ 4]_1, je_0x20, call_0xfffffffffffffa@@ b6, test_eax_eax, js@@ _0x2f, mov_rax_qword_ptr_[rsp+0x18], mov_qword_ptr_[rsp+0x40]_rax, jmp_0xffffffffffffff39, call_0xfffffffffffffa@@ 48, test_eax_eax, js_0x1@@ 1, mov_eax_dword_ptr_[rsp+0x18], jmp_0xffffffffffffffe3, mov_eax_0xffffffff, mov_rcx_qword_ptr_[rsp+0x98], xor_rcx_qword_ptr_fs:[0x28], jne_0x8b, add_rsp_0xa8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, xor_eax_eax, jmp_0xffffffffffffffd3, lea_rcx_[rip+0x@@ 17@@ 50@@ d], mov_edx_0x2@@ 0b, lea_rsi_[rip+0x17@@ 3@@ 98], lea_rdi_[rip+0x17@@ 19@@ 2], call_0xfffffffffffec@@ 60@@ 2, mov_rax_qword_ptr_[rip+0x2@@ 4d@@ 06], lea_rdx_[rip+0x17@@ 13@@ f], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffec@@ 9c@@ 5, mov_eax_0xffffffff, jmp_0xffffffffffffff90, mov_rax_qword_ptr_[rip+0x2@@ 4c@@ e2], mov_edx_0x1@@ e, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x@@ 170@@ ee], call_0xfffffffffffec@@ 97@@ e, mov_eax_0xffffffff, jmp_0xffffffffffffff69, call_0xfffffffffffec@@ 52@@ f
endbr64, push_r14, mov_r14_rdx, push_r13, push_r12, push_rbp, movsxd_rbp@@ _esi, mov_esi_6, push_rbx, sub_rsp_0x70, lea_r12_[rsp+0x20], lea_rdx_[rsp+8], mov_rcx_r12, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x68]_rax, xor_eax_eax, call_0xfffffffffffff6b@@ 8, test_eax_eax, js_0x6@@ a, mov_rdi_qword_ptr_[rsp+8], test_rdi_rdi, je_0x60, mov_rsi_r12, call_0xfffffffffffff6@@ 22, mov_r12_rax, test_rax_rax, je_0x50, mov_rax_qword_ptr_[rsp+0x58], cmp_qword_ptr_[rsp+0x@@ 40]_rax, jb_0x@@ 93, xor_ebx_ebx, lea_r13_[rsp+0x10], jmp_0x25, cmp_qword_ptr_[rsp+0x1@@ 0]_rbp, je_0x8@@ 3, mov_rax_qword_ptr_[rsp+0x40], xor_edx_edx, div@@ _qword_ptr_[rsp+0x58], inc_rbx, cmp_rax_rbx, jbe_0x@@ 63, mov_rdx_r13, mov_esi_ebx, mov_rdi_r12, call_0xfffffffffffec@@ 87@@ 1, test_rax_rax, jne_0xffffffffffffffd1, mov_edi_0xffffffff, call_0xfffffffffffec@@ 6b@@ 2, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x2@@ 4b@@ f3], lea_rdx_[rip+0x17@@ 2c@@ f], mov_rdi_qword_ptr_[rax], mov_esi_1, xor_eax_eax, call_0xfffffffffffec@@ 8b@@ 2, mov_eax_0xffffffff, mov_rcx_qword_ptr_[rsp+0x68], xor_rcx_qword_ptr_fs:[0x28], jne_0x26, add_rsp@@ _0x70, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_eax_0xffffffff, jmp_0xffffffffffffffdb, mov_rax_qword_ptr_[rsp+0x18], mov_qword_ptr_[r14]_rax, xor_eax_eax, jmp_0xffffffffffffffce, call_0xfffffffffffec@@ 4@@ 1@@ 4
endbr64, sub_rsp_8, mov_esi_dword_ptr_[r@@ cx+0x@@ c], mov_rdi_qword_ptr_[rdi+0x@@ 50], mov_rdx_r8, call_0xfffffffffffec@@ 4@@ 3e, test_rax_rax, sete_al, movzx_eax_al, neg_eax, add_rsp_8, ret
push_r15, mov_r15_rsi, push_r14, mov_r14_rdi, push_r13, mov_r13_rdx, push_r12, push_rbp, mov_rbp_rcx, push_rbx, mov_ebx_r8d, sub_rsp_0x1@@ b8, mov_qword_ptr_[rsp+0x28]_rsi, mov_rsi_rdx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ a8]_rax, xor_eax_eax, lea_rax_[rsp+0xa0], mov_rdi_rax, mov_qword_ptr_[rsp+0x18]_rax, call_0xfffffffffffff9f@@ 5, test_eax_eax, js_0x@@ b@@ 4a, movzx_eax_word_ptr_[rsp+0x@@ c2], mov_rdi_r15, mov_word_ptr_[r@@ 15+0x1@@ 26@@ 8]_ax, movzx_eax_byte_ptr_[rsp+0x@@ b4], xor_r12d_r12d, mov_byte_ptr_[r@@ 15+0x1@@ 26@@ a@@ ]_al, call_0xffffffffffff9a@@ c3, test_ebx_ebx, lea_rbx_[rsp+0x@@ 60], je_0x55, cmp_word_ptr_[rsp+0x@@ c0@@ ]_3, jne_0x4a, mov_rdi_qword_ptr_[rsp+0x28], xor_edx_edx, mov_rsi_rbx, call_0xffffffffffffa@@ f70, test_eax_eax, js_0x@@ ba@@ f, mov_rax_qword_ptr_[rsp+0x60], mov_qword_ptr_[rsp+0x1@@ 98]_rax, sub_rax@@ _qword_ptr_[rsp+0x@@ c8], mov_qword_ptr_[rsp+0x1@@ 90]_rax, jmp_0x5@@ 5, cmp_dword_ptr_[rsp+0x@@ 60]_1, je_0x@@ 87@@ 3, inc_r12, mov_rdi_qword_ptr_[rsp+0xa8], mov_rdx_rbx, mov_esi_r12d, call_0xfffffffffffec@@ 3@@ 14, test_rax_rax, jne_0xffffffffffffffdc, mov_rax_qword_ptr_[rsp+0x1@@ a0], mov_qword_ptr_[rsp+0x1@@ 9@@ 0]_rbp, add_rbp@@ _qword_ptr_[rsp+0x@@ c8], mov_qword_ptr_[rsp+0x1@@ 9@@ 8]_rbp, test_rax_rax, je_0x@@ 99@@ 6, xor_eax_eax, mov_r8_r13, lea_rcx_[rip+0x@@ 17@@ 13@@ 6], mov_edx_0x2@@ 3a, lea_rsi_[rip+0x1@@ 70@@ a8], mov_edi_0x20, call_0xffffffffffffdc@@ 84, xor_eax_eax, mov_r8_r13, lea_rcx_[rip+0x@@ 17@@ 130], mov_edx_0x2@@ 3b, lea_rsi_[rip+0x1@@ 70@@ 86], mov_edi_1, call_0xffffffffffffdc@@ 62, cmp_word_ptr_[rsp+0x@@ ec@@ ]_1, jbe_0x@@ 9b@@ d, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+0x10]_0, mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x30]@@ _r14, mov_ebp_1, jmp_0x41, cmp_eax_0xb, je_0x2@@ 6d, cmp_eax_6, je_0x2@@ 94, cmp_eax_1, je_0x1@@ eb, cmp_eax_8, je_0x1@@ e2, movzx_eax_word_ptr_[rsp+0x@@ ec], inc_rbp, cmp_eax_ebp, jle_0x@@ b2, mov_rdi_qword_ptr_[rsp+0xa8], mov_rsi_rbp, call_0xfffffffffffec@@ 6@@ 3e, mov_r12d_ebp, mov_r14_rax, test_rax_rax, je_0x8@@ ff, mov_rsi_rbx, mov_rdi_rax, call_0xfffffffffffec0@@ b4, test_rax_rax, je_0x@@ 8e@@ b, mov_edx_dword_ptr_[rsp+0x@@ 60], movzx_esi_word_ptr_[r@@ sp+0x@@ ee], mov_rdi_qword_ptr_[rsp+0xa8], call_0xfffffffffffec@@ 2@@ 12, mov_r8_rax, test_rax_rax, je_0x9@@ 1f, mov_eax_dword_ptr_[rsp+0x@@ 64], cmp_eax_2, jne_0xffffffffffffff@@ 6a, lea_rax_[rsp+0x1@@ 50], lea_rdi_[rsp+0x@@ a8], push_rax, lea_rax_[rsp+0x1@@ 68], push_rax, lea_r9_[r@@ sp+0x1@@ 58], mov_rcx_rbx, mov_rdx_r14, mov_rsi_r13, call_0xffffffffffffe@@ 90@@ 9, pop_r9, pop_r10, movzx_eax_word_ptr_[rsp+0x@@ ec], inc_rbp, cmp_eax_ebp, jg_0xffffffffffffff@@ 5a, mov_r14@@ _qword_ptr_[rsp+0x30], cmp_qword_ptr_[rsp+0x@@ f0]_0, je_0x@@ 99@@ 6, cmp_qword_ptr_[rsp+0x1@@ 00]_0, je_0x@@ 98@@ 7, cmp_qword_ptr_[rsp+8]_0, je_0x2@@ bc, cmp_qword_ptr_[r@@ sp+0x10@@ 8]_0, je_0x2@@ ad, cmp_qword_ptr_[rsp]_0, je_0x7@@ c2, movzx_eax_word_ptr_[rsp+0x@@ ec], mov_ebp_1, cmp_ax_1, jbe_0x@@ 80@@ 7, mov_r15_qword_ptr_[rsp+8], mov_qword_ptr_[rsp+0x20]@@ _r14, mov_qword_ptr_[rsp+8]@@ _r13, mov_r13_rbp, jmp_0x23, movzx_eax_word_ptr_[rsp+0x@@ ec], inc@@ _r13, lea_r12d_[r@@ 14+1], cmp_eax_r13d, jle_0x@@ 7@@ 1e, mov_rdi_qword_ptr_[rsp+0xa8], mov_rsi_r13, call_0xfffffffffffec@@ 4f@@ d, mov_r14d_r13d, mov_r12d_r13d, mov_rbp_rax, test_rax_rax, je_0x@@ 87@@ 2, mov_rsi_rbx, mov_rdi_rax, call_0xfffffffffffeb@@ f70, test_rax_rax, je_0x@@ 85@@ e, cmp_qword_ptr_[rsp+0x@@ 7@@ 0]_r15, jne_0xffffffffffffffad, mov_rax_qword_ptr_[rsp], cmp_qword_ptr_[rsp+0x@@ 80]_rax, jne_0xffffffffffffff9f, mov_rdi_qword_ptr_[rsp+0x18], lea_rcx_[r@@ sp+0x1@@ 28], mov_rdx_rbx, mov_rsi_rbp, mov_r14_qword_ptr_[rsp+0x20], mov_r13_qword_ptr_[rsp+8], call_0xfffffffffffff8f@@ 0, test_eax_eax, js_0x@@ 8d@@ e, movzx_eax_word_ptr_[rsp+0x@@ ec], jmp_0x6@@ a5, mov_ecx_5, mov_rsi_r8, lea_rdi_[rip+0x16@@ ee@@ 5], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0xfffffffffffffe@@ 0c, mov_rax_qword_ptr_[rsp+0x70], mov_rsi_rbx, mov_qword_ptr_[rsp+0x108]_rax, mov_rax_qword_ptr_[rsp+0x80], mov_rdi_r14, mov_qword_ptr_[rsp+0x118]_rax, call_0xfffffffffffff@@ 13@@ f, mov_qword_ptr_[rsp+0x1@@ 20]_rax, test_rax_rax, je_0x1@@ 4f, mov_rax_qword_ptr_[rsp+0x68], mov_dword_ptr_[rsp+0x1@@ 10]_eax, jmp_0xfffffffffffffd@@ c1, lea_rax_[rsp+0x100], lea_rdi_[rsp+0x@@ a8], push_rax, lea_rax_[rsp+0x100], push_rax, lea_r9_[r@@ sp+0x100], jmp_0xfffffffffffffe@@ 2c, mov_rax_qword_ptr_[rsp+0x1@@ 90], xor_esi_esi, add_rax@@ _qword_ptr_[rsp+0x70], mov_qword_ptr_[rsp+0x1@@ 80]_rax, mov_rax_qword_ptr_[rsp+0x80], mov_rdi_r14, mov_qword_ptr_[rsp+0x1@@ 88]_rax, call_0xfffffffffffec0@@ 56, mov_r15_rax, test_rax_rax, je_0x6@@ ee, mov_rsi_rax, mov_rdi_r14, call_0xfffffffffffec0@@ 3f, test_rax_rax, jne_0x@@ 6d@@ a, mov_rax_qword_ptr_[rsp+0x80], xor_r14d_r14d, lea_r12_[rsp+0x@@ 50], cmp_qword_ptr_[rsp+0x@@ 98]_rax, ja_0xfffffffffffffd@@ 1d, mov_qword_ptr_[rsp+0x20]@@ _rbx, mov_rbx_r14, mov_r14_r12, mov_r12_qword_ptr_[rsp+0x10], jmp_0x2d, cmp_rax_2, je_0x5c, cmp_rax_0xe, cmove@@ _r12@@ _qword_ptr_[rsp+0x58], mov_rax_qword_ptr_[rsp+0x80], xor_edx_edx, div@@ _qword_ptr_[rsp+0x98], inc_rbx, cmp_rbx_rax, jae_0x@@ 48, mov_rdx_r14, mov_esi_ebx, mov_rdi_r15, call_0xfffffffffffec@@ 2c@@ e, test_rax_rax, je_0x6@@ 69, mov_rax_qword_ptr_[rsp+0x50], cmp_rax@@ _0x17, jne_0xffffffffffffffb7, mov_rax_qword_ptr_[rsp+0x58], mov_qword_ptr_[rsp+8]_rax, jmp_0xffffffffffffffbb, mov_rax_qword_ptr_[rsp+0x58], mov_qword_ptr_[rsp]_rax, jmp_0xffffffffffffffa7, mov_qword_ptr_[rsp+0x10]@@ _r12, mov_rbx_qword_ptr_[rsp+0x20], jmp_0xfffffffffffffc@@ 8a, mov_rax_qword_ptr_[rip+0x2@@ 46@@ 19], mov_edx_0x1@@ 5, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x16@@ d@@ 3e], call_0xfffffffffffec@@ 2b@@ 5, jmp_0xfffffffffffffe@@ 97, mov_r8_r13, lea_rcx_[rip+0x@@ 16@@ d@@ 3d], mov_edx_0x2@@ 95, lea_rsi_[rip+0x16@@ c6@@ 1], mov_edi_1, xor_eax_eax, call_0xffffffffffffd8@@ 3b, lea_rbp_[r@@ sp+0x1@@ 28], mov_rdi_rbp, call_0xffffffffffff5@@ 28@@ b, mov_r9_rax, mov_r8_r13, xor_eax_eax, lea_rcx_[rip+0x@@ 16@@ d@@ 38], mov_edx_0x2@@ b8, lea_rsi_[rip+0x16@@ c@@ 2a], mov_edi_1, call_0xffffffffffffd@@ 80@@ 6, mov_rax_qword_ptr_[rsp+0x10], test_rax_rax, je_0x15, mov_r12_qword_ptr_[r@@ sp+0x100], add_r12_rax, mov_qword_ptr_[rsp+0x1@@ 5@@ 8]_r12, mov_rdi_qword_ptr_[rsp+0x18], mov_rsi_r14, call_0xffffffffffffee@@ 2c, test_eax_eax, js_0x5@@ f8, test_r14_r14, je_0x4@@ dc, cmp_qword_ptr_[r14+0x@@ 40]_0, je_0x4@@ 01, mov_rdi_qword_ptr_[rsp+0x1@@ 58], test_rdi_rdi, je_0x3@@ c8, call_0xfffffffffffec@@ 23@@ a, mov_rsi_rax, test_rax_rax, je_0x4@@ af, mov_edx_1, mov_rdi_r14, call_0xffffffffffff1d@@ 51, mov_rsi_qword_ptr_[rsp+0x1@@ 98], mov_rdi_qword_ptr_[rsp+0x18], lea_rdx_[rsp+0x@@ 48], mov_qword_ptr_[rsp+0x4@@ 8]_rsi, call_0xffffffffffffcb@@ f5, test_eax_eax, js_0x4@@ 7e, mov_rax_qword_ptr_[rsp+0x1@@ a0], mov_rsi_r14, mov_qword_ptr_[r14+0x1@@ 0]_rax, mov_rax_qword_ptr_[rsp+0x48], mov_qword_ptr_[r14+0x1@@ 8]_rax, mov_rax_qword_ptr_[rsp+0x1@@ 80], mov_qword_ptr_[r14+0x@@ 20]_rax, lea_rax_[rip+0x24@@ 5@@ 1d], mov_rdi_qword_ptr_[r@@ ax+0x48], call_0xffffffffffff24@@ 09, test_eax_eax, lea_rax_[rip+0x24@@ 50@@ b], mov_rdi_qword_ptr_[rax+0x@@ 58], jne_0xb, test_rdi_rdi, je_0x1@@ b1, test_rdi_rdi, setne_al, movzx_eax_al, mov_rdi_rbp, setne@@ _byte_ptr_[rsp+0x@@ 3f], mov_dword_ptr_[rsp+0x30]_eax, call_0xffffffffffff5@@ 167, mov_qword_ptr_[rsp+0x10]_rax, xor_r15d_r15d, test_rax_rax, je_0x1@@ 7b, mov_qword_ptr_[rsp+8]_rbx, mov_qword_ptr_[rsp]@@ _r13, mov_rbx_qword_ptr_[rsp+0x18], jmp_0x19, test_eax_eax, je_0x3@@ ee, inc_r15, cmp_qword_ptr_[rsp+0x1@@ 0]_r15, je_0x1@@ 50, cmp_qword_ptr_[rsp+0x1@@ 40]@@ _0x18, jne_0x@@ 4c@@ 5, cmp_r15@@ _qword_ptr_[r@@ sp+0x130], jae_0x@@ 4f@@ b, mov_rdx_qword_ptr_[rsp+0x1@@ 28], lea_rax_[r@@ 15+r@@ 15@@ *2], lea_r12@@ _[rdx@@ +rax*8], mov_r8_qword_ptr_[rsp+8], mov_rsi_qword_ptr_[rsp], mov_rcx_r12, mov_rdx_r15, mov_rdi_rbx, call_0xfffffffffffff8@@ 9b, test_eax_eax, jne_0xffffffffffffffac, mov_r11d_dword_ptr_[rsp+0x@@ 60], lea_rax_[rip+0x24@@ 45@@ 6], add_r11@@ _qword_ptr_[r@@ sp+0x100], mov_rdi_qword_ptr_[r@@ ax+0x48], mov_rdx_r14, mov_rsi_r11, mov_r13@@ _r11, lea_rbp_[rsp+0x@@ 50], call_0xffffffffffff@@ 23@@ 9c, mov_rdi_qword_ptr_[rsp+0x28], mov_r9_rbp, mov_r8_r15, mov_rcx_r12, mov_rdx_r13, mov_rsi_rbx, mov_dword_ptr_[rsp+0x20]_eax, mov_qword_ptr_[rsp+0x50]_0, call_0xffffffffffffed@@ 86, cmp_eax_1, je_0x2c, cmp_eax_2, jne_0xffffffffffffff@@ 49, mov_rdi_qword_ptr_[rsp+0x28], mov_r9_rbp, mov_r8_r15, mov_rcx_r12, mov_rdx_r13, mov_rsi_rbx, call_0xffffffffffffec@@ 7f, test_eax_eax, js_0x3@@ 18, mov_eax_dword_ptr_[rsp+0x30], mov_r12@@ _qword_ptr_[rsp+0x50], or_eax@@ _dword_ptr_[rsp+0x20], je_0x1@@ 95, test_r12_r12, je_0xffffffffffffff@@ 14, mov_r8d_dword_ptr_[rsp+0x@@ 20], test_r8d_r8d, jne_0x46, cmp_byte_ptr_[rsp+0x@@ 3f@@ ]_0, je_0x3f, mov_r8_qword_ptr_[r@@ 12+0x10], lea_rcx_[rip+0x@@ 16@@ af@@ c], mov_edx_0x2@@ cf, lea_rsi_[rip+0x16@@ 9d@@ 7], mov_edi_0x20, xor_eax_eax, call_0xffffffffffffd@@ 5b@@ 1, or_byte_ptr_[r@@ 12+0x@@ 24@@ ]_2, mov_r12_qword_ptr_[r12], test_r12_r12, jne_0xffffffffffffffcf, mov_r12@@ _qword_ptr_[rsp+0x50], mov_rsi_r12, mov_rdi_r14, call_0xffffffffffff1f@@ 32, jmp_0xfffffffffffffe@@ b5, mov_r13_qword_ptr_[r@@ sp], lea_rax_[rip+0x24@@ 35@@ 5], mov_rdi_qword_ptr_[rax+0x@@ 58], mov_rsi_r14, call_0xffffffffffff22@@ 3e, mov_ebx_eax, lea_rax_[rip+0x24@@ 340], mov_rsi_r14, mov_rdi_qword_ptr_[r@@ ax+0x50], call_0xffffffffffff22@@ 29, mov_ecx_ebx, or_ecx@@ _eax, je_0x91, test_eax_eax, je_0x48, mov_rcx_qword_ptr_[rsp+0x1@@ 48], test_rcx_rcx, je_0x3b, mov_r8_qword_ptr_[r@@ sp+0x1@@ 50], test_r8_r8, je_0x2e, sub_rsp_8, push_0, mov_rdi_r13, mov_rdx_r14, mov_r9_qword_ptr_[r@@ sp+0x1@@ 70], mov_rsi_qword_ptr_[rsp+0x28], call_0xffffffffffffe@@ 47@@ 3, pop_rsi, pop_rdi, test_eax_eax, js_0x2@@ 1a, xor_eax_eax, test_ebx_ebx, jne_0x1@@ 94, sub_rsp_8, push_rax, mov_rdx_r14, mov_rdi_r13, mov_r9_qword_ptr_[r@@ sp+0x108], mov_r8_qword_ptr_[r@@ sp+0x110], mov_rcx_qword_ptr_[r@@ sp+0x100], mov_rsi_qword_ptr_[rsp+0x28], call_0xffffffffffffe@@ 42@@ e, pop_rdx, pop_rcx, test_eax_eax, js_0x1@@ d5, mov_rbx_qword_ptr_[rsp+0x18], mov_rdi_rbx, call_0xffffffffffffeb@@ 17, mov_rdi_rbx, call_0xfffffffffffff2d@@ f, xor_eax_eax, mov_rcx_qword_ptr_[rsp+0x1@@ a8], xor_rcx_qword_ptr_fs:[0x28], jne_0x3@@ 28, add_rsp_0x1@@ b8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[rsp+0x70], add_rax_rbp, mov_qword_ptr_[rsp+0x1@@ a0]_rax, jmp_0xfffffffffffff7a@@ 6, lea_rax_[rip+0x24@@ 23@@ 9], mov_r13_qword_ptr_[r@@ ax+0x48], test_r12_r12, jne_0x17, jmp_0xfffffffffffffd@@ 78, mov_rbp_qword_ptr_[rbp], mov_r12_qword_ptr_[r@@ bp], test_r12_r12, je_0x3b, mov_rsi_qword_ptr_[r@@ 12+0x10], mov_rdx_r14, mov_rdi_r13, call_0xffffffffffff2@@ 170, test_eax_eax, jne_0xffffffffffffffe1, mov_r12_qword_ptr_[r@@ bp], mov_rax_qword_ptr_[r12], mov_rdi_r12, mov_qword_ptr_[rbp]_rax, call_0xffffffffffff18@@ 38, mov_rdi_r12, call_0xfffffffffffeb@@ 8c0, mov_r12_qword_ptr_[r@@ bp], test_r12_r12, jne_0xffffffffffffffc9, mov_r12@@ _qword_ptr_[rsp+0x50], test_r12_r12, jne_0xfffffffffffffe@@ 62, jmp_0xfffffffffffffd@@ 1c, mov_rdi_qword_ptr_[r14+0x@@ 40], mov_esi_0x2f, call_0xfffffffffffeb@@ db@@ f, lea_rsi_[rax+1], xor_edx_edx, mov_rdi_r14, call_0xffffffffffff19@@ 91, jmp_0xfffffffffffffc@@ 40, mov_rdi_r13, call_0xfffffffffffe@@ be@@ 4d, mov_rsi_rax, test_rax_rax, je_0xc2, mov_edx_1, mov_rdi_r14, call_0xffffffffffff19@@ a4, jmp_0xfffffffffffffb@@ e4, mov_r14_qword_ptr_[rsp+0x20], mov_r13_qword_ptr_[rsp+8], cmp_r12d_eax, jne_0xfffffffffffffb@@ 4d, mov_rcx_r13, lea_rdx_[rip+0x16@@ 7@@ 23], jmp_0x1@@ e4, mov_r8_qword_ptr_[r@@ 14+0x38], xor_eax_eax, lea_rcx_[rip+0x@@ 16@@ 8a@@ 5], mov_edx_0x3@@ e7, lea_rsi_[rip+0x16@@ 76@@ e], mov_edi_0x20, call_0xffffffffffffd@@ 34@@ a, lea_rax_[r@@ 14+0x30], jmp_0xfffffffffffffe@@ 4b, mov_r8_r13, lea_rcx_[rip+0x@@ 16@@ 8@@ 37], mov_edx_0x2@@ 97, lea_rsi_[rip+0x16@@ 74@@ 1], mov_edi_1, xor_eax_eax, call_0xffffffffffffd3@@ 1b, jmp_0xfffffffffffffa@@ e0, mov_rcx_r13, lea_rdx_[rip+0x16@@ 57@@ 7], mov_rax_qword_ptr_[rip+0x2@@ 40@@ a0], mov_esi_1, mov_rdi_qword_ptr_[rax], xor_eax_eax, call_0xfffffffffffe@@ bd@@ 66, mov_rdi_qword_ptr_[rsp+0x18], call_0xfffffffffffff@@ 11b, mov_eax_0xffffffff, jmp_0xfffffffffffffe@@ 39, mov_r12d_1, jmp_0xffffffffffffff50, mov_edi_0xffffffff, call_0xfffffffffffebb@@ 1c, mov_r9_rax, mov_r8_r13, mov_ecx_r12d, lea_rdx_[rip+0x16@@ 54@@ f], mov_rax_qword_ptr_[rip+0x2@@ 40@@ 50], mov_esi_1, mov_rdi_qword_ptr_[rax], xor_eax_eax, call_0xfffffffffffe@@ bd@@ 16, mov_edi_1, call_0xfffffffffffeb@@ cd@@ c, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+0x10]_0, mov_qword_ptr_[rsp+8]_0, jmp_0xfffffffffffff@@ 74@@ 5, mov_edi_0xffffffff, call_0xfffffffffffeba@@ c3, mov_r9_rax, mov_r8_r13, mov_ecx_ebp, lea_rdx_[rip+0x16@@ 5@@ 1f], jmp_0xffffffffffffffa8, call_0xfffffffffffeb@@ 76@@ d, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ bc@@ f6, mov_r8_rax, mov_rcx_r13, lea_rdx_[rip+0x16@@ 5@@ 34], mov_rax_qword_ptr_[rip+0x2@@ 3f@@ dd], mov_esi_1, mov_rdi_qword_ptr_[rax], xor_eax_eax, call_0xfffffffffffeb@@ ca@@ 3, mov_edi_1, call_0xfffffffffffe@@ bc@@ 69, mov_eax_0xffffffff, jmp_0xfffffffffffffd@@ 77, mov_r13_qword_ptr_[rsp+8], mov_edi_0xffffffff, call_0xfffffffffffeba@@ 60, mov_r8_rax, mov_rcx_r13, lea_rdx_[rip+0x16@@ 54@@ e], jmp_0xffffffffffffffba, lea_rcx_[rip+0x@@ 16@@ 76@@ d], mov_edx_0x2@@ ee, lea_rsi_[rip+0x16@@ 60@@ 8], lea_rdi_[rip+0x16@@ 36@@ a], call_0xfffffffffffeb@@ 87@@ 2, mov_rax_qword_ptr_[rip+0x23@@ f7@@ 6], mov_edx_0x1@@ f, mov_rcx_qword_ptr_[rax], mov_esi_1, lea_rdi_[rip+0x16@@ 5a@@ 2], call_0xfffffffffffe@@ bc@@ 12, jmp_0xfffffffffffffe@@ cd, lea_rcx_[rip+0x@@ 16@@ 7@@ 29], mov_edx_0x2@@ ee, lea_rsi_[rip+0x16@@ 5c@@ 4], lea_rdi_[rip+0x16@@ 59@@ e], call_0xfffffffffffeb@@ 8@@ 2e, mov_rcx_r13, lea_rdx_[rip+0x16@@ 4a@@ f], mov_rax_qword_ptr_[rip+0x2@@ 3f@@ 28], mov_esi_1, mov_rdi_qword_ptr_[rax], xor_eax_eax, call_0xfffffffffffebb@@ ee, mov_edi_1, call_0xfffffffffffebb@@ b4, call_0xfffffffffffeb@@ 77@@ f, mov_rcx_r13, lea_rdx_[rip+0x16@@ 3b0], jmp_0xfffffffffffffe@@ 59, or_edi@@ _0xffffffff, call_0xfffffffffffeb@@ 9a8, mov_r8_rax, mov_rcx_r13, lea_rdx_[rip+0x16@@ 4c@@ 6], jmp_0xffffffffffffff0@@ 2
endbr64, xor_r8d_r8d, jmp_0xfffffffffffff@@ 37@@ 9
endbr64, push_r13, mov_r13_rdi, mov_edi@@ _0x50, push_r12, push_rbp, mov_rbp_rsi, call_0xfffffffffffeb@@ 9a@@ c, test_rax_rax, je_0x6c, mov_r12_rax, mov_rdi_rax, xor_esi_esi, call_0xffffffffffff16@@ 6a, mov_rsi_rbp, xor_edx_edx, mov_rdi_r12, call_0xffffffffffff16@@ fd, mov_edi_dword_ptr_[r@@ 13+0x18], call_0xffffffffffff9c@@ 54, mov_rbp_rax, test_rax_rax, je_0x41, xor_ecx_ecx, mov_r8d_1, mov_rdx_rax, mov_rsi_r13, mov_rdi_r12, call_0xfffffffffffff3@@ 16, test_eax_eax, js_0x1@@ 7, mov_rdi_rbp, call_0xfffffffffffeb@@ 57@@ a, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, mov_rdi_r12, call_0xffffffffffff16@@ f5, mov_rdi_r12, call_0xfffffffffffeb@@ 55@@ d, xor_r12d_r12d, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret
endbr64, push_r15, mov_r8_rdi, lea_rcx_[rip+0x@@ 16@@ 64@@ 2], push_r14, mov_edx_0x6@@ 5, push_r13, mov_r13_rdi, mov_edi_1, push_r12, push_rbp, mov_rbp_rsi, lea_rsi_[rip+0x16@@ 63@@ 6], push_rbx, sub_rsp_0xa8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, call_0xffffffffffffd0@@ 47, call_0xfffffffffffebb@@ 02, test_eax_eax, js@@ _0x5c, je_0x75, mov_edi_eax, mov_r12d_eax, call_0xffffffffffffb@@ 27@@ 2, test_eax_eax, js_0x4@@ c, xor_eax_eax, mov_r8d_r12d, lea_rcx_[rip+0x@@ 16@@ 67@@ 4], mov_edx@@ _0x78, lea_rsi_[rip+0x16@@ 5e@@ 5], mov_edi_1, call_0xffffffffffffd@@ 00@@ c, mov_rax_qword_ptr_[rsp+0x98], xor_rax_qword_ptr_fs:[0x28], jne_0x2d, add_rsp_0xa8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rdi_[rip+0x16@@ 5b@@ e], call_0xfffffffffffeb@@ 9c8, mov_edi_1, call_0xfffffffffffeb@@ a0@@ e, call_0xfffffffffffeb@@ 5d@@ 9, lea_rbx_[rip+0x@@ 2@@ 3d@@ 9d], cmp_qword_ptr_[rbx+8]_0, je_0x114, call_0xfffffffffffeb@@ 5d@@ 2, test_eax_eax, jne_0x1@@ 1c, call_0xfffffffffffeb@@ 65@@ 5, test_eax_eax, jne_0x10@@ f, mov_rdi_qword_ptr_[rbx+8], call_0xfffffffffffeb@@ 7@@ 34, test_rax_rax, je_0x1@@ 3d, mov_r12d_dword_ptr_[r@@ ax+0x14], mov_rdi_qword_ptr_[rbx+8], mov_esi_r12d, mov_r14d_dword_ptr_[r@@ ax+0x10], call_0xfffffffffffeba@@ 27, test_eax_eax, js@@ _0x10@@ b, cmp_qword_ptr_[rbx+8]_0, je_0xb2, mov_rdx_rsp, mov_rsi_r13, mov_edi_1, call_0xfffffffffffeb@@ 7c@@ 4, test_eax_eax, je_0x74, mov_esi_r12d, mov_r15d_r14d, mov_edi_r12d, call_0xfffffffffffeb@@ 88@@ 2, test_eax_eax, js_0x1@@ 2d, mov_esi_r15d, mov_edi_r14d, call_0xfffffffffffeb@@ 8@@ 3f, test_eax_eax, js@@ _0x10@@ 4, call_0xffffffffffffb0@@ f2, mov_rsi_rbp, mov_rdi_r13, call_0xfffffffffffeb@@ 93@@ 7, call_0xfffffffffffeb@@ 42@@ 2, mov_edi_dword_ptr_[rax], call_0xfffffffffffeb@@ 9a@@ b, mov_r8_rax, mov_rax_qword_ptr_[rip+0x2@@ 3c@@ 9c], mov_rcx_r13, mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x16@@ 5@@ 2e], mov_esi_1, xor_eax_eax, call_0xfffffffffffeb@@ 958, mov_edi_1, call_0xfffffffffffeb@@ 4@@ 3e, mov_eax_dword_ptr_[rsp+0x18], mov_r15d_r14d, test_ah_8, je_7, mov_r15d_dword_ptr_[r@@ sp+0x1c], mov_esi_r12d, test_ah_4, je_0xffffffffffffff@@ 7d, mov_esi_dword_ptr_[rsp+0x@@ 20], jmp_0xffffffffffffff73, call_0xfffffffffffeb@@ 56@@ 3, test_eax_eax, je_0xffffffffffffff@@ 4d, jmp_0xffffffffffffff84, call_0xfffffffffffeb@@ 4c@@ 4, mov_r14d_eax, call_0xfffffffffffeb@@ 6f@@ c, mov_r12d_eax, jmp_0xffffffffffffff2a, mov_rax_qword_ptr_[rip+0x2@@ 3c@@ 28], lea_rdi_[rip+0x16@@ 4e@@ 1], mov_rcx_qword_ptr_[rax], mov_edx_0x2@@ 6, mov_esi_1, call_0xfffffffffffeb@@ 8c@@ 4, mov_edi_1, call_0xfffffffffffeb@@ 8a@@ a, lea_rdi_[rip+0x16@@ 4@@ 68], call_0xfffffffffffeb@@ 84@@ e, mov_edi_1, call_0xfffffffffffeb@@ 8@@ 94, mov_rax_qword_ptr_[rip+0x2@@ 3b@@ e8], mov_rcx_qword_ptr_[rbx+8], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x16@@ 42@@ d], mov_esi_1, xor_eax_eax, call_0xfffffffffffeb@@ 8a@@ 3, mov_edi_1, call_0xfffffffffffeb@@ 86@@ 9, lea_rdi_[rip+0x16@@ 44@@ b], call_0xfffffffffffeb@@ 80@@ d, mov_edi_1, call_0xfffffffffffeb@@ 85@@ 3, lea_rdi_[rip+0x16@@ 4@@ 24], call_0xfffffffffffeb@@ 7f@@ 7, mov_edi_1, call_0xfffffffffffeb@@ 83@@ d
push_rbp, lea_rcx_[rip+0x@@ 16@@ 46@@ f], mov_edx_0x2@@ 07, push_rbx, lea_rsi_[rip+0x16@@ 47@@ a], mov_rbx_rdi, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_r8d_dword_ptr_[r@@ di+0x18], mov_edi_0x20, call_0xffffffffffffc@@ db@@ b, mov_rax_qword_ptr_[rbx+0x38], lea_rsi_[rsp+8], lea_rbp@@ _[rax-1], lea_rdi_[rsp+0x10], call_0xfffffffffffeb@@ 42@@ 4, lea_rax_[rbp+r@@ bp*8], mov_rdx_qword_ptr_[rsp+0x10], lea_rcx_[r@@ bx+rax*8], sub_rdx_qword_ptr_[r@@ cx+0x@@ 58], mov_rax_qword_ptr_[rsp+0x18], mov_rcx_qword_ptr_[rcx+0x@@ 60], cmp_rax_rcx, jge_0x@@ b, dec@@ _rdx, add_rax@@ _0xf4240, sub_rax_rcx, lea_rcx_[rip+0x@@ 26@@ b@@ 1c], mov_qword_ptr_[rcx@@ ]_rdx, mov_qword_ptr_[rcx@@ +8]_rax, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_9, add_rsp_0x38, pop_rbx, pop_rbp, ret, call_0xfffffffffffeb@@ 35@@ e
push_r13, xor_r8d_r8d, push_r12, mov_r12_rdi, push_rbp, mov_ebp_edx, mov_rdx_rsi, push_rbx, xor_esi_esi, mov_rbx_rcx, sub_rsp_0x38, mov_r13_rsp, xor_ecx_ecx, mov_rdi_r13, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0xffffffffffff10@@ 4e, test_eax_eax, js_0x1@@ 4, mov_edi_ebp, mov_rdx_r13, mov_rsi_r12, call_rbx, mov_rdi_r13, call_0xffffffffffff11@@ 18, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0xd, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, call_0xfffffffffffeb@@ 2e@@ 8
push_rbx, mov_r8d_edi, mov_ebx_esi, mov_r9d_esi, lea_rcx_[rip+0x@@ 17@@ 3e0], mov_edx_0x1@@ 7b, lea_rsi_[rip+0x16@@ 35@@ 3], mov_edi_0x20, xor_eax_eax, call_0xffffffffffffc@@ ca@@ d, mov_r8d_ebx, lea_rcx_[rip+0x@@ 16@@ 34@@ c], mov_edx_0x80, mov_esi_1, lea_rdi_[rip+0x26@@ 8c@@ d], xor_eax_eax, call_0xfffffffffffeb@@ 78@@ b, lea_rax_[rip+0x26@@ 8b@@ f], pop_rbx, ret
test_rdi_rdi, je_0x19, mov_rdi_qword_ptr_[r@@ di+0x1@@ 270], test_rdi_rdi, je_9, jmp_qword_ptr_[r@@ di], mov_rax_rsi, ret, push_rax, lea_rcx_[rip+0x@@ 17@@ 78@@ 4], mov_edx_0x4@@ 8, lea_rsi_[rip+0x16@@ 2d@@ f], lea_rdi_[rip+0x12@@ 8c@@ 6], call_0xfffffffffffeb@@ 2c@@ 9
push_rbp, mov_r8d_edi, mov_rbp_rsi, push_rbx, movsxd_rbx@@ _edx, mov_r9d_ebx, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, movabs_rax@@ _0x20000@@ 000@@ 20, mov_qword_ptr_[rsp]_rax, lea_rcx_[rip+0x@@ 17@@ 33@@ 9], xor_eax_eax, mov_edx_0x1@@ 4c, lea_rsi_[rip+0x16@@ 28@@ a], mov_edi_0x20, call_0xffffffffffffc@@ be@@ 6, mov_eax_dword_ptr_[rbp], cmp_eax_2, ja@@ _0xffffffff@@ fff@@ eb@@ 7@@ 31, lea_r8_[rip+0x@@ 16@@ 28@@ 4], test_ebx_ebx, js@@ _7, cmp_ebx_dword_ptr_[r@@ sp@@ +rax*4], jl@@ _0x1f, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x20, add_rsp_0x18, pop_rbx, mov_rax_r8, pop_rbp, ret, lea_rdx_[rip+0x2@@ 24@@ 31], mov_rax_qword_ptr_[r@@ dx+rax*8], mov_r8_qword_ptr_[r@@ ax+r@@ bx*8], jmp_0xffffffffffffffd4, call_0xfffffffffffeb@@ 1a@@ 7
push_rbp, mov_r8d_edi, mov_rbp_rsi, push_rbx, movsxd_rbx@@ _edx, mov_r9d_ebx, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, movabs_rax_0x1@@ 38@@ 0000@@ 0@@ 15@@ d, mov_qword_ptr_[rsp]_rax, lea_rcx_[rip+0x@@ 16@@ 21@@ e], xor_eax_eax, mov_edx_0x1@@ 65, lea_rsi_[rip+0x16@@ 1@@ ea], mov_edi_0x20, call_0xffffffffffffcb@@ 46, mov_eax_dword_ptr_[rbp], cmp_eax_2, ja@@ _0xffffffff@@ fff@@ eb@@ 6@@ 96, test_ebx_ebx, js@@ _7, cmp_ebx_dword_ptr_[r@@ sp@@ +rax*4], jl@@ _0x4@@ 6, mov_r8d_ebx, lea_rcx_[rip+0x@@ 16@@ 20@@ 2], mov_edx_0x80, mov_esi_1, lea_rdi_[rip+0x26@@ 7d@@ 1], xor_eax_eax, call_0xfffffffffffeb@@ 60@@ f, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x44, add_rsp_0x18, pop_rbx, lea_rax_[rip+0x26@@ 7a@@ e], pop_rbp, ret, lea_rdx_[rip+0x22@@ 36@@ 1], mov_rax_qword_ptr_[r@@ dx+rax*8], lea_rcx_[rip+0x@@ 16@@ 1b@@ d], mov_r8_qword_ptr_[r@@ ax+r@@ bx*8], mov_edx_0x80, mov_esi_1, lea_rdi_[rip+0x26@@ 78@@ 1], xor_eax_eax, call_0xfffffffffffeb@@ 5b@@ f, jmp_0xffffffffffffffb0, call_0xfffffffffffeb0@@ c@@ 8
push_rbp, mov_r9d_esi, mov_ebp_esi, push_rbx, lea_rcx_[rip+0x@@ 17@@ 20@@ 2], mov_rbx_rdi, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_r8d_dword_ptr_[r@@ di+0x18], mov_edx_0x2@@ b3, lea_rsi_[rip+0x16@@ 11@@ a], mov_edi_0x20, call_0xffffffffffffca@@ 76, mov_rax_qword_ptr_[rbx+0x38], cmp_rax@@ _0x3f, je_0x8@@ 3, lea_rsi_[rax@@ +rax*8], shl_rsi_3, lea_rdx_[r@@ bx+r@@ si], pxor_xmm0_xmm0, inc_rax, movups_xmmword_ptr_[r@@ dx+0x@@ 40]_xmm0, mov_qword_ptr_[rdx+0x@@ 80]_0, mov_dword_ptr_[rdx+0x@@ 48]_1, mov_dword_ptr_[rdx+0x@@ 40]@@ _ebp, movups_xmmword_ptr_[r@@ dx+0x@@ 50]_xmm0, movups_xmmword_ptr_[r@@ dx+0x@@ 60]_xmm0, movups_xmmword_ptr_[r@@ dx+0x@@ 70@@ ]_xmm0, mov_qword_ptr_[rbx+0x38]_rax, lea_rax_[rip+0x2@@ 55@@ 10], mov_edx_dword_ptr_[rax], lea_rax_[rip+0x2@@ 37@@ f7], or_edx@@ _dword_ptr_[r@@ ax+0x28], jne_0x1c, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x47, add_rsp_0x18, pop_rbx, pop_rbp, ret, mov_r8_rsp, lea_rdi_[r@@ bx+r@@ si+0x@@ 58], mov_rsi_r8, call_0xfffffffffffeb0@@ 6d, jmp_0xffffffffffffffd6, mov_rax_qword_ptr_[rip+0x2@@ 37@@ 7f], lea_rcx_[rip+0x@@ 17@@ 4f@@ 8], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x17@@ 15@@ e], mov_esi_1, xor_eax_eax, call_0xfffffffffffeb@@ 4@@ 37, call_0xfffffffffffea@@ ec@@ 2, call_0xfffffffffffea@@ fc@@ d
endbr64, ret
endbr64, push_rbp, push_rbx, sub_rsp_8, cmp_qword_ptr_[rdi+0x@@ 38]_0, je_0x9c, mov_r8d_dword_ptr_[r@@ di+0x18], mov_rbx_rdi, mov_edx_0x2@@ e9, xor_eax_eax, lea_rcx_[rip+0x@@ 160@@ 7e], lea_rsi_[rip+0x16@@ 00@@ e], mov_edi_0x20, call_0xffffffffffffc@@ 96@@ a, mov_rax_qword_ptr_[rbx+0x38], lea_rbp@@ _[rax-1], lea_rax_[rbp+r@@ bp*8], lea_rax_[r@@ bx+rax*8], mov_edx_dword_ptr_[rax+0x@@ 48], test_edx_edx, je_0x47, lea_rax_[rbp+r@@ bp*8], mov_rdi_qword_ptr_[r@@ bx@@ +rax*8+0x@@ 68], test_rdi_rdi, je_7, call_0xffffffffffff4@@ 2b@@ e, lea_rax_[rbp+r@@ bp*8], lea_rbp_[r@@ bx+rax*8], mov_rdi_qword_ptr_[rbp+0x@@ 70], test_rdi_rdi, je_0x10, call_0xffffffffffff3@@ 9c@@ 7, mov_rdi_qword_ptr_[rbp+0x@@ 70], call_0xfffffffffffea@@ dc@@ e, dec@@ _qword_ptr_[r@@ bx+0x38], add_rsp_8, pop_rbx, pop_rbp, ret, mov_rsi_qword_ptr_[r@@ ax+0x50], test_rsi_rsi, je_0xffffffffffffff@@ b4, mov_rdi_rbx, call_0xffffffffffffc@@ 3a@@ c, jmp_0xffffffffffffffaa, lea_rcx_[rip+0x@@ 17@@ 3b@@ e], mov_edx_0x2@@ e7, lea_rsi_[rip+0x15@@ f8@@ 1], lea_rdi_[rip+0x15@@ fc@@ 9], call_0xfffffffffffea@@ f6@@ b
endbr64, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x20, lea_rbx_[rip+0x@@ 25@@ 2b@@ 6], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, cmp_dword_ptr_[rbx@@ ]_1, je_0x2@@ 3b, mov_rax_qword_ptr_[rbp+8], mov_r9d_dword_ptr_[r@@ bp+0x10], mov_r8d_0xffffffff, test_rax_rax, je_6, mov_r8d_dword_ptr_[r@@ ax+0x18], mov_edi_0x20, lea_rcx_[rip+0x15@@ fa@@ d], mov_edx_0x5@@ 9, lea_rsi_[rip+0x15@@ f0@@ d], xor_eax_eax, call_0xffffffffffffc@@ 86@@ c, mov_rdi_qword_ptr_[rbp+8], test_rdi_rdi, je_0x48, mov_rsi_rbp, call_0xfffffffffffffb@@ eb, mov_rbp_rax, test_rax_rax, je_0x1@@ c0, mov_rax_qword_ptr_[rax+8], test_rax_rax, je_0x2b, mov_rdi_qword_ptr_[r@@ ax+0x1@@ 280], cmp_rax_rdi, je_0x1f, test_rdi_rdi, je_0x1a, mov_rsi_rbp, call_0xfffffffffffffbb@@ d, mov_rbp_rax, test_rax_rax, je_0x1@@ 92, cmp_dword_ptr_[rbp+0x@@ 10]@@ _0xe, ja_0x@@ b@@ 3f, mov_eax_dword_ptr_[rbp+0x10], lea_rdx_[rip+0x17@@ 29@@ 4], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xc@@ 2c, add_rsp_0x20, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, lea_rcx_[rip+0x15@@ d7@@ f], mov_edx_0x5@@ 5, lea_rsi_[rip+0x15@@ cf@@ 4], mov_edi_1, call_0xffffffffffffc@@ 65@@ 0, call_0xffffffffffffb@@ 5f@@ b, mov_dword_ptr_[rbx@@ ]_2, jmp_0xfffffffffffffd@@ a3, mov_rax_qword_ptr_[rip+0x2@@ 2a@@ 6e], lea_rdi_[rip+0x15@@ 5d@@ a], mov_rcx_qword_ptr_[rax], mov_edx_0x16, mov_esi_1, call_0xfffffffffffea@@ 70@@ a, mov_edi_1, call_0xfffffffffffea@@ 6f@@ 0, call_0xfffffffffffea@@ 0@@ 6@@ 6
push_r15, push_r14, mov_r14d@@ _edi, push_r13, mov_r13_rsi, push_r12, mov_r12_r8, mov_r8d@@ _r9d, push_rbp, mov_rbp_rdx, push_rbx, sub_rsp_0x58, mov_qword_ptr_[rsp]_rcx, mov_rbx_qword_ptr_[rsp+0x@@ 90], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, cmp_dword_ptr_[r@@ 12]@@ _0xa, je_0x92, lea_r15_[r@@ sp+0x10], xor_edx_edx, mov_rcx_r12, mov_rsi_r13, mov_rdi_r15, call_0xffffffffffff19@@ 5c, mov_r8_r15, mov_rcx_r12, mov_rdx_r13, mov_esi_r14d, mov_rdi_rbp, call_0xffffffffffff3@@ 2a8, test_eax_eax, js_0xa@@ 9, mov_rdi_qword_ptr_[rsp], mov_rsi_r15, call_0xffffffffffff27@@ 54, test_eax_eax, js_0x@@ 9c, xor_eax_eax, test_rbx_rbx, je_0x1f, movdqa_xmm0_xmmword_ptr_[r@@ sp+0x10], movdqa_xmm1_xmmword_ptr_[r@@ sp+0x@@ 20], movdqa_xmm2_xmmword_ptr_[r@@ sp+0x@@ 30], movaps_xmmword_ptr_[r@@ bx@@ ]_xmm0, movaps_xmmword_ptr_[r@@ bx+0x1@@ 0@@ ]_xmm1, movaps_xmmword_ptr_[r@@ bx+0x@@ 20]_xmm2, mov_rbx_qword_ptr_[rsp+0x48], xor_rbx_qword_ptr_fs:[0x28], jne_0x76, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_edi_0x38, mov_dword_ptr_[rsp+0xc]_r9d, call_0xfffffffffffea@@ 16@@ 6, test_rax_rax, mov_r8d_dword_ptr_[rsp+0xc], mov_r15_rax, je_0xffffffffffffff@@ 5a, mov_edx_r8d, mov_rsi_r12, mov_rdi_rax, call_0xffffffffffff0@@ f@@ 27, mov_rdx_qword_ptr_[r@@ 12+0x28], mov_r8d_1, mov_qword_ptr_[r15+0x@@ 28]_rdx, mov_r12_r15, jmp_0xffffffffffffff34, mov_eax_0xffffffff, jmp_0xffffffffffffff90, mov_rdi_r15, call_0xffffffffffff19@@ be, mov_eax_0xffffffff, jmp_0xffffffffffffff81, call_0xfffffffffffe9e@@ 8@@ f
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_dword_ptr_[rip+0x25@@ 5c@@ 8]_0, test_rdi_rdi, je_0xc7, lea_r12_[rip+0x@@ 22@@ 6@@ 18], mov_rbx_rdi, mov_rax_qword_ptr_[rip+0x22@@ 5c@@ e], mov_rdi_qword_ptr_[r12+0x@@ 20], mov_r13d_esi, mov_ebp_edx, cmp_rdi_qword_ptr_[r@@ ax], je_0x1@@ e1, lea_rax_[rip+0x24@@ 2f@@ c], cmp_qword_ptr_[rax]_0, je_0xb8, mov_ecx_dword_ptr_[r@@ bx+0x18], lea_rdx_[rip+0x16@@ 34@@ 5], mov_esi_1, xor_eax_eax, call_0xfffffffffffea@@ 26@@ 9, add_dword_ptr_[rip+0x2@@ 5@@ 56@@ e@@ ]_eax, lea_rax_[rip+0x24@@ 2d@@ f], mov_edi_dword_ptr_[rax], test_edi_edi, jne_0x@@ b3, lea_r14_[rip+0x@@ 24@@ 2c@@ a], mov_esi_dword_ptr_[r@@ 14], test_esi_esi, jne_0x@@ e1, lea_rax_[rip+0x24@@ 2c0], mov_eax_dword_ptr_[rax], test_eax_eax, je_0x30, mov_rdi_qword_ptr_[r12+0x@@ 20], test_r13d_r13d, je_0x1@@ a6, mov_rcx_qword_ptr_[r@@ bx+0x1@@ 258], lea_rdx_[rip+0x16@@ 32@@ f], mov_esi_1, xor_eax_eax, call_0xfffffffffffea@@ 20@@ b, add_dword_ptr_[rip+0x2@@ 55@@ 10]_eax, mov_ecx_dword_ptr_[r@@ 12+0x18], test_ecx_ecx, jle_0x@@ b, and_ebp@@ _1, jne_0x1@@ 84, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ 16, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_r9d_dword_ptr_[r@@ 12+0x@@ 40], test_r9d_r9d, jne_0xffffffffffffff@@ 46, lea_rax_[rip+0x24@@ 23@@ b], mov_edi_dword_ptr_[rax], test_edi_edi, je_0xffffffffffffff@@ 62, lea_rsi_[rsp+8], lea_rdi_[rsp+0x10], call_0xfffffffffffe9d@@ a6, mov_rdx_qword_ptr_[rip+0x2@@ 54@@ 8a], mov_rax_qword_ptr_[rip+0x2@@ 54@@ 8b], mov_rcx_rdx, mov_rsi_qword_ptr_[rsp+0x10], or@@ _rcx_rax, jne_0x78, mov_rdx_qword_ptr_[rsp+0x18], mov_rax_rdx, mov_r8_rdx, sub_r8@@ _rax, jmp_0x8@@ 5, lea_r15_[r@@ sp+0x10], lea_rsi_[rsp+8], mov_rdi_r15, call_0xfffffffffffe9d@@ 63, cmp_dword_ptr_[r@@ 14@@ ]_2, jg_0x1@@ 12, mov_rdi_r15, je_0x1@@ 39, call_0xfffffffffffe9b@@ 9b, mov_ecx_dword_ptr_[rax+8], mov_r9d_dword_ptr_[r@@ ax], mov_r8d_dword_ptr_[rax+4], mov_rdi_qword_ptr_[r12+0x@@ 20], lea_rdx_[rip+0x16@@ 22@@ d], mov_esi_1, xor_eax_eax, call_0xfffffffffffea@@ 119, add_dword_ptr_[rip+0x2@@ 54@@ 1e@@ ]_eax, jmp_0xfffffffffffffe@@ d3, mov_rcx_rsi, sub_rcx_rdx, mov_rdx_qword_ptr_[rsp+0x18], cmp_rax_rdx, jle_0xffffffffffffff@@ 84, lea_r8_[r@@ dx+0x@@ f@@ 42@@ 40], dec@@ _rcx, sub_r8@@ _rax, mov_rdi_qword_ptr_[r12+0x@@ 20], mov_qword_ptr_[rip+0x25@@ 3d@@ 7@@ ]_rsi, mov_qword_ptr_[rip+0x25@@ 3d@@ 8]_rdx, mov_esi_1, lea_rdx_[rip+0x16@@ 1a@@ 7], xor_eax_eax, call_0xfffffffffffea@@ 0@@ c2, add_dword_ptr_[rip+0x2@@ 5@@ 3c@@ 7@@ ]_eax, jmp_0xfffffffffffffe@@ 6a, mov_r8d_dword_ptr_[r@@ 12+0x@@ 40], test_r8d_r8d, je_0xfffffffffffffe@@ 4a, mov_ecx_dword_ptr_[r@@ bx+0x18], lea_rdx_[rip+0x16@@ 17@@ 1], mov_esi_1, xor_eax_eax, call_0xfffffffffffea@@ 0@@ 91, add_dword_ptr_[rip+0x2@@ 53@@ 96@@ ]_eax, jmp_0xfffffffffffffe@@ 28, mov_rcx_qword_ptr_[r@@ bx+0x1@@ 248], jmp_0xfffffffffffffe@@ 60, mov_rax_qword_ptr_[rbx+0x38], mov_rdi_qword_ptr_[r12+0x@@ 20], dec_rax, imul@@ _ecx_eax, lea_r8_[rip+0x13@@ 56@@ 7], lea_rdx_[rip+0x16@@ 17@@ 6], mov_esi_1, xor_eax_eax, call_0xfffffffffffea@@ 0@@ 4c, add_dword_ptr_[rip+0x2@@ 5@@ 35@@ 1]_eax, jmp_0xfffffffffffffe@@ 53, mov_rdi_qword_ptr_[r12+0x@@ 20], mov_r8d_dword_ptr_[rsp+0x18], mov_rcx_qword_ptr_[rsp+0x10], lea_rdx_[rip+0x16@@ 110], mov_esi_1, xor_eax_eax, call_0xfffffffffffea@@ 0@@ 1b, add_dword_ptr_[rip+0x2@@ 53@@ 20]_eax, jmp_0xfffffffffffffdd@@ 5, call_0xfffffffffffe9a@@ 68, sub_rsp_8, mov_rdx_qword_ptr_[rsp+0x20], mov_ecx_dword_ptr_[rax+8], mov_r8d_dword_ptr_[rax+4], mov_rdi_qword_ptr_[r12+0x@@ 20], push_rdx, mov_esi_1, lea_rdx_[rip+0x16@@ 0@@ d9], mov_r9d_dword_ptr_[r@@ ax], xor_eax_eax, call_0xfffffffffffe9@@ fd@@ c, pop_rdx, add_dword_ptr_[rip+0x2@@ 5@@ 2e@@ 0]_eax, pop_rcx, jmp_0xfffffffffffffd@@ 94, call_0xfffffffffffe9b@@ 6@@ a
endbr64, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0xd0, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, lea_rbx_[rip+0x@@ 22@@ 28@@ 5], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_eax_dword_ptr_[rbx+0x28], test_eax_eax, jne_0x@@ b1, mov_rax_qword_ptr_[rip+0x2@@ 52@@ 13], test_rax_rax, je_0x33, mov_rdx_qword_ptr_[rip+0x2@@ 5@@ 1@@ ff], mov_rcx_qword_ptr_[rbx+0x20], lea_rdx_[rdx@@ +rdx*8], cmp_qword_ptr_[r@@ ax+rdx*@@ 8+0x@@ 50]_0, je_0xa9, mov_edx_0x12, mov_esi_1, lea_rdi_[rip+0x15@@ fe@@ 9], call_0xfffffffffffe9@@ ea@@ 2, mov_qword_ptr_[rip+0x25@@ 1d@@ 2]_0, test_r12_r12, je_0x60, xor_edx_edx, xor_esi_esi, mov_rdi_rbp, call_0xfffffffffffffb@@ c6, mov_rdi_qword_ptr_[rbx+0x20], lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, mov_rcx_rsp, lea_rax_[rsp+0x20], mov_rdx_r12, mov_esi_1, mov_dword_ptr_[rsp]_0x10, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffe9@@ 8d@@ c, mov_rsi_qword_ptr_[rbx+0x20], mov_edi_0xa, call_0xfffffffffffe9a@@ de, mov_dword_ptr_[rip+0x25@@ 15@@ f]_0, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x3d, add_rsp_0xd0, pop_rbx, pop_rbp, pop_r12, ret, mov_edx_0x11, mov_esi_1, lea_rdi_[rip+0x15@@ f5@@ 9], call_0xfffffffffffe9d@@ ff, mov_qword_ptr_[rip+0x25@@ 12@@ f]_0, test_r12_r12, jne_0xffffffffffffff@@ 5f, jmp_0xffffffffffffffb7, call_0xfffffffffffe9@@ 9a@@ 4
push_r15, mov_r9_r8, mov_r8_rcx, push_r14, mov_ecx_0x80, mov_r14d_esi, push_r13, mov_esi_0x80, mov_r13_rdx, push_r12, mov_edx_1, mov_r12_rdi, sub_rsp_0x98, mov_r15@@ _rsp, mov_rdi_r15, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, call_0xfffffffffffe9c@@ 2a, mov_byte_ptr_[rsp+0x@@ 7f@@ ]_0, test_r12_r12, je_0x45, mov_r9_r15, mov_r8_r13, mov_ecx_r14d, mov_rdx_r12, lea_rsi_[rip+0x15@@ ed@@ 4], xor_edi_edi, xor_eax_eax, call_0xfffffffffffffe0@@ 4, mov_rax_qword_ptr_[rsp+0x88], xor_rax_qword_ptr_fs:[0x28], jne_0x2e, add_rsp_0x98, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rcx_r15, mov_rdx_r13, lea_rsi_[rip+0x15@@ e@@ 9e], xor_edi_edi, xor_eax_eax, call_0xfffffffffffffd@@ c7, jmp_0xffffffffffffffc3, call_0xfffffffffffe@@ 98@@ e@@ 0
endbr64, mov_eax_esi, test_esi_esi, jle_@@ 4, add_dword_ptr_[r@@ di]@@ _esi, ret
endbr64, push_r14, push_r13, mov_r13_rdi, push_r12, mov_r12_rcx, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rsi, sub_rsp_0x20, mov_ecx_dword_ptr_[rsi], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, test_ecx_ecx, jne_0x40, mov_rsi_r12, call_rdx, test_eax_eax, js_0x@@ ca, mov_ecx_eax, xor_edx_edx, or_ecx@@ _dword_ptr_[r@@ bx], setne_dl, mov_dword_ptr_[rbx]_edx, mov_rbx_qword_ptr_[rsp+0x18], xor_rbx_qword_ptr_fs:[0x28], jne_0x@@ b5, add_rsp_0x20, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, lea_rsi_[rsp+0x10], lea_rdi_[rsp+8], call_0xfffffffffffe@@ 97@@ 56, mov_r14_rax, mov_rsi_r12, mov_rdi_rax, call_rbp, mov_rdi_r14, mov_dword_ptr_[rsp+4]_eax, call_0xfffffffffffe@@ 97@@ ef, mov_edx_dword_ptr_[rsp+4], test_edx_edx, jle_0x@@ 54, mov_eax_dword_ptr_[rbx], test_eax_eax, je_0x28, mov_esi_1, mov_rdi_r13, xor_eax_eax, lea_rdx_[rip+0x12@@ 54@@ a], call_0xfffffffffffe9c@@ 6b, mov_esi_eax, lea_rdi_[r@@ sp+4], call_0xffffffffffffff@@ 2f, test_eax_eax, js@@ _0x20, mov_rdx_qword_ptr_[rsp+0x10], mov_rdi_qword_ptr_[rsp+8], mov_rcx_r13, mov_esi_1, call_0xfffffffffffe9c@@ 24, cmp_rax_qword_ptr_[r@@ sp+0x10], je_0xa, mov_dword_ptr_[rsp+4]@@ _0xffffffff, mov_rdi_qword_ptr_[rsp+8], call_0xfffffffffffe9@@ 66@@ b, mov_eax_dword_ptr_[rsp+4], jmp_0xffffffffffffff39, mov_eax_0xffffffff, jmp_0xffffffffffffff42, call_0xfffffffffffe@@ 97@@ b@@ 3
push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x20, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, cmp_rsi_rdx, jae_0x@@ 91, mov_rbx_rdi, mov_r14_rsi, mov_rbp_rdx, mov_r12_rcx, mov_r13_rsp, jmp_0x44, mov_qword_ptr_[rsp]_rax, lea_rax_[rip+0x2@@ 1f@@ 25], mov_rcx_r13, mov_rdi_qword_ptr_[rax+0x20], lea_rdx_[rip-0x@@ 4@@ 19], mov_rsi_r12, mov_qword_ptr_[rsp+8]_rbx, call_0xfffffffffffffe@@ 7f, test_eax_eax, js@@ _0x20, inc@@ _r14, add_dword_ptr_[rip+0x2@@ 4e@@ 9d@@ ]_eax, cmp_rbp@@ _r14, je_0x3a, mov_rsi_r14, mov_rdi_rbx, call_0xffffffffffff20@@ 52, test_rax_rax, jne_0xffffffffffffffba, mov_eax_0xffffffff, mov_rdx_qword_ptr_[rsp+0x18], xor_rdx_qword_ptr_fs:[0x28], jne_0x19, add_rsp_0x20, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, xor_eax_eax, jmp_0xffffffffffffffdb, call_0xfffffffffffe@@ 96@@ e@@ c
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, mov_r10@@ _rdx, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_r8_rsp, lea_rax_[rsp+0x20], mov_rcx_r10, lea_rdx_[rip+0x@@ 112@@ f4], mov_qword_ptr_[rsp+0x10]_rax, mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, call_0xfffffffffffffc@@ b5, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xfffffffffffe@@ 96@@ 2@@ 8
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, mov_r10@@ _rdx, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_r8_rsp, lea_rax_[rsp+0x20], mov_rcx_r10, lea_rdx_[rip+0x15@@ b5@@ 3], mov_qword_ptr_[rsp+0x10]_rax, mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, call_0xfffffffffffffb@@ f5, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xfffffffffffe9@@ 56@@ 8
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x28]_rsi, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, mov_r10_rdi, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, xor_esi_esi, lea_rax_[rsp+0x20], xor_edi_edi, mov_r8_rsp, mov_rcx_r10, lea_rdx_[rip+0x11@@ 16@@ 6], mov_qword_ptr_[rsp+0x10]_rax, mov_dword_ptr_[rsp]_8, mov_dword_ptr_[rsp+4]_0x30, call_0xfffffffffffffb@@ 27, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xfffffffffffe@@ 94@@ 9@@ a
push_r12, lea_rax_[rip+0x24@@ 98@@ f], push_rbp, push_rbx, mov_r12_qword_ptr_[rax], test_r12_r12, je_0x37, mov_rbx_rdi, jmp_0x14, mov_r12_qword_ptr_[r@@ 12+0x28], test_r12_r12, je_0x20, mov_rdi_qword_ptr_[r12], mov_rsi_rbx, call_0xfffffffffffe9@@ 5c@@ f, test_eax_eax, jne_0xffffffffffffffe8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, mov_r12_qword_ptr_[rip+0x2@@ 4b@@ 91], test_r12_r12, jne_0xffffffffffffffe8, mov_esi_1, mov_edi_0x30, call_0xfffffffffffe9@@ 582, mov_r12_rax, test_rax_rax, je_0xcf, mov_rbp_qword_ptr_[rip+0x2@@ 4b@@ 62], test_rbp_rbp, je_0x66, mov_qword_ptr_[r12+0x1@@ 0]_rbp, mov_dword_ptr_[r12+0x1@@ 8]_0, mov_qword_ptr_[r12+0x@@ 20@@ ]_4, mov_edi@@ _0x100, call_0xfffffffffffe@@ 96@@ 79, mov_qword_ptr_[r12+8]_rax, test_rax_rax, je_0x94, xor_ebx_ebx, jmp_9, mov_rax_qword_ptr_[r12+8], mov_rdi_rbx, shl_rdi@@ _6, add_rdi_rax, xor_edx_edx, mov_rsi_rbp, inc_rbx, call_0xffffffffffff2b@@ 19, cmp_rbx_qword_ptr_[r@@ 12+0x20], jb_0xffffffffffffff@@ df, mov_qword_ptr_[rip+0x2@@ 4b0@@ 6]@@ _r12, jmp_0xffffffffffffff60, mov_edi_0x38, call_0xfffffffffffe@@ 96@@ 2c, mov_qword_ptr_[rip+0x2@@ 4a@@ e8]_rax, test_rax_rax, je_0x81, mov_edi_3, call_0xffffffffffff0@@ 13@@ 6, movdqu_xmm0_xmmword_ptr_[r@@ ax], mov_rbp_qword_ptr_[rip+0x2@@ 4a@@ ce], movups_xmmword_ptr_[r@@ bp@@ ]_xmm0, movdqu_xmm1_xmmword_ptr_[r@@ ax+0x10], movups_xmmword_ptr_[rbp+0x@@ 10]_xmm1, movdqu_xmm2_xmmword_ptr_[r@@ ax+0x20], movups_xmmword_ptr_[rbp+0x@@ 20]_xmm2, mov_rax_qword_ptr_[rax+0x30], mov_qword_ptr_[rbp+0x@@ 30]_rax, lea_rax_[rip+0x2@@ 1f@@ 81], mov_qword_ptr_[rbp+0x@@ 28]_rax, jmp_0xffffffffffffff48, call_0xfffffffffffe9@@ 258, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 97@@ e1, mov_rsi_rax, lea_rdi_[rip+0x10@@ e7@@ 7], xor_eax_eax, call_0xfffffffffffffd@@ e0, mov_rdi_qword_ptr_[r12+8], test_rdi_rdi, je_7, call_0xfffffffffffe9@@ 1d@@ 1, mov_rdi_r12, call_0xfffffffffffe9@@ 1c@@ 9, xor_r12d_r12d, jmp_0xffffffffffffff64, call_0xfffffffffffe@@ 92@@ 1c, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 97@@ a5, mov_rsi_rax, lea_rdi_[rip+0x10@@ e@@ 3b], xor_eax_eax, call_0xfffffffffffffd@@ a4, call_0xfffffffffffe9@@ 1e@@ f
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x88, mov_dword_ptr_[rsp+0xc]@@ _edi, lea_rbp_[rip+0x@@ 2@@ 1a@@ a0], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x78]_rax, xor_eax_eax, mov_eax_dword_ptr_[rbp+0x@@ 28], test_eax_eax, jne_0x2@@ 57, cmp_qword_ptr_[rip+0x2@@ 4a@@ 2d@@ ]_0, mov_r13_qword_ptr_[r@@ dx+0x10], mov_rbx_rsi, mov_r12_rdx, je_0x26, mov_rcx_qword_ptr_[r@@ bp+0x20], mov_edx_0x12, mov_esi_1, lea_rdi_[rip+0x15@@ 8@@ 13], call_0xfffffffffffe9@@ 6c@@ c, mov_dword_ptr_[rip+0x24@@ 9e@@ d]_0, mov_rax_qword_ptr_[rbx+0x38], mov_edx_1, mov_qword_ptr_[rip+0x24@@ 9e@@ 5]_rax, mov_eax_dword_ptr_[rsp+0xc], mov_rdi_rbx, test_eax_eax, sete_sil, movzx_esi_sil, mov_qword_ptr_[rip+0x24@@ 9d@@ 5@@ ]_rbx, call_0xfffffffffffff3d@@ 5, mov_eax_dword_ptr_[rbp+0x@@ 60], test_eax_eax, jne_0x1a, mov_rax_qword_ptr_[r12+8], test_rax_rax, je_0x10, mov_r15d_dword_ptr_[r@@ 12+0x20], test_r15d_r15d, jne_0x3@@ 5f, mov_r14d_dword_ptr_[r@@ bp+0x14], mov_rcx_r13, test_r14d_r14d, jne_0x1@@ ef, mov_rdi_qword_ptr_[rbp+0x20], mov_esi_1, xor_eax_eax, lea_rdx_[rip+0x10@@ d@@ 4c], call_0xfffffffffffe9@@ 66@@ f, mov_esi_eax, lea_rdi_[rip+0x24@@ 97@@ 1], call_0xfffffffffffff93@@ 1, test_eax_eax, js_0x1@@ 96, mov_rax_qword_ptr_[r12+8], mov_rdi_qword_ptr_[rbp+0x20], test_rax_rax, je_0x19, mov_r11d_dword_ptr_[r@@ ax+0x48], test_r11d_r11d, je_0x10, mov_r10d_dword_ptr_[r@@ 12+0x20], test_r10d_r10d, je_0x3@@ 35, lea_rdx_[rip+0x16@@ 620], mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 96@@ 21, mov_esi_eax, lea_rdi_[rip+0x24@@ 92@@ 3], call_0xfffffffffffff8e@@ 3, mov_rdi_r13, call_0xfffffffffffffd@@ 1b, mov_qword_ptr_[rsp+0x18]_rax, test_rax_rax, je_0x3@@ 86, mov_r15_qword_ptr_[rsp+0x18], mov_edi_dword_ptr_[rsp+0xc], mov_rdx_qword_ptr_[r15+0x10], mov_rsi_rbx, call_0xffffffffffff24@@ b8, mov_edi_0x40, mov_r13_rax, call_0xfffffffffffe9@@ 3f@@ b, mov_r12_rax, test_rax_rax, je_0x10@@ c, mov_rdi_rax, call_0xffffffffffff18@@ 47, cmp_qword_ptr_[r15+0x@@ 20]_0, mov_dword_ptr_[rsp+0x38]_0, je_0x3@@ 65, lea_rax_[rsp+0x@@ 3c], mov_qword_ptr_[rsp+0x10@@ ]_-1, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+0x28]_rax, jmp_0x27, cmp_qword_ptr_[r@@ sp+0x10@@ ]_-1, je_0x2@@ 3a, inc@@ _qword_ptr_[rsp], mov_rcx_qword_ptr_[rsp+0x18], mov_rax_qword_ptr_[rsp], cmp_rax_qword_ptr_[r@@ cx+0x20], jae_0x@@ 2b@@ 3, mov_r10_qword_ptr_[rsp], mov_rax_qword_ptr_[rsp+0x18], shl@@ _r10@@ _6, add_r10@@ _qword_ptr_[r@@ ax+8], mov_eax_dword_ptr_[r@@ 10], mov_r14@@ _r10, cmp_eax_1, je_0xd3, cmp_eax_2, je_0xffffffffffffff@@ ba, test_eax_eax, je_0x1@@ be, lea_rcx_[rip+0x15@@ 6e@@ 9], mov_edx_0x1@@ 74, lea_rsi_[rip+0x15@@ 6@@ 98], lea_rdi_[rip+0x15@@ 69@@ a], call_0xfffffffffffe9@@ 14@@ 6, mov_rax_r15, mov_rdi_rax, call_0xfffffffffffe@@ 8f@@ 5a, mov_rsi_rbp, mov_rdi_r14, call_0xffffffffffff2a@@ 1f, mov_rdi_r13, call_0xffffffffffff24@@ 37, mov_rbp_qword_ptr_[rsp+0x10], mov_rdi_r12, call_0xffffffffffff1b@@ 2a, mov_rdi_r13, call_0xffffffffffff24@@ 02, xor_r12d_r12d, xor_r13d_r13d, mov_rax_qword_ptr_[rbx+0x38], mov_edx_dword_ptr_[rsp+0x38], lea_rax_[rax@@ +rax*8@@ -9], lea_rax_[r@@ bx+rax*8], mov_qword_ptr_[rax+0x6@@ 8]_r13, mov_qword_ptr_[rax+0x7@@ 0]_r12, mov_qword_ptr_[rax+0x7@@ 8]_rbp, mov_dword_ptr_[rax+0x@@ 8@@ 0]_edx, mov_rax_qword_ptr_[rsp+0x78], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ 8b, add_rsp_0x88, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_r13, call_0xffffffffffffa@@ ca@@ 5, mov_rcx_rax, jmp_0xfffffffffffffe@@ 0c, mov_esi_dword_ptr_[r@@ 10+0x1@@ c], mov_rdi_r13, call_0xffffffffffff@@ 23@@ 99, test_eax_eax, js_0xffffffffffffff@@ 70, mov_rsi_r12, mov_rdi_r14, call_0xffffffffffff27@@ c6, mov_rbp_rax, test_rax_rax, je_0xffffffffffffff@@ 51, mov_edi_0x38, mov_dword_ptr_[rsp+0x3c]_0, call_0xfffffffffffe9@@ 268, mov_r15_rax, test_rax_rax, je_0xffffffffffffff@@ 1d, mov_rcx_qword_ptr_[rsp+0x28], mov_rdx_rax, mov_rsi_rbp, mov_rdi_r14, call_0xffffffffffff28@@ f9, test_eax_eax, js_0xffffffffffffff@@ 02, mov_edi_dword_ptr_[rsp+0x@@ 3c], test_edi_edi, je_0xe, cmp_qword_ptr_[r@@ sp+0x10@@ ]_-1, je_0x1@@ 7e, mov_esi_dword_ptr_[r@@ 15], test_esi_esi, je_0x1@@ c3, sub_rsp_8, lea_r10_[rsp+0x@@ 48], push_r10, mov_rcx_r12, mov_rdx_r13, mov_edi_dword_ptr_[rsp+0x1c], mov_r9d_1, mov_r8_r15, mov_rsi_rbx, mov_qword_ptr_[rsp+0x30]@@ _r10, call_0xffffffffffffe@@ fb@@ 7, pop_rdx, pop_rcx, test_eax_eax, js_0xffffffffffff@@ f@@ ea@@ e, mov_r10_qword_ptr_[rsp+0x20], mov_rsi_rbp, mov_rdx_r10, mov_rdi_r14, call_0xffffffffffff28@@ aa, cmp_eax_-1, je_0xfffffffffffffe@@ 92, test_eax_eax, jne_0xffffffffffffff@@ 55, mov_rdi_r14, mov_rsi_rbp, call_0xffffffffffff28@@ ae, mov_rdi_r13, call_0xffffffffffff2@@ 2c@@ 6, jmp_0xfffffffffffffe@@ 0d, sub_rsp_8, mov_r8_qword_ptr_[r@@ 10+8], push_0, xor_r9d_r9d, mov_rcx_r12, mov_edi_dword_ptr_[rsp+0x1c], mov_rdx_r13, mov_rsi_rbx, call_0xffffffffffffef@@ 4e, pop_r8, pop_r9, test_eax_eax, jns_0xffffffffffff@@ f@@ dd@@ f, jmp_0xfffffffffffffe@@ 5b, mov_rdi_r12, call_0xffffffffffff18@@ 0d, mov_qword_ptr_[rsp+0x10]_rax, jmp_0xfffffffffffffd@@ bf, mov_rcx_qword_ptr_[r@@ ax+0x38], mov_rdi_qword_ptr_[rbp+0x20], lea_rdx_[rip+0x15@@ 48@@ b], mov_esi_1, xor_eax_eax, call_0xfffffffffffe9@@ 32@@ 2, mov_esi_eax, lea_rdi_[rip+0x24@@ 6@@ 24], call_0xfffffffffffff5e@@ 4, jmp_0xfffffffffffffc@@ 7e, mov_rcx_qword_ptr_[r@@ ax+0x38], mov_esi_1, xor_eax_eax, lea_rdx_[rip+0x10@@ 2d@@ 5], call_0xfffffffffffe9@@ 2e@@ e, mov_esi_eax, lea_rdi_[rip+0x24@@ 5@@ f0], call_0xfffffffffffff5b@@ 0, test_eax_eax, js_0xfffffffffffffe@@ 15, mov_rdi_qword_ptr_[rbp+0x20], jmp_0xfffffffffffffc@@ a0, mov_rbp_qword_ptr_[rsp+0x10], cmp_rbp@@ _-1, je_0x67, xor_esi_esi, lea_rcx_[rsp+0x@@ 38], mov_rdx_rbp, mov_rdi_r12, call_0xfffffffffffff6a@@ 8, test_eax_eax, jns_0xffffffffffff@@ fd@@ ba, jmp_0xfffffffffffffd@@ 9e, mov_rdi_r12, call_0xffffffffffff17@@ 4d, mov_qword_ptr_[rsp+0x10]_rax, jmp_0xfffffffffffffe@@ 7b, mov_rdi_qword_ptr_[rbp+0x20], lea_rdx_[rip+0x15@@ 3d@@ 4], mov_esi_1, call_0xfffffffffffe9@@ 268, mov_esi_eax, lea_rdi_[rip+0x24@@ 56@@ a], call_0xfffffffffffff5@@ 2a, jmp_0xfffffffffffffd@@ 91, mov_rdi_r12, call_0xffffffffffff@@ 170@@ d, mov_rbp_rax, jmp_0xffffffffffffff90, mov_rdi_r15, call_0xfffffffffffefe@@ 6d, mov_rdi_r15, call_0xfffffffffffe@@ 8c@@ 75, jmp_0xfffffffffffffe@@ 8c, call_0xfffffffffffe@@ 8d@@ c@@ b
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rsi, sub_rsp_0x78, mov_dword_ptr_[rsp+8]@@ _edi, mov_r12_qword_ptr_[r@@ dx+0x10], mov_rdi_r12, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x68]_rax, xor_eax_eax, call_0xfffffffffffff9@@ 00, test_rax_rax, je_0x7a, lea_rbp_[rip+0x@@ 2@@ 15@@ 4f], mov_r14d_dword_ptr_[r@@ bp+0x28], test_r14d_r14d, je_0x90, lea_rbp_[rip+0x@@ 24@@ 4a@@ b], mov_rdi_qword_ptr_[rbp], test_rdi_rdi, je_0x4@@ 54, mov_rsi_r12, call_0xffffffffffffae@@ 2b, mov_rbx_rax, test_rax_rax, je_0x3@@ 58, lea_rdx_[rip+0x24@@ 4e@@ 3], mov_rdi_qword_ptr_[rbx+0x10], mov_rsi_qword_ptr_[rdx+8], mov_rax_qword_ptr_[rbx+8], lea_rcx_[r@@ di+r@@ si], cmp_rcx@@ _0xf4240, jle_0x@@ 2@@ 64, lea_rcx_[r@@ di+r@@ si-0x@@ f@@ 42@@ 40], mov_qword_ptr_[rbx+0x1@@ 0]_rcx, inc_rax, add_rax_qword_ptr_[r@@ dx], inc_dword_ptr_[r@@ bx], mov_qword_ptr_[rbx+8]_rax, mov_rax_qword_ptr_[rsp+0x68], xor_rax_qword_ptr_fs:[0x28], jne_0x40@@ f, add_rsp_0x78, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_r13_rax, mov_rax_qword_ptr_[rip+0x2@@ 44@@ 5e], test_rax_rax, je_0x30, cmp_rax_rbx, je_0x2@@ 1e, mov_rcx_qword_ptr_[r@@ bp+0x20], mov_edx_0x12, mov_esi_1, lea_rdi_[rip+0x15@@ 24@@ 2], call_0xfffffffffffe@@ 90@@ fb, mov_qword_ptr_[rip+0x2@@ 44@@ 2b@@ ]_0, test_rbx_rbx, je_0x2@@ 38, cmp_dword_ptr_[rsp+@@ 8]_1, sete_sil, mov_edx_1, movzx_esi_sil, mov_rdi_rbx, call_0xffffffffffffe@@ e0@@ d, mov_edx_dword_ptr_[rbp+0x@@ 14], test_edx_edx, jne_0x1@@ e3, mov_rdi_qword_ptr_[rbp+0x20], mov_rcx_r12, lea_rdx_[rip+0x15@@ 25@@ c], mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 90@@ c8, add_dword_ptr_[rip+0x2@@ 4@@ 3c@@ d@@ ]_eax, mov_rax_qword_ptr_[rbx+0x38], lea_r12@@ _[rax-1], lea_rax_[r@@ 12+r@@ 12*8], lea_r11_[r@@ bx+rax*8], mov_r15_qword_ptr_[r@@ 11+0x@@ 68], mov_qword_ptr_[rsp+0x10]_r11, test_r15_r15, je_0x74, lea_r10_[rsp+0x@@ 30], mov_rcx_qword_ptr_[r@@ 13+0x10], xor_r8d_r8d, xor_edx_edx, mov_rdi_r10, mov_rsi_rbx, mov_qword_ptr_[rsp+0x18]_r10, call_0xffffffffffff0@@ 6@@ 16, mov_r10_qword_ptr_[rsp+0x18], mov_rcx_qword_ptr_[r@@ 13+0x10], mov_esi_dword_ptr_[rsp+8], mov_r8@@ _r10, mov_rdx_rbx, mov_rdi_r15, call_0xffffffffffff1f@@ 6b, test_eax_eax, mov_r10_qword_ptr_[rsp+0x18], mov_r11_qword_ptr_[rsp+0x10], js_0x1@@ 6a, mov_rdi_qword_ptr_[r@@ 11+0x@@ 70], test_rdi_rdi, je_0x2@@ 65, xor_ecx_ecx, lea_rdx_[rip+0x10@@ 7@@ 38], mov_rsi_r10, call_0xffffffffffff14@@ 1b, xor_r14d_r14d, test_eax_eax, setne@@ _r14b, lea_rax_[r@@ 12+r@@ 12*8], shl_rax_3, lea_r13_[r@@ bx+rax], mov_rdi_qword_ptr_[r13+0x@@ 70], test_rdi_rdi, je_0x29, lea_rcx_[r@@ bx+r@@ ax+0x@@ 80], mov_qword_ptr_[rsp+8]_rcx, call_0xffffffffffff14@@ cb, mov_rcx_qword_ptr_[rsp+8], mov_rsi_qword_ptr_[r13+0x@@ 78], mov_rdi_qword_ptr_[r13+0x@@ 70], mov_rdx_rax, call_0xfffffffffffff3f@@ 6, mov_rdi_qword_ptr_[rbp+0x20], lea_rdx_[rip+0x16@@ 4e@@ 1], mov_esi_1, xor_eax_eax, call_0xfffffffffffe8@@ fd@@ f, mov_edx_dword_ptr_[rbp], add_eax@@ _dword_ptr_[rip+0x2@@ 4@@ 2e@@ 1], lea_ecx_[rdx-1], mov_dword_ptr_[rip+0x24@@ 2d@@ 8]_eax, cmp_eax_ecx, jl_0x1@@ 16, mov_rcx_qword_ptr_[r@@ bp+0x20], mov_edx_2, mov_esi_1, lea_rdi_[rip+0x15@@ 14@@ a], call_0xfffffffffffe@@ 8f@@ 8b, test_r15_r15, je_0x30, cmp_qword_ptr_[rsp+0x30]_0, je_0x28, lea_r10_[rsp+0x@@ 30], lea_rax_[r@@ 12+r@@ 12*8], mov_rax_qword_ptr_[r@@ bx@@ +rax*8+0x@@ 70], mov_rdi_qword_ptr_[rbp+0x20], lea_rsi_[rsp+0x20], mov_qword_ptr_[rsp+0x20]_r10, mov_qword_ptr_[rsp+0x28]_rax, call_0xffffffffffffe@@ fb8, test_r14d_r14d, jne_0x1@@ 70, lea_rax_[rip+0x22@@ fe@@ 3], mov_r9_qword_ptr_[r@@ bp+0x20], mov_eax_dword_ptr_[rax], test_eax_eax, jne_0x@@ d3, mov_rsi_r9, mov_edi_0xa, call_0xfffffffffffe@@ 8b@@ cd, mov_qword_ptr_[rip+0x2@@ 42@@ 5d@@ ]_0, mov_dword_ptr_[rip+0x24@@ 24@@ 3]_0, jmp_0xfffffffffffffd@@ c5, mov_qword_ptr_[rbx+0x1@@ 0]_rcx, jmp_0xfffffffffffffd@@ ad, mov_rax_qword_ptr_[rip+0x24@@ 22@@ 9], cmp_qword_ptr_[rbx+0x@@ 38]_rax, jne_0xfffffffffffffdd@@ d, jmp_0xfffffffffffffe@@ 4e, mov_rdi_r12, call_0xffffffffffffa@@ 70d, mov_r12_rax, jmp_0xfffffffffffffe@@ 18, xor_edx_edx, xor_esi_esi, mov_rdi_r10, call_0xffffffffffff0@@ 4f@@ 9, mov_r14d_1, jmp_0xfffffffffffffe@@ b1, mov_rax_qword_ptr_[0x@@ 38], jmp_0xfffffffffffffe@@ 0f, mov_r14d_1, mov_rdi_qword_ptr_[rbp+0x20], sub_ecx_eax, lea_r8_[rip+0x12@@ 3b0], lea_rdx_[rip+0x14@@ fb@@ f], mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 8e@@ 95, jmp_0xfffffffffffffe@@ d0, lea_rax_[rip+0x24@@ 1c@@ 1], mov_rdi_r9, mov_r8d_dword_ptr_[r@@ ax+8], mov_rcx_qword_ptr_[rax], lea_rdx_[rip+0x15@@ 0@@ 12], mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 8e@@ 69, mov_r9_qword_ptr_[r@@ bp+0x20], jmp_0xffffffffffffff0b, mov_edi_0x18, call_0xfffffffffffe@@ 8c@@ 73, mov_rdi_r12, mov_rbx_rax, call_0xfffffffffffe@@ 8e@@ 68, mov_rsi_rax, test_rbx_rbx, je_0xf1, test_rax_rax, je_0xe8, mov_dword_ptr_[rbx]_0, mov_qword_ptr_[rbx+0x10]_0, mov_qword_ptr_[rbx+8]_0, mov_rdi_qword_ptr_[rbp], mov_rdx_rbx, call_0xffffffffffffa@@ 86@@ 1, jmp_0xfffffffffffffc@@ 62, lea_r10_[rsp+0x@@ 30], mov_rdi_r10, call_0xffffffffffff0@@ 4b@@ 8, jmp_0xfffffffffffffe@@ 89, mov_rdi_qword_ptr_[rbp+0x20], xor_eax_eax, lea_rdx_[rip+0x16@@ 2d@@ 6], mov_esi_1, mov_qword_ptr_[rsp+8]_r10, call_0xfffffffffffe8@@ dd@@ 1, mov_ecx_dword_ptr_[r@@ bp], add_eax@@ _dword_ptr_[rip+0x2@@ 40@@ d3], dec@@ _ecx, cmp_ecx_eax, mov_dword_ptr_[rip+0x2@@ 40@@ c9@@ ]_eax, mov_r10_qword_ptr_[rsp+8], jg_0xfffffffffffffe@@ f4, mov_rcx_qword_ptr_[r@@ bp+0x20], mov_edx_2, mov_esi_1, lea_rdi_[rip+0x14@@ f@@ 38], mov_qword_ptr_[rsp+8]_r10, call_0xfffffffffffe@@ 8d@@ 74, cmp_qword_ptr_[rsp+0x30]_0, mov_r10_qword_ptr_[rsp+8], mov_r14d_1, jne_0xfffffffffffffd@@ ea, jmp_0xffffffffffffff7d, lea_rdi_[rip-0x@@ 54@@ f7], lea_rsi_[rip-0x@@ 54@@ 8e], call_0xffffffffffffa@@ 67@@ 2, mov_qword_ptr_[rbp]_rax, mov_rdi_rax, jmp_0xfffffffffffffb@@ 98, call_0xfffffffffffe@@ 88@@ f1, lea_rdi_[rip+0x13@@ 0@@ e4], call_0xfffffffffffe8@@ cc@@ 5, mov_edi_1, call_0xfffffffffffe@@ 8d@@ 0@@ b
endbr64, push_r12, mov_r12d_edi, mov_rdi_rsi, push_rbp, push_rbx, mov_rbx_rsi, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xffffffffffff9d@@ 0b, sub_rsp_8, push_rax, mov_r9_qword_ptr_[r@@ bx+0x10], mov_r8d_r12d, lea_rcx_[rip+0x14@@ eb@@ 3], mov_edx_0x2@@ e, lea_rsi_[rip+0x14@@ fd@@ 6], mov_edi_0x10, xor_eax_eax, call_0xffffffffffffa@@ 270, mov_rdx_qword_ptr_[rbx+0x10], xor_ecx_ecx, mov_esi_r12d, mov_edi_1, xor_eax_eax, call_0xfffffffffffe@@ 8b@@ 3b, mov_qword_ptr_[rsp+0x10]_rax, pop_rcx, mov_rbp_rax, pop_rsi, cmp_rax_-1, je_0x90, mov_byte_ptr_[rsp@@ ]@@ _0x@@ cc, mov_byte_ptr_[rbx+0x1@@ 8@@ ]_bpl, mov_rdx_qword_ptr_[rbx+0x10], mov_rcx_qword_ptr_[rsp], xor_eax_eax, mov_esi_r12d, mov_edi_4, call_0xfffffffffffe@@ 8b@@ 08, cmp_rax_-1, jne_0x47, call_0xfffffffffffe@@ 87@@ 2d, mov_edi_dword_ptr_[rax], call_0xfffffffffffe@@ 8c@@ b6, mov_rdi_rbx, mov_rbp_rax, call_0xffffffffffff9c@@ 7b, sub_rsp_8, push_rbp, mov_r9_rax, mov_rax_qword_ptr_[rip+0x20f@@ 97], mov_r8_qword_ptr_[r@@ bx+0x10], mov_rdi_qword_ptr_[rax], lea_rdx_[rip+0x14@@ e5@@ 1], mov_ecx_r12d, mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 8c@@ 4f, pop_rax, pop_rdx, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x23, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, ret, call_0xfffffffffffe8@@ 6c8, mov_edi_dword_ptr_[rax], test_edi_edi, je_0xffffffffffffff@@ 6d, jmp_0xffffffffffffff93, call_0xfffffffffffe@@ 87@@ b@@ 7
endbr64, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, mov_rdi_rsi, sub_rsp_8, call_0xffffffffffff9b@@ fd, sub_rsp_8, push_rax, mov_r9_qword_ptr_[r@@ bp+0x10], mov_r8d_dword_ptr_[r@@ bx+0x18], lea_rsi_[rip+0x14@@ ed@@ 3], mov_edi_0x10, lea_rcx_[rip+0x14@@ e0@@ 8], mov_edx_0x5@@ 4, xor_eax_eax, call_0xffffffffffffa@@ 16@@ 1, mov_edi_dword_ptr_[r@@ bx+0x18], add_rsp_0x18, pop_rbx, mov_rsi_rbp, pop_rbp, jmp_0xfffffffffffffe@@ 9@@ 0
endbr64, push_r12, mov_r12d_edi, mov_rdi_rsi, push_rbx, mov_rbx_rsi, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xffffffffffff9b@@ 8c, sub_rsp_8, push_rax, mov_r9_qword_ptr_[r@@ bx+0x10], mov_r8d_r12d, lea_rcx_[rip+0x14@@ dd@@ 4], mov_edx_0x6@@ 1, lea_rsi_[rip+0x14@@ e5@@ 7], mov_edi_0x10, xor_eax_eax, call_0xffffffffffffa0@@ f1, mov_rdx_qword_ptr_[rbx+0x10], xor_ecx_ecx, mov_esi_r12d, mov_edi_1, xor_eax_eax, call_0xfffffffffffe8@@ 9b@@ c, mov_qword_ptr_[rsp+0x10]_rax, pop_rdx, pop_rcx, cmp_rax_-1, je_0x9c, movzx_eax_byte_ptr_[r@@ bx+0x18], mov_rdx_qword_ptr_[rbx+0x10], mov_byte_ptr_[rsp@@ ]_al, mov_esi_r12d, xor_eax_eax, mov_rcx_qword_ptr_[rsp], mov_edi_4, call_0xfffffffffffe8@@ 98@@ d, cmp_rax_-1, jne_0x54, call_0xfffffffffffe8@@ 5b@@ 2, mov_edi_dword_ptr_[rax], test_edi_edi, je_0x49, call_0xfffffffffffe@@ 8b@@ 37, mov_r9_rax, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x62, mov_rax_qword_ptr_[rip+0x20e@@ 18], mov_r8_qword_ptr_[r@@ bx+0x10], mov_rdi_qword_ptr_[rax], add_rsp_0x18, pop_rbx, mov_ecx_r12d, lea_rdx_[rip+0x14@@ d6@@ a], mov_esi_1, xor_eax_eax, pop_r12, jmp_0xfffffffffffe@@ 8a@@ c9, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x23, add_rsp_0x18, pop_rbx, pop_r12, ret, call_0xfffffffffffe8@@ 540, mov_edi_dword_ptr_[rax], test_edi_edi, je_0xffffffffffffff@@ 61, jmp_0xffffffffffffff8a, call_0xfffffffffffe@@ 86@@ 2@@ f
endbr64, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, mov_rdi_rsi, sub_rsp_8, call_0xffffffffffff9a@@ 6d, sub_rsp_8, push_rax, mov_r9_qword_ptr_[r@@ bp+0x10], mov_r8d_dword_ptr_[r@@ bx+0x18], lea_rsi_[rip+0x14@@ d@@ 43], mov_edi_0x10, lea_rcx_[rip+0x14@@ d0@@ 8], mov_edx_0x8@@ 4, xor_eax_eax, call_0xffffffffffff9@@ fd@@ 1, mov_edi_dword_ptr_[r@@ bx+0x18], add_rsp_0x18, pop_rbx, mov_rsi_rbp, pop_rbp, jmp_0xfffffffffffffe@@ 8@@ 0
endbr64, lea_rdx_[rip+0x@@ 1f@@ 9e@@ 5], mov_eax_0xffffffff, jmp_0x13, mov_eax_dword_ptr_[r@@ dx+0x20], add_rdx@@ _0x18, test_eax_eax, je_0x17, cmp_edi_eax, jne_0xfffffffffffffff3, lea_rdx_[rip+0x22@@ 94@@ 2], mov_dword_ptr_[rdx]_eax, ret, ret
endbr64, push_r12, lea_rsi_[rip+0x13@@ 6@@ bb], mov_r12d_0xffffffff, push_rbp, mov_rbp_rdi, push_rbx, lea_rbx_[rip+0x@@ 1f@@ 99@@ 1], jmp_0x19, mov_r12d_dword_ptr_[r@@ bx+0x20], add_rbx_0x18, test_r12d_r12d, je_0x11, mov_rsi_qword_ptr_[rbx], mov_rdi_rbp, call_0xfffffffffffe@@ 86@@ b5, test_eax_eax, jne_0xffffffffffffffe6, mov_eax_r12d, pop_rbx, pop_rbp, pop_r12, ret
endbr64, push_r15, mov_ecx_5, push_r14, push_r13, push_r12, mov_r12_rdi, lea_rdi_[rip+0x14@@ ca@@ b], push_rbp, mov_rsi_r12, lea_rdx_[r@@ 12+@@ 5], push_rbx, sub_rsp_0x28, lea_rbx_[rip+0x@@ 16@@ 550], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], mov_qword_ptr_[rsp+0x18]_0, seta_al, sbb_al_0, test_al_al, cmove@@ _r12@@ _rdx, movzx_eax_byte_ptr_[r12], test_byte_ptr_[r@@ bx@@ +rax*2@@ ]_8, jne_0x71, mov_rdi_qword_ptr_[rsp+0x18], call_0xfffffffffffe8@@ 37@@ a, mov_rdi_r12, call_0xfffffffffffe8@@ 4c@@ 2, lea_edi_[rax@@ +3], movsxd_rdi_edi, call_0xdb@@ f7, cmp_byte_ptr_[r@@ 12]@@ _0x3c, mov_qword_ptr_[rsp+0x18]_rax, je_0x38, mov_rdi_qword_ptr_[rsp+0x18], mov_r8_r12, mov_esi_1, xor_eax_eax, lea_rcx_[rip+0x14@@ c@@ 3c], mov_rdx_-1, call_0xfffffffffffe8@@ 98@@ 9, mov_rax_qword_ptr_[rsp+0x18], add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rsi_r12, mov_rdi_rax, call_0xfffffffffffe8@@ 3d@@ a, jmp_0xffffffffffffffe1, mov_rdi_r12, mov_r14_r12, call_0xfffffffffffe@@ 84@@ 5a, lea_edi@@ _[rax+8], movsxd_rdi_edi, call_0xdb@@ 8f, movzx_edx_byte_ptr_[r@@ 12], mov_qword_ptr_[rsp+0x18]_rax, mov_r15_rax, mov_rax_rdx, movzx_edx_word_ptr_[r@@ bx@@ +rdx*2], and_edx@@ _8, jne_0x1@@ a3, cmp_al_0x4@@ f, jne_0xffffffffffffff@@ 5c, mov_dword_ptr_[rsp+0x14]_0, lea_rbp_[rip+0x@@ 1f7@@ 26], mov_r13d@@ _4, lea_rsi_[rip+0x14@@ b7@@ 5], jmp_0x34, mov_rsi_qword_ptr_[rbp], add_rbp_0x10, add_dword_ptr_[r@@ sp+0x1@@ 4]_1, test_rsi_rsi, je_0xffffffffffffff@@ 21, mov_rdi_rsi, mov_qword_ptr_[rsp+8]_rsi, call_0xfffffffffffe8@@ 3e@@ 2, mov_rsi_qword_ptr_[rsp+8], mov_r13_rax, mov_rdx_r13, mov_rdi_r14, call_0xfffffffffffe8@@ 3@@ 1f, test_eax_eax, jne_0xffffffffffffffc8, add_r14@@ _r13, movsxd_r13@@ _dword_ptr_[r@@ sp+0x14], lea_rax_[rip+0x@@ 1f@@ 6b@@ 7], shl_r13@@ _4, mov_r13_qword_ptr_[r@@ ax+r@@ 13+8], mov_rdi_r13, call_0xfffffffffffe8@@ 3a@@ b, mov_byte_ptr_[r@@ 15]@@ _0x22, lea_rdi_[r@@ 15+1], mov_rsi_r13, mov_rdx_rax, mov_rbp_rax, call_0xfffffffffffe8@@ 5a@@ 5, mov_rdi_rax, movzx_eax_byte_ptr_[r14], add_rdi_rbp, mov_byte_ptr_[r@@ di]@@ _0x22, lea_r15_[r@@ di+1], cmp_al_0x5@@ 4, je_0x2@@ 7d, cmp_al_0x4@@ 5, jne_0x1@@ 65, cmp_byte_ptr_[r14+@@ 1]_0, je_0xfffffffffffffe@@ 9b, movzx_r13d_byte_ptr_[r@@ 14], cmp_r13b@@ _0x5f, jne_0x3@@ 67, movzx_eax_byte_ptr_[r@@ 14+1], cmp_al@@ _0x5f, jne_0x2@@ df, movzx_edx_byte_ptr_[r@@ 14+2], lea_rbp_[r@@ 14+2], mov_rax_rdx, movzx_edx_word_ptr_[r@@ bx@@ +rdx*2], test_dl_4, jne_0x@@ f8, cmp_al@@ _0x5f, jne_0x10@@ e, cmp_byte_ptr_[r14+@@ 3]@@ _0x5f, je_0x103, lea_rbx_[rip+0x@@ 1f@@ 5b@@ 6], mov_edx_6, xor_r13d_r13d, lea_r14_[rip+0x@@ 14@@ aa@@ 6], jmp_0x27, mov_r14_qword_ptr_[r@@ bx+0x10], add_rbx_0x10, add_r13d_1, test_r14_r14, je_0xfffffffffffffe@@ 22, mov_rdi_r14, call_0xfffffffffffe8@@ 2e8, mov_rdx_rax, mov_rsi_r14, mov_rdi_rbp, call_0xfffffffffffe8@@ 22@@ a, test_eax_eax, jne_0xffffffffffffffd3, movsxd_r13@@ _r13d, lea_rax_[rip+0x@@ 1f@@ 56@@ 7], shl_r13@@ _4, mov_rbp_qword_ptr_[r@@ ax+r@@ 13+8], mov_rdi_rbp, call_0xfffffffffffe8@@ 2b@@ b, mov_rdi_r15, mov_rsi_rbp, mov_rbx_rax, mov_rdx_rax, call_0xfffffffffffe8@@ 4b@@ a, add_r15@@ _rbx, mov_byte_ptr_[r@@ 15]_0, jmp_0xfffffffffffffe@@ 1a, movzx_edx_byte_ptr_[r@@ 14+1], add_r14_1, add_r15_1, mov_byte_ptr_[r15@@ -1]_al, mov_rax_rdx, test_byte_ptr_[r@@ bx@@ +rdx*@@ 2]@@ _0xc, jne_0xffffffffffffffe8, cmp_dl@@ _0x5f, jne_0xfffffffffffffe@@ f4, movzx_edx_byte_ptr_[r@@ 14+1], test_byte_ptr_[r@@ bx@@ +rdx*@@ 2]@@ _0xc, jne_0xffffffffffffffd4, jmp_0xfffffffffffffefe, cmp_al@@ _0x5f, jne_0x2@@ 39, movzx_eax_byte_ptr_[r@@ 14+1], test_byte_ptr_[r@@ bx@@ +rax*2@@ ]_4, je_0xfffffffffffffd@@ 78, mov_rbp_r14, movzx_eax_byte_ptr_[r@@ bp+1], lea_r14_[r@@ bp+1], mov_r13_rax, test_byte_ptr_[r@@ bx@@ +rax*2@@ ]_4, je_0xffffffffffffffd7, mov_rbp_r14, jmp_0xffffffffffffff@@ ec, mov_byte_ptr_[r@@ 15]@@ _0x2e, mov_r14_rbp, add_r15_1, jmp_0xfffffffffffffdd@@ f, cmp_al_0x4@@ e, lea_edx_[rax-0x@@ 4e], sete_sil, and_edx@@ _0xfd, jne_0x15@@ 9, cmp_byte_ptr_[r14+@@ 1]_0, je_0xffffffffffffff@@ 54, cmp_al_0x5@@ 3, je_0xb, test_sil_sil, je_0x99, cmp_al@@ _0x58, jne_0x22, mov_rax_r14, add_r14_1, movzx_eax_byte_ptr_[rax+1], cmp_al@@ _0x6e, jne_0xf, movzx_eax_byte_ptr_[r@@ 14+1], add_r14_1, cmp_al@@ _0x6e, je_0xfffffffffffffff@@ 5, cmp_al@@ _0x62, je_0xfffffffffffffff1, cmp_al_0x5@@ 3, jne_0x75, movzx_eax_byte_ptr_[r@@ 14+1], test_al_al, je_0xfffffffffffffc@@ e5, movzx_r13d_byte_ptr_[r@@ 14+2], cmp_r13b@@ _0x5f, je_0xb, test_r13b_r13b, jne_0xfffffffffffffc@@ d1, cmp_al_0x5@@ 2, je_0x1@@ 6f, jg_0x@@ d6, cmp_al_0x4@@ 9, je_0xfa, cmp_al_0x4@@ f, jne_0xfffffffffffffc@@ b3, lea_rbp_[rip+0x@@ 14@@ 8e@@ d], mov_rdi_r15, mov_rsi_rbp, add_r14@@ _2, call_0xfffffffffffe@@ 80@@ db, mov_rdi_rbp, call_0xfffffffffffe8@@ 16@@ 3, add_r15_rax, jmp_0xfffffffffffffd@@ fb, cmp_al@@ _0x58, je_0xffffffffffffff@@ 6f, cmp_al@@ _0x44, jne_0xfffffffffffffd@@ e2, movzx_eax_byte_ptr_[r@@ 14+1], cmp_al@@ _0x41, je_0x1@@ 91, lea_rbp_[rip+0x@@ 14@@ 8c@@ 1], cmp_al_0x4@@ 6, jne_0xfffffffffffffc@@ 5b, mov_rdi_r15, mov_rsi_rbp, call_0xfffffffffffe@@ 80@@ 8e, mov_rdi_rbp, call_0xfffffffffffe8@@ 11@@ 6, add_r15_rax, jmp_0xfffffffffffffe@@ 6c, cmp_byte_ptr_[r14+@@ 1]@@ _0x4@@ b, jne_0xfffffffffffffd@@ 97, movzx_eax_byte_ptr_[r@@ 14+2], cmp_al@@ _0x42, je_0x6a, cmp_al@@ _0x5f, jne_0xfffffffffffffc@@ 1b, cmp_byte_ptr_[r14+@@ 3]@@ _0x5f, jne_0xfffffffffffffc@@ 10, movzx_edx_byte_ptr_[r@@ 14+4], mov_byte_ptr_[r@@ 15]@@ _0x2e, add_r14@@ _4, add_r15_1, mov_rax_rdx, movzx_edx_word_ptr_[r@@ bx@@ +rdx*2], jmp_0xfffffffffffffc@@ 8b, cmp_al_0x5@@ 7, jne_0xfffffffffffffb@@ eb, lea_rbp_[rip+0x@@ 14@@ 8@@ 33], jmp_0xffffffffffffff38, cmp_al_0x5@@ 3, jne_0xffffffffffffff@@ 56, cmp_byte_ptr_[r14+@@ 1]_0, jne_0xfffffffffffffe@@ e0, jmp_0xfffffffffffffb@@ c6, lea_rbp_[rip+0x@@ 14@@ 7f@@ a], jmp_0xffffffffffffff14, cmp_byte_ptr_[r14+@@ 3]_0, jne_0xfffffffffffff@@ bb0, jmp_0xfffffffffffffdd@@ 7, cmp_al@@ _0x42, je_0xa, cmp_al_0x4@@ 5, jne_0xfffffffffffffb@@ 9b, movzx_ecx_byte_ptr_[r@@ 14+2], lea_rax_[r@@ 14+2], mov_rdx_rcx, test_byte_ptr_[r@@ bx@@ +rcx*@@ 2@@ ]_4, je_0x13, movzx_ecx_byte_ptr_[r@@ ax+1], add_rax_1, mov_rdx_rcx, test_byte_ptr_[r@@ bx@@ +rcx*@@ 2@@ ]_4, jne_0xfffffffffffffff1, cmp_dl@@ _0x73, jne_0xfffffffffffffb@@ 6f, cmp_byte_ptr_[rax+1]_0, je_0xfffffffffffffd@@ 92, jmp_0xfffffffffffffb@@ 5f, lea_rbp_[rip+0x@@ 14@@ 7a@@ 2], jmp_0xfffffffffffffea@@ d, cmp_al@@ _0x58, jne_0x26, movzx_r13d_byte_ptr_[r@@ bp+2], lea_r14_[r@@ bp+2], cmp_r13b@@ _0x6e, jne_0x11, movzx_r13d_byte_ptr_[r@@ 14+1], add_r14_1, cmp_r13b@@ _0x6e, je_0xfffffffffffffff@@ 3, cmp_r13b@@ _0x62, je_0xffffffffffffffed, cmp_r13b@@ _0x2e, jne_0x34, movzx_eax_byte_ptr_[r@@ 14+1], test_byte_ptr_[r@@ bx@@ +rax*2@@ ]_4, je_0xfffffffffffffb@@ 17, movzx_edx_byte_ptr_[r@@ 14+2], lea_rax_[r@@ 14+2], mov_r13_rdx, test_byte_ptr_[r@@ bx@@ +rdx*2@@ ]_4, je_0x13, movzx_edx_byte_ptr_[rax+1], add_rax_1, mov_r13_rdx, test_byte_ptr_[r@@ bx@@ +rdx*2@@ ]_4, jne_0xfffffffffffffff1, test_r13b_r13b, je_0xfffffffffffffd@@ 18, jmp_0xfffffffffffffa@@ e5, lea_rbp_[rip+0x@@ 14@@ 7@@ 2e], jmp_0xfffffffffffffe@@ 7@@ d
endbr64, push_r12, mov_r12_rdi, push_rbp, sub_rsp_8, lea_rax_[rip+0x22@@ 33@@ b], mov_eax_dword_ptr_[rax], cmp_eax_-1, je_0xbe, and_eax@@ _0x3@@ c@@ 104, mov_ebp_esi, or_eax@@ _esi, test_esi@@ _0x3@@ c@@ 104, cmove_ebp_eax, test_ebp@@ _0x20@@ 100, jne_0x58, test_ebp@@ _0x4@@ 100, jne_0x30, test_bpl@@ _4, jne_0x6a, test_ebp@@ _0x8000, jne_0x9a, test_ebp@@ _0x10000, jne_0x66, xor_eax_eax, add_rsp_8, pop_rbp, pop_r12, ret, mov_esi_ebp, mov_rdi_r12, call_0xa@@ 6f@@ b, test_rax_rax, jne_0xffffffffffffffe1, test_ebp@@ _0x4000, je_0xffffffffffffffbd, jmp_0xffffffffffffffd5, mov_esi_ebp, call_0xd@@ 4c@@ e, test_rax_rax, jne_0xffffffffffffffc4, test_ebp@@ _0x20000, je_0xffffffffffffff@@ 98, jmp_0xffffffffffffffb8, mov_rdi_r12, call_0xa@@ 70d, test_rax_rax, jne_0xffffffffffffffa3, jmp_0xffffffffffffff8b, add_rsp_8, mov_esi_ebp, mov_rdi_r12, pop_rbp, pop_r12, jmp_0x@@ cc@@ 34, add_rsp_8, pop_rbp, pop_r12, jmp_0x@@ d@@ 6b@@ 1, add_rsp_8, mov_esi_ebp, mov_rdi_r12, pop_rbp, pop_r12, jmp_0xfffffffffffff97@@ c
cmp_esi@@ _0x50, ja_0x5@@ f, lea_r9_[rip+0x@@ 14@@ 7d@@ c], mov_r8d_esi, movsxd_rax_dword_ptr_[r@@ 9+r@@ 8*4], add_rax@@ _r9, jmp_rax, xor_eax_eax, ret
mov_rax_qword_ptr_[rdi+0x18], movzx_edx_byte_ptr_[rax], cmp_dl@@ _0x5@@ 2, je_0xe, cmp_dl@@ _0x4@@ f, je_9, mov_rax_rsi, ret, mov_r9d_dword_ptr_[r@@ di+0x@@ 48], mov_r8d@@ _0x20, lea_ecx_[r@@ 9@@ +3], cmp_dl@@ _0x5@@ 2, je_0x1f, add_rax_1, mov_dword_ptr_[rdi+0x@@ 4@@ 8]_ecx, mov_rdx_rsi, xor_ecx_ecx, mov_qword_ptr_[rdi+0x1@@ 8]_rax, mov_esi_r8d, jmp_0xffffffffffffff52, lea_ecx_[r@@ 9@@ +2], mov_r8d@@ _0x1f, jmp_0xffffffffffffffd@@ 9
test_rsi_rsi, je_0xbf, push_rbp, lea_rcx_[rip+0x14@@ 84@@ b], mov_rbp_rdi, push_rbx, mov_rbx_rsi, sub_rsp_8, mov_eax_dword_ptr_[rbx+8], cmp_eax_1, jg@@ _0x37, mov_edx_dword_ptr_[rbp+0x@@ 134], cmp_edx@@ _0x400, jg@@ _0x29, add_eax_1, cmp_dword_ptr_[rbx]@@ _0x50, mov_dword_ptr_[rbx+8]_eax, ja_0x1@@ e, mov_eax_dword_ptr_[rbx], movsxd_rax_dword_ptr_[r@@ cx+rax*4], add_rax_rcx, jmp_rax, add_rsp_8, pop_rbx, pop_rbp, ret, ret
test_rdx_rdx, je_0x9d, push_r13, lea_r13_[r@@ si+rdx], push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rax_qword_ptr_[rdi+0x1@@ 00], jmp_0x2e, mov_rdx_rax, add_rax_1, add_rbp_1, mov_qword_ptr_[rbx+0x10@@ 0]_rax, mov_byte_ptr_[rbx@@ +rdx]@@ _r12b, mov_byte_ptr_[rbx+0x1@@ 0@@ 8]@@ _r12b, cmp_rbp@@ _r13, je_0x40, movzx_r12d_byte_ptr_[r@@ bp], cmp_rax@@ _0xff, jne_0xffffffffffffffd3, mov_rdx_qword_ptr_[rbx+0x1@@ 18], mov_byte_ptr_[rbx+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbx, call_qword_ptr_[rbx+0x110], add_qword_ptr_[r@@ bx+0x1@@ 40]_1, mov_eax_1, xor_edx_edx, jmp_0xffffffffffffffad, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, ret
mov_rcx_qword_ptr_[rdi], movsx_eax_byte_ptr_[r@@ cx], cmp_al@@ _0x6e, je_0x78, lea_edx_[rax@@ -0x30], cmp_dl_9, ja_0x@@ 90, xor_esi_esi, sub_eax_0x30, add_rcx_1, xor_r8d_r8d, mov_r10d@@ _0x7fffffff, mov_r9d_0x@@ cccccccd, jmp_0x1b, sub_eax_0x30, mov_edx_r10d, add_rcx_1, sub_edx_eax, imul_rdx@@ _r9, shr_rdx@@ _0x23, cmp_edx@@ _r8d, jl@@ _0x29, lea_edx_[r@@ 8+r@@ 8*4], mov_qword_ptr_[rdi]_rcx, lea_r8d@@ _[rax@@ +rdx*2], movsx_eax_byte_ptr_[r@@ cx], lea_edx_[rax@@ -0x30], cmp_dl_9, jbe_0xffffffffffffff@@ d3, mov_eax_r8d, neg_eax, test_esi_esi, cmovne@@ _r8d_eax, mov_eax_r8d, ret, mov_r8d_0xffffffff, mov_eax_r8d, ret, lea_rdx_[r@@ cx+1], mov_qword_ptr_[rdi]_rdx, movsx_eax_byte_ptr_[r@@ cx+1], lea_ecx_[rax@@ -0x30], cmp_cl_9, ja@@ _0xf, mov_rcx_rdx, mov_esi_1, jmp_0xffffffffffffff7d, xor_r8d_r8d, jmp_0xffffffffffffffc@@ 7
mov_eax_dword_ptr_[rdi+0x@@ 28], cmp_eax_dword_ptr_[r@@ di+0x@@ 2c], jge_0x@@ 3a, movsxd@@ _r11@@ _eax, add_eax_1, add_rdi@@ _0x18, shl@@ _r11@@ _5, add_r11@@ _qword_ptr_[r@@ di+8], mov_qword_ptr_[r@@ 11@@ +@@ 4]_0, mov_dword_ptr_[rdi+0x1@@ 0]_eax, mov_dword_ptr_[r@@ 11@@ ]_0x4@@ 2, call_0xffffffffffffff@@ 24, cdqe, mov_qword_ptr_[r@@ 11+0x1@@ 0]_rax, mov_rax@@ _r11, ret, xor_r11d_r11d, mov_rax@@ _r11, ret
mov_rdx_qword_ptr_[r@@ di+0x18], mov_r11@@ _rdi, movzx_eax_byte_ptr_[rdx], cmp_al@@ _0x5f, je_0x2c, cmp_al@@ _0x6e, je_0x38, lea_rdi_[r@@ di+0x18], call_0xfffffffffffffe@@ ea, add_eax_1, js_0x2@@ a, mov_rdx_qword_ptr_[r@@ 11@@ +0x18], cmp_byte_ptr_[rdx]@@ _0x5f, jne_0x21, add_rdx_1, mov_qword_ptr_[r@@ 11+0x1@@ 8]_rdx, ret, add_rdx_1, xor_eax_eax, mov_qword_ptr_[r@@ 11+0x1@@ 8]_rdx, ret, mov_eax_0xffffffff, ret
mov_rax_qword_ptr_[rdi+0x18], cmp_byte_ptr_[rax]@@ _0x5@@ 4, jne_0x51, add_rax_1, push_rbx, mov_rbx_rdi, mov_qword_ptr_[rdi+0x1@@ 8]_rax, call_0xffffffffffffff@@ 9b, movsxd_rdx_eax, test_edx_edx, js_0x3@@ 1, mov_ecx_dword_ptr_[rbx+0x28], cmp_ecx@@ _dword_ptr_[rbx+0x@@ 2c], jge_0x@@ 29, movsxd_rax_ecx, add_ecx_1, shl_rax_5, add_rax_qword_ptr_[r@@ bx+0x20], mov_qword_ptr_[rax+@@ 4]_0, mov_dword_ptr_[rbx+0x2@@ 8]_ecx, mov_dword_ptr_[rax@@ ]_5, mov_qword_ptr_[rax+0x10]_rdx, pop_rbx, ret, xor_eax_eax, pop_rbx, ret, xor_eax_eax, ret
mov_r11@@ _rdi, test_esi_esi, jne_0x16, mov_rax_qword_ptr_[rdi+0x18], cmp_byte_ptr_[rax]_0, je_0x29, lea_rdx_[rax+1], mov_qword_ptr_[rdi+0x1@@ 8]_rdx, movsx_esi@@ _byte_ptr_[rax], cmp_esi@@ _0x68, je_0x4a, cmp_esi@@ _0x7@@ 6, jne_0x14, lea_rdi_[r@@ 11@@ +0x18], call_0xfffffffffffffe@@ 27, mov_rax_qword_ptr_[r@@ 11@@ +0x18], cmp_byte_ptr_[rax]@@ _0x5f, je_0xb, xor_eax_eax, ret, add_rax_1, mov_qword_ptr_[r@@ 11+0x1@@ 8]_rax, call_0xfffffffffffffe0@@ 8, mov_rax_qword_ptr_[r@@ 11@@ +0x18], cmp_byte_ptr_[rax]@@ _0x5f, jne_0xffffffffffffffe3, add_rax_1, mov_qword_ptr_[r@@ 11+0x1@@ 8]_rax, mov_eax_1, ret, lea_rdi_[r@@ 11@@ +0x18], call_0xfffffffffffffd@@ e4, jmp_0xffffffffffffffd@@ c
movzx_eax_byte_ptr_[rdi], lea_ecx_[rax@@ -0x@@ 4b], cmp_cl@@ _0x27, jbe_0x@@ f, cmp_al@@ _0x44, je_0x23, xor_eax_eax, ret, movabs_rax@@ _0x80000@@ 00@@ 80@@ 1, shr_rax_cl, and_eax_1, ret, movzx_edx_byte_ptr_[r@@ di+1], lea_eax_[rdx-0x@@ 77], cmp_al_1, setbe@@ _al, and_edx_0xffffff@@ df, cmp_dl@@ _0x4@@ f, sete_dl, or_eax_edx, movzx_eax_al, ret
mov_rax_qword_ptr_[rdi+0x18], mov_r11@@ _rdi, cmp_byte_ptr_[rax]@@ _0x5f, jne_0x23, lea_rdx_[rax+1], mov_qword_ptr_[rdi+0x1@@ 8]_rdx, cmp_byte_ptr_[rax+1]@@ _0x5f, je_0x28, lea_rdi_[r@@ di+0x18], call_0xfffffffffffffd@@ 62, mov_r8d_eax, xor_eax_eax, test_r8d_r8d, js_0xd, mov_eax_1, ret, ret, add_rax_2, lea_rdi_[r@@ di+0x18], mov_qword_ptr_[rdi]_rax, call_0xfffffffffffffd@@ 35, test_eax_eax, js_0x1@@ c, cmp_eax_9, jle_0xffffffffffffff@@ d6, mov_rdx_qword_ptr_[r@@ 11@@ +0x18], xor_eax_eax, cmp_byte_ptr_[rdx]@@ _0x5f, jne_0xffffffffffffffd6, add_rdx_1, mov_qword_ptr_[r@@ 11+0x1@@ 8]_rdx, jmp_0xffffffffffffffc1, xor_eax_eax, ret
test_rdi_rdi, jne_0x1d, jmp_0x20, test_esi_esi, jle_0x@@ 1e, mov_rdi_qword_ptr_[rdi+0x18], sub_esi_1, test_rdi_rdi, je_7, cmp_dword_ptr_[rdi]@@ _0x2f, je_0xffffffffffffffed, xor_eax_eax, ret, jne_0xfffffffffffffff5, mov_rax_qword_ptr_[rdi+0x10], ret
mov_rax_rdi, mov_rdi_qword_ptr_[r@@ di+0x1@@ 20], test_rdi_rdi, je_0x13, mov_rax_qword_ptr_[rdi+8], mov_rsi_qword_ptr_[rsi], mov_rdi_qword_ptr_[rax+0x18], test_esi_esi, js@@ _0xe, jmp_0xffffffffffffffa2, mov_dword_ptr_[rax+0x1@@ 30]_1, mov_rax_rdi, ret
test_rsi_rsi, je_0x6d, push_r12, mov_r12_rdi, push_rbp, lea_rbp_[rip+0x@@ 14@@ 49@@ e], push_rbx, mov_rbx_rsi, cmp_dword_ptr_[rbx]@@ _0x4@@ c, ja_0x3@@ 7, mov_eax_dword_ptr_[rbx], movsxd_rax_dword_ptr_[r@@ bp@@ +rax*4], add_rax_rbp, jmp_rax, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, ret, mov_rsi_qword_ptr_[rbx+0x10], mov_rdi_r12, call_0xffffffffffffff@@ a9, test_rax_rax, jne_0xffffffffffffffe9, mov_rbx_qword_ptr_[rbx+0x18], test_rbx_rbx, jne_0xffffffffffffffae, jmp_0xffffffffffffffdc, xor_eax_eax, ret
endbr64, push_r13, mov_r13_rdi, push_r12, mov_r12_rsi, push_rbp, push_rbx, mov_rbx_rdx, sub_rsp_8, mov_rax_qword_ptr_[rdx+8], mov_rbp_qword_ptr_[r@@ dx+0x10], mov_edx_dword_ptr_[r@@ dx+0x18], lea_rax_[r@@ si@@ +rax+1], cmp_rax_rbp, ja_0x3@@ 6, test_edx_edx, jne_0x25, mov_rdi_qword_ptr_[rbx+8], mov_rdx_r12, add_rdi_qword_ptr_[r@@ bx], mov_rsi_r13, call_0xfffffffffffe@@ 7a@@ 23, mov_rax_qword_ptr_[rbx], add_rax_r12, add_rax_qword_ptr_[r@@ bx+8], mov_byte_ptr_[rax]_0, add_qword_ptr_[r@@ bx+@@ 8]_r12, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, test_edx_edx, jne_0xfffffffffffffff1, test_rbp_rbp, je_0x31, add_r@@ bp_rbp, cmp_rax_rbp, ja@@ _0xfffffffffffffffa, mov_rdi_qword_ptr_[rbx], mov_rsi_rbp, call_0xfffffffffffe@@ 7b@@ 22, test_rax_rax, je_0x1f, mov_qword_ptr_[rbx]_rax, mov_edx_dword_ptr_[r@@ bx+0x18], mov_qword_ptr_[rbx+0x1@@ 0]_rbp, jmp_0xffffffffffffff9a, mov_ebp@@ _2, cmp_rax_2, ja_0xffffffffffffff@@ cf, jmp_0xffffffffffffffd5, mov_rdi_qword_ptr_[rbx], call_0xfffffffffffe7@@ 65@@ 8, mov_qword_ptr_[rbx]_0, mov_qword_ptr_[rbx+8]_0, mov_qword_ptr_[rbx+0x10]_0, mov_dword_ptr_[rbx+0x1@@ 8]_1, jmp_0xffffffffffffff8@@ 8
push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0xf8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xe8]_rax, xor_eax_eax, test_rdx_rdx, je_0x2@@ 96, mov_r15d_dword_ptr_[r@@ di+0x1@@ 30], test_r15d_r15d, jne_0x2@@ 26, mov_r13d_esi, mov_esi_dword_ptr_[r@@ dx], mov_r12_rdx, cmp_esi@@ _0x50, ja_0x3@@ 45, lea_rdi_[rip+0x14@@ 4@@ 3c], mov_edx_esi, movsxd_rax_dword_ptr_[r@@ di@@ +rdx*4], add_rax_rdi, jmp_rax, mov_rax_qword_ptr_[rsp+0x@@ e8], xor_rax_qword_ptr_fs:[0x28], jne_0x40@@ 2a, add_rsp_0xf8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_dword_ptr_[rbp+0x@@ 13@@ 0]_1, jmp_0xffffffffffffff96, mov_dword_ptr_[rbp+0x@@ 13@@ 0]_1, jmp_0xfffffffffffffe@@ c6, call_0xfffffffffffe@@ 34@@ f@@ 5
push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, test_rdx_rdx, je_0x6c, mov_eax_dword_ptr_[r@@ dx+4], mov_rbx_rdx, cmp_eax_1, jg@@ _0x61, mov_edx_dword_ptr_[r@@ di+0x1@@ 34], cmp_edx@@ _0x400, jg_0x5@@ 3, add_eax_1, add_edx_1, mov_qword_ptr_[rsp]_rbx, mov_dword_ptr_[rbx+4]_eax, mov_rax_qword_ptr_[rdi+0x1@@ 48], mov_dword_ptr_[rdi+0x1@@ 3@@ 4]_edx, mov_rdx_rbx, mov_qword_ptr_[rsp+8]_rax, mov_rax_rsp, mov_qword_ptr_[rdi+0x1@@ 48]_rax, call_0xffffffffffffba@@ ed, mov_rax_qword_ptr_[rsp+8], mov_qword_ptr_[rbp+0x@@ 14@@ 8]_rax, sub_dword_ptr_[r@@ bx+@@ 4]_1, sub_dword_ptr_[r@@ bp+0x@@ 13@@ 4]_1, jmp_0x13, mov_dword_ptr_[rbp+0x@@ 13@@ 0]_1, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_9, add_rsp_0x28, pop_rbx, pop_rbp, ret, call_0xfffffffffffe@@ 32@@ 3@@ 7
push_r15, push_r14, push_r13, mov_r13d_esi, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, mov_eax_dword_ptr_[rdx], sub_eax_3, cmp_eax_0x4@@ d, ja_0x1@@ 9, lea_rdx_[rip+0x@@ 100@@ 64], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_rdx_r12, add_rsp_8, mov_esi_r13d, mov_rdi_rbp, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, jmp_0xffffffffffffff0@@ 1
push_r14, push_r13, mov_r13d_esi, push_r12, mov_r12_rcx, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, test_rcx_rcx, je_0x1@@ 79, mov_rdx_rcx, lea_rcx_[rip+0x@@ f@@ 85@@ d], mov_esi_dword_ptr_[r@@ dx+0x10], test_esi_esi, jne_0x1@@ 64, mov_rax_qword_ptr_[rdx+8], mov_eax_dword_ptr_[rax], sub_eax@@ _0x19, cmp_eax_0x1@@ 2, ja_0x1@@ 42, movsxd_rax_dword_ptr_[r@@ cx+rax*4], add_rax_rcx, jmp_rax, lea_rax_[rdx+1], mov_qword_ptr_[rbx+0x10@@ 0]_rax, mov_byte_ptr_[rbx@@ +rdx]@@ _0x28, mov_byte_ptr_[rbx+0x1@@ 0@@ 8]@@ _0x28, mov_rdx_qword_ptr_[rbp], test_rdx_rdx, je_0x14, mov_esi_r13d, mov_rdi_rbx, call_0xfffffffffffff4e@@ 9, mov_rax_qword_ptr_[rbx+0x1@@ 00], cmp_rax@@ _0xff, je_0x1@@ 47, lea_rdx_[rax+1], mov_qword_ptr_[rbx+0x10@@ 0]_rdx, mov_esi_r13d, mov_rdx_r12, mov_rdi_rbx, mov_byte_ptr_[rbx@@ +rax]@@ _0x29, mov_ecx_1, mov_byte_ptr_[rbx+0x1@@ 0@@ 8]@@ _0x29, call_0x1@@ dd, mov_qword_ptr_[rbx+0x1@@ 28]@@ _r14, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rdx_qword_ptr_[rdx], test_rdx_rdx, jne_0xfffffffffffffea@@ 1, mov_r14_qword_ptr_[r@@ bx+0x1@@ 28], mov_rdx_r12, xor_ecx_ecx, mov_esi_r13d, mov_qword_ptr_[rbx+0x1@@ 28]_0, mov_rdi_rbx, call_0x1@@ 93, mov_rdx_qword_ptr_[rbx+0x1@@ 00], cmp_rdx@@ _0xff, jne_0xffffffffffffff@@ 42, mov_rdx_qword_ptr_[rbx+0x1@@ 18], mov_byte_ptr_[rbx+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbx, call_qword_ptr_[rbx+0x110], mov_byte_ptr_[rbx]@@ _0x28, mov_byte_ptr_[rbx+0x1@@ 0@@ 8]@@ _0x28, mov_rdx_qword_ptr_[rbp], add_qword_ptr_[r@@ bx+0x1@@ 40]_1, mov_qword_ptr_[rbx+0x1@@ 00@@ ]_1, test_rdx_rdx, jne_0xffffffffffffff@@ 1b, mov_eax_1, jmp_0xffffffffffffff2e, mov_rdx_qword_ptr_[rbx+0x1@@ 18], mov_byte_ptr_[rbx+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbx, call_qword_ptr_[rbx+0x110], add_qword_ptr_[r@@ bx+0x1@@ 40]_1, mov_edx_1, xor_eax_eax, jmp_0xfffffffffffffe@@ 9@@ 8
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, test_rdx_rdx, je_0x1@@ 6f, mov_rbp_rdi, mov_r14d_esi, mov_rbx_rdx, mov_r13d_ecx, movabs@@ _r15@@ _0x1@@ a@@ 00000000@@ 00@@ 1f, jmp_0x5@@ 3, mov_rax_qword_ptr_[rbx+0x18], mov_dword_ptr_[rbx+0x1@@ 0]_1, mov_r12_qword_ptr_[r@@ bp+0x@@ 120], mov_qword_ptr_[rbp+0x@@ 12@@ 0]_rax, cmp_edx@@ _0x29, je_0x1@@ 58, cmp_edx@@ _0x2a, je_0x1@@ 6a, cmp_edx_2, je_0x54, mov_rdx_r8, mov_esi_r14d, mov_rdi_rbp, call_0xfffffffffffff30@@ 8, mov_qword_ptr_[rbp+0x@@ 12@@ 0]_r12, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, je_0x106, mov_edx_dword_ptr_[rbp+0x@@ 130], test_edx_edx, jne_0x@@ f8, mov_eax_dword_ptr_[rbx+0x10], test_eax_eax, jne_0xffffffffffffffe1, mov_r8_qword_ptr_[r@@ bx+8], mov_edx_dword_ptr_[r@@ 8], test_r13d_r13d, jne_0xffffffffffffff@@ 90, lea_eax_[rdx-0x@@ 1c], cmp_eax@@ _0x34, ja_0xffffffffffffff@@ 88, bt@@ _r15@@ _rax, jae_0xffffffffffffff@@ 82, jmp_0xffffffffffffffc5, mov_r13_qword_ptr_[r@@ bp+0x@@ 128], mov_rdx_qword_ptr_[r@@ 8+0x10], mov_esi_r14d, mov_rdi_rbp, mov_qword_ptr_[rbp+0x@@ 12@@ 8]_0, call_0xfffffffffffff1f@@ 3, mov_qword_ptr_[rbp+0x@@ 12@@ 8]_r13, mov_rax_qword_ptr_[rbp+0x@@ 100], test_r14b@@ _4, je_0x102, lea_rdx_[rax+1], cmp_rax@@ _0xff, jne_0x2d, mov_rdx_qword_ptr_[rbp+0x@@ 118], mov_byte_ptr_[rbp+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbp, call_qword_ptr_[rbp+0x@@ 110], add_qword_ptr_[r@@ bp+0x@@ 14@@ 0]_1, mov_edx_1, xor_eax_eax, mov_qword_ptr_[rbp+0x@@ 10@@ 0]_rdx, mov_byte_ptr_[rbp@@ +rax]@@ _0x2e, mov_byte_ptr_[rbp+0x@@ 10@@ 8]@@ _0x2e, mov_rax_qword_ptr_[rbx+8], mov_r13_qword_ptr_[r@@ ax+0x18], mov_ecx_dword_ptr_[r@@ 13], cmp_ecx@@ _0x4@@ 7, je_0x125, movabs_rdx@@ _0x1@@ a@@ 00000000@@ 00@@ 1f, mov_esi_1, sub_ecx@@ _0x1c, cmp_ecx@@ _0x34, ja@@ _0xd, mov_rax_rsi, shl_rax_cl, test@@ _rax_rdx, jne_0x70, mov_rdx_r13, mov_esi_r14d, mov_rdi_rbp, call_0xfffffffffffff@@ 14@@ c, mov_qword_ptr_[rbp+0x@@ 12@@ 0]_r12, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ ae, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rcx_qword_ptr_[rbx], lea_rdx_[r@@ 8+0x18], mov_esi_r14d, mov_rdi_rbp, call_0xfffffffffffffb@@ 00, mov_qword_ptr_[rbp+0x@@ 12@@ 0]_r12, jmp_0xffffffffffffffc4, mov_rcx_qword_ptr_[rbx], lea_rdx_[r@@ 8+0x10], mov_esi_r14d, mov_rdi_rbp, call_0x2@@ 85, mov_qword_ptr_[rbp+0x@@ 12@@ 0]_r12, jmp_0xffffffffffffffa9, mov_r13_qword_ptr_[r@@ 13+0x10], mov_ecx_dword_ptr_[r@@ 13], jmp_0xffffffffffffff77, lea_r13_[rip+0x@@ f6@@ 88], mov_r15d@@ _0x3a, lea_rcx_[r@@ 13+2], jmp_0x35, mov_rdx_rax, add_rax_1, add_r13_1, mov_qword_ptr_[rbp+0x@@ 10@@ 0]_rax, mov_byte_ptr_[rbp@@ +rdx]@@ _r15b, mov_byte_ptr_[rbp+0x@@ 10@@ 8]@@ _r15b, cmp_r13@@ _rcx, je_0xffffffffffffff@@ 13, movzx_r15d_byte_ptr_[r@@ 13], cmp_rax@@ _0xff, jne_0xffffffffffffffce, mov_rdx_qword_ptr_[rbp+0x@@ 118], mov_byte_ptr_[rbp+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbp, call_qword_ptr_[rbp+0x@@ 110], add_qword_ptr_[r@@ bp+0x@@ 14@@ 0]_1, xor_edx_edx, mov_eax_1, lea_rcx_[rip+0x@@ f6@@ 11], jmp_0xffffffffffffffa1, lea_rbx_[rip+0x@@ f@@ 5f@@ 8], mov_rax_qword_ptr_[rbp+0x@@ 100], mov_r15d@@ _0x7@@ b, lea_rcx_[r@@ bx+0xc], jmp_0x29, mov_rdx_rax, add_rax_1, mov_qword_ptr_[rbp+0x@@ 10@@ 0]_rax, mov_byte_ptr_[rbp@@ +rdx]@@ _r15b, mov_byte_ptr_[rbp+0x@@ 10@@ 8]@@ _r15b, cmp_rbx@@ _rcx, je_0x46, movzx_r15d@@ _byte_ptr_[rbx], add_rbx_1, cmp_rax@@ _0xff, jne_0xffffffffffffffd3, mov_rdx_qword_ptr_[rbp+0x@@ 118], mov_byte_ptr_[rbp+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbp, call_qword_ptr_[rbp+0x@@ 110], add_qword_ptr_[r@@ bp+0x@@ 14@@ 0]_1, xor_edx_edx, mov_eax_1, lea_rcx_[rip+0x@@ f5@@ 90], jmp_0xffffffffffffffa6, mov_eax_dword_ptr_[r@@ 13+0x18], lea_rbx_[rsp+0x10], mov_edx_0x1@@ 9, lea_rcx_[rip+0x@@ 9f@@ 37], mov_esi_1, mov_rdi_rbx, lea_r8d@@ _[rax+1], xor_eax_eax, call_0xfffffffffffe@@ 27@@ 88, mov_rdx_rbx, mov_ecx_dword_ptr_[rdx], add_rdx_4, lea_eax_[rcx-0x1010101], not_ecx, and_eax_ecx, and_eax_0x80808080, je_0xffffffffffffffeb, mov_ecx_eax, shr_ecx_0x10, test_eax_0x8080, cmove_eax_ecx, lea_rcx_[rdx+2], cmove_rdx_rcx, mov_edi_eax, add@@ _dil@@ _al, mov_rax_qword_ptr_[rbp+0x@@ 100], sbb_rdx_3, sub_rdx_rbx, je_0x6a, lea_r15_[r@@ bx+rdx], jmp_0x23, mov_rdx_rax, add_rax_1, add_rbx_1, mov_qword_ptr_[rbp+0x@@ 10@@ 0]_rax, mov_byte_ptr_[rbp@@ +rdx@@ ]_cl, mov_byte_ptr_[rbp+0x@@ 10@@ 8@@ ]_cl, cmp_r15@@ _rbx, je_0x43, movzx_ecx_byte_ptr_[r@@ bx], cmp_rax@@ _0xff, jne_0xffffffffffffffd6, mov_byte_ptr_[rsp+0x@@ f@@ ]_cl, mov_rdx_qword_ptr_[rbp+0x@@ 118], mov_esi_0xff, mov_rdi_rbp, mov_byte_ptr_[rbp+0x@@ ff@@ ]_0, call_qword_ptr_[rbp+0x@@ 110], add_qword_ptr_[r@@ bp+0x@@ 14@@ 0]_1, movzx_ecx_byte_ptr_[rsp+0x@@ f], xor_edx_edx, mov_eax_1, jmp_0xffffffffffffffa7, lea_rbx_[rip+0x@@ f@@ 4b@@ 4], mov_r15d@@ _0x7d, lea_rcx_[r@@ bx+3], jmp_0x29, mov_rdx_rax, add_rax_1, add_rbx_1, mov_qword_ptr_[rbp+0x@@ 10@@ 0]_rax, mov_byte_ptr_[rbp@@ +rdx]@@ _r15b, mov_byte_ptr_[rbp+0x@@ 10@@ 8]@@ _r15b, cmp_rcx@@ _rbx, je_0x42, movzx_r15d@@ _byte_ptr_[rbx], cmp_rax@@ _0xff, jne_0xffffffffffffffd3, mov_rdx_qword_ptr_[rbp+0x@@ 118], mov_byte_ptr_[rbp+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbp, call_qword_ptr_[rbp+0x@@ 110], add_qword_ptr_[r@@ bp+0x@@ 14@@ 0]_1, xor_edx_edx, mov_eax_1, lea_rcx_[rip+0x@@ f@@ 44@@ a], jmp_0xffffffffffffffa6, mov_r13_qword_ptr_[r@@ 13+0x10], mov_ecx_dword_ptr_[r@@ 13], jmp_0xfffffffffffffd@@ 12, call_0xfffffffffffe2@@ 16@@ 4
push_r15, mov_rax_rcx, push_r14, push_r13, mov_r13_rdx, push_r12, mov_r12_rcx, push_rbp, mov_ebp_esi, push_rbx, mov_rbx_rdi, sub_rsp_8, test_rcx_rcx, je_0x2b, mov_edx_dword_ptr_[rax+0x10], test_edx_edx, je_0x1@@ 33, mov_rax_qword_ptr_[rax], test_rax_rax, jne_0xffffffffffffffef, xor_ecx_ecx, mov_rdx_r12, mov_esi_ebp, mov_rdi_rbx, call_0xfffffffffffffb@@ 5b, mov_rax_qword_ptr_[rbx+0x1@@ 00], cmp_rax@@ _0xff, je_0x1@@ 31, lea_rdx_[rax+1], mov_qword_ptr_[rbx+0x10@@ 0]_rdx, mov_byte_ptr_[rbx@@ +rax@@ ]_0x20, mov_byte_ptr_[rbx+0x1@@ 0@@ 8]_0x20, cmp_rdx@@ _0xff, je_0x66, lea_rax_[rdx+1], mov_qword_ptr_[rbx+0x10@@ 0]_rax, mov_byte_ptr_[rbx@@ +rdx]@@ _0x5b, mov_byte_ptr_[rbx+0x1@@ 0@@ 8]@@ _0x5b, mov_rdx_qword_ptr_[r13], test_rdx_rdx, je_0x13, mov_esi_ebp, mov_rdi_rbx, call_0xffffffffffffe@@ dd0, mov_rax_qword_ptr_[rbx+0x1@@ 00], cmp_rax@@ _0xff, je_0x7e, lea_rdx_[rax+1], mov_qword_ptr_[rbx+0x10@@ 0]_rdx, mov_byte_ptr_[rbx@@ +rax]@@ _0x5d, mov_byte_ptr_[rbx+0x1@@ 0@@ 8]@@ _0x5d, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdx_qword_ptr_[rbx+0x1@@ 18], mov_byte_ptr_[rbx+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbx, call_qword_ptr_[rbx+0x110], mov_byte_ptr_[rbx]@@ _0x5b, mov_byte_ptr_[rbx+0x1@@ 0@@ 8]@@ _0x5b, mov_rdx_qword_ptr_[r13], add_qword_ptr_[r@@ bx+0x1@@ 40]_1, mov_qword_ptr_[rbx+0x1@@ 00@@ ]_1, test_rdx_rdx, jne_0xffffffffffffff@@ 7b, mov_eax_1, jmp_0xffffffffffffff89, mov_rdx_qword_ptr_[rbx+0x1@@ 18], mov_byte_ptr_[rbx+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbx, call_qword_ptr_[rbx+0x110], add_qword_ptr_[r@@ bx+0x1@@ 40]_1, mov_edx_1, xor_eax_eax, jmp_0xffffffffffffff5d, mov_rax_qword_ptr_[rax+8], cmp_dword_ptr_[rax]@@ _0x2a, jne_0x79, mov_rdx_r12, xor_ecx_ecx, mov_esi_ebp, mov_rdi_rbx, call_0xfffffffffffffa@@ 2d, mov_rdx_qword_ptr_[rbx+0x1@@ 00], jmp_0xfffffffffffffef4, mov_rdx_qword_ptr_[rbx+0x1@@ 18], mov_byte_ptr_[rbx+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbx, call_qword_ptr_[rbx+0x110], mov_eax_0x5@@ b@@ 20, mov_byte_ptr_[rbx+0x1@@ 0@@ 8]@@ _0x5b, mov_word_ptr_[r@@ bx@@ ]_ax, mov_rdx_qword_ptr_[r13], mov_eax_2, add_qword_ptr_[r@@ bx+0x1@@ 40]_1, mov_qword_ptr_[rbx+0x1@@ 00@@ ]_2, test_rdx_rdx, jne_0xfffffffffffffe@@ c9, jmp_0xfffffffffffffedc, lea_r14_[rip+0x@@ f@@ 3c0], mov_rax_qword_ptr_[rbx+0x1@@ 00], mov_r15d@@ _0x20, lea_rcx_[r@@ 14+2], jmp_0x2e, mov_rdx_rax, add_rax_1, add_r14_1, mov_qword_ptr_[rbx+0x10@@ 0]_rax, mov_byte_ptr_[rbx@@ +rdx]@@ _r15b, mov_byte_ptr_[rbx+0x1@@ 0@@ 8]@@ _r15b, cmp_rcx@@ _r14, je_0x48, movzx_r15d_byte_ptr_[r@@ 14], cmp_rax@@ _0xff, jne_0xffffffffffffffd4, mov_rdx_qword_ptr_[rbx+0x1@@ 18], mov_byte_ptr_[rbx+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbx, call_qword_ptr_[rbx+0x110], add_qword_ptr_[r@@ bx+0x1@@ 40]_1, xor_edx_edx, mov_eax_1, lea_rcx_[rip+0x@@ f@@ 34@@ 9], jmp_0xffffffffffffffa7, mov_rdx_r12, xor_ecx_ecx, mov_esi_ebp, mov_rdi_rbx, call_0xfffffffffffff92@@ e, mov_rdx_qword_ptr_[rbx+0x1@@ 00], cmp_rdx@@ _0xff, je_0x23, lea_rax_[rdx+1], mov_qword_ptr_[rbx+0x10@@ 0]_rax, mov_byte_ptr_[rbx@@ +rdx]@@ _0x29, mov_byte_ptr_[rbx+0x1@@ 0@@ 8]@@ _0x29, jmp_0xfffffffffffffd@@ b4, mov_byte_ptr_[rbx+0x@@ ff@@ ]_0, mov_rdx_qword_ptr_[rbx+0x1@@ 18], mov_esi_0xff, mov_rdi_rbx, call_qword_ptr_[rbx+0x110], mov_byte_ptr_[rbx]@@ _0x29, mov_eax_1, add_qword_ptr_[r@@ bx+0x1@@ 40]_1, jmp_0xfffffffffffffd@@ 8@@ 9
push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, cmp_dword_ptr_[rdx@@ ]@@ _0x32, je_0x18, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, jmp_0xffffffffffffeb@@ 74, mov_rax_qword_ptr_[rdx+0x10], movsxd_r13@@ _dword_ptr_[r@@ ax+0x10], mov_rbx_qword_ptr_[rax+8], test_r13_r13, je_0x71, mov_rax_qword_ptr_[rdi+0x1@@ 00], add_r13@@ _rbx, jmp_0x28, mov_rdx_rax, add_rax_1, add_rbx_1, mov_qword_ptr_[rbp+0x@@ 10@@ 0]_rax, mov_byte_ptr_[rbp@@ +rdx]@@ _r12b, mov_byte_ptr_[rbp+0x@@ 10@@ 8]@@ _r12b, cmp_rbx_r13, je_0x3f, movzx_r12d@@ _byte_ptr_[rbx], cmp_rax@@ _0xff, jne_0xffffffffffffffd3, mov_rdx_qword_ptr_[rbp+0x@@ 118], mov_byte_ptr_[rbp+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbp, call_qword_ptr_[rbp+0x@@ 110], add_qword_ptr_[r@@ bp+0x@@ 14@@ 0]_1, mov_eax_1, xor_edx_edx, jmp_0xffffffffffffffad, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret
push_r13, mov_r13d_esi, push_r12, mov_r12_rdx, push_rbp, mov_eax_dword_ptr_[rdx], mov_rbp_rdi, cmp_eax@@ _0x31, jbe_0x@@ 6d, mov_rax_qword_ptr_[rbp+0x@@ 100], lea_rdx_[rax+1], cmp_rax@@ _0xff, je_0xaa, mov_qword_ptr_[rbp+0x@@ 10@@ 0]_rdx, mov_esi_r13d, mov_rdx_r12, mov_rdi_rbp, mov_byte_ptr_[rbp@@ +rax]@@ _0x28, mov_byte_ptr_[rbp+0x@@ 10@@ 8]@@ _0x28, call_0xffffffffffffea@@ 88, mov_rax_qword_ptr_[rbp+0x@@ 100], lea_rdx_[rax+1], cmp_rax@@ _0xff, je_0x42, mov_qword_ptr_[rbp+0x@@ 10@@ 0]_rdx, mov_byte_ptr_[rbp@@ +rax]@@ _0x29, mov_byte_ptr_[rbp+0x@@ 10@@ 8]@@ _0x29, pop_rbp, pop_r12, pop_r13, ret, movabs_rdx@@ _0x2@@ 00000000@@ 00@@ 43, bt@@ _rdx_rax, jae_0xffffffffffffff@@ 87, pop_rbp, mov_rdx_r12, pop_r12, pop_r13, jmp_0xffffffffffffea@@ 38, mov_rdx_qword_ptr_[rbp+0x@@ 118], mov_byte_ptr_[rbp+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbp, call_qword_ptr_[rbp+0x@@ 110], add_qword_ptr_[r@@ bp+0x@@ 14@@ 0]_1, mov_edx_1, xor_eax_eax, jmp_0xffffffffffffff95, mov_rdx_qword_ptr_[rbp+0x@@ 118], mov_byte_ptr_[rbp+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbp, call_qword_ptr_[rbp+0x@@ 110], add_qword_ptr_[r@@ bp+0x@@ 14@@ 0]_1, mov_edx_1, xor_eax_eax, jmp_0xffffffffffffff3@@ 1
mov_rax_qword_ptr_[rdx+0x10], mov_rdx_qword_ptr_[rax], cmp_byte_ptr_[rdx]@@ _0x66, jne_0x13@@ 6, push_r15, push_r14, xor_r14d_r14d, push_r13, push_r12, push_rbp, mov_ebp_esi, push_rbx, mov_rbx_rdi, sub_rsp_0x18, mov_rax_qword_ptr_[rcx], mov_r12_qword_ptr_[r@@ ax+0x18], mov_r13_qword_ptr_[r@@ ax+0x10], cmp_dword_ptr_[r@@ 12]@@ _0x3c, je_0x2@@ 6a, mov_eax_dword_ptr_[rbx+0x1@@ 3c], mov_dword_ptr_[rbx+0x1@@ 3@@ c]_0xffffffff, mov_dword_ptr_[rsp+8]_eax, movzx_eax_byte_ptr_[rdx+1], cmp_al@@ _0x6c, je_0x2@@ 5a, jg_0x1@@ 74, cmp_al_0x4@@ c, je_0xa, cmp_al_0x5@@ 2, jne_0x14@@ a, mov_rax_qword_ptr_[rbx+0x1@@ 00], lea_rdx_[rax+1], cmp_rax@@ _0xff, je_0x3@@ 01, mov_qword_ptr_[rbx+0x10@@ 0]_rdx, mov_esi_ebp, mov_rdx_r12, mov_rdi_rbx, mov_byte_ptr_[rbx@@ +rax]@@ _0x28, lea_r15_[rip+0x@@ 9@@ 80@@ 8], mov_byte_ptr_[rbx+0x1@@ 0@@ 8]@@ _0x28, call_0xfffffffffffffe@@ 5a, mov_rdx_r13, mov_esi_ebp, mov_rdi_rbx, call_0xfffffffffffffd@@ 8d, mov_rax_qword_ptr_[rbx+0x1@@ 00], lea_r8_[r@@ 15+@@ 3], mov_ecx@@ _0x2e, jmp_0x2c, mov_rdx_rax, add_rax_1, add_r15_1, mov_qword_ptr_[rbx+0x10@@ 0]_rax, mov_byte_ptr_[rbx@@ +rdx@@ ]_cl, mov_byte_ptr_[rbx+0x1@@ 0@@ 8@@ ]_cl, cmp_r8@@ _r15, je_0x5a, movzx_ecx_byte_ptr_[r@@ 15], cmp_rax@@ _0xff, jne_0xffffffffffffffd6, mov_byte_ptr_[rsp+0x@@ f@@ ]_cl, mov_rdx_qword_ptr_[rbx+0x1@@ 18], mov_esi_0xff, mov_rdi_rbx, mov_byte_ptr_[rbx+0x@@ ff@@ ]_0, call_qword_ptr_[rbx+0x110], add_qword_ptr_[r@@ bx+0x1@@ 40]_1, movzx_ecx_byte_ptr_[rsp+0x@@ f], xor_edx_edx, mov_eax_1, lea_r8_[rip+0x@@ 97@@ 73], jmp_0xffffffffffffffa0, xor_eax_eax, ret, mov_rdx_r13, mov_esi_ebp, mov_rdi_rbx, call_0xfffffffffffffc@@ f0, mov_rdx_r14, mov_esi_ebp, mov_rdi_rbx, call_0xfffffffffffffd@@ a3, mov_rax_qword_ptr_[rbx+0x1@@ 00], lea_rdx_[rax+1], cmp_rax@@ _0xff, jne_0x2d, mov_rdx_qword_ptr_[rbx+0x1@@ 18], mov_byte_ptr_[rbx+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbx, call_qword_ptr_[rbx+0x110], add_qword_ptr_[r@@ bx+0x1@@ 40]_1, mov_edx_1, xor_eax_eax, mov_qword_ptr_[rbx+0x10@@ 0]_rdx, mov_byte_ptr_[rbx@@ +rax]@@ _0x29, mov_byte_ptr_[rbx+0x1@@ 0@@ 8]@@ _0x29, mov_eax_dword_ptr_[rsp+8], mov_dword_ptr_[rbx+0x1@@ 3c]_eax, add_rsp_0x18, mov_eax_1, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, cmp_al_0x7@@ 2, jne_0xffffffffffffffe0, mov_rax_qword_ptr_[rbx+0x1@@ 00], lea_rdx_[rax+1], cmp_rax@@ _0xff, je_0x1@@ 6b, mov_qword_ptr_[rbx+0x10@@ 0]_rdx, mov_esi_ebp, mov_rdx_r12, mov_rdi_rbx, mov_byte_ptr_[rbx@@ +rax]@@ _0x28, mov_byte_ptr_[rbx+0x1@@ 0@@ 8]@@ _0x28, call_0xfffffffffffffc@@ fb, mov_rdx_r13, mov_esi_ebp, mov_rdi_rbx, lea_rbp_[rip+0x@@ e@@ fc@@ 2], mov_r13d@@ _0x2e, call_0xfffffffffffffc@@ 21, lea_r14_[r@@ bp+4], mov_rax_qword_ptr_[rbx+0x1@@ 00], jmp_0x34, mov_rdx_rax, add_rax_1, add_rbp_1, mov_qword_ptr_[rbx+0x10@@ 0]_rax, mov_byte_ptr_[rbx@@ +rdx]@@ _r13b, mov_byte_ptr_[rbx+0x1@@ 0@@ 8]@@ _r13b, cmp_rbp@@ _r14, je_0xffffffffffffff@@ 5a, movzx_r13d_byte_ptr_[r@@ bp], cmp_rax@@ _0xff, jne_0xffffffffffffffcf, mov_rdx_qword_ptr_[rbx+0x1@@ 18], mov_byte_ptr_[rbx+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbx, call_qword_ptr_[rbx+0x110], add_qword_ptr_[r@@ bx+0x1@@ 40]_1, mov_eax_1, xor_edx_edx, jmp_0xffffffffffffffa9, mov_r14_qword_ptr_[r@@ 12+0x18], mov_r12_qword_ptr_[r@@ 12+0x10], jmp_0xfffffffffffffd@@ 92, lea_r14_[rip+0x@@ ef@@ 1f], mov_rax_qword_ptr_[rbx+0x1@@ 00], mov_r15d@@ _0x28, lea_rcx_[r@@ 14+4], jmp_0x2e, mov_rdx_rax, add_rax_1, add_r14_1, mov_qword_ptr_[rbx+0x10@@ 0]_rax, mov_byte_ptr_[rbx@@ +rdx]@@ _r15b, mov_byte_ptr_[rbx+0x1@@ 0@@ 8]@@ _r15b, cmp_rcx@@ _r14, je_0x48, movzx_r15d_byte_ptr_[r@@ 14], cmp_rax@@ _0xff, jne_0xffffffffffffffd4, mov_rdx_qword_ptr_[rbx+0x1@@ 18], mov_byte_ptr_[rbx+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbx, call_qword_ptr_[rbx+0x110], add_qword_ptr_[r@@ bx+0x1@@ 40]_1, xor_edx_edx, mov_eax_1, lea_rcx_[rip+0x@@ e@@ ea@@ a], jmp_0xffffffffffffffa7, mov_rdx_r13, mov_esi_ebp, mov_rdi_rbx, call_0xfffffffffffffb@@ 00, mov_rdx_r12, jmp_0xfffffffffffffe@@ 10, mov_rdx_qword_ptr_[rbx+0x1@@ 18], mov_byte_ptr_[rbx+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbx, call_qword_ptr_[rbx+0x110], add_qword_ptr_[r@@ bx+0x1@@ 40]_1, mov_edx_1, xor_eax_eax, jmp_0xfffffffffffffe@@ 70, mov_rdx_qword_ptr_[rbx+0x1@@ 18], mov_byte_ptr_[rbx+0x@@ ff@@ ]_0, mov_esi_0xff, mov_rdi_rbx, call_qword_ptr_[rbx+0x110], add_qword_ptr_[r@@ bx+0x1@@ 40]_1, mov_edx_1, xor_eax_eax, jmp_0xfffffffffffffc@@ d@@ a
endbr64, test_rsi_rsi, sete_cl, test_edx_edx, setl@@ e_al, or@@ _cl_al, jne_0x27, test_rdi_rdi, je_0x22, mov_qword_ptr_[rdi]_0, mov_eax_1, mov_dword_ptr_[rdi+@@ 8]_0, mov_qword_ptr_[rdi+0x1@@ 0]_rsi, mov_dword_ptr_[rdi+0x1@@ 8]_edx, ret, xor_eax_eax, ret
push_r12, mov_eax_dword_ptr_[rdi+0x@@ 28], cmp_eax_dword_ptr_[r@@ di+0x@@ 2c], jge_0x@@ 38, movsxd_r12@@ _eax, add_eax_1, shl_r12@@ _5, add_r12@@ _qword_ptr_[r@@ di+0x20], mov_qword_ptr_[r12+@@ 4]_0, mov_dword_ptr_[rdi+0x@@ 28]_eax, mov_rdi_r12, call_0xffffffffffffff@@ 99, test_eax_eax, mov_eax_0, cmove@@ _r12_rax, mov_rax_r12, pop_r12, ret, xor_r12d_r12d, jmp_0xffffffffffffffe@@ 1
push_rbx, mov_rbx_rdi, add_rdi@@ _0x18, call_0xffffffffffff9c@@ 18, mov_edx_eax, xor_eax_eax, test_edx_edx, jle_0x@@ 69, mov_rsi_qword_ptr_[rbx+0x18], mov_rdi_qword_ptr_[rbx+8], movsxd_rcx_edx, sub_rdi@@ _rsi, cmp_rdi_rcx, jl@@ _0x5@@ 2, add_rcx_rsi, mov_qword_ptr_[rbx+0x1@@ 8]_rcx, test_byte_ptr_[rbx+0x1@@ 0@@ ]_4, je_7, cmp_byte_ptr_[rcx@@ ]@@ _0x24, je_0x48, cmp_edx@@ _9, jle_0x@@ 33, movabs_rax@@ _0x5@@ f@@ 4c@@ 4@@ 14@@ 24@@ f@@ 4c@@ 47@@ 5f, cmp_qword_ptr_[rsi@@ ]_rax, jne_0x24, movzx_eax_byte_ptr_[r@@ si+8], sub_eax@@ _0x24, cmp_al@@ _0x3b, ja_0x1@@ 9, movabs_rcx@@ _0x800000000@@ 000@@ 401, bt@@ _rcx_rax, jae_@@ 9, cmp_byte_ptr_[rsi+@@ 9@@ ]_0x4@@ e, je_0x23, mov_rdi_rbx, call_0xffffffffffffff@@ 3d, mov_qword_ptr_[rbx+0x40]_rax, pop_rbx, ret, add_rcx_1, mov_qword_ptr_[rbx+0x1@@ 8]_rcx, cmp_edx@@ _9, jg_0xffffffffffffff@@ b4, jmp_0xffffffffffffffe3, mov_eax_dword_ptr_[rbx+0x@@ 48], lea_rsi_[rip+0x@@ ed@@ 06], mov_rdi_rbx, add_eax@@ _0x16, sub_eax_edx, mov_edx_0x1@@ 5, mov_dword_ptr_[rbx+0x@@ 48]_eax, call_0xffffffffffffff@@ 06, jmp_0xffffffffffffffc@@ 9
push_r12, mov_r12_rsi, push_rbp, push_rbx, mov_rax_qword_ptr_[rdi+0x18], mov_rbx_rdi, mov_rbp_qword_ptr_[r@@ di+0x40], cmp_byte_ptr_[rax]@@ _0x42, jne_0x3a, add_rax_1, mov_rdi_rbx, mov_qword_ptr_[rbx+0x18]_rax, call_0xffffffffffffff@@ 15, mov_rdx_r12, mov_esi_0x4@@ c, mov_rdi_rbx, mov_rcx_rax, call_0xffffffffffff9@@ 8d@@ 2, mov_r12_rax, mov_rax_qword_ptr_[rbx+0x18], cmp_byte_ptr_[rax]@@ _0x42, je_0xffffffffffffffd3, mov_qword_ptr_[rbx+0x4@@ 0]_rbp, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret
mov_rdx_qword_ptr_[r@@ di+0x18], cmp_byte_ptr_[rdx]@@ _0x5@@ 3, jne_0x6d, lea_rax_[rdx+1], mov_qword_ptr_[rdi+0x1@@ 8]_rax, movzx_eax_byte_ptr_[rdx+1], test_al_al, jne_0x69, mov_edx_dword_ptr_[r@@ di+0x10], xor_r8d_r8d, and_edx@@ _8, setne@@ _r8b, jne_0x1d, and_esi_1, je_0x18, mov_rdx_qword_ptr_[r@@ di+0x18], movzx_edx_byte_ptr_[rdx], sub_edx@@ _0x4@@ 3, cmp_dl_1, mov_edx_1, cmovbe@@ _r8d@@ _edx, lea_rdx_[rip+0x18@@ bf@@ 6], mov_ecx@@ _0x74, lea_rsi_[r@@ dx+0x1@@ 88], jmp_0xd, movzx_ecx_byte_ptr_[rdx], cmp_al@@ _cl, je_0xb3, add_rdx@@ _0x38, cmp_rdx_rsi, jne_0xffffffffffffffee, xor_eax_eax, ret, lea_rax_[rdx@@ +2], mov_qword_ptr_[rdi+0x1@@ 8]_rax, movsx_eax_byte_ptr_[r@@ dx+1], lea_edx_[rax@@ -0x30], cmp_dl_9, ja_0x5@@ e, cmp_al@@ _0x5f, je_0x62, lea_ecx_[rax@@ -0x30], xor_edx_edx, cmp_cl_9, ja_0x3@@ 7, lea_ecx_[rdx@@ +rdx*8], lea_ecx_[rax@@ +rcx@@ *4@@ -0x30], cmp_edx_ecx, ja_0xffffffffffffff@@ c3, mov_rdx_qword_ptr_[r@@ di+0x18], movsx_eax_byte_ptr_[r@@ dx], test_al_al, je_0x11, lea_rax_[rdx+1], mov_qword_ptr_[rdi+0x1@@ 8]_rax, movsx_eax_byte_ptr_[r@@ dx], cmp_al@@ _0x5f, je_0x45, mov_edx_ecx, lea_ecx_[rax@@ -0x30], cmp_cl_9, jbe_0xffffffffffffff@@ d3, lea_ecx_[rax@@ -0x@@ 41], cmp_cl@@ _0x19, ja_0xffffffffffffff@@ 97, lea_ecx_[rdx@@ +rdx*8], lea_ecx_[rax@@ +rcx@@ *4@@ -0x@@ 37], jmp_0xffffffffffffffc9, cmp_al@@ _0x5f, jne_0x10@@ 8, xor_ecx_ecx, cmp_dword_ptr_[rdi+0x@@ 3@@ 8]_ecx, jbe_0xffffffffffffff@@ 77, mov_rax_qword_ptr_[rdi+0x30], mov_rax_qword_ptr_[r@@ ax@@ +rcx*8], ret, add_ecx_1, jmp_0xffffffffffffff@@ e7, mov_r9_qword_ptr_[r@@ dx+0x28], mov_ecx_dword_ptr_[r@@ di+0x28], mov_esi_dword_ptr_[r@@ di+0x@@ 2c], test_r9_r9, je_0x39, mov_r10d_dword_ptr_[r@@ dx+0x30], cmp_ecx_esi, jge_0x@@ c6, movsxd_rax_ecx, add_ecx_1, shl_rax_5, add_rax_qword_ptr_[r@@ di+0x20], mov_qword_ptr_[rax+@@ 4]_0, mov_dword_ptr_[rdi+0x@@ 2@@ 8]_ecx, mov_dword_ptr_[rax]@@ _0x18, mov_qword_ptr_[rax+0x1@@ 0]_r9, mov_dword_ptr_[rax+0x1@@ 8]_r10d, mov_qword_ptr_[rdi+0x@@ 40]_rax, test_r8d_r8d, je_0x40, mov_r8_qword_ptr_[r@@ dx+0x18], mov_edx_dword_ptr_[r@@ dx+0x20], add_dword_ptr_[r@@ di+0x@@ 4@@ 8]_edx, cmp_ecx_esi, jge_0x@@ 80, movsxd_rax_ecx, add_ecx_1, shl_rax_5, add_rax_qword_ptr_[r@@ di+0x20], mov_qword_ptr_[rax+@@ 4]_0, mov_dword_ptr_[rdi+0x@@ 2@@ 8]_ecx, mov_dword_ptr_[rax]@@ _0x18, mov_qword_ptr_[rax+0x1@@ 0]_r8, mov_dword_ptr_[rax+0x18]_edx, mov_rdx_qword_ptr_[r@@ di+0x18], cmp_byte_ptr_[rdx@@ ]_0x4@@ 2, je_0xc, ret, mov_r8_qword_ptr_[r@@ dx+8], mov_edx_dword_ptr_[r@@ dx+0x10], jmp_0xffffffffffffffc2, sub_rsp_0x18, mov_rsi_rax, mov_qword_ptr_[rsp+8]_rdi, call_0xfffffffffffffd@@ ea, test_rax_rax, je_0x2a, mov_rdi_qword_ptr_[rsp+8], mov_edx_dword_ptr_[r@@ di+0x38], cmp_edx_dword_ptr_[r@@ di+0x@@ 3c], jge_0x@@ 1d, mov_rcx_qword_ptr_[r@@ di+0x30], movsxd_rsi_edx, add_edx_1, mov_qword_ptr_[rcx@@ +r@@ si*@@ 8]_rax, mov_dword_ptr_[rdi+0x@@ 3@@ 8]_edx, add_rsp_0x18, ret, xor_eax_eax, add_rsp_0x18, ret, xor_eax_eax, jmp_0xffffffffffffffa6, xor_eax_eax, jmp_0xffffffffffffff65, lea_edx_[rax-0x@@ 41], cmp_dl@@ _0x19, jbe_0xfffffffffffffe@@ 98, jmp_0xfffffffffffffe@@ 1@@ 3
endbr64, mov_eax_esi, shr_eax_0x1f, test_rdx_rdx, sete_cl, or@@ _cl_al, jne_0x27, test_rdi_rdi, je_0x22, mov_qword_ptr_[rdi@@ ]@@ _0x33, mov_eax_1, mov_dword_ptr_[rdi+@@ 8]_0, mov_dword_ptr_[rdi+0x1@@ 0]_esi, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, ret, xor_eax_eax, ret
endbr64, test_rdi_rdi, je_0x31, test_rdx_rdx, je_0x2c, lea_ecx_[r@@ si-1], xor_eax_eax, cmp_ecx@@ _4, ja_0x2@@ 4, mov_qword_ptr_[rdi@@ ]_7, mov_eax_1, mov_dword_ptr_[rdi+@@ 8]_0, mov_dword_ptr_[rdi+0x1@@ 0]_esi, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, ret, xor_eax_eax, ret
endbr64, test_rdi_rdi, je_0x31, test_rdx_rdx, je_0x2c, lea_ecx_[r@@ si-1], xor_eax_eax, cmp_ecx@@ _4, ja_0x2@@ 4, mov_qword_ptr_[rdi@@ ]_8, mov_eax_1, mov_dword_ptr_[rdi+@@ 8]_0, mov_dword_ptr_[rdi+0x1@@ 0]_esi, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, ret, xor_eax_eax, ret
endbr64, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x10, mov_rsi_qword_ptr_[r@@ di+0x18], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_rdi_rsi, call_0xffffffffffff9a@@ 36, test_eax_eax, jne_0x97, movsx_edx_byte_ptr_[r@@ si], lea_eax_[rdx@@ -0x30], cmp_al_0x4@@ a, ja@@ _0x61, lea_rcx_[rip+0x@@ e4@@ 18], movzx_eax_al, movsxd_rax_dword_ptr_[r@@ cx+rax*4], add_rax_rcx, jmp_rax, xor_eax_eax, mov_rbx_qword_ptr_[rsp+8], xor_rbx_qword_ptr_fs:[0x28], jne_0x8@@ ff, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rsi_rsp, xor_edx_edx, mov_rdi_rbp, call_0x20@@ 30, mov_rbx_rax, test_rax_rax, je_0xffffffffffffff@@ c5, mov_rax_qword_ptr_[rbp+0x18], mov_rdi_rbp, cmp_byte_ptr_[rax]@@ _0x4@@ 6, je_0x69, call_0xffffffffffffff@@ 17, mov_qword_ptr_[rbx]_rax, mov_rdx_rax, test_rdx_rdx, je_0xffffffffffffff@@ a9, mov_ecx_dword_ptr_[rdx], mov_rax_qword_ptr_[rsp], sub_ecx@@ _0x1f, cmp_ecx_1, ja@@ _0x18, mov_rcx_qword_ptr_[r@@ dx+0x10], mov_qword_ptr_[rdx+0x1@@ 0]_rax, mov_rax_qword_ptr_[rbx], mov_qword_ptr_[rsp]_rax, mov_qword_ptr_[rbx@@ ]_rcx, mov_rax_qword_ptr_[rsp], test_rax_rax, je_0xffffffffffffff@@ 80, mov_edx_dword_ptr_[rbp+0x@@ 38], cmp_edx_dword_ptr_[r@@ bp+0x@@ 3c], jge_0xffffffffffffff@@ 74, mov_rcx_qword_ptr_[rbp+0x@@ 30], movsxd_rsi_edx, add_edx_1, mov_qword_ptr_[rcx@@ +r@@ si*@@ 8]_rax, mov_dword_ptr_[rbp+0x@@ 3@@ 8]_edx, jmp_0xffffffffffffff5f, call_0x1@@ 000, mov_qword_ptr_[rbx]_rax, mov_rdx_rax, jmp_0xffffffffffffff99, call_0xfffffffffffe0@@ ad@@ 1
push_rbp, push_rbx, sub_rsp_0x18, mov_rdx_qword_ptr_[r@@ di+0x18], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_qword_ptr_[rsp]_0, movzx_eax_byte_ptr_[rdx], cmp_al_0x4@@ 5, sete_sil, test_al_al, sete_cl, or@@ _sil@@ _cl, jne_0x71, cmp_al_0x2e, mov_rbp_rdi, mov_rbx_rsp, sete_cl, test_cl_cl, je_0x44, jmp_0x6@@ 0, xor_ecx_ecx, mov_esi_0x2e, mov_rdi_rbp, call_0xffffffffffff8b@@ c6, mov_qword_ptr_[rbx]_rax, test_rax_rax, je_0x3f, mov_rdx_qword_ptr_[rbp+0x18], lea_rbx_[r@@ ax+0x18], movzx_eax_byte_ptr_[rdx], test_al_al, sete_sil, cmp_al_0x4@@ 5, sete_cl, or@@ _sil@@ _cl, jne_0x40, cmp_al_0x2e, je_0x3c, cmp_al_0x5@@ 2, je_6, cmp_al_0x4@@ f, jne_8, cmp_byte_ptr_[rdx+@@ 1]@@ _0x4@@ 5, je_0x2e, mov_rdi_rbp, call_0xfffffffffffff5a@@ 9, mov_rdx_rax, test_rax_rax, jne_0xffffffffffffffae, xor_eax_eax, mov_rbx_qword_ptr_[rsp+8], xor_rbx_qword_ptr_fs:[0x28], jne_0x3f, add_rsp_0x18, pop_rbx, pop_rbp, ret, mov_rax_qword_ptr_[rsp], test_rax_rax, je_0xffffffffffffffdd, cmp_qword_ptr_[rax+0x1@@ 8]_0, jne_0xffffffffffffffd8, mov_rdx_qword_ptr_[rax+0x10], cmp_dword_ptr_[rdx@@ ]@@ _0x27, jne_0xffffffffffffffcf, mov_rdx_qword_ptr_[rdx+0x10], cmp_dword_ptr_[r@@ dx+0x1@@ c@@ ]_9, jne_0xffffffffffffffc5, mov_edx_dword_ptr_[r@@ dx+8], sub_dword_ptr_[r@@ bp+0x@@ 4@@ 8]_edx, mov_qword_ptr_[rax+0x10]_0, jmp_0xffffffffffffffb5, call_0xfffffffffffe0@@ 9c@@ d
push_r12, push_rbp, push_rbx, mov_rax_qword_ptr_[rdi+0x18], mov_rbx_rdi, movzx_ebp@@ _byte_ptr_[rax], test_bpl_bpl, je_0xaf, lea_rdx_[rax+1], mov_qword_ptr_[rdi+0x1@@ 8]_rdx, movzx_ebp_byte_ptr_[r@@ ax+1], movzx_edi_byte_ptr_[r@@ ax], test_bpl_bpl, jne_0xa@@ 7, lea_r9_[rip+0x@@ 18@@ 45@@ a], mov_esi_0x4@@ 4, xor_edx_edx, mov_ecx_esi, sub_ecx_edx, mov_eax_ecx, shr_eax_0x1f, add_eax_ecx, sar_eax_1, add_eax_edx, movsxd_rcx_eax, lea_rcx_[rcx@@ +rcx*2], lea_r8_[r@@ 9@@ +rcx*8], mov_rcx_qword_ptr_[r@@ 8], cmp_byte_ptr_[rcx@@ ]_dil, je_0x18, jle_0x@@ 56, mov_esi_eax, cmp_edx_esi, jne_0xffffffffffffffd8, xor_r12d_r12d, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret, cmp_byte_ptr_[rcx@@ +@@ 1@@ ]_bpl, jne_0xffffffffffffffe6, mov_eax_dword_ptr_[rbx+0x28], cmp_eax_dword_ptr_[r@@ bx+0x@@ 2c], jge_0xffffffffffffff@@ e6, movsxd_r12@@ _eax, add_eax_1, shl_r12@@ _5, add_r12@@ _qword_ptr_[r@@ bx+0x20], mov_qword_ptr_[r12+@@ 4]_0, mov_dword_ptr_[rbx+0x@@ 28]_eax, mov_rax_r12, mov_dword_ptr_[r12]@@ _0x32, mov_qword_ptr_[r12+0x1@@ 0]_r8, pop_rbx, pop_rbp, pop_r12, ret, lea_edx_[rax+1], jmp_0xffffffffffffffab, xor_edi_edi, jmp_0xffffffffffffff6d, lea_rdx_[rax+2], mov_qword_ptr_[rbx+0x1@@ 8]_rdx, movzx_ebp_byte_ptr_[r@@ ax+1], cmp_dil@@ _0x7@@ 6, jne_0x5a, lea_eax_[r@@ bp-0x@@ 30], cmp_al_9, ja_0xffffffffffffff@@ 48, mov_rdi_rbx, call_0xfffffffffffff0@@ 60, movsx_esi@@ _bpl, mov_rdx_rax, sub_esi@@ _0x30, mov_eax_dword_ptr_[rbx+0x28], cmp_eax_dword_ptr_[r@@ bx+0x@@ 2c], jge_0x@@ 9a, movsxd_r12@@ _eax, add_eax_1, shl_r12@@ _5, add_r12@@ _qword_ptr_[r@@ bx+0x20], mov_qword_ptr_[r12+@@ 4]_0, mov_dword_ptr_[rbx+0x@@ 28]_eax, mov_rdi_r12, call_0xfffffffffffff35@@ 8, test_eax_eax, jne_0xffffffffffffff@@ 3e, jmp_0xffffffffffffff35, cmp_dil@@ _0x63, jne_0xfffffffffffffe@@ f1, cmp_bpl@@ _0x7@@ 6, jne_0xfffffffffffffe@@ e7, mov_edx_dword_ptr_[rbx+0x@@ 4c], xor_eax_eax, mov_ebp_dword_ptr_[r@@ bx+0x@@ 50], mov_rdi_rbx, test_edx_edx, sete_al, mov_dword_ptr_[rbx+0x@@ 50]_eax, call_0xfffffffffffff3d@@ f, mov_esi_dword_ptr_[rbx+0x@@ 50], xor_ecx_ecx, mov_rdx_rax, test_esi_esi, je_0x1d, mov_esi_0x3@@ 5, mov_rdi_rbx, call_0xffffffffffff8@@ 9a@@ 6, mov_r12_rax, mov_dword_ptr_[rbx+0x@@ 50]@@ _ebp, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret, mov_esi_0x3@@ 4, mov_rdi_rbx, call_0xffffffffffff8@@ 98@@ b, mov_r12_rax, jmp_0xffffffffffffff@@ e5, xor_r12d_r12d, jmp_0xffffffffffffff8@@ 3
push_r13, push_r12, push_rbp, mov_rdx_qword_ptr_[r@@ di+0x18], mov_rbp_rdi, movzx_eax_byte_ptr_[rdx], lea_ecx_[rax@@ -0x30], cmp_cl_9, jbe_0x@@ 10@@ 3, lea_ecx_[rax@@ -0x@@ 61], cmp_cl@@ _0x19, ja@@ _0x3f, cmp_al@@ _0x6f, je_0x1@@ ab, mov_rdi_rbp, call_0xfffffffffffffe@@ 22, mov_r12_rax, test_rax_rax, je_0xb, cmp_dword_ptr_[rax]@@ _0x32, je_0x102, mov_rax_qword_ptr_[rbp+0x18], movzx_ecx_byte_ptr_[rax], cmp_cl@@ _0x42, je_0xe2, mov_rax_r12, pop_rbp, pop_r12, pop_r13, ret, lea_ecx_[rax@@ -0x@@ 43], cmp_cl@@ _1, jbe_0x@@ 18@@ a, cmp_al_0x4@@ c, je_0x12@@ a, cmp_al_0x5@@ 5, jne_0x14@@ 7, movzx_eax_byte_ptr_[rdx+1], cmp_al@@ _0x6c, je_0x2@@ b6, cmp_al_0x7@@ 4, jne_0x13@@ 3, lea_rax_[rdx+1], xor_r12d_r12d, mov_qword_ptr_[rdi+0x1@@ 8]_rax, movzx_ecx_byte_ptr_[r@@ dx+1], cmp_cl@@ _0x74, jne_0xffffffffffffffa9, add_rdx_2, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, call_0xffffffffffff8c@@ 14, test_eax_eax, js_0xffffffffffffff@@ 91, mov_edx_dword_ptr_[rbp+0x@@ 28], cmp_edx_dword_ptr_[r@@ bp+0x@@ 2c], jge_0x@@ 37@@ 7, movsxd_r12@@ _edx, cdqe, add_edx_1, shl_r12@@ _5, add_r12@@ _qword_ptr_[r@@ bp+0x20], mov_qword_ptr_[r12+@@ 4]_0, mov_dword_ptr_[rbp+0x@@ 2@@ 8]_edx, mov_rdx_qword_ptr_[rbp+0x18], mov_qword_ptr_[r12+0x10]_rax, mov_eax_dword_ptr_[rbp+0x@@ 38], mov_dword_ptr_[r12]@@ _0x48, cmp_eax_dword_ptr_[r@@ bp+0x@@ 3c], jge_0x@@ 32@@ b, mov_rcx_qword_ptr_[rbp+0x@@ 30], movsxd_rsi_eax, add_eax_1, mov_qword_ptr_[rcx@@ +r@@ si*@@ 8]_r12, mov_dword_ptr_[rbp+0x@@ 38]_eax, movzx_ecx_byte_ptr_[rdx], jmp_0xffffffffffffff3d, call_0xffffffffffffee@@ 88, mov_r12_rax, mov_rax_qword_ptr_[rbp+0x18], movzx_ecx_byte_ptr_[rax], cmp_cl@@ _0x42, jne_0xffffffffffffff@@ 2a, mov_rsi_r12, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, jmp_0xffffffffffffef@@ 25, mov_rax_qword_ptr_[rax+0x10], mov_ecx_dword_ptr_[rbp+0x@@ 48], mov_edx_dword_ptr_[rax+0x10], mov_rax_qword_ptr_[rax], lea_edx_[r@@ cx@@ +rdx+@@ 7], mov_dword_ptr_[rbp+0x@@ 4@@ 8]_edx, cmp_byte_ptr_[rax]@@ _0x6c, jne_0xfffffffffffffe@@ ed, cmp_byte_ptr_[rax+1]@@ _0x69, jne_0xfffffffffffffe@@ e3, cmp_byte_ptr_[rax+@@ 2]_0, jne_0xfffffffffffffe@@ d9, mov_rdi_rbp, call_0xffffffffffffee@@ 2c, mov_rdx_r12, mov_esi_0x3@@ 7, mov_rdi_rbp, mov_rcx_rax, call_0xffffffffffff87@@ e9, mov_r12_rax, jmp_0xfffffffffffffe@@ b5, add_rdx_1, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, call_0xffffffffffffee@@ 00, mov_r12_rax, test_rax_rax, je_0x12, mov_rdi_rbp, call_0xffffffffffff8c@@ 90, test_eax_eax, jne_0xfffffffffffffe@@ 8d, xor_r12d_r12d, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, cmp_byte_ptr_[rdx+@@ 1]@@ _0x6e, jne_0xfffffffffffffe@@ 57, add_rdx_2, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, jmp_0xfffffffffffffe@@ 49, mov_r8_qword_ptr_[r@@ di+0x40], test_r8_r8, je_0x12, mov_ecx_dword_ptr_[r@@ 8], test_ecx_ecx, je_0x82, cmp_ecx@@ _0x18, je_0x79, cmp_al_0x4@@ 3, jne_0x8f, movsx_eax_byte_ptr_[r@@ dx+1], cmp_al_0x4@@ 9, je_0x1@@ d7, lea_ecx_[rax@@ -0x@@ 31], cmp_cl@@ _4, ja_0xffffffffffffff@@ 9a, add_rdx_2, lea_r13d@@ _[rax@@ -0x30], mov_qword_ptr_[rbp+0x1@@ 8]_rdx, mov_edx_dword_ptr_[rbp+0x@@ 28], cmp_edx_dword_ptr_[r@@ bp+0x@@ 2c], jge_0x@@ 2@@ 15, movsxd_r12@@ _edx, add_edx_1, shl_r12@@ _5, add_r12@@ _qword_ptr_[r@@ bp+0x20], mov_qword_ptr_[r12+@@ 4]_0, mov_dword_ptr_[rbp+0x@@ 2@@ 8]_edx, mov_rdx_r8, mov_esi_r13d, mov_rdi_r12, call_0xfffffffffffff0@@ b0, test_eax_eax, mov_rax_qword_ptr_[rbp+0x18], movzx_ecx_byte_ptr_[rax], jne_0xfffffffffffffdd@@ d, xor_r12d_r12d, jmp_0xfffffffffffffdd@@ 0, mov_eax_dword_ptr_[r@@ 8+0x18], add_dword_ptr_[rbp+0x@@ 48]_eax, movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, cmp_cl@@ _0x4@@ 3, je_0xffffffffffffff@@ 82, cmp_cl@@ _0x44, jne_0xffffffffffffffe0, movzx_esi_byte_ptr_[r@@ dx+1], lea_ecx_[r@@ si-0x@@ 30], cmp_cl@@ _5, ja@@ _0x88, lea_rsi_[rip+0xd@@ 7@@ 2f], movzx_ecx_cl, movsxd_rcx_dword_ptr_[r@@ si@@ +rcx*4], add_rcx_rsi, jmp_rcx, mov_ecx_eax, jmp_0xffffffffffffff4a, lea_rax_[rdx+1], xor_r12d_r12d, mov_qword_ptr_[rdi+0x1@@ 8]_rax, movzx_ecx_byte_ptr_[r@@ dx+1], cmp_cl@@ _0x6c, jne_0xfffffffffffffd@@ 01, add_rdx_2, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, call_0xfffffffffffff9f@@ 8, mov_r13_rax, mov_rax_qword_ptr_[rbp+0x18], movzx_ecx_byte_ptr_[rax], test_r13_r13, je_0xfffffffffffffc@@ e1, cmp_cl@@ _0x4@@ 5, jne_0xfffffffffffffc@@ d8, add_rax_1, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0xffffffffffff8@@ 93@@ c, test_eax_eax, js_0xa@@ 7, mov_edx_dword_ptr_[rbp+0x@@ 28], mov_rcx_qword_ptr_[r@@ bp+0x18], cmp_edx_dword_ptr_[r@@ bp+0x@@ 2c], jge_0x@@ a6, movsxd_r12@@ _edx, add_edx_1, shl_r12@@ _5, add_r12@@ _qword_ptr_[r@@ bp+0x20], mov_qword_ptr_[r12+@@ 4]_0, mov_dword_ptr_[rbp+0x@@ 2@@ 8]_edx, mov_dword_ptr_[r12+0x1@@ 8]_eax, mov_eax_dword_ptr_[rbp+0x@@ 38], mov_dword_ptr_[r12@@ ]_0x4@@ 6, mov_qword_ptr_[r12+0x1@@ 0]_r13, cmp_eax_dword_ptr_[r@@ bp+0x@@ 3c], jge_0x@@ 6e, mov_rdx_qword_ptr_[rbp+0x@@ 30], movsxd_rsi_eax, add_eax_1, mov_qword_ptr_[rdx+r@@ si*@@ 8]_r12, mov_dword_ptr_[rbp+0x@@ 38]_eax, movzx_ecx_byte_ptr_[r@@ cx], jmp_0xfffffffffffffc@@ 62, lea_rax_[rdx+1], mov_qword_ptr_[rbp+0x18]_rax, movsx_eax_byte_ptr_[r@@ dx+2], lea_ecx_[rax@@ -0x@@ 31], cmp_cl@@ _4, ja_0x5@@ 4, add_rdx@@ _3, mov_rdi_rbp, lea_r13d@@ _[rax@@ -0x30], mov_qword_ptr_[rbp+0x1@@ 8]_rdx, call_0xffffffffffffef7@@ f, mov_r8_qword_ptr_[r@@ bp+0x40], jmp_0xfffffffffffffe@@ 17, movzx_ecx_byte_ptr_[rdx], xor_r12d_r12d, jmp_0xfffffffffffffc@@ 26, mov_rax_qword_ptr_[rbp+0x18], xor_r12d_r12d, movzx_ecx_byte_ptr_[rax], jmp_0xfffffffffffffc@@ 0f, movzx_ecx_byte_ptr_[r@@ cx], xor_r12d_r12d, jmp_0xfffffffffffffc@@ 04, xor_r12d_r12d, jmp_0xfffffffffffffe@@ 08, movzx_ecx_byte_ptr_[r@@ dx+1], xor_r12d_r12d, jmp_0xfffffffffffffb@@ f@@ 0
push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, mov_rax_qword_ptr_[rdi+0x18], cmp_byte_ptr_[rax]@@ _0x4@@ a, je_0x5f, test_esi_esi, je_0x3b, mov_rdi_rbp, call_0xffffffffffffef@@ 16, mov_r12_rax, test_rax_rax, je_0x3e, mov_rdi_rbp, call_0xfffffffffffff8c@@ 6, mov_rcx_rax, test_rax_rax, je_0x2e, add_rsp_8, mov_rdx_r12, mov_rdi_rbp, mov_esi_0x2@@ 9, pop_rbp, pop_r12, jmp_0xffffffffffff@@ 8@@ 4c@@ 7, mov_rdi_rbp, xor_r12d_r12d, call_0xfffffffffffff8@@ 9a, mov_rcx_rax, test_rax_rax, jne_0xffffffffffffffd6, add_rsp_8, xor_eax_eax, pop_rbp, pop_r12, ret, add_rax_1, mov_qword_ptr_[rdi+0x1@@ 8]_rax, jmp_0xffffffffffffff9@@ f
push_rbx, mov_rbx_rdi, test_byte_ptr_[rdi+0x1@@ 2@@ ]_4, jne_0x28, mov_ecx_dword_ptr_[rdi+0x@@ 54], cmp_ecx@@ _0x800, ja_0x2@@ 6, mov_rdx_qword_ptr_[r@@ di+0x18], lea_eax_[r@@ cx+1], mov_dword_ptr_[rdi+0x@@ 54]_eax, xor_eax_eax, cmp_byte_ptr_[rdx@@ ]_0x4@@ 6, je_0x1c, mov_dword_ptr_[rbx+0x@@ 5@@ 4]_ecx, pop_rbx, ret, mov_rdx_qword_ptr_[r@@ di+0x18], cmp_byte_ptr_[rdx@@ ]_0x4@@ 6, je_9, xor_eax_eax, pop_rbx, ret, lea_rax_[rdx+1], mov_qword_ptr_[rbx+0x18]_rax, cmp_byte_ptr_[rdx+@@ 1]@@ _0x5@@ 9, jne_0xa, add_rdx_2, mov_qword_ptr_[rbx+0x1@@ 8]_rdx, mov_esi_1, mov_rdi_rbx, call_0xffffffffffffff@@ 22, mov_rdi_rbx, mov_rsi_rax, call_0xffffffffffff84@@ 97, mov_rdx_qword_ptr_[rbx+0x18], cmp_byte_ptr_[rdx@@ ]_0x4@@ 5, je_0x1b, xor_eax_eax, test_byte_ptr_[rbx+0x1@@ 2@@ ]_4, jne_0xffffffffffffffac, mov_esi_dword_ptr_[rbx+0x@@ 54], lea_ecx_[r@@ si-1], jmp_0xffffffffffffffa1, add_rdx_1, mov_qword_ptr_[rbx+0x1@@ 8]_rdx, jmp_0xffffffffffffffe@@ 1
push_r15, push_r14, push_r13, mov_r13d_esi, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_rax_qword_ptr_[rdi+0x18], lea_rbx_[rsp+0x10], mov_qword_ptr_[rsp+0x10]_0, cmp_byte_ptr_[rax@@ ]_sil, je_0x7@@ 17, mov_r14d_dword_ptr_[r@@ bp+0x@@ 4c], mov_dword_ptr_[rbp+0x@@ 4c]_1, movzx_edx_byte_ptr_[rax], cmp_dl@@ _0x4@@ c, je_0x1@@ 7f, cmp_dl@@ _0x5@@ 4, je_0x2@@ 46, cmp_dl@@ _0x73, je_0x12d, cmp_dl@@ _0x66, jne_0xac, cmp_byte_ptr_[rax+1]@@ _0x70, je_0x2@@ 3a, mov_rdi_rbp, call_0xfffffffffffff85@@ 1, mov_r12_rax, test_rax_rax, je_0x1@@ a1, mov_eax_dword_ptr_[rax], cmp_eax@@ _0x32, je_0x2@@ 8b, cmp_eax@@ _0x34, je_0x4@@ 9a, ja_0x4@@ 4, cmp_eax@@ _0x33, jne_0x3f, mov_eax_dword_ptr_[r@@ 12+0x10], cmp_eax_2, je_0x35, jg@@ _0x33, test_eax_eax, jne_0x1f, mov_rdx_r12, xor_ecx_ecx, mov_esi_0x3@@ 6, mov_rdi_rbp, call_0xffffffffffff8@@ 328, mov_r12_rax, jmp_0x1@@ 0b, cmp_eax_1, je_0x4@@ 6a, mov_dword_ptr_[rbp+0x@@ 4c]@@ _r14d, xor_r12d_r12d, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x7@@ 5b, add_rsp_0x28, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_ecx_[rdx@@ -0x30], cmp_cl_9, ja_0x@@ e2, mov_rdi_rbp, call_0xfffffffffffff95@@ 9, mov_r12_rax, test_rax_rax, je_0xf9, mov_rax_qword_ptr_[rbp+0x18], cmp_byte_ptr_[rax]@@ _0x4@@ 9, je_0x2@@ b9, mov_dword_ptr_[rbp+0x@@ 4c]@@ _r14d, xor_ecx_ecx, mov_rdx_r12, mov_esi_0x2e, mov_rdi_rbp, call_0xffffffffffff8@@ 29@@ a, mov_qword_ptr_[rbx]_rax, test_rax_rax, je_0x8f, lea_rbx_[r@@ ax+0x18], mov_rax_qword_ptr_[rbp+0x18], cmp_byte_ptr_[rax]@@ _r13b, jne_0xfffffffffffffe@@ ce, add_rax_1, mov_r12_qword_ptr_[rsp+0x10], mov_qword_ptr_[rbp+0x18]_rax, jmp_0xffffffffffffff6a, movzx_edx_byte_ptr_[rax+1], cmp_dl@@ _0x72, je_0x2@@ c9, cmp_dl@@ _0x70, jne_0xfffffffffffffe@@ dc, add_rax_2, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0x6a@@ f, xor_ecx_ecx, mov_esi_0x4@@ b, mov_rdi_rbp, mov_rdx_rax, call_0xffffffffffff8@@ 22@@ d, mov_r12_rax, jmp_0x10, mov_rdi_rbp, call_0x1e@@ 7d, mov_r12_rax, mov_dword_ptr_[rbp+0x@@ 4c]@@ _r14d, test_r12_r12, jne_0xffffffffffffff@@ 67, xor_r12d_r12d, jmp_0xfffffffffffffefc, cmp_dl@@ _0x6f, jne_0x31, cmp_byte_ptr_[rax+1]@@ _0x6e, jne_0xfffffffffffffe@@ 73, add_rax_2, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0xfffffffffffff86@@ 6, mov_r12_rax, test_rax_rax, jne_0xffffffffffffff@@ 13, mov_dword_ptr_[rbp+0x@@ 4c]@@ _r14d, jmp_0xfffffffffffffe@@ c0, cmp_dl@@ _0x69, je_0xb, cmp_dl@@ _0x74, jne_0xfffffffffffffe@@ 40, cmp_byte_ptr_[rax+1]@@ _0x6c, jne_0xfffffffffffffe@@ 36, add_rax_2, xor_r12d_r12d, mov_qword_ptr_[rbp+0x18]_rax, cmp_dl@@ _0x74, je_0x2@@ fe, cmp_byte_ptr_[rax]_0, je_0xfffffffffffffe@@ 85, cmp_byte_ptr_[rax+1]_0, je_0xfffffffffffffe@@ 7b, mov_esi_0x4@@ 5, mov_rdi_rbp, call_0xfffffffffffffd@@ 85, mov_rdx_r12, mov_esi_0x3@@ 1, mov_rdi_rbp, mov_rcx_rax, call_0xffffffffffff8@@ 162, mov_r12_rax, jmp_0xffffffffffffff45, mov_rdi_rbp, call_0xffffffffffff84@@ ed, mov_r12_rax, jmp_0xffffffffffffff30, lea_rdx_[rax+2], mov_qword_ptr_[rbp+0x1@@ 8]_rdx, cmp_byte_ptr_[rax+@@ 2]@@ _0x5@@ 4, je_0x1@@ 94, mov_rdi_rbp, call_0xffffffffffff8@@ 47@@ b, mov_edx_eax, and_edx@@ _0x7fffffff, cmp_edx@@ _0x7fffffff, je_0xfffffffffffffe@@ 10, lea_edx_[rax+1], mov_ecx_dword_ptr_[rbp+0x28], cmp_ecx_dword_ptr_[r@@ bp+0x@@ 2c], jge_0xffffffffffff@@ fe@@ 01, movsxd_r12@@ _ecx, add_ecx_1, mov_rax_r12, shl_rax_5, add_rax_qword_ptr_[r@@ bp+0x20], mov_qword_ptr_[rax+@@ 4]_0, mov_r12_rax, mov_dword_ptr_[rbp+0x@@ 2@@ 8]_ecx, mov_dword_ptr_[rax@@ ]_6, movsxd_rax_edx, mov_qword_ptr_[r12+0x10]_rax, jmp_0xfffffffffffffe@@ 2b, mov_rdx_qword_ptr_[r12+0x10], mov_r15_qword_ptr_[r@@ dx], mov_eax_dword_ptr_[r@@ dx+0x10], sub_eax_2, add_dword_ptr_[rbp+0x@@ 48]_eax, movzx_eax_byte_ptr_[r15], cmp_eax_0x7@@ 3, je_0xf0, mov_edx_dword_ptr_[r@@ dx+0x14], cmp_edx_1, je_0x1@@ 9c, jle_0x@@ 18@@ 6, cmp_edx_2, je_0x3@@ 0d, cmp_edx_3, jne_0xfffffffffffffd@@ 8c, cmp_eax_0x7@@ 1, je_0x2@@ 75, movzx_eax_byte_ptr_[r15], cmp_al@@ _0x66, je_0x4@@ 6a, cmp_al@@ _0x6e, jne_0xfffffffffffffd@@ 6f, movzx_eax_byte_ptr_[r@@ 15+1], cmp_al_0x7@@ 7, je_0xa, cmp_al@@ _0x61, jne_0xfffffffffffffd@@ 5e, mov_esi_0x5@@ f, mov_rdi_rbp, call_0xfffffffffffffc@@ 68, mov_rdi_rbp, mov_r15_rax, call_0xffffffffffffea@@ 6d, mov_rdx_rax, mov_rax_qword_ptr_[rbp+0x18], movzx_ecx_byte_ptr_[rax], cmp_cl@@ _0x4@@ 5, je_0x4@@ 94, cmp_cl@@ _0x70, je_0x4@@ 5a, cmp_cl@@ _0x69, jne_0xfffffffffffffd@@ 21, cmp_byte_ptr_[rax+1]@@ _0x6c, jne_0xfffffffffffffd@@ 17, mov_rdi_rbp, mov_qword_ptr_[rsp+8]_rdx, call_0x4@@ 81, mov_rdx_qword_ptr_[rsp+8], mov_rcx_rax, jmp_0x2@@ 35, add_rax_1, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0x@@ dc@@ d, mov_rdx_r12, mov_esi_4, mov_rdi_rbp, mov_rcx_rax, call_0xffffffffffff7@@ fd@@ a, mov_r12_rax, jmp_0xfffffffffffffd@@ bd, cmp_byte_ptr_[r15+@@ 1]@@ _0x74, jne_0xffffffffffffff@@ 11, cmp_byte_ptr_[r15+@@ 2]_0, jne_0xffffffffffffff@@ 06, mov_rdi_rbp, call_0xffffffffffffe@@ 9c@@ f, mov_rcx_rax, jmp_0x@@ d2, add_rax_3, xor_edx_edx, mov_qword_ptr_[rbp+0x18]_rax, jmp_0xfffffffffffffe@@ 87, add_rax_2, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0xffffffffffffe@@ 9a@@ 5, mov_rdi_rbp, mov_r12_rax, call_0xfffffffffffff60@@ a, mov_r15_rax, mov_rax_qword_ptr_[rbp+0x18], mov_rcx_r15, cmp_byte_ptr_[rax]@@ _0x4@@ 9, jne_0x28, add_rax_1, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0xd@@ 3b, mov_rdx_r15, mov_esi_4, mov_rdi_rbp, mov_rcx_rax, call_0xffffffffffff7f@@ 48, mov_rcx_rax, mov_rdx_r12, mov_esi_1, mov_rdi_rbp, call_0xffffffffffff7f@@ 35, mov_r12_rax, jmp_0xfffffffffffffd@@ 18, test_edx_edx, je_0xfffffffffffffb@@ e9, jmp_0xfffffffffffffc@@ 10, movzx_ecx_byte_ptr_[r@@ 15], cmp_cl@@ _0x70, je_0xc9, cmp_cl@@ _0x6@@ d, je_0xc0, xor_edx_edx, cmp_eax_0x7@@ 3, jne_9, cmp_byte_ptr_[r15+@@ 1]@@ _0x50, je_0x76, mov_rdi_rbp, mov_dword_ptr_[rsp+8]_edx, call_0x35@@ 5, mov_edx_dword_ptr_[rsp+8], mov_rcx_rax, test_edx_edx, jne_0x7d, mov_rdx_r12, mov_esi_0x3@@ 7, mov_rdi_rbp, call_0xffffffffffff7@@ ec@@ a, mov_r12_rax, jmp_0xfffffffffffffc@@ ad, mov_rax_qword_ptr_[rbp+0x18], cmp_byte_ptr_[rax]@@ _0x5f, je_0x2@@ 49, mov_rdi_rbp, call_0x3@@ 18, mov_rcx_rax, jmp_0xffffffffffffffcb, mov_rdi_rbp, call_0xffffffffffffe@@ 8b@@ 5, mov_r12_rax, mov_rax_qword_ptr_[rbp+0x18], cmp_byte_ptr_[rax]_0, jne_0xfffffffffffffc@@ ff, jmp_0xfffffffffffffb@@ 78, cmp_byte_ptr_[r15+@@ 2]_0, jne_0xffffffffffffff@@ 87, mov_rdi_rbp, mov_dword_ptr_[rsp+8]_edx, call_0xc@@ 4a, mov_edx_dword_ptr_[rsp+8], mov_rcx_rax, test_edx_edx, je_0xffffffffffffff@@ 87, mov_rdx_rcx, mov_esi_0x3@@ 9, mov_rdi_rbp, call_0xffffffffffff7e@@ 4f, jmp_0xfffffffffffffea@@ 0, cmp_cl@@ _byte_ptr_[r@@ 15+1], jne_0xffffffffffffff@@ 42, mov_rcx_qword_ptr_[r@@ bp+0x18], cmp_byte_ptr_[rcx@@ ]@@ _0x5f, jne_0xffffffffffffff@@ 37, add_rcx_1, xor_edx_edx, mov_qword_ptr_[rbp+0x1@@ 8]_rcx, movzx_eax_byte_ptr_[r15], jmp_0xffffffffffffff23, cmp_byte_ptr_[r15+@@ 1]@@ _0x7@@ 5, jne_0xfffffffffffffd@@ 8c, cmp_byte_ptr_[r15+@@ 2]_0, jne_0xfffffffffffffd@@ 81, mov_rdi_rbp, call_0x2@@ 6d, mov_rdi_rbp, mov_r15_rax, call_0x2@@ 62, mov_rdi_rbp, mov_qword_ptr_[rsp+8]_rax, call_0x2@@ 55, mov_rdx_qword_ptr_[rsp+8], test_rax_rax, mov_rcx_rax, je_0xfffffffffffffa@@ cd, mov_rdi_rbp, mov_esi_0x3@@ c, call_0xffffffffffff7@@ dc@@ 7, mov_rdx_r15, mov_esi_0x3@@ b, mov_rcx_rax, call_0xffffffffffff7@@ db@@ 7, mov_rdx_r12, mov_esi_0x3a, mov_rcx_rax, call_0xffffffffffff7@@ da@@ 7, mov_r12_rax, jmp_0xfffffffffffffb@@ 8a, mov_rax_qword_ptr_[r12+0x10], mov_rax_qword_ptr_[rax], cmp_byte_ptr_[rax+1]@@ _0x63, je_0x1@@ 39, cmp_byte_ptr_[r@@ 15]@@ _0x66, je_0x1@@ 55, mov_rdi_rbp, call_0x1@@ e1, mov_r8_rax, movzx_eax_byte_ptr_[r15], cmp_eax_0x6@@ 3, jne_0x32, cmp_byte_ptr_[r15+@@ 1]@@ _0x6c, jne_0x2b, cmp_byte_ptr_[r15+@@ 2]_0, jne_0x24, mov_esi_0x4@@ 5, mov_rdi_rbp, mov_qword_ptr_[rsp+8]_r8, call_0xfffffffffffff95@@ 5, mov_r8_qword_ptr_[rsp+8], mov_r15_rax, jmp_0x3d, cmp_eax_0x64, jne_0x5d, cmp_byte_ptr_[r15+@@ 1]@@ _0x74, jne_0x56, cmp_byte_ptr_[r15+@@ 2]_0, jne_0x4f, mov_rdi_rbp, mov_qword_ptr_[rsp+8]_r8, call_0xfffffffffffff3a@@ 5, mov_r8_qword_ptr_[rsp+8], mov_r15_rax, mov_rax_qword_ptr_[rbp+0x18], cmp_byte_ptr_[rax]@@ _0x4@@ 9, je_0xf9, mov_rdx_r8, mov_rcx_r15, mov_esi_0x3@@ 9, mov_rdi_rbp, call_0xffffffffffff7c@@ ed, mov_rdx_r12, mov_esi@@ _0x38, mov_rcx_rax, call_0xffffffffffff7@@ cd@@ d, mov_r12_rax, jmp_0xfffffffffffffa@@ c0, cmp_eax@@ _0x70, jne_0x10, cmp_byte_ptr_[r15+@@ 1]@@ _0x74, jne_9, cmp_byte_ptr_[r15+@@ 2]_0, je_0xffffffffffffff@@ a2, mov_rdi_rbp, mov_qword_ptr_[rsp+8]_r8, call_0x1@@ 25, mov_r8_qword_ptr_[rsp+8], mov_r15_rax, jmp_0xffffffffffffffad, add_rax_1, mov_qword_ptr_[rdi+0x1@@ 8]_rax, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ f2, add_rsp_0x28, xor_ecx_ecx, xor_edx_edx, mov_esi_0x2e, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, jmp_0xffffffffffff@@ 7c@@ 6d, add_rax_1, mov_esi_0x4@@ 5, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0xfffffffffffff86@@ 8, mov_rcx_rax, jmp_0xfffffffffffffd@@ 7b, movzx_eax_byte_ptr_[rax], lea_edx_[rax-0x@@ 72], cmp_dl_1, jbe_0x@@ d, sub_eax@@ _0x63, cmp_al_1, ja_0xfffffffffffffe@@ bd, mov_rdi_rbp, call_0xffffffffffffe@@ 65@@ 2, mov_r8_rax, jmp_0xfffffffffffffe@@ c1, mov_rdi_rbp, call_0xfffffffffffff@@ 102, mov_r8_rax, jmp_0xfffffffffffffe@@ b1, mov_rdi_rbp, call_0xfffffffffffff0@@ f2, jmp_0xfffffffffffffe@@ 15, add_rax_1, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0x9d@@ d, mov_rdx_r15, mov_esi_4, mov_rdi_rbp, mov_rcx_rax, call_0xffffffffffff7b@@ ea, mov_r8_qword_ptr_[rsp+8], mov_r15_rax, jmp_0xfffffffffffffe@@ e2, cmp_byte_ptr_[rax+1]@@ _0x69, jne_0xfffffffffffff@@ 8c@@ c, add_rax_2, mov_esi_0x4@@ 5, mov_rdi_rbp, mov_qword_ptr_[rsp+8]_rdx, mov_qword_ptr_[rbp+0x18]_rax, call_0xfffffffffffff7c@@ 9, mov_rdx_qword_ptr_[rsp+8], mov_rcx_rax, jmp_0xfffffffffffffdd@@ d, add_rax_1, xor_ecx_ecx, mov_qword_ptr_[rbp+0x18]_rax, jmp_0xfffffffffffffd@@ ce, call_0xfffffffffffd@@ fa@@ 3@@ 8
push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rdx_qword_ptr_[r@@ di+0x18], movzx_eax_byte_ptr_[rdx], cmp_al_0x4@@ c, je_0x1@@ b4, cmp_al_0x5@@ 4, je_0x1@@ dc, cmp_al_0x7@@ 3, je_0xbc, cmp_al@@ _0x66, je_0x44, lea_ecx_[rax@@ -0x30], cmp_cl_9, ja_0x1@@ a4, mov_rdi_rbp, call_0xfffffffffffff@@ 1e@@ 3, mov_r12_rax, test_rax_rax, je_0x1@@ 6b, mov_rax_qword_ptr_[rbp+0x18], cmp_byte_ptr_[rax]@@ _0x4@@ 9, je_0x2@@ 73, pop_rbx, mov_rax_r12, pop_rbp, pop_r12, pop_r13, pop_r14, ret, cmp_byte_ptr_[rdx+@@ 1]@@ _0x70, je_0x9c, mov_rdi_rbp, call_0xffffffffffffe@@ ff@@ 3, mov_r12_rax, test_rax_rax, je_0x12@@ b, mov_eax_dword_ptr_[rax], cmp_eax@@ _0x32, je_0x1@@ 75, cmp_eax@@ _0x34, je_0x5@@ 3c, ja_0x1@@ 11, cmp_eax@@ _0x33, jne_0x10@@ 8, mov_eax_dword_ptr_[r@@ 12+0x10], cmp_eax_2, je_0xfa, jg@@ _0xf@@ 4, test_eax_eax, jne_0x2@@ f1, xor_ecx_ecx, mov_rdx_r12, mov_esi_0x3@@ 6, jmp_0x2@@ 0c, movzx_eax_byte_ptr_[rdx+1], cmp_al_0x7@@ 2, je_0x2@@ 12, cmp_al@@ _0x70, jne_0xffffffffffffff@@ 8c, add_rdx_2, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, call_0xffffffffffffff@@ 08, xor_ecx_ecx, mov_esi_0x4@@ b, mov_rdx_rax, jmp_0x1@@ dc, lea_rax_[rdx@@ +2], mov_qword_ptr_[rdi+0x1@@ 8]_rax, cmp_byte_ptr_[rdx+@@ 2]@@ _0x5@@ 4, je_0x3@@ 34, call_0xffffffffffff7@@ db@@ e, mov_edx_eax, add_eax_1, and_edx@@ _0x7fffffff, cmp_edx@@ _0x7fffffff, je_0x7b, mov_edx_dword_ptr_[rbp+0x@@ 28], cmp_edx_dword_ptr_[r@@ bp+0x@@ 2c], jge_0x@@ 73, movsxd_r12@@ _edx, cdqe, add_edx_1, shl_r12@@ _5, add_r12@@ _qword_ptr_[r@@ bp+0x20], mov_qword_ptr_[r12+@@ 4]_0, mov_dword_ptr_[rbp+0x@@ 2@@ 8]_edx, mov_dword_ptr_[r12@@ ]_6, mov_qword_ptr_[r12+0x10]_rax, jmp_0xfffffffffffffef0, cmp_al@@ _0x69, je_0xa, cmp_al_0x7@@ 4, jne_0xffffffffffffff@@ 04, cmp_byte_ptr_[rdx+@@ 1]@@ _0x6c, jne_0xfffffffffffffe@@ fa, add_rdx_2, xor_r12d_r12d, mov_qword_ptr_[rbp+0x1@@ 8]_rdx, cmp_al_0x7@@ 4, jne_0x11, mov_rdi_rbp, call_0xffffffffffffe4@@ 18, mov_rdx_qword_ptr_[rbp+0x18], mov_r12_rax, cmp_byte_ptr_[rdx]_0, je_0xc, cmp_byte_ptr_[rdx+@@ 1]_0, jne_0x1@@ b3, xor_r12d_r12d, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, jmp_0x1@@ 6@@ 20, cmp_al@@ _0x6f, jne_0xffffffffffffff@@ 96, cmp_byte_ptr_[rdx+@@ 1]@@ _0x6e, jne_0xfffffffffffffe@@ 9a, add_rdx_2, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, jmp_0xfffffffffffffe@@ 4c, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, jmp_0xffffffffffff@@ 7d@@ 30, mov_rdx_qword_ptr_[r12+0x10], mov_rbx_qword_ptr_[r@@ dx], mov_eax_dword_ptr_[r@@ dx+0x10], sub_eax_2, add_dword_ptr_[rbp+0x@@ 48]_eax, movzx_eax_byte_ptr_[rbx], cmp_eax_0x7@@ 3, je_0x111, mov_r13d_dword_ptr_[r@@ dx+0x14], cmp_r13d_1, je_0x1@@ c3, jle_0x@@ 1a@@ d, cmp_r13d_2, je_0x2@@ 43, cmp_r13d_3, jne_0xffffffffffffff@@ 6c, cmp_eax_0x7@@ 1, jne_0x2@@ b0, cmp_byte_ptr_[rbx+@@ 1]@@ _0x7@@ 5, jne_0x2@@ a6, cmp_byte_ptr_[rbx+@@ 2]_0, jne_0x2@@ 9c, mov_rdi_rbp, call_0xfffffffffffffd@@ 93, mov_rdi_rbp, mov_r13_rax, call_0xfffffffffffffd@@ 88, mov_rdi_rbp, mov_r14_rax, call_0xfffffffffffffd@@ 7d, mov_rcx_rax, test_rax_rax, je_0xffffffffffffff@@ 25, mov_rdx_r14, mov_esi_0x3@@ c, mov_rdi_rbp, call_0xffffffffffff7@@ 8f@@ 1, mov_rdx_r13, mov_esi_0x3@@ b, mov_rcx_rax, call_0xffffffffffff7@@ 8e@@ 1, mov_rdx_r12, mov_esi_0x3a, mov_rcx_rax, jmp_0x24, add_rax_1, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0x6@@ 9d, mov_rdx_r12, mov_esi_4, mov_rcx_rax, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, pop_r14, jmp_0xffffffffffff@@ 7@@ 8a@@ 2, add_rdx_2, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, call_0xffffffffffffe@@ 2b0, mov_rdi_rbp, mov_r12_rax, call_0xffffffffffffef@@ 15, mov_r13_rax, mov_rax_qword_ptr_[rbp+0x18], cmp_byte_ptr_[rax]@@ _0x4@@ 9, je_0x66, mov_rcx_r13, mov_rdx_r12, mov_esi_1, jmp_0xffffffffffffffbc, cmp_byte_ptr_[rbx+@@ 1]@@ _0x74, jne_0xfffffffffffffe@@ f1, cmp_byte_ptr_[rbx+@@ 2]_0, jne_0xfffffffffffffe@@ e7, mov_rdi_rbp, call_0xffffffffffffe@@ 26@@ 9, mov_rdx_r12, mov_esi_0x3@@ 7, mov_rcx_rax, jmp_0xffffffffffffff8c, mov_esi_0x4@@ 5, mov_rdi_rbp, call_0xfffffffffffff4@@ 38, mov_rdx_r12, mov_esi_0x3@@ 1, mov_rcx_rax, jmp_0xffffffffffffff6b, add_rax_1, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0x5e@@ 5, mov_rdx_r13, mov_esi_4, mov_rdi_rbp, mov_rcx_rax, call_0xffffffffffff7@@ 7f@@ 2, mov_rdx_r12, mov_esi_1, mov_rcx_rax, jmp_0xffffffffffffff35, cmp_eax_1, jne_0xfffffffffffffd@@ f8, mov_rdi_rbp, call_0xfffffffffffffc@@ 3c, mov_rcx_rax, mov_rdx_r12, mov_esi_0x3@@ 7, jmp_0xffffffffffffff0b, test_r13d_r13d, je_0xfffffffffffffc@@ ea, jmp_0xfffffffffffffd@@ ca, movzx_edx_byte_ptr_[rbx], cmp_dl@@ _0x70, je_0x6a, cmp_dl@@ _0x6@@ d, je_0x65, xor_r13d_r13d, cmp_eax_0x7@@ 3, jne_0x3d, cmp_byte_ptr_[rbx+@@ 1]@@ _0x50, jne_0x37, cmp_byte_ptr_[rbx+@@ 2]_0, jne_0x31, mov_rdi_rbp, call_0x55@@ c, mov_rcx_rax, test_r13d_r13d, je_0xffffffffffffff@@ b1, mov_rdx_rcx, mov_esi_0x3@@ 9, mov_rdi_rbp, call_0xffffffffffff7@@ 7@@ 64, mov_rcx_rax, jmp_0xffffffffffffff9c, mov_rdi_rbp, call_0xfffffffffffffbb@@ d, mov_rcx_rax, jmp_0xffffffffffffffd1, add_rdx@@ _3, xor_eax_eax, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, jmp_0xfffffffffffffc@@ e0, cmp_dl@@ _byte_ptr_[r@@ bx+1], jne_0xffffffffffffff9a, mov_rdx_qword_ptr_[rbp+0x18], cmp_byte_ptr_[rdx]@@ _0x5f, jne_0xffffffffffffff@@ 94, add_rdx_1, xor_r13d_r13d, mov_qword_ptr_[rbp+0x1@@ 8]_rdx, movzx_eax_byte_ptr_[rbx], jmp_0xffffffffffffff84, mov_rax_qword_ptr_[r12+0x10], mov_rax_qword_ptr_[rax], cmp_byte_ptr_[rax+1]@@ _0x63, je_0x1@@ 8b, cmp_byte_ptr_[rbx]@@ _0x66, je_0x1@@ a8, mov_rdi_rbp, call_0xfffffffffffffb@@ 62, mov_r14_rax, movzx_eax_byte_ptr_[rbx], cmp_eax_0x6@@ 3, jne_0xd4, cmp_byte_ptr_[rbx+@@ 1]@@ _0x6c, jne_0x@@ ca, cmp_byte_ptr_[rbx+@@ 2]_0, jne_0x@@ c0, mov_esi_0x4@@ 5, mov_rdi_rbp, call_0xfffffffffffff2d@@ 2, mov_r13_rax, mov_rcx_r13, mov_rdx_r14, mov_esi_0x3@@ 9, mov_rdi_rbp, call_0xffffffffffff7@@ 6a@@ c, mov_rdx_r12, mov_esi@@ _0x38, mov_rcx_rax, jmp_0xfffffffffffffd@@ ef, movzx_eax_byte_ptr_[rbx], cmp_al@@ _0x66, je_0x1@@ 5b, cmp_al@@ _0x6e, jne_0xfffffffffffffc@@ a6, movzx_eax_byte_ptr_[rbx+1], cmp_al_0x7@@ 7, je_0xa, cmp_al@@ _0x61, jne_0xfffffffffffffc@@ 96, mov_esi_0x5@@ f, mov_rdi_rbp, call_0xfffffffffffff27@@ 5, mov_rdi_rbp, mov_r13_rax, call_0xffffffffffffe0@@ 7a, mov_r14_rax, mov_rax_qword_ptr_[rbp+0x18], movzx_edx_byte_ptr_[rax], cmp_dl@@ _0x4@@ 5, je_0x1@@ 4c, cmp_dl@@ _0x70, je_0x11c, cmp_dl@@ _0x69, jne_0xfffffffffffffc@@ 59, cmp_byte_ptr_[rax+1]@@ _0x6c, jne_0xfffffffffffffc@@ 4f, mov_rdi_rbp, call_0xfffffffffffffa@@ 93, mov_rcx_rax, jmp_0xfffffffffffffd@@ 1f, cmp_eax_0x64, jne_0x7f, cmp_byte_ptr_[rbx+@@ 1]@@ _0x74, jne_0x79, cmp_byte_ptr_[rbx+@@ 2]_0, jne_0x73, mov_rdi_rbp, call_0xffffffffffffec@@ 8c, mov_r13_rax, mov_rax_qword_ptr_[rbp+0x18], cmp_byte_ptr_[rax]@@ _0x4@@ 9, jne_0xffffffffffffff@@ 33, add_rax_1, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0x3b@@ c, mov_rdx_r13, mov_esi_4, mov_rdi_rbp, mov_rcx_rax, call_0xffffffffffff7@@ 5c@@ 9, mov_r13_rax, jmp_0xffffffffffffff07, mov_rax_qword_ptr_[rbp+0x18], cmp_byte_ptr_[rax]@@ _0x5f, jne_0xfffffffffffffd@@ e2, add_rax_1, mov_esi_0x4@@ 5, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0xfffffffffffff@@ 1a@@ b, mov_rcx_rax, jmp_0xfffffffffffffdd@@ 3, cmp_eax@@ _0x70, je_0x48, mov_rdi_rbp, call_0xfffffffffffff9f@@ 6, mov_r13_rax, jmp_0xfffffffffffffe@@ c4, movzx_eax_byte_ptr_[rax], lea_edx_[rax-0x@@ 72], cmp_dl_1, jbe_0x@@ d, sub_eax@@ _0x63, cmp_al_1, ja_0xfffffffffffffe@@ 6b, mov_rdi_rbp, call_0xffffffffffffdf@@ 80, mov_r14_rax, jmp_0xfffffffffffffe@@ 6e, mov_rdi_rbp, call_0xffffffffffffea@@ 30, mov_r14_rax, jmp_0xfffffffffffffe@@ 5e, cmp_byte_ptr_[rbx+@@ 1]@@ _0x74, jne_0xffffffffffffffb6, cmp_byte_ptr_[rbx+@@ 2]_0, je_0xffffffffffffff@@ 3a, jmp_0xffffffffffffffaa, mov_rdi_rbp, call_0xffffffffffffea@@ 0d, jmp_0xfffffffffffffc@@ 0a, cmp_byte_ptr_[rax+1]@@ _0x69, jne_0xfffffffffffffb@@ 42, add_rax_2, mov_esi_0x4@@ 5, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0xfffffffffffff@@ 119, mov_rcx_rax, jmp_0xfffffffffffffc@@ 05, add_rax_1, xor_ecx_ecx, mov_qword_ptr_[rbp+0x18]_rax, jmp_0xfffffffffffffb@@ f@@ 6
push_r15, mov_r15_rdi, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rsi, mov_r12_rbx, sub_rsp_0x18, cmp_edx_1, mov_rsi_qword_ptr_[r@@ di+0x18], sbb@@ _r14d_r14d, mov_dword_ptr_[rsp+8]_edx, and_r14d@@ _0xfffffffd, mov_rdi_rsi, movzx_r9d_byte_ptr_[r@@ si], add_r14d@@ _0x1e, cmp_edx_1, sbb@@ _r13d_r13d, and_r13d@@ _0xfffffffd, add_r13d@@ _0x1d, cmp_edx_1, sbb@@ _ebp_ebp, and_ebp@@ _0xfffffffd, add_ebp@@ _0x1c, call_0xffffffffffff7@@ 9@@ 13, test_eax_eax, je_0xfc, lea_rax_[r@@ si+1], mov_qword_ptr_[r15+0x1@@ 8]_rax, cmp_r9b@@ _0x72, je_0xac, cmp_r9b@@ _0x5@@ 6, je_0x11a, cmp_r9b@@ _0x4@@ b, je_0x12@@ 0, cmp_byte_ptr_[rsi+@@ 1]_0, je_0x76, lea_rax_[r@@ si+2], mov_qword_ptr_[r15+0x1@@ 8]_rax, movzx_eax_byte_ptr_[r@@ si+1], cmp_al@@ _0x78, je_0x116, mov_edx_eax, and_edx_0xffffff@@ df, cmp_dl@@ _0x4@@ f, jne_0x12@@ 0, add_dword_ptr_[r@@ 15+0x@@ 48@@ ]_9, cmp_al_0x4@@ f, jne_0x15@@ b, mov_edx_dword_ptr_[r15+0x@@ 4c], mov_dword_ptr_[r15+0x@@ 4c]_1, mov_rdi_r15, mov_dword_ptr_[rsp+0xc]_edx, call_0xfffffffffffff88@@ 2, mov_edx_dword_ptr_[rsp+0xc], mov_rcx_rax, mov_dword_ptr_[r15+0x@@ 4@@ c]_edx, test_rax_rax, je_0x1f, mov_rax_qword_ptr_[r15+0x18], cmp_byte_ptr_[rax]@@ _0x4@@ 5, jne_0x16, add_rax_1, mov_esi_0x4@@ f, mov_qword_ptr_[r15+0x1@@ 8]_rax, jmp_0x28, xor_r12d_r12d, add_rsp_0x18, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, add_dword_ptr_[r@@ 15+0x@@ 48@@ ]_9, mov_esi_ebp, xor_ecx_ecx, xor_edx_edx, mov_rdi_r15, call_0xffffffffffff7@@ 3b@@ a, mov_qword_ptr_[r12]_rax, test_rax_rax, je_0xffffffffffffffce, mov_rsi_qword_ptr_[r15+0x18], lea_r12_[r@@ ax+0x10], mov_rdi_rsi, movzx_r9d_byte_ptr_[r@@ si], call_0xffffffffffff7@@ 8@@ 1d, test_eax_eax, jne_0xffffffffffffff@@ 16, test_byte_ptr_[r@@ sp+@@ 8]_1, jne_0xffffffffffffffae, cmp_r9b@@ _0x4@@ 6, je_0x12, jmp_0xffffffffffffffa6, cmp_eax_0x1@@ 9, je_0xcd, add_rbx_0x10, cmp_r12_rbx, je_0xffffffffffffff@@ 93, mov_rbx_qword_ptr_[rbx], mov_eax_dword_ptr_[rbx], cmp_eax_0x1@@ a, je_0xa6, cmp_eax_0x1@@ b, jne_0xffffffffffffffdd, mov_dword_ptr_[rbx]@@ _0x1e, jmp_0xffffffffffffffde, add_dword_ptr_[r@@ 15+0x@@ 48@@ ]_9, mov_esi_r13d, xor_ecx_ecx, jmp_0xffffffffffffff87, add_dword_ptr_[r@@ 15+0x@@ 48@@ ]_6, mov_esi_r14d, xor_ecx_ecx, jmp_0xffffffffffffff77, add_dword_ptr_[r@@ 15+0x@@ 48]@@ _0x11, xor_ecx_ecx, mov_esi_0x4@@ d, jmp_0xffffffffffffff65, cmp_al_0x7@@ 7, jne_0xffffffffffffff@@ 36, add_dword_ptr_[r@@ 15+0x@@ 48@@ ]_6, mov_rdi_r15, call_0xffffffffffffe@@ 6e@@ 8, mov_rcx_rax, test_rax_rax, je_0xffffffffffffff@@ 1d, mov_rax_qword_ptr_[r15+0x18], cmp_byte_ptr_[rax]@@ _0x4@@ 5, jne_0xffffffffffffff@@ 10, add_rax_1, mov_esi_0x50, mov_qword_ptr_[r15+0x1@@ 8]_rax, jmp_0xffffffffffffff1e, xor_ecx_ecx, mov_esi_0x4@@ f, jmp_0xffffffffffffff0a, mov_dword_ptr_[rbx]@@ _0x1d, jmp_0xffffffffffffff43, mov_dword_ptr_[rbx]@@ _0x1c, jmp_0xffffffffffffff3@@ 3
mov_rdx_qword_ptr_[r@@ di+0x18], movzx_eax_byte_ptr_[rdx], cmp_al_0x4@@ c, je_0x67, jg_0x1@@ 5, sub_eax@@ _0x4@@ 9, cmp_al_1, ja_0x5@@ 6, jmp_0x1@@ 4c, cmp_al@@ _0x58, jne_0x46, push_rbx, add_rdx_1, sub_rsp_0x10, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, mov_ebx_dword_ptr_[r@@ di+0x@@ 4c], mov_dword_ptr_[rdi+0x@@ 4c]_1, mov_qword_ptr_[rsp+8]_rdi, call_0xfffffffffffff6d@@ 0, mov_rdi_qword_ptr_[rsp+8], mov_rdx_qword_ptr_[r@@ di+0x18], mov_dword_ptr_[rdi+0x@@ 4c]@@ _ebx, cmp_byte_ptr_[rdx@@ ]_0x4@@ 5, jne_0x24, add_rdx_1, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, add_rsp_0x10, pop_rbx, ret, jmp_0xffffffffffffdc@@ 58, jmp_0x@@ e@@ 90, xor_eax_eax, jmp_0xffffffffffffffe@@ 4
push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_0x10, mov_rbp_qword_ptr_[r@@ di+0x40], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_rax_qword_ptr_[rdi+0x18], cmp_byte_ptr_[rax]@@ _0x4@@ 5, je_0x82, mov_qword_ptr_[rsp]_0, mov_rbx_rsp, jmp_0x2e, xor_ecx_ecx, mov_esi_0x2f, mov_rdi_r12, call_0xffffffffffff7@@ 1d@@ 6, mov_qword_ptr_[rbx]_rax, test_rax_rax, je_0x20, lea_rbx_[r@@ ax+0x18], mov_rax_qword_ptr_[r12+0x18], cmp_byte_ptr_[rax]@@ _0x4@@ 5, je_0x2d, mov_rdi_r12, call_0xffffffffffffff@@ 18, mov_rdx_rax, test_rax_rax, jne_0xffffffffffffffcd, xor_eax_eax, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x51, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, ret, add_rax_1, mov_qword_ptr_[r12+0x@@ 4@@ 0]_rbp, mov_qword_ptr_[r12+0x1@@ 8]_rax, mov_rax_qword_ptr_[rsp], jmp_0xffffffffffffffd5, add_rax_1, mov_qword_ptr_[rdi+0x1@@ 8]_rax, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x18, add_rsp_0x10, xor_ecx_ecx, xor_edx_edx, mov_esi_0x2f, pop_rbx, pop_rbp, pop_r12, jmp_0xffffffffffff@@ 7@@ 14@@ f, call_0xfffffffffffde@@ fe@@ a
mov_rdx_qword_ptr_[r@@ di+0x18], movzx_eax_byte_ptr_[rdx], sub_eax@@ _0x4@@ 9, cmp_al_1, ja_0x1@@ 4, add_rdx_1, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, jmp_0xffffffffffffff0a, xor_eax_eax, ret
push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x28, mov_rdx_qword_ptr_[r@@ di+0x18], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, movzx_eax_byte_ptr_[rdx], cmp_al_0x5@@ 5, je_0x2@@ 76, jg@@ _0x60, cmp_al_0x4@@ e, je_0x2@@ 7c, cmp_al_0x5@@ 3, jne_0x1@@ f4, cmp_byte_ptr_[rdx+@@ 1]@@ _0x74, je_0x1@@ 6a, xor_esi_esi, call_0xffffffffffffd8@@ 12, mov_r12_rax, mov_rax_qword_ptr_[rbp+0x18], cmp_byte_ptr_[rax]@@ _0x4@@ 9, jne_0x12@@ d, add_rax_1, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0xfffffffffffffe@@ 82, mov_rcx_rax, mov_rdx_r12, mov_esi_4, mov_rdi_rbp, call_0xffffffffffff70@@ 8f, mov_r12_rax, jmp_0x1@@ 01, cmp_al_0x5@@ a, jne_0x1@@ 9e, add_rdx_1, xor_esi_esi, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, call_0x50@@ e, mov_r12_rax, test_rax_rax, je_0xda, mov_rax_qword_ptr_[rbp+0x18], cmp_byte_ptr_[rax]@@ _0x4@@ 5, jne_0x@@ cd, lea_rdx_[rax+1], mov_qword_ptr_[rbp+0x1@@ 8]_rdx, movzx_edx_byte_ptr_[rax+1], cmp_dl@@ _0x73, je_0x4@@ 31, cmp_dl@@ _0x64, je_0x3@@ 58, mov_rdi_rbp, call_0xffffffffffffff@@ 1f, mov_rcx_rax, test_rax_rax, je_0x10, mov_eax_dword_ptr_[rax], sub_eax@@ _0x4@@ 6, and_eax_0xfffffffd, jne_0x4@@ 67, cmp_dword_ptr_[r@@ 12@@ ]_3, je_0x3@@ df, mov_rdx_r12, mov_esi_2, mov_rdi_rbp, call_0xffffffffffff6@@ ffe, mov_r12_rax, jmp_0x7@@ 0, mov_rdi_rbp, call_0xffffffffffffe@@ 67@@ d, mov_rcx_rax, test_r13_r13, jne_0x2@@ d2, mov_r13_rax, mov_rax_qword_ptr_[rbp+0x18], cmp_r12b@@ _0x5@@ 3, je_0x2e, movzx_r12d@@ _byte_ptr_[rax], cmp_r12b@@ _0x4@@ 5, je_0x2@@ 97, test_r13_r13, je_0x2e, mov_edx_dword_ptr_[rbp+0x@@ 38], cmp_edx_dword_ptr_[r@@ bp+0x@@ 3c], jge_0x@@ 26, mov_rcx_qword_ptr_[rbp+0x@@ 30], movsxd_rsi_edx, add_edx_1, mov_qword_ptr_[rcx@@ +r@@ si*@@ 8]_r13, mov_dword_ptr_[rbp+0x@@ 3@@ 8]_edx, movzx_r12d@@ _byte_ptr_[rax], test_r12b_r12b, jne_0x1@@ 8a, mov_qword_ptr_[rbx]_0, xor_r12d_r12d, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x4@@ 10, add_rsp_0x28, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, add_rdx_2, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, call_0xffffffffffffe@@ 5e8, mov_edx_3, lea_rsi_[rip+0xc@@ 34@@ b], mov_rdi_rbp, mov_r12_rax, call_0xffffffffffffd5@@ 21, mov_rcx_r12, mov_esi_1, mov_rdi_rbp, mov_rdx_rax, call_0xffffffffffff6f@@ 2e, add_dword_ptr_[rbp+0x@@ 48@@ ]_3, mov_r12_rax, mov_rax_qword_ptr_[rbp+0x18], cmp_byte_ptr_[rax]@@ _0x4@@ 9, jne_0xffffffffffffff@@ 95, test_r12_r12, je_0xffffffffffffff@@ 8d, mov_edx_dword_ptr_[rbp+0x@@ 38], cmp_edx_dword_ptr_[r@@ bp+0x@@ 3c], jge_0xffffffffffffff@@ 85, mov_rcx_qword_ptr_[rbp+0x@@ 30], movsxd_rsi_edx, add_edx_1, mov_qword_ptr_[rcx@@ +r@@ si*@@ 8]_r12, mov_dword_ptr_[rbp+0x@@ 3@@ 8]_edx, movzx_ebx_byte_ptr_[r@@ ax], lea_edx_[r@@ bx-0x@@ 49], cmp_dl_1, jbe_0xfffffffffffffe@@ 41, xor_ecx_ecx, jmp_0xfffffffffffffe@@ 4c, mov_rdi_rbp, call_0xffffffffffffe@@ 56@@ d, mov_rdx_qword_ptr_[rbp+0x18], mov_r12_rax, cmp_byte_ptr_[rdx@@ ]_0x4@@ 9, jne_0xffffffffffffff@@ 48, test_rax_rax, je_0xffffffffffffff@@ 3c, mov_eax_dword_ptr_[rbp+0x@@ 38], cmp_eax_dword_ptr_[r@@ bp+0x@@ 3c], jge_0xffffffffffffff@@ 30, mov_rcx_qword_ptr_[rbp+0x@@ 30], movsxd_rsi_eax, add_eax_1, xor_r8d_r8d, mov_qword_ptr_[rcx@@ +r@@ si*@@ 8]_r12, mov_dword_ptr_[rbp+0x@@ 38]_eax, movzx_eax_byte_ptr_[rdx], lea_ecx_[rax@@ -0x@@ 49], cmp_cl@@ _1, ja_0x1@@ 5, add_rdx_1, mov_rdi_rbp, mov_qword_ptr_[rbp+0x1@@ 8]_rdx, call_0xfffffffffffffc@@ 69, mov_r8_rax, mov_rcx_r8, jmp_0xfffffffffffffd@@ e4, call_0xffffffffffffe5@@ 00, mov_r12_rax, jmp_0xfffffffffffffe@@ e2, add_rdx_1, lea_rsi_[rsp+0x10], mov_qword_ptr_[rdi+0x1@@ 8]_rdx, mov_edx_1, call_0xfffffffffffff96@@ e, mov_rbx_rax, test_rax_rax, je_0xfffffffffffffe@@ ba, xor_esi_esi, mov_rdi_rbp, call_0xffffffffffff6@@ ea8, mov_r14_rax, mov_rax_qword_ptr_[rbp+0x18], movzx_r12d@@ _byte_ptr_[rax], test_r12b_r12b, je_0xfffffffffffffe@@ 95, movabs@@ _r15@@ _0x20@@ 100@@ 80@@ 3@@ ff, xor_r13d_r13d, cmp_r12b@@ _0x44, je_0x6e, lea_ecx_[r@@ 12@@ -0x30], mov_edx_r12d, xor_esi_esi, cmp_cl@@ _0x25, jbe_0x@@ d9, sub_edx@@ _0x61, cmp_dl@@ _0x19, jbe_0xfffffffffffffe@@ 03, test_sil_sil, jne_0xfffffffffffffd@@ fa, cmp_r12b@@ _0x5@@ 3, je_0x2@@ 08, cmp_r12b@@ _0x4@@ 9, je_0x66, cmp_r12b@@ _0x5@@ 4, je_0x2@@ 3c, cmp_r12b@@ _0x4@@ 5, je_0x1@@ 55, cmp_r12b@@ _0x4@@ d, jne_0xfffffffffffffe@@ 2c, test_r13_r13, je_0xfffffffffffffe@@ 23, add_rax_1, mov_qword_ptr_[rbp+0x18]_rax, jmp_0xfffffffffffffe@@ 02, movzx_eax_byte_ptr_[rax+1], mov_rdi_rbp, and_eax_0xffffffdf, cmp_al_0x5@@ 4, jne_0xa4, call_0xffffffffffffd@@ 7a@@ e, mov_rcx_rax, mov_esi_1, test_r13_r13, jne_0x36, mov_rax_qword_ptr_[rbp+0x18], mov_r13_rcx, jmp_0xfffffffffffffd@@ a6, test_r13_r13, je_0xfffffffffffffdd@@ d, add_rax_1, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0xfffffffffffffb@@ 3c, mov_esi_4, mov_rcx_rax, mov_rdx_r13, mov_rdi_rbp, call_0xffffffffffff6d@@ 42, mov_r13_rax, jmp_0xfffffffffffffd@@ 61, mov_ecx_0x1@@ 5, mov_edx_0x4@@ 5, mov_rsi_r15, shr_rsi@@ _cl, and_esi_1, jmp_0xffffffffffffff24, mov_rdx_r13, mov_esi_1, mov_rdi_rbp, call_0xffffffffffff6d@@ 05, mov_r13_rax, jmp_0xfffffffffffffd@@ 24, call_0xffffffffffffe@@ 380, mov_rcx_rax, jmp_0xffffffffffffff62, add_rax_2, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0xffffffffffff70@@ 25, mov_ebx_eax, test_eax_eax, js_0xffffffffffff@@ fd@@ 43, mov_rdi_rbp, call_0xfffffffffffffbb@@ 3, mov_r13_rax, test_rax_rax, je_0x10, mov_eax_dword_ptr_[rax], sub_eax@@ _0x4@@ 6, and_eax_0xfffffffd, jne_0x13@@ 1, mov_eax_dword_ptr_[rbp+0x@@ 28], cmp_eax_dword_ptr_[r@@ bp+0x@@ 2c], jge_0x@@ 11@@ e, movsxd_rcx_eax, add_eax_1, shl_rcx@@ _5, add_rcx_qword_ptr_[r@@ bp+0x20], mov_qword_ptr_[rcx@@ +@@ 4]_0, mov_dword_ptr_[rbp+0x@@ 28]_eax, mov_dword_ptr_[rcx@@ ]_0x4@@ 7, mov_dword_ptr_[rcx+0x1@@ 8]_ebx, mov_qword_ptr_[rcx+0x1@@ 0]_r13, jmp_0xfffffffffffffc@@ 62, mov_qword_ptr_[rbx@@ ]_r13, test_r13_r13, je_0xfffffffffffffc@@ e2, test_r14_r14, je_0x10, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rsp+0x10]@@ _r14, mov_qword_ptr_[r14+0x1@@ 0]_rax, mov_rax_qword_ptr_[rbp+0x18], cmp_byte_ptr_[rax]@@ _0x4@@ 5, jne_0xfffffffffffffc@@ c2, add_rax_1, mov_r12_qword_ptr_[rsp+0x10], mov_qword_ptr_[rbp+0x18]_rax, jmp_0xfffffffffffffc@@ b2, mov_rax_qword_ptr_[r12+0x18], cmp_dword_ptr_[rax]@@ _0x29, jne_0xfffffffffffffc@@ 1f, mov_qword_ptr_[rax+0x10]_0, jmp_0xfffffffffffffc@@ 11, add_rax_2, mov_rdi_rbp, mov_qword_ptr_[rbp+0x18]_rax, call_0xffffffffffff70@@ d5, test_eax_eax, je_0xfffffffffffffc@@ 75, mov_edx_0xe, lea_rsi_[rip+0xb@@ fe@@ 1], mov_rdi_rbp, call_0xffffffffffffd@@ 1c@@ 9, mov_rcx_rax, jmp_0xfffffffffffffb@@ cd, mov_esi_1, mov_rdi_rbp, call_0xffffffffffffd@@ 320, mov_rcx_rax, test_r13_r13, jne_0xfffffffffffffe@@ b5, mov_rax_qword_ptr_[rbp+0x18], mov_r13_rcx, jmp_0xfffffffffffffc@@ 15, mov_rdi_rbp, mov_qword_ptr_[rsp+8]_rcx, call_0xffffffffffff70@@ 7b, mov_rcx_qword_ptr_[rsp+8], test_eax_eax, je_0xfffffffffffffc@@ 16, jmp_0xfffffffffffffb@@ 85, mov_rdi_rbp, call_0xffffffffffff6f@@ 31, mov_rcx_rax, jmp_0xfffffffffffffe@@ 03, xor_ecx_ecx, jmp_0xfffffffffffffb@@ 6e, mov_rdi_rbp, call_0xffffffffffff70@@ 4a, test_eax_eax, jne_0xfffffffffffffe@@ cb, jmp_0xfffffffffffffb@@ e4, call_0xfffffffffffd@@ ea@@ 0@@ 8
push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rax_qword_ptr_[rdi+0x18], movzx_edx_byte_ptr_[rax], cmp_dl@@ _0x4@@ 7, je_0xab, cmp_dl@@ _0x5@@ 4, je_0xa2, mov_ebx_esi, call_0xfffffffffffffa@@ 2a, mov_r12_rax, test_rax_rax, je_0x7f, test_ebx_ebx, je_0x10b, test_byte_ptr_[rbp+0x@@ 10]_1, jne_0x10@@ 1, movabs_rdx@@ _0x1@@ a@@ 00000000@@ 00@@ 1f, mov_esi_1, mov_edi_dword_ptr_[r@@ 12], lea_ecx_[r@@ di-0x@@ 1c], cmp_ecx@@ _0x34, ja_0x1@@ 1, mov_rax_rsi, shl_rax_cl, test@@ _rax_rdx, jne_0x2@@ cb, cmp_edi_2, jne_0x41, mov_rdi_qword_ptr_[r@@ 12+0x18], test_rdi_rdi, je_0x34, movabs_rdx@@ _0x1@@ a@@ 00000000@@ 00@@ 1f, mov_esi_1, mov_eax_dword_ptr_[rdi], lea_ecx_[rax@@ -0x@@ 1c], cmp_ecx@@ _0x34, ja_0x1@@ e, mov_rax_rsi, shl_rax_cl, test@@ _rax_rdx, je_0x13, mov_rdi_qword_ptr_[rdi+0x10], mov_qword_ptr_[r12+0x1@@ 8]_rdi, test_rdi_rdi, jne_0xffffffffffffffdf, xor_r12d_r12d, pop_rbx, mov_rax_r12, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_ecx_dword_ptr_[rbp+0x@@ 48], lea_edx_[r@@ cx+0x1@@ 4], mov_dword_ptr_[rbp+0x@@ 4@@ 8]_edx, movzx_edx_byte_ptr_[rax], cmp_dl@@ _0x5@@ 4, je_0x101, cmp_dl@@ _0x4@@ 7, jne_0xffffffffffffffd8, lea_rdx_[rax+1], mov_qword_ptr_[rbp+0x1@@ 8]_rdx, cmp_byte_ptr_[rax+1]_0, je_0xffffffffffffff@@ ca, lea_rdx_[rax+2], mov_qword_ptr_[rbp+0x1@@ 8]_rdx, movzx_edx_byte_ptr_[rax+1], cmp_dl@@ _0x5@@ 4, je_0x4@@ d9, jg_0x1@@ 13, cmp_dl@@ _0x41, je_0x4@@ aa, cmp_dl@@ _0x5@@ 2, jne_0xffffffffffffffa1, mov_rdi_rbp, call_0xfffffffffffff93@@ c, mov_rdi_rbp, mov_r12_rax, call_0xffffffffffff6d@@ 41, mov_rdx_r12, mov_esi_0x16, mov_rcx_rax, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, pop_r14, jmp_0xffffffffffff@@ 6a@@ 26, mov_rax_qword_ptr_[rbp+0x18], movzx_eax_byte_ptr_[rax], test_al_al, je_0xffffffffffffff@@ 6a, cmp_al_0x4@@ 5, je_0xffffffffffffff@@ 62, mov_rdi_r12, mov_esi_1, movabs_rdx@@ _0x1@@ a@@ 00000000@@ 00@@ 1f, mov_ecx_dword_ptr_[r@@ di], cmp_ecx@@ _4, je_0x3@@ 92, ja_0x1@@ 9c, cmp_ecx_2, jne_0xb, mov_rdi_qword_ptr_[rdi+0x18], test_rdi_rdi, jne_0xffffffffffffffe3, xor_esi_esi, mov_rdi_rbp, call_0xffffffffffffe@@ 4c@@ 3, mov_rcx_rax, test_rax_rax, je_0xffffffffffffff@@ 18, test_ebx_ebx, jne_0x20, cmp_dword_ptr_[r@@ 12@@ ]_2, jne_0x19, cmp_dword_ptr_[rax]@@ _0x29, jne_0x14, mov_qword_ptr_[rax+0x10]_0, mov_rdx_r12, mov_esi_3, jmp_0xffffffffffffff67, lea_rdx_[rax+1], mov_qword_ptr_[rbp+0x1@@ 8]_rdx, cmp_byte_ptr_[rax+1]_0, je_0xfffffffffffffe@@ d4, lea_rdx_[rax+2], mov_qword_ptr_[rbp+0x1@@ 8]_rdx, movzx_eax_byte_ptr_[rax+1], sub_eax@@ _0x41, cmp_al@@ _0x35, ja_0xfffffffffffffe@@ bd, lea_rdx_[rip+0xb@@ 9e@@ 8], movzx_eax_al, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, cmp_dl@@ _0x5@@ 6, je_0x3@@ ed, cmp_dl@@ _0x72, jne_0xfffffffffffffe@@ 94, lea_rdi_[r@@ bp+0x18], call_0xffffffffffff6b@@ 8a, cmp_eax_1, jle_0xfffffffffffffe@@ 82, mov_rdx_qword_ptr_[rbp+0x18], cmp_byte_ptr_[rdx]_0, je_0xfffffffffffffe@@ 75, lea_r10@@ _[rdx+1], mov_qword_ptr_[rbp+0x1@@ 8]_r10, cmp_byte_ptr_[rdx]@@ _0x5f, jne_0xfffffffffffffe@@ 64, lea_r12d@@ _[rax-1], xor_r13d_r13d, movzx_eax_byte_ptr_[r@@ 10], test_al_al, je_0xfffffffffffffe@@ 51, cmp_al_0x2@@ 4, jne_0x2@@ e9, movzx_eax_byte_ptr_[r@@ 10+1], cmp_al_0x5@@ 3, je_0x3@@ cc, cmp_al@@ _0x5f, je_0x3@@ b4, cmp_al_0x2@@ 4, jne_0xfffffffffffffe@@ 2c, mov_edx_0x2@@ 4, mov_rbx_qword_ptr_[r@@ bp+0x18], mov_eax_dword_ptr_[rbp+0x@@ 28], lea_r10_[r@@ bx+2], cmp_eax_dword_ptr_[r@@ bp+0x@@ 2c], jge_0x@@ 3a@@ d, movsxd_rcx_eax, add_eax_1, sub_r12d@@ _2, shl_rcx@@ _5, add_rcx_qword_ptr_[r@@ bp+0x20], mov_qword_ptr_[rcx@@ +@@ 4]_0, mov_dword_ptr_[rbp+0x@@ 28]_eax, mov_dword_ptr_[rcx@@ ]_0x4@@ 1, mov_dword_ptr_[rcx+0x1@@ 0]_edx, mov_qword_ptr_[rbp+0x1@@ 8]_r10, test_r13_r13, je_0x3@@ 50, mov_rdx_r13, mov_esi_0x40, mov_rdi_rbp, call_0xffffffffffff6@@ 87@@ f, mov_r13_rax, test_rax_rax, je_0xfffffffffffffd@@ c4, test_r12d_r12d, jg_0xffffffffffffff@@ 64, xor_ecx_ecx, mov_rdx_r13, mov_esi@@ _0x3f, jmp_0xfffffffffffffe@@ 2a, sub_ecx@@ _0x1c, cmp_ecx@@ _0x34, ja_0xfffffffffffffe@@ 72, mov_rax_rsi, shl_rax_cl, test@@ _rax_rdx, je_0xfffffffffffffe@@ 63, mov_rdi_qword_ptr_[rdi+0x10], jmp_0xfffffffffffffe@@ 54, mov_r12_qword_ptr_[r@@ 12+0x10], jmp_0xfffffffffffffd@@ 1b, mov_rdx_qword_ptr_[r@@ di+0x10], test_rdx_rdx, je_0x29, mov_eax_dword_ptr_[rdx], cmp_eax_8, ja_0x3@@ 2, cmp_eax_6, ja_0xfffffffffffffc@@ 75, sub_eax_1, cmp_eax_1, ja_0x1@@ 1, mov_rdx_qword_ptr_[rdx+0x18], test_rdx_rdx, jne_0xffffffffffffffe1, mov_esi_1, jmp_0xfffffffffffffc@@ 55, xor_esi_esi, cmp_eax@@ _0x35, setne_sil, jmp_0xfffffffffffffc@@ 41, mov_ebx_1, jmp_0x1f, movzx_eax_byte_ptr_[r@@ 10+r@@ bx], lea_rdx_[r@@ bx+1], cmp_al_0x2@@ 4, je_0x11, test_al_al, je_0xd, mov_rbx_rdx, mov_r14d_ebx, cmp_r12d_ebx, jg_0xffffffffffffff@@ e6, mov_rsi_r10, mov_edx_r14d, mov_rdi_rbp, sub_r12d@@ _r14d, call_0xffffffffffffc@@ bb8, add_rbx_qword_ptr_[r@@ bp+0x18], mov_qword_ptr_[rbp+0x1@@ 8]_rbx, mov_rcx_rax, mov_r10@@ _rbx, test_rax_rax, jne_0xfffffffffffffd@@ 2f, jmp_0xfffffffffffffb@@ 0c, xor_esi_esi, mov_rdi_rbp, call_0xfffffffffffffa@@ 4b, xor_ecx_ecx, mov_esi_0x1@@ 7, mov_rdx_rax, jmp_0xfffffffffffffb@@ 6b, xor_esi_esi, cmp_byte_ptr_[rax+@@ 2]_0, mov_rdi_rbp, je_0x10, lea_rdx_[rax@@ +3], mov_qword_ptr_[rbp+0x1@@ 8]_rdx, cmp_byte_ptr_[rax+@@ 2]@@ _0x6e, je_0x6c, call_0xfffffffffffffa@@ 17, xor_ecx_ecx, mov_esi_0x4@@ 9, mov_rdx_rax, jmp_0xfffffffffffffb@@ 37, mov_rdi_rbp, call_0xfffffffffffff44@@ d, xor_ecx_ecx, mov_esi_0x1@@ 3, mov_rdx_rax, jmp_0xfffffffffffffb@@ 1d, mov_r13_rcx, jmp_0xfffffffffffffc@@ cf, mov_edx_0x2@@ e, jmp_0xfffffffffffffc@@ 5a, mov_edx_0x2@@ f, jmp_0xfffffffffffffc@@ 4a, mov_qword_ptr_[rbp+0x1@@ 8]_r10, jmp_0xfffffffffffffa@@ 62, call_0xfffffffffffff9a@@ d, xor_ecx_ecx, mov_esi_0x4@@ a, mov_rdx_rax, jmp_0xfffffffffffffa@@ c@@ d
endbr64, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rax_qword_ptr_[rdi+0x18], mov_ebx_esi, movzx_edx_byte_ptr_[rax], cmp_dl@@ _0x5f, je_0x39, test_esi_esi, jne_7, cmp_dl@@ _0x5@@ a, je_0x10, xor_r12d_r12d, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret, add_rax_1, pop_rbx, mov_rdi_rbp, xor_esi_esi, mov_qword_ptr_[rbp+0x18]_rax, pop_rbp, pop_r12, jmp_0xfffffffffffff94@@ f, lea_rdx_[rax+1], mov_qword_ptr_[rdi+0x1@@ 8]_rdx, cmp_byte_ptr_[rax+1]@@ _0x5@@ a, jne_0xffffffffffffffc6, add_rax_2, mov_qword_ptr_[rdi+0x1@@ 8]_rax, call_0xfffffffffffff92@@ a, mov_r12_rax, test_ebx_ebx, je_0xffffffffffffff@@ b5, test_byte_ptr_[rbp+0x@@ 10]_1, je_0xffffffffffffff@@ af, mov_rsi_qword_ptr_[rbp+0x18], cmp_byte_ptr_[rsi@@ ]@@ _0x2e, jne_0xffffffffffffff@@ 9e, movzx_eax_byte_ptr_[r@@ si+1], lea_edx_[rax-0x@@ 61], cmp_dl@@ _0x19, jbe_0x@@ 85, cmp_al@@ _0x5f, je_0x7d, sub_eax_0x30, cmp_al_9, ja_0xffffffffffffff@@ 83, movzx_eax_byte_ptr_[rsi], mov_rdx_rsi, cmp_al_0x2e, jne_0x3b, movzx_eax_byte_ptr_[rdx+1], sub_eax_0x30, cmp_al_9, ja@@ _0x2e, movzx_eax_byte_ptr_[rdx+2], lea_rcx_[rdx+2], lea_edx_[rax@@ -0x30], cmp_dl_9, ja_0x1@@ 7, movzx_eax_byte_ptr_[r@@ cx+1], add_rcx_1, lea_edx_[rax@@ -0x30], cmp_dl_9, jbe_0xffffffffffff@@ fff@@ 2, mov_rdx_rcx, cmp_al_0x2e, je_0xffffffffffffffcb, mov_qword_ptr_[rbp+0x1@@ 8]_rdx, mov_rdi_rbp, sub_rdx_rsi, call_0xffffffffffffc@@ 9d@@ f, mov_rdx_r12, mov_esi_0x4@@ e, mov_rdi_rbp, mov_rcx_rax, call_0xffffffffffff6@@ 3e@@ c, mov_r12_rax, jmp_0xffffffffffffff74, movzx_eax_byte_ptr_[r@@ si+2], lea_rdx_[r@@ si+2], lea_ecx_[rax@@ -0x@@ 61], cmp_cl@@ _0x19, ja_0x1@@ a, movzx_eax_byte_ptr_[rdx+1], add_rdx_1, lea_ecx_[rax@@ -0x@@ 61], cmp_cl@@ _0x19, jbe_0xffffffffffff@@ fff@@ 2, cmp_al@@ _0x5f, je_0xffffffffffffffee, jmp_0xffffffffffffff6@@ 6
push_r12, push_rbp, push_rbx, mov_rax_qword_ptr_[rdi+0x18], cmp_byte_ptr_[rax]@@ _0x4@@ c, jne_0x70, lea_rdx_[rax+1], mov_rbx_rdi, mov_qword_ptr_[rdi+0x1@@ 8]_rdx, movzx_eax_byte_ptr_[rax+1], cmp_al@@ _0x5f, je_0x72, cmp_al_0x5@@ a, je_0x6e, call_0xffffffffffffcd@@ 9c, mov_r12_rax, test_rax_rax, je_0x4c, cmp_dword_ptr_[rax]@@ _0x27, mov_r8_qword_ptr_[r@@ bx+0x18], je_0x88, movzx_ecx_byte_ptr_[r@@ 8], mov_ebp@@ _0x3d, cmp_cl@@ _0x6e, je_0xc6, cmp_cl@@ _0x4@@ 5, je_0x1@@ 10, lea_rax_[r@@ 8+1], jmp_0x1a, mov_qword_ptr_[rbx+0x18]_rax, mov_rdx_rax, movzx_ecx_byte_ptr_[rax], add_rax_1, cmp_cl@@ _0x4@@ 5, je_0xbf, test_cl_cl, jne_0xffffffffffffffe7, xor_r12d_r12d, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret, xor_esi_esi, mov_rdi_rbx, call_0xfffffffffffffe@@ 1b, mov_r12_rax, mov_rax_qword_ptr_[rbx+0x18], cmp_byte_ptr_[rax]@@ _0x4@@ 5, jne_0xffffffffffffffd7, add_rax_1, mov_qword_ptr_[rbx+0x18]_rax, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret, mov_rax_qword_ptr_[rax+0x10], mov_edx_dword_ptr_[r@@ ax+0x1c], test_edx_edx, je_8, mov_edx_dword_ptr_[rax+8], sub_dword_ptr_[r@@ bx+0x@@ 4@@ 8]_edx, mov_rsi_qword_ptr_[rax], mov_ecx_0x1@@ 2, lea_rdi_[rip+0xb@@ 6c@@ 8], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], movzx_ecx_byte_ptr_[r@@ 8], seta_al, sbb_al_0, test_al_al, jne_0xffffffffffffff@@ 55, cmp_cl@@ _0x4@@ 5, je_0x60, mov_ebp@@ _0x3d, cmp_cl@@ _0x6e, jne_0xffffffffffffff@@ 59, lea_rax_[r@@ 8+1], mov_ebp@@ _0x3e, mov_qword_ptr_[rbx+0x18]_rax, movzx_ecx_byte_ptr_[r@@ 8+1], mov_r8_rax, jmp_0xffffffffffffff2b, sub_edx@@ _r8d, mov_rsi_r8, mov_rdi_rbx, call_0xffffffffffffc@@ 84@@ 7, mov_rdx_r12, mov_esi_ebp, mov_rdi_rbx, mov_rcx_rax, call_0xffffffffffff6@@ 25@@ 7, mov_r12_rax, jmp_0xffffffffffffff4c, add_r8_1, mov_qword_ptr_[rbx+0x1@@ 8]_r8, jmp_0xffffffffffffff20, xor_edx_edx, jmp_0xffffffffffffffc@@ e
endbr64, push_rbp, mov_r8d_edi, mov_r9_rsi, mov_rbp_rsp, push_r12, push_rbx, lea_r12_[r@@ bp-0x@@ 190], mov_rdi_r12, sub_rsp_0x1@@ 80, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x18]_rax, xor_eax_eax, mov_byte_ptr_[rbp-0x@@ 88]_0, mov_qword_ptr_[rbp-0x9@@ 0]_0, mov_qword_ptr_[rbp-0x8@@ 0]_rdx, mov_qword_ptr_[rbp-0x7@@ 8]_rcx, mov_qword_ptr_[rbp-0x7@@ 0]_0, mov_qword_ptr_[rbp-0x@@ 68]_0, mov_qword_ptr_[rbp-0x6@@ 0]_0, mov_qword_ptr_[rbp-0x5@@ 8]_0, mov_qword_ptr_[rbp-0x5@@ 0]_0, mov_qword_ptr_[rbp-0x4@@ 8]_0, mov_qword_ptr_[rbp-0x4@@ 0]_0, mov_qword_ptr_[rbp-0x3@@ 8]_0, mov_qword_ptr_[rbp-0x30]_0, mov_qword_ptr_[rbp-0x28]_0, call_0xffffffffffff6@@ 26@@ 5, cmp_dword_ptr_[rbp-0x@@ 5c]@@ _0x7@@ ff, jg@@ _9, mov_dword_ptr_[rbp-0x@@ 5c]_0, movsxd_rax@@ _dword_ptr_[rbp-0x@@ 34], mov_edx_dword_ptr_[rbp-0x24], mov_ecx_1, mov_rdi_rsp, mov_qword_ptr_[rbp-0x20]_0, mov_rbx_rsp, imul_edx@@ _eax, test_eax_eax, cmovle@@ _rax@@ _rcx, shl_rax_4, mov_dword_ptr_[rbp-0x2@@ 4]_edx, mov_rcx_rax, and_rcx@@ _0xffffffffffff@@ f000, sub_rdi@@ _rcx, mov_rcx_rdi, cmp_rsp@@ _rcx, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rcx, jne_0xffffffffffffffed, and_eax@@ _0xfff, sub_rsp_rax, test_rax_rax, jne_0x@@ b1, test_edx_edx, mov_eax_1, mov_rsi_rsp, mov_rcx_rsp, cmovle@@ _edx_eax, movsxd_rdx_edx, shl_rdx_4, mov_rax_rdx, and_rax@@ _0xffffffffffff@@ f000, sub_rsi_rax, mov_rax_rsi, cmp_rsp@@ _rax, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rax, jne_0xffffffffffffffed, and_edx@@ _0xfff, sub_rsp@@ _rdx, test_rdx_rdx, jne_0x6f, mov_rdx_r9, mov_esi_r8d, mov_rdi_r12, mov_qword_ptr_[rbp-0x40]_rcx, mov_qword_ptr_[rbp-0x3@@ 0]@@ _rsp, call_0xffffffffffffac@@ 7c, mov_rdi_r12, mov_rdx_qword_ptr_[rbp-0x78], mov_r@@ sp@@ _rbx, mov_rsi_qword_ptr_[rbp-0x@@ 90], mov_byte_ptr_[rbp+r@@ si-0x@@ 19@@ 0]_0, call@@ _qword_ptr_[rbp-0x@@ 80], mov_edx_dword_ptr_[rbp-0x@@ 60], xor_eax_eax, test_edx_edx, sete_al, mov_rbx_qword_ptr_[rbp-0x18], xor_rbx_qword_ptr_fs:[0x28], jne_0x2c, lea_rsp_[rbp-0x@@ 10], pop_rbx, pop_r12, pop_rbp, ret, or_qword_ptr_[r@@ sp@@ +rax@@ -8]_0, jmp_0xffffffffffffff4f, or_qword_ptr_[r@@ sp@@ +rdx@@ -8]_0, jmp_0xffffffffffffff8d, call_0xfffffffffffdd@@ ef@@ 8
endbr64, push_r12, movsxd_rdx_edx, push_rbp, mov_ebp_edi, push_rbx, mov_rbx_rcx, sub_rsp_0x40, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_dword_ptr_[rsp+0x28]_0, mov_qword_ptr_[rsp+0x10]_0, mov_qword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rsp+0x20]_0, test_rdx_rdx, jne_0x56, lea_rcx_[rsp+0x10], lea_rdx_[rip-0x@@ 9@@ 9c@@ 8], mov_edi_ebp, call_0xfffffffffffffd@@ c6, test_eax_eax, je_0x7f, mov_edx_dword_ptr_[rsp+0x28], mov_eax_1, test_edx_edx, je_0x2a, mov_qword_ptr_[rbx]_rax, mov_rax_qword_ptr_[rsp+0x10], mov_rbx_qword_ptr_[rsp+0x38], xor_rbx_qword_ptr_fs:[0x28], jne_0x6f, add_rsp_0x40, pop_rbx, pop_rbp, pop_r12, ret, mov_rax_qword_ptr_[rsp+0x20], jmp_0xffffffffffffffd3, mov_r12d_2, cmp_rdx@@ _2, jbe_0x@@ e, add_r12@@ _r12, cmp_rdx@@ _r12, ja@@ _0xfffffffffffffffa, mov_rdi_r12, mov_qword_ptr_[rsp+8]_rsi, call_0xfffffffffffd@@ e0@@ b0, mov_rsi_qword_ptr_[rsp+8], test_rax_rax, je_0x2d, mov_qword_ptr_[rsp+0x10]_rax, mov_qword_ptr_[rsp+0x20]@@ _r12, jmp_0xffffffffffffff73, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffdd@@ ca@@ b, mov_qword_ptr_[rbx]_0, xor_eax_eax, jmp_0xffffffffffffff85, call_0xfffffffffffdd@@ d@@ fb, mov_dword_ptr_[rsp+0x28]_1, jmp_0xffffffffffffff4@@ a
endbr64, lea_rax_[r@@ di+rdx], mov_qword_ptr_[rcx@@ ]_rdi, mov_qword_ptr_[rcx@@ +8]_rax, lea_eax_[rdx@@ +rdx], mov_dword_ptr_[rcx+0x1@@ 0]_esi, mov_qword_ptr_[rcx+0x1@@ 8]_rdi, mov_dword_ptr_[rcx+0x@@ 2c]_eax, mov_dword_ptr_[rcx+0x@@ 28]_0, mov_dword_ptr_[rcx+0x@@ 3@@ c]_edx, mov_dword_ptr_[rcx+0x@@ 38]_0, mov_qword_ptr_[rcx+0x@@ 40]_0, mov_qword_ptr_[rcx+0x@@ 48]_0, mov_qword_ptr_[rcx+0x@@ 50]_0, ret
push_rbp, mov_rbp_rsp, push_r15, mov_r15_rcx, push_r14, push_r13, mov_r13d_esi, push_r12, mov_r12_rdi, push_rbx, sub_rsp_0x78, mov_qword_ptr_[rbp-0x9@@ 8]_rdx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x38]_rax, xor_eax_eax, cmp_byte_ptr_[rdi]@@ _0x5f, je_0x2@@ 3d, mov_ecx_8, lea_rdi_[rip+0xb@@ 2c@@ 5], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x3f, movzx_eax_byte_ptr_[r@@ 12+8], sub_eax@@ _0x24, cmp_al@@ _0x3b, ja_0x3@@ 2, movabs_rdx@@ _0x800000000@@ 000@@ 401, bt@@ _rdx_rax, jae_0x@@ 22, movzx_eax_byte_ptr_[r@@ 12+@@ 9], cmp_al@@ _0x44, je_0x2@@ 10, cmp_al_0x4@@ 9, je_0x2@@ 08, xor_r14d_r14d, test_r13b@@ _0x10, je_0x1@@ ac, mov_rdi_r12, lea_rbx_[r@@ bp-0x@@ 90], call_0xfffffffffffdd@@ cd@@ 9, mov_rcx_rbx, mov_esi_r13d, mov_rdi_r12, mov_rdx_rax, call_0xfffffffffffffe@@ f8, movsxd_rax@@ _dword_ptr_[rbp-0x@@ 64], test_r13d@@ _0x40000, je_0x1@@ 70, shl_rax_5, mov_rcx_rsp, mov_r12_rsp, mov_rdx_rax, and_rdx@@ _0xffffffffffff@@ f000, sub_rcx_rdx, mov_rdx_rcx, cmp_rsp@@ _rdx, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rdx, jne_0xffffffffffffffed, and_eax@@ _0xfff, sub_rsp_rax, test_rax_rax, je_8, or_qword_ptr_[r@@ sp@@ +rax@@ -8]_0, movsxd_rax@@ _dword_ptr_[rbp-0x@@ 54], mov_rdi_rsp, mov_rcx_rsp, lea_rax_[rax@@ *8+0x@@ f], mov_rdx_rax, and_rax@@ _0xffffffffffff@@ f000, sub_rdi_rax, and_rdx@@ _0xfffffffffffffff0, mov_rax_rdi, cmp_rsp@@ _rax, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rax, jne_0xffffffffffffffed, and_edx@@ _0xfff, sub_rsp@@ _rdx, test_rdx_rdx, jne_0x1@@ 80, mov_qword_ptr_[rbp-0x7@@ 0]_rcx, mov_qword_ptr_[rbp-0x6@@ 0]@@ _rsp, cmp_r14d_1, je_0x1@@ 3e, lea_eax_[r@@ 14@@ -2], cmp_eax_1, ja_0x1@@ 49, mov_rax_qword_ptr_[rbp-0x78], lea_rsi_[rax+0x@@ b], mov_qword_ptr_[rbp-0x7@@ 8]_rsi, cmp_byte_ptr_[rax+0x@@ b@@ ]@@ _0x5f, jne_0xc, cmp_byte_ptr_[rax+0x@@ c]@@ _0x5@@ a, je_0x1@@ 55, mov_rdi_rsi, mov_qword_ptr_[rbp-0xa@@ 0]_rsi, call_0xfffffffffffdd@@ bd@@ 5, mov_rsi_qword_ptr_[rbp-0x@@ a0], mov_rdi_rbx, mov_rdx_rax, call_0xffffffffffffc@@ 3@@ 13, mov_rdx_rax, xor_esi_esi, cmp_r14d_2, mov_rdi_rbx, setne_sil, xor_ecx_ecx, add_esi@@ _0x44, call_0xffffffffffff5d@@ 19, mov_rdx_qword_ptr_[rbp-0x78], mov_rbx_rax, mov_rdi_rdx, mov_qword_ptr_[rbp-0xa@@ 0]_rdx, call_0xfffffffffffdd@@ b@@ 93, mov_rdx_qword_ptr_[rbp-0x@@ a0], add_rdx_rax, mov_qword_ptr_[rbp-0x7@@ 8]_rdx, test_r13b@@ _1, je_0xd, mov_rdx_qword_ptr_[rbp-0x78], xor_eax_eax, cmp_byte_ptr_[rdx]_0, jne_0x1e, xor_eax_eax, test_rbx_rbx, je_0x17, mov_rdx_qword_ptr_[rbp-0x98], mov_rcx_r15, mov_rsi_rbx, mov_edi_r13d, call_0xfffffffffffffa@@ 98, mov_r@@ sp@@ _r12, jmp_0x15, cmp_eax@@ _0x800, jbe_0xfffffffffffffe@@ 91, xor_eax_eax, mov_rbx_qword_ptr_[rbp-0x@@ 38], xor_rbx_qword_ptr_fs:[0x28], jne_0xb8, lea_rsp_[rbp-0x28], pop_rbx, pop_r12, pop_r13, pop_r14, pop_r15, pop_rbp, ret, cmp_byte_ptr_[rdi+@@ 1]@@ _0x5@@ a, jne_0xfffffffffffffd@@ c5, mov_r14d_1, jmp_0xfffffffffffffe@@ 1d, cmp_byte_ptr_[r@@ 12+0x@@ a]@@ _0x5f, jne_0xfffffffffffffe@@ 02, xor_r14d_r14d, cmp_al_0x4@@ 9, setne@@ _r14b, add_r14d@@ _2, jmp_0xfffffffffffffd@@ fc, mov_rdi_rbx, mov_esi_1, call_0xfffffffffffff7@@ 48, mov_rbx_rax, jmp_0xffffffffffffff40, mov_rdi_rbx, call_0xffffffffffffc@@ 64@@ 5, mov_rbx_rax, jmp_0xffffffffffffff2d, or_qword_ptr_[r@@ sp@@ +rdx@@ -8]_0, jmp_0xfffffffffffffe@@ 80, add_rax@@ _0xd, xor_esi_esi, mov_rdi_rbx, mov_qword_ptr_[rbp-0x78]_rax, call_0xfffffffffffff0@@ 93, mov_rdx_rax, jmp_0xfffffffffffffe@@ c0, call_0xfffffffffffdd@@ a8@@ 6
push_rbx, mov_rbx_rdx, lea_rdx_[rip-0x@@ 9d@@ eb], sub_rsp_0x30, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_rcx_rsp, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0x18]_0, call_0xfffffffffffffc@@ ac, test_eax_eax, je_0x45, mov_edx_dword_ptr_[rsp+0x18], mov_eax_1, test_edx_edx, je_0x28, mov_qword_ptr_[rbx]_rax, mov_rax_qword_ptr_[rsp], mov_rbx_qword_ptr_[rsp+0x28], xor_rbx_qword_ptr_fs:[0x28], jne_0x35, add_rsp_0x30, pop_rbx, ret, mov_rax_qword_ptr_[rsp+0x10], jmp_0xffffffffffffffd5, mov_rdi_qword_ptr_[rsp], call_0xfffffffffffdd@@ 88@@ c, mov_qword_ptr_[rbx]_0, xor_eax_eax, jmp_0xffffffffffffffbf, call_0xfffffffffffdd@@ 9d@@ c
push_rbp, mov_rbp_rsp, push_r14, push_r13, lea_r14_[r@@ bp-0x@@ 80], mov_r13_rsi, push_r12, mov_r12_rdi, push_rbx, mov_rbx_rdx, sub_rsp_0x60, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x28]_rax, xor_eax_eax, mov_dword_ptr_[rsi@@ ]_0, mov_dword_ptr_[rdx@@ ]_0, call_0xfffffffffffdd@@ 98@@ 9, mov_rcx_r14, mov_esi_0x4000, mov_rdi_r12, mov_rdx_rax, call_0xfffffffffffffb@@ a6, movsxd_rax@@ _dword_ptr_[rbp-0x@@ 54], mov_rcx_rsp, shl_rax_5, mov_rdx_rax, and_rdx@@ _0xffffffffffff@@ f000, sub_rcx_rdx, mov_rdx_rcx, cmp_rsp@@ _rdx, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rdx, jne_0xffffffffffffffed, and_eax@@ _0xfff, sub_rsp_rax, test_rax_rax, jne_0xa1, movsxd_rax@@ _dword_ptr_[rbp-0x@@ 44], mov_rsi_rsp, mov_rcx_rsp, lea_rax_[rax@@ *8+0x@@ f], mov_rdx_rax, and_rax@@ _0xffffffffffff@@ f000, sub_rsi_rax, and_rdx@@ _0xfffffffffffffff0, mov_rax_rsi, cmp_rsp@@ _rax, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rax, jne_0xffffffffffffffed, and_edx@@ _0xfff, sub_rsp@@ _rdx, test_rdx_rdx, jne_0xa8, mov_esi_1, mov_rdi_r14, mov_qword_ptr_[rbp-0x6@@ 0]_rcx, mov_qword_ptr_[rbp-0x5@@ 0]@@ _rsp, call_0xfffffffffffff54@@ a, test_rax_rax, je_0x14, mov_edx_dword_ptr_[rax], cmp_edx@@ _7, je_0x4b, ja_0x6@@ 9, cmp_edx_2, ja_0x5@@ 4, test_edx_edx, jne_0x30, xor_eax_eax, mov_rbx_qword_ptr_[rbp-0x@@ 28], xor_rbx_qword_ptr_fs:[0x28], jne_0x72, lea_rsp_[rbp-0x@@ 20], pop_rbx, pop_r12, pop_r13, pop_r14, pop_rbp, ret, or_qword_ptr_[r@@ sp@@ +rax@@ -8]_0, jmp_0xffffffffffffff5f, mov_rax_qword_ptr_[rax+0x18], test_rax_rax, je_0xffffffffffffffcd, mov_edx_dword_ptr_[rax], cmp_edx@@ _7, jne_0xffffffffffffffb9, mov_eax_dword_ptr_[rax+0x10], mov_dword_ptr_[r13]_eax, mov_eax_1, jmp_0xffffffffffffffb8, sub_edx@@ _3, cmp_edx_1, ja_0xffffffffffffff@@ ac, mov_rax_qword_ptr_[rax+0x10], jmp_0xffffffffffffffd8, cmp_edx@@ _8, jne_0xffffffffffffff9f, mov_eax_dword_ptr_[rax+0x10], mov_dword_ptr_[rbx]_eax, mov_eax_1, jmp_0xffffffffffffff95, or_qword_ptr_[r@@ sp@@ +rdx@@ -8]_0, jmp_0xffffffffffffff58, call_0xfffffffffffdd@@ 83@@ d
endbr64, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_rdx_rsp, call_0xfffffffffffffd@@ 95, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_7, add_rsp_0x18, ret, call_0xfffffffffffdd@@ 7f@@ b
endbr64, jmp_0xfffffffffffffa@@ 5@@ c
endbr64, sub_rsp_0x18, mov_esi_0x2@@ 5, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_rdx_rsp, call_0xfffffffffffffd@@ 40, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_7, add_rsp_0x18, ret, call_0xfffffffffffdd@@ 7a@@ 6
endbr64, mov_rcx_rdx, mov_rdx_rsi, mov_esi_0x2@@ 5, jmp_0xfffffffffffffa@@ 0@@ 1
endbr64, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, lea_rdx_[rsp+4], mov_rsi_rsp, call_0xfffffffffffffd@@ 90, test_eax_eax, mov_eax_0, cmovne_eax@@ _dword_ptr_[r@@ sp], mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_7, add_rsp_0x18, ret, call_0xfffffffffffdd@@ 73@@ b
endbr64, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, lea_rdx_[rsp+4], mov_rsi_rsp, call_0xfffffffffffffd@@ 40, test_eax_eax, mov_eax_0, cmovne_eax@@ _dword_ptr_[r@@ sp+4], mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_7, add_rsp_0x18, ret, call_0xfffffffffffdd@@ 6e@@ a
lea_r8_[rip+0x@@ b7@@ 29], movzx_eax_byte_ptr_[rdi], test_byte_ptr_[r@@ 8@@ +rax*2@@ ]_4, je_0x55, mov_qword_ptr_[rsi]_0, movzx_edx_byte_ptr_[rdi], test_byte_ptr_[r@@ 8@@ +rdx*2@@ ]_4, je_0x40, xor_edx_edx, lea_rdx_[rdx@@ +rdx*4], add_rdi_1, lea_rax_[rdx@@ +rdx], mov_qword_ptr_[rsi]_rax, movsx_edx_byte_ptr_[r@@ di-1], sub_edx@@ _0x30, movsxd_rdx_edx, add_rdx_rax, mov_qword_ptr_[rsi@@ ]_rdx, movzx_ecx_byte_ptr_[r@@ di], test_byte_ptr_[r@@ 8@@ +rcx*@@ 2@@ ]_4, jne_0xffffffffffffffd9, test_cl_cl, je_0x11, test_rdx_rdx, js@@ _0xc, mov_rax_rdi, ret, test_dl_dl, jne_0xfffffffffffffff@@ 8, xor_eax_eax, ret
push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rdi_qword_ptr_[rdi], test_rdi_rdi, je_0x53, mov_rax_qword_ptr_[rbp+8], mov_rdx_qword_ptr_[rbp+0x10], movsxd_rcx@@ _esi, sub_rdx_rax, cmp_rdx_rcx, jl@@ _0x10, pop_rbx, pop_rbp, pop_r12, ret, sub_rax_rdi, lea_ebx_[r@@ si+rax], mov_r12_rax, add@@ _ebx_ebx, movsxd_r12_r12d, movsxd_rbx_ebx, mov_rsi_rbx, call_0x2@@ dd@@ c, add_r12_rax, mov_qword_ptr_[rbp]_rax, add_rax_rbx, pop_rbx, mov_qword_ptr_[rbp+@@ 8]_r12, mov_qword_ptr_[rbp+0x10]_rax, pop_rbp, pop_r12, ret, cmp_esi@@ _0x20, mov_ebx@@ _0x20, cmovl@@ _esi@@ _ebx, movsxd_rbx@@ _esi, mov_rdi_rbx, call_0x2d@@ 2f, mov_qword_ptr_[rbp]_rax, mov_qword_ptr_[rbp+8]_rax, add_rax_rbx, pop_rbx, mov_qword_ptr_[rbp+0x10]_rax, pop_rbp, pop_r12, ret
push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, mov_rdi_rsi, push_rbx, call_0xfffffffffffdd@@ 5c3, mov_rdi_rbp, mov_rbx_rax, mov_esi_eax, call_0xffffffffffffff@@ 56, movsxd_rbx_ebx, mov_rdi_qword_ptr_[rbp+8], mov_rsi_r12, mov_rdx_rbx, call_0xfffffffffffdd@@ 7b@@ 4, add_qword_ptr_[r@@ bp+@@ 8]_rbx, pop_rbx, pop_rbp, pop_r12, ret
push_r12, push_rbp, push_rbx, movzx_edx_byte_ptr_[rsi], test_dl_dl, je_0x3c, mov_rbp_rdi, mov_r12_rsi, lea_rbx_[rip+0x@@ a@@ ea@@ 6], cmp_dl@@ _0x78, je_0x75, jg@@ _0x33, cmp_dl@@ _0x4@@ e, je_0x4e, cmp_dl@@ _0x4@@ f, jne_0x41, lea_rsi_[rip+0xa@@ e8@@ 6], mov_rdi_rbp, add_r12_1, call_0xffffffffffffff@@ 89, movzx_edx_byte_ptr_[r@@ 12], test_dl_dl, jne_0xffffffffffffffd5, xor_r12d_r12d, jmp_0x20, cmp_dl@@ _0x7@@ 9, jne_0x15, lea_rsi_[rip+0xa@@ e4@@ f], mov_rdi_rbp, add_r12_1, call_0xffffffffffffff@@ 5d, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret, cmp_byte_ptr_[r12+@@ 1]@@ _0x6@@ 7, jne_0xffffffffffffffcf, mov_rsi_rbx, mov_rdi_rbp, add_r12@@ _2, call_0xffffffffffffff@@ 3e, jmp_0xffffffffffffffb5, add_r12_1, mov_rdi_rbp, lea_rsi_[rip+0xa@@ 9d@@ 6], call_0xffffffffffffff@@ 22, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret
push_r12, test_rsi_rsi, je_0x24, movzx_eax_byte_ptr_[rsi], test_al_al, je_0x1d, sub_eax@@ _0x4@@ 6, cmp_al@@ _0x13, ja@@ _0x16, lea_rdx_[rip+0xa@@ fe@@ 8], movzx_eax_al, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, xor_r12d_r12d, mov_rax_r12, pop_r12, ret
push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, cmp_byte_ptr_[rsi@@ ]_0x4@@ e, jne_0x2b, mov_rbp_rdi, lea_r12_[rip+0x@@ af@@ 8b], movzx_eax_byte_ptr_[r@@ si+1], mov_r13_rsi, sub_eax@@ _0x61, cmp_al@@ _0xb, ja_0x1@@ 66, movzx_eax_al, movsxd_rax_dword_ptr_[r@@ 12@@ +rax*4], add_rax_r12, jmp_rax, mov_r13_rsi, add_rsp_8, mov_rax_r13, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, xor_r13d_r13d, jmp_0xfffffffffffffea@@ d
push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, mov_rdi_rsi, push_rbx, call_0xfffffffffffdd@@ 28@@ 3, test_eax_eax, jne_0xc, pop_rbx, pop_rbp, pop_r12, ret, mov_esi_eax, mov_rdi_rbp, mov_rbx_rax, call_0xfffffffffffffc0@@ 8, mov_rax_qword_ptr_[rbp+8], mov_rdi_qword_ptr_[rbp], movsxd_rbx_ebx, sub_rax_1, cmp_rax_rdi, jb_0x1@@ d, movzx_edx_byte_ptr_[rax], sub_rax_1, mov_byte_ptr_[rax+r@@ bx+@@ 1]_dl, mov_rdi_qword_ptr_[rbp], cmp_rax_rdi, jae_0xffffffffffffff@@ ee, mov_rdx_rbx, mov_rsi_r12, call_0xfffffffffffdd@@ 4@@ 3e, add_qword_ptr_[r@@ bp+@@ 8]_rbx, pop_rbx, pop_rbp, pop_r12, ret
push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, movsxd_rbx@@ _edx, mov_esi_ebx, call_0xfffffffffffffbb@@ 1, mov_rdi_qword_ptr_[rbp+8], mov_rdx_rbx, mov_rsi_r12, call_0xfffffffffffdd@@ 4@@ 12, add_qword_ptr_[r@@ bp+@@ 8]_rbx, pop_rbx, pop_rbp, pop_r12, ret
push_r12, push_rbp, mov_rbp_rdi, mov_rdi_rsi, push_rbx, mov_ebx_edx, sub_rsp_0x30, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_eax_edx, and_eax_0xfffffffd, cmp_al_0x7@@ 5, je_0x79, cmp_dl@@ _0x61, je_0x74, cmp_dl@@ _0x62, je_0x2@@ 67, lea_rsi_[rip+0xb@@ 2@@ 12], movzx_eax_byte_ptr_[rdi], test_byte_ptr_[rsi@@ +rax*2@@ ]_4, je_0x2@@ 93, mov_ecx_1, mov_r12_rdi, sub_rcx_rdi, lea_rdx_[r@@ 12@@ +rcx], movzx_eax_byte_ptr_[r@@ 12+1], add_r12_1, test_byte_ptr_[rsi@@ +rax*2@@ ]_4, jne_0xffffffffffffffee, test_edx_edx, jne_0x14@@ 2, sub_ebx@@ _0x68, cmp_bl@@ _0xc, ja_0x1@@ 13, lea_rdx_[rip+0xa@@ d0@@ 5], movzx_ebx@@ _bl, movsxd_rax_dword_ptr_[r@@ dx+r@@ bx*4], add_rax_rdx, jmp_rax, lea_rsi_[rsp+8], call_0xfffffffffffffa@@ 7b, mov_r12_rax, test_rax_rax, je_0xe5, lea_rsi_[rip+0x4@@ 54@@ f], mov_rdi_rbp, call_0xfffffffffffffb@@ 60, cmp_bl@@ _0x61, je_0x1@@ 40, cmp_bl@@ _0x7@@ 7, je_0x1@@ 87, jg_0x1@@ a9, cmp_bl@@ _0x7@@ 5, jne_0x1@@ a0, lea_rsi_[rip+0x@@ aa@@ cf], mov_rdi_rbp, call_0xfffffffffffffb@@ 30, mov_rdx_qword_ptr_[rsp+8], mov_eax_4, test_rdx_rdx, jle_0x@@ 1d@@ e, mov_ecx_0x1@@ 3, lea_r9_[r@@ sp+0x10], lea_r10d@@ _[rax@@ -0x@@ 14], mov_rdi_rdx, mov_eax_ecx, and_edi@@ _0xf, cmp_rdi@@ _0xa, lea_r8d_[r@@ di+0x@@ 57], lea_esi_[r@@ di+0x30], cmovge@@ _esi@@ _r8d, mov_byte_ptr_[r@@ 9@@ +rcx@@ ]_sil, lea_esi_[r@@ 10@@ +rcx], sub_rcx_1, sar_rdx@@ _4, jne_0xffffffffffffffd9, mov_qword_ptr_[rsp+8]_0, test_esi_esi, jle_0x@@ 1d, movsxd_rdx_eax, mov_edi_esi, add_rdx@@ _r9, sub_edi@@ _edx, mov_byte_ptr_[rdx@@ -1]@@ _0x30, sub_rdx_1, lea_ecx_[r@@ di+rdx], test_ecx_ecx, jg@@ _0xfffffffffffffff@@ 3, sub_eax_esi, mov_edx_0x14, mov_rdi_rbp, sub_edx_eax, cdqe, lea_rsi_[r@@ 9@@ +rax], call_0xfffffffffffffe@@ 4f, lea_rsi_[rip+0x4@@ 47@@ f], mov_rdi_rbp, call_0xfffffffffffffa@@ 90, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ 80, add_rsp_0x30, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret, mov_rsi_rdi, mov_rdi_rbp, call_0xfffffffffffffe@@ 12, jmp_0xfffffffffffffeb9, mov_rax_qword_ptr_[rsp+8], lea_rdx_[rax@@ -0x20], cmp_rdx@@ _0x5@@ e, jbe_0x@@ df, lea_rsi_[rip+0xa@@ 99@@ 7], mov_rdi_rbp, call_0xfffffffffffff9f@@ b, mov_rdx_qword_ptr_[rsp+8], mov_eax_2, test_rdx_rdx, jg_0xfffffffffffffe@@ d1, mov_eax@@ _0x14, mov_esi_2, lea_r9_[r@@ sp+0x10], jmp_0xffffffffffffff0a, lea_rsi_[rip+0xa@@ 9@@ 60], mov_rdi_rbp, call_0xfffffffffffff9b@@ e, mov_rdx_qword_ptr_[rsp+8], test_rdx_rdx, jle_0x@@ a0, mov_eax_8, jmp_0xfffffffffffffe@@ 8e, mov_rdx_qword_ptr_[rsp+8], xor_eax_eax, test_rdx_rdx, jg_0xfffffffffffffe@@ 7e, jmp_0xfffffffffffffef6, lea_rsi_[rsp+8], call_0xfffffffffffff88@@ 3, mov_r12_rax, test_rax_rax, je_0xfffffffffffffe@@ ed, cmp_qword_ptr_[rsp+8]_0, lea_rax_[rip+0x@@ 5c@@ 8d], lea_rsi_[rip+0x5c@@ 8c], mov_rdi_rbp, cmove_rsi_rax, call_0xfffffffffffff95@@ 7, jmp_0xfffffffffffffe@@ c7, xor_r12d_r12d, jmp_0xfffffffffffffeba, mov_eax@@ _0x14, mov_esi_4, lea_r9_[r@@ sp+0x10], jmp_0xfffffffffffffe@@ 67, lea_rsi_[r@@ sp+7], mov_edx_1, mov_rdi_rbp, mov_byte_ptr_[rsp+@@ 7]_al, call_0xfffffffffffffcc@@ b, jmp_0xfffffffffffffe@@ 7c, mov_eax@@ _0x14, mov_esi_8, lea_r9_[r@@ sp+0x10], jmp_0xfffffffffffffe@@ 38, call_0xfffffffffffdc@@ ed@@ d
push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, movzx_eax_byte_ptr_[rsi], cmp_eax_0x4@@ e, jne_0x32, cmp_byte_ptr_[rsi+@@ 1]@@ _0x41, jne_0x2c, cmp_byte_ptr_[rsi+@@ 2]@@ _0x4@@ e, jne_0x26, lea_rsi_[rip+0xa@@ 86@@ a], add_r12@@ _3, call_0xfffffffffffff8c@@ 1, add_rsp_8, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, cmp_eax_0x4@@ 9, je_0x1@@ 15, mov_ecx_4, lea_rdi_[rip+0x@@ a8@@ 3c], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x1@@ 7f, movzx_eax_byte_ptr_[r12], cmp_al_0x4@@ e, je_0x1@@ 42, lea_r13_[rip+0x@@ ae@@ 9d], test_byte_ptr_[r@@ 13@@ +rax*@@ 2+@@ 1]_1, je_0x1@@ 17, lea_rsi_[rip+0xa@@ 80@@ d], mov_rdi_rbp, lea_rbx_[r@@ 12+1], call_0xfffffffffffff85@@ 2, mov_edx_1, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffffb@@ f2, lea_rsi_[rip+0x4a@@ 0f], mov_rdi_rbp, call_0xfffffffffffff8@@ 33, movzx_edx_byte_ptr_[r@@ 12+1], mov_rax_rdx, test_byte_ptr_[r@@ 13@@ +rdx*@@ 2+@@ 1]_1, je_0x29, mov_rsi_rbx, mov_edx_1, mov_rdi_rbp, add_rbx_1, call_0xfffffffffffffbb@@ 9, movzx_edx_byte_ptr_[rbx], mov_rax_rdx, test_byte_ptr_[r@@ 13@@ +rdx*@@ 2+@@ 1]_1, jne_0xffffffffffffffe0, cmp_al@@ _0x50, jne_0xa4, lea_rsi_[rip+0x80@@ 86], mov_rdi_rbp, lea_r12_[r@@ bx+1], call_0xfffffffffffff7@@ e0, movzx_eax_byte_ptr_[rbx+1], cmp_al_0x4@@ e, jne_0x26, jmp_0x@@ f3, mov_rsi_r12, mov_edx_1, mov_rdi_rbp, add_r12_1, call_0xfffffffffffffb@@ 69, movzx_eax_byte_ptr_[r12], test_byte_ptr_[r@@ 13@@ +rax*2@@ ]_4, jne_0xffffffffffffffe1, add_rsp_8, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, cmp_byte_ptr_[r12+@@ 1]@@ _0x4@@ e, jne_0xfffffffffffffe@@ eb, cmp_byte_ptr_[r12+@@ 2]@@ _0x4@@ 6, jne_0xfffffffffffffe@@ df, mov_rdi_rbp, lea_rsi_[rip+0xa@@ 7@@ 1d], add_r12@@ _3, call_0xfffffffffffff76@@ a, add_rsp_8, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, add_rsp_8, xor_r12d_r12d, pop_rbx, mov_rax_r12, pop_rbp, pop_r12, pop_r13, ret, lea_rsi_[rip+0x@@ 7f@@ 83], mov_rdi_rbp, add_r12_1, call_0xfffffffffffff7@@ 2a, movzx_eax_byte_ptr_[r12], lea_r13_[rip+0x@@ ad@@ 49], test_byte_ptr_[r@@ 13@@ +rax*@@ 2+@@ 1]_1, jne_0xfffffffffffffe@@ b2, jmp_0xffffffffffffffbd, mov_rdi_rbp, lea_rsi_[rip+0xa@@ 6a@@ c], add_r12@@ _4, call_0xfffffffffffff6f@@ a, add_rsp_8, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, lea_rsi_[rip+0x@@ 7f@@ 2b], mov_rdi_rbp, lea_r12_[r@@ bx+2], call_0xfffffffffffff6d@@ 2, movzx_eax_byte_ptr_[r@@ bx+2], jmp_0xffffffffffffff1@@ a
push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x30, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, test_rsi_rsi, je_0x57, mov_r12_rdi, movzx_edi_byte_ptr_[r@@ si], test_dil_dil, je_0x4c, lea_eax_[r@@ di-0x@@ 30], cmp_al_0x4@@ 7, ja_0x4@@ 5, mov_r9_rdx, movzx_eax_al, lea_rdx_[rip+0x@@ a8@@ 28], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, xor_ebp_ebp, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x5@@ 2b, add_rsp_0x30, mov_rax_rbp, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, call_0xfffffffffffdc@@ 6e@@ f
push_r14, push_r13, push_r12, xor_r12d_r12d, push_rbp, sub_rsp_0x68, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x58]_rax, xor_eax_eax, test_rsi_rsi, je_0x1@@ 43, cmp_byte_ptr_[rsi]_0, je_0x1@@ 3a, mov_qword_ptr_[rsp+0x10]_0, mov_rbp_rdi, mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+0x30]_0, mov_qword_ptr_[rsp+0x28]_0, mov_qword_ptr_[rsp+0x20]_0, mov_qword_ptr_[rsp+0x50]_0, mov_qword_ptr_[rsp+0x48]_0, mov_qword_ptr_[rsp+0x40]_0, call_0xfffffffffffff@@ 16d, mov_rsi_rax, test_rax_rax, je_0x16, cmp_byte_ptr_[rax]_0, je_0x1@@ 4d, mov_rdi_rsp, call_0xfffffffffffff20@@ 4, mov_rsi_rax, mov_rax_qword_ptr_[rsp+8], mov_rdx_qword_ptr_[rsp], mov_r14d@@ _0, lea_rdi_[rsp+0x20], mov_rcx_rax, sub_rcx_rdx, cmp_rdx_rax, cmovne@@ _r14d@@ _ecx, call_0x7b@@ b, mov_r13@@ _qword_ptr_[rsp+0x28], mov_rsi_rax, mov_rax_qword_ptr_[rsp+0x20], cmp_rax_r13, je_0x116, lea_rdi_[rsp+0x40], sub_r13@@ d_eax, call_0x1@@ 48, mov_rsi_qword_ptr_[rsp+0x40], mov_r12_rax, mov_rax_qword_ptr_[rsp+0x48], cmp_rsi_rax, je_0xf, sub_rax_rsi, mov_edx_eax, test_eax_eax, jne_0x@@ ca, lea_rsi_[rip+0x9a@@ 25], mov_rdi_rbp, call_0xffffffffffffef@@ ea, test_r13d_r13d, jne_0x92, mov_rdi_rbp, lea_rsi_[rip+0x9@@ f0@@ d], call_0xffffffffffffe@@ fd@@ 2, mov_rdi_qword_ptr_[rsp], test_r14d_r14d, jne_0x56, test_rdi_rdi, je_7, call_0xfffffffffffdc@@ 4@@ 3f, mov_rdi_qword_ptr_[rsp+0x20], test_rdi_rdi, je_7, call_0xfffffffffffdc@@ 4@@ 30, mov_rdi_qword_ptr_[rsp+0x40], test_rdi_rdi, je_7, call_0xfffffffffffdc@@ 42@@ 1, mov_rax_qword_ptr_[rsp+0x58], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ b7, add_rsp_0x68, mov_rax_r12, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rsi_rdi, mov_edx_r14d, mov_rdi_rbp, call_0xfffffffffffff3@@ 17, mov_rdi_qword_ptr_[rsp], test_rdi_rdi, jne_0xffffffffffffff9c, jmp_0xffffffffffffff9f, mov_rsi_qword_ptr_[rsp+0x20], mov_edx_r13d, mov_rdi_rbp, call_0xfffffffffffff2f@@ 5, jmp_0xffffffffffffff64, xor_r13d_r13d, mov_rdi_rbp, call_0xfffffffffffff2d@@ d, jmp_0xffffffffffffff34, xor_esi_esi, jmp_0xfffffffffffffe@@ c2, lea_rdi_[rsp+0x40], call_0x3@@ b, mov_rsi_qword_ptr_[rsp+0x40], mov_r12_rax, mov_rax_qword_ptr_[rsp+0x48], cmp_rsi_rax, je_0xb, sub_rax_rsi, mov_edx_eax, test_eax_eax, jne_0xffffffffffffffb5, lea_rsi_[rip+0x@@ 99@@ 1c], mov_rdi_rbp, call_0xffffffffffffe@@ ee@@ 1, jmp_0xffffffffffffff00, call_0xfffffffffffdc@@ 4b@@ 7
push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, test_rsi_rsi, je_0x69, movzx_eax_byte_ptr_[rsi], test_al_al, je_0x62, sub_eax@@ _0x41, cmp_al@@ _0x39, ja_0x5@@ b, lea_rdx_[rip+0xa@@ 1c@@ 4], movzx_eax_al, mov_rbp_rdi, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ 5cc, add_rsp_0x28, mov_rax_r13, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, xor_r13d_r13d, jmp_0xffffffffffffffdb, call_0xfffffffffffd@@ be@@ 7@@ 2
push_r14, xor_edx_edx, push_r13, mov_r13_rdi, push_r12, lea_r12_[rip+0x@@ 4b@@ 8d], push_rbp, mov_rbp_rsi, push_rbx, test_rsi_rsi, je_0x1@@ a6, movzx_eax_byte_ptr_[rbp], test_al_al, je_0x1@@ aa, cmp_al_0x5@@ 9, je_0xc2, cmp_al_0x5@@ a, je_0xaa, cmp_al@@ _0x58, je_0x82, lea_rbx@@ _[rdx+1], test_rdx_rdx, jne_0x@@ d5, cmp_al_0x4@@ d, je_0x1@@ 45, cmp_al_0x4@@ e, je_0xf5, cmp_al_0x4@@ b, je_0xd5, cmp_al_0x4@@ c, jne_0x35, lea_rsi_[rip+0x@@ 98@@ 4b], mov_rdi_r13, add_rbp_1, call_0xffffffffffffe@@ 80@@ 5, mov_rsi_rbp, mov_rdi_r13, call_0xfffffffffffff92@@ a, mov_rbp_rax, test_rax_rax, je_0x12f, mov_rdx_rbx, jmp_0xffffffffffffff86, cmp_al_0x4@@ a, jne_0xffffffffffffffde, lea_rsi_[rip+0x9@@ 80@@ f], mov_rdi_r13, add_rbp_1, call_0xffffffffffffe@@ 7c@@ e, jmp_0xffffffffffffffc9, lea_rsi_[rip+0x@@ 39@@ 90], mov_rdi_r13, lea_r12_[r@@ bp+1], call_0xffffffffffffe@@ 7b@@ 2, pop_rbx, mov_rax_r12, pop_rbp, pop_r12, pop_r13, pop_r14, ret, lea_r12_[r@@ bp+1], pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, lea_r12_[r@@ bp+1], test_rdx_rdx, jne_0x@@ 89, mov_rdi_r13, lea_rsi_[rip+0x@@ 39@@ 50], call_0xffffffffffffe@@ 77@@ 9, pop_rbx, mov_rax_r12, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rsi_r12, mov_rdi_r13, call_0xffffffffffffe@@ 75@@ a, movzx_eax_byte_ptr_[rbp], jmp_0xffffffffffffff22, lea_rsi_[rip+0x@@ 96@@ a3], mov_rdi_r13, add_rbp_1, call_0xffffffffffffe7@@ 3a, jmp_0xffffffffffffff35, cmp_byte_ptr_[rbp+@@ 1]@@ _0x6@@ b, jne_0xffffffffffffff@@ 2c, lea_r14_[r@@ bp+2], lea_rsi_[rip+0x@@ 96@@ a5], mov_rdi_r13, call_0xffffffffffffe7@@ 18, movzx_eax_byte_ptr_[r@@ bp+2], mov_rbp_r14, jmp_0xfffffffffffffeed, lea_rsi_[rip+0x4a@@ 18], mov_rdi_r13, call_0xffffffffffffe@@ 6f@@ 6, jmp_0xffffffffffffff6e, lea_r14_[r@@ bp+1], lea_rsi_[rip+0x9@@ 66@@ f], mov_rdi_r13, call_0xffffffffffffe@@ 6d@@ a, movzx_eax_byte_ptr_[r@@ bp+1], mov_rbp_r14, jmp_0xfffffffffffffea@@ 7, xor_r12d_r12d, jmp_0xffffffffffffff10, mov_r12_rbp, jmp_0xffffffffffffff0@@ 0
push_r14, add_rsi@@ _2, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_ebx_edx, xor_edx_edx, sub_rsp_0x30, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0x7@@ 89, test_rax_rax, je_0x111, mov_rsi_rax, movzx_eax_byte_ptr_[rax], cmp_al_0x5@@ a, je_0xf3, mov_qword_ptr_[rsp+0x20]_0, cmp_al_0x4@@ d, lea_rdi_[rsp+0x10], mov_qword_ptr_[rsp+0x18]_0, sete_al, mov_qword_ptr_[rsp+0x10]_0, movzx_eax_al, add_rsi_rax, call_0xffffffffffffe@@ 67@@ 2, mov_r12_qword_ptr_[r@@ bp+8], mov_r13_rax, mov_rax_qword_ptr_[rbp], test_r13_r13, je_0x23, movzx_ecx_byte_ptr_[r@@ 13], sub_ecx@@ _0x4@@ 6, cmp_cl@@ _0x13, ja@@ _0x16, mov_edx_1, shl_rdx_cl, test_edx@@ _0x@@ b9@@ 001, jne_0xa6, cmp_r12_rax, je_0x1@@ 59, mov_rsi_r13, mov_rdi_rbp, sub_r12@@ _rax, call_0xfffffffffffff7@@ 1a, mov_rcx_qword_ptr_[rbp], mov_rdx_qword_ptr_[rbp+8], movsxd_r14@@ _r12d, cmp_rcx_rdx, je_0xb, sub_rdx_rcx, mov_r12d_r14d, sub_r12d@@ _edx, test_r12d_r12d, jns@@ _9, add_rcx@@ _r14, mov_qword_ptr_[rbp+@@ 8]_rcx, mov_rdi_qword_ptr_[rsp+0x10], test_rdi_rdi, je_0x11, mov_qword_ptr_[rsp+8]_rax, call_0xfffffffffffd@@ ba@@ 31, mov_rax_qword_ptr_[rsp+8], test_ebx_ebx, jne_0xc, test_rax_rax, je_0x40, cmp_byte_ptr_[rax]_0, jne_0x3b, mov_rbx_qword_ptr_[rsp+0x28], xor_rbx_qword_ptr_fs:[0x28], jne_0x12@@ b, add_rsp_0x30, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, lea_rax_[r@@ si+1], test_ebx_ebx, jne_0xffffffffffffffd1, jmp_0xffffffffffffffca, xor_eax_eax, jmp_0xffffffffffffffc5, mov_rdx_r12, mov_r14d@@ _0, mov_rsi_r13, mov_rdi_rbp, sub_rdx_rax, cmp_r12_rax, cmovne@@ _r14d@@ _edx, call_0xffffffffffffe6@@ 33, mov_r12_rax, test_rax_rax, je_0x19, cmp_byte_ptr_[rax]_0, je_0xcb, mov_rsi_rax, mov_rdi_rbp, call_0xffffffffffffe@@ 6c@@ 7, mov_r12_rax, mov_rcx_qword_ptr_[r@@ bp+8], mov_rax_qword_ptr_[rbp], mov_edi_r14d, mov_rdx_rcx, sub_rdx_rax, sub_edi@@ _edx, cmp_rax_rcx, mov_edx_edi, cmove@@ _edx@@ _r14d, test_edx_edx, jns_0xc, movsxd_r14@@ _r14d, add_rax_r14, mov_qword_ptr_[rbp+8]_rax, lea_rsi_[rip+0x@@ 8f@@ 26], mov_rdi_rbp, call_0xffffffffffffe@@ 4e@@ b, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffffc@@ 60, lea_rsi_[rip+0x6c@@ fc], mov_rdi_rbp, mov_r13_rax, call_0xffffffffffffe@@ 4c@@ e, mov_rsi_qword_ptr_[rsp+0x10], mov_rax_qword_ptr_[rsp+0x18], cmp_rsi_rax, je_0xc, mov_rdx_rax, sub_rdx_rsi, cmp_eax_esi, jne_0x3a, mov_rax_qword_ptr_[rbp], mov_r12_qword_ptr_[r@@ bp+8], jmp_0xfffffffffffffea@@ c, mov_rsi_r13, mov_rdi_rbp, call_0xfffffffffffff5c@@ a, mov_rcx_qword_ptr_[rbp], mov_rdx_qword_ptr_[rbp+8], cmp_rcx_rdx, je_0xfffffffffffffe@@ ca, xor_r14d_r14d, jmp_0xfffffffffffffea@@ c, mov_rdi_rbp, call_0xffffffffffffe8@@ 25, jmp_0xffffffffffffffc0, xor_r12d_r12d, jmp_0xffffffffffffff46, call_0xfffffffffffd@@ ba@@ 4@@ 0
push_r15, mov_r9d_edx, push_r14, push_r13, push_r12, mov_r12_rdi, mov_rdi_rsi, push_rbp, push_rbx, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, lea_rsi_[rsp+0x18], call_0xffffffffffffe@@ 32@@ 4, test_rax_rax, je_0x1@@ 4c, mov_rbx_qword_ptr_[rsp+0x18], test_rbx_rbx, je_0x1@@ 3e, mov_rbp_rax, cmp_r9d@@ _4, je_0x1@@ 41, mov_rdi_rax, call_0xfffffffffffdb@@ 9c8, mov_rcx_rbx, cmp_rax_rbx, jb_0x1@@ 1d, cmp_rbx@@ _4, jl@@ e_8, cmp_byte_ptr_[rbp]@@ _0x5f, je_0x55, lea_rax_[r@@ bx@@ -6], cmp_rax@@ _6, ja_0x1@@ 3, lea_rdx_[rip+0x@@ 97@@ da], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_edx_ebx, test_ebx_ebx, jne_0x2@@ 2c, add_rbp@@ _rcx, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x4a@@ d, add_rsp_0x48, mov_rax_rbp, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, cmp_byte_ptr_[rbp+@@ 1]@@ _0x5f, jne_0xffffffffffffffa9, movzx_eax_byte_ptr_[r@@ bp+2], sub_eax@@ _0x5@@ 4, cmp_al_1, ja_0xffffffffffffff@@ 9e, movzx_ecx_byte_ptr_[r@@ bp+@@ 3], lea_rdx_[rip+0x@@ 99@@ 9c], test_byte_ptr_[rdx@@ +rcx*@@ 2@@ ]_4, je_0x98, cmp_cl@@ _0x30, je_0x8f, lea_rsi_[r@@ bp+@@ 3], mov_edx_3, mov_rdi_r12, xor_r14d_r14d, call_0xfffffffffffffe@@ fa, lea_rsi_[rip+0x9@@ 33@@ 3], mov_rdi_r12, lea_r15_[rsp+0x20], mov_r13_rax, call_0xffffffffffffe@@ 33@@ 3, test_r13_r13, je_0x45, movzx_eax_byte_ptr_[r13], test_al_al, je_0x4@@ 02, cmp_al_0x5@@ a, je_0x3@@ f6, test_r14_r14, jne_0x3@@ 22, cmp_al@@ _0x48, jne_0xb, movzx_eax_byte_ptr_[r@@ 13+1], add_r13_1, cmp_al_0x5@@ 4, je_0x3@@ c4, cmp_al_0x5@@ 6, je_0x3@@ 44, cmp_al_0x5@@ 3, je_0x3@@ 16, lea_rsi_[rip+0x6b@@ 07], mov_rdi_r12, call_0xffffffffffffe@@ 2d@@ c, xor_ebp_ebp, jmp_0xffffffffffffff1b, mov_rax_qword_ptr_[r12+8], mov_rdx_qword_ptr_[r12], mov_r15_rbp, mov_r14_rbp, mov_rcx_rax, sub_rcx_rdx, cmp_rdx_rax, mov_eax_0, mov_r13d_ecx, cmove@@ _r13d_eax, movzx_eax_byte_ptr_[rbp], lea_rcx_[rip+0x@@ 98@@ bd], test_byte_ptr_[rcx@@ +rax*2@@ ]_4, jne_0x@@ c1, cmp_byte_ptr_[rbp]@@ _0x5f, jne_0x9f, cmp_byte_ptr_[rbp+@@ 1]@@ _0x44, jne_0x95, mov_rsi_rbp, mov_edx_1, mov_rdi_r12, call_0xfffffffffffffb@@ c4, mov_rbp_rax, test_rbp_rbp, jne_0x79, mov_rdi_qword_ptr_[r12+8], mov_ecx_r13d, movabs_rax_0x6@@ 6666@@ 6666@@ 6666667, imul@@ _rbx, mov_rax_qword_ptr_[r12], sar@@ _rbx@@ _0x3f, mov_rsi_rdi, sub_rsi_rax, sar_rdx@@ _2, sub_ecx@@ _esi, sub_rdx_rbx, mov_esi_ecx, cmp_rax_rdi, cmove@@ _esi@@ _r13d, mov_rbx_rdx, test_esi_esi, jns@@ _0xd, movsxd_rsi@@ _r13d, add_rax_rsi, mov_qword_ptr_[r12+8]_rax, lea_rbp_[r@@ 15-1], test_r14_r14, je_0xffffffffffffff@@ 39, mov_r15_rbp, test_rdx_rdx, jne_0xffffffffffffff@@ 65, mov_r15_r14, mov_rbx_qword_ptr_[rsp+0x18], xor_r14d_r14d, jmp_0xffffffffffffff54, mov_rax_rbp, sub_rax@@ _r15, cmp_rax_rbx, jne_0xffffffffffffff@@ 80, jmp_0xfffffffffffffe@@ 1e, mov_rsi_rbp, mov_edx_3, mov_rdi_r12, call_0x2@@ cd, mov_rbp_rax, jmp_0xffffffffffffff59, mov_rsi_rbp, mov_rdi_r12, call_0xffffffffffffe5@@ 3a, mov_rcx_qword_ptr_[rsp+0x18], jmp_0xfffffffffffffd@@ ca, lea_rsi_[rip+0x4@@ 30@@ 7], mov_rdi_r12, call_0xffffffffffffd@@ fe@@ 5, movzx_eax_byte_ptr_[r13], jmp_0xfffffffffffffc@@ d0, lea_rsi_[r@@ 13+1], mov_edx_4, mov_rdi_r12, call_0xfffffffffffffb@@ 7a, mov_r13_rax, add_r14_1, test_r13_r13, jne_0xfffffffffffffc@@ 92, jmp_0xfffffffffffffc@@ cf, movzx_eax_byte_ptr_[r@@ 13+1], lea_rsi_[r@@ 13+1], mov_rdi_r15, mov_qword_ptr_[rsp+0x30]_0, mov_qword_ptr_[rsp+0x28]_0, mov_byte_ptr_[rsp+0x@@ f]_al, mov_qword_ptr_[rsp+0x20]_0, call_0xfffffffffffff0@@ b5, mov_esi_1, mov_rdi_r15, mov_r13_rax, call_0xffffffffffffd@@ ee@@ 5, mov_rax_qword_ptr_[rsp+0x28], mov_rsi_r13, mov_rdi_r12, movsx_ecx@@ _byte_ptr_[rsp+0x@@ f], mov_byte_ptr_[rax]_0, mov_rdx_qword_ptr_[rsp+0x20], call_0xffffffffffffe8@@ 98, mov_rdi_qword_ptr_[rsp+0x20], mov_r13_rax, test_rdi_rdi, je_0xffffffffffffff@@ 86, call_0xfffffffffffdb@@ 3c@@ 2, jmp_0xffffffffffffff7b, lea_rsi_[r@@ 13+1], mov_rdi_r12, call_0xfffffffffffff0@@ 61, mov_r13_rax, jmp_0xffffffffffffff67, add_r13_1, lea_rsi_[rip+0x67@@ 41], mov_rdi_r12, call_0xffffffffffffdf@@ 16, mov_rax_r13, sub_rax_rbp, mov_rbp_r13, cmp_rbx_rax, je_0xfffffffffffffb@@ 52, xor_ebp_ebp, jmp_0xfffffffffffffb@@ 4a, call_0xfffffffffffdb@@ 4d@@ 8
push_r15, push_r14, push_r13, mov_r13_rdi, push_r12, mov_r12d_edx, push_rbp, mov_rbp_rsi, push_rbx, mov_ebx_1, sub_rsp_8, jmp_8, add_rbp_1, cmp_byte_ptr_[rbp]@@ _0x30, je_0xfffffffffffffff@@ 8, mov_rsi_rbp, mov_edx_r12d, mov_rdi_r13, call_0xfffffffffffffa@@ 6d, mov_rbp_rax, test_rax_rax, je_0x1@@ 7a, movzx_esi_byte_ptr_[r@@ ax], cmp_sil@@ _0x4@@ d, je_0x4d, lea_ecx_[r@@ si-0x@@ 46], cmp_cl@@ _0x13, ja_0x1@@ 5, mov_eax_1, shl_rax_cl, test_eax@@ _0x@@ b9@@ 001, jne_0x1@@ 68, lea_rdx_[rip+0x@@ 94@@ b1], test_byte_ptr_[r@@ dx+r@@ si*@@ 2@@ ]_4, je_0x1@@ 45, test_rbx_rbx, je_0x11, lea_rsi_[rip+0x30@@ 44], mov_rdi_r13, call_0xffffffffffffde@@ 68, add_rbx_1, jmp_0xffffffffffffff93, mov_rax_qword_ptr_[r13], mov_r15_qword_ptr_[r@@ 13+8], lea_rsi_[r@@ bp+1], cmp_rax_r15, je_0x1@@ 52, mov_rdi_r13, sub_r15@@ _rax, call_0xffffffffffffde@@ 7d, mov_rdx_qword_ptr_[r13], mov_r14d@@ _r15d, mov_rsi_rax, mov_rax_qword_ptr_[r13+8], cmp_rdx_rax, je_0xb, sub_rax_rdx, mov_r15d_r14d, sub@@ _r15d_eax, test_r15d_r15d, js_0x1@@ 13, mov_rdi_r13, call_0xffffffffffffd@@ ef@@ d, mov_r15_rax, test_rax_rax, je_0x19, cmp_byte_ptr_[rax]_0, je_0xef, mov_rsi_rax, mov_rdi_r13, call_0xffffffffffffdf@@ 91, mov_r15_rax, mov_rcx_qword_ptr_[r@@ 13+8], mov_rax_qword_ptr_[r13], mov_edi_r14d, mov_rdx_rcx, sub_rdx_rax, sub_edi@@ _edx, cmp_rax_rcx, mov_edx_edi, cmove@@ _edx@@ _r14d, test_edx_edx, jns_0xc, movsxd_rdx@@ _r14d, add_rax_rdx, mov_qword_ptr_[r13+8]_rax, lea_rsi_[rip+0x@@ 87@@ f0], mov_rdi_r13, call_0xffffffffffffdd@@ b5, mov_rsi_r15, mov_rdi_r13, call_0xfffffffffffff5@@ 2a, lea_rsi_[rip+0x6@@ 5c@@ 6], mov_rdi_r13, mov_r15_rax, call_0xffffffffffffdd@@ 98, lea_rdx_[rip+0x9@@ 3b@@ c], test_r15_r15, je_0x19, movzx_eax_byte_ptr_[r15], test_byte_ptr_[rdx@@ +rax*2@@ ]_4, je_0xf, mov_rbp_r15, jmp_0xffffffffffffff03, mov_rsi_qword_ptr_[r13+8], mov_rax_qword_ptr_[r13], mov_edi_r14d, mov_rcx_rsi, sub_rcx_rax, sub_edi@@ _ecx, cmp_rax_rsi, mov_ecx_edi, cmove@@ _ecx@@ _r14d, test_ecx_ecx, jns_0xc, movsxd_r14@@ _r14d, add_rax_r14, mov_qword_ptr_[r13+8]_rax, movzx_esi_byte_ptr_[r@@ bp], test_byte_ptr_[r@@ dx+r@@ si*@@ 2@@ ]_4, jne_0xfffffffffffffe@@ c7, add_rsp_8, mov_rax_rbp, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[r13], mov_r14_qword_ptr_[r@@ 13+8], cmp_rax_r14, je_0x48, sub_r14@@ d_eax, mov_rsi_rbp, jmp_0xffffffffffffff03, xor_r15d_r15d, jmp_0xffffffffffffff22, movsxd_rax_r14d, add_rdx_rax, mov_qword_ptr_[r13@@ +8]_rdx, jmp_0xfffffffffffffeec, mov_rdi_r13, xor_r14d_r14d, call_0xffffffffffffdd@@ 31, mov_rdx_qword_ptr_[r13], mov_rsi_rax, mov_rax_qword_ptr_[r13+8], cmp_rdx_rax, jne_0xfffffffffffffe@@ b9, jmp_0xfffffffffffffec8, mov_rsi_rbp, xor_r14d_r14d, jmp_0xfffffffffffffeb@@ d
endbr64, push_rbp, sub_rsp_0x30, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, test_rdi_rdi, je_0xa4, cmp_byte_ptr_[rdi]_0, mov_r8_rdi, je_0x98, cmp_byte_ptr_[rdi]@@ _0x5f, jne_0x8f, cmp_byte_ptr_[rdi+@@ 1]@@ _0x44, jne_0x@@ 85, mov_ecx_7, lea_rdi_[rip+0x@@ 8d@@ 58], mov_rsi_r8, mov_qword_ptr_[rsp+0x20]_0, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], lea_rbp_[rsp+0x10], mov_qword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rsp+0x10]_0, seta_al, sbb_al_0, test_al_al, jne_0x67, mov_rdi_rbp, lea_rsi_[rip+0x@@ 8d@@ 27], call_0xffffffffffffdc@@ 3b, mov_rdi_qword_ptr_[rsp+0x10], mov_rax_qword_ptr_[rsp+0x18], cmp_rax_rdi, je_0x29, sub_rax_rdi, test_eax_eax, jle_0x@@ 22, mov_esi_1, mov_rdi_rbp, call_0xffffffffffffdb@@ 88, mov_rax_qword_ptr_[rsp+0x18], mov_byte_ptr_[rax]_0, mov_rax_qword_ptr_[rsp+0x10], jmp_8, xor_eax_eax, mov_rdx_qword_ptr_[rsp+0x28], xor_rdx_qword_ptr_fs:[0x28], jne_0x3d, add_rsp_0x30, pop_rbp, ret, mov_rdi_rbp, xor_edx_edx, mov_rsi_r8, call_0xfffffffffffff5@@ 38, mov_rdi_qword_ptr_[rsp+0x10], test_rax_rax, jne_0xffffffffffffff9a, mov_qword_ptr_[rsp+8]_rax, test_rdi_rdi, je_0xffffffffffffff@@ 90, call_0xfffffffffffd@@ b0@@ 3f, mov_rax_qword_ptr_[rsp+8], jmp_0xffffffffffffffb7, call_0xfffffffffffdb@@ 19@@ 3
mov_eax_dword_ptr_[rdi+0x18], test_eax_eax, jne_0x6b, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, mov_rdx_qword_ptr_[r@@ di+0x10], mov_rax_qword_ptr_[rdi+8], mov_rcx_rdx, sub_rcx_rax, cmp_rcx_rsi, jae_0x@@ 45, add_rsi_rax, cmp_rdx_rsi, ja_0x6@@ 9, test_rdx_rdx, mov_ebx@@ _4, cmovne@@ _rbx@@ _rdx, jmp_0x11, add_r@@ bx_rbx, cmp_rdx_rbx, ja_0x4@@ c, cmp_rbx@@ _rsi, jb@@ _0xfffffffffffffff@@ 5, mov_rdi_qword_ptr_[rbp], mov_rsi_rbx, call_0xfffffffffffdb@@ 35@@ c, test_rax_rax, je_0x15, mov_qword_ptr_[rbp]_rax, mov_qword_ptr_[rbp+0x1@@ 0]_rbx, add_rsp_8, pop_rbx, pop_rbp, ret, ret, mov_rdi_qword_ptr_[rbp], call_0xfffffffffffd@@ ae@@ 9b, mov_qword_ptr_[rbp]_0, mov_qword_ptr_[rbp@@ +8]_0, mov_qword_ptr_[rbp+0x10]_0, mov_dword_ptr_[rbp+0x@@ 18]_1, add_rsp_8, pop_rbx, pop_rbp, ret
mov_r8_rsi, mov_rax_qword_ptr_[rdi+0x18], mov_rsi_rdx, mov_rdx_qword_ptr_[r@@ di+0x10], mov_rdi_r8, jmp_rax
endbr64, push_r12, mov_r12_rdi, mov_rdi_rdx, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdx, call_0xffffffffffffff@@ 2c, mov_eax_dword_ptr_[rbx+0x18], test_eax_eax, jne_0x18, mov_rdi_qword_ptr_[rbx+8], mov_rdx_rbp, add_rdi_qword_ptr_[r@@ bx], mov_rsi_r12, call_0xfffffffffffdb@@ 18@@ 3, add_qword_ptr_[r@@ bx+@@ 8]_rbp, pop_rbx, pop_rbp, pop_r12, ret
endbr64, push_r15, shr_esi@@ _3, push_r14, and_esi_1, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x58, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, cmp_byte_ptr_[rdi]@@ _0x5f, mov_qword_ptr_[rsp+0x20]_rcx, mov_qword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rsp+0x28]_rdx, mov_qword_ptr_[rsp+0x30]_0, mov_dword_ptr_[rsp+0x38]_0, mov_dword_ptr_[rsp+0x3@@ c]_esi, mov_dword_ptr_[rsp+0x40]_0, jne_8, cmp_byte_ptr_[rdi+@@ 1]@@ _0x5@@ a, je_0x2f, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x48], xor_rbx_qword_ptr_fs:[0x28], jne_0x14@@ 6, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, cmp_byte_ptr_[rdi+@@ 2]@@ _0x4@@ e, jne_0xffffffffffffffcf, movzx_eax_byte_ptr_[r@@ di+@@ 3], lea_r9_[r@@ di+@@ 3], mov_dword_ptr_[rsp+0x40]@@ _0xffffffff, mov_qword_ptr_[rsp+0x10]_r9, test_al_al, je_0xffffffffffffff@@ b6, movabs@@ _r10@@ _0x400@@ 40@@ 1@@ 0000@@ 00000, xor_edx_edx, mov_r8_rdx, add_rdx_1, cmp_al@@ _0x5f, je_0x1c, lea_rsi_[rip+0x@@ 8e@@ f3], movzx_ecx_al, test_byte_ptr_[rsi@@ +rcx*@@ 2]@@ _0x8@@ c, jne_0xc, cmp_al_0x3a, ja_0xffffffffffffff@@ 8b, bt@@ _r10@@ _rax, jae_0xffffffffffffff@@ 85, movzx_eax_byte_ptr_[r@@ di+rdx@@ +3], test_al_al, jne_0xffffffffffffffd4, test_rdx_rdx, je_0xffffffffffffff@@ 77, cmp_byte_ptr_[r@@ di+r@@ 8+@@ 3@@ ]_0x4@@ 5, jne_0xffffffffffffff@@ 6b, mov_qword_ptr_[rsp+0x18]_r8, cmp_r8@@ _0x13, jbe_0xffffffffffffff@@ 5c, lea_rax_[r@@ 9+r@@ 8-0x@@ 13], cmp_word_ptr_[r@@ ax]@@ _0x3@@ 7@@ 31, jne_0xffffffffffffff@@ 4c, cmp_byte_ptr_[rax+@@ 2]@@ _0x68, jne_0xffffffffffffff@@ 42, lea_rbp_[rsp+0x10], jmp_0x19, test_rcx_rcx, je_0xffffffffffffff@@ 30, mov_rsi_qword_ptr_[rsp+0x18], cmp_qword_ptr_[rsp+0x@@ 3@@ 0]_rsi, jae_0x@@ 1a, mov_rdi_rbp, call_0xfffffffffffffc@@ a8, mov_rcx_rax, mov_eax_dword_ptr_[rsp+0x38], test_eax_eax, je_0xffffffffffffffda, jmp_0xffffffffffffff0b, cmp_rdx@@ _0x11, jne_0xffffffffffffff@@ 04, cmp_byte_ptr_[rcx@@ ]@@ _0x68, jne_0xfffffffffffffe@@ fb, lea_r8_[r@@ cx+1], lea_rdx_[r@@ cx+0x1@@ 1], xor_edi_edi, mov_r11d_1, jmp_0x23, sub_r9d@@ _0x61, cmp_r9b@@ _5, ja_0xfffffffffffffe@@ db, sub_ecx@@ _0x57, mov_ebx@@ _r11d, add_r8_1, shl_ebx@@ _cl, or_edi@@ _ebx, cmp_rdx@@ _r8, je_0x1d, movsx_ecx_byte_ptr_[r@@ 8], lea_r10d_[r@@ cx@@ -0x30], mov_r9d_ecx, cmp_r10@@ b@@ _9, ja_0xffffffffffffff@@ d0, sub_ecx@@ _0x30, jmp_0xffffffffffffffdc, call_0xfffffffffffda@@ db@@ 7, xor_eax_eax, mov_edx_edi, and_edx_1, cmp_dx@@ _1, sbb@@ _rax@@ _-1, shr@@ _@@ di@@ _1, jne_0xfffffffffffffff0, cmp_rax@@ _4, jbe_0xfffffffffffffe@@ 8d, mov_qword_ptr_[rsp+0x30]_0, cmp_dword_ptr_[rsp+0x@@ 3c]_0, jne_0x11, cmp_rsi@@ _0x13, jbe_0x@@ b, sub_rsi@@ _0x13, mov_qword_ptr_[rsp+0x18]_rsi, lea_r13_[rsp+0x@@ f], mov_rdi_rbp, call_0xfffffffffffffb@@ ed, mov_esi_dword_ptr_[rsp+0x@@ 38], test_esi_esi, jne_9, cmp_dword_ptr_[rsp+0x@@ 40@@ ]_-1, je_0x45, mov_rax_qword_ptr_[rsp+0x30], cmp_rax_qword_ptr_[r@@ sp+0x18], jae_0x@@ 22@@ f, test_rax_rax, je_0xffffffffffffffd6, mov_eax_dword_ptr_[rsp+0x38], test_eax_eax, jne_0xffffffffffffffce, lea_rsi_[rip+0x8@@ 00@@ a], mov_edx_2, mov_rdi_rbp, call_0xfffffffffffffd@@ 5d, mov_rdi_rbp, call_0xfffffffffffffb@@ a5, mov_esi_dword_ptr_[rsp+0x@@ 38], test_esi_esi, je_0xffffffffffffff@@ ba, jmp_0xffffffffffffffbf, mov_r14_rax, mov_r12_rdx, cmp_rdx_1, jbe_0x@@ 1f@@ b, cmp_byte_ptr_[rax]@@ _0x5f, je_0x2@@ 20, movzx_eax_byte_ptr_[r14], cmp_al_0x2@@ 4, je_0x35, cmp_al_0x2e, jne_0x10@@ a, cmp_r12@@ _1, je_0x1@@ 4d, movzx_eax_byte_ptr_[r@@ 14+1], cmp_al_0x2e, je_0x1@@ 8d, test_esi_esi, je_0x1@@ 40, add_r14_1, sub_r12@@ _1, cmp_al_0x2@@ 4, jne_0xffffffffffffffcf, cmp_r12@@ _2, jbe_0x@@ b1, movzx_eax_byte_ptr_[r@@ 14+1], cmp_al_0x4@@ 3, je_0x1@@ ab, lea_rdx_[r@@ 12-1], cmp_r12@@ _3, je_0x1@@ ab, cmp_al_0x5@@ 3, je_0x1@@ df, cmp_al@@ _0x42, je_0x1@@ bd, cmp_al_0x5@@ 2, je_0x2@@ 0b, cmp_al_0x4@@ c, je_0x1@@ eb, cmp_al_0x4@@ 7, je_0x1@@ d1, cmp_rdx@@ _3, je_0x63, cmp_al_0x7@@ 5, jne_0x5f, movsx_edx_byte_ptr_[r@@ 14+2], lea_ecx_[rdx@@ -0x30], mov_eax_edx, cmp_cl_9, jbe_0x@@ 20@@ c, sub_eax@@ _0x61, cmp_al_5, ja_0x4@@ 5, sub_edx@@ _0x57, movsx_eax_byte_ptr_[r@@ 14+@@ 3], lea_edi_[rax@@ -0x30], mov_ecx_eax, cmp_dil@@ _9, jbe_0x@@ 1e@@ 6, sub_ecx@@ _0x61, cmp_cl@@ _5, ja_0x2@@ 6, lea_ecx_[rax@@ -0x@@ 57], cmp_edx@@ _7, jg_0x1@@ e, mov_eax_edx, shl_eax_4, or_eax_ecx, cmp_al@@ _0x1f, jle_0x@@ 13, mov_ebx@@ _3, cmp_byte_ptr_[r@@ 14+r@@ bx+@@ 1]@@ _0x24, je_0x9e, mov_byte_ptr_[rsp+0x@@ f]_0, test_esi_esi, jne_0xfffffffffffffea@@ 4, mov_rdx_r12, mov_rsi_r14, mov_rdi_rbp, call_0xfffffffffffffc@@ 1e, jmp_0xfffffffffffffe@@ 90, xor_ebx_ebx, jmp_0x13, movzx_eax_byte_ptr_[r@@ 14+r@@ bx], cmp_al_0x2@@ 4, je_0x13, cmp_al_0x2e, je_0xf, add_rbx_1, lea_r15_[r@@ 14+r@@ bx], cmp_rbx_r12, jb_0xffffffffffffff@@ e8, test_esi_esi, jne_0x71, mov_rsi_r14, mov_rdx_rbx, mov_rdi_rbp, mov_r14_r15, call_0xfffffffffffffb@@ de, sub_r12@@ _rbx, je_0xfffffffffffffe@@ 4d, movzx_eax_byte_ptr_[r14], mov_esi_dword_ptr_[rsp+0x@@ 38], jmp_0xfffffffffffffea@@ 8, test_esi_esi, jne_0xfffffffffffffe@@ 38, mov_edx_1, mov_rdi_rbp, add_r14_1, mov_ebx_1, lea_rsi_[rip+0x5d@@ e5], call_0xfffffffffffffb@@ a3, jmp_0xffffffffffffffc5, add_rbx_2, mov_byte_ptr_[rsp+0x@@ f]_al, add_r14@@ _rbx, test_esi_esi, jne_0xffffffffffffffb6, mov_edx_1, mov_rsi_r13, mov_rdi_rbp, call_0xfffffffffffffb@@ 82, jmp_0xffffffffffffffa4, mov_r14_r15, jmp_0xffffffffffffff9f, add_r14@@ _2, mov_ebx_2, test_esi_esi, jne_0xffffffffffffff92, mov_edx_2, lea_rsi_[rip+0x7@@ e0@@ 2], mov_rdi_rbp, call_0xfffffffffffffb@@ 5a, jmp_0xffffffffffffff7c, xor_eax_eax, cmp_dword_ptr_[rsp+0x@@ 38]_0, sete_al, jmp_0xfffffffffffffc@@ 0b, test_rdx_rdx, je_0xfffffffffffffd@@ b5, mov_r12d_1, jmp_0xfffffffffffffe@@ 05, mov_ebx_1, mov_eax@@ _0x2c, jmp_0xfffffffffffffe@@ e3, mov_r12d@@ _3, jmp_0xfffffffffffffe@@ e4, cmp_byte_ptr_[rax+1]@@ _0x24, jne_0xfffffffffffffd@@ e2, add_r14_1, sub_r12@@ _1, jmp_0xfffffffffffffdd@@ 4, cmp_byte_ptr_[r14+@@ 2]@@ _0x50, jne_0xfffffffffffffe@@ c3, mov_eax@@ _0x2a, mov_ebx_2, jmp_0xfffffffffffffea@@ 7, cmp_byte_ptr_[r14+@@ 2]@@ _0x50, jne_0xfffffffffffffea@@ 9, mov_eax_0x40, jmp_0xffffffffffffff@@ e6, cmp_byte_ptr_[r14+@@ 2]@@ _0x5@@ 4, jne_0xfffffffffffffe@@ 97, mov_eax@@ _0x3e, jmp_0xffffffffffffffd4, movzx_eax_byte_ptr_[r@@ 14+2], cmp_al_0x5@@ 4, je_0x29, cmp_al@@ _0x50, jne_0xfffffffffffffe@@ 7f, mov_eax@@ _0x28, jmp_0xffffffffffffffbc, movzx_eax_byte_ptr_[r@@ 14+2], cmp_al_0x4@@ 6, je_0x18, cmp_al@@ _0x50, jne_0xfffffffffffffe@@ 67, mov_eax@@ _0x29, jmp_0xffffffffffffffa4, mov_eax@@ _0x3c, jmp_0xffffffffffffff9d, mov_eax@@ _0x26, jmp_0xffffffffffffff96, lea_ecx_[rax@@ -0x30], jmp_0xfffffffffffffe@@ 28, sub_edx@@ _0x30, jmp_0xfffffffffffffe@@ 0@@ 1
endbr64, push_rbp, lea_rdx_[rip-0x@@ 57@@ c], sub_rsp_0x30, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_rbp_rsp, mov_qword_ptr_[rsp]_0, mov_rcx_rbp, mov_dword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x10]_0, call_0xfffffffffffffa@@ 88, test_eax_eax, je_0x41, mov_esi_1, mov_rdi_rbp, call_0xfffffffffffff97@@ 7, mov_eax_dword_ptr_[rsp+0x18], test_eax_eax, je_0x1c, mov_rax_qword_ptr_[rsp], mov_rdx_qword_ptr_[rsp+0x28], xor_rdx_qword_ptr_fs:[0x28], jne_0x25, add_rsp_0x30, pop_rbp, ret, mov_rax_qword_ptr_[rsp+8], add_rax_qword_ptr_[r@@ sp], mov_byte_ptr_[rax]_0, jmp_0xffffffffffffffda, mov_rdi_qword_ptr_[rsp], call_0xfffffffffffda@@ 84@@ c, xor_eax_eax, jmp_0xffffffffffffffcf, call_0xfffffffffffda@@ 9a@@ 3
endbr64, cmp_qword_ptr_[rip+0x@@ 16@@ 10@@ c]_0, mov_qword_ptr_[rip+0x@@ 14@@ d@@ 35@@ ]_rdi, je_0xd, ret, sub_rsp_8, xor_edi_edi, call_0xfffffffffffd@@ aa@@ 9a, mov_qword_ptr_[rip+0x@@ 160@@ e6@@ ]_rax, add_rsp_8, ret
endbr64, push_rbp, push_rbx, mov_rbx_rdi, xor_edi_edi, sub_rsp_8, mov_rbp_qword_ptr_[rip+0x@@ 160@@ c2], test_rbp_rbp, je_0x55, call_0xfffffffffffd@@ aa@@ 65, sub_rax_rbp, mov_rcx_qword_ptr_[rip+0x@@ 14@@ cd@@ e], lea_rdx_[rip+0x4@@ 28@@ c], mov_r9_rbx, mov_esi_1, lea_r8_[rip+0x@@ 7d@@ 45], cmp_byte_ptr_[rcx]_0, cmove@@ _r8@@ _rdx, sub_rsp_8, lea_rdx_[rip+0x@@ 8b@@ 4e], push_rax, mov_rax_qword_ptr_[rip+0x@@ 130@@ 86], mov_rdi_qword_ptr_[rax], xor_eax_eax, call_0xfffffffffffd@@ ad@@ 51, mov_edi_1, call_0x1@@ 17, call_0xfffffffffffd@@ aa@@ 12, sub_rax@@ _qword_ptr_[rip+0x@@ 130@@ 36], jmp_0xffffffffffffffa@@ 9
endbr64, test_rdi_rdi, push_rbp, mov_ebp_1, cmovne@@ _rbp@@ _rdi, mov_rdi_rbp, call_0xfffffffffffd@@ ab@@ 3c, test_rax_rax, je_4, pop_rbp, ret, mov_rdi_rbp, call_0xffffffffffffff@@ 5@@ d
endbr64, push_rbp, push_rbx, sub_rsp_8, test_rdi_rdi, je_0x2b, mov_rbx_rdi, mov_rbp_rsi, test_rsi_rsi, je_0x20, mov_rsi_rbp, mov_rdi_rbx, call_0xfffffffffffda@@ 9d0, test_rax_rax, je_0x1c, add_rsp_8, pop_rbx, pop_rbp, ret, mov_ebp_1, mov_ebx_1, jmp_0xffffffffffffffd8, imul@@ _rbx@@ _rbp, mov_rdi_rbx, call_0xffffffffffffff@@ 0@@ 5
endbr64, push_rbp, test_rsi_rsi, mov_ebp_1, cmovne@@ _rbp@@ _rsi, test_rdi_rdi, je_0x14, mov_rsi_rbp, call_0xfffffffffffd@@ ab@@ 77, test_rax_rax, je_0x11, pop_rbp, ret, mov_rdi_rbp, call_0xfffffffffffd@@ aa@@ a5, jmp_0xffffffffffffff@@ ee, mov_rdi_rbp, call_0xfffffffffffffec@@ b
endbr64, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, call_0xfffffffffffda@@ 7f@@ 2, lea_r12@@ _[rax+1], mov_rdi_r12, call_0xffffffffffffff@@ 26, add_rsp_8, mov_rdx_r12, mov_rsi_rbp, mov_rdi_rax, pop_rbp, pop_r12, jmp_0xfffffffffff@@ da@@ 9e@@ 1
endbr64, lea_rax_[rip+0x15@@ f7@@ 5], push_rbp, mov_ebp_edi, mov_rax_qword_ptr_[rax], test_rax_rax, je_4, call_rax, mov_edi_ebp, call_0xfffffffffffda@@ be@@ 6
endbr64, push_r15, lea_r15_[rip+0x@@ 11@@ a0@@ 3], push_r14, mov_r14_rdx, push_r13, mov_r13_rsi, push_r12, mov_r12d_edi, push_rbp, lea_rbp_[rip+0x@@ 11@@ 9f@@ 4], push_rbx, sub_rbp@@ _r15, sub_rsp_8, call_0xfffffffffffd@@ 9f@@ 34, sar@@ _rbp@@ _3, je_0x21, xor_ebx_ebx, mov_rdx_r14, mov_rsi_r13, mov_edi_r12d, call_qword_ptr_[r@@ 15+r@@ bx*8], add_rbx_1, cmp_rbp_rbx, jne_0xffffffffffffffec, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
endbr64, ret
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 38@@ 2@@ 8d], endbr64, mov_rdx_qword_ptr_[rip+0x@@ 12@@ e@@ dd], xor_esi_esi, jmp_0xfffffffffff@@ da@@ b4@@ 3
endbr64, sub_rsp_8, add_rsp_8, ret
