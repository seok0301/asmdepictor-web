endbr64, sub_rsp_8, mov_rax_qword_ptr_[rip+0x3@@ 1fd@@ 9], test_rax_rax, je_4, call_rax, add_rsp_8, ret
push_qword_ptr_[rip+0x@@ 3@@ 1c@@ 32], b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 1c@@ 33@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 18@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 15@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 15@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 15@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 15@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 15@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 15@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 15@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 150@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 150@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ f5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ e5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ d5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ cd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ c5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ bd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ b5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ a5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 85@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 7d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 75@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 6d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 65@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 140@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ e5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ d5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ cd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ c5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ bd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ b5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ ad@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ a5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 85@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 7d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 75@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 6d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 65@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 13@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 130@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ f5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ e5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ d5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ cd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ c5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ bd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ b5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ ad@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ a5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 85@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 7d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 6d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 65@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 120@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 120@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 11@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 11@@ f5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 11@@ ed@@ ]
call_0xfffffffffffff9b@@ 0
call_0xfffffffffffff9a@@ b
call_0xfffffffffffff9a@@ 6
call_0xfffffffffffff9a@@ 1
call_0xfffffffffffff99@@ c
call_0xfffffffffffff99@@ 7
call_0xfffffffffffff99@@ 2
call_0xfffffffffffff98@@ d
call_0xfffffffffffff98@@ 8
call_0xfffffffffffff98@@ 3
call_0xfffffffffffff97@@ e
call_0xfffffffffffff97@@ 9
call_0xfffffffffffff97@@ 4
call_0xfffffffffffff96@@ f
call_0xfffffffffffff96@@ a
call_0xfffffffffffff96@@ 5
call_0xfffffffffffff96@@ 0
call_0xfffffffffffff95@@ b
call_0xfffffffffffff95@@ 6
call_0xfffffffffffff95@@ 1
call_0xfffffffffffff94@@ c
call_0xfffffffffffff94@@ 7
endbr64, push_r15, push_r14, mov_r14d@@ _0xffffffff, push_r13, push_r12, movsxd_r12@@ _edi, push_rbp, mov_rbp_rsi, push_rbx, lea_rbx_[rip+0x@@ 26@@ de@@ f], sub_rsp_0x48, mov_rdi_qword_ptr_[rsi], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x20]_0, mov_qword_ptr_[rsp+0x28]_0, mov_dword_ptr_[rip+0x3@@ 120@@ c]_2, call_0xf@@ 17@@ c, lea_rsi_[rip+0x27@@ 7@@ 80], mov_edi_6, call_0xfffffffffffffd@@ 2b, lea_rsi_[rip+0x25@@ 29@@ a], lea_rdi_[rip+0x@@ 25@@ 33@@ 6], call_0xfffffffffffffa0@@ 8, lea_rdi_[rip+0x@@ 25@@ 32@@ a], call_0xfffffffffffff9b@@ c, xor_edi_edi, call_0xa@@ b@@ 95, lea_rax_[rip+0x3@@ 37@@ 79], mov_qword_ptr_[rip+0x3@@ 13@@ 12@@ ]_rax, mov_edi_0x5@@ 0@@ a@@ 46, lea_rax_[rip+0x3@@ 38@@ 06], mov_qword_ptr_[rip+0x3@@ 12@@ bf@@ ]_rax, call_0x1@@ ed@@ 7f, call_0xb@@ 18@@ a, mov_qword_ptr_[rip+0x3@@ 36@@ d6@@ ]_rax, mov_byte_ptr_[rip+0x@@ 3@@ 37@@ 88]_0, mov_byte_ptr_[rsp+0x1@@ e]_0, mov_qword_ptr_[rsp+8]_0, mov_byte_ptr_[rsp+0x1@@ f]_0, mov_qword_ptr_[rsp+0x10@@ ]_-1, xor_r8d_r8d, lea_rcx_[rip+0x@@ 30@@ 29@@ e], lea_rdx_[rip+0x27@@ 11@@ 7], mov_rsi_rbp, mov_edi_r12d, call_0xfffffffffffff9e@@ 1, mov_r13d_eax, cmp_eax_-1, je_0xa@@ 2f, cmp_r13d@@ _0x@@ 9a, ja@@ _0xf@@ 55, mov_eax_r13d, movsxd_rax_dword_ptr_[r@@ bx+rax*4], add_rax_rbx, jmp_rax, cmp_dword_ptr_[rip+0x@@ 3@@ 2c@@ 50]_1, je_0x4@@ 9c, mov_eax_dword_ptr_[rip+0x3@@ 2d@@ 14], test_eax_eax, je_0x2@@ 11, cmp_eax_2, je_0x6@@ f4, lea_rax_[rip+0x24@@ 77@@ a], cmp_qword_ptr_[rsp+0x10]_0, mov_qword_ptr_[rip+0x3@@ 2c@@ f7@@ ]_rax, js_0x2@@ bd, mov_eax_dword_ptr_[rip+0x3@@ 2c@@ e3], mov_rsi_qword_ptr_[rip+0x@@ 3@@ 2c@@ fc], sub_eax_2, cmp_eax_1, jbe_0x@@ 4@@ 12, cmp_qword_ptr_[rip+0x@@ 3@@ 2c@@ 70]_0, jne_0xd, mov_qword_ptr_[rip+0x3@@ 2c@@ 63@@ ]_8, cmp_qword_ptr_[rsp+8]_0, movzx_eax_byte_ptr_[rip+0x@@ 3@@ 2d@@ 40], je_0x2@@ 2b, mov_edi_1, test_al_al, jne_9, mov_rdi_qword_ptr_[rip+0x3@@ 2c@@ 40], mov_rbx_qword_ptr_[rsp+8], lea_rcx_[r@@ di+@@ 3], mov_rdx_rcx, mov_rax_rbx, shr_rdx_1, shr_rax_1, and_rcx@@ _rbx, add_rax_rdx, and_ecx_1, add_rcx_rax, mov_rax_rcx, xor_edx_edx, div@@ _rdi, mov_rdi_rcx, sub_rdi_rdx, cmp_rdi@@ _3, jbe_0x@@ 1f8, cmp_rdi_rbx, jae_0x@@ 1e@@ f, sub_rdx_rcx, mov_rcx_qword_ptr_[rsp+8], lea_rax_[rdx@@ +rcx], lea_rdx_[r@@ di-@@ 3], cmp_rax_rdx, cmova@@ _rax_rdx, test_rax_rax, cmove@@ _rdi@@ _rcx, mov_qword_ptr_[rip+0x3@@ 2b@@ 29@@ ]_rax, mov_qword_ptr_[rsp+8]_rdi, mov_rax_qword_ptr_[rsp+8], cmp_qword_ptr_[rip+0x@@ 3@@ 2c@@ 3@@ 8]_rsi, mov_qword_ptr_[rip+0x3@@ 2c@@ 4@@ 1]_rax, jg@@ e_@@ 9, mov_qword_ptr_[rip+0x3@@ 2c@@ 28]_rsi, lea_rdi_[rip+0x30@@ 7@@ 39], call_0x3@@ 32@@ 9, lea_rdi_[rip+0x30@@ 6e@@ d], call_0x33@@ 1d, mov_eax_dword_ptr_[rip+0x3@@ 2b@@ f2], cmp_eax_7, je_0x1@@ c9, cmp_eax_8, setne_al, or_al@@ _byte_ptr_[r@@ ip+0x@@ 3@@ 2b@@ 5a], mov_byte_ptr_[rip+0x@@ 3@@ 2b@@ db@@ ]_al, movzx_eax_byte_ptr_[rip+0x@@ 3@@ 2c@@ 61], movzx_ecx_byte_ptr_[r@@ ip+0x@@ 3@@ 2b@@ da], or_al@@ _byte_ptr_[r@@ ip+0x@@ 3@@ 2b@@ c8], or_al@@ _byte_ptr_[r@@ ip+0x@@ 3@@ 2b@@ 5d], cmp_qword_ptr_[rip+0x@@ 30@@ 6a@@ 5]_0, movzx_eax_al, mov_edx_1, je_0x2@@ 5c, or_eax_edx, not_eax, and_eax_ecx, mov_byte_ptr_[rip+0x@@ 3@@ 2b@@ cb@@ ]_al, mov_eax_dword_ptr_[rip+0x@@ 30@@ 6@@ 1d], lea_rbx_[r@@ bp+8], and_byte_ptr_[r@@ ip+0x@@ 32@@ bb@@ a]_1, cmp_eax_1, jle_0x@@ 3c0, sub_eax_2, lea_r13_[r@@ bp@@ +rax*8@@ +0x10], mov_r14_rbx, mov_r15d_1, mov_rdi_qword_ptr_[r14], add_r14_8, call_0xf@@ 26@@ 9, lea_r15_[r@@ 15@@ +rax+1], cmp_r13@@ _r14, jne_0xffffffffffffffec, mov_rdi_r15, call_0x1@@ 00@@ e7, mov_r14_rax, mov_byte_ptr_[rax]_0x20, lea_rdi_[rax+1], add_rbx_8, mov_rsi_qword_ptr_[r@@ bx-8], call_0xf@@ 28@@ 9, cmp_r13_rbx, jne_0xffffffffffffffe9, mov_byte_ptr_[rax]_0, mov_qword_ptr_[rip+0x3@@ 2b@@ 1d@@ ]_r14, cmp_qword_ptr_[rsp+0x20]_0, je_0x1@@ df, cmp_qword_ptr_[rsp+0x28]_0, je_0x1@@ 6e, lea_rdi_[rip+0x24@@ cb@@ e], call_0x8@@ 9f@@ 6, cmp_byte_ptr_[rsp+0x1@@ e]_0, je_0x2@@ 09, cmp_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rip+0x3@@ 2a@@ e6@@ ]_2, js_0x8@@ 9, mov_edi_2, call_0xb0@@ eb, test_al_al, je_0x2@@ e9, lea_rax_[rip+0x24@@ 54@@ 5], mov_qword_ptr_[rip+0x3@@ 2a@@ c8]_rax, jmp_0xfffffffffffffdd@@ 7, test_al_al, jne_0x1@@ a4, mov_qword_ptr_[rsp+8]@@ _0x8@@ 2, jmp_0xfffffffffffffdd@@ 3, mov_qword_ptr_[rip+0x@@ 32@@ 9@@ 5a@@ ]_0, jmp_0xfffffffffffffe@@ 36, mov_edi_2, mov_qword_ptr_[rip+0x3@@ 2a@@ 6d@@ ]_3, call_0xb0@@ 5d, test_al_al, jne_0x34@@ a, lea_rax_[rip+0x24@@ 4c@@ f], mov_qword_ptr_[rip+0x3@@ 2a@@ 3a@@ ]_rax, mov_rsi_qword_ptr_[rip+0x@@ 3@@ 2a@@ 4b], jmp_0xfffffffffffffd@@ 5b, cmp_qword_ptr_[rip+0x@@ 32@@ 97@@ e]_0, je_0x3@@ 0f, cmp_qword_ptr_[rip+0x@@ 32@@ 97@@ 8]_0, je_0x2@@ ba, cmp_qword_ptr_[rip+0x@@ 32@@ 97@@ 2]_0, je_0x2@@ 99, cmp_qword_ptr_[rip+0x@@ 32@@ 90@@ c]_0, mov_rax_qword_ptr_[rip+0x@@ 32@@ 9@@ 15], je_0x2@@ c4, cmp_qword_ptr_[rip+0x@@ 3@@ 28@@ ff@@ ]_0, je_0x2@@ 9c, cmp_qword_ptr_[rip+0x@@ 3@@ 28@@ e@@ 1]_0, je_0x2@@ 1c, test_rax_rax, je_0x2@@ 2a, mov_rdi_qword_ptr_[rip+0x3@@ 28@@ cb], mov_eax_1, cmp_byte_ptr_[rdi]_0, jne_0x1@@ 6a, and_eax_1, jmp_0xfffffffffffffd@@ cd, mov_eax_dword_ptr_[rip+0x@@ 30@@ 42@@ 7], xor_r13d_r13d, cmp_eax_r12d, jge_0x@@ 36, cdqe, mov_rdx_qword_ptr_[r@@ bp+rax*8], mov_rsi_qword_ptr_[rsp+0x20], xor_edi_edi, call_0x3@@ 18@@ 2, cmp_r13d_eax, cmovl@@ _r13d_eax, mov_eax_dword_ptr_[rip+0x@@ 30@@ 3f8], inc_eax, mov_dword_ptr_[rip+0x@@ 30@@ 3f@@ 0]_eax, cmp_eax_r12d, jl_0xffffffffffffff@@ d5, call_0x87@@ 13, call_0x40@@ 4e, mov_edi_r13d, call_0xffffffffffffef@@ 96, xor_edx_edx, cmp_dword_ptr_[rip+0x@@ 3@@ 28@@ c0]_0, setne_dl, jmp_0xfffffffffffffd@@ 9e, cmp_qword_ptr_[rsp+0x28]_0, movsxd_rax_dword_ptr_[rip+0x@@ 30@@ 3@@ bb], jne_0x2@@ cf, mov_edx_r12d, sub_edx_eax, cmp_edx_2, je_0x2@@ a5, dec@@ _edx, jle_0x@@ 14@@ 5, mov_rsi_qword_ptr_[r@@ bp@@ +rax*8@@ +0x10], lea_rdi_[rip+0x24@@ 5a@@ 9], call_0x2@@ fc@@ b, mov_dword_ptr_[rip+0x3@@ 28@@ e@@ 9]_1, lea_rax_[rip+0x24@@ 360], jmp_0xfffffffffffffb@@ e6, mov_qword_ptr_[rip+0x3@@ 27@@ ca@@ ]@@ _0x3f, mov_qword_ptr_[rsp+8]@@ _0x4@@ 3, jmp_0xfffffffffffffc@@ 9d, cmp_qword_ptr_[rsp+0x1@@ 0]_rsi, jg_0x1@@ 3, je_0xfffffffffffffb@@ ed, cmp_byte_ptr_[rsp+0x1@@ f]_0, jne_0xfffffffffffffb@@ e2, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rip+0x3@@ 28@@ c0]_rax, mov_rsi_rax, jmp_0xfffffffffffffb@@ cd, lea_rdi_[rip+0x24@@ 4e@@ f], call_0xffffffffffffe@@ 8f@@ d, mov_rdi_rax, test_rax_rax, je_0xfffffffffffffb@@ 58, lea_rsi_[rip+0x24@@ 4d@@ c], call_0xffffffffffffec@@ 55, test_eax_eax, jne_0xfffffffffffffb@@ 44, mov_dword_ptr_[rip+0x3@@ 27@@ 7e@@ ]_0, jmp_0xfffffffffffffb@@ 34, lea_rsi_[rip+0x24@@ 4c@@ 2], call_0xffffffffffffec@@ 32, mov_r8d_eax, xor_eax_eax, test_r8d_r8d, jne_0xfffffffffffffe@@ 88, mov_rax_qword_ptr_[rip+0x3@@ 27@@ 88], cmp_byte_ptr_[rax]_0, sete_al, movzx_eax_al, jmp_0xfffffffffffffe@@ 72, xor_esi_esi, xor_edi_edi, call_0x2@@ eb@@ 0, lea_rax_[rip+0x24@@ 27@@ a], mov_qword_ptr_[rip+0x3@@ 27@@ e5@@ ]_rax, jmp_0xfffffffffffffa@@ f4, mov_rsi_qword_ptr_[r@@ bp+r@@ 12*@@ 8-8], lea_rdi_[rip+0x24@@ 44@@ f], call_0x2e@@ 8c, mov_edi_1, call_0xfd@@ 52, mov_r14_rax, jmp_0xfffffffffffffc@@ 8b, lea_rdi_[rip+0x24@@ 42@@ e], mov_qword_ptr_[rip+0x3@@ 26@@ b7@@ ]_rdi, test_rax_rax, jne_0xffffffffffffff@@ 5b, mov_rsi_qword_ptr_[rip+0x@@ 3@@ 26@@ b7], mov_rdi_qword_ptr_[rip+0x3@@ 26@@ a8], lea_rdx_[rip+0x26@@ 70@@ 9], call_0x@@ 99@@ 99, mov_qword_ptr_[rip+0x3@@ 26@@ a5@@ ]_rax, mov_eax_dword_ptr_[rip+0x3@@ 27@@ 77], cmp_eax_7, je_0xfffffffffffffd@@ b2, jmp_0xfffffffffffffb@@ 85, lea_rax_[rip+0x24@@ 3d@@ e], mov_qword_ptr_[rip+0x@@ 32@@ 6c@@ b@@ ]_rax, jmp_0xfffffffffffffd@@ 5f, lea_rax_[rip+0x24@@ 3c@@ b], mov_qword_ptr_[rip+0x3@@ 26@@ b0]_rax, jmp_0xfffffffffffffd@@ 3e, test_rax_rax, lea_rdx_[rip+0x24@@ 1e@@ 1], cmovne_rdx_rax, mov_qword_ptr_[rip+0x3@@ 26@@ 4e@@ ]_rdx, jmp_0xfffffffffffffd@@ 55, test_rax_rax, lea_rdx_[rip+0x24@@ 1c@@ 4], cmovne_rdx_rax, mov_qword_ptr_[rip+0x3@@ 26@@ 2c]@@ _rdx, jmp_0xfffffffffffffd@@ 2d, lea_rax_[rip+0x24@@ 38@@ 4], mov_qword_ptr_[rip+0x3@@ 26@@ 6@@ 1]_rax, jmp_0xfffffffffffffc@@ e9, lea_rax_[rip+0x24@@ 17@@ 3], mov_qword_ptr_[rip+0x3@@ 26@@ f6@@ ]_rax, mov_rsi_qword_ptr_[rip+0x@@ 32@@ 70@@ 7], jmp_0xfffffffffffffa@@ 17, inc_rax, mov_rdx_qword_ptr_[r@@ bp+rax*8], mov_rsi_qword_ptr_[r@@ bp@@ +rax*8@@ -8], xor_edi_edi, call_0x2e@@ 71, mov_r13d_eax, jmp_0xfffffffffffffd@@ 06, xor_r13d_r13d, jmp_0x27, mov_rsi_qword_ptr_[r@@ bp+rax*8], mov_rdx_qword_ptr_[rsp+0x28], xor_edi_edi, call_0x2e@@ 53, cmp_r13d_eax, cmovl@@ _r13d_eax, inc_dword_ptr_[rip+0x@@ 3@@ 00@@ c9], movsxd_rax_dword_ptr_[rip+0x@@ 3@@ 00@@ c2], cmp_eax_r12d, jl_0xffffffffffffff@@ d8, jmp_0xfffffffffffffc@@ d2, mov_edi_2, call_0xac@@ 20, test_al_al, jne_0xfffffffffffff@@ 906, lea_rax_[rip+0x24@@ 0@@ 92], jmp_0xfffffffffffff90@@ 0
endbr64, xor_ebp_ebp, mov_r9_rdx, pop_rsi, mov_rdx_rsp, and_rsp_0xfffffffffffffff0, push_rax, push_rsp, lea_r8_[rip+0x2@@ 30@@ e6], lea_rcx_[rip+0x2@@ 30@@ 6f], lea_rdi_[rip-0x@@ 12@@ d8], call_qword_ptr_[rip+0x2@@ fe@@ b2], hlt
lea_rdi_[rip+0x2@@ ff@@ e9], lea_rax_[rip+0x2@@ ff@@ e2], cmp_rax_rdi, je_0x17, mov_rax_qword_ptr_[rip+0x2@@ fe@@ 86], test_rax_rax, je_0xb, jmp_rax, ret
lea_rdi_[rip+0x2@@ ff@@ b9], lea_rsi_[rip+0x2@@ ff@@ b2], sub_rsi_rdi, mov_rax_rsi, shr_rsi@@ _0x3f, sar_rax_3, add_rsi_rax, sar_rsi_1, je_0x16, mov_rax_qword_ptr_[rip+0x2@@ fe@@ 65], test_rax_rax, je_0xa, jmp_rax, ret
endbr64, cmp_byte_ptr_[rip+0x2@@ ff@@ bd@@ ]_0, jne_0x2d, push_rbp, cmp_qword_ptr_[rip+0x2@@ fe@@ 42@@ ]_0, mov_rbp_rsp, je_0xe, mov_rdi_qword_ptr_[rip+0x2@@ fe@@ 46], call_0xffffffffffffe5@@ 3e, call_0xffffffffffffff@@ 69, mov_byte_ptr_[rip+0x2@@ ff@@ 95@@ ]_1, pop_rbp, ret, ret
endbr64, jmp_0xffffffffffffff7@@ c
push_r15, push_r14, mov_r14_rcx, push_r13, mov_r13_rsi, push_r12, push_rbp, push_rbx, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x20]_r9, mov_byte_ptr_[rsp+0x@@ 66@@ ]@@ _r8b, mov_r15_qword_ptr_[r@@ 9], mov_rbx_qword_ptr_[r@@ 9+8], cmp_rdx_rcx, jge_0x@@ ad, cmp_rdi_rsi, jl@@ _0x24, jmp_0x@@ a2, inc_rdi, inc_rdx, cmp_r13@@ _rdi, jle_0x@@ 8f, cmp_r14@@ _rdx, jle_0x@@ 86, mov_rax_qword_ptr_[r@@ bx@@ +rdx*8], cmp_qword_ptr_[r@@ 15+r@@ di*@@ 8]_rax, je_0xffffffffffffffe0, cmp_r14@@ _rdx, jle_0x@@ 73, cmp_r13@@ _rdi, jg@@ _0x16, jmp_0x6@@ c, dec@@ _r13, dec@@ _r14, cmp_r13@@ _rdi, jle_0x@@ 5f, cmp_r14@@ _rdx, jle_0x@@ 5a, mov_rax_qword_ptr_[r@@ bx+r@@ 14*@@ 8-8], cmp_qword_ptr_[r@@ 15+r@@ 13*@@ 8@@ -@@ 8]_rax, je_0xffffffffffffffe6, cmp_r14@@ _rdx, jne_0x81, cmp_r13@@ _rdi, jle_0x@@ 2a, mov_rax_qword_ptr_[rip+0x@@ 32@@ 5d@@ 1], mov_rdx_qword_ptr_[rip+0x@@ 32@@ 5d@@ a], mov_rax_qword_ptr_[rax+r@@ di*8], inc_rdi, mov_byte_ptr_[rdx@@ +rax@@ ]_1, cmp_rdi_r13, jne_0xffffffffffffffe4, xor_eax_eax, add_rsp_0xd8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, cmp_r13@@ _rdi, jne_0xffffffffffffffb1, cmp_r14@@ _rdx, jle_0xffffffffffffff@@ de, mov_rax_qword_ptr_[rip+0x3@@ 26@@ b9], mov_rcx_qword_ptr_[rip+0x@@ 32@@ 6c@@ 2], mov_rax_qword_ptr_[rax+rdx*8], inc_rdx, mov_byte_ptr_[rcx@@ +rax@@ ]_1, cmp_rdx@@ _r14, jne_0xffffffffffffffe4, jmp_0xffffffffffffffb8, mov_rsi_rdi, sub_rsi@@ _r14, mov_qword_ptr_[rsp+0x28]_rsi, mov_r8_rdi, mov_rsi_r13, sub_r8@@ _rdx, sub_rsi_rdx, mov_r9_r13, sub_r9@@ _r14, mov_qword_ptr_[rsp+0x3@@ 0]_rsi, mov_rsi_r8, sub_rsi@@ _r9, mov_r10d@@ _esi, not@@ _rsi, and_esi_1, mov_byte_ptr_[rsp+0x@@ 67@@ ]_sil, mov_esi_2, mov_rax_qword_ptr_[rsp+0x20], sub_rsi@@ _r9, mov_qword_ptr_[rsp+0x8@@ 0]_rsi, lea_rsi_[r@@ 13@@ -0x@@ 13], mov_rcx_qword_ptr_[rax+0x10], mov_qword_ptr_[rsp+0x6@@ 8]_rsi, mov_rax_qword_ptr_[rax+0x18], lea_rsi_[r@@ 14@@ -0x@@ 13], mov_qword_ptr_[rsp+0x8@@ 8]_rsi, lea_rsi_[r@@ di+0x1@@ 3], mov_qword_ptr_[rcx@@ +r@@ 8@@ *@@ 8]_rdi, mov_qword_ptr_[rsp+0x4@@ 8]_r13, mov_qword_ptr_[rax+r@@ 9@@ *@@ 8]_r13, mov_qword_ptr_[rsp+0x7@@ 8]_r8, mov_qword_ptr_[rsp+0x10]_r9, mov_qword_ptr_[rsp+0x@@ 38]_1, mov_qword_ptr_[rsp+0x7@@ 0]_rsi, mov_qword_ptr_[rsp+0x5@@ 0]_rdi, mov_qword_ptr_[rsp+8]_rdx, mov_qword_ptr_[rsp+0x5@@ 8]_r14, and_r10d@@ _1, mov_r13_r8, cmp_qword_ptr_[rsp+0x@@ 2@@ 8]_r8, jge_0x@@ 2d@@ 5, dec@@ _r8, mov_qword_ptr_[rcx@@ +r@@ 8@@ *@@ 8@@ -@@ 8]_-1, cmp_qword_ptr_[rsp+0x@@ 30]@@ _r13, jle_0x@@ 2c@@ c, mov_qword_ptr_[rcx@@ +r@@ 13*@@ 8+0x1@@ 0@@ ]_-1, inc@@ _r13, cmp_r8@@ _r13, jg_0x5@@ 4b, mov_qword_ptr_[rsp+0x4@@ 0]_r13, mov_rdx_r13, mov_qword_ptr_[rsp+0x18]_rax, mov_r13@@ _qword_ptr_[rsp+0x48], mov_r14@@ _qword_ptr_[rsp+0x58], xor_edi_edi, jmp_0x16, sub_rdx@@ _2, cmp_rdx@@ _r8, jl@@ _0xf@@ 9, mov_rsi_qword_ptr_[r@@ cx@@ +rdx*@@ 8-8], mov_rax_qword_ptr_[r@@ cx@@ +rdx*@@ 8+8], lea_r11_[r@@ si+1], cmp_rsi_rax, cmovge@@ _rax@@ _r11, mov_r12_rax, sub_r12@@ _rdx, cmp_rax_r13, setl@@ _r11b, cmp_r12@@ _r14, setl@@ _sil, mov_rbp_rax, and@@ _sil@@ _r11b, je_0x1d, mov_r11_qword_ptr_[r@@ bx+r@@ 12*8], cmp_qword_ptr_[r@@ 15+r@@ bp*@@ 8]_r11, je_0x9a, mov_r11@@ _rbp, sub_r11@@ _rax, cmp_r11@@ _0x15, cmovge@@ _edi@@ _esi, cmp_r9@@ _rdx, setl@@ e_@@ sil, cmp_qword_ptr_[rsp+0x1@@ 0]_rdx, setg@@ e_al, mov_qword_ptr_[rcx@@ +rdx*@@ 8]_rbp, test_sil@@ _al, je_0xffffffffffffff@@ 91, test_r10b_r10b, je_0xffffffffffffff@@ 8c, mov_rax_qword_ptr_[rsp+0x18], cmp_qword_ptr_[r@@ ax+rdx*@@ 8]_rbp, jg_0xffffffffffffff@@ 81, mov_rdi_qword_ptr_[rsp+0x50], mov_rdx_qword_ptr_[rsp+8], mov_r8d_1, mov_ebx_1, mov_r15_qword_ptr_[rsp+0x20], mov_rcx_r12, mov_r9_r15, mov_rsi_rbp, call_0xfffffffffffffd@@ 48, test_al_al, jne_0x22, mov_r9_r15, movzx_r8d@@ _bl, mov_rcx_r14, mov_rdx_r12, mov_rsi_r13, mov_rdi_rbp, call_0xfffffffffffffd@@ 2c, test_al_al, je_0xfffffffffffffd@@ e5, mov_eax_1, jmp_0xfffffffffffffdd@@ a, inc_rbp, inc_r12, cmp_rbp@@ _r13, jge_0xffffffffffffff@@ 63, cmp_r12@@ _r14, jl_0xffffffffffffff@@ 4c, jmp_0xffffffffffffff54, mov_rax_qword_ptr_[rsp+0x18], mov_r13@@ _qword_ptr_[rsp+0x40], cmp_qword_ptr_[rsp+0x@@ 2@@ 8]_r9, jge_0x@@ 1a@@ 1, dec@@ _r9, movabs_rsi@@ _0x7@@ fffffffffffffff, mov_qword_ptr_[rax+r@@ 9@@ *@@ 8@@ -@@ 8]_rsi, mov_rsi_qword_ptr_[rsp+0x10], cmp_qword_ptr_[rsp+0x@@ 3@@ 0]_rsi, jle_0x@@ 16@@ f, movabs_rdx@@ _0x7@@ fffffffffffffff, mov_qword_ptr_[rax+r@@ si*@@ 8+0x1@@ 0]_rdx, inc@@ _rsi, mov_qword_ptr_[rsp+0x10]_rsi, mov_rsi_qword_ptr_[rsp+0x10], cmp_r9@@ _rsi, jg_0x@@ e5, mov_qword_ptr_[rsp+0x18]_rcx, mov_byte_ptr_[rsp+0x@@ 40]@@ _r10b, mov_r11@@ _qword_ptr_[rsp+0x50], movzx_r14d@@ _byte_ptr_[rsp+0x@@ 67], jmp_0x14, sub_rsi@@ _2, cmp_rsi@@ _r9, jl@@ _0x@@ b1, mov_rcx_qword_ptr_[r@@ ax+r@@ si*@@ 8+8], mov_rdx_qword_ptr_[r@@ ax+r@@ si*@@ 8-8], lea_r10_[r@@ cx-1], cmp_rdx_rcx, cmovge@@ _rdx@@ _r10, mov_r12_rdx, sub_r12@@ _rsi, cmp_r12@@ _qword_ptr_[rsp+8], setg@@ _r10b, cmp_rdx@@ _r11, setg@@ _cl, mov_rbp_rdx, and@@ _cl@@ _r10b, je_0x18, mov_r10_qword_ptr_[r@@ bx+r@@ 12*@@ 8-8], cmp_qword_ptr_[r@@ 15+r@@ bp*@@ 8@@ -@@ 8]_r10, je_0x57, sub_rdx@@ _rbp, cmp_rdx@@ _0x15, cmovge@@ _edi@@ _ecx, cmp_r13@@ _rsi, setg@@ e_@@ cl, cmp_r8@@ _rsi, setl@@ e@@ _dl, mov_qword_ptr_[rax+r@@ si*@@ 8]_rbp, test_cl@@ _dl, je_0xffffffffffffff@@ 99, test_r14b_r14b, je_0xffffffffffffff@@ 94, mov_rcx_qword_ptr_[rsp+0x18], cmp_qword_ptr_[r@@ cx+r@@ si*@@ 8]_rbp, jl_0xffffffffffffff@@ 89, mov_r13@@ _qword_ptr_[rsp+0x48], mov_rdx_qword_ptr_[rsp+8], mov_r14@@ _qword_ptr_[rsp+0x58], mov_rdi_r11, mov_r8d_1, mov_ebx_1, jmp_0xfffffffffffffe@@ 8c, dec@@ _rbp, dec@@ _r12, cmp_rbp@@ _r11, jle_0xffffffffffffff@@ a2, cmp_r12@@ _qword_ptr_[rsp+8], jg_0xffffffffffffff@@ 8f, jmp_0xffffffffffffff99, mov_rcx_qword_ptr_[rsp+0x18], movzx_r10d@@ _byte_ptr_[rsp+0x@@ 40], cmp_byte_ptr_[rsp+0x@@ 66@@ ]_0, jne_0x31, cmp_qword_ptr_[rsp+0x@@ 38]@@ _0x@@ c8, mov_rsi_qword_ptr_[rsp+0x20], setg@@ _dl, test_byte_ptr_[rsi+0x@@ 20]@@ _dl, je_7, test_dil_dil, jne_0x5d, mov_rdi_qword_ptr_[rsp+0x20], mov_rsi_qword_ptr_[rsp+0x38], cmp_rsi_qword_ptr_[r@@ di+0x28], jge_0x@@ 38@@ 3, inc@@ _qword_ptr_[rsp+0x38], cmp_qword_ptr_[rsp+0x@@ 2@@ 8]_r8, jl_0xffffffffffff@@ fd@@ 37, inc@@ _r8, cmp_qword_ptr_[rsp+0x@@ 30]@@ _r13, jg_0xfffffffffffffd@@ 40, dec@@ _r13, jmp_0xfffffffffffffd@@ 43, dec@@ _qword_ptr_[rsp+0x10], jmp_0xfffffffffffffea9, inc@@ _r9, jmp_0xfffffffffffffe@@ 74, cmp_r8@@ _r13, jg_0x1@@ 55, mov_rdi_qword_ptr_[rsp+8], mov_r12d_2, add_rdi@@ _0x13, mov_qword_ptr_[rsp+0x4@@ 0]_r13, mov_qword_ptr_[rsp+0x9@@ 0]_r9, lea_r14_[r@@ 13@@ -2], mov_qword_ptr_[rsp+0x9@@ 8]_rdi, mov_qword_ptr_[rsp+0x18]_rax, mov_r9_qword_ptr_[rsp+0x38], mov_r13@@ _qword_ptr_[rsp+0x50], xor_r11d_r11d, sub_r12@@ _qword_ptr_[rsp+0x78], jmp_0x15, cmp_r8@@ _r14, jg_0x2@@ 1f, sub_r14@@ _2, mov_rbp_qword_ptr_[r@@ cx+r@@ 14*@@ 8+0x10], lea_rax_[r@@ 12+r@@ 14], mov_rdx_rbp, sub_rdx@@ _r13, mov_rsi_rax, sar_rsi@@ _0x3f, add_rdx_rdx, sub_rdx_rax, xor_rax@@ _rsi, sub_rax_rsi, add_rax@@ _r9, lea_rax_[rax+rax*2], shl_rax_2, cmp_rax@@ _r11, cmovl@@ _rax@@ _r11, lea_rdi_[r@@ 14+2], cmp_rdx_rax, jle_0xffffffffffffff@@ b8, cmp_rbp@@ _qword_ptr_[rsp+0x70], jle_0xffffffffffffff@@ b1, cmp_rbp@@ _qword_ptr_[rsp+0x48], jge_0xffffffffffffff@@ aa, mov_rax_rbp, sub_rax_rdi, mov_rdi_rax, cmp_rax@@ _qword_ptr_[rsp+0x98], jle_0xffffffffffffff@@ 97, cmp_rax@@ _qword_ptr_[rsp+0x58], jge_0xffffffffffffff@@ 90, lea_rax_[r@@ bp-1], lea_rsi_[rax@@ *8], mov_rax_qword_ptr_[r@@ 15@@ +rax*8], cmp_qword_ptr_[r@@ bx+r@@ di*@@ 8@@ -@@ 8]_rax, jne_0xffffffffffffff@@ 79, mov_qword_ptr_[rsp+0xc@@ 0]_rdi, mov_qword_ptr_[rsp+0xc@@ 8]_rdx, lea_rax_[r@@ 15+r@@ si+8], mov_qword_ptr_[rsp+0xb0]_rax, lea_rsi_[r@@ bx+r@@ di*8], xor_eax_eax, mov_rdx_qword_ptr_[rsp+0x@@ b0], mov_rdi_qword_ptr_[r@@ si@@ +rax@@ -0x10], cmp_qword_ptr_[rdx@@ +rax-0x@@ 1@@ 0]_rdi, jne_0xffffffffffffff@@ 3e, sub_rax_8, cmp_rax_-0x@@ 98, jne_0xffffffffffffffde, mov_rdi_qword_ptr_[rsp+0xc0], mov_rdx_qword_ptr_[rsp+0x@@ c8], cmp_r8@@ _r14, jg_0x3@@ 21, mov_qword_ptr_[rsp+0xa@@ 0]_rbp, mov_qword_ptr_[rsp+0xa@@ 8]_rdi, mov_r11@@ _rdx, jmp_0xffffffffffffff09, mov_rdi_qword_ptr_[rsp+0x10], cmp_r9@@ _rdi, jg_0xfffffffffffffe@@ 45, mov_qword_ptr_[rsp+0x9@@ 8]_r13, lea_r14_[r@@ di@@ -2], mov_r13_rcx, mov_qword_ptr_[rsp+0x18]_0, mov_byte_ptr_[rsp+0x@@ 40]@@ _r10b, mov_qword_ptr_[rsp+0x9@@ 0]_r8, mov_rcx_qword_ptr_[rsp+0x38], mov_rsi_qword_ptr_[rsp+0x48], mov_rdi_qword_ptr_[rsp+0x80], jmp_0xf, sub_r14@@ _2, lea_r8_[r@@ di+r@@ 14], mov_rbp_qword_ptr_[r@@ ax+r@@ 14*@@ 8+0x10], mov_r11@@ _r8, mov_rdx_rsi, sar@@ _r11@@ _0x3f, sub_rdx@@ _rbp, lea_rdx_[r@@ 8@@ +rdx*2], xor@@ _r8@@ _r11, sub_r8@@ _r11, add_r8@@ _rcx, lea_r8_[r@@ 8+r@@ 8@@ *2], shl_r8@@ _2, lea_r12_[r@@ 14+2], cmp_rdx@@ _r8, jle_0x@@ 32, cmp_rdx_qword_ptr_[r@@ sp+0x18], jle_0x@@ 2b, cmp_rbp@@ _qword_ptr_[rsp+0x50], jle_0x@@ 24, mov_r8_rbp, sub_r8@@ _r12, mov_r12_r8, cmp_rbp@@ _qword_ptr_[rsp+0x68], jge_0x@@ 14, cmp_r8@@ _qword_ptr_[rsp+8], jg_0x@@ bb, cmp_r9@@ _r14, jle_0xffffffffffffff@@ 95, cmp_qword_ptr_[rsp+0x18]_0, mov_rcx_r13, movzx_r10d@@ _byte_ptr_[rsp+0x@@ 40], mov_r8@@ _qword_ptr_[rsp+0x90], mov_r13@@ _qword_ptr_[rsp+0x98], je_0xfffffffffffffd@@ 71, mov_rdi_qword_ptr_[rsp+0x50], mov_r13@@ _qword_ptr_[rsp+0x48], mov_rdx_qword_ptr_[rsp+8], mov_r14@@ _qword_ptr_[rsp+0x58], mov_r12@@ _qword_ptr_[rsp+0x@@ a8], mov_rbp@@ _qword_ptr_[rsp+0xa0], xor_r8d_r8d, mov_ebx_1, jmp_0xfffffffffffffb@@ 7c, xor_edi_edi, jmp_0xfffffffffffffb@@ e5, mov_rax_qword_ptr_[rsp+0x18], mov_r13@@ _qword_ptr_[rsp+0x40], mov_r9@@ _qword_ptr_[rsp+0x90], test_r11_r11, je_0xfffffffffffffe@@ d1, mov_rdi_qword_ptr_[rsp+0x50], mov_r13@@ _qword_ptr_[rsp+0x48], mov_rdx_qword_ptr_[rsp+8], mov_r14@@ _qword_ptr_[rsp+0x58], mov_rbp@@ _qword_ptr_[rsp+0xa0], mov_r12@@ _qword_ptr_[rsp+0x@@ a8], mov_r8d_1, xor_ebx_ebx, jmp_0xfffffffffffffb@@ 29, cmp_r8@@ _qword_ptr_[rsp+0x88], jge_0xffffffffffffff@@ 4a, lea_r11_[r@@ 15+r@@ bp*8], mov_r10_qword_ptr_[r@@ 11], lea_r8_[r@@ bx+r@@ 8@@ *8], mov_qword_ptr_[rsp+0x@@ b0]_1, cmp_qword_ptr_[r@@ 8]_r10, jne_0xffffffffffffff@@ 2a, mov_qword_ptr_[rsp+0xb@@ 0]_r15, mov_qword_ptr_[rsp+0xc@@ 0]_rdx, mov_r15_r8, movzx_r10d@@ _byte_ptr_[rsp+0x@@ 40], mov_r8d_1, jmp_0xf, inc@@ _r8, cmp_r8@@ _0x14, je_0x1@@ 10, mov_rdx_qword_ptr_[r@@ 15+r@@ 8@@ *8], cmp_qword_ptr_[r@@ 11+r@@ 8@@ *@@ 8]_rdx, je_0xffffffffffffffeb, mov_byte_ptr_[rsp+0x@@ 40]@@ _r10b, mov_r15@@ _qword_ptr_[rsp+0xb0], jmp_0xfffffffffffffedf, mov_rbx_r13, mov_r15_r9, mov_rdi_qword_ptr_[rsp+0x50], mov_r13@@ _qword_ptr_[rsp+0x48], mov_rdx_qword_ptr_[rsp+8], mov_r14@@ _qword_ptr_[rsp+0x58], mov_r9@@ _-1, cmp_r8@@ _rbx, jg_0x4@@ d, mov_rsi_rbx, mov_rbx_qword_ptr_[rsp+0x@@ b8], mov_r11@@ _r8, cmp_qword_ptr_[r@@ cx+r@@ si*@@ 8]_r13, mov_r10@@ _r13, cmovle@@ _r10@@ _qword_ptr_[r@@ cx+r@@ si*8], mov_r8@@ _r10, sub_r8@@ _rsi, cmp_r8@@ _r14, jle_9, lea_r10_[r@@ 14+r@@ si], mov_r8_r14, add_r8@@ _r10, cmp_r8@@ _r9, jl@@ e_8, mov_rbx@@ _r10, mov_r9_r8, sub_rsi@@ _2, cmp_r11@@ _rsi, jle_0xffffffffffffff@@ cd, mov_qword_ptr_[rsp+0xb@@ 8]_rbx, mov_rcx_qword_ptr_[rsp+0x10], movabs@@ _r12@@ _0x7@@ fffffffffffffff, mov_r10@@ _r15, cmp_r15@@ _rcx, jg@@ _0x37, cmp_qword_ptr_[r@@ ax@@ +rcx*@@ 8]_rdi, mov_r8_rdi, cmovge@@ _r8@@ _qword_ptr_[r@@ ax@@ +rcx*8], mov_rsi_r8, sub_rsi_rcx, cmp_rsi_rdx, jg@@ e_@@ 9, lea_r8@@ _[rdx@@ +rcx], mov_rsi_rdx, add_rsi@@ _r8, cmp_rsi@@ _r12, jg@@ e_8, mov_rbp_r8, mov_r12_rsi, sub_rcx@@ _2, cmp_r10@@ _rcx, jle_0xffffffffffffff@@ cd, lea_rax_[r@@ 14+r@@ 13], lea_rcx_[r@@ dx+r@@ di], mov_rbx_r9, sub_rax_r12, sub_rbx@@ _rcx, cmp_rax_rbx, jge_0x@@ 15, mov_rbp@@ _qword_ptr_[rsp+0xb8], sub_r9@@ _rbp, mov_r12_r9, jmp_0xfffffffffffffe@@ 9a, sub_r12@@ _rbp, jmp_0xfffffffffffffe@@ 3f, mov_byte_ptr_[rsp+0x@@ 40]@@ _r10b, mov_r15@@ _qword_ptr_[rsp+0xb0], mov_rdx_qword_ptr_[rsp+0x@@ c0], cmp_r9@@ _r14, jg@@ _0x36, mov_qword_ptr_[rsp+0xa@@ 8]_r12, mov_qword_ptr_[rsp+0x18]_rdx, mov_qword_ptr_[rsp+0xa@@ 0]_rbp, jmp_0xfffffffffffffd@@ 55, mov_r12_rdi, mov_rdx_qword_ptr_[rsp+8], mov_rdi_r13, mov_r14@@ _qword_ptr_[rsp+0x58], mov_r13@@ _qword_ptr_[rsp+0x48], jmp_0xfffffffffffffe@@ 44, mov_rdi_qword_ptr_[rsp+0x50], mov_rdx_qword_ptr_[rsp+8], mov_r14@@ _qword_ptr_[rsp+0x58], mov_r13_rsi, jmp_0xfffffffffffffdd@@ a
push_r12, push_rbp, sub_rsp_8, mov_r12_qword_ptr_[rip+0x@@ 3@@ 1a@@ ea], test_r12_r12, je_0x57, mov_rbp_qword_ptr_[rip+0x@@ 3@@ 1a@@ d6], test_rbp_rbp, je_0x5e, cmp_byte_ptr_[rip+0x@@ 31b@@ 4b@@ ]_0, mov_edx_5, je_0x25, xor_edi_edi, lea_rsi_[rip+0x2@@ 34@@ 7e], call_0xffffffffffffdd@@ 5a, mov_rdi_rax, add_rsp_8, mov_rsi_rbp, pop_rbp, mov_rdx_r12, pop_r12, jmp_0x7@@ 8b@@ 5, xor_edi_edi, lea_rsi_[rip+0x2@@ 34@@ 8f], call_0xffffffffffffdd@@ 37, mov_rdi_rax, jmp_0xffffffffffffffdd, mov_rbp_qword_ptr_[rip+0x@@ 3@@ 1a@@ 81], mov_r12_qword_ptr_[r@@ di+0x1@@ 38], test_rbp_rbp, jne_0xffffffffffffffa6, mov_rbp_qword_ptr_[r@@ di+8], jmp_0xffffffffffffffa@@ 0
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0xc8, movzx_esi_byte_ptr_[r@@ ip+0x@@ 3@@ 1a@@ e1], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xb8]_rax, xor_eax_eax, call_0x4@@ ed@@ e, test_al_al, je_0x1@@ af, mov_rax_qword_ptr_[rbx+0x40], mov_rdx_qword_ptr_[rbx+0x1@@ 70], mov_ecx_dword_ptr_[rbx], cmp_rax_rdx, setne_dil, test_rax_rax, setg_al, mov_esi_dword_ptr_[r@@ bx+0x1@@ 30], test_dil@@ _al, je_0xb, test_rdx_rdx, jg_0x@@ b@@ 69, mov_r15_qword_ptr_[r@@ bx+0x@@ a0], cmp_ecx_esi, je_0x11a, mov_rsi_qword_ptr_[r@@ bx+0x1@@ 78], mov_rdi_qword_ptr_[rbx+0x@@ 48], movabs_rdx@@ _0x7@@ ffffffff@@ ffffffe, call_0xf@@ 4a@@ f, mov_rsi_rax, movabs_rdx@@ _0x7@@ ffffffff@@ ffffffe, mov_edi_8, call_0xf@@ 4@@ 98, mov_rsi_rax, mov_rdi_r15, mov_r14_rax, call_0xf@@ 00@@ a, mov_qword_ptr_[rbx+0x@@ a0]_rax, mov_rdi_qword_ptr_[rbx+0x1@@ d0], mov_rsi_r14, call_0xe@@ ff@@ 4, mov_qword_ptr_[rbx+0x1@@ d0]_rax, lea_r12_[r@@ bx+0x1@@ 30], jmp_0x48, mov_r13_qword_ptr_[r@@ bx+0x1@@ d0], mov_r15_qword_ptr_[r@@ bx+0x@@ a0], mov_rdx_rbp, mov_rsi_r13, mov_rdi_r15, call_0xffffffffffffdd@@ 61, test_eax_eax, jne_0x6c, cmp_rbp@@ _r14, jne_0x@@ b0@@ 5, mov_qword_ptr_[rbx+0x1@@ e0]_0, mov_qword_ptr_[rbx+0x@@ b0]_0, mov_edx_dword_ptr_[rbx], test_edx_edx, js_0x1@@ 4, mov_rsi_r14, sub_rsi@@ _qword_ptr_[r@@ bx+0x@@ b0], mov_rdi_rbx, call_0x4@@ db@@ 6, mov_eax_dword_ptr_[rbx+0x1@@ 30], mov_rbp_qword_ptr_[r@@ bx+0x1@@ e0], test_eax_eax, js_0x1@@ 7, mov_rsi_r14, sub_rsi@@ _rbp, mov_rdi_r12, call_0x4d@@ 97, mov_rbp_qword_ptr_[r@@ bx+0x1@@ e0], cmp_qword_ptr_[rbx+0x@@ b@@ 0]_rbp, je_0xffffffffffffff@@ 7c, mov_rdi_rbx, call_0xfffffffffffffd@@ fb, mov_r12d_1, mov_r15_qword_ptr_[r@@ bx+0x@@ a0], mov_r13_qword_ptr_[r@@ bx+0x1@@ d0], jmp_0xc, mov_r13_qword_ptr_[r@@ bx+0x1@@ d0], xor_r12d_r12d, cmp_r15@@ _r13, je_0x11, mov_rdi_r15, call_0xffffffffffffd@@ 9d@@ e, mov_r13_qword_ptr_[r@@ bx+0x1@@ d0], mov_rdi_r13, call_0xffffffffffffd@@ 9c@@ f, mov_rax_qword_ptr_[rsp+0xb8], xor_rax_qword_ptr_fs:[0x28], jne_0xd@@ f2, add_rsp_0xc8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_qword_ptr_[rbx+0x1@@ f8], add_rdi_qword_ptr_[r@@ bx+0x@@ c8], add_rdi_4, call_0x8b@@ 66, mov_rdi_rax, mov_qword_ptr_[rsp+0x18]_rax, lea_rax@@ _[rax+1], mov_qword_ptr_[rbx+0x1@@ 18]_rax, mov_rax_qword_ptr_[rbx+0xc8], lea_rdx_[r@@ di@@ +rax@@ +3], mov_qword_ptr_[rbx+0x@@ 24@@ 8]_rdx, add_rax_qword_ptr_[r@@ bx+0x1@@ f8], mov_rdi_rax, shl_rdi_4, call_0x@@ ee@@ 2d, mov_rdi_qword_ptr_[rbx+0x@@ c8], mov_qword_ptr_[rbx+0x10@@ 0]_rax, lea_rdx_[r@@ di*8], add_rax_rdx, mov_qword_ptr_[rbx+0x10@@ 8]_rax, add_rax_rdx, mov_rdx_qword_ptr_[rbx+0x1@@ f8], mov_qword_ptr_[rbx+0x@@ 23@@ 0]_rax, lea_rax_[rax@@ +rdx*8], mov_rdi_qword_ptr_[rbx+0x1@@ 28], mov_qword_ptr_[rbx+0x@@ 23@@ 8]_rax, shl_rdi_4, call_0x8a@@ e1, mov_r12_rax, mov_qword_ptr_[rsp+0xa0]_rax, mov_rax_qword_ptr_[rbx+0x1@@ 28], cmp_qword_ptr_[rbx+0x@@ c8]_0, lea_rbp_[r@@ 12+rax*8], mov_qword_ptr_[rsp+0xa@@ 8]_rbp, jle_0x@@ 22, mov_rcx_qword_ptr_[rbx+0x@@ f8], xor_eax_eax, mov_rdx_qword_ptr_[r@@ cx+rax*8], inc_rax, inc_qword_ptr_[r@@ 12@@ +rdx*8], cmp_rax_qword_ptr_[r@@ bx+0x@@ c8], jl_0xffffffffffffff@@ ee, mov_rdi_qword_ptr_[rbx+0x1@@ f8], test_rdi_rdi, jle_0x@@ 2a, mov_rcx_qword_ptr_[rbx+0x@@ 228], xor_eax_eax, mov_rdx_qword_ptr_[r@@ cx+rax*8], inc_rax, inc_qword_ptr_[r@@ bp@@ +rdx*8], mov_rdi_qword_ptr_[rbx+0x1@@ f8], cmp_rax_rdi, jl_0xffffffffffffff@@ ea, add_rdi_qword_ptr_[r@@ bx+0x@@ c8], call_0x8a@@ 59, mov_rsi_qword_ptr_[rbx+0x@@ c8], mov_r15_rax, lea_rax_[rax+r@@ si], mov_qword_ptr_[rsp+0x98]_rax, lea_r9_[r@@ bx+0x@@ f8], mov_r8_r15, xor_r10d_r10d, lea_r11_[rsp+0x@@ 98], mov_rax_rsi, shr_rax@@ _8, mov_rdi_qword_ptr_[r@@ 9], je_0x@@ 8d@@ 7, mov_ecx_5, add_rcx_rcx, shr_rax@@ _2, jne_0xfffffffffffffff@@ 9, xor_eax_eax, jmp_0x12, mov_byte_ptr_[r@@ 8@@ +rax@@ ]_1, inc_rax, cmp_rax_rsi, je_0x2d, mov_rdx_qword_ptr_[r@@ di+rax*8], test_rdx_rdx, je_0xfffffffffffffff1, mov_rdx_qword_ptr_[r@@ bp@@ +rdx*8], test_rdx_rdx, je_0xffffffffffffffe2, cmp_rdx_rcx, jbe_0xffffffffffffff@@ e2, mov_byte_ptr_[r@@ 8@@ +rax@@ ]_2, inc_rax, cmp_rax_rsi, jne_0xffffffffffffffdd, add_r9@@ _0x1@@ 30, cmp_r10@@ _8, jne_0x@@ 80@@ d, lea_rdi_[rbx+0x@@ c8], mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x10]@@ _r12, mov_qword_ptr_[rsp+0x20]_rdi, mov_r14_rdi, mov_rdx_r15, mov_r9_qword_ptr_[r@@ 14], xor_eax_eax, lea_rdi_[rdx@@ -1], test_r9_r9, jg_0x1@@ b, jmp_0x32, test_cl_cl, jne_0x@@ d6, inc_rax, cmp_r9@@ _rax, jle_0x@@ 1b, lea_r8@@ _[rdx@@ +rax], movzx_ecx_byte_ptr_[r@@ 8], cmp_cl@@ _2, jne_0xffffffffffffffe5, inc_rax, mov_byte_ptr_[r@@ 8]_0, cmp_r9@@ _rax, jg_0xffffffffffffff@@ e9, add_r14@@ _0x1@@ 30, cmp_qword_ptr_[rsp+@@ 8]_1, jne_0x@@ 77@@ a, mov_r12_qword_ptr_[rsp+0x10], mov_rdi_qword_ptr_[rsp+0x20], mov_r10@@ _r15, xor_r11d_r11d, mov_r9_qword_ptr_[r@@ di], xor_edx_edx, test_r9_r9, jle_0x@@ 57, xor_eax_eax, jmp_0x1f, cmp_byte_ptr_[r@@ 10@@ +rax]_0, je_0x1b, mov_rcx_qword_ptr_[r@@ di+0x@@ 50], mov_byte_ptr_[rcx@@ +rax@@ ]_1, inc_rax, cmp_r9@@ _rax, je_0x36, cmp_byte_ptr_[rip+0x@@ 3@@ 15@@ ee@@ ]_0, je_0xffffffffffffffe2, mov_rsi_qword_ptr_[r@@ di+0x30], lea_rcx_[rdx@@ *8], mov_r8_qword_ptr_[r@@ si+rax*8], mov_rsi_qword_ptr_[r@@ di+0x38], mov_qword_ptr_[rsi@@ +rdx*@@ 8]_r8, mov_rsi_qword_ptr_[r@@ di+0x40], inc_rdx, mov_qword_ptr_[rsi@@ +rcx@@ ]_rax, inc_rax, cmp_r9@@ _rax, jne_0xffffffffffffffce, mov_qword_ptr_[rdi+0x@@ 48]_rdx, add_rdi@@ _0x1@@ 30, cmp_r11@@ _1, je_0x2@@ 2e, mov_r10@@ _qword_ptr_[rsp+0x98], mov_r11d_1, jmp_0xffffffffffffff7e, mov_rcx_rax, xor_esi_esi, jmp_0x1c, movzx_r10d_byte_ptr_[r@@ dx@@ +rcx], test_r10b_r10b, je_0x19, cmp_r10@@ b@@ _2, sete@@ _r10b, movzx_r10d@@ _r10b, add_rsi@@ _r10, inc_rcx, cmp_r9@@ _rcx, jg_0xffffffffffffff@@ e1, cmp_rax_rcx, jl@@ _0x1b, jmp_0x8@@ a, dec@@ _rcx, mov_byte_ptr_[rdx@@ +rcx]_0, dec@@ _rsi, cmp_rax_rcx, je_0x4b, cmp_byte_ptr_[rdx@@ +rcx@@ -1@@ ]_2, je_0xffffffffffffffec, mov_r10@@ _rcx, sub_r10@@ _rax, shl_rsi@@ _2, cmp_r10@@ _rsi, jge_0x@@ 70, cmp_rax_rcx, jge_0xffffffffffff@@ fe@@ d0, lea_rcx_[rdx@@ +rcx@@ -1], lea_rsi_[r@@ di+rax], cmp_byte_ptr_[rcx@@ ]_2, jne_5, mov_byte_ptr_[rcx@@ ]_0, dec@@ _rcx, cmp_rsi_rcx, jne_0xfffffffffffffff2, jmp_0xfffffffffffffea@@ 8, xor_r10d_r10d, test_rsi_rsi, jg_0xfffffffffffffe@@ 9a, lea_rsi@@ _[rax+r@@ 10@@ -1], test_r10_r10, jg_0xa@@ 62, mov_rax_rsi, jmp_0xfffffffffffffe@@ 7d, sub_rcx_rax, shl_rsi@@ _2, mov_r10@@ _rcx, cmp_rcx_rsi, jl_0xffffffffffff@@ fe@@ 6b, mov_rcx_r10, sar_rcx@@ _4, test_rcx_rcx, jle_0xffffffffffffff@@ c7, mov_ebp_1, add_r@@ bp_rbp, sar_rcx@@ _2, jne_0xfffffffffffffff@@ 9, lea_rsi@@ _[rax+r@@ 10@@ -1], xor_r12d_r12d, xor_ecx_ecx, jmp_0x10, xor_r12d_r12d, inc_rcx, cmp_rcx@@ _r10, jge_0x@@ 37, lea_r11@@ _[rax@@ +rcx], add_r11@@ _rdx, cmp_byte_ptr_[r@@ 11@@ ]_2, jne_0xffffffffffffffea, lea_r13_[r@@ 12+1], cmp_r12_rbp, je_0xc0, mov_r12_r13, jle_0xffffffffffffff@@ da, inc_rcx, mov_byte_ptr_[r@@ 11]_0, cmp_rcx@@ _r10, jl_0xffffffffffffff@@ d6, xor_eax_eax, xor_r11d_r11d, movzx_ecx_byte_ptr_[r@@ 8+rax], cmp_cl@@ _2, je_0xa0, test_cl_cl, je_0xa8, inc@@ _r11, cmp_r11@@ _3, je_0x17, inc_rax, cmp_rax@@ _r10, je_0xf, cmp_rax@@ _7, jle_0xffffffffffffff@@ d5, cmp_byte_ptr_[r@@ 8@@ +rax@@ ]_1, jne_0xffffffffffffffce, mov_rcx_rdx, sub_rcx@@ _r10, lea_r11@@ _[rdx+r@@ si], mov_r10@@ _rcx, mov_rax@@ _r11, add_r10@@ _rsi, xor_r8d_r8d, jmp_0x23, test_cl_cl, je_0x76, inc@@ _r8, cmp_r8@@ _3, je_0xffffffffffffff@@ 15, dec_rax, cmp_r10@@ _rax, je_0xffffffffffffff@@ 09, mov_rcx_r11, sub_rcx_rax, cmp_rcx@@ _7, jle_0x@@ b, cmp_byte_ptr_[rax@@ ]_1, je_0xfffffffffffffe@@ f4, movzx_ecx_byte_ptr_[rax], cmp_cl@@ _2, jne_0xffffffffffffffc8, mov_byte_ptr_[rax]_0, xor_r8d_r8d, jmp_0xffffffffffffffd1, sub_rcx@@ _r13, mov_r12_r13, jmp_0xffffffffffffff1d, mov_byte_ptr_[r@@ 8@@ +rax]_0, xor_r11d_r11d, jmp_0xffffffffffffff6f, xor_r11d_r11d, jmp_0xffffffffffffff64, xor_r8d_r8d, jmp_0xffffffffffffff96, mov_rdi_r15, call_0xffffffffffffd@@ 4b@@ 5, mov_rdi_r12, call_0xffffffffffffd@@ 4a@@ d, mov_rbp_qword_ptr_[rbx+0x@@ 240], mov_rax_qword_ptr_[rbx+0x1@@ 00], add_rbp@@ _qword_ptr_[r@@ bx+0x110], add_rbp@@ _3, mov_qword_ptr_[rsp+0x60]_rax, mov_rdi_rbp, mov_rax_qword_ptr_[rbx+0x@@ 230], shl_rdi_4, mov_qword_ptr_[rsp+0x68]_rax, call_0xe@@ 957, mov_r10_qword_ptr_[r@@ bx+0x@@ 240], lea_rdx_[r@@ 10@@ *8+8], lea_rcx_[rax@@ +rdx], lea_rdx_[r@@ dx+r@@ bp*8], add_rax_rdx, mov_qword_ptr_[rsp+0x78]_rax, movzx_eax_byte_ptr_[rip+0x@@ 3@@ 13@@ ac], mov_qword_ptr_[rsp+0x7@@ 0]_rcx, mov_byte_ptr_[rsp+0x@@ 80@@ ]_al, test_rbp_rbp, je_0x@@ 84@@ 4, mov_eax_1, add_rax_rax, sar@@ _rbp@@ _2, jne_0xfffffffffffffff@@ 9, cmp_rax@@ _0x1000, mov_edx_0x1000, cmovl@@ _rax_rdx, mov_qword_ptr_[rsp+0x88]_rax, lea_rcx_[rip+0x3@@ 140@@ 9], xor_edx_edx, mov_eax_edx, mov_r9_qword_ptr_[r@@ bx+rax], mov_r8_qword_ptr_[r@@ bx@@ +rax+8], mov_rdi_qword_ptr_[r@@ bx+r@@ ax+0x10], mov_rsi_qword_ptr_[r@@ bx+r@@ ax+0x18], add_edx@@ _0x20, mov_qword_ptr_[rcx@@ +rax]@@ _r9, mov_qword_ptr_[rcx@@ +rax+@@ 8]_r8, mov_qword_ptr_[rcx@@ +r@@ ax+0x1@@ 0]_rdi, mov_qword_ptr_[rcx@@ +r@@ ax+0x1@@ 8]_rsi, cmp_edx@@ _0x1@@ 20, jb_0xffffffffffffff@@ cf, movdqu_xmm0_xmmword_ptr_[r@@ bx+rdx], lea_r11_[r@@ bx+0x1@@ 30], movups_xmmword_ptr_[r@@ cx@@ +rdx@@ ]_xmm0, lea_rcx_[rip+0x3@@ 14@@ ed], xor_edx_edx, mov_eax_edx, mov_r9_qword_ptr_[r@@ bx+r@@ ax+0x1@@ 30], mov_r8_qword_ptr_[r@@ bx+r@@ ax+0x1@@ 38], mov_rdi_qword_ptr_[r@@ bx+r@@ ax+0x1@@ 40], mov_rsi_qword_ptr_[r@@ bx+r@@ ax+0x1@@ 48], add_edx@@ _0x20, mov_qword_ptr_[rcx@@ +rax]@@ _r9, mov_qword_ptr_[rcx@@ +rax+@@ 8]_r8, mov_qword_ptr_[rcx@@ +r@@ ax+0x1@@ 0]_rdi, mov_qword_ptr_[rcx@@ +r@@ ax+0x1@@ 8]_rsi, cmp_edx@@ _0x1@@ 20, jb_0xffffffffffffff@@ c2, movdqu_xmm1_xmmword_ptr_[r@@ 11@@ +rdx], mov_rsi_qword_ptr_[r@@ bx+0x110], movzx_r8d_byte_ptr_[r@@ ip+0x@@ 3@@ 12@@ 32], movups_xmmword_ptr_[r@@ cx@@ +rdx@@ ]_xmm1, lea_r9_[rsp+0x@@ 60], mov_rcx_r10, xor_edx_edx, xor_edi_edi, call_0xffffffffffffed@@ e6, mov_rax_qword_ptr_[rbx+0x@@ 240], mov_rdi@@ _-@@ 8, shl_rax_3, sub_rdi_rax, add_rdi@@ _qword_ptr_[rsp+0x70], call_0xffffffffffffd@@ 33@@ 7, xor_r13d_r13d, mov_rax_r13, mov_rsi_qword_ptr_[r@@ bx+r@@ 13+0x1@@ 18], neg_rax, mov_rdi_qword_ptr_[r@@ bx+r@@ ax+0x@@ 248], mov_r10_qword_ptr_[r@@ bx+r@@ 13+0x@@ f8], mov_r11_qword_ptr_[r@@ bx+r@@ 13+0x@@ c8], xor_ecx_ecx, xor_r9d_r9d, lea_r12_[r@@ si-1], cmp_r11_r9, jle_0x@@ 13@@ f, cmp_byte_ptr_[r@@ si+r@@ 9]_0, je_0x3@@ 9b, mov_rax_r9, inc_rax, cmp_byte_ptr_[rsi@@ +rax]_0, je_0xe, jmp_0xfffffffffffffff@@ 7, inc_rcx, cmp_byte_ptr_[r@@ di@@ +rcx]_0, jne_0xfffffffffffffff@@ 9, mov_rdx_r9, mov_rbp_rax, sub_rbp@@ _rdx, test_rdx_rdx, je_0x47, mov_r15_qword_ptr_[r@@ 10@@ +rax*8@@ -8], mov_r8_rdx, cmp_qword_ptr_[r@@ 10@@ +rdx*@@ 8@@ -@@ 8]_r15, jne_0x33, dec@@ _rdx, dec_rax, mov_byte_ptr_[rsi@@ +rdx@@ ]_1, mov_byte_ptr_[rsi@@ +rax]_0, cmp_byte_ptr_[r@@ si+r@@ 8@@ -@@ 2]_0, je_0xf, dec@@ _rdx, cmp_byte_ptr_[rsi@@ +rdx@@ -1]_0, jne_0xfffffffffffffff@@ 8, dec@@ _rcx, cmp_byte_ptr_[r@@ di@@ +rcx]_0, jne_0xfffffffffffffff@@ 9, test_rdx_rdx, jne_0xffffffffffffffc2, cmp_byte_ptr_[r@@ di@@ +rcx@@ -1]_0, mov_r9_rax, cmove@@ _r9@@ _r11, cmp_rax@@ _r11, je_0x5a, mov_r14_qword_ptr_[r@@ 10@@ +rax*8], mov_r8_rax, cmp_qword_ptr_[r@@ 10@@ +rdx*@@ 8]_r14, jne_0x46, inc_rdx, mov_byte_ptr_[rsi@@ +rdx@@ -1]_0, mov_byte_ptr_[r@@ si+r@@ 8]_1, inc_rax, cmp_byte_ptr_[rsi@@ +rax]_0, je_0x22, inc_rax, cmp_byte_ptr_[rsi@@ +rax]_0, jne_0xfffffffffffffff@@ 9, inc_rcx, cmp_byte_ptr_[r@@ di@@ +rcx]_0, je_0x14, mov_r9_rax, inc_rcx, cmp_byte_ptr_[r@@ di@@ +rcx]_0, jne_0xfffffffffffffff6, cmp_r11@@ _rax, jne_0xffffffffffffffb1, mov_r8_rax, sub_r8@@ _rdx, cmp_rbp@@ _r8, jne_0xffffffffffffff@@ 3e, cmp_rax@@ _r9, jle_0x@@ 2e@@ d, lea_r8_[r@@ si@@ +rax-1], lea_r14_[r@@ 12+r@@ 9], mov_rbp_r8, sub_rbp@@ _rax, mov_byte_ptr_[rbp@@ +rdx@@ ]_1, mov_byte_ptr_[r@@ 8]_0, dec@@ _rcx, cmp_byte_ptr_[r@@ di@@ +rcx]_0, jne_0xfffffffffffffff@@ 9, dec@@ _r8, cmp_r14@@ _r8, jne_0xffffffffffffffe2, cmp_r11_r9, jg_0xfffffffffffffe@@ cd, jne_0xfffffffffffffe@@ d2, add_r13@@ _0x1@@ 30, cmp_r13@@ _0x2@@ 60, jne_0xfffffffffffffe@@ 7b, cmp_dword_ptr_[rip+0x@@ 3@@ 10@@ e6@@ ]_4, mov_r15_qword_ptr_[r@@ bx+0x1@@ 18], mov_r12_qword_ptr_[r@@ bx+0x@@ 248], mov_r13_qword_ptr_[r@@ bx+0x@@ c8], mov_r14_qword_ptr_[r@@ bx+0x1@@ f8], je_0x3@@ fc, test_r13_r13, jns@@ _0xb, test_r14_r14, js_0x2@@ 2e, xor_ebp_ebp, movzx_eax_byte_ptr_[r@@ 15+r@@ 13-1], movzx_edx_byte_ptr_[r@@ 12+r@@ 14-1], mov_edi_eax, or@@ _dil@@ _dl, jne_0x2@@ 4f, dec@@ _r14, dec@@ _r13, jns_0xffffffffffffff@@ e3, test_r14_r14, jns_0xffffffffffffff@@ de, cmp_byte_ptr_[rip+0x@@ 3@@ 11@@ 16@@ ]_0, jne_0x10, cmp_qword_ptr_[rip+0x@@ 3@@ 10@@ eb@@ ]_0, je_0x5@@ 0e, test_rbp_rbp, je_0x1@@ fd, lea_rax_[rsp+0x48], mov_qword_ptr_[rsp+0x10]_rbx, mov_qword_ptr_[rsp+8]@@ _rbp, lea_r14_[rsp+0x@@ 58], lea_r13_[rsp+0x@@ 50], lea_r15_[rsp+0x@@ 40], mov_rbx_rbp, mov_r12_rax, jmp_0xc, test_eax_eax, jne_0x34, mov_rdi_rbx, call_0x7@@ 7c@@ 9, mov_rdi_rbx, mov_rbx_qword_ptr_[rax], mov_qword_ptr_[rax]_0, mov_rbp_rax, mov_r8_r14, mov_rcx_r13, mov_rdx_r12, mov_rsi_r15, call_0x7e@@ 68, mov_qword_ptr_[rbp]_rbx, test_rbx_rbx, jne_0xffffffffffffffcc, xor_r12d_r12d, mov_rbp_qword_ptr_[rsp+8], test_eax_eax, mov_rbx_qword_ptr_[rsp+0x10], setne@@ _r12b, cmp_byte_ptr_[rip+0x@@ 3@@ 100@@ 1]_0, je_0x2@@ 20, test_r12d_r12d, je_0xa, mov_rdi_rbx, call_0xfffffffffffff48@@ 2, mov_rdi_qword_ptr_[rbx+0x1@@ 00], call_0xffffffffffffd0@@ 86, mov_rdi_qword_ptr_[rsp+0x18], call_0xffffffffffffd0@@ 7c, mov_rdi_qword_ptr_[rbx+0x@@ f8], call_0xffffffffffffd0@@ 70, mov_rdx_qword_ptr_[rbx+0x@@ c0], mov_rax_qword_ptr_[rbx+0x@@ b8], lea_rdi_[rax@@ +rdx*8], call_0xffffffffffffd0@@ 59, mov_rdi_qword_ptr_[rbx+0x@@ 228], call_0xffffffffffffd0@@ 4d, mov_rdx_qword_ptr_[rbx+0x1@@ f0], mov_rax_qword_ptr_[rbx+0x1@@ e8], lea_rdi_[rax@@ +rdx*8], call_0xffffffffffffd0@@ 36, test_rbp_rbp, je_0x17, mov_rdi_rbp, mov_rbp_qword_ptr_[rbp], call_0xffffffffffffd0@@ 21, test_rbp_rbp, jne_0xfffffffffffffff1, mov_eax_dword_ptr_[rip+0x@@ 30@@ f6@@ 1], sub_eax@@ _4, cmp_eax_1, jbe_0x@@ 25@@ b, mov_r15_qword_ptr_[r@@ bx+0x@@ a0], mov_r13_qword_ptr_[r@@ bx+0x1@@ d0], jmp_0xfffffffffffff6@@ 11, mov_qword_ptr_[rsp+@@ 8]_1, mov_rdx_qword_ptr_[rsp+0x98], jmp_0xfffffffffffff8@@ 28, mov_rax_r10, neg_rax, mov_r8_qword_ptr_[r@@ 11+r@@ 10], mov_rsi_qword_ptr_[r@@ 9@@ -0x30], mov_rbp_qword_ptr_[r@@ sp+r@@ ax+0x@@ a0], add_r10@@ _8, jmp_0xfffffffffffff@@ 76@@ d, test_ecx_ecx, js_0x1@@ 5, mov_eax_dword_ptr_[rbx+0x28], and_eax_0xf000, cmp_eax_0x8000, jne_0xfffffffffffff@@ 48@@ c, test_esi_esi, js_0xffffffffffff@@ f@@ 58@@ 9, mov_eax_dword_ptr_[rbx+0x1@@ 58], and_eax_0xf000, cmp_eax_0x8000, jne_0xfffffffffffff@@ 46@@ e, jmp_0xfffffffffffff@@ 56@@ d, mov_r12d_eax, jmp_0xfffffffffffff@@ 58@@ 7, test_rsi_rsi, je_0xfffffffffffff7@@ 7d, mov_ecx_5, jmp_0xfffffffffffff7@@ 33, inc_rcx, cmp_byte_ptr_[r@@ di@@ +rcx@@ -1]_0, jne_0xfffffffffffffff@@ 8, inc@@ _r9, jmp_0xfffffffffffffc@@ 4a, cmp_byte_ptr_[rip+0x@@ 30@@ f@@ 18]_0, jne_0x12, mov_rbp_qword_ptr_[rip+0x@@ 30@@ ee@@ e], test_rbp_rbp, je_0x3@@ 0e, xor_ebp_ebp, cmp_byte_ptr_[rip+0x@@ 30@@ e@@ 7d@@ ]_0, je_0x2@@ ce, xor_r12d_r12d, jmp_0xfffffffffffffe@@ 86, mov_r9_rax, jmp_0xfffffffffffffc@@ 0c, test_al_al, je_0x2@@ c5, mov_rax_r13, dec_rax, cmp_byte_ptr_[r@@ 15@@ +rax@@ -1]_0, jne_0xfffffffffffffff7, sub_r13@@ _rax, mov_qword_ptr_[rsp+8]@@ _r13, mov_r13_rax, test_dl_dl, je_0x2@@ ad, mov_rax_r14, dec_rax, cmp_byte_ptr_[r@@ 12@@ +rax@@ -1]_0, jne_0xfffffffffffffff7, sub_r14@@ _rax, mov_qword_ptr_[rsp+0x10]@@ _r14, mov_r14_rax, mov_edi_0x30, call_0xe@@ 38@@ d, mov_rdi_qword_ptr_[rsp+0x10], mov_qword_ptr_[rax]_rbp, mov_qword_ptr_[rax+@@ 8]_rdi, mov_rdi_qword_ptr_[rsp+8], mov_qword_ptr_[rax+0x1@@ 8]_r13, mov_qword_ptr_[rax+0x20]@@ _r14, mov_qword_ptr_[rax+0x1@@ 0]_rdi, mov_rbp_rax, jmp_0xfffffffffffffd@@ 3f, test_r12d_r12d, je_0x2@@ 2f, mov_rsi_qword_ptr_[rip+0x@@ 30@@ d@@ 58], xor_edx_edx, cmp_qword_ptr_[rbx+0x@@ 26@@ 0]_0, setne_dl, test_rsi_rsi, je_0x2@@ 5b, mov_rdi_qword_ptr_[rip+0x@@ 30@@ d@@ 33], test_rdi_rdi, je_0x2@@ 42, call_0x6c@@ da, cmp_dword_ptr_[rip+0x@@ 30@@ d@@ 8e@@ ]_8, ja_0xffffffffffff@@ d@@ 4b@@ e, mov_eax_dword_ptr_[rip+0x@@ 30@@ d8@@ 2], lea_rdx_[rip+0x22@@ 7@@ 23], movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, lea_rbp_[rip+0x@@ 30@@ c8@@ 9], lea_r13_[r@@ bx+0x1@@ 20], lea_r14_[r@@ bp+0x10], cmp_byte_ptr_[r13]_0, jne_0x10@@ b, add_rbp_8, add_r13@@ _0x1@@ 30, cmp_r14@@ _rbp, jne_0xffffffffffffffe7, jmp_0xfffffffffffffd@@ 7e, test_r13_r13, jg@@ _0xb, test_r14_r14, jle_0xfffffffffffffe@@ 38, xor_ebp_ebp, xor_r10d_r10d, xor_r8d_r8d, movzx_edx_byte_ptr_[r@@ 15+r@@ 8], movzx_eax_byte_ptr_[r@@ 12+r@@ 10], mov_edi_edx, or@@ _dil@@ _al, jne_0x21, inc@@ _r8, inc@@ _r10, cmp_r8@@ _r13, jl_0xffffffffffffff@@ e6, cmp_r10@@ _r14, jl_0xffffffffffffff@@ e1, jmp_0xfffffffffffffc@@ 03, test_dl_dl, mov_rdx_r8, je_0x1@@ 4a, inc_rdx, cmp_byte_ptr_[r@@ 15@@ +rdx]_0, jne_0xfffffffffffffff@@ 8, mov_rdi_rdx, sub_rdi@@ _r8, mov_qword_ptr_[rsp+8]_rdi, mov_rcx_r10, test_al_al, je_0x1@@ 17, inc_rcx, cmp_byte_ptr_[r@@ 12@@ +rcx]_0, jne_0xfffffffffffffff@@ 8, mov_rax_rcx, sub_rax@@ _r10, mov_qword_ptr_[rsp+0x10]_rax, mov_edi_0x30, mov_qword_ptr_[rsp+0x38]_r10, mov_qword_ptr_[rsp+0x3@@ 0]_r8, mov_qword_ptr_[rsp+0x28]_rcx, mov_qword_ptr_[rsp+0x20]_rdx, call_0xe@@ 1b@@ 2, mov_rdi_qword_ptr_[rsp+0x10], mov_r8_qword_ptr_[rsp+0x30], mov_r10_qword_ptr_[rsp+0x38], mov_qword_ptr_[rax+@@ 8]_rdi, mov_rcx_qword_ptr_[rsp+0x28], mov_rdi_qword_ptr_[rsp+8], mov_rdx_qword_ptr_[rsp+0x20], mov_qword_ptr_[rax+0x1@@ 8]_r8, mov_qword_ptr_[rax+0x20]@@ _r10, mov_qword_ptr_[rax]_rbp, mov_qword_ptr_[rax+0x1@@ 0]_rdi, mov_r10@@ _rcx, mov_r8_rdx, mov_rbp_rax, jmp_0xffffffffffffff44, mov_edx_5, lea_rsi_[rip+0x22@@ 53@@ e], xor_edi_edi, call_0xffffffffffffce@@ 00, mov_rcx_qword_ptr_[rbp], mov_r8_rax, test_rcx_rcx, je_0x9e, lea_rdx_[rip+0x22@@ 5e@@ 7], xor_esi_esi, xor_edi_edi, xor_eax_eax, call_0xffffffffffffd@@ 16@@ e, xor_r12d_r12d, cmp_byte_ptr_[rip+0x@@ 30@@ b@@ 98]_0, jne_0xfffffffffffff@@ bb@@ 7, jmp_0xfffffffffffffd@@ c7, mov_qword_ptr_[rsp+8]_0, jmp_0xfffffffffffffd@@ 56, mov_qword_ptr_[rsp+0x10]_0, jmp_0xfffffffffffffd@@ 70, xor_r12d_r12d, test_rbp_rbp, setne@@ _r12b, jmp_0xfffffffffffffb@@ 6c, mov_rdi_qword_ptr_[rbx+8], jmp_0xfffffffffffffd@@ c0, mov_rsi_qword_ptr_[r@@ bx+0x1@@ 38], jmp_0xfffffffffffffd@@ a4, mov_eax@@ _0x1000, jmp_0xfffffffffffff7d@@ c, mov_qword_ptr_[rsp+0x10]_0, jmp_0xfffffffffffffefb, mov_qword_ptr_[rsp+8]_0, jmp_0xfffffffffffffe@@ cd, mov_rcx_qword_ptr_[r@@ 13@@ -0x@@ 118], jmp_0xffffffffffffff61, call_0xffffffffffffcd@@ 87, mov_ebp_1, jmp_0xfffffffffffff@@ 5e@@ 3
push_r14, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, xor_edi_edi, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rcx, sub_rsp_0x40, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, call_0x7@@ 2e@@ 6, test_rbx_rbx, je_0x6e, mov_rdi_qword_ptr_[rip+0x@@ 30@@ a0@@ d], mov_r8_rbx, mov_rcx_r12, lea_rdx_[rip+0x24@@ a0@@ e], mov_esi_1, xor_eax_eax, call_0xffffffffffffd@@ 11@@ 1, mov_edi_3, call_0x7@@ 2b@@ 7, mov_rdi_qword_ptr_[rip+0x@@ 30@@ 9e@@ 3], mov_rax_qword_ptr_[rdi+0x28], cmp_rax_qword_ptr_[r@@ di+0x30], jae_0x@@ bb, lea_rdx_[rax+1], mov_qword_ptr_[rdi+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0xa, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0xa@@ b, add_rsp_0x40, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, lea_rdi_[r@@ 13+0x@@ 68], call_0xffffffffffffcb@@ 2c, mov_rcx_rax, mov_r14_qword_ptr_[r@@ 13+0x@@ 70], mov_rbx_rsp, test_rax_rax, je_0x21, mov_rdx_qword_ptr_[rip+0x@@ 30@@ a4@@ 9], xor_r8d_r8d, mov_r9d_r14d, mov_esi_0x2@@ b, mov_rdi_rbx, call_0xc@@ 35@@ 3, test_rax_rax, jne_0x24, mov_r8_qword_ptr_[r@@ 13+0x@@ 68], mov_r9d_r14d, lea_rcx_[rip+0x@@ 22@@ 3e@@ 7], mov_edx_0x2@@ b, mov_esi_1, mov_rdi_rbx, xor_eax_eax, call_0xffffffffffffd@@ 12c, mov_rdi_qword_ptr_[rip+0x@@ 30@@ 9@@ 48], mov_r9_rbx, mov_r8_rbp, mov_rcx_r12, lea_rdx_[rip+0x22@@ 3c@@ 5], mov_esi_1, xor_eax_eax, call_0xffffffffffffd0@@ 49, jmp_0xffffffffffffff38, mov_esi_0xa, call_0xffffffffffffcc@@ 93, jmp_0xffffffffffffff4c, call_0xffffffffffffcc@@ 3@@ 9
push_rbx, mov_rcx_rdi, mov_rbx_rsi, sub_rsp_0x10, mov_rax_qword_ptr_[rdi+0x28], cmp_qword_ptr_[rdi+0x@@ 30]_rax, jbe_0x@@ c5, lea_rdx_[rax+1], mov_qword_ptr_[rdi+0x@@ 28]_rdx, mov_byte_ptr_[rax]_0x20, mov_rdx_rbx, xor_edi_edi, movzx_eax_byte_ptr_[rdx], mov_r8_rdx, cmp_al@@ _0xd, jg@@ _0x7f, cmp_al@@ _8, jg@@ _0x8@@ b, movsxd_rsi@@ _edi, lea_r9d_[r@@ di+0x@@ 27], mov_edx_esi, cmp_al_0xa, je_0x17, lea_edx_[r@@ si+1], inc@@ _rsi, cmp_r9d@@ _esi, jl@@ _0xc, movzx_eax_byte_ptr_[r@@ bx+r@@ si], mov_edx_esi, cmp_al_0xa, jne_0xffffffffffffffed, cmp_edx@@ _edi, jle_0x@@ 1b, movsxd_rax_edx, movzx_esi_byte_ptr_[r@@ bx@@ +rax-1], mov_r9d_eax, mov_edx_eax, cmp_sil@@ _0xd, jg@@ _0x26, cmp_sil@@ _8, jg@@ _0x26, sub_edx@@ _edi, add_rsp_0x10, movsxd_rdx_edx, mov_esi_1, mov_rdi_r8, pop_rbx, jmp_0xffffffffffff@@ ce@@ 34, cmp_sil@@ _0x20, jne_0xffffffffffffffde, dec_rax, lea_edx_[r@@ 9@@ -1], cmp_edi_eax, jl_0xffffffffffffff@@ bd, jmp_0xffffffffffffffd1, cmp_al_0x20, jne_0xffffffffffffff@@ 89, inc_rdx, inc@@ _edi, jmp_0xffffffffffffff70, inc_rdx, cmp_al_0xa, je_0xffffffffffffff@@ 76, inc@@ _edi, jmp_0xffffffffffffff5c, mov_esi_0x20, mov_qword_ptr_[rsp+8]_rdi, call_0xffffffffffffcb@@ 9e, mov_rcx_qword_ptr_[rsp+8], jmp_0xffffffffffffff3@@ 8
sub_rsp_0x28, lea_rcx_[rsp+8], lea_r8_[rsp+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0x7@@ 66@@ 2, mov_r8_qword_ptr_[rsp+0x10], mov_rcx_qword_ptr_[rsp+8], cmp_r8@@ _rcx, jg@@ _0x38, mov_rdi_qword_ptr_[rip+0x@@ 30@@ 7c@@ f], mov_rcx_r8, lea_rdx_[rip+0x22@@ 25@@ f], mov_esi_1, xor_eax_eax, call_0xffffffffffffc@@ ed@@ 6, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x27, add_rsp_0x28, ret, mov_rdi_qword_ptr_[rip+0x@@ 30@@ 79@@ 9], lea_rdx_[rip+0x22@@ 228], mov_esi_1, xor_eax_eax, call_0xffffffffffffc@@ ea@@ 3, jmp_0xffffffffffffffcd, call_0xffffffffffffc@@ aa@@ c
sub_rsp_0x28, lea_rcx_[rsp+8], lea_r8_[rsp+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0x7@@ 5d@@ 2, mov_rcx_qword_ptr_[rsp+0x10], mov_r9_qword_ptr_[rsp+8], cmp_rcx@@ _r9, jg@@ _0x40, lea_rax_[rip+0x22@@ 1d@@ 9], lea_rdx_[rip+0x22@@ 1d@@ 6], cmovge@@ _rdx_rax, mov_rdi_qword_ptr_[rip+0x@@ 30@@ 7@@ 2d], mov_esi_1, xor_eax_eax, call_0xffffffffffffce@@ 3e, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x31, add_rsp_0x28, ret, sub_rcx@@ _r9, mov_rdi_qword_ptr_[rip+0x@@ 30@@ 6@@ fe], lea_r8_[r@@ cx+1], lea_rdx_[rip+0x22@@ 18@@ 9], mov_rcx_r9, mov_esi_1, xor_eax_eax, call_0xffffffffffffc@@ e0@@ 1, jmp_0xffffffffffffffc3, call_0xffffffffffffc@@ a0@@ a
endbr64, mov_r10@@ _qword_ptr_[rip+0x@@ 30@@ 7a@@ 5], mov_rdx_qword_ptr_[r@@ di+0x18], mov_rax_qword_ptr_[rdi+0x20], mov_r8_rdi, mov_rdi_qword_ptr_[rdi], lea_r11_[r@@ 10+r@@ 10+1], test_rdi_rdi, je_0x57, push_rbx, mov_rcx_qword_ptr_[r@@ di+0x18], cmp_byte_ptr_[rdi+0x@@ 28]_0, mov_r9@@ _r11, cmovne@@ _r9@@ _r10, mov_rsi_rcx, add_rdx_qword_ptr_[r@@ 8+0x10], sub_rsi_rdx, mov_rdx_rsi, mov_rsi_qword_ptr_[r@@ di+0x20], add_rax_qword_ptr_[r@@ 8+8], mov_rbx_rsi, sub_rbx_rax, cmp_rdx_rbx, jne_0xffffffffffff@@ ce@@ 74, cmp_rdx@@ _r9, jge_0x@@ 13, mov_r8_rdi, mov_rdi_qword_ptr_[rdi], mov_rax_rsi, mov_rdx_rcx, test_rdi_rdi, jne_0xffffffffffffffb9, mov_rax_r8, pop_rbx, ret, mov_rax_r8, ret
push_r14, mov_r14_rdi, push_r13, mov_r13d@@ _0x80000000, push_r12, push_rbp, mov_rbp_qword_ptr_[rip+0x2@@ e@@ 1c@@ 1], mov_qword_ptr_[rip+0x2@@ e@@ 1b@@ a@@ ]_rsi, push_rbx, mov_rbx_rsi, jmp_0x3d, mov_r12_qword_ptr_[r@@ 14+r@@ bx*8], mov_eax@@ _0x7fffffff, mov_rdx_r12, not@@ _rdx, add_rdx_qword_ptr_[r@@ 14+r@@ bx*@@ 8+8], cmp_rdx@@ _r13, cmovae@@ _rdx_rax, mov_rsi_r12, xor_r9d_r9d, xor_ecx_ecx, mov_r8_rdx, lea_rdi_[rip+0x30@@ 66@@ b], call_0x1@@ c6@@ 3b, test_rax_rax, jns@@ _0x33, dec@@ _rbx, cmp_rbp_rbx, jle_0xffffffffffffff@@ c3, mov_rax_qword_ptr_[rip+0x2@@ e@@ 16@@ 2], movabs_rdx@@ _0x7@@ fffffffffffffff, xor_r12d_r12d, cmp_rax_rdx, je_6, mov_r12_qword_ptr_[r@@ 14@@ +rax*8], pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, mov_qword_ptr_[rip+0x2@@ e@@ 13@@ 9@@ ]_rbx, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x38, lea_rcx_[rsp+0x18], lea_rdx_[rsp+0x10], lea_rsi_[rsp+8], lea_r8_[rsp+0x@@ 20], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0x7@@ 47@@ 7, test_eax_eax, je_0x3@@ 67, mov_rsi_qword_ptr_[rsp+8], mov_rcx_qword_ptr_[rip+0x@@ 30@@ 7a@@ 6], mov_r12d_eax, mov_rax_qword_ptr_[rip+0x@@ 30@@ 6@@ 24], neg@@ _rcx, sub_rsi_rax, mov_rdx_qword_ptr_[rsp+0x18], cmp_rsi_rcx, cmovl@@ _rsi@@ _rcx, sub_rdx_rax, cmp_rdx_rcx, cmovl@@ _rdx_rcx, mov_rcx_qword_ptr_[rsp+0x10], mov_qword_ptr_[rsp+0x18]_rdx, mov_rdx_qword_ptr_[rip+0x@@ 30@@ 75@@ 7], lea_rdi_[rax@@ +rcx], mov_r8_rdx, sub_r8@@ _rax, dec@@ _rdx, cmp_r8@@ _rcx, cmovg@@ _rdx@@ _rdi, mov_rcx_qword_ptr_[rsp+0x20], mov_qword_ptr_[rsp+0x10]_rdx, mov_rdx_qword_ptr_[rip+0x@@ 30@@ 86@@ 2], mov_qword_ptr_[rsp+8]_rsi, mov_rdi_rdx, sub_rdi_rax, dec@@ _rdx, add_rax_rcx, cmp_rdi_rcx, cmovle@@ _rax_rdx, cmp_qword_ptr_[rip+0x@@ 30@@ 56@@ 2]_0, mov_qword_ptr_[rsp+0x20]_rax, je_0x2@@ fd, mov_rdi_qword_ptr_[rip+0x@@ 30@@ 6e@@ 8], call_0xfffffffffffffe@@ 70, mov_r13_rax, call_0x64@@ e8, mov_rbp_qword_ptr_[rip+0x@@ 30@@ 4b@@ 4], mov_edx_0xf, mov_rcx_rbp, mov_esi_1, lea_rdi_[rip+0x2@@ 1f@@ 46], call_0xffffffffffffca@@ 58, test_r13_r13, je_0xd, mov_rsi_r13, mov_rdi_rbp, call_0xfffffffffffffb@@ 88, mov_rax_qword_ptr_[rbp+0x28], cmp_rax_qword_ptr_[r@@ bp+0x30], jae_0x@@ 37d, lea_rdx_[rax+1], mov_qword_ptr_[rbp+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0xa, mov_edi_4, call_0x6d@@ 35, mov_rcx_rbp, mov_edx_4, mov_esi_1, lea_rdi_[rip+0x2@@ 1f@@ 0a], call_0xffffffffffffc@@ a0@@ c, mov_rdx_qword_ptr_[rsp+0x10], mov_rsi_qword_ptr_[rsp+8], lea_rdi_[rip+0x30@@ 5a@@ 6], call_0xfffffffffffffc@@ 36, mov_rcx_rbp, mov_edx_5, mov_esi_1, lea_rdi_[rip+0x2@@ 1e@@ e0], call_0xffffffffffffc@@ 9dd, mov_edi_3, call_0x6c@@ e3, mov_rax_qword_ptr_[rbp+0x28], cmp_rax_qword_ptr_[r@@ bp+0x30], jae_0x@@ 2f@@ 6, lea_rdx_[rax+1], mov_qword_ptr_[rbp+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0xa, test_r12b@@ _1, je_0xbf, mov_r15_qword_ptr_[rsp+8], cmp_r15@@ _qword_ptr_[rsp+0x10], jg_0xa@@ f, mov_r14_rbx, mov_edi_2, call_0x6c@@ 9b, test_r14_r14, jne_0x17, jmp_0x2@@ 31, mov_r14_qword_ptr_[r@@ 14], test_r14_r14, je_0x2@@ 22, mov_rax_qword_ptr_[r@@ 14+0x18], mov_rdx_qword_ptr_[r@@ 14+0x10], add_rdx_rax, cmp_rdx@@ _r15, jle_0xffffffffffffff@@ e6, cmp_rax_r15, jg_0x2@@ 09, cmp_qword_ptr_[r@@ 14+@@ 8]_0, lea_rdi_[rip+0x2@@ 1e@@ 5e], lea_rax_[rip+0x2@@ 1e@@ 2c], cmovg@@ _rdi_rax, mov_rsi_qword_ptr_[rip+0x@@ 30@@ 5@@ 9d], lea_r13_[r@@ 15*8], add_rsi@@ _r13, mov_edx_1, call_0x70@@ 45, mov_edi_3, call_0x6c@@ 2b, mov_rdx_qword_ptr_[rip+0x@@ 30@@ 57@@ 7], mov_rax_qword_ptr_[r@@ dx+r@@ 13+8], cmp_byte_ptr_[rax@@ -1]_0xa, je_0x1@@ c6, inc_r15, cmp_qword_ptr_[rsp+0x1@@ 0]_r15, jge_0xffffffffffffff@@ 68, mov_edi_4, call_0x6b@@ fd, mov_rcx_rbp, mov_edx_4, mov_esi_1, lea_rdi_[rip+0x2@@ 1dd@@ d], call_0xffffffffffffc@@ 8d@@ 4, mov_rdx_qword_ptr_[rsp+0x20], mov_rsi_qword_ptr_[rsp+0x18], lea_rdi_[rip+0x30@@ 59@@ e], call_0xfffffffffffffa@@ fe, mov_rcx_rbp, mov_edx_5, mov_esi_1, lea_rdi_[rip+0x2@@ 1d@@ b3], call_0xffffffffffffc@@ 8a@@ 5, mov_edi_3, call_0x6b@@ ab, mov_rax_qword_ptr_[rbp+0x28], cmp_rax_qword_ptr_[r@@ bp+0x30], jae_0x@@ 1a@@ c, lea_rdx_[rax+1], mov_qword_ptr_[rbp+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0xa, and_r12d@@ _2, je_0xc0, mov_r15_qword_ptr_[rsp+0x18], cmp_r15@@ _qword_ptr_[rsp+0x20], jg_0x@@ b0, lea_r12_[rip+0x@@ 2@@ 1d@@ 5d], lea_r14_[rip+0x@@ 2@@ 1d@@ 41], mov_edi_1, call_0x6b@@ 5b, test_rbx_rbx, jne_0x17, jmp_0x@@ e1, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, je_0xd2, mov_rax_qword_ptr_[rbx+0x20], mov_rdx_qword_ptr_[rbx+8], add_rdx_rax, cmp_rdx@@ _r15, jle_0xffffffffffffff@@ e6, cmp_rax_r15, jg_0x@@ b9, cmp_qword_ptr_[rbx+0x10]_0, lea_rdi_[rip+0x2@@ 1d@@ 21], cmovg@@ _rdi@@ _r14, mov_rsi_qword_ptr_[rip+0x@@ 30@@ 5@@ 94], lea_r13_[r@@ 15*8], add_rsi@@ _r13, mov_edx_1, call_0x6@@ f0@@ c, mov_edi_3, call_0x6a@@ f2, mov_rdx_qword_ptr_[rip+0x@@ 30@@ 56@@ e], mov_rax_qword_ptr_[r@@ dx+r@@ 13+8], cmp_byte_ptr_[rax@@ -1]_0xa, je_0xad, inc_r15, cmp_qword_ptr_[rsp+0x@@ 20]@@ _r15, jge_0xffffffffffffff@@ 6f, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ ff, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0x6@@ 200, mov_rbp_qword_ptr_[rip+0x@@ 30@@ 1c@@ c], mov_edx_0xf, mov_rcx_rbp, mov_esi_1, lea_rdi_[rip+0x2@@ 1c@@ 5e], call_0xffffffffffffc@@ 77@@ 0, jmp_0xfffffffffffffd@@ 28, mov_rdi_r12, jmp_0xffffffffffffff5a, lea_rdi_[rip+0x2@@ 1c@@ 4a], jmp_0xfffffffffffffe@@ 0d, mov_rax_qword_ptr_[rbp+0x28], cmp_rax_qword_ptr_[r@@ bp+0x30], jae_0x@@ 32, lea_rdx_[rax+1], mov_qword_ptr_[rbp+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0xa, jmp_0xfffffffffffffe@@ 2b, mov_rax_qword_ptr_[rbp+0x28], cmp_rax_qword_ptr_[r@@ bp+0x30], jae_0x@@ 24, lea_rdx_[rax+1], mov_qword_ptr_[rbp+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0xa, jmp_0xffffffffffffff44, mov_esi_0xa, mov_rdi_rbp, call_0xffffffffffffc@@ 4b@@ e, jmp_0xfffffffffffffd@@ f9, mov_esi_0xa, mov_rdi_rbp, call_0xffffffffffffc@@ 4a@@ c, jmp_0xffffffffffffff20, mov_esi_0xa, mov_rdi_rbp, call_0xffffffffffffc4@@ 9a, jmp_0xfffffffffffffe@@ 58, mov_esi_0xa, mov_rdi_rbp, call_0xffffffffffffc@@ 48@@ 8, jmp_0xfffffffffffffd@@ 0e, mov_esi_0xa, mov_rdi_rbp, call_0xffffffffffffc@@ 47@@ 6, jmp_0xfffffffffffffc@@ 87, call_0xffffffffffffc4@@ 1@@ c
endbr64, push_r15, push_r14, push_r13, mov_r13_rdi, push_r12, push_rbp, push_rbx, sub_rsp_0x48, lea_rcx_[rsp+0x28], lea_rdx_[rsp+0x20], lea_rsi_[rsp+0x18], lea_r8_[rsp+0x@@ 30], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, call_0x6@@ fb@@ 7, test_eax_eax, je_0x1@@ f6, mov_rax_qword_ptr_[rip+0x@@ 30@@ 17@@ 3], mov_rsi_qword_ptr_[rsp+0x18], mov_rcx_qword_ptr_[rip+0x@@ 30@@ 2d@@ f], sub_rsi_rax, neg@@ _rcx, mov_rdx_qword_ptr_[rsp+0x28], cmp_rsi_rcx, cmovl@@ _rsi@@ _rcx, sub_rdx_rax, cmp_rdx_rcx, cmovl@@ _rdx_rcx, mov_rcx_qword_ptr_[rsp+0x20], mov_qword_ptr_[rsp+0x28]_rdx, mov_rdx_qword_ptr_[rip+0x@@ 30@@ 29@@ a], lea_rdi_[rax@@ +rcx], mov_r8_rdx, sub_r8@@ _rax, dec@@ _rdx, cmp_r8@@ _rcx, cmovg@@ _rdx@@ _rdi, mov_rcx_qword_ptr_[rsp+0x30], mov_qword_ptr_[rsp+0x20]_rdx, mov_rdx_qword_ptr_[rip+0x@@ 30@@ 3a@@ 5], mov_qword_ptr_[rsp+0x18]_rsi, mov_rdi_rdx, sub_rdi_rax, dec@@ _rdx, add_rax_rcx, cmp_rdi_rcx, cmovle@@ _rax_rdx, cmp_qword_ptr_[rip+0x@@ 3@@ 00@@ a5@@ ]_0, mov_qword_ptr_[rsp+0x30]_rax, je_0x1@@ 90, mov_rdi_qword_ptr_[rip+0x@@ 30@@ 22@@ b], call_0xfffffffffffff9b@@ 3, mov_rbp_rax, call_0x60@@ 2b, mov_r15_qword_ptr_[r@@ ip+0x2@@ fff@@ 7], mov_edi_4, call_0x6@@ 8b@@ a, mov_rcx_r15, mov_edx_4, mov_esi_1, lea_rdi_[rip+0x2@@ 1a@@ a5], call_0xffffffffffffc5@@ 91, mov_rdx_qword_ptr_[rsp+0x20], mov_rsi_qword_ptr_[rsp+0x18], lea_rdi_[rip+0x30@@ 12@@ b], call_0xfffffffffffff84@@ b, mov_rcx_r15, mov_edx_2, mov_esi_1, lea_rdi_[rip+0x2@@ 1a@@ 7b], call_0xffffffffffffc@@ 56@@ 2, mov_rdx_qword_ptr_[rsp+0x30], mov_rsi_qword_ptr_[rsp+0x28], lea_rdi_[rip+0x30@@ 22@@ c], call_0xfffffffffffff8@@ 1c, lea_rdi_[rip+0x2@@ 1a@@ 5c], mov_rcx_r15, mov_edx_3, mov_esi_1, call_0xffffffffffffc5@@ 33, mov_edi_3, call_0x68@@ 39, test_rbp_rbp, je_0xd, mov_rsi_rbp, mov_rdi_r15, call_0xfffffffffffff65@@ 9, mov_rax_qword_ptr_[r15+0x@@ 28], cmp_rax_qword_ptr_[r@@ 15+0x30], jae_0x@@ 3e@@ 6, lea_rdx_[rax+1], mov_qword_ptr_[r15+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0xa, mov_rbp_qword_ptr_[rsp+0x18], mov_r12@@ _qword_ptr_[rsp+0x28], cmp_qword_ptr_[rsp+0x@@ 20]@@ _rbp, jge_0x@@ c, cmp_qword_ptr_[rsp+0x@@ 30]@@ _r12, jl@@ _0x7@@ b, test_r13_r13, je_0xc, cmp_qword_ptr_[r13+0x1@@ 8]_rbp, jle_0x@@ 13@@ 7, mov_rax_qword_ptr_[rip+0x@@ 30@@ 13@@ 2], cmp_byte_ptr_[rip+0x2@@ ff@@ 42@@ ]_0, lea_rbx_[r@@ bp+1], lea_rbp@@ _[rax+r@@ bp*8], je_0xb, mov_rax_qword_ptr_[rbp], cmp_byte_ptr_[rax]@@ _0xa, je_0x2a, cmp_byte_ptr_[rip+0x2@@ fe@@ f@@ 9]_1, sbb_esi_esi, mov_rax_qword_ptr_[r15+0x@@ 28], and_esi@@ _0x17, add_esi@@ _9, cmp_rax_qword_ptr_[r@@ 15+0x30], jae_0x@@ 30@@ 9, lea_rdx_[rax+1], mov_qword_ptr_[r15+0x@@ 28]_rdx, mov_byte_ptr_[rax@@ ]_sil, mov_rsi_rbp, xor_edi_edi, mov_rbp_rbx, call_0x6d@@ 20, inc_r12, cmp_qword_ptr_[rsp+0x@@ 20]@@ _rbp, jge_0xffffffffffffff@@ 93, cmp_qword_ptr_[rsp+0x@@ 30]@@ _r12, jge_0xffffffffffffff@@ 8c, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x34@@ 8, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0x5e@@ b0, mov_r15_qword_ptr_[r@@ ip+0x2@@ fe@@ 7c], mov_edi_4, call_0x67@@ 3f, mov_rcx_r15, mov_edx_4, mov_esi_1, lea_rdi_[rip+0x2@@ 19@@ 2a], call_0xffffffffffffc4@@ 16, mov_rdx_qword_ptr_[rsp+0x20], mov_rsi_qword_ptr_[rsp+0x18], lea_rdi_[rip+0x2@@ ff@@ b0], call_0xfffffffffffff6d@@ 0, mov_rcx_r15, mov_edx_2, mov_esi_1, lea_rdi_[rip+0x2@@ 19@@ 00], call_0xffffffffffffc@@ 3e@@ 7, mov_rdx_qword_ptr_[rsp+0x30], mov_rsi_qword_ptr_[rsp+0x28], lea_rdi_[rip+0x3@@ 00@@ b1], call_0xfffffffffffff6a@@ 1, mov_rcx_r15, mov_edx_3, mov_esi_1, lea_rdi_[rip+0x2@@ 18d@@ 4], call_0xffffffffffffc@@ 3b8, mov_edi_3, call_0x66@@ be, jmp_0xfffffffffffffe@@ 95, mov_r14_qword_ptr_[r@@ 13+0x10], lea_rax_[r@@ 14-1], mov_qword_ptr_[rsp+8]_rax, test_r14_r14, je_0xdd, lea_rax_[r@@ 14+r@@ bp], mov_qword_ptr_[rsp]_rax, mov_rbx_rbp, jmp_0x14, inc_rbx, cmp_rbx@@ _qword_ptr_[rsp], je_0xb4, mov_rax_qword_ptr_[rip+0x2@@ ff@@ cc], mov_edi_2, lea_r14@@ _[rax+r@@ bx*8], call_0x66@@ 6b, mov_rax_qword_ptr_[r15+0x@@ 28], cmp_rax_qword_ptr_[r@@ 15+0x30], jae_0x@@ 1a@@ 6, lea_rdx_[rax+1], mov_qword_ptr_[r15+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0x2d, cmp_byte_ptr_[rip+0x2@@ fd@@ 86@@ ]_0, je_0x2c, cmp_byte_ptr_[rip+0x2@@ fd@@ a@@ c]_0, je_0xa, mov_rax_qword_ptr_[r14], cmp_byte_ptr_[rax]@@ _0xa, je_0x1b, mov_rax_qword_ptr_[r15+0x@@ 28], cmp_rax_qword_ptr_[r@@ 15+0x30], jae_0x@@ 1b@@ 3, lea_rdx_[rax+1], mov_qword_ptr_[r15+0x@@ 28]_rdx, mov_byte_ptr_[rax@@ ]_9, xor_edi_edi, mov_edx_1, mov_rsi_r14, call_0x6a@@ 20, mov_edi_3, call_0x6@@ 606, mov_rax_qword_ptr_[r14+8], cmp_byte_ptr_[rax@@ -1]_0xa, jne_0xffffffffffffff@@ 71, mov_rax_qword_ptr_[r15+0x@@ 28], cmp_rax_qword_ptr_[r@@ 15+0x30], jae_0x@@ 1a3, lea_rdx_[rax+1], inc_rbx, mov_qword_ptr_[r15+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0xa, cmp_rbx@@ _qword_ptr_[rsp], jne_0xffffffffffffff@@ 58, mov_rax_qword_ptr_[rsp+8], lea_rbp_[r@@ bp@@ +rax+1], mov_r14_qword_ptr_[r@@ 13+8], lea_rax_[r@@ 14-1], mov_qword_ptr_[rsp+8]_rax, test_r14_r14, je_0xd8, lea_rax_[r@@ 14+r@@ 12], mov_qword_ptr_[rsp]_rax, mov_rbx_r12, jmp_0xf, inc_rbx, cmp_qword_ptr_[rsp@@ ]_rbx, je_0xb4, mov_rax_qword_ptr_[rip+0x3@@ 00@@ 14], mov_edi_1, lea_r14@@ _[rax+r@@ bx*8], call_0x6@@ 58@@ 3, mov_rax_qword_ptr_[r15+0x@@ 28], cmp_rax_qword_ptr_[r@@ 15+0x30], jae_0x@@ a6, lea_rdx_[rax+1], mov_qword_ptr_[r15+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0x2b, cmp_byte_ptr_[rip+0x2@@ fc@@ 9e@@ ]_0, je_0x2c, cmp_byte_ptr_[rip+0x2@@ fc@@ c@@ 4]_0, je_0xa, mov_rax_qword_ptr_[r14], cmp_byte_ptr_[rax]@@ _0xa, je_0x1b, mov_rax_qword_ptr_[r15+0x@@ 28], cmp_rax_qword_ptr_[r@@ 15+0x30], jae_0x@@ b3, lea_rdx_[rax+1], mov_qword_ptr_[r15+0x@@ 28]_rdx, mov_byte_ptr_[rax@@ ]_9, xor_edi_edi, mov_edx_1, mov_rsi_r14, call_0x6@@ 938, mov_edi_3, call_0x65@@ 1e, mov_rax_qword_ptr_[r14+8], cmp_byte_ptr_[rax@@ -1]_0xa, jne_0xffffffffffffff@@ 71, mov_rax_qword_ptr_[r15+0x@@ 28], cmp_rax_qword_ptr_[r@@ 15+0x30], jae_0x@@ a3, lea_rdx_[rax+1], inc_rbx, mov_qword_ptr_[r15+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0xa, cmp_qword_ptr_[rsp@@ ]_rbx, jne_0xffffffffffffff@@ 58, mov_rax_qword_ptr_[rsp+8], lea_r12_[r@@ 12@@ +rax+1], mov_r13_qword_ptr_[r@@ 13], jmp_0xfffffffffffffc@@ d6, mov_esi_0x2@@ b, mov_rdi_r15, call_0xffffffffffffb@@ f7@@ 8, jmp_0xffffffffffffff5e, mov_esi_0x2d, mov_rdi_r15, call_0xffffffffffffbf@@ 60, jmp_0xfffffffffffffe@@ 5e, mov_rdi_r15, call_0xffffffffffffbf@@ 4d, jmp_0xfffffffffffffd@@ 00, mov_esi_9, mov_rdi_r15, call_0xffffffffffffbf@@ 38, jmp_0xffffffffffffff51, mov_esi_9, mov_rdi_r15, call_0xffffffffffffbf@@ 20, jmp_0xfffffffffffffe@@ 51, mov_esi_0xa, mov_rdi_r15, call_0xffffffffffffb@@ f0@@ 8, jmp_0xfffffffffffffe@@ b3, mov_esi_0xa, mov_rdi_r15, call_0xffffffffffffb@@ ef@@ 0, jmp_0xfffffffffffffd@@ b3, mov_esi_0xa, mov_rdi_r15, call_0xffffffffffffb@@ ed@@ e, jmp_0xfffffffffffffc@@ 1e, call_0xffffffffffffb@@ e8@@ 4
endbr64, push_rbp, mov_r9d_edx, lea_rbp_[r@@ di+0x1@@ 30], push_rbx, mov_rbx_rsi, sub_rsp_8, mov_rdx_qword_ptr_[rsi], mov_rcx_qword_ptr_[rip+0x2@@ fb@@ 6f], mov_rsi_rdi, test_r9b_r9b, je_0x31, lea_rdi_[rip+0x2@@ 15@@ e0], call_0xfffffffffffff0@@ d0, mov_rdx_qword_ptr_[rbx+8], mov_rcx_qword_ptr_[rip+0x2@@ fb@@ 58], add_rsp_8, pop_rbx, mov_rsi_rbp, lea_rdi_[rip+0x2@@ 15@@ d1], pop_rbp, jmp_0xfffffffffffff0@@ b0, lea_rdi_[rip+0x2@@ 15@@ a6], call_0xfffffffffffff0@@ a1, mov_rdx_qword_ptr_[rbx+8], mov_rcx_qword_ptr_[rip+0x2@@ fb@@ 29], add_rsp_8, pop_rbx, mov_rsi_rbp, lea_rdi_[rip+0x2@@ 15@@ 92], pop_rbp, jmp_0xfffffffffffff0@@ 8@@ 1
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_0x48, mov_dword_ptr_[rsp+0xc]_esi, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, cmp_byte_ptr_[rip+0x2@@ fb@@ d@@ 1]_0, jne_0x10, cmp_qword_ptr_[rip+0x2@@ fb@@ a6@@ ]_0, je_0xd6, test_r12_r12, je_0x53, mov_rbx_r12, lea_r8_[rsp+0x@@ 30], lea_r13_[rsp+0x@@ 28], lea_r15_[rsp+0x20], lea_r14_[r@@ sp+0x18], mov_rbp_rbx, mov_rbx_qword_ptr_[rbx], mov_qword_ptr_[rbp]_0, mov_rcx_r13, mov_rdx_r15, mov_rsi_r14, mov_rdi_rbp, mov_qword_ptr_[rsp]_r8, call_0x6@@ 94@@ 2, test_eax_eax, sete@@ _byte_ptr_[r@@ bp+0x28], test_rbx_rbx, mov_qword_ptr_[rbp]_rbx, mov_r8_qword_ptr_[rsp], jne_0xffffffffffffffcc, mov_rax_qword_ptr_[rip+0x2@@ fc@@ 6b], neg_rax, mov_qword_ptr_[rip+0x2@@ d@@ 59@@ 1]_rax, cmp_byte_ptr_[rsp+0x@@ c]_0, movabs_rax_0x7fffffffffffffff, mov_qword_ptr_[rip+0x2@@ d@@ 57@@ 3]_rax, je_0x3b, lea_rdx_[rip-0x@@ 6f@@ 6], lea_rsi_[rip-0x@@ ce@@ d], mov_rdi_r12, call_0x6@@ 250, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x5e, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rdx_[rip-0x@@ be@@ f], lea_rsi_[rip-0x@@ d@@ 26], mov_rdi_r12, call_0x6@@ 2@@ 17, jmp_0xffffffffffffffc7, mov_rax_rdi, test_rdi_rdi, je_0xffffffffffffff@@ 80, mov_byte_ptr_[rax+0x@@ 28]_0, mov_rax_qword_ptr_[rax], test_rax_rax, je_0xffffffffffffff@@ 6c, mov_byte_ptr_[rax+0x@@ 28]_0, mov_rax_qword_ptr_[rax], test_rax_rax, jne_0xffffffffffffffe6, jmp_0xffffffffffffff5a, call_0xffffffffffffb@@ c9@@ f
push_r14, push_r13, push_r12, mov_r12_rsi, push_rbp, push_rbx, mov_rbx_rdi, mov_rdi_rsi, call_0xffffffffffffbc@@ 5f, mov_rdx_qword_ptr_[rbx+0x20], mov_rsi_rax, mov_rdi_r12, mov_rbp_rax, call_0x1@@ af@@ 5d, test_rax_rax, je_0x25, pop_rbx, pop_rbp, mov_rcx_r12, pop_r12, pop_r13, mov_r8_rax, lea_rdx_[rip+0x2@@ 140@@ 4], xor_esi_esi, mov_edi_2, xor_eax_eax, pop_r14, jmp_0xffffffffffff@@ bf@@ 95, mov_r14_qword_ptr_[r@@ bx], mov_r13_qword_ptr_[r@@ bx+8], test_r14_r14, setne_al, movzx_edi@@ _al, add@@ _edi_edi, movsxd_rdi_edi, add_rdi@@ _r13, mov_rsi_qword_ptr_[rbx+0x10], add_rdi_rbp, mov_byte_ptr_[rbx+0x1@@ 8]_al, mov_qword_ptr_[rbx+@@ 8]_rdi, mov_rax_r14, cmp_rdi_rsi, jb@@ _0x2b, test_rsi_rsi, mov_eax_1, cmove_rsi_rax, add_r@@ si_rsi, cmp_rdi_rsi, jae_0xffffffffffff@@ fff@@ a, mov_qword_ptr_[rbx+0x1@@ 0]_rsi, mov_rdi_r14, call_0xc@@ f7@@ 1, mov_qword_ptr_[rbx]_rax, lea_rdi_[rax+r@@ 13], test_r14_r14, je_0x10, mov_byte_ptr_[r@@ di]@@ _0x5c, mov_byte_ptr_[rax+r@@ 13+@@ 1]@@ _0x7c, lea_rdi_[rax+r@@ 13+2], pop_rbx, lea_rdx_[r@@ bp+1], pop_rbp, mov_rsi_r12, pop_r12, pop_r13, pop_r14, jmp_0xffffffffffff@@ bd@@ 7@@ 3
push_r12, test_rdi_rdi, je_0x25, mov_r12_rsi, mov_edx_5, mov_rsi_rdi, xor_edi_edi, call_0xffffffffffffbb@@ 5c, mov_rdx_rax, mov_rcx_r12, xor_esi_esi, xor_edi_edi, xor_eax_eax, call_0xffffffffffffb@@ ed@@ b, mov_r12_qword_ptr_[rip+0x2@@ f@@ 69@@ 7], mov_edx_5, lea_rsi_[rip+0x2@@ 18@@ 93], xor_edi_edi, call_0xffffffffffffbb@@ 31, mov_rdx_rax, mov_rcx_r12, xor_esi_esi, mov_edi_2, xor_eax_eax, call_0xffffffffffffb@@ ea@@ d
cmp_qword_ptr_[rdi]_0, je_0x24, push_rbp, push_rbx, mov_rbx_rdi, push_rdx, mov_rbp_qword_ptr_[r@@ di+0x20], mov_edi@@ _0x100, call_0xc@@ e@@ 5b, cmp_byte_ptr_[rbx+0x1@@ 8]_0, mov_qword_ptr_[rbp+0x20]_rax, jne_7, pop_rax, pop_rbx, pop_rbp, ret, ret, mov_rdx_qword_ptr_[rbx+0x20], mov_rsi_qword_ptr_[rbx+8], mov_rdi_qword_ptr_[rbx], call_0x1a@@ e0@@ c, test_rax_rax, je_0xffffffffffffffe8, mov_rcx_qword_ptr_[rbx], mov_r8_rax, lea_rdx_[rip+0x2@@ 12@@ b9], xor_esi_esi, mov_edi_2, xor_eax_eax, call_0xffffffffffffb@@ e4@@ c
push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi], test_rdi_rdi, je_0xe, mov_r12_rdx, call_0xffffffffffffbc@@ 5b, test_eax_eax, jne_0xa, mov_qword_ptr_[rbx@@ ]_rbp, pop_rbx, pop_rbp, pop_r12, ret, mov_edx_5, lea_rsi_[rip+0x2@@ 180@@ 6], xor_edi_edi, call_0xffffffffffffba@@ 7c, mov_rdx_rax, xor_esi_esi, xor_edi_edi, mov_r8_rbp, mov_rcx_r12, xor_eax_eax, call_0xffffffffffffb@@ df@@ 8
push_rax, pop_rax, xor_esi_esi, lea_rdi_[rip+0x2@@ 17@@ f5], sub_rsp_8, call_0xfffffffffffffed@@ 1
endbr64, push_r15, push_r14, push_r13, mov_r13_rsi, push_r12, mov_r12_rdx, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x2@@ a8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x2@@ 98]_rax, xor_eax_eax, test_rsi_rsi, sete_al, test_rdx_rdx, sete_dl, test_al_al, jne_6, test_dl_dl, je_0x7d, cmp_byte_ptr_[rip+0x2@@ d@@ 28@@ 5]_1, jne_0x2@@ bc, test_dl_dl, jne_0x2@@ b4, lea_r14_[rsp+0x@@ 30], mov_edx_0x2@@ 60, xor_esi_esi, mov_rdi_r14, call_0xffffffffffffba@@ b7, mov_qword_ptr_[rsp+0x2@@ 9@@ 0]_rbx, test_r13_r13, je_0x6@@ af, mov_dword_ptr_[rsp+0x30]@@ _0xfffffffe, mov_dword_ptr_[rsp+0x1@@ 60]@@ _0xfffffffe, mov_r13_r12, test_rbx_rbx, jne_0x5c, mov_qword_ptr_[rsp+0x3@@ 8]_r13, mov_qword_ptr_[rsp+0x1@@ 6@@ 8]_r12, mov_qword_ptr_[rsp+0x10]_0, mov_qword_ptr_[rsp+8]_0, jmp_0x7@@ 1, lea_r14_[rsp+0x@@ 30], mov_edx_0x2@@ 60, xor_esi_esi, mov_rdi_r14, call_0xffffffffffffba@@ 51, mov_qword_ptr_[rsp+0x2@@ 9@@ 0]_rbx, mov_dword_ptr_[rsp+0x30]@@ _0xfffffffe, mov_dword_ptr_[rsp+0x1@@ 60]@@ _0xfffffffe, test_rbx_rbx, je_0xffffffffffffff@@ a8, mov_rdi_qword_ptr_[rbx+8], xor_edx_edx, mov_rsi_r13, call_0x7b@@ 83, mov_rdi_qword_ptr_[rbx+0x1@@ 38], xor_edx_edx, mov_rsi_r12, mov_qword_ptr_[rsp+8]_rax, mov_qword_ptr_[rsp+0x38]_rax, call_0x7b@@ 68, mov_qword_ptr_[rsp+0x10]_rax, mov_qword_ptr_[rsp+0x1@@ 68]_rax, mov_r15_r14, mov_rbp_r14, xor_r12d_r12d, cmp_dword_ptr_[r@@ bp@@ ]_-1, je_0xc1, test_r12d_r12d, je_0x2@@ a0, mov_rsi_qword_ptr_[rsp+0x38], mov_rdi_qword_ptr_[rsp+0x1@@ 68], call_0xffffffffffffba@@ 9d, test_eax_eax, jne_0x2@@ 86, movdqa_xmm0_xmmword_ptr_[rsp+0x@@ 40], mov_eax_dword_ptr_[rsp+0x30], movdqa_xmm1_xmmword_ptr_[r@@ sp+0x@@ 50], movdqa_xmm2_xmmword_ptr_[r@@ sp+0x@@ 60], movdqa_xmm3_xmmword_ptr_[r@@ sp+0x@@ 70], movdqa_xmm4@@ _xmmword_ptr_[r@@ sp+0x@@ 80], movdqa_xmm@@ 5@@ _xmmword_ptr_[r@@ sp+0x@@ 90], movdqa_xmm@@ 6@@ _xmmword_ptr_[r@@ sp+0x@@ a0], movdqa_xmm7@@ _xmmword_ptr_[r@@ sp+0x@@ b0], movaps_xmmword_ptr_[rsp+0x1@@ 70@@ ]_xmm0, mov_dword_ptr_[rsp+0x1@@ 60]_eax, movdqa_xmm0_xmmword_ptr_[rsp+0x@@ c0], movaps_xmmword_ptr_[rsp+0x1@@ 80@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x1@@ 90@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x1@@ a0@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0x1@@ b0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0x1@@ c0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0x1@@ d0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0x1@@ e0@@ ]_xmm7, movaps_xmmword_ptr_[rsp+0x1@@ f0@@ ]_xmm0, add_rbp@@ _0x1@@ 30, cmp_r12d_1, jne_0x1@@ cd, movzx_ecx_byte_ptr_[r@@ ip+0x2@@ d0@@ c2], movzx_edi_byte_ptr_[r@@ ip+0x2@@ d0@@ ba], mov_eax_1, lea_r9_[rsp+0x@@ 290], test_cl_cl, jne_0x14@@ 2, cmp_eax_1, je_0x1@@ 31, cmp_rax_2, jne_0x1@@ 82, mov_ecx_dword_ptr_[rsp+0x30], mov_esi_dword_ptr_[r@@ sp+0x1@@ 60], cmp_ecx_-1, je_0x1@@ eb, mov_edx@@ _0xfffffffd, sub_edx_ecx, cmp_esi_-1, je_0x@@ 60@@ 3, test_edx_edx, js_0x2@@ 23, mov_dword_ptr_[rsp+0x18]_edx, call_0xffffffffffffb@@ 68@@ 1, mov_edx_dword_ptr_[rsp+0x18], mov_rdi_qword_ptr_[rsp+0x38], mov_dword_ptr_[rax]_edx, mov_rbx_rax, call_0x5@@ 14@@ e, mov_eax@@ _0xfffffffd, sub_eax_dword_ptr_[r@@ sp+0x1@@ 60], mov_edx_eax, js_0x6@@ db, mov_dword_ptr_[rbx]_edx, mov_rdi_qword_ptr_[rsp+0x1@@ 68], mov_r12d_2, call_0x5@@ 125, mov_rdi_qword_ptr_[rip+0x2@@ c@@ fc@@ 1], call_0xffffffffffffbb@@ b9, test_eax_eax, jne_0x@@ bc@@ 6, mov_rdi_qword_ptr_[rsp+8], call_0xffffffffffffb@@ 5e@@ 7, mov_rdi_qword_ptr_[rsp+0x10], call_0xffffffffffffb@@ 5d@@ d, mov_rax_qword_ptr_[rsp+0x@@ 298], xor_rax_qword_ptr_fs:[0x28], jne_0xb@@ 3e, add_rsp_0x2@@ a8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, cmp_byte_ptr_[rip+0x2@@ c@@ fc@@ 3]_0, je_0x5@@ 21, lea_r14_[rsp+0x@@ 30], mov_edx_0x2@@ 60, xor_esi_esi, mov_rdi_r14, call_0xffffffffffffb@@ 7f@@ c, mov_qword_ptr_[rsp+0x2@@ 9@@ 0]_rbx, test_r13_r13, je_0x3@@ cc, mov_dword_ptr_[rsp+0x30]@@ _0xfffffffe, test_r12_r12, jne_0x@@ 5a@@ 2, mov_dword_ptr_[rsp+0x1@@ 60]@@ _0xffffffff, mov_r12_r13, jmp_0xfffffffffffffd@@ 96, test_dil_dil, je_0x58, mov_edx_dword_ptr_[r15], cmp_edx@@ _-2, je_0x2@@ fa, cmp_edx@@ _-@@ 5, sete_sil, cmp_edx@@ _-0x@@ c, sete_dl, or@@ _sil@@ _dl, je_0xfffffffffffffe@@ b1, test_rbx_rbx, jne_0xfffffffffffffea@@ 8, imul_rdx@@ _rax@@ _-0x@@ 130, mov_edx_dword_ptr_[r@@ 9@@ +rdx], add_edx@@ _2, and_edx@@ _0xfffffffd, jne_0xfffffffffffffe@@ 91, mov_dword_ptr_[r15@@ ]_0xffffffff, cmp_rax_2, je_0xfffffffffffffe@@ 8a, inc_rax, add_r15@@ _0x1@@ 30, jmp_0xfffffffffffffe@@ 5f, mov_r12d_1, jmp_0xfffffffffffffd@@ 5d, mov_rsi_qword_ptr_[rbp+8], movzx_eax_byte_ptr_[rsi], sub_eax@@ _0x2d, jne_6, movzx_eax_byte_ptr_[r@@ si+1], lea_rdx_[r@@ bp+0x10], test_eax_eax, je_0x2@@ ba, cmp_byte_ptr_[rip+0x2@@ f@@ 3e@@ f]_0, mov_edi_1, je_0x2@@ 98, call_0xffffffffffffb@@ 65@@ 2, test_eax_eax, setne_al, test_al_al, je_0xfffffffffffffdd@@ e, call_0xffffffffffffb@@ 4d@@ 0, mov_ecx@@ _0xfffffffd, sub_ecx@@ _dword_ptr_[r@@ ax], mov_dword_ptr_[rbp@@ ]_ecx, jmp_0xfffffffffffffd@@ c9, lea_rax_[rsp+0x40], xor_r8d_r8d, xor_edx_edx, mov_edi_edx, add_edx@@ _0x20, mov_qword_ptr_[rax+r@@ di]@@ _r8, mov_qword_ptr_[rax+r@@ di+@@ 8]_r8, mov_qword_ptr_[rax+r@@ di+0x1@@ 0]_r8, mov_qword_ptr_[rax+r@@ di+0x1@@ 8]_r8, cmp_edx@@ _0x80, jb_0xffffffffffffff@@ e2, add_rax_rdx, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+8]_0, mov_eax_dword_ptr_[rsp+0x1@@ 88], mov_dword_ptr_[rsp+0x58]_eax, cmp_esi_-1, je_0x5@@ 6e, mov_eax@@ _0xfffffffd, sub_eax_esi, jns@@ _0x4@@ f1, test_rbx_rbx, jne_0x@@ db, mov_eax_dword_ptr_[rsp+0x58], mov_edx_dword_ptr_[r@@ sp+0x1@@ 88], and_eax_0xf000, cmp_eax_0x4000, sete_al, and_edx@@ _0xf000, cmp_edx@@ _0x4000, sete_dl, cmp_al@@ _dl, je_0xac, movzx_eax_al, mov_ebp_1, sub_ebp@@ _eax, imul_rax_rax@@ _0x1@@ 30, mov_rcx_qword_ptr_[r@@ sp+r@@ ax+0x38], mov_rdi_rcx, mov_qword_ptr_[rsp+0x28]_rcx, call_0x67@@ c5, movsxd_rdx_ebp, imul@@ _r8@@ _rdx@@ _0x1@@ 30, mov_rsi_rax, mov_qword_ptr_[rsp+0x20]_rdx, mov_rdi_qword_ptr_[r@@ sp+r@@ 8+0x@@ 38], mov_qword_ptr_[rsp+0x18]_r8, call_0x12@@ 64, mov_r8_qword_ptr_[rsp+0x18], mov_rcx_qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp+r@@ 8+0x@@ 38]_rax, mov_qword_ptr_[rsp+8]_rax, mov_rdx_qword_ptr_[rsp+0x20], cmp_byte_ptr_[rcx@@ ]@@ _0x2d, je_0x2@@ 0b, imul_rdx_rdx@@ _0x1@@ 30, cmp_byte_ptr_[rip+0x2@@ f@@ 2b@@ 1]_0, mov_rsi_qword_ptr_[rsp+8], lea_rdx_[r@@ 14@@ +rdx@@ +0x10], mov_edi_1, jne_0x20@@ 0, call_0xffffffffffffb@@ 6f@@ a, test_eax_eax, setne_al, test_al_al, jne_0x4@@ 36, mov_ecx_dword_ptr_[rsp+0x30], mov_esi_dword_ptr_[r@@ sp+0x1@@ 60], cmp_ecx_-1, je_0x3@@ 4a, mov_r9d_dword_ptr_[rsp+0x@@ 58], mov_edi_dword_ptr_[r@@ sp+0x1@@ 88], cmp_esi_-1, je_0x1@@ d5, mov_rax_qword_ptr_[rsp+0x1@@ 78], cmp_qword_ptr_[rsp+0x@@ 48]_rax, je_0x4@@ 12, mov_eax_r9d, mov_edx_edi, and_eax_0xf000, and_edx@@ _0xf000, cmp_eax_0x6@@ 000, je_0x4@@ e7, xor_r8d_r8d, cmp_eax_0x2@@ 000, jne_0x1@@ ac, cmp_edx@@ _0x2000, je_0x4@@ d9, cmp_eax_0x4000, sete_dil, cmp_edx@@ _0x4000, sete_r8b, test_dil_dil, jne_0x4@@ f1, test_r8b_r8b, jne_0x4@@ e8, xor_r8d_r8d, test_rbx_rbx, je_0x5@@ 5c, mov_edi_eax, and_edi@@ _0xffff@@ d@@ fff, cmp_edi@@ _0x8000, jne_0x16, mov_edi_edx, and_edi@@ _0xffff@@ d@@ fff, cmp_edi@@ _0x8000, je_0x5@@ 38, cmp_ecx_-1, je_0xb, cmp_esi_-1, jne_0x40@@ a, xor_eax_eax, cmp_ecx_-1, sete_al, imul_rax_rax@@ _0x1@@ 30, mov_rdx_r13, lea_rdi_[rip+0x20@@ bd@@ 6], mov_rsi_qword_ptr_[r@@ bx@@ +rax+8], call_0x4f@@ 46, jmp_0xfffffffffffffc@@ 51, mov_edx_dword_ptr_[r@@ 15+0x28], mov_esi_edx, and_esi@@ _0xf000, cmp_esi@@ _0x8000, jne_0xfffffffffffff@@ bb@@ b, and_edx@@ _0x1ff, jne_0xfffffffffffffb@@ af, cmp_qword_ptr_[r15+0x@@ 40]_0, je_0xfffffffffffffd@@ 19, jmp_0xfffffffffffffb@@ 9e, call_0xffffffffffffb@@ 5b0, test_eax_eax, setne_al, jmp_0xfffffffffffffd@@ 6e, mov_dword_ptr_[rbp]_0, xor_edi_edi, mov_qword_ptr_[rsp+0x18]_rdx, call_0xffffffffffffb@@ 2b@@ 2, mov_rdx_qword_ptr_[rsp+0x18], xor_esi_esi, mov_edi_1, call_0xffffffffffffb@@ 601, test_eax_eax, jne_0xfffffffffffffd@@ 4a, mov_eax_dword_ptr_[rbp+0x@@ 28], and_eax_0xf000, cmp_eax_0x8000, je_0x5@@ 37, lea_rdi_[rbp+0x@@ 68], call_0x7@@ 6b@@ d, jmp_0xfffffffffffffb@@ 00, mov_dword_ptr_[rsp+0x30]@@ _0xffffffff, test_r12_r12, jne_0xfffffffffffff@@ 97@@ c, mov_dword_ptr_[rsp+0x1@@ 60]@@ _0xffffffff, mov_r13_r12, jmp_0xfffffffffffff9d@@ 0, mov_dword_ptr_[rsp+0x30]@@ _0xffffffff, jmp_0xfffffffffffff95@@ 7, cmp_byte_ptr_[rcx@@ +@@ 1]_0, jne_0xfffffffffffffd@@ f7, lea_rdi_[rip+0x2@@ 10@@ bf], call_0x4@@ fa@@ 7, call_0xffffffffffffb@@ 3@@ 10, test_eax_eax, setne_al, jmp_0xfffffffffffffe@@ 06, mov_eax_r9d, and_edi@@ _0xf000, and_eax_0xf000, mov_edx_edi, xor_r8d_r8d, cmp_eax_0x4000, sete@@ _r9b, cmp_edx@@ _0x4000, sete_dil, test_r9b_r9b, je_0x3@@ 3f, test_dil_dil, je_0x3@@ 3f, cmp_dword_ptr_[rip+0x2@@ f0@@ 6@@ 1@@ ]_7, je_0x7@@ 00, test_rbx_rbx, je_0xf, cmp_byte_ptr_[rip+0x2@@ cb@@ a7@@ ]_0, je_0x3@@ 8f, lea_rsi_[rip-0x@@ 7b@@ e], mov_rdi_r14, call_0xb@@ 6f, mov_r12d_eax, test_r12d_r12d, jne_0xfffffffffffffa@@ e4, xor_r12d_r12d, cmp_byte_ptr_[rip+0x2@@ ca@@ f@@ 4]_0, je_0xfffffffffffffa@@ e8, mov_eax_dword_ptr_[rsp+0x58], and_eax_0xf000, cmp_eax_0x4000, je_0xfffffffffffffa@@ d4, mov_rdx_qword_ptr_[rip+0x2@@ ef@@ 9b], mov_rsi_qword_ptr_[rip+0x2@@ ef@@ 8c], test_rdx_rdx, cmove_rdx@@ _qword_ptr_[r@@ sp+0x1@@ 68], test_rsi_rsi, cmove_rsi@@ _qword_ptr_[rsp+0x38], lea_rdi_[rip+0x2@@ 10@@ b8], call_0x4d@@ 80, jmp_0xfffffffffffffa@@ 9f, test_r13_r13, cmove@@ _r13@@ _r12, and_eax_1, imul_rax_rax@@ _0x1@@ 30, mov_rdx_r13, lea_rdi_[rip+0x20@@ 9@@ e0], mov_rsi_qword_ptr_[r@@ bx@@ +rax+8], mov_r12d_1, call_0x4d@@ 4a, jmp_0xfffffffffffffa@@ 7d, lea_rax_[rsp+0x1@@ 70], xor_r9d_r9d, xor_edi_edi, mov_r8d_edi, add_edi@@ _0x20, mov_qword_ptr_[rax+r@@ 8]_r9, mov_qword_ptr_[rax+r@@ 8+@@ 8]_r9, mov_qword_ptr_[rax+r@@ 8+0x1@@ 0]_r9, mov_qword_ptr_[rax+r@@ 8+0x1@@ 8]_r9, cmp_edi@@ _0x80, jb_0xffffffffffffff@@ e1, add_rax_rdi, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+8]_0, mov_eax_dword_ptr_[rsp+0x58], mov_dword_ptr_[rsp+0x1@@ 8@@ 8]_eax, test_edx_edx, jns_0xffffffffffff@@ f@@ 9b@@ e, jmp_0xfffffffffffffb@@ e2, cmp_esi_-1, je_0xffffffffffffff@@ 0f, mov_eax_dword_ptr_[rsp+0x58], mov_edx_dword_ptr_[r@@ sp+0x1@@ 88], and_eax_0xf000, and_edx@@ _0xf000, xor_r8d_r8d, jmp_0xfffffffffffffe@@ 91, mov_dword_ptr_[rsp+0x1@@ 60]@@ _0xfffffffe, jmp_0xfffffffffffff7f@@ d, mov_rdi_qword_ptr_[rsp+0x1@@ 68], xor_edx_edx, xor_esi_esi, xor_eax_eax, call_0xffffffffffffb@@ 4d@@ b, mov_dword_ptr_[rsp+0x1@@ 60]_eax, test_eax_eax, jns@@ _0x2@@ b4, mov_rdi_qword_ptr_[rsp+0x1@@ 68], call_0x4@@ aa@@ f, mov_edi_dword_ptr_[rsp+0x@@ 30], test_edi_edi, js@@ _0x1f, mov_r12d_2, call_0xffffffffffffb@@ 20@@ c, test_eax_eax, je_0x2@@ a1, mov_rdi_qword_ptr_[rsp+0x38], call_0x4a@@ 8a, mov_edi_dword_ptr_[r@@ sp+0x1@@ 60], test_edi_edi, js_0x1@@ c, cmp_edi@@ _dword_ptr_[rsp+0x@@ 30], je_0x16, call_0xffffffffffffb@@ 1e@@ 4, test_eax_eax, jne_0x2@@ 9f, mov_r12d_2, jmp_0xfffffffffffff93@@ a, mov_dword_ptr_[rsp+0x18]_eax, call_0xffffffffffffaf@@ 6c, mov_rbx_rax, mov_edx_dword_ptr_[rsp+0x18], jmp_0xfffffffffffff90@@ b, mov_rdi_qword_ptr_[rsp+8], mov_r12d_2, call_0x4a@@ 2d, jmp_0xfffffffffffff90@@ 8, mov_rax_qword_ptr_[rsp+0x1@@ 70], cmp_qword_ptr_[rsp+0x@@ 40]_rax, jne_0xfffffffffffffb@@ e7, cmp_edi@@ _r9d, jne_0xfffffffffffffd@@ 9a, mov_rax_qword_ptr_[rsp+0x1@@ 80], cmp_qword_ptr_[rsp+0x@@ 50]_rax, je_0x3@@ 14, mov_eax_edi, and_eax_0xf000, mov_edx_eax, xor_r8d_r8d, jmp_0xfffffffffffffd@@ 88, lea_rax_[rsp+0x1@@ 70], xor_r8d_r8d, xor_edx_edx, mov_edi_edx, add_edx@@ _0x20, mov_qword_ptr_[rax+r@@ di]@@ _r8, mov_qword_ptr_[rax+r@@ di+@@ 8]_r8, mov_qword_ptr_[rax+r@@ di+0x1@@ 0]_r8, mov_qword_ptr_[rax+r@@ di+0x1@@ 8]_r8, cmp_edx@@ _0x80, jb_0xffffffffffffff@@ e2, add_rax_rdx, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+8]_0, mov_eax_dword_ptr_[rsp+0x58], mov_dword_ptr_[rsp+0x1@@ 8@@ 8]_eax, jmp_0xfffffffffffffa@@ 5b, lea_rdi_[rsp+0x1@@ 70], call_0x7@@ 148, mov_r13_qword_ptr_[rip+0x2@@ ed@@ 44], lea_rdi_[rsp+0x40], test_r13_r13, cmove@@ _r13@@ _qword_ptr_[r@@ sp+0x1@@ 68], mov_rbx_rax, call_0x7@@ 128, mov_rsi_qword_ptr_[rip+0x2@@ ed@@ 1c], mov_rdx_rax, test_rsi_rsi, cmove_rsi@@ _qword_ptr_[rsp+0x38], mov_r8_rbx, mov_rcx_r13, lea_rdi_[rip+0x20@@ df@@ b], call_0x4@@ 97@@ 3, jmp_0xfffffffffffff8@@ 1e, cmp_edx@@ _0x6@@ 000, jne_0xfffffffffffffb@@ 33, mov_r10_qword_ptr_[r@@ sp+0x1@@ 98], cmp_qword_ptr_[rsp+0x@@ 6@@ 8]_r10, jne_0xfffffffffffffb@@ 20, jmp_0xffffffffffffff04, test_dil_dil, je_0xfffffffffffffb@@ 36, cmp_ecx_-1, je_0x15, cmp_esi_-1, jne_0xffffffffffffff@@ 5d, cmp_byte_ptr_[rip+0x2@@ c@@ 86@@ 8]_0, je_0x21, cmp_byte_ptr_[rip+0x2@@ c@@ 7d@@ 9]_0, jne_0xfffffffffffffc@@ be, cmp_byte_ptr_[rip+0x2@@ c@@ 7c@@ b]_0, je_0xb, cmp_ecx_-1, je_0xfffffffffffffc@@ ac, test_rbx_rbx, jne_0xfffffffffffffb@@ 28, lea_rcx_[rip+0x2@@ 24@@ ff], mov_edx_0x5@@ 2b, lea_rsi_[rip+0x20@@ 70@@ e], lea_rdi_[rip+0x20@@ 70@@ e], call_0xffffffffffffa@@ fc@@ c, mov_rdx_qword_ptr_[rsp+0x1@@ 68], mov_rsi_qword_ptr_[rsp+0x38], lea_rdi_[rip+0x20@@ d0@@ c], call_0x4a@@ 4c, jmp_0xfffffffffffffc@@ 79, cmp_edx@@ _0xa@@ 000, sete_dil, cmp_eax_0xa@@ 000, sete@@ _r9b, je_0xe0, test_dil_dil, jne_0x@@ d7, cmp_eax_0x8000, sete_al, test_byte_ptr_[rip+0x2@@ ec@@ a0@@ ]_al, je_0xe, cmp_edx@@ _0x8000, je_0x2@@ 32, cmp_ecx@@ _-2, je_0x1@@ ce, xor_r12d_r12d, cmp_esi@@ _-2, jne_0x13@@ 0, test_r8d_r8d, je_0xfffffffffffffd@@ 41, mov_eax_dword_ptr_[rsp+0x30], mov_dword_ptr_[rsp+0x1@@ 60]_eax, test_r12d_r12d, je_0x113, mov_edi_dword_ptr_[rsp+0x@@ 30], test_edi_edi, jns_0xffffffffffff@@ fd@@ 5e, mov_edi_dword_ptr_[r@@ sp+0x1@@ 60], test_edi_edi, js_0xffffffffffff@@ fb@@ e4, cmp_edi@@ _dword_ptr_[rsp+0x@@ 30], je_0xfffffffffffffb@@ da, call_0xffffffffffffaf@@ 4b, test_eax_eax, je_0xfffffffffffffb@@ cd, mov_rdi_qword_ptr_[rsp+0x1@@ 68], mov_r12d_2, call_0x4@@ 7c@@ 0, jmp_0xfffffffffffff6@@ 9b, xor_esi_esi, xor_edi_edi, mov_edx_1, call_0xffffffffffffa@@ ec@@ 7, test_rax_rax, js_0x@@ 98, sub_qword_ptr_[r@@ bp+0x@@ 40]_rax, mov_eax_0, cmp_qword_ptr_[rbp+0x@@ 40]_0, cmovns@@ _rax@@ _qword_ptr_[r@@ bp+0x40], mov_qword_ptr_[rbp+0x@@ 40]_rax, jmp_0xfffffffffffffaa@@ 1, cmp_byte_ptr_[rip+0x2@@ eb@@ 98]_0, je_0x2@@ 51, test_r9b_r9b, je_0xfffffffffffffdd@@ d, test_dil_dil, je_0xfffffffffffffdd@@ 4, mov_rdi_qword_ptr_[rsp+0x38], call_0xc@@ 3c@@ 9, mov_r13_rax, test_rax_rax, je_0x1@@ d8, mov_rdi_qword_ptr_[rsp+0x1@@ 68], call_0xc@@ 3b0, mov_r14_rax, test_rax_rax, je_0x1@@ c2, mov_rsi_rax, mov_rdi_r13, call_0xffffffffffffaf@@ 49, test_eax_eax, jne_0x1@@ 7e, mov_rdi_r13, call_0xffffffffffffab@@ f9, mov_rdi_r14, call_0xffffffffffffab@@ f1, jmp_0xfffffffffffffb@@ 0e, call_0xffffffffffffac@@ 27, mov_ecx@@ _0xfffffffd, sub_ecx@@ _dword_ptr_[r@@ ax], mov_dword_ptr_[rbp@@ ]_ecx, jmp_0xfffffffffffffa@@ 17, mov_rdi_r14, call_0xffffffffffffd0@@ 50, mov_r12d_eax, jmp_0xfffffffffffffee8, mov_eax_dword_ptr_[rsp+0x1@@ 8c], cmp_dword_ptr_[rsp+0x@@ 5c]_eax, jne_0xfffffffffffffc@@ e7, mov_eax_dword_ptr_[rsp+0x1@@ 90], cmp_dword_ptr_[rsp+0x@@ 60]_eax, jne_0xfffffffffffffc@@ d6, mov_rax_qword_ptr_[rsp+0x1@@ a0], cmp_qword_ptr_[rsp+0x@@ 70]_rax, jne_0xfffffffffffffc@@ c3, mov_rax_qword_ptr_[rsp+0x1@@ c8], cmp_qword_ptr_[rsp+0x@@ 98]_rax, jne_0xfffffffffffffc@@ ad, mov_rax_qword_ptr_[rsp+0x1@@ d8], cmp_qword_ptr_[rsp+0x@@ a8]_rax, jne_0xfffffffffffffc@@ 97, cmp_byte_ptr_[rip+0x2@@ ea@@ af@@ ]_0, jne_0xfffffffffffffa@@ 7d, mov_eax_edi, and_eax_0xf000, mov_edx_eax, mov_r8d_1, jmp_0xfffffffffffffa@@ 09, mov_rdi_qword_ptr_[rsp+0x38], xor_edx_edx, xor_esi_esi, xor_eax_eax, mov_dword_ptr_[rsp+0x18]_r8d, call_0xffffffffffffb0@@ 61, test_eax_eax, mov_dword_ptr_[rsp+0x30]_eax, mov_r8d_dword_ptr_[rsp+0x18], js@@ _0xe, mov_esi_dword_ptr_[r@@ sp+0x1@@ 60], jmp_0xfffffffffffffe@@ 0f, mov_rdi_qword_ptr_[rsp+0x38], mov_dword_ptr_[rsp+0x18]_r8d, call_0x46@@ 29, cmp_dword_ptr_[rsp+0x1@@ 60@@ ]_-2, mov_r8d_dword_ptr_[rsp+0x18], mov_r12d_2, jne_0xfffffffffffffe@@ 11, jmp_0xfffffffffffffd@@ ee, mov_rdx_qword_ptr_[rsp+0x70], mov_rax_qword_ptr_[rsp+0x1@@ a0], test_rdx_rdx, setg@@ _dil, cmp_rdx_rax, setne_dl, test_dil@@ _dl, je_0xfffffffffffffd@@ b7, test_rax_rax, jle_0xfffffffffffffd@@ ae, mov_rdx_qword_ptr_[rip+0x2@@ e@@ 99@@ b], test_rdx_rdx, je_0xd4, mov_rsi_qword_ptr_[rip+0x2@@ e@@ 98@@ 3], test_rsi_rsi, je_0xba, lea_rdi_[rip+0x20@@ 33@@ 7], call_0x4@@ 78@@ 3, jmp_0xfffffffffffff@@ 48@@ e, call_0xffffffffffffac@@ 49, mov_rdx_qword_ptr_[rsp+0x1@@ 68], mov_rsi_qword_ptr_[rsp+0x38], lea_rdi_[rip+0x20@@ a@@ 70], call_0x47@@ 60, mov_rdi_r13, call_0xffffffffffffaa@@ 68, mov_rdi_r14, call_0xffffffffffffaa@@ 60, jmp_0xfffffffffffff@@ 45@@ b, xor_r12d_r12d, movsxd_rax_r12d, imul_rax_rax@@ _0x1@@ 30, mov_r12d_2, mov_rdi_qword_ptr_[r@@ sp+r@@ ax+0x38], call_0x4@@ 55@@ e, mov_rdi_r13, call_0xffffffffffffaa@@ 36, jmp_0xfffffffffffff4@@ 31, xor_edi_edi, mov_edx_5, lea_rsi_[rip+0x20@@ 3c@@ f], call_0xffffffffffffab@@ 9e, mov_rdi_rax, call_0x48@@ 16, lea_rdi_[rip+0x20@@ 98@@ a], call_0x4@@ 84@@ a, lea_rcx_[rip+0x@@ 22@@ 16@@ e], mov_edx_0x5@@ 47, lea_rsi_[rip+0x20@@ 37@@ d], lea_rdi_[rip+0x20@@ 38@@ 4], call_0xffffffffffffac@@ 3b, mov_rsi_qword_ptr_[rsp+0x38], jmp_0xffffffffffffff47, mov_rdx_qword_ptr_[rsp+0x1@@ 68], jmp_0xffffffffffffff2@@ a
sub_rsp_8, mov_rdi_qword_ptr_[rip+0x2@@ c@@ 37@@ d], test_byte_ptr_[r@@ di]@@ _0x20, jne_0x10, call_0xffffffffffffab@@ 00, test_eax_eax, jne_0x13, add_rsp_8, ret, lea_rdi_[rip+0x20@@ 35@@ c], call_0x4@@ 7d@@ b, xor_edi_edi, mov_edx_5, lea_rsi_[rip+0x20@@ 33@@ 9], call_0xffffffffffffa@@ b0@@ 8, mov_rdi_rax, call_0x4@@ 78@@ 0
mov_rax_qword_ptr_[rdi+0x@@ 260], test_rax_rax, je_0xb4, movsxd_rcx@@ _esi, imul_rcx@@ _rcx@@ _0x1@@ 30, lea_rsi_[r@@ di+rcx], mov_rdi_qword_ptr_[r@@ si+0x18], jmp_0x2c, mov_edx_dword_ptr_[r@@ ax@@ +rcx+0x@@ 28], and_edx@@ _0xf000, cmp_edx@@ _0x6@@ 000, je_0x38, cmp_edx@@ _0x2000, je_0x60, mov_rax_qword_ptr_[rax+0x@@ 260], test_rax_rax, je_0x4c, lea_rdx_[rax@@ +rcx], cmp_qword_ptr_[r@@ dx+0x1@@ 8]_rdi, jne_0xffffffffffffffd2, mov_r8_qword_ptr_[r@@ si+0x10], cmp_qword_ptr_[r@@ dx+0x1@@ 0]_r8, jne_0xffffffffffffffc8, mov_eax_1, ret, mov_edx_dword_ptr_[r@@ si+0x28], and_edx@@ _0xf000, cmp_edx@@ _0x6@@ 000, jne_0xffffffffffffffc3, mov_rdx_qword_ptr_[r@@ si+0x38], cmp_qword_ptr_[r@@ ax@@ +rcx+0x@@ 38]_rdx, je_0xffffffffffffffd8, mov_rax_qword_ptr_[rax+0x@@ 260], test_rax_rax, jne_0xffffffffffffffb8, ret, mov_edx_dword_ptr_[r@@ si+0x28], and_edx@@ _0xf000, cmp_edx@@ _0x2000, jne_0xffffffffffffff@@ 93, mov_rdx_qword_ptr_[r@@ si+0x38], cmp_qword_ptr_[r@@ ax@@ +rcx+0x@@ 38]_rdx, jne_0xffffffffffffffd2, jmp_0xffffffffffffffa6, xor_eax_eax, ret
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 15@@ 1d], endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 130@@ d], push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, sub_rsp_8, call_0xffffffffffffa@@ 8d@@ 3, cmp_byte_ptr_[rip+0x2@@ e@@ 7c@@ 7]_0, mov_dword_ptr_[rax]_0, mov_rsi_r12, mov_rdi_rbp, je_0x13, add_rsp_8, pop_rbp, pop_r12, jmp_0xffffffffffffa@@ 88@@ 2, add_rsp_8, pop_rbp, pop_r12, jmp_0xffffffffffffa@@ c9@@ 1
endbr64, cmp_byte_ptr_[rip+0x2@@ c@@ 3c@@ d]_0, mov_rdi_qword_ptr_[rdi], mov_rsi_qword_ptr_[rsi], jne_0xf, jmp_0xffffffffffff@@ ab@@ 7d, sub_rsp_0x18, mov_qword_ptr_[rsp+8]_rsi, mov_qword_ptr_[rsp]_rdi, call_0xffffffffffffff@@ 83, test_eax_eax, mov_rdi_qword_ptr_[rsp], mov_rsi_qword_ptr_[rsp+8], jne_0x13, add_rsp_0x18, jmp_0xffffffffffff@@ ab@@ 4d, add_rsp_0x18, ret
cmp_byte_ptr_[rip+0x2@@ c@@ 37@@ 1]_0, jne_9, jmp_0xffffffffffff@@ ab@@ 27, sub_rsp_0x18, mov_qword_ptr_[rsp+8]_rsi, mov_qword_ptr_[rsp]_rdi, call_0xffffffffffffff@@ 33, test_eax_eax, jne_0x24, cmp_byte_ptr_[rip+0x2@@ e@@ 70@@ 3]_0, mov_rdi_qword_ptr_[rsp], mov_rsi_qword_ptr_[rsp+8], jne_0x12, add_rsp_0x18, jmp_0xffffffffffff@@ aa@@ f4, add_rsp_0x18, ret
push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdx, push_rbx, sub_rsp_0x38, mov_qword_ptr_[rdx@@ +8]_0, mov_qword_ptr_[rdx+0x1@@ 0]_0, cmp_edi_-1, je_0x1@@ d0, mov_rdi_qword_ptr_[rsi], call_0xffffffffffffa@@ 8d@@ 3, mov_qword_ptr_[rsp+8]_rax, test_rax_rax, je_0x109, mov_edi@@ _0x200, call_0xb@@ c@@ 3b, mov_qword_ptr_[rbp+0x10]_rax, mov_r15_rax, mov_r14d@@ _0x200, call_0xffffffffffffa@@ 78@@ 9, mov_qword_ptr_[rsp+0x10]_rax, mov_qword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rsp+0x28]_0, movabs@@ _r12@@ _0x3@@ ffffffff@@ ffffffe, mov_rax_qword_ptr_[rsp+0x10], mov_rdi_qword_ptr_[rsp+8], mov_dword_ptr_[rax]_0, call_0xffffffffffffaa@@ c0, test_rax_rax, je_0xcf, cmp_byte_ptr_[rax+0x1@@ 3]@@ _0x2e, lea_r13_[r@@ ax+0x13], jne_0x13, movzx_edx_byte_ptr_[r@@ ax+0x14], test_dl_dl, je_0xffffffffffffffd2, cmp_dl@@ _0x2e, je_0xa5, mov_rdi_r13, call_0xffffffffffffa@@ 88@@ 4, mov_rdi_qword_ptr_[rip+0x2@@ e5@@ 60], mov_rsi_r13, mov_rbx_rax, call_0x6@@ 1c@@ 2, test_al_al, jne_0xffffffffffffffab, lea_rax_[rbx+1], mov_rbx_qword_ptr_[rsp+0x18], mov_qword_ptr_[rsp+0x20]_rax, add_rbx_rax, cmp_rbx_r14, jbe_0x@@ 28, cmp_r14@@ _r12, ja_0x1@@ 1c, add_r14@@ _r14, mov_rdi_r15, mov_rsi_r14, call_0xbb@@ de, mov_qword_ptr_[rbp+0x10]_rax, mov_r15_rax, cmp_r14_rbx, jb_0xffffffffffffff@@ df, mov_rdi_qword_ptr_[rsp+0x18], mov_rdx_qword_ptr_[rsp+0x20], add_rdi@@ _r15, mov_rsi_r13, call_0xffffffffffffa@@ 9ed, inc@@ _qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp+0x18]_rbx, jmp_0xffffffffffffff4e, call_0xffffffffffffa@@ 9@@ 19, mov_rax_qword_ptr_[rsp+0x10], mov_dword_ptr_[rax]@@ _ebx, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret, cmp_byte_ptr_[rax+0x1@@ 5]_0, jne_0xffffffffffffff@@ 5d, jmp_0xffffffffffffff1e, mov_rax_qword_ptr_[rsp+0x10], mov_rdi_qword_ptr_[rsp+8], mov_ebx_dword_ptr_[rax], test_ebx_ebx, jne_0xffffffffffffffc2, call_0xffffffffffffa@@ 8d@@ 9, test_eax_eax, jne_0xffffffffffffffc5, mov_r14_qword_ptr_[rsp+0x28], movabs_rax@@ _0xffffffffffffff@@ d, cmp_r14_rax, ja_0x7@@ d, lea_r12_[r@@ 14@@ *8+8], mov_rdi_r12, call_0xba@@ e1, mov_qword_ptr_[rbp+8]_rax, mov_qword_ptr_[rbp@@ ]_r14, mov_rbx_rax, lea_rbp_[r@@ 12@@ -8], test_r14_r14, je_0x5d, add_rbp_rax, mov_qword_ptr_[rbx@@ ]_r15, mov_rdi_r15, add_rbx_8, call_0xffffffffffffa@@ 77@@ 6, lea_r15_[r@@ 15@@ +rax+1], cmp_rbx_rbp, jne_0xffffffffffffffe9, mov_qword_ptr_[rbx]_0, add_rsp_0x38, mov_eax_1, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_edi_8, call_0xba@@ 87, mov_qword_ptr_[rbp+8]_rax, mov_qword_ptr_[rbp]_0, mov_rbx_rax, jmp_0xffffffffffffffcc, call_0xb@@ c@@ e1, add_rbx@@ _rbp, jmp_0xffffffffffffffc@@ 2
endbr64, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x70, mov_qword_ptr_[rsp]_rdi, mov_qword_ptr_[rsp+8]_rsi, mov_r9d_dword_ptr_[r@@ di], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x68]_rax, xor_eax_eax, mov_dword_ptr_[rsp+0x1c]_0, cmp_r9d@@ _-1, je_0xd, xor_esi_esi, call_0xfffffffffffffb@@ d4, test_al_al, je_0x6d, mov_rax_qword_ptr_[rsp], cmp_dword_ptr_[rax+0x1@@ 30@@ ]_-1, je_0x13, mov_esi_1, mov_rdi_rax, call_0xfffffffffffffbb@@ 6, test_al_al, je_0x4f, xor_eax_eax, cmp_r9d@@ _-1, sete_al, imul_rax_rax@@ _0x1@@ 30, mov_rbx_qword_ptr_[rsp], mov_edx_5, mov_r12_qword_ptr_[r@@ bx@@ +rax+8], lea_rsi_[rip+0x2@@ 1e@@ 31], xor_edi_edi, call_0xffffffffffffa@@ 67@@ 6, mov_rdx_rax, mov_rcx_r12, xor_eax_eax, xor_esi_esi, xor_edi_edi, call_0xffffffffffffa@@ 9f@@ 5, mov_rax_qword_ptr_[rsp], lea_rdx_[rsp+0x30], lea_rsi_[rax@@ +8], mov_edi@@ _r9d, call_0xfffffffffffffd@@ 20, test_al_al, je_0x2@@ c8, mov_rax_qword_ptr_[rsp], lea_rdx_[rsp+0x@@ 48], mov_edi_dword_ptr_[r@@ ax+0x1@@ 30], lea_rsi_[r@@ ax+0x1@@ 38], call_0xfffffffffffffc@@ fd, test_al_al, je_0x2@@ 77, mov_eax_dword_ptr_[rsp+0x1c], mov_rdi_qword_ptr_[rsp+0x38], test_eax_eax, je_0x4a, call_0xffffffffffffa@@ 48@@ 3, mov_rdi_qword_ptr_[rsp+0x40], call_0xffffffffffffa@@ 47@@ 9, mov_rdi_qword_ptr_[rsp+0x50], call_0xffffffffffffa@@ 46@@ f, mov_rdi_qword_ptr_[rsp+0x58], call_0xffffffffffffa@@ 46@@ 5, mov_eax_dword_ptr_[rsp+0x1c], mov_rbx_qword_ptr_[rsp+0x@@ 68], xor_rbx_qword_ptr_fs:[0x28], jne_0x30@@ 8, add_rsp@@ _0x70, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rax_qword_ptr_[rsp+0x50], mov_qword_ptr_[rsp+0x20]_rdi, lea_rdi_[rip+0x2b@@ e@@ ea], mov_qword_ptr_[rsp+0x28]_rax, mov_byte_ptr_[rip+0x2@@ b@@ fa@@ 6]_1, call_0xffffffffffffa7@@ 1e, endbr64, test_eax_eax, jne_0x2@@ 3c, mov_rdi_qword_ptr_[rsp+0x20], mov_rsi_qword_ptr_[rsp+0x30], lea_rcx_[rip-0x@@ 45@@ 4], mov_edx_8, call_0xffffffffffffa@@ 4a@@ 7, mov_rsi_qword_ptr_[rsp+0x48], mov_rdi_qword_ptr_[rsp+0x28], lea_rcx_[rip-0x@@ 46@@ f], mov_edx_8, call_0xffffffffffffa@@ 48@@ c, mov_rsi_qword_ptr_[rip+0x2@@ e@@ 2a0], test_rsi_rsi, je_0x14, mov_rax_qword_ptr_[rsp], cmp_qword_ptr_[rax+0x@@ 26@@ 0]_0, je_0x1@@ f4, xor_ebx_ebx, jmp_0x8@@ 3, mov_rdx_qword_ptr_[rsp+0x28], mov_rax_qword_ptr_[rsp+0x20], mov_rsi_qword_ptr_[rdx], mov_rdi_qword_ptr_[rax], call_0xfffffffffffffbb@@ 0, test_eax_eax, jne_0x@@ c9, cmp_byte_ptr_[rip+0x2@@ e@@ 2c@@ c]_0, je_0x1f, mov_rdx_qword_ptr_[rsp+0x28], mov_rax_qword_ptr_[rsp+0x20], mov_rsi_qword_ptr_[rdx], mov_rdi_qword_ptr_[rax], call_0xffffffffffffa@@ 6b@@ a, test_eax_eax, jne_0xc3, mov_rax_qword_ptr_[rsp+0x28], lea_rdx_[rax+8], mov_qword_ptr_[rsp+0x28]_rdx, mov_rdx_qword_ptr_[rax], mov_rax_qword_ptr_[rsp+0x20], lea_rcx_[rax+8], mov_qword_ptr_[rsp+0x20]_rcx, mov_rsi_qword_ptr_[rax], mov_rdi_qword_ptr_[rsp], mov_rax_qword_ptr_[rsp+8], call_rax, mov_edx_dword_ptr_[rsp+0x1c], cmp_edx_eax, jl_0x1@@ 12, mov_rax_qword_ptr_[rsp+0x20], cmp_qword_ptr_[rax]_0, je_0x2b, mov_rax_qword_ptr_[rsp+0x20], mov_rsi_qword_ptr_[rax], mov_rax_qword_ptr_[rsp+0x28], test_rsi_rsi, je_0x31, cmp_qword_ptr_[rax]_0, jne_0xffffffffffffff@@ 63, mov_rdx_rbx, jmp_0xffffffffffffffae, mov_rax_qword_ptr_[rsp+0x28], cmp_qword_ptr_[rax]_0, jne_0xffffffffffffffce, mov_rdi_qword_ptr_[rsp+0x38], jmp_0xfffffffffffffe@@ 6d, lea_rdx_[rax+8], mov_qword_ptr_[rsp+0x28]_rdx, mov_rdx_qword_ptr_[rax], jmp_0xffffffffffffff91, js_0xffffffffffffff@@ c3, mov_rax_qword_ptr_[rsp+0x28], mov_rsi_rbx, lea_rdx_[rax+8], mov_qword_ptr_[rsp+0x28]_rdx, mov_rdx_qword_ptr_[rax], jmp_0xffffffffffffff6f, shr_eax_0x1f, mov_edx_1, sub_edx_eax, movsxd_rdx_edx, mov_r13_qword_ptr_[r@@ sp@@ +rdx*8+0x@@ 20], mov_rax_qword_ptr_[r@@ sp+rax*8+0x@@ 20], mov_rdi_qword_ptr_[r13+8], lea_r14_[r@@ 13+8], mov_r12_qword_ptr_[rax], mov_rbp_r14, test_rdi_rdi, jne_0x19, jmp_0xffffffffffffff19, mov_rdi_qword_ptr_[rbp+8], add_rbp_8, test_rdi_rdi, je_0xffffffffffffff@@ 08, mov_rsi_r12, call_0xfffffffffffffa@@ 7c, test_eax_eax, jne_0xfffffffffffffe@@ f8, mov_rdi_qword_ptr_[rbp], mov_rsi_r12, call_0xffffffffffffa5@@ 98, test_eax_eax, js_0xffffffffffffff@@ d1, jne_0xfffffffffffffe@@ e2, mov_rdx_rbp, sub_rdx@@ _r13, mov_rsi_r13, mov_rdi_r14, call_0xffffffffffffa7@@ 3d, mov_qword_ptr_[r13@@ ]_r12, jmp_0xfffffffffffffe@@ c7, mov_dword_ptr_[rsp+0x1c]_eax, jmp_0xfffffffffffffef0, mov_rax_qword_ptr_[rsp], mov_rdi_qword_ptr_[r@@ ax+0x1@@ 38], call_0x3d@@ 34, mov_dword_ptr_[rsp+0x1@@ c]_2, mov_rdi_qword_ptr_[rsp+0x38], mov_eax_dword_ptr_[rsp+0x1c], test_eax_eax, jne_0xfffffffffffffd@@ 79, jmp_0xfffffffffffffd@@ bb, mov_rax_qword_ptr_[rsp], mov_rdi_qword_ptr_[rax+8], call_0x3d@@ 09, mov_dword_ptr_[rsp+0x1@@ c]_2, jmp_0xfffffffffffffd@@ 29, mov_byte_ptr_[rip+0x2@@ bd@@ 58]_0, jmp_0xfffffffffffffd@@ c3, mov_rax_qword_ptr_[rsp+0x20], cmp_qword_ptr_[rax]_0, jne_0x2a, jmp_0x6@@ a, mov_rax_qword_ptr_[rsp+0x20], add_rax_8, mov_qword_ptr_[rsp+0x20]_rax, mov_rax_qword_ptr_[rsp+0x20], cmp_qword_ptr_[rax]_0, je_0x4b, mov_rsi_qword_ptr_[rip+0x2@@ e0@@ 68], mov_rax_qword_ptr_[rsp+0x20], mov_rdi_qword_ptr_[rax], call_0xfffffffffffff@@ 9a0, test_eax_eax, js_0xffffffffffffff@@ d1, jmp_0x31, mov_rax_qword_ptr_[rsp+0x28], mov_rsi_qword_ptr_[rip+0x2@@ e0@@ 44], mov_rdi_qword_ptr_[rax], call_0xfffffffffffff98@@ 1, test_eax_eax, jns_0xffffffffffff@@ fd@@ b1, mov_rax_qword_ptr_[rsp+0x28], add_rax_8, mov_qword_ptr_[rsp+0x28]_rax, mov_rax_qword_ptr_[rsp+0x28], cmp_qword_ptr_[rax]_0, jne_0xffffffffffffffcd, jmp_0xfffffffffffffd@@ 92, call_0xffffffffffffa@@ 30@@ 6
endbr64, push_r14, push_r12, push_rbx, sub_rsp_0x1@@ 80, mov_qword_ptr_[rsp+0x18]_rdi, mov_qword_ptr_[rsp+0x10]_rsi, mov_rcx_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 7@@ 8]_rcx, xor_ecx_ecx, cmp_byte_ptr_[rip+0x2@@ e0@@ 4c]_0, mov_qword_ptr_[rsp+8]_rsi, mov_qword_ptr_[rsp+0x28]_0, mov_qword_ptr_[rsp+0x30]_0, jne_0x55, mov_rsi_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[rsp+0x18], xor_edx_edx, call_0x6@@ 4b@@ 7, mov_rdi_qword_ptr_[rsp+0x28], mov_r12_rax, call_0xffffffffffffa0@@ da, mov_rdi_qword_ptr_[rsp+0x30], call_0xffffffffffffa0@@ d0, mov_rax_qword_ptr_[rsp+0x1@@ 78], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ c9, add_rsp_0x1@@ 80, pop_rbx, mov_rax_r12, pop_r12, pop_r14, ret, mov_qword_ptr_[rsp+0x4@@ 8]_rdi, lea_rdx_[rsp+0x20], xor_edi_edi, lea_rsi_[rsp+0x@@ 48], mov_dword_ptr_[rsp+0x40]_0, call_0xfffffffffffff8e@@ 7, test_al_al, je_0xffffffffffffff@@ 8d, lea_rdi_[rip+0x2@@ bb@@ 37], mov_byte_ptr_[rip+0x2@@ bb@@ f@@ 8]_1, call_0xffffffffffffa@@ 370, endbr64, test_eax_eax, jne_0x65, mov_rbx_qword_ptr_[rsp+0x28], mov_rdi_qword_ptr_[rbx], test_rdi_rdi, jne_0x2a, jmp_0xffffffffffffff63, mov_rax_qword_ptr_[rsp+8], cmp_r14_rax, cmovne@@ _r12_rax, mov_qword_ptr_[rsp+8]@@ _r12, mov_rdi_qword_ptr_[rbx+8], add_rbx_8, test_rdi_rdi, je_0xffffffffffffff@@ 41, mov_r14_qword_ptr_[rsp+0x10], mov_rsi_r14, call_0xfffffffffffff8@@ 36, test_eax_eax, jne_0xffffffffffffffe0, mov_r12_qword_ptr_[rbx], mov_rsi_r14, mov_rdi_r12, call_0xffffffffffffa@@ 35@@ 4, test_eax_eax, jne_0xffffffffffffffbd, mov_qword_ptr_[rsp+8]@@ _r12, jmp_0xffffffffffffff13, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rsp+8]_rax, jmp_0xffffffffffffff03, call_0xffffffffffffa@@ 1b@@ 1
endbr64, push_r12, push_rbp, push_rbx, sub_rsp_0x30, lea_rcx_[rsp+0x18], lea_rdx_[rsp+0x10], lea_rsi_[rsp+8], lea_r8_[rsp+0x@@ 20], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0x4d@@ 50, test_eax_eax, jne_0x29, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ 90, add_rsp_0x30, pop_rbx, pop_rbp, pop_r12, ret, mov_ebx_eax, call_0x3e@@ 3e, mov_rdx_qword_ptr_[rsp+8], mov_rcx_qword_ptr_[rsp+0x10], lea_rsi_[rip+0x2d@@ f@@ 68], mov_edi@@ _0x2c, call_0x4@@ ca@@ 3, mov_rdi_qword_ptr_[rip+0x2@@ dd@@ ef], mov_eax_ebx, lea_rdx_[rip+0x2@@ 1d@@ be], movzx_esi_byte_ptr_[r@@ dx+rax], mov_rax_qword_ptr_[rdi+0x28], cmp_rax_qword_ptr_[r@@ di+0x30], jae_0x@@ 11@@ a, lea_rdx_[rax+1], mov_qword_ptr_[rdi+0x@@ 28]_rdx, mov_byte_ptr_[rax@@ ]_sil, mov_rdi_qword_ptr_[rip+0x2@@ dd@@ c2], mov_rax_qword_ptr_[rdi+0x28], cmp_rax_qword_ptr_[r@@ di+0x30], jae_0x@@ 10@@ a, lea_rdx_[rax+1], mov_qword_ptr_[rdi+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0xa, cmp_ebx_1, je_0xffffffffffffff@@ 67, mov_rbx_qword_ptr_[rsp+0x18], lea_r12_[rip+0x@@ 2@@ 18@@ 55], cmp_rbx@@ _qword_ptr_[rsp+0x20], jle_0x@@ 21, jmp_0x@@ a5, inc_rbx, lea_rdi_[rip+0x2@@ 1d@@ b6], call_0x4@@ bd@@ 6, cmp_qword_ptr_[rsp+0x@@ 20]@@ _rbx, jl@@ _0x8@@ c, mov_rax_qword_ptr_[rip+0x2@@ e0@@ b7], lea_rsi@@ _[rax+r@@ bx*8], mov_rax_qword_ptr_[rsi], cmp_byte_ptr_[rax]@@ _0x2e, jne_0xffffffffffffffd5, mov_rbp_rbx, inc_rbx, cmp_byte_ptr_[rax+1]@@ _0xa, jne_0xffffffffffffffcc, mov_rcx_qword_ptr_[rip+0x2@@ dd@@ 48], mov_edx_0xb, mov_esi_1, mov_rdi_r12, call_0xffffffffffffa@@ 2f@@ 3, cmp_qword_ptr_[rsp+0x@@ 20]@@ _rbx, jl_0xffffffffffff@@ fe@@ f2, mov_rcx_qword_ptr_[rip+0x2@@ dd@@ 24], mov_esi_1, mov_edx_2, lea_rdi_[rip+0x2@@ 17@@ d1], call_0xffffffffffffa@@ 2c@@ b, mov_rax_qword_ptr_[rip+0x2@@ e0@@ 57], lea_rsi@@ _[rax+r@@ bx*8], mov_rax_qword_ptr_[rsi], cmp_byte_ptr_[rax]@@ _0x2e, je_0xffffffffffffff@@ a2, lea_rbx_[r@@ bp+2], jmp_0xffffffffffffff72, mov_rcx_qword_ptr_[rip+0x2@@ dc@@ e1], mov_edx_2, mov_esi_1, lea_rdi_[rip+0x2@@ 24@@ 91], call_0xffffffffffffa@@ 288, jmp_0xfffffffffffffe@@ 8c, call_0xffffffffffffa0@@ 38, jmp_0xfffffffffffffef2, mov_esi_0xa, call_0xffffffffffffa0@@ 23, jmp_0xfffffffffffffefd, call_0xffffffffffff9@@ fc@@ 9
endbr64, push_rbp, push_rbx, sub_rsp_0x38, lea_rcx_[rsp+0x18], lea_rdx_[rsp+0x10], lea_rsi_[rsp+8], lea_r8_[rsp+0x@@ 20], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0x4b@@ 72, test_eax_eax, jne_0x23, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ f7, add_rsp_0x38, pop_rbx, pop_rbp, ret, mov_ebx_eax, call_0x3c@@ 66, mov_rdi_qword_ptr_[rip+0x2@@ dc@@ 32], mov_eax_ebx, lea_rdx_[rip+0x2@@ 1c@@ 01], movzx_esi_byte_ptr_[r@@ dx+rax], mov_rax_qword_ptr_[rdi+0x28], cmp_rax_qword_ptr_[r@@ di+0x30], jae_0x@@ a5, lea_rdx_[rax+1], mov_qword_ptr_[rdi+0x@@ 28]_rdx, mov_byte_ptr_[rax@@ ]_sil, mov_rcx_qword_ptr_[rsp+0x10], mov_rdx_qword_ptr_[rsp+8], mov_edi_0x20, lea_rsi_[rip+0x2@@ dd@@ 5e], call_0x4a@@ 9e, mov_rdi_qword_ptr_[rip+0x2@@ db@@ ea], mov_rax_qword_ptr_[rdi+0x28], cmp_rax_qword_ptr_[r@@ di+0x30], jae_0x@@ 7a, lea_rdx_[rax+1], mov_qword_ptr_[rdi+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0xa, cmp_ebx_1, je_0xffffffffffffff@@ 71, mov_rbx_qword_ptr_[rsp+0x18], cmp_rbx@@ _qword_ptr_[rsp+0x20], jg@@ _0x27, lea_rbp_[rip+0x@@ 2@@ 1b@@ f1], mov_rax_qword_ptr_[rip+0x2d@@ f0@@ 1], mov_rdi_rbp, lea_rsi@@ _[rax+r@@ bx*8], inc_rbx, call_0x4@@ 9@@ ff, cmp_qword_ptr_[rsp+0x@@ 20]@@ _rbx, jge_0xffffffffffffff@@ e5, mov_rcx_qword_ptr_[rip+0x2@@ db@@ 94], mov_edx_2, mov_esi_1, lea_rdi_[rip+0x22@@ 34@@ 4], call_0xffffffffffffa@@ 13b, jmp_0xffffffffffffff1d, call_0xffffffffffff9e@@ f0, jmp_0xffffffffffffff67, mov_esi_0xa, call_0xffffffffffff9e@@ db, jmp_0xffffffffffffff89, call_0xffffffffffff9e@@ 8@@ 4
endbr64, push_rbp, push_rbx, sub_rsp_0x58, lea_rcx_[rsp+0x18], lea_rdx_[rsp+0x10], lea_rsi_[rsp+8], lea_r8_[rsp+0x@@ 20], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, call_0x4a@@ 22, test_eax_eax, jne_0x23, mov_rax_qword_ptr_[rsp+0x48], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ 1d, add_rsp_0x58, pop_rbx, pop_rbp, ret, mov_ebx_eax, call_0x3b@@ 16, mov_rdx_qword_ptr_[rsp+0x10], mov_rsi_qword_ptr_[rsp+8], lea_rcx_[rsp+0x28], lea_r8_[rsp+0x@@ 30], lea_rdi_[rip+0x2d@@ c@@ 36], call_0x4@@ 946, test_bl_1, je_0x3c, mov_rdx_qword_ptr_[rsp+0x30], mov_rcx_qword_ptr_[rsp+0x28], mov_rax_rdx, sub_rax_rcx, inc_rax, mov_r8d_1, cmp_rcx_rdx, cmovle@@ _r8_rax, mov_rdi_qword_ptr_[rip+0x2@@ da@@ 9d], lea_rdx_[rip+0x2@@ 15@@ 63], mov_esi_1, xor_eax_eax, call_0xffffffffffffa@@ 1a@@ 7, and_ebx@@ _2, je_0xffffffffffffff@@ 76, mov_rdx_qword_ptr_[rsp+0x20], mov_rsi_qword_ptr_[rsp+0x18], lea_rcx_[rsp+0x@@ 38], lea_r8_[rsp+0x@@ 40], lea_rdi_[rip+0x2d@@ c@@ fe], call_0x4@@ 8d@@ e, mov_rdx_qword_ptr_[rsp+0x40], mov_rcx_qword_ptr_[rsp+0x38], mov_rax_rdx, sub_rax_rcx, inc_rax, mov_r8d_1, cmp_rcx_rdx, cmovle@@ _r8_rax, mov_rcx_qword_ptr_[rsp+0x30], mov_rdi_qword_ptr_[rip+0x2@@ da@@ 35], lea_rdx_[rip+0x2@@ 150@@ 5], mov_esi_1, xor_eax_eax, call_0xffffffffffffa@@ 13@@ f, mov_rbx_qword_ptr_[rsp+0x18], cmp_rbx@@ _qword_ptr_[rsp+0x20], jg_0xffffffffffffff@@ 07, lea_rbp_[rip+0x@@ 2@@ 1a@@ 43], mov_rax_qword_ptr_[rip+0x2@@ dd@@ 51], mov_rdi_rbp, lea_rsi@@ _[rax+r@@ bx*8], inc_rbx, call_0x4@@ 84@@ f, cmp_qword_ptr_[rsp+0x@@ 20]@@ _rbx, jge_0xffffffffffffff@@ e5, jmp_0xfffffffffffffe@@ da, call_0xffffffffffff9d@@ 0@@ e
endbr64, lea_rsi_[rip+0x4@@ 22@@ 5], lea_rdx_[rip-0x@@ 4b@@ 2], jmp_0x4@@ 22@@ e
endbr64, lea_rsi_[rip+0x4@@ 1f@@ 5], lea_rdx_[rip-0x@@ 2f@@ 2], jmp_0x4@@ 20@@ e
endbr64, lea_rsi_[rip+0x4@@ 1d@@ 5], lea_rdx_[rip-0x@@ 1c@@ 2], jmp_0x4@@ 1e@@ e
lea_eax_[r@@ si-0x@@ 45], sub_rsp_8, cmp_al_9, ja_0x1@@ 7, lea_rdx_[rip+0x2@@ 14@@ 4a], movzx_eax_al, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, sub_esi@@ _0x65, cmp_sil@@ _9, ja_0x1@@ 7, lea_rdx_[rip+0x2@@ 14@@ 54], movzx_esi_sil, movsxd_rax_dword_ptr_[r@@ dx+r@@ si*4], add_rax_rdx, jmp_rax, mov_rax_-1, add_rsp_8, ret
push_r15, push_r14, push_r13, push_r12, mov_r12_rdi, mov_rdi_rdx, push_rbp, mov_rbp_rsi, lea_rax_[r@@ bp+1], push_rbx, mov_rsi_rcx, movabs_rdx@@ _0x1@@ 20@@ 8@@ 0000@@ 00000, sub_rsp_0x18, movzx_ebx_byte_ptr_[r@@ ax], inc_rax, cmp_bl@@ _0x30, ja_0x4@@ f, bt@@ _rdx@@ _rbx, jb@@ _0xfffffffffffffff@@ 1, movsx_edx@@ _bl, sub_edx@@ _0x30, cmp_edx@@ _9, jbe_0x@@ 4e, cmp_bl@@ _0x2e, je_0x62, lea_r9d_[r@@ bx-0x@@ 58], movzx_ecx_byte_ptr_[rax], lea_r13@@ _[rax+1], cmp_r9b@@ _0x20, ja_0x7@@ 1, lea_r10_[rip+0x@@ 2@@ 13@@ 74], movzx_r9d@@ _r9b, movsxd_rdx_dword_ptr_[r@@ 10+r@@ 9*4], add_rdx@@ _r10, jmp_rdx, movsx@@ _r9d@@ _bl, sub_r9d@@ _0x30, cmp_r9d@@ _9, ja_0xffffffffffffff@@ c4, movsx@@ _r9d@@ _byte_ptr_[rax], inc_rax, mov_ebx@@ _r9d, sub_r9d@@ _0x30, cmp_r9d@@ _9, jbe_0xffffffffffffff@@ ee, cmp_bl@@ _0x2e, jne_0xffffffffffffffa9, movsx_edx@@ _byte_ptr_[rax], inc_rax, mov_ebx_edx, sub_edx@@ _0x30, cmp_edx@@ _9, ja_0xffffffffffffff@@ 99, jmp_0xfffffffffffffff@@ 0, xor_r13d_r13d, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, mov_rax_r13, pop_r13, pop_r14, pop_r15, ret
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x38, mov_qword_ptr_[rsp+8]_rsi, test_rdi_rdi, je_0x12@@ 8, mov_rax_qword_ptr_[rdx], cmp_byte_ptr_[rip+0x2@@ d@@ 7a@@ c]_0, mov_qword_ptr_[rsp+0x28]_rax, mov_r14_qword_ptr_[r@@ ax+0x@@ b8], mov_rax_qword_ptr_[rdx+0x10], mov_r15_qword_ptr_[r@@ dx+8], mov_qword_ptr_[rsp+0x10]_rax, mov_r12_rdi, je_0x1@@ 55, cmp_r15@@ _qword_ptr_[rsp+0x10], jge_0x@@ f1, mov_rax_qword_ptr_[rsp+8], inc_rax, mov_qword_ptr_[rsp+0x18]_rax, mov_rbp_qword_ptr_[rsp+8], mov_r9_qword_ptr_[rsp+0x18], movzx_ebx_byte_ptr_[r@@ bp], test_bl_bl, jne_0x3d, jmp_0x@@ be, movsx_esi@@ _bl, mov_rbp_r9, mov_rax_qword_ptr_[r12+0x@@ 28], cmp_rax_qword_ptr_[r@@ 12+0x30], jae_0x@@ 80, lea_rdx_[rax+1], mov_qword_ptr_[r12+0x@@ 28]_rdx, mov_byte_ptr_[rax@@ ]_bl, movzx_ebx_byte_ptr_[r@@ bp], lea_r9_[r@@ bp+1], test_bl_bl, je_0x89, cmp_bl@@ _0x25, jne_0xffffffffffffffd0, movzx_eax_byte_ptr_[r@@ bp+1], lea_r13_[r@@ bp+2], cmp_al_0x4@@ c, je_0xd4, cmp_al@@ _0x6c, je_0x9c, cmp_al_0x25, je_0x8@@ 4, mov_rdx_qword_ptr_[rsp+0x28], mov_rsi_rbp, xor_r8d_r8d, mov_rcx_r15, mov_rdi_r12, mov_qword_ptr_[rsp+0x20]_r9, call_0xfffffffffffffc@@ f8, mov_rbp_rax, test_rax_rax, jne_0xffffffffffffffaa, mov_r9_qword_ptr_[rsp+0x20], mov_rax_qword_ptr_[r12+0x@@ 28], mov_rbp_r9, mov_esi_0x2@@ 5, cmp_rax_qword_ptr_[r@@ 12+0x30], jb_0xffffffffffffff@@ 86, movzx_esi_sil, mov_rdi_r12, call_0xffffffffffff98@@ e9, movzx_ebx_byte_ptr_[r@@ bp], lea_r9_[r@@ bp+1], test_bl_bl, jne_0xffffffffffffff@@ 87, inc_r15, cmp_qword_ptr_[rsp+0x1@@ 0]_r15, jne_0xffffffffffffff@@ 28, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rbp_r13, mov_esi_0x2@@ 5, jmp_0xffffffffffffff2e, mov_rsi_qword_ptr_[r@@ 14+r@@ 15@@ *8+8], xor_eax_eax, cmp_byte_ptr_[rsi@@ -1]_0xa, sete_al, sub_rsi_rax, mov_rdi_qword_ptr_[r@@ 14+r@@ 15*8], xor_ecx_ecx, xor_edx_edx, call_0x3f@@ 97, mov_rbp_r13, jmp_0xffffffffffffff1c, mov_rsi_qword_ptr_[r@@ 14+r@@ 15@@ *8+8], jmp_0xffffffffffffffdc, mov_rax_qword_ptr_[rsp+8], cmp_byte_ptr_[rax]@@ _0x25, jne_0xfffffffffffffea@@ 9, movzx_eax_byte_ptr_[rax+1], cmp_al@@ _0x6c, je_0x44, cmp_al_0x4@@ c, jne_0xfffffffffffffe@@ 99, mov_rax_qword_ptr_[rsp+8], cmp_byte_ptr_[rax+@@ 2]_0, jne_0xfffffffffffffe@@ 8a, mov_rax_qword_ptr_[rsp+0x10], mov_rdi_qword_ptr_[r@@ 14+r@@ 15*8], mov_rdx_qword_ptr_[r@@ 14@@ +rax*8], sub_rdx_rdi, add_rsp_0x38, pop_rbx, pop_rbp, mov_rcx_r12, pop_r12, pop_r13, pop_r14, mov_esi_1, pop_r15, jmp_0xffffffffffff@@ 9a@@ 56, mov_rax_qword_ptr_[rsp+8], cmp_byte_ptr_[rax+@@ 2]@@ _0xa, jne_0xfffffffffffffe@@ 50, cmp_byte_ptr_[rax+@@ 3]_0, jne_0xfffffffffffffe@@ 46, cmp_r15@@ _qword_ptr_[rsp+0x10], jge_0xffffffffffffff@@ 31, mov_rax_qword_ptr_[rsp+0x10], xor_edx_edx, mov_rax_qword_ptr_[r@@ 14@@ +rax*8], mov_rdi_qword_ptr_[r@@ 14+r@@ 15*8], cmp_byte_ptr_[rax@@ -1]_0xa, setne_dl, add_rax_rdx, sub_rax_rdi, mov_rdx_rax, jmp_0xffffffffffffffa@@ 2
push_r15, mov_rax_rsi, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x68, movzx_ebx_byte_ptr_[r@@ ax], mov_rsi@@ _qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x5@@ 8]_rsi, xor_esi_esi, cmp_bl@@ _dl, je_0x56, test_bl_bl, je_0x52, mov_rbp_rdi, lea_rdi_[r@@ cx+0x18], mov_qword_ptr_[rsp+8]_rdi, mov_r15_rcx, mov_r14d_edx, lea_r13_[rip+0x@@ 20@@ f@@ bb], lea_r12@@ _[rax+1], cmp_bl@@ _0x25, je_0x54, test_rbp_rbp, je_0x1a, mov_rax_qword_ptr_[rbp+0x28], cmp_rax_qword_ptr_[r@@ bp+0x30], jae_0x@@ 1f@@ d, lea_rdx_[rax+1], mov_qword_ptr_[rbp+0x@@ 28]_rdx, mov_byte_ptr_[rax@@ ]_bl, movzx_ebx_byte_ptr_[r@@ 12], mov_rax_r12, test_bl_bl, je_7, cmp_r14b@@ _bl, jne_0xffffffffffffffcb, mov_rcx_qword_ptr_[rsp+0x58], xor_rcx_qword_ptr_fs:[0x28], jne_0x2@@ 31, add_rsp_0x68, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, movzx_ecx_byte_ptr_[r@@ ax+1], lea_r10@@ _[rax@@ +2], lea_edx_[r@@ cx-0x@@ 25], cmp_dl@@ _0x19, ja_0x1@@ 2, movzx_edx_dl, movsxd_rdx_dword_ptr_[r@@ 13@@ +rdx*4], add_rdx@@ _r13, jmp_rdx, xor_ecx_ecx, xor_edx_edx, mov_r8_r15, mov_rsi_rax, mov_rdi_rbp, call_0xfffffffffffffa@@ d3, test_rax_rax, je_0xffffffffffffff@@ 79, movzx_ebx_byte_ptr_[r@@ ax], jmp_0xffffffffffffff95, movzx_esi@@ _bl, mov_rdi_rbp, call_0xffffffffffff9@@ 56@@ 2, movzx_ebx_byte_ptr_[r@@ 12], mov_rax_r12, jmp_0xfffffffffffffe@@ 08, call_0xffffffffffff94@@ b@@ 5
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x68, lea_rcx_[rsp+0x10], lea_rdx_[rsp+8], mov_rsi_rsp, lea_r8_[r@@ sp+0x18], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x58]_rax, xor_eax_eax, call_0x40@@ 60, mov_ebx_eax, test_ebx_ebx, jne_0x27, mov_rax_qword_ptr_[rsp+0x58], xor_rax_qword_ptr_fs:[0x28], jne_0x10@@ 3, add_rsp_0x68, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, call_0x3@@ 150, mov_rax_qword_ptr_[rip+0x2@@ ae@@ 1c], mov_rcx_qword_ptr_[rsp], mov_rdx_qword_ptr_[rip+0x2@@ a@@ e0@@ 9], mov_rsi_qword_ptr_[rsp+0x10], cmp_rax_rcx, jl@@ _0x1a, lea_r13_[rip+0x@@ 2d@@ 268], lea_rbp_[r@@ 13+0x1@@ 30], lea_r12_[rsp+0x20], cmp_rdx_rsi, jge_0x@@ 54, mov_qword_ptr_[rsp+0x4@@ 8]_rsi, lea_r13_[rip+0x@@ 2d@@ 24@@ b], mov_rsi_qword_ptr_[rip+0x2@@ d0@@ a4], mov_rdi_qword_ptr_[rip+0x2@@ d0@@ d5], lea_r12_[rsp+0x20], mov_qword_ptr_[rsp+0x30]_rcx, mov_qword_ptr_[rsp+0x40]_rdx, mov_rcx_r12, lea_rbp_[r@@ 13+0x1@@ 30], xor_edx_edx, mov_qword_ptr_[rsp+0x20]@@ _r13, mov_qword_ptr_[rsp+0x28]_rax, mov_qword_ptr_[rsp+0x3@@ 8]_rbp, call_0xfffffffffffffc@@ 63, mov_rsi_qword_ptr_[rsp+0x10], mov_rcx_qword_ptr_[rsp], mov_rax_qword_ptr_[rsp+8], lea_rdi_[rip+0x2d@@ 0@@ 59], lea_rdx_[rax+1], mov_r8_qword_ptr_[r@@ di+r@@ bx*8], mov_rax_qword_ptr_[rsp+0x18], mov_rdi_qword_ptr_[rip+0x2@@ d0@@ 7d], inc_rax, mov_qword_ptr_[rsp+0x28]_rcx, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x4@@ 0]_rsi, mov_qword_ptr_[rip+0x2@@ ad@@ 6@@ 4]@@ _rdx, mov_rcx_r12, xor_edx_edx, mov_rsi_r8, mov_qword_ptr_[rsp+0x20]@@ _r13, mov_qword_ptr_[rsp+0x3@@ 8]_rbp, mov_qword_ptr_[rsp+0x48]_rax, mov_qword_ptr_[rip+0x2@@ ad@@ 3e@@ ]_rax, call_0xfffffffffffffb@@ fe, jmp_0xfffffffffffffef4, call_0xffffffffffff9@@ 36@@ 4
endbr64, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_rax_qword_ptr_[rip+0x2d@@ 25@@ 9], lea_rsi_[rip+0x38@@ 4a], neg_rax, lea_rdx_[rip-0x@@ 190], mov_qword_ptr_[rip+0x2@@ ac@@ e@@ 9]_rax, mov_qword_ptr_[rip+0x2@@ ac@@ ea@@ ]_rax, call_0x38@@ 52, mov_rax_qword_ptr_[rip+0x2a@@ cd@@ e], cmp_qword_ptr_[rip+0x2@@ d@@ 20@@ f]_rax, jg@@ _0x2f, mov_rax_qword_ptr_[rip+0x2a@@ cc@@ 6], cmp_qword_ptr_[rip+0x2@@ d@@ 32@@ f]_rax, jg@@ _0x1f, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x78, add_rsp_0x48, ret, call_0x2@@ fd0, lea_rax_[rip+0x2d@@ 10@@ 4], mov_qword_ptr_[rsp]_rax, mov_rax_qword_ptr_[rip+0x2a@@ c9@@ 1], mov_rsi_qword_ptr_[rip+0x2@@ cf@@ 52], mov_qword_ptr_[rsp+8]_rax, mov_rax_qword_ptr_[rip+0x2d@@ 1b@@ 6], mov_rdi_qword_ptr_[rip+0x2@@ c@@ f7@@ 7], mov_qword_ptr_[rsp+0x10]_rax, lea_rax_[rip+0x2d@@ 20@@ 3], mov_qword_ptr_[rsp+0x18]_rax, mov_rax_qword_ptr_[rip+0x2@@ ac@@ 57], mov_rcx_rsp, mov_qword_ptr_[rsp+0x20]_rax, mov_rax_qword_ptr_[rip+0x2d@@ 2b8], xor_edx_edx, mov_qword_ptr_[rsp+0x28]_rax, call_0xfffffffffffffb0@@ 1, jmp_0xffffffffffffff7f, call_0xffffffffffff9@@ 26@@ 7
push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_r13_qword_ptr_[r@@ di+0x@@ a0], test_r13_r13, je_0xb3, cmp_byte_ptr_[rip+0x2@@ cf@@ 6f@@ ]_0, mov_r12_qword_ptr_[r@@ di+0x@@ b0], mov_rbx_rdi, je_0x6b, lea_rbp_[r@@ 13+r@@ 12], mov_byte_ptr_[rbp@@ ]@@ _0xd, mov_esi@@ _0xd, mov_rdi_r13, call_0xffffffffffff9@@ 38@@ 2, cmp_rbp_rax, je_0x9a, mov_rdx_rax, jmp_0x17, mov_rax_rsi, inc_rdx, mov_byte_ptr_[rdx@@ -1@@ ]_cl, cmp_rbp_rax, je_0x2c, movzx_ecx_byte_ptr_[rax], lea_rsi_[rax+1], cmp_cl@@ _0xd, jne_0xffffffffffffffe8, cmp_byte_ptr_[rax+1]@@ _0xa, jne_0xffffffffffffffe2, mov_ecx_0xa, add_rax_2, inc_rdx, mov_byte_ptr_[rdx@@ -1@@ ]_cl, cmp_rbp_rax, jne_0xffffffffffffffdc, sub_rbp@@ _rdx, sub_r12@@ _rbp, test_r12_r12, je_0x1f, cmp_byte_ptr_[r@@ 13+r@@ 12@@ -1]_0xa, lea_rax_[r@@ 13+r@@ 12], je_0x32, mov_byte_ptr_[rax]@@ _0xa, mov_byte_ptr_[rbx+0x1@@ 20]_1, inc_r12, add_r13@@ _r12, mov_qword_ptr_[r13]_0, mov_qword_ptr_[rbx+0x@@ b@@ 0]_r12, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_r13_rax, jmp_0xffffffffffffffdd, mov_rdx_rbp, jmp_0xffffffffffffffa@@ d
endbr64, test_rsi_rsi, je_0xb, cmp_byte_ptr_[rdi+0x1@@ 2@@ 1]_0, je_8, ret, jmp_0xfffffffffffffc@@ c@@ 8
mov_eax_dword_ptr_[rdi], test_eax_eax, js_0x1@@ 9c, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_eax_dword_ptr_[rdi+0x@@ 28], and_eax_0xf000, cmp_eax_0x8000, je_0xd0, mov_rax_qword_ptr_[rdi+0x@@ b0], mov_rsi_qword_ptr_[rbx+0x@@ a8], mov_r8_rsi, sub_r8@@ _rax, je_0x136, cmp_byte_ptr_[rbx+0x1@@ 2@@ 1]_0, je_0x1@@ 89, test_rax_rax, je_0x90, cmp_qword_ptr_[rbx+0x@@ a8]_rax, jne_0x61, mov_rsi_rax, movabs@@ _rbp@@ _0x3@@ ffffffffffff@@ ff@@ 7, cmp_rsi@@ _rbp, ja_0x1@@ 74, add_r@@ si_rsi, mov_qword_ptr_[rbx+0x@@ a@@ 8]_rsi, mov_rdi_qword_ptr_[rbx+0x@@ a0], call_0xa@@ 4@@ 16, mov_rsi_qword_ptr_[rbx+0x@@ a8], mov_qword_ptr_[rbx+0x@@ a0]_rax, mov_rax_qword_ptr_[rbx+0x@@ b0], mov_r8_rsi, sub_r8@@ _rax, je_0xffffffffffffffc6, cmp_byte_ptr_[rbx+0x1@@ 2@@ 1]_0, je_0xcd, cmp_rax_rsi, je_0xffffffffffffff@@ b4, lea_rsi_[rax+0x10], and_rsi@@ _0xfffffffffffffff8, mov_qword_ptr_[rbx+0x@@ a@@ 8]_rsi, mov_rdi_qword_ptr_[rbx+0x@@ a0], call_0xa@@ 3c@@ c, mov_qword_ptr_[rbx+0x@@ a0]_rax, add_rsp_8, pop_rbx, pop_rbp, ret, mov_rbp_qword_ptr_[r@@ di+0x40], mov_rsi_rbp, and_rsi@@ _0xfffffffffffffff8, add_rsi@@ _0x10, cmp_rbp@@ _rsi, ja_0x@@ e5, movabs_rax_0x7@@ ffffffff@@ ffffffe, cmp_rsi_rax, ja_0x@@ d2, cmp_qword_ptr_[rdi+0x@@ a@@ 8]_rsi, jb@@ _0x8@@ 6, mov_rax_qword_ptr_[rbx+0x@@ b0], cmp_rax_rbp, ja_0xfffffffffffffe@@ fb, mov_rsi_rbp, sub_rsi_rax, inc@@ _rsi, je_0xffffffffffffff@@ 9f, cmp_byte_ptr_[rbx+0x1@@ 2@@ 1]_0, jne_0xffffffffffffff@@ 96, mov_rdi_rbx, call_0xfffffffffffffe@@ 61, mov_rax_qword_ptr_[rbx+0x@@ b0], cmp_rax_rbp, ja_0xfffffffffffffe@@ cf, jmp_0xffffffffffffff7c, test_rax_rax, jne_0xfffffffffffffe@@ ef, add_rsp_8, pop_rbx, pop_rbp, ret, mov_rsi_r8, mov_rdi_rbx, call_0xfffffffffffffe@@ 2a, mov_rax_qword_ptr_[rbx+0x@@ b0], mov_rsi_qword_ptr_[rbx+0x@@ a8], jmp_0xffffffffffffff20, ret, mov_qword_ptr_[rdi+0x@@ a@@ 8]_rsi, mov_rdi_qword_ptr_[rdi+0x@@ a0], call_0xa@@ 2@@ ea, mov_qword_ptr_[rbx+0x@@ a0]_rax, jmp_0xffffffffffffff66, mov_rsi_r8, mov_rdi_rbx, call_0xfffffffffffffdd@@ a, mov_rax_qword_ptr_[rbx+0x@@ b0], jmp_0xfffffffffffffe@@ 6b, call_0xa@@ 4c@@ 9
push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_eax_dword_ptr_[rdi], test_eax_eax, js_0x@@ 93, mov_ebp_esi, mov_rsi_qword_ptr_[rdi+0x@@ 48], movabs_rdx@@ _0x7@@ ffffffffffff@@ fe@@ f, mov_edi_8, call_0xa@@ 708, mov_qword_ptr_[rbx+0x@@ a8]_rax, mov_rdi_rax, call_0xa@@ 2@@ 19, mov_qword_ptr_[rbx+0x@@ a0]_rax, test_bpl_bpl, je_0x22, mov_qword_ptr_[rbx+0x@@ b0]_0, mov_byte_ptr_[rbx+0x1@@ 2@@ 1]_0, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret, mov_rsi_qword_ptr_[rbx+0x@@ a8], test_rsi_rsi, je_0xb, cmp_byte_ptr_[rbx+0x1@@ 2@@ 1]_0, je_0x45, mov_rdx_qword_ptr_[rbx+0x@@ b0], xor_esi_esi, mov_rdi_rax, call_0xffffffffffff8@@ fa@@ 7, test_rax_rax, setne_al, add_rsp_8, pop_rbx, pop_rbp, ret, mov_qword_ptr_[rdi+0x@@ a8@@ ]_8, mov_edi_8, call_0xa@@ 1a0, mov_qword_ptr_[rbx+0x@@ a0]_rax, jmp_0xffffffffffffff8c, mov_rdi_rbx, call_0xfffffffffffffc@@ fd, mov_rax_qword_ptr_[rbx+0x@@ a0], jmp_0xffffffffffffffa@@ e
endbr64, push_r15, push_r14, mov_r14_rdi, push_r13, push_r12, push_rbp, push_rbx, mov_ebx_esi, sub_rsp_0xb8, movzx_ebp_byte_ptr_[r@@ ip+0x2@@ ca@@ 8f], or_ebp@@ _esi, movzx_esi@@ _bpl, call_0xfffffffffffffed@@ 9, mov_esi_dword_ptr_[r@@ 14+0x1@@ 30], or_eax@@ _ebx, mov_byte_ptr_[rsp+0x@@ 9a@@ ]_al, cmp_dword_ptr_[r@@ 14]@@ _esi, jne_0x51, mov_rax_qword_ptr_[r14+0x@@ a0], cmp_byte_ptr_[rsp+0x@@ 9a@@ ]_0, mov_qword_ptr_[r14+0x1@@ d0]_rax, mov_rax_qword_ptr_[r14+0x@@ a8], mov_qword_ptr_[r14+0x1@@ d8]_rax, mov_rax_qword_ptr_[r14+0x@@ b0], mov_qword_ptr_[r14+0x1@@ e0]_rax, je_0x40, movzx_eax_byte_ptr_[rsp+0x@@ 9a], add_rsp_0xb8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, or@@ _ebp_eax, lea_rdi_[r@@ 14+0x1@@ 30], movzx_esi@@ _bpl, call_0xfffffffffffffe@@ 63, or@@ _byte_ptr_[rsp+0x@@ 9a@@ ]_al, cmp_byte_ptr_[rsp+0x@@ 9a@@ ]_0, jne_0xffffffffffffffc4, mov_rdi_r14, call_0xfffffffffffffc@@ 5a, mov_rdi_r14, call_0xfffffffffffffb@@ 12, mov_eax_dword_ptr_[r@@ 14+0x1@@ 30], cmp_dword_ptr_[r@@ 14]_eax, jne_0xd@@ 6b, mov_rax_qword_ptr_[r14+0x@@ a8], mov_rdi_qword_ptr_[r14+0x@@ b0], mov_qword_ptr_[r14+0x1@@ d8]_rax, mov_r9_qword_ptr_[r@@ 14+0x@@ a0], movzx_eax_byte_ptr_[r@@ 14+0x1@@ 20], mov_qword_ptr_[r14+0x1@@ d@@ 0]_r9, mov_qword_ptr_[r14+0x1@@ e@@ 0]_rdi, mov_byte_ptr_[r14+0x@@ 2@@ 50@@ ]_al, mov_r11@@ _rdi, lea_rcx_[r@@ 9+r@@ 11], mov_eax_dword_ptr_[rip+0x2@@ c@@ aa@@ 7], mov_qword_ptr_[rsp+0x18]_rcx, mov_qword_ptr_[rsp+0x10]_r9, lea_ebx@@ _[rax@@ -4], lea_rsi_[r@@ 9+r@@ di], mov_rax_rcx, mov_r8_qword_ptr_[rip+0x2@@ c@@ aa@@ 4], mov_rdx_r8, cmp_rcx@@ _r9, jne_0x11, jmp_0x2c, dec@@ _rcx, dec_rax, cmp_rcx@@ _r9, je_0x1f, cmp_byte_ptr_[rcx@@ -1]_0xa, jne_0xfffffffffffffff1, lea_r10@@ _[rdx@@ -1], test_rdx_rdx, je_0x10, dec@@ _rcx, mov_rdx_r10, dec_rax, cmp_rcx@@ _r9, jne_0xffffffffffffffe5, mov_qword_ptr_[r14+0x@@ e@@ 0]_rcx, mov_qword_ptr_[r14+0x@@ 21@@ 0]_rax, cmp_ebx_1, jbe_0x@@ 13@@ f, movzx_eax_byte_ptr_[r@@ 14+0x@@ 250], mov_r13_qword_ptr_[r@@ sp+0x18], mov_r15_rsi, cmp_byte_ptr_[r@@ 14+0x1@@ 20@@ ]_al, je_0x12@@ 2, cmp_byte_ptr_[rip+0x2@@ ca@@ 2@@ 1]_0, mov_qword_ptr_[r14+0x@@ f@@ 0]_r15, mov_qword_ptr_[r14+0x@@ 22@@ 0]_r13, je_0x10, cmp_qword_ptr_[rip+0x2@@ c@@ 9d@@ 5]_0, je_0xe@@ 15, shr_rdi@@ _5, mov_eax_1, cmove@@ _rdi_rax, movabs_rax_0x7@@ 87@@ 87@@ 87@@ 87@@ 87@@ 87@@ 82, cmp_rdi_rax, cmova@@ _rdi_rax, mov_qword_ptr_[rsp+@@ 8]_-1, add_rdi@@ _5, mov_rbx_rdi, xor_r12d_r12d, shl_rdi_3, mov_qword_ptr_[rsp+0x20]_r9, call_0x9f@@ 55, mov_rbp_rax, mov_rax_qword_ptr_[r14+0xe0], cmp_byte_ptr_[rip+0x2@@ c@@ 9b@@ 3]_0, mov_r9_qword_ptr_[rsp+0x20], mov_qword_ptr_[rsp+0x20]_rax, je_0xb, cmp_r15_rax, je_0xd@@ 68, mov_r15_r9, xor_ecx_ecx, cmp_r9@@ _qword_ptr_[rsp+0x20], je_0x@@ f0@@ 4, mov_qword_ptr_[rsp+0x30]@@ _r12, mov_qword_ptr_[rsp+0x3@@ 8]_r13, mov_qword_ptr_[rsp+0x4@@ 0]_r14, mov_rdi_rbp, mov_qword_ptr_[rsp+0x28]_r9, mov_rbp_qword_ptr_[rsp+0x20], mov_r12_rcx, mov_r13_r15, mov_r14_rbx, jmp_0x1c, mov_qword_ptr_[rdi@@ +r@@ bx*@@ 8]_r13, inc@@ _r13, cmp_byte_ptr_[r@@ 13@@ -1]_0xa, jne_0xfffffffffffffff@@ 8, cmp_r13@@ _rbp, je_0xef, mov_rbx_qword_ptr_[rsp+8], mov_r15_r12, and@@ _rbx@@ _r15, inc_r12, cmp_rbx_r14, jne_0xffffffffffffffd8, movabs_rax_0x7@@ ffffffffffff@@ fe, cmp_r14_rax, ja_0x@@ e@@ 79, add_r14@@ _r14, lea_rsi_[r@@ 14*8], call_0x9@@ f0@@ 8, mov_rdi_rax, jmp_0xffffffffffffffb0, mov_rdx_rdi, sub_rdx@@ _r11, add_rdx_rcx, cmp_r11@@ _rdi, cmova@@ _rdx_rcx, mov_r13_qword_ptr_[r@@ sp+0x18], mov_rax_rsi, jmp_0x24, movzx_ebx_byte_ptr_[r@@ 13-1], lea_r10@@ _[rax-1], lea_r11_[r@@ 13-1], cmp_byte_ptr_[rax@@ -1@@ ]_bl, jne_0xd@@ f8, mov_r13@@ _r11, mov_rax_r10, cmp_rax_rdx, jne_0xffffffffffffffe1, cmp_rdx@@ _r9, je_0xd@@ 64, cmp_byte_ptr_[rdx@@ -1]_0xa, je_0xd@@ 5a, inc@@ _r8, lea_rax_[r@@ 8-1], mov_r15_rdx, test_r8_r8, je_0xfffffffffffffe@@ 83, cmp_rdx_rsi, je_0xfffffffffffffe@@ 7a, inc_r15, cmp_byte_ptr_[r@@ 15@@ -1]_0xa, jne_0xfffffffffffffff@@ 8, cmp_r15@@ _rsi, setne@@ _r10b, test_rax_rax, setne@@ _r8b, dec_rax, test_r10b@@ _r8b, jne_0xffffffffffffffe2, mov_rax_r15, sub_rax_rdx, add_r13_rax, jmp_0xfffffffffffffe@@ 43, mov_r13@@ _qword_ptr_[rsp+0x38], mov_rcx_r12, mov_rbx_r14, mov_r12@@ _qword_ptr_[rsp+0x30], mov_r14@@ _qword_ptr_[rsp+0x40], mov_rsi_r13, mov_r9_qword_ptr_[rsp+0x28], mov_r11_qword_ptr_[r@@ ip+0x2@@ c@@ 85@@ c], mov_rbp_rdi, mov_rdx_r15, sub_rsi@@ _qword_ptr_[r@@ 14+0x@@ 210], test_r12_r12, je_0xb@@ cc, cmp_rcx@@ _r11, mov_r12@@ _r11, cmovle@@ _r12@@ _rcx, mov_edi_0x20, cmp_rcx@@ _9, jle_0x@@ 15, mov_rax_qword_ptr_[rsp+0x20], mov_rdi_rdx, sub_rax@@ _r9, xor_edx_edx, div@@ _rdi, mov_rdi_rax, mov_rax_qword_ptr_[rsp+0x18], xor_edx_edx, sub_rax_r13, div@@ _rdi, mov_qword_ptr_[rsp+0x28]_rcx, mov_qword_ptr_[rsp+0x20]_r9, mov_r15d_1, movabs@@ _r10@@ _0x7@@ 87@@ 87@@ 87@@ 87@@ 87@@ 87@@ 82, test_rax_rax, cmove_rax@@ _r15, cmp_rax@@ _r10, cmova@@ _rax@@ _r10, add_rax@@ _5, cmp_rax@@ _r11, cmovle@@ _r11@@ _rax, mov_rax_rsi, xor_edx_edx, div@@ _rdi, test_rax_rax, cmovne@@ _r15@@ _rax, movabs_rax@@ _0xffffffffffffff@@ e, cmp_r15@@ _r10, cmova@@ _r15@@ _r10, lea_r13_[r@@ 12+r@@ 15+@@ 5], add_r13@@ _r11, cmp_r12@@ _r13, setg@@ _sil, cmp_r13_rax, seta_al, or@@ _sil@@ _al, mov_byte_ptr_[rsp+0x@@ 9a@@ ]_sil, jne_0x@@ cc@@ e, lea_rdi_[r@@ 13*8], call_0x9d@@ 00, mov_rcx_qword_ptr_[rsp+0x28], mov_r9_qword_ptr_[rsp+0x20], cmp_r12@@ _rcx, je_0xc@@ 1e, test_r12_r12, jle_0x@@ 7c, mov_rdx_rcx, sub_rdx@@ _qword_ptr_[rip+0x2@@ c@@ 76@@ 9], mov_rsi_rdx, neg@@ _rsi, mov_r8_qword_ptr_[rsp+8], lea_r10_[r@@ 12@@ +rdx], lea_rdi_[rax+r@@ si*8], mov_rsi_rdx, and_rsi@@ _r8, mov_rsi_qword_ptr_[r@@ bp+r@@ si*8], mov_qword_ptr_[rdi@@ +rdx*@@ 8]_rsi, inc_rdx, cmp_r10@@ _rdx, jne_0xffffffffffffffeb, xor_edx_edx, mov_rsi_qword_ptr_[r@@ ax+rdx*8], mov_qword_ptr_[rbp@@ +rdx*@@ 8]_rsi, inc_rdx, cmp_r12@@ _rdx, jne_0xfffffffffffffff1, mov_rdi_qword_ptr_[rsp+0x10], xor_esi_esi, mov_rdx_qword_ptr_[r@@ bp+r@@ si*8], sub_rdx@@ _r9, add_rdx@@ _rdi, mov_qword_ptr_[rax+r@@ si*@@ 8]_rdx, inc@@ _rsi, cmp_r12@@ _rsi, jg_0xffffffffffffff@@ eb, lea_rdx_[r@@ 12*8], add_rax_rdx, mov_qword_ptr_[r14+0x1@@ e8]_rax, mov_rax_r12, neg_rax, sub_rbx@@ _r12, sub_r13@@ _r12, mov_qword_ptr_[r14+0x1@@ f0]_rax, mov_qword_ptr_[r14+0x@@ c0]_rax, add_rbp@@ _rdx, lea_rdi_[r@@ bx+r@@ 13+1], movabs_rax_0x3@@ ffffffffffff@@ fe, mov_qword_ptr_[r14+0x@@ b@@ 8]_rbp, mov_qword_ptr_[r14+0x@@ d@@ 8]_rbx, mov_qword_ptr_[r14+0x@@ 20@@ 8]_r13, mov_qword_ptr_[r14+0x@@ 21@@ 8]_rcx, mov_qword_ptr_[r14+0x@@ e@@ 8]_rcx, mov_qword_ptr_[rip+0x2@@ a@@ 2c@@ 1]@@ _rdi, cmp_rdi_rax, ja_0x@@ bb@@ e, shl_rdi@@ _5, call_0x9b@@ f4, mov_rcx_qword_ptr_[rip+0x2@@ a@@ 2a8], mov_qword_ptr_[rip+0x2@@ a@@ 2b@@ 1]_rax, movabs_rdx@@ _0x5@@ 5555@@ 5555@@ 5555@@ 556, mov_rax_rcx, imul_rdx, sar_rcx@@ _0x3f, mov_qword_ptr_[rip+0x2@@ a@@ 28@@ a]_1, sub_rdx_rcx, cmp_rdx@@ _0x200, ja_0xa@@ f8, mov_qword_ptr_[rip+0x2@@ a@@ 27@@ f]@@ _0x1@@ fd, mov_edi@@ _0xff@@ 0, call_0x38@@ a2, add_rax_8, mov_qword_ptr_[rip+0x2@@ a@@ 27@@ 2]_rax, lea_r15_[r@@ 14+0x@@ a0], lea_rax_[r@@ 14+0x@@ 300], mov_qword_ptr_[rsp+0xa0]_rax, mov_qword_ptr_[rsp+0x5@@ 8]_r15, mov_qword_ptr_[rsp+0xa@@ 8]_r14, mov_r15@@ _qword_ptr_[rsp+0x58], mov_rax_qword_ptr_[r15+0x18], mov_r14_qword_ptr_[r@@ 15+0x20], mov_qword_ptr_[rsp+0x10]_rax, mov_rax_qword_ptr_[r15+0x@@ 38], mov_qword_ptr_[rsp+0x7@@ 0]_r14, lea_rdi_[rax@@ *8], mov_qword_ptr_[rsp+0x38]_rax, mov_rbx_qword_ptr_[r@@ 15+0x40], call_0x9b@@ 43, mov_qword_ptr_[rsp+0x40]_rax, mov_rax_qword_ptr_[rip+0x2a@@ 20@@ 2], mov_edx_dword_ptr_[rip+0x2@@ c5@@ 14], mov_qword_ptr_[rsp+0x18]_rax, mov_rax_qword_ptr_[rip+0x2a@@ 1e8], movzx_edi_byte_ptr_[r@@ ip+0x2@@ c@@ 58@@ e], mov_qword_ptr_[rsp+0x48]_rax, mov_rax_qword_ptr_[rip+0x2a@@ 1c@@ d], mov_rcx_qword_ptr_[r@@ 15+0x@@ 50], mov_qword_ptr_[rsp+0x50]_rax, mov_rax_qword_ptr_[r15+0x10], mov_qword_ptr_[rsp+0x9@@ 0]_rcx, add_rax_qword_ptr_[r@@ 15], test_edx_edx, mov_qword_ptr_[rsp+0x60]_rax, setne_al, or_eax@@ _edi, mov_byte_ptr_[rsp+0x@@ 9b@@ ]_al, lea_rax_[r@@ 14*8], mov_qword_ptr_[rsp+0x68]_rax, neg_rax, mov_byte_ptr_[rsp+0x@@ 30@@ ]_dil, mov_dword_ptr_[rsp+8]_edx, mov_qword_ptr_[rsp+0x78]_rax, cmp_rbx@@ _rcx, jae_0x@@ a@@ 89, xor_ebp_ebp, and_edx_1, mov_dword_ptr_[rsp+0x9@@ c]_edx, mov_qword_ptr_[rsp+0x20]@@ _rbp, movzx_r14d@@ _byte_ptr_[rbx], mov_eax_dword_ptr_[rsp+8], lea_r12_[r@@ bx+1], movzx_r13d@@ _r14b, cmp_eax_4, je_0x4@@ fd, ja_0x4@@ 97, dec_eax, cmp_eax_2, ja_0x3@@ fc, cmp_r14b@@ _0xa, je_0x3@@ e2, mov_r13_qword_ptr_[rip+0x2@@ c@@ 47@@ d], mov_eax_dword_ptr_[rsp+8], xor_ebp_ebp, and_eax_2, mov_qword_ptr_[rsp+0x8@@ 0]_r13, mov_dword_ptr_[rsp+0x28]_eax, mov_rax_rbp, xor_r15d_r15d, mov_rbp_r12, mov_r12_rax, mov_ecx_dword_ptr_[rsp+0x28], test_ecx_ecx, je_0x19, call_0xffffffffffff8b@@ a8, mov_rdx_qword_ptr_[rax], movzx_eax@@ _r14b, test_byte_ptr_[rdx@@ +rax*2+1]_0x20, jne_0x5@@ 37, mov_edx_dword_ptr_[rsp+0x@@ 9c], test_edx_edx, je_0x3@@ 78, cmp_r14b@@ _9, je_0x3@@ 26, cmp_r14b@@ _0xd, je_0x3@@ 04, cmp_r14b@@ _8, je_0x3@@ 42, inc_r15, mov_r13d_1, cmp_byte_ptr_[rsp+0x@@ 30]_0, je_0x13, call_0xffffffffffff8b@@ 41, mov_rax_qword_ptr_[rax], movzx_r14d_byte_ptr_[r@@ ax+r@@ 14*4], rol@@ _r12@@ _7, add_r12@@ _r14, dec@@ _r13, jne_0xfffffffffffffff6, movzx_r14d_byte_ptr_[r@@ bp], inc_rbp, cmp_r14b@@ _0xa, jne_0xffffffffffffff@@ 78, mov_rax_r12, mov_r12_rbp, mov_r15_r12, sub_r15@@ _rbx, mov_rbp_rax, dec@@ _r15, mov_rax_rbp, xor_edx_edx, div@@ _qword_ptr_[rip+0x2@@ a0@@ 6c], mov_rsi_qword_ptr_[rip+0x2@@ a0@@ 6d], lea_r13_[r@@ si@@ +rdx*8], cmp_qword_ptr_[rsp+0x@@ 6@@ 0]_r12, je_0x2@@ 04, mov_r10_qword_ptr_[r@@ 13], mov_qword_ptr_[rsp+0x28]_r10, test_r10_r10, je_0x113, mov_qword_ptr_[rsp+0x8@@ 0]_r13, mov_r13_r12, mov_r12_r15, mov_r15@@ _r10, jmp_0x1c, mov_rax_qword_ptr_[r14], mov_qword_ptr_[rsp+0x28]_rax, test_rax_rax, je_0xd5, mov_r14_qword_ptr_[rsp+0x28], shl_r14@@ _5, add_r14@@ _qword_ptr_[rsp+0x18], cmp_rbp@@ _qword_ptr_[r@@ 14+8], jne_0xffffffffffffffdd, mov_rdi_qword_ptr_[r14+0x10], cmp_qword_ptr_[r@@ 14+0x1@@ 8]_r12, je_0x73, mov_eax_dword_ptr_[rsp+8], test_eax_eax, je_0xffffffffffffffcb, mov_rsi_rbx, call_0x2@@ 6b@@ 6, test_al_al, jne_0xffffffffffffffbf, mov_rcx_qword_ptr_[rsp+0x38], mov_r12_r13, cmp_qword_ptr_[rsp+0x@@ 20]_rcx, je_0xf3, mov_rax_qword_ptr_[rsp+0x20], mov_rdx_qword_ptr_[rsp+0x10], mov_rdi_qword_ptr_[rsp+0x40], mov_rcx_qword_ptr_[rsp+0x28], mov_qword_ptr_[rdx@@ +rax*@@ 8]_rbx, mov_qword_ptr_[rdi@@ +rax*@@ 8]_rcx, inc_rax, mov_qword_ptr_[rsp+0x20]_rax, cmp_qword_ptr_[rsp+0x@@ 9@@ 0]_r12, jbe_0x@@ 40@@ c, mov_rbx_r12, jmp_0xfffffffffffffe@@ 1b, mov_rdx_r12, mov_rsi_rbx, mov_qword_ptr_[rsp+0x8@@ 8]_rdi, call_0xffffffffffff86@@ a2, test_eax_eax, je_0xffffffffffffff@@ 8e, cmp_byte_ptr_[rsp+0x@@ 9b@@ ]_0, mov_rdi_qword_ptr_[rsp+0x88], jne_0xffffffffffffff@@ 70, mov_rax_qword_ptr_[r14], mov_qword_ptr_[rsp+0x28]_rax, test_rax_rax, jne_0xffffffffffffff@@ 39, mov_r10@@ _r15, mov_r15_r12, mov_r12_r13, mov_r13@@ _qword_ptr_[rsp+0x80], mov_rax_qword_ptr_[rsp+0x48], lea_r14@@ _[rax+1], cmp_qword_ptr_[rsp+0x@@ 50]_rax, je_0x111, mov_rcx_qword_ptr_[rsp+0x48], mov_qword_ptr_[rsp+0x4@@ 8]_r14, mov_rax_rcx, shl_rax_5, add_rax_qword_ptr_[r@@ sp+0x18], mov_qword_ptr_[rax]@@ _r10, mov_qword_ptr_[rax+@@ 8]_rbp, mov_qword_ptr_[rax+0x1@@ 0]_rbx, mov_qword_ptr_[rax+0x1@@ 8]_r15, mov_qword_ptr_[rsp+0x28]_rcx, mov_qword_ptr_[r13@@ ]_rcx, mov_rcx_qword_ptr_[rsp+0x38], cmp_qword_ptr_[rsp+0x@@ 20]_rcx, jne_0xffffffffffffff@@ 23, mov_rax_qword_ptr_[rsp+0x20], movabs_rcx@@ _0x2@@ aaaa@@ aaaa@@ aaaaaa@@ 9, cmp_rax_rcx, jg@@ _0x7@@ bb, mov_r15@@ _qword_ptr_[rsp+0x70], lea_r14@@ _[rax@@ +rax], sub_r14@@ _r15, movabs@@ _rdi@@ _0xffffffffffffff@@ e, cmp_r14@@ _rdi, ja_0x7@@ 9c, sub_rax@@ _r15, cmp_rax_rdi, ja_0x7@@ 90, mov_rdi_qword_ptr_[rsp+0x40], lea_rsi_[r@@ 14*8], call_0x98@@ 1d, mov_rdi_qword_ptr_[rsp+0x10], mov_rsi_r14, sub_rsi@@ _r15, add_rdi@@ _qword_ptr_[rsp+0x68], shl_rsi_3, mov_qword_ptr_[rsp+0x40]_rax, call_0x97@@ ff, add_rax@@ _qword_ptr_[rsp+0x78], mov_qword_ptr_[rsp+0x10]_rax, mov_qword_ptr_[rsp+0x3@@ 8]_r14, jmp_0xfffffffffffffe@@ 9b, mov_rax_qword_ptr_[rsp+0x58], cmp_byte_ptr_[rax+0x@@ 80]_0, je_0xfffffffffffffd@@ f6, mov_eax_dword_ptr_[rip+0x2@@ c@@ 1d8], sub_eax@@ _4, cmp_eax_1, jbe_0xfffffffffffffd@@ e4, cmp_dword_ptr_[rsp+@@ 8]_1, setbe@@ _dl, lea_rax_[r@@ si-8], test_dl_dl, cmovne@@ _r13_rax, jmp_0xfffffffffffffd@@ cc, mov_rax_qword_ptr_[rsp+0x50], movabs_rcx@@ _0x1@@ ffffffffffff@@ fe, cmp_rax_rcx, ja_0x6@@ ee, add_rax_rax, mov_rsi_rax, mov_rdi_qword_ptr_[rsp+0x18], shl_rsi@@ _5, mov_qword_ptr_[rsp+0x50]_rax, call_0x97@@ 74, mov_qword_ptr_[rsp+0x18]_rax, mov_r10_qword_ptr_[r@@ 13], jmp_0xfffffffffffffe@@ bb, mov_r14d@@ _0xd, mov_r13d_1, xor_r15d_r15d, jmp_0xfffffffffffffd@@ 09, mov_rcx_qword_ptr_[rsp+0x@@ 80], mov_rax_r15, xor_edx_edx, div_rcx, mov_eax_0, mov_r14d@@ _0x20, sub_rcx_rdx, add_r15@@ _rcx, cmovb@@ _r15@@ _rax, mov_r13_rcx, jmp_0xfffffffffffffc@@ d8, xor_eax_eax, test_r15_r15, setne_al, sub_r15@@ _rax, mov_r14d@@ _8, mov_r13d_1, jmp_0xfffffffffffffc@@ b2, xor_r15d_r15d, xor_ebp_ebp, jmp_0xfffffffffffffc@@ eb, cmp_byte_ptr_[rsp+0x@@ 30]_0, jne_0x43, xor_ebp_ebp, xor_r15d_r15d, cmp_r14b@@ _0xa, je_0xfffffffffffffc@@ d0, rol@@ _rbp@@ _7, inc_r12, add_rbp@@ _r13, movzx_r13d_byte_ptr_[r@@ 12-1], cmp_r13b@@ _0xa, jne_0xffffffffffffffec, mov_r15_r12, sub_r15@@ _rbx, dec@@ _r15, jmp_0xfffffffffffffc@@ a1, cmp_r14b@@ _0xa, je_0xffffffffffffff@@ a4, call_0xffffffffffff87@@ 92, mov_rax_qword_ptr_[rax], xor_ebp_ebp, inc_r12, movsxd_rdx_dword_ptr_[r@@ ax+r@@ 13*4], movzx_r13d_byte_ptr_[r@@ 12-1], rol@@ _rbp@@ _7, add_rbp@@ _rdx, cmp_r13b@@ _0xa, jne_0xffffffffffffffe8, mov_r15_r12, sub_r15@@ _rbx, dec@@ _r15, jmp_0xfffffffffffffc@@ 5d, cmp_dword_ptr_[rsp+@@ 8]_5, jne_0xffffffffffffff@@ 6b, cmp_r14b@@ _0xa, je_0xffffffffffffff@@ 51, call_0xffffffffffff87@@ 4b, mov_r14_qword_ptr_[rax], xor_ebp_ebp, test_byte_ptr_[r@@ 14+r@@ 13*@@ 2+1]_0x20, jne_0x1c, cmp_byte_ptr_[rsp+0x@@ 30]_0, je_0xe, call_0xffffffffffff87@@ 21, mov_rax_qword_ptr_[rax], movsxd_r13@@ _dword_ptr_[r@@ ax+r@@ 13*4], rol@@ _rbp@@ _7, add_rbp@@ _r13, movzx_r13d_byte_ptr_[r@@ 12], inc_r12, cmp_r13b@@ _0xa, jne_0xffffffffffffffd2, mov_r15_r12, sub_r15@@ _rbx, dec@@ _r15, jmp_0xfffffffffffffb@@ f7, cmp_r14b@@ _0xa, je_0xfffffffffffffe@@ fc, call_0xffffffffffff86@@ f6, mov_r15_qword_ptr_[rax], xor_ebp_ebp, jmp_0x37, cmp_byte_ptr_[rsp+0x@@ 30]_0, je_0xe, call_0xffffffffffff8@@ 6c@@ 9, mov_rax_qword_ptr_[rax], movsxd_r13@@ _dword_ptr_[r@@ ax+r@@ 13*4], rol@@ _rbp@@ _7, add_rbp@@ _r13, movzx_r13d_byte_ptr_[r@@ 14], inc_r12, cmp_r13b@@ _0xa, je_0xffffffffffffff@@ 01, mov_r14_r12, test_byte_ptr_[r@@ 15+r@@ 13*@@ 2+1]_0x20, je_0xffffffffffffffcc, movzx_r13d_byte_ptr_[r@@ 12], inc_r12, cmp_r13b@@ _0xa, je_0xfffffffffffffe@@ e4, test_byte_ptr_[r@@ 15+r@@ 13*@@ 2+1]_0x20, je_0x1c, movzx_r13d_byte_ptr_[r@@ 12], inc_r12, cmp_r13b@@ _0xa, je_0xfffffffffffffe@@ ca, test_byte_ptr_[r@@ 15+r@@ 13*@@ 2+1]_0x20, jne_0xffffffffffffffe8, rol@@ _rbp@@ _7, add_rbp@@ _0x20, mov_r14_r12, jmp_0xffffffffffffff8b, mov_r9_rbp, jmp_0x10, test_byte_ptr_[rdx@@ +rax*2+1]_0x20, je_0xfffffffffffffa@@ c2, movzx_eax_byte_ptr_[r@@ 9], inc@@ _r9, cmp_al_0xa, jne_0xffffffffffffffec, mov_r15_r9, sub_r15@@ _rbx, mov_rbp_r12, dec@@ _r15, mov_r12_r9, jmp_0xfffffffffffffb@@ 23, mov_r15_r12, mov_rbp_rax, mov_rax_qword_ptr_[rsp+0x58], xor_r12d_r12d, mov_qword_ptr_[rax+0x@@ 28]@@ _rbp, mov_rbx_qword_ptr_[rsp+0x@@ 70], mov_rax_qword_ptr_[rsp+0x10], mov_rcx_qword_ptr_[rsp+0x38], mov_r14@@ _qword_ptr_[rsp+0x78], mov_r13_r12, jmp_0x3f, lea_rdx_[rax+r@@ bp*8], mov_qword_ptr_[rdx@@ ]_r15, cmp_qword_ptr_[rsp+0x@@ 60]@@ _r15, je_0x99, cmp_qword_ptr_[rip+0x2@@ be@@ ff@@ ]_r13, jg@@ _0xf, cmp_byte_ptr_[rip+0x2@@ b@@ ed@@ a]_0, jne_0x2@@ 66, inc_rbp, inc_r15, cmp_byte_ptr_[r@@ 15@@ -1]_0xa, jne_0xfffffffffffffff@@ 8, inc@@ _r13, cmp_rcx@@ _rbp, jne_0xffffffffffffffc5, movabs_rdx@@ _0x2@@ aaaa@@ aaaa@@ aaaaaa@@ 9, cmp_rcx_rdx, jg_0x3@@ fe, lea_r12_[r@@ cx@@ +rcx], sub_r12@@ _rbx, movabs_rsi@@ _0xffffffffffffff@@ e, cmp_r12@@ _rsi, ja_0x3@@ e4, sub_rcx@@ _rbx, cmp_rcx_rsi, ja_0x3@@ d8, mov_rdi_qword_ptr_[rsp+0x68], mov_rsi_r12, sub_rsi@@ _rbx, add_rdi_rax, shl_rsi_3, call_0x94@@ 60, add_rax_r14, lea_rdx_[rax+r@@ bp*8], mov_qword_ptr_[rdx@@ ]_r15, mov_rcx_r12, cmp_qword_ptr_[rsp+0x@@ 60]@@ _r15, jne_0xffffffffffffff@@ 73, mov_qword_ptr_[rsp+0x10]_rax, mov_rax_qword_ptr_[rsp+0x58], mov_qword_ptr_[rsp+0x38]_rcx, cmp_byte_ptr_[rax+0x@@ 80]_0, je_0x1d, mov_eax_dword_ptr_[rip+0x2@@ be@@ 35], sub_eax@@ _4, cmp_eax_1, jbe_0x@@ f, mov_rax_qword_ptr_[rsp+0x60], dec_rax, mov_qword_ptr_[rdx]_rax, mov_rax_qword_ptr_[rsp+0x58], mov_rsi_qword_ptr_[rsp+0x10], mov_rdx_qword_ptr_[rsp+0x40], mov_rcx_qword_ptr_[rsp+0x38], mov_qword_ptr_[rax+0x1@@ 8]_rsi, mov_qword_ptr_[rax+0x5@@ 8]_rdx, mov_rdi_qword_ptr_[rsp+0x18], mov_rsi_qword_ptr_[rsp+0x50], mov_rdx_qword_ptr_[rsp+0x48], mov_qword_ptr_[rax+0x@@ 30]@@ _rbp, mov_qword_ptr_[rax+0x3@@ 8]_rcx, add_rax_0x1@@ 30, mov_qword_ptr_[rip+0x2@@ 9a@@ 4@@ 0]_rdi, mov_qword_ptr_[rip+0x2@@ 9a@@ 29@@ ]_rsi, mov_qword_ptr_[rip+0x2@@ 9a@@ 2a@@ ]_rdx, mov_qword_ptr_[rsp+0x58]_rax, cmp_qword_ptr_[rsp+0x@@ a0]_rax, jne_0xfffffffffffff7@@ e6, mov_r14@@ _qword_ptr_[rsp+0x@@ a8], mov_qword_ptr_[r14+0x@@ 25@@ 8]_rdx, mov_qword_ptr_[r14+0x1@@ 28]_rdx, call_0xffffffffffff7e@@ 59, mov_rax_qword_ptr_[rip+0x2@@ 9a@@ 0d], lea_rdi_[rax@@ -8], call_0xffffffffffff7e@@ 49, jmp_0xfffffffffffff@@ 24@@ 9, lea_rbp_[r@@ 14+0x1@@ 30], mov_rdi_rbp, call_0xffffffffffffe@@ ec@@ e, mov_rdi_rbp, call_0xffffffffffffed@@ 86, mov_rax_qword_ptr_[r14+0x1@@ d0], mov_r9_qword_ptr_[r@@ 14+0x@@ a0], mov_qword_ptr_[rsp+0x10]_rax, mov_rdi_qword_ptr_[r14+0x@@ b0], mov_r11_qword_ptr_[r@@ 14+0x1@@ e0], cmp_r9@@ _rax, je_0xfffffffffffff@@ 29@@ c, mov_rax_qword_ptr_[rsp+0x10], lea_rsi_[r@@ 9+r@@ di], lea_rcx_[rax@@ +r@@ 11], mov_qword_ptr_[rsp+0x18]_rcx, cmp_rdi@@ _r11, jb_0x@@ e2, movzx_eax_byte_ptr_[r@@ 9+r@@ 11], mov_rcx_qword_ptr_[rsp+0x18], not_eax, mov_byte_ptr_[rcx@@ ]_al, mov_rax_qword_ptr_[rsp+0x10], mov_rcx_qword_ptr_[r@@ 9], cmp_qword_ptr_[rax]@@ _rcx, jne_0x2@@ 53, mov_rcx_r9, mov_rdx_qword_ptr_[rax+8], add_rcx_8, add_rax_8, cmp_qword_ptr_[rcx@@ ]_rdx, je_0xfffffffffffffff1, movzx_edx_byte_ptr_[r@@ cx], cmp_byte_ptr_[rax]@@ _dl, jne_0x18, movzx_edx_byte_ptr_[rax+1], inc_rcx, inc_rax, cmp_byte_ptr_[rcx@@ ]_dl, je_0xfffffffffffffff4, mov_edx_dword_ptr_[rip+0x2@@ b@@ cc@@ c], lea_ebx@@ _[rdx@@ -4], cmp_ebx_1, jbe_0xfffffffffffff@@ 23@@ 3, movzx_edx_byte_ptr_[r@@ 14+0x1@@ 20], mov_r8_rdi, sub_r8@@ _rdx, mov_rdx_r8, add_rdx@@ _r9, cmp_rcx_rdx, movzx_edx_byte_ptr_[r@@ 14+0x@@ 250], mov_r10@@ _r11, seta@@ _r8b, sub_r10@@ _rdx, mov_rdx_qword_ptr_[rsp+0x10], add_rdx@@ _r10, cmp_rax_rdx, seta_dl, cmp_r8b@@ _dl, je_0xfffffffffffff@@ 1f@@ 3, dec@@ _rcx, dec_rax, jmp_0xfffffffffffff@@ 1e@@ 7, mov_qword_ptr_[rsp+0x10]_rax, mov_qword_ptr_[rsp+0x38]_rcx, jmp_0xfffffffffffffe@@ 46, mov_r12_rcx, jmp_0xfffffffffffff@@ 44@@ 1, movzx_eax_byte_ptr_[r@@ ax+r@@ di], mov_byte_ptr_[rsp+@@ 8]_al, not_eax, mov_byte_ptr_[rsi@@ ]_al, jmp_0xffffffffffffff26, mov_rax_qword_ptr_[r14+0x@@ 210], cmp_r13_rax, jne_0xfffffffffffff@@ 29@@ 4, mov_rsi_r13, mov_r11_qword_ptr_[r@@ ip+0x2@@ bc@@ 3e], sub_rsi_rax, test_r12_r12, je_0x1@@ 80, test_r11_r11, mov_ecx_0, cmovle@@ _rcx@@ _r11, mov_edi_0x20, mov_r12_rcx, xor_ecx_ecx, jmp_0xfffffffffffff@@ 3f@@ e, mov_rax_qword_ptr_[rip+0x2b@@ c0@@ 9], movabs_rdx@@ _0x1@@ ffffffff@@ ffffffe, cmp_rax_rdx, jg_0xfffffffffffff@@ 1d@@ d, cmp_rax_rdi, jae_0xffffffffffff@@ f@@ 1d@@ 4, mov_rdx_r15, sub_rdx_rcx, mov_edi_1, shr_rdx@@ _5, cmove_rdx@@ _rdi, movabs_rcx@@ _0x7@@ 87@@ 87@@ 87@@ 87@@ 87@@ 87@@ 82, cmp_rdx_rcx, cmova@@ _rdx_rcx, sub_rsi@@ _r15, shr_rsi@@ _5, cmove_rsi@@ _rdi, mov_qword_ptr_[rsp+8]_0, cmp_rsi_rcx, cmova@@ _rsi@@ _rcx, lea_rbx_[rdx@@ +5], add_rsi@@ _5, mov_r12d_1, test_rax_rax, jg_0xa@@ 5, add_rbx@@ _r12, cmp_rax_rsi, cmovle@@ _rsi_rax, add_rbx@@ _rsi, mov_rdi_rbx, jmp_0xfffffffffffff@@ 19@@ 9, cmp_r13@@ _qword_ptr_[rsp+0x10], je_0xfffffffffffff@@ 2a@@ a, xor_eax_eax, cmp_byte_ptr_[r@@ 13@@ -1]_0xa, setne_al, add_r8@@ _rax, jmp_0xfffffffffffff@@ 29@@ 7, test_r12_r12, jne_0xfffffffffffff@@ 4@@ 3e, jmp_0xfffffffffffff@@ 45@@ e, mov_ecx_9, mov_esi_1, inc@@ _ecx, mov_rax_rsi, shl_rax_cl, cmp_rax_rdx, jb@@ _0xfffffffffffffff@@ 5, movsxd_rcx_ecx, lea_rdx_[rip+0x@@ 1f@@ 67@@ f], movzx_edx_byte_ptr_[r@@ dx@@ +rcx], sub_rax_rdx, movabs_rdx@@ _0xffffffffffffff@@ e, mov_qword_ptr_[rip+0x2@@ 97@@ 5f@@ ]_rax, cmp_rax_rdx, ja_0x4@@ 4, lea_rdi_[rax@@ *8+8], jmp_0xfffffffffffff@@ 4d@@ 8, mov_rdx_rax, jmp_0xfffffffffffff@@ 2@@ 16, add_r12@@ _r12, cmp_rax_r12, jge_0xffffffffffff@@ fff@@ a, lea_rcx_[r@@ 12-1], mov_qword_ptr_[rsp+8]_rcx, jmp_0xffffffffffffff4f, mov_rax_qword_ptr_[rsp+0x10], mov_rcx_r9, jmp_0xfffffffffffffd@@ c9, call_0x9@@ 2b0, mov_r15_rbx, xor_ebp_ebp, jmp_0xfffffffffffffb@@ 81, xor_ecx_ecx, mov_edi_0x20, jmp_0xfffffffffffff@@ 29@@ 3, mov_rax_qword_ptr_[r14+0x@@ 210], jmp_0xfffffffffffffe@@ 5@@ d
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x38, lea_rcx_[rsp+0x18], lea_rdx_[rsp+0x10], lea_rsi_[rsp+8], lea_r8_[rsp+0x@@ 20], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0x28@@ 9e, test_eax_eax, jne_0x27, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ 71, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_r12d_eax, call_0x1@@ 98@@ d, mov_edi_4, call_0x2@@ 22@@ 3, mov_rdx_qword_ptr_[rsp+8], mov_rcx_qword_ptr_[rsp+0x10], lea_rsi_[rip+0x2b@@ aa@@ d], mov_edi@@ _0x2c, call_0x27@@ e8, mov_rdi_qword_ptr_[rip+0x2@@ b9@@ 34], mov_eax_r12d, lea_rdx_[rip+0x@@ 1f@@ 90@@ 2], movzx_esi_byte_ptr_[r@@ dx+rax], mov_rax_qword_ptr_[rdi+0x28], cmp_rax_qword_ptr_[r@@ di+0x30], jae_0x@@ 20@@ 6, lea_rdx_[rax+1], mov_qword_ptr_[rdi+0x@@ 28]_rdx, mov_byte_ptr_[rax@@ ]_sil, mov_rcx_qword_ptr_[rsp+0x20], mov_rdx_qword_ptr_[rsp+0x18], lea_rsi_[rip+0x2@@ bb@@ 94], mov_edi@@ _0x2c, call_0x27@@ 9f, mov_edi_3, call_0x2@@ 1b@@ 5, mov_rdi_qword_ptr_[rip+0x2@@ b@@ 8e@@ 1], mov_rax_qword_ptr_[rdi+0x28], cmp_rax_qword_ptr_[r@@ di+0x30], jae_0x@@ 1b1, lea_rdx_[rax+1], mov_qword_ptr_[rdi+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0xa, test_r12b@@ _1, je_0xa4, mov_rbp_qword_ptr_[rsp+8], cmp_rbp@@ _qword_ptr_[rsp+0x10], jg_0x@@ 94, lea_rbx_[r@@ bp*8], lea_r13_[rip+0x@@ 1d@@ 3@@ fd], jmp_0x11, inc_rbp, cmp_qword_ptr_[rsp+0x1@@ 0]_rbp, jl@@ _0x70, mov_edi_2, call_0x2@@ 151, mov_rsi_qword_ptr_[rip+0x2@@ ba@@ 9d], mov_edx_1, add_rsi@@ _rbx, mov_rdi_r13, call_0x2@@ 54@@ a, mov_edi_3, call_0x2@@ 130, mov_rax_qword_ptr_[rip+0x2@@ ba@@ 7c], add_rbx_8, mov_rax_qword_ptr_[rax+r@@ bx], cmp_byte_ptr_[rax@@ -1]_0xa, jne_0xffffffffffffffb8, mov_rdi_qword_ptr_[rip+0x2@@ b@@ 84@@ 7], mov_rax_qword_ptr_[rdi+0x28], cmp_rax_qword_ptr_[r@@ di+0x30], jae_0x@@ ef, lea_rdx_[rax+1], mov_qword_ptr_[rdi+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0xa, inc_rbp, cmp_qword_ptr_[rsp+0x1@@ 0]_rbp, jge_0xffffffffffffff@@ 98, cmp_r12d@@ _3, je_0xa4, and_r12d@@ _2, je_0xfffffffffffffe@@ 85, mov_rbp_qword_ptr_[rsp+0x18], cmp_rbp@@ _qword_ptr_[rsp+0x20], jg_0xfffffffffffffe@@ 75, lea_rbx_[r@@ bp*8], lea_r12_[rip+0x@@ 1d@@ 34@@ e], jmp_0x13, inc_rbp, cmp_qword_ptr_[rsp+0x@@ 20]@@ _rbp, jl_0xffffffffffff@@ fe@@ 53, mov_edi_1, call_0x20@@ 9d, mov_rsi_qword_ptr_[rip+0x2@@ bb@@ 19], mov_edx_1, add_rsi@@ _rbx, mov_rdi_r12, call_0x24@@ 96, mov_edi_3, call_0x20@@ 7c, mov_rax_qword_ptr_[rip+0x2@@ ba@@ f8], add_rbx_8, mov_rax_qword_ptr_[rax+r@@ bx], cmp_byte_ptr_[rax@@ -1]_0xa, jne_0xffffffffffffffb4, mov_rdi_qword_ptr_[rip+0x2@@ b@@ 79@@ 3], mov_rax_qword_ptr_[rdi+0x28], cmp_rax_qword_ptr_[r@@ di+0x30], jae_0x@@ 53, lea_rdx_[rax+1], mov_qword_ptr_[rdi+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0xa, jmp_0xffffffffffffff96, mov_rcx_qword_ptr_[rip+0x2@@ b@@ 77@@ 1], mov_edx_4, mov_esi_1, lea_rdi_[rip+0x@@ 1f@@ 3c8], call_0xffffffffffff7d@@ 18, jmp_0xffffffffffffff4f, mov_esi_0xa, call_0xffffffffffff7a@@ c3, jmp_0xfffffffffffffea@@ e, mov_esi_0xa, call_0xffffffffffff7@@ aa@@ b, jmp_0xffffffffffffff46, mov_esi_0xa, call_0xffffffffffff7a@@ 9b, jmp_0xfffffffffffffe@@ 56, call_0xffffffffffff7a@@ 90, jmp_0xfffffffffffffe@@ 06, call_0xffffffffffff7a@@ 3@@ 6
endbr64, lea_rsi_[rip+0x1f@@ 45], lea_rdx_[rip-0x@@ 2d@@ 2], jmp_0x1@@ f5@@ e
push_r13, mov_r13_rdi, push_r12, mov_r12_rsi, push_rbp, push_rbx, sub_rsp_8, cmp_byte_ptr_[rip+0x2@@ b8@@ 1b@@ ]_0, mov_rbx_qword_ptr_[rip+0x2@@ b@@ 6c@@ a], jne_0x44, mov_rbp_qword_ptr_[rip+0x2@@ b7@@ 21], mov_rax_rdi, xor_edx_edx, div@@ _rbp, lea_rcx_[r@@ bp+r@@ di], mov_rax_rcx, sub_rax_rdx, cmp_rax_rsi, ja_0x2@@ 5, mov_r13_rax, mov_rax_qword_ptr_[rbx+0x28], cmp_rax_qword_ptr_[r@@ bx+0x30], jae_0x@@ 65, lea_rdx_[rax+1], mov_qword_ptr_[rbx+0x@@ 28]_rdx, mov_byte_ptr_[rax@@ ]_9, lea_rax_[rbp+r@@ 13], cmp_r12_rax, jae_0xffffffffffffff@@ e0, lea_rbp_[r@@ 13+1], cmp_r12@@ _r13, ja@@ _0xa, jmp_0x26, mov_rbp_rax, mov_rax_qword_ptr_[rbx+0x28], cmp_rax_qword_ptr_[r@@ bx+0x30], jae_0x@@ 25, lea_rdx_[rax+1], mov_qword_ptr_[rbx+0x@@ 28]_rdx, mov_byte_ptr_[rax]_0x20, lea_rax_[r@@ bp+1], cmp_r12_rbp, jne_0xffffffffffffffe1, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, mov_esi_0x20, mov_rdi_rbx, call_0xffffffffffff7@@ 9b8, jmp_0xffffffffffffffdb, mov_esi_9, mov_rdi_rbx, call_0xffffffffffff7@@ 9a8, jmp_0xffffffffffffff9@@ b
push_r15, xor_r15d_r15d, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x58, mov_qword_ptr_[rsp+0x10]_rsi, mov_qword_ptr_[rsp+8]_rdx, mov_rbp_qword_ptr_[rdi], mov_r11_qword_ptr_[r@@ di+8], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, mov_r14_qword_ptr_[rip+0x2@@ b@@ 5e@@ f], mov_qword_ptr_[rsp+0x40]_0, cmp_rbp@@ _r11, jae_0x@@ b4, xor_r12d_r12d, lea_r13_[rip+0x@@ 1f@@ 24@@ 3], movzx_ebx_byte_ptr_[r@@ bp], lea_r9_[r@@ bp+1], cmp_bl@@ _0x5f, jg_0x1@@ d, cmp_bl@@ _7, jle_0x@@ 23, lea_eax_[r@@ bx-8], cmp_al_0x5@@ 7, ja_0x1@@ c, movzx_eax_al, movsxd_rax_dword_ptr_[r@@ 13@@ +rax*4], add_rax_r13, jmp_rax, lea_eax_[r@@ bx-0x@@ 61], cmp_al@@ _0x1d, jbe_0x@@ f9, mov_rdx_r11, sub_rdx@@ _rbp, lea_rcx_[rsp+0x40], lea_rdi_[rsp+0x@@ 3c], mov_rsi_rbp, mov_qword_ptr_[rsp+0x20]_r9, mov_qword_ptr_[rsp+0x18]_r11, call_0x9@@ 118, mov_rdx_rax, lea_rax_[rax@@ -1], cmp_rax@@ _-@@ 4, mov_r11_qword_ptr_[rsp+0x18], mov_r9_qword_ptr_[rsp+0x20], jbe_0x@@ 18@@ e, mov_rbp_r9, cmp_qword_ptr_[rsp+@@ 8]_r12, jbe_0x@@ 20, mov_rax_qword_ptr_[r14+0x@@ 28], cmp_rax_qword_ptr_[r@@ 14+0x30], jae_0x@@ 24@@ 6, lea_rdx_[rax+1], mov_qword_ptr_[r14+0x@@ 28]_rdx, mov_byte_ptr_[rax@@ ]_bl, cmp_r11@@ _rbp, ja_0xffffffffffffff@@ 65, mov_rax_qword_ptr_[rsp+0x48], xor_rax_qword_ptr_fs:[0x28], jne_0x34@@ d, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_rax_r15, pop_r15, ret, lea_rdx_[r@@ 12+1], cmp_qword_ptr_[rsp+@@ 8]_r12, jbe_0x@@ 78, mov_rax_qword_ptr_[r14+0x@@ 28], cmp_rax_qword_ptr_[r@@ 14+0x30], jae_0x@@ 23@@ 9, lea_rcx_[rax+1], mov_qword_ptr_[r14+0x@@ 28]_rcx, mov_rbp_r9, mov_byte_ptr_[rax@@ ]_bl, mov_r15_rdx, mov_r12_rdx, jmp_0xffffffffffffff45, mov_rbp_r9, mov_r12_rdx, jmp_0xfffffffffffffe@@ ea, mov_edi_dword_ptr_[rsp+0x@@ 3c], mov_qword_ptr_[rsp+0x20]_rdx, call_0xffffffffffff7@@ 8f@@ 7, movsxd_rcx_eax, add_rcx@@ _r12, test_eax_eax, cmovg@@ _r12@@ _rcx, mov_r11_qword_ptr_[rsp+0x18], cmp_r12@@ _qword_ptr_[rsp+8], mov_rdx_qword_ptr_[rsp+0x20], ja@@ _0x2d, mov_rcx_qword_ptr_[rip+0x2@@ 8@@ ed@@ 6], mov_esi_1, mov_rdi_rbp, mov_qword_ptr_[rsp+0x20]_r11, mov_qword_ptr_[rsp+0x18]_rdx, call_0xffffffffffff7@@ 94@@ c, mov_r11_qword_ptr_[rsp+0x20], mov_rdx_qword_ptr_[rsp+0x18], mov_r15_r12, add_rbp@@ _rdx, jmp_0xfffffffffffffe@@ 47, movzx_esi@@ _bl, mov_rdi_r14, mov_qword_ptr_[rsp+0x18]_r11, call_0xffffffffffff7@@ 67@@ 5, mov_r11_qword_ptr_[rsp+0x18], jmp_0xfffffffffffffd@@ bb, movzx_esi@@ _bl, mov_rdi_r14, mov_qword_ptr_[rsp+0x28]_rdx, mov_qword_ptr_[rsp+0x20]_r9, mov_qword_ptr_[rsp+0x18]_r11, call_0xffffffffffff7@@ 5c0, mov_rdx_qword_ptr_[rsp+0x28], mov_r9_qword_ptr_[rsp+0x20], mov_r11_qword_ptr_[rsp+0x18], mov_rbp_r9, mov_r15_rdx, mov_r12_rdx, jmp_0xfffffffffffffc@@ f3, call_0xffffffffffff7@@ 4f@@ c
push_r15, push_r14, push_r13, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, push_rbx, mov_ebx_esi, sub_rsp_0x28, mov_rax_qword_ptr_[rip+0x2b@@ 15@@ b], mov_byte_ptr_[rsp+0x1@@ f@@ ]_sil, mov_qword_ptr_[rsp+8]_rax, mov_rax_qword_ptr_[rip+0x2b@@ 27@@ a], mov_r15_qword_ptr_[r@@ ip+0x2@@ b@@ 19@@ 3], mov_qword_ptr_[rsp+0x10]_rax, cmp_sil@@ _0x3c, je_0x1@@ 52, cmp_sil@@ _0x3e, je_0x1@@ a8, xor_r13d_r13d, test_rdi_rdi, je_0xac, mov_rax_qword_ptr_[rbp+8], mov_rdx_qword_ptr_[rsp+8], cmp_byte_ptr_[rax@@ -1]_0xa, sete@@ _r14b, mov_rdi_rbp, xor_esi_esi, call_0xfffffffffffffb@@ 30, mov_rbp_rax, cmp_bl@@ _0x20, jne_0x93, test_r12_r12, je_0x1a, mov_rax_qword_ptr_[r12+8], cmp_byte_ptr_[rax@@ -1]_0xa, sete_al, or@@ _r14d_eax, mov_rax_qword_ptr_[r12], cmp_byte_ptr_[rax]@@ _0xa, jne_0x3c, test_r14b_r14b, je_0x1b, mov_rax_qword_ptr_[r15+0x@@ 28], cmp_rax_qword_ptr_[r@@ 15+0x30], jae_0x@@ 15@@ 5, lea_rdx_[rax+1], mov_qword_ptr_[r15+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0xa, test_r13b_r13b, jne_0x@@ b1, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rsi_qword_ptr_[rsp+0x10], mov_rdi_rbp, call_0xfffffffffffffa@@ 00, mov_rdx_qword_ptr_[rsp+8], mov_rsi_rax, mov_rdi_r12, call_0xfffffffffffffa@@ b0, test_r14b_r14b, je_0xffffffffffffff@@ c4, jmp_0xffffffffffffffa9, xor_r14d_r14d, xor_ebp_ebp, cmp_bl@@ _0x20, je_0xffffffffffffff@@ 79, mov_rax_qword_ptr_[rsp+8], mov_rcx_qword_ptr_[rsp+0x10], mov_rdi_rbp, lea_rsi_[rax@@ +rcx@@ -1], shr_rsi@@ _1, call_0xfffffffffffff9b@@ d, lea_rbp@@ _[rax+1], cmp_bl@@ _0x7c, jne_0x9a, mov_rax_qword_ptr_[r12+8], mov_esi_0x7@@ c, cmp_byte_ptr_[rax@@ -1]_0xa, sete_al, cmp_al@@ _r14b, je_0x8@@ 3, cmp_r14b@@ _1, sbb_esi_esi, and_esi@@ _0x2d, add_esi@@ _0x2f, cmp_r14b@@ _1, sbb_eax_eax, and_eax@@ _0x2d, add_eax@@ _0x2f, mov_byte_ptr_[rsp+0x1@@ f]_al, jmp_0x61, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_edi_3, pop_r15, jmp_0x1@@ 90@@ d, mov_edi_2, call_0x1@@ 8f@@ b, mov_r13d_1, test_rbp_rbp, jne_0xfffffffffffffe@@ b7, mov_rax_qword_ptr_[rsp+8], mov_rcx_qword_ptr_[rsp+0x10], xor_edi_edi, lea_rsi_[rax@@ +rcx@@ -1], shr_rsi@@ _1, call_0xfffffffffffff92@@ 3, lea_rbp@@ _[rax+1], xor_r14d_r14d, movsx_esi@@ _bl, mov_rax_qword_ptr_[r15+0x@@ 28], cmp_rax_qword_ptr_[r@@ 15+0x30], jae_0x@@ 44, movzx_ecx_byte_ptr_[r@@ sp+0x1@@ f], lea_rdx_[rax+1], mov_qword_ptr_[r15+0x@@ 28]_rdx, mov_byte_ptr_[rax@@ ]_cl, jmp_0xfffffffffffffe@@ 9c, mov_edi_1, call_0x18@@ 9b, jmp_0xffffffffffffffa0, mov_esi_0xa, mov_rdi_r15, call_0xffffffffffff7@@ 33@@ 8, jmp_0xfffffffffffffea@@ f, mov_rdi_r15, call_0xffffffffffff7@@ 32@@ 5, jmp_0xfffffffffffffe@@ 6@@ 1
push_r15, push_r14, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_8, cmp_byte_ptr_[rip+0x2@@ afb@@ 2]_0, jne_0x28, mov_rbx_qword_ptr_[rip+0x2@@ 8c@@ ac], mov_rbp_qword_ptr_[rip+0x2@@ 8c@@ 9d], cmp_rbx@@ _rdi, setne@@ _r14b, cmp_rbp@@ _rsi, setne@@ _r15b, test_r14b_r14b, jne_0x24, test_r15b_r15b, jne_0x1f, mov_qword_ptr_[rip+0x2@@ 8c@@ 86@@ ]_r12, mov_qword_ptr_[rip+0x2@@ 8c@@ 77@@ ]_r13, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, cmp_byte_ptr_[rip+0x2@@ af@@ 67@@ ]_0, jne_0x@@ c1, cmp_byte_ptr_[rip+0x2@@ af@@ 1c]_0, jne_0x54, test_r14b_r14b, je_0xa1, test_r15b_r15b, je_0x98, mov_rax_qword_ptr_[rip+0x2b@@ 25@@ 1], inc_rbp, lea_rdx_[rax+r@@ bp*@@ 8-8], mov_rax_qword_ptr_[rip+0x2b@@ 1@@ 12], inc_rbx, lea_rdi_[rax+r@@ bx*@@ 8-8], mov_esi_0x20, call_0xfffffffffffffd@@ 1d, cmp_r12_rbx, je_0x5f, cmp_r13@@ _rbp, jne_0xffffffffffffffd0, cmp_r12_rbx, je_0xffffffffffffff@@ 78, mov_rax_qword_ptr_[rip+0x2@@ b0@@ d9], xor_edx_edx, lea_rdi_[rax+r@@ bx*8], mov_esi_0x28, inc_rbx, call_0xfffffffffffffc@@ e3, cmp_rbx_r12, jne_0xffffffffffffffe3, jmp_0xffffffffffffff4c, mov_rax_qword_ptr_[rip+0x2b@@ 1e@@ 1], mov_esi_0x2@@ 9, lea_rdx_[rax+r@@ bp*8], xor_edi_edi, call_0xfffffffffffffc@@ be, inc_rbp, cmp_r13@@ _rbp, jne_0xffffffffffffffe3, jmp_0xffffffffffffffa9, mov_rcx_r12, mov_r8_r13, mov_rdi_qword_ptr_[rip+0x2@@ ae@@ 63], sub_rcx@@ _rbx, sub_r8@@ _rbp, lea_rdx_[rip+0x@@ 1ec@@ 26], mov_esi_1, xor_eax_eax, call_0xffffffffffff7@@ 56@@ 7, jmp_0xffffffffffffff1@@ f
endbr64, push_r12, push_rbp, push_rbx, sub_rsp_0x30, lea_rcx_[rsp+0x18], lea_rdx_[rsp+0x10], lea_rsi_[rsp+8], lea_r8_[rsp+0x@@ 20], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0x1d@@ 10, test_eax_eax, jne_0x29, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ a0, add_rsp_0x30, pop_rbx, pop_rbp, pop_r12, ret, mov_rsi_qword_ptr_[rsp+0x18], mov_rdi_qword_ptr_[rsp+8], mov_r12d_eax, call_0xfffffffffffffe@@ 33, cmp_byte_ptr_[rip+0x2@@ ad@@ f5@@ ]_0, jne_0x1@@ 17, cmp_r12d@@ _3, je_0x8d, test_r12b@@ _2, je_0x3b, mov_rbx_qword_ptr_[rsp+0x18], cmp_rbx@@ _qword_ptr_[rsp+0x20], jg@@ _0x28, mov_rax_qword_ptr_[rip+0x2@@ b0@@ e1], mov_esi_0x3@@ e, lea_rdx_[rax+r@@ bx*8], xor_edi_edi, inc_rbx, call_0xfffffffffffffbb@@ b, cmp_qword_ptr_[rsp+0x@@ 20]@@ _rbx, jge_0xffffffffffffff@@ e1, mov_qword_ptr_[rip+0x2@@ 8@@ aa@@ 0]_rbx, and_r12d@@ _1, je_0xffffffffffffff@@ 6d, mov_rbx_qword_ptr_[rsp+8], cmp_qword_ptr_[rsp+0x1@@ 0]_rbx, jl@@ _0x25, mov_rax_qword_ptr_[rip+0x2a@@ f7@@ 1], xor_edx_edx, lea_rdi_[rax+r@@ bx*8], mov_esi_0x3@@ c, inc_rbx, call_0xfffffffffffffb@@ 7b, cmp_qword_ptr_[rsp+0x1@@ 0]_rbx, jge_0xffffffffffffff@@ e1, mov_qword_ptr_[rip+0x2@@ 8a@@ 6@@ 8]_rbx, jmp_0xffffffffffffff31, mov_rbx_qword_ptr_[rsp+8], mov_rax_qword_ptr_[rsp+0x10], mov_rbp_qword_ptr_[rsp+0x18], cmp_rbx_rax, jle_0x@@ 3e, jmp_0x@@ ac, mov_rax_qword_ptr_[rip+0x2@@ b0@@ 51], mov_esi_0x7@@ c, lea_rdx_[rax+r@@ bp*8], mov_rax_qword_ptr_[rip+0x2@@ af@@ 11], inc_rbp, lea_rdi_[rax+r@@ bx*8], call_0xfffffffffffffb@@ 22, mov_rax_qword_ptr_[rsp+0x10], inc_rbx, cmp_rax_rbx, jl@@ _0x72, cmp_qword_ptr_[rsp+0x@@ 20]@@ _rbp, jge_0xffffffffffffff@@ cb, xor_r12d_r12d, cmp_rbx_rax, setl@@ e@@ _r12b, mov_qword_ptr_[rsp+8]_rbx, mov_qword_ptr_[rip+0x2@@ 8@@ 9f@@ 3@@ ]_rbx, mov_qword_ptr_[rsp+0x1@@ 8]_rbp, mov_qword_ptr_[rip+0x2@@ 8@@ 9d@@ f@@ ]_rbp, jmp_0xffffffffffffff00, mov_rax_qword_ptr_[rsp+0x20], mov_rcx_qword_ptr_[rsp+0x10], sub_rax@@ _qword_ptr_[rsp+0x18], sub_rcx@@ _qword_ptr_[rsp+8], mov_rdi_qword_ptr_[rip+0x2@@ ac@@ 8d], lea_r8@@ _[rax+1], inc_rcx, lea_rdx_[rip+0x@@ 1ea@@ 59], mov_esi_1, xor_eax_eax, call_0xffffffffffff7@@ 3@@ 90, jmp_0xfffffffffffffeba, xor_r12d_r12d, cmp_rbx_rax, setl@@ e@@ _r12b, cmp_qword_ptr_[rsp+0x@@ 20]@@ _rbp, jl_0xffffffffffffff@@ 92, add_r12d@@ _2, jmp_0xffffffffffffff8c, call_0xffffffffffff6@@ f7@@ 9
endbr64, push_rbp, mov_rbp_rdi, call_0xc@@ 68, mov_rax_qword_ptr_[rip+0x2@@ ae@@ 84], lea_rsi_[rip+0x14@@ 75], neg_rax, mov_rdi_rbp, lea_rdx_[rip-0x@@ 218], mov_qword_ptr_[rip+0x2@@ 8@@ 94@@ 9]_rax, mov_qword_ptr_[rip+0x2@@ 89@@ 4a@@ ]_rax, call_0x1@@ 47@@ a, mov_rsi_qword_ptr_[rip+0x2@@ af@@ 6e], mov_rdi_qword_ptr_[rip+0x2@@ ae@@ 37], pop_rbp, jmp_0xfffffffffffffc@@ 6@@ 6
endbr64, mov_eax_dword_ptr_[rip+0x28@@ 96@@ a], test_eax_eax, jne_8, mov_dword_ptr_[rip+0x2@@ 8@@ 96@@ 0]_edi, ret
push_r12, mov_r9_qword_ptr_[r@@ si], mov_r11_qword_ptr_[r@@ di], push_rbp, mov_eax_edx, lea_r10_[rip+0x@@ 1e@@ 9a@@ e], push_rbx, xor_ebx_ebx, movzx_r8d_byte_ptr_[r@@ 9], cmp_r8b@@ _0x5c, je_0x26, jg_0x5@@ 1, cmp_r8b@@ _0x3d, je_0x1@@ 73, jle_0x@@ 7d, mov_byte_ptr_[r@@ 11@@ ]@@ _r8b, inc@@ _r9, inc_rbx, movzx_r8d_byte_ptr_[r@@ 9], inc@@ _r11, cmp_r8b@@ _0x5c, jne_0xffffffffffffffde, movzx_ebp_byte_ptr_[r@@ 9+1], add_r9@@ _2, test_bpl_bpl, je_0x1@@ 32, lea_r12d@@ _[rbp-0x@@ 30], cmp_r12b@@ _0x48, ja_0x7@@ 2, movzx_r8d@@ _r12b, movsxd_r8@@ _dword_ptr_[r@@ 10+r@@ 8*4], add_r8@@ _r10, jmp@@ _r8, cmp_r8b@@ _0x5@@ e, jne_0xffffffffffffffb9, movzx_r8d_byte_ptr_[r@@ 9+1], lea_r12_[r@@ 9+1], lea_ebp_[r@@ 8-0x@@ 40], cmp_bpl@@ _0x3e, ja@@ _0xf@@ 1, add_r9@@ _2, and_r8d@@ _0x1f, mov_byte_ptr_[r@@ 11@@ ]@@ _r8b, inc_rbx, inc@@ _r11, jmp_0xffffffffffffff77, test_r8b_r8b, je_0xc, cmp_r8b@@ _0x3a, jne_0xffffffffffffff@@ 7c, mov_qword_ptr_[rdi@@ ]@@ _r11, mov_qword_ptr_[rsi@@ ]_r9, mov_qword_ptr_[rcx@@ ]_rbx, pop_rbx, pop_rbp, mov_eax_1, pop_r12, ret, mov_byte_ptr_[r@@ 11@@ ]_bpl, inc_rbx, inc@@ _r11, jmp_0xffffffffffffff3d, cmp_r8b@@ _0x3f, je_0x34, mov_r9_r12, mov_qword_ptr_[rdi@@ ]@@ _r11, mov_qword_ptr_[rsi@@ ]_r9, mov_qword_ptr_[rcx@@ ]_rbx, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret, test_al_al, je_0xfffffffffffffe@@ 93, mov_qword_ptr_[rdi@@ ]@@ _r11, mov_qword_ptr_[rsi@@ ]_r9, mov_qword_ptr_[rcx@@ ]_rbx, pop_rbx, pop_rbp, mov_eax_edx, pop_r12, ret, mov_byte_ptr_[r@@ 11@@ ]@@ _0x7f, inc_rbx, inc@@ _r11, mov_r9_r12, jmp_0xfffffffffffffe@@ 5@@ 8
mov_r8d_edi, cmp_dil@@ _0x22, jg@@ _0x39, cmp_dil@@ _6, jle_0x@@ 39, lea_eax_[r@@ di-@@ 7], cmp_al@@ _0x1b, ja_0x3@@ 2, lea_rdx_[rip+0x1e@@ 8a@@ 7], movzx_eax_al, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, mov_eax_r8d, ret, cmp_dil@@ _0x5c, je_0xffffffffffffffec, cmp_dil@@ _0x1f, setl@@ e@@ _r8b, mov_eax_r8d, ret
push_r12, mov_r12_rdi, movsx_edi@@ _byte_ptr_[rdi], test_dil_dil, je_0x59, mov_rsi_r12, xor_r9d_r9d, xor_ecx_ecx, jmp_0x2d, call_0xffffffffffffff@@ 50, test_al_al, je_0xf, lea_rdx_[rcx@@ +3], inc_rcx, cmp_al_1, cmove@@ _rcx_rdx, movsx_edi@@ _byte_ptr_[rsi@@ +1], inc@@ _rsi, test_dil_dil, je_0x1a, cmp_dil@@ _0x20, jne_0xffffffffffffffda, movsx_edi@@ _byte_ptr_[rsi@@ +1], inc@@ _rsi, mov_r9d_1, test_dil_dil, jne_0xffffffffffffffea, test_rcx_rcx, jne_0x13, test_r9b_r9b, jne_0xe, mov_rax_r12, pop_r12, ret, sub_rsi@@ _r12, lea_rdi_[r@@ cx+r@@ si+@@ 3], call_0x7e@@ f8, mov_byte_ptr_[rax]@@ _0x22, mov_r9_rax, lea_rsi_[rax+1], movzx_ecx_byte_ptr_[r@@ 12], test_cl_cl, jne_0x31, mov_eax@@ _0x22, mov_word_ptr_[r@@ si@@ ]_ax, mov_r12_r9, mov_rax_r12, pop_r12, ret, mov_byte_ptr_[rsi@@ ]@@ _0x5c, mov_byte_ptr_[rsi+@@ 1]_al, add_rsi@@ _2, movzx_ecx_byte_ptr_[r@@ 12+1], inc_r12, test_cl_cl, je_0xffffffffffffffd3, movsx_edi@@ _cl, call_0xfffffffffffffea@@ e, test_al_al, je_0x37, cmp_al_1, jne_0xffffffffffffffdb, mov_eax_ecx, shr_al@@ _6, add_eax_0x30, mov_byte_ptr_[rsi+@@ 1]_al, mov_eax_ecx, sar@@ _al@@ _3, and_eax_7, and_ecx_7, add_eax_0x30, add_ecx@@ _0x30, mov_byte_ptr_[rsi@@ ]@@ _0x5c, mov_byte_ptr_[rsi+@@ 2]_al, mov_byte_ptr_[rsi+@@ 3@@ ]_cl, add_rsi_4, jmp_0xffffffffffffffba, mov_byte_ptr_[rsi@@ ]_cl, inc@@ _rsi, jmp_0xffffffffffffffa@@ d
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0xc8, mov_r8_qword_ptr_[rip+0x2@@ a@@ 800], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xb8]_rax, xor_eax_eax, test_r8_r8, je_0x1@@ 82, mov_eax_dword_ptr_[rip+0x2a@@ 7c@@ 6], test_eax_eax, je_0x1@@ 74, cmp_byte_ptr_[rip+0x2@@ a@@ 87@@ 8]_0, je_0x1@@ 97, mov_ebp_1, cmp_eax_2, je_0x1@@ cb, cmp_eax_1, jne_0xa, test_ebp_ebp, jne_0x3c@@ c, mov_byte_ptr_[rip+0x2@@ 8@@ 50@@ 7]_0, test_ebp_ebp, je_0x1@@ 3d, lea_rbp_[rip+0x@@ 1e@@ 74@@ 4], lea_rdi_[rip+0x28@@ 5@@ 19], call_0xffffffffffff6c@@ 59, lea_r15_[r@@ bp+0x@@ 2c], mov_rbx_rbp, mov_r12d@@ _0x14, lea_r13_[rsp+0x10], lea_r14_[rip+0x@@ 28@@ 4f@@ b], jmp_0x12, mov_r12d_dword_ptr_[r@@ bx], add_rbx_4, xor_esi_esi, mov_rdx_r13, mov_edi_r12d, call_0xffffffffffff6@@ 99@@ 1, cmp_qword_ptr_[r@@ sp+0x10]_1, je_0xd, mov_esi_r12d, mov_rdi_r14, call_0xffffffffffff6@@ eb@@ e, cmp_rbx_r15, jne_0xffffffffffffffd6, movdqa_xmm0_xmmword_ptr_[r@@ ip+0x2@@ 8@@ 4b@@ c], movdqa_xmm1_xmmword_ptr_[r@@ ip+0x2@@ 8@@ 4c@@ 4], movdqa_xmm2_xmmword_ptr_[r@@ ip+0x2@@ 8@@ 4c@@ c], movdqa_xmm3_xmmword_ptr_[r@@ ip+0x2@@ 8@@ 4d@@ 4], movdqa_xmm4@@ _xmmword_ptr_[r@@ ip+0x2@@ 8@@ 4d@@ c], movdqa_xmm@@ 5@@ _xmmword_ptr_[r@@ ip+0x2@@ 84@@ e4], movdqa_xmm@@ 6@@ _xmmword_ptr_[r@@ ip+0x2@@ 84@@ ec], movdqa_xmm7@@ _xmmword_ptr_[r@@ ip+0x2@@ 84@@ f4], mov_dword_ptr_[rsp+0x9@@ 8]@@ _0x10000000, movups_xmmword_ptr_[r@@ sp+0x1@@ 8]_xmm0, movups_xmmword_ptr_[rsp+0x@@ 28@@ ]_xmm1, movups_xmmword_ptr_[rsp+0x@@ 38@@ ]_xmm2, movups_xmmword_ptr_[rsp+0x@@ 48@@ ]_xmm3, movups_xmmword_ptr_[rsp+0x@@ 58@@ ]_xmm4, movups_xmmword_ptr_[rsp+0x@@ 68@@ ]_xmm5, movups_xmmword_ptr_[rsp+0x@@ 78@@ ]_xmm6, movups_xmmword_ptr_[rsp+0x@@ 88@@ ]_xmm7, mov_r12d@@ _0x14, lea_r15_[rip+0x@@ 30@@ 1], lea_r14_[r@@ ip-0x@@ 54@@ 6], jmp_0x12, mov_r12d_dword_ptr_[r@@ bp], add_rbp@@ _4, mov_esi_r12d, lea_rdi_[rip+0x28@@ 4@@ 1e], call_0xffffffffffff6d@@ 7e, test_eax_eax, je_0x1f, cmp_r12d@@ _0x14, mov_rax_r14, cmove_rax@@ _r15, mov_rsi_r13, xor_edx_edx, mov_edi_r12d, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffff6@@ 8a@@ d, cmp_rbx_rbp, jne_0xffffffffffffffc5, mov_rax_qword_ptr_[rsp+0xb8], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ 8b, add_rsp_0xc8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, test_dil_dil, je_0x15, cmp_eax_2, je_0x38, mov_byte_ptr_[rip+0x2@@ 8@@ 38@@ 7]_0, jmp_0xffffffffffffffbf, mov_rdi_r8, call_0xffffffffffff6b@@ 15, mov_edi_eax, call_0xffffffffffff@@ 68@@ 3e, xor_ebp_ebp, test_eax_eax, setne_@@ bpl, mov_eax_dword_ptr_[rip+0x2a@@ 5e@@ b], jmp_0xfffffffffffffe@@ 3f, xor_ebp_ebp, mov_rdi_qword_ptr_[rip+0x2@@ 8@@ 33@@ f], mov_byte_ptr_[rip+0x2@@ 8@@ 34@@ 8]_1, mov_qword_ptr_[rsp]_rdi, test_rdi_rdi, je_0xfffffffffffffe@@ 3a, cmp_byte_ptr_[rdi]_0, je_0xfffffffffffffe@@ 31, mov_eax_0x3@@ f@@ 3f, mov_word_ptr_[rsp+0x@@ b5@@ ]_ax, mov_byte_ptr_[rsp+0x@@ b7@@ ]_0, call_0x7e@@ 55, mov_qword_ptr_[rsp+8]_rax, mov_r13_rax, mov_rax_qword_ptr_[rsp], lea_r12_[rip+0x@@ 27@@ 92@@ d], movzx_edx_byte_ptr_[rax], cmp_dl@@ _0x2a, je_0x1@@ 37, cmp_dl@@ _0x3a, je_0x1@@ be, test_dl_dl, je_0xfffffffffffffd@@ e7, lea_rdx_[rax+1], mov_qword_ptr_[rsp]_rdx, movzx_edx_byte_ptr_[rax], mov_byte_ptr_[rsp+0x@@ b5@@ ]_dl, cmp_byte_ptr_[rax+1]_0, je_0xb0, lea_rdx_[rax+2], mov_qword_ptr_[rsp]_rdx, movzx_edx_byte_ptr_[rax+1], mov_byte_ptr_[rsp+0x@@ b6@@ ]_dl, lea_rdx_[rax@@ +3], mov_qword_ptr_[rsp]_rdx, cmp_byte_ptr_[rax+@@ 2]@@ _0x3d, jne_0x8b, xor_r14d_r14d, lea_rsi_[rip+0x1e@@ 5@@ 29], lea_r15_[rsp+0x@@ b5], jmp_0x11, inc@@ _r14, mov_rsi_qword_ptr_[r@@ 12+r@@ 14*8], test_rsi_rsi, je_0x40, mov_rdi_r15, call_0xffffffffffff6@@ 9c@@ 9, test_eax_eax, jne_0xffffffffffffffea, movsxd_rcx@@ _r14d, shl_rcx_4, lea_rax_[rip+0x27@@ f@@ 32], lea_rcx_[rax@@ +rcx], mov_rax_qword_ptr_[rsp+8], xor_edx_edx, mov_qword_ptr_[rcx@@ +8]_rax, mov_rsi_rsp, lea_rdi_[rsp+8], call_0xfffffffffffff9@@ 1b, test_al_al, jne_0x@@ fb, mov_edx_5, lea_rsi_[rip+0x1e@@ 4c@@ 9], xor_edi_edi, call_0xffffffffffff67@@ c0, mov_rdx_rax, mov_rcx_r15, xor_esi_esi, xor_edi_edi, xor_eax_eax, call_0xffffffffffff6b@@ 3f, mov_edx_5, lea_rsi_[rip+0x1e@@ 5@@ 2e], xor_edi_edi, call_0xffffffffffff67@@ 9c, mov_rdx_rax, xor_esi_esi, xor_edi_edi, xor_eax_eax, call_0xffffffffffff6b@@ 1e, mov_edi_0x28, call_0x7@@ aa@@ b, mov_rcx_rax, mov_rax_qword_ptr_[rip+0x28@@ 1a@@ c], mov_rsi_rsp, mov_qword_ptr_[rcx+0x@@ 20]_rax, mov_rax_qword_ptr_[rsp+8], lea_rdi_[rsp+8], mov_qword_ptr_[rcx@@ +8]_rax, mov_edx_1, inc@@ _qword_ptr_[rsp], mov_qword_ptr_[rip+0x2@@ 8@@ 18@@ 7@@ ]_rcx, call_0xfffffffffffff85@@ 7, test_al_al, je_0xffffffffffffff@@ 66, mov_rax_qword_ptr_[rsp], lea_rdx_[rax+1], mov_qword_ptr_[rsp]_rdx, cmp_byte_ptr_[rax]@@ _0x3d, jne_0xffffffffffffff@@ 51, mov_rax_qword_ptr_[rsp+8], add_rcx_0x10, mov_qword_ptr_[rcx@@ +8]_rax, xor_edx_edx, call_0xfffffffffffff8@@ 26, test_al_al, je_0xffffffffffffff@@ 35, mov_rax_qword_ptr_[rsp], jmp_0xfffffffffffffe@@ 48, mov_ebp_1, jmp_0xfffffffffffffd@@ ed, inc_rax, mov_qword_ptr_[rsp]_rax, jmp_0xfffffffffffffe@@ 2c, call_0xffffffffffff66@@ f@@ 4
endbr64, mov_eax_dword_ptr_[rip+0x28@@ 12@@ a], test_eax_eax, jne_0x10, mov_eax_dword_ptr_[rip+0x28@@ 11c], inc_eax, mov_dword_ptr_[rip+0x2@@ 8@@ 1@@ 14]_eax, ret
mov_r9_rsi, mov_rcx_qword_ptr_[rip+0x2@@ a@@ 38@@ e], mov_rsi_rdi, mov_rdi_qword_ptr_[r@@ 9], mov_edx_1, jmp_0xffffffffffff@@ 6@@ 93@@ b
endbr64, push_r12, mov_r12_rdi, call_0xffffffffffff@@ 65@@ 17, mov_esi_dword_ptr_[rax], mov_rcx_r12, lea_rdx_[rip+0x1b@@ df@@ 1], xor_edi_edi, xor_eax_eax, pop_r12, jmp_0xffffffffffff@@ 6@@ 9d@@ 0
endbr64, push_r14, mov_r14_rsi, push_r13, mov_r13_rdx, push_r12, mov_r12_r8, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rcx, sub_rsp_0x60, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x58]_rax, xor_eax_eax, cmp_byte_ptr_[rip+0x2@@ a4@@ 5a@@ ]_0, je_0x62, lea_rax_[rip+0x@@ 1e@@ 34@@ 1], test_rcx_rcx, cmove_rbx_rax, test_r8_r8, cmove@@ _r12_rax, mov_qword_ptr_[rsp+8]_rsi, mov_qword_ptr_[rsp+0x10]_rdx, mov_qword_ptr_[rsp+0x18]_rbx, mov_qword_ptr_[rsp+0x20]@@ _r12, xor_ebx_ebx, mov_r13d@@ _8, lea_r12_[rsp+0x@@ 30], call_0xffffffffffff6@@ 5e@@ 2, inc_rax, mov_qword_ptr_[r12@@ +r@@ bx@@ ]_rax, add_rbx_8, add_r13_rax, cmp_rbx@@ _0x28, je_0x8b, mov_rdi_qword_ptr_[r@@ sp+r@@ bx], jmp_0xffffffffffffffdf, cmp_byte_ptr_[rip+0x2@@ a@@ 2d@@ f]_0, je_0x22, mov_rdi_qword_ptr_[rip+0x2@@ 7@@ dd@@ 0], mov_rax_qword_ptr_[rdi+0x28], cmp_rax_qword_ptr_[r@@ di+0x30], jae_0x@@ e0, lea_rdx_[rax+1], mov_qword_ptr_[rdi+0x@@ 28]_rdx, mov_byte_ptr_[rax]_0x20, mov_rsi_rbp, xor_edi_edi, mov_edx_5, call_0xffffffffffff6@@ 56@@ 5, mov_rsi_rax, mov_rax_qword_ptr_[rsp+0x58], xor_rax_qword_ptr_fs:[0x28], jne_0xa4, add_rsp_0x60, mov_r8_rbx, pop_rbx, pop_rbp, mov_r9_r12, pop_r12, mov_rcx_r13, pop_r13, mov_rdx_r14, mov_edi_1, xor_eax_eax, pop_r14, jmp_0xffffffffffff@@ 68@@ 3a, mov_rdi_r13, call_0x7@@ 87@@ d, mov_r14_rax, lea_rcx_[rax+8], xor_ebx_ebx, mov_r13_qword_ptr_[r@@ 12+r@@ bx], mov_rdi_rcx, mov_rdx_r13, mov_rsi_rbp, call_0xffffffffffff66@@ f2, mov_rcx_rax, add_rbx_8, add_rcx@@ _r13, cmp_rbx@@ _0x28, je_0xf, mov_rbp_qword_ptr_[r@@ sp+r@@ bx], jmp_0xffffffffffffffda, mov_rax_qword_ptr_[rip+0x2@@ 7c@@ 99], mov_qword_ptr_[rip+0x2@@ 7c@@ 92@@ ]_r14, mov_qword_ptr_[rax]@@ _r14, mov_qword_ptr_[r@@ 14]_0, mov_rax_qword_ptr_[rsp+0x58], xor_rax_qword_ptr_fs:[0x28], jne_0xf, add_rsp_0x60, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, call_0xffffffffffff64@@ eb, mov_esi_0x20, call_0xffffffffffff@@ 65@@ 2b, jmp_0xffffffffffffff2@@ 7
endbr64, xor_r8d_r8d, xor_ecx_ecx, jmp_0xfffffffffffffe@@ 5@@ 7
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x58, mov_rbp_qword_ptr_[rip+0x2@@ 7f@@ 87], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, lea_rax_[rsp+0x20], mov_qword_ptr_[rsp+0x18]_rax, test_rbp_rbp, je_0x9c, lea_r12_[rsp+0x@@ 40], mov_r13_rbp, lea_r14_[r@@ 13+8], mov_rbp_qword_ptr_[rbp], mov_r15_qword_ptr_[rsp+0x18], mov_rbx_r14, mov_rdi_rbx, call_0xffffffffffff6@@ 44@@ 2, lea_rbx_[r@@ bx+rax+1], mov_qword_ptr_[r15+@@ 8]_rbx, add_r15_8, cmp_r12@@ _r15, jne_0xffffffffffffffe8, mov_r9_qword_ptr_[rsp+0x40], mov_r8_qword_ptr_[rsp+0x38], xor_edi_edi, mov_r15_qword_ptr_[rsp+0x30], mov_rbx_qword_ptr_[rsp+0x28], mov_edx_5, mov_rsi_r14, mov_qword_ptr_[rsp+0x10]_r9, mov_qword_ptr_[rsp+8]_r8, call_0xffffffffffff6@@ 3e@@ 3, mov_r9_qword_ptr_[rsp+0x10], mov_r8_qword_ptr_[rsp+8], mov_rsi_rax, mov_edi_1, xor_eax_eax, mov_rcx_r15, mov_rdx_rbx, call_0xffffffffffff66@@ d4, mov_rdi_r13, call_0xffffffffffff6@@ 23@@ c, test_rbp_rbp, jne_0xffffffffffffff@@ 7c, mov_rax_qword_ptr_[rsp+0x48], xor_rax_qword_ptr_fs:[0x28], jne_0x11, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xffffffffffff6@@ 3c@@ f
endbr64, push_r12, mov_r12_rdi, push_rbp, sub_rsp_8, call_0xffffffffffff6@@ 23@@ 2, mov_ebp_dword_ptr_[rax], call_0xfffffffffffffee@@ b, mov_rcx_r12, lea_rdx_[rip+0x@@ 1bb@@ 07], mov_esi_ebp, mov_edi_2, xor_eax_eax, call_0xffffffffffff66@@ e@@ 3
endbr64, push_rbp, mov_rbp_rdi, call_0xfffffffffffffeb@@ 8, mov_edx_5, mov_rsi_rbp, xor_edi_edi, call_0xffffffffffff6@@ 32@@ 9, mov_rcx_rax, lea_rdx_[rip+0x1b@@ ac@@ 5], xor_esi_esi, mov_edi_2, xor_eax_eax, call_0xffffffffffff66@@ a@@ 1
endbr64, mov_qword_ptr_[rip+0x2@@ 7d@@ 5d@@ ]_rdi, ret
endbr64, mov_qword_ptr_[rip+0x2@@ 7d@@ 6d@@ ]_rdi, mov_qword_ptr_[rip+0x2@@ 7d@@ 5e@@ ]_rsi, mov_byte_ptr_[rip+0x2@@ 7d@@ 5@@ 1]_dl, mov_qword_ptr_[rip+0x2@@ 9@@ fe@@ 5]_0, ret
endbr64, push_rbp, sub_rsp_0x50, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, cmp_qword_ptr_[rip+0x2@@ 9@@ fb@@ 7]_0, je_0x1f, mov_rax_qword_ptr_[rsp+0x48], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ 14, add_rsp_0x50, pop_rbp, ret, mov_rdi_qword_ptr_[rip+0x2@@ 7d@@ 01], call_0xfffffffffffff66@@ 9, mov_rdi_qword_ptr_[rip+0x2@@ 7c@@ ed], mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffff65@@ 8, mov_rdx_qword_ptr_[rsp+0x10], mov_rsi_qword_ptr_[rip+0x2@@ a0@@ 1f], mov_qword_ptr_[rsp+0x18]_rax, mov_rcx_rax, lea_rdi_[rip+0x1d@@ f6@@ 7], xor_eax_eax, call_0x7@@ 9@@ 16, cmp_byte_ptr_[rip+0x2@@ a0@@ 9a@@ ]_0, mov_rbp_rax, jne_0x8f, mov_rax_qword_ptr_[rip+0x2@@ 7a@@ 72], xor_edi_edi, mov_qword_ptr_[rip+0x2@@ 9f@@ 39@@ ]_rax, call_0xfffffffffffff7@@ 21, cmp_byte_ptr_[rip+0x2@@ 7c@@ 8e@@ ]_0, jne_0x1@@ 8d, mov_rdi_rbp, call_0xffffffffffff60@@ 8c, mov_eax_dword_ptr_[rip+0x2@@ 9@@ fd@@ 1], cmp_eax_2, je_0x10e, cmp_eax_3, jne_0x18, lea_rsi_[rsp+0x10], mov_edx_1, lea_rdi_[rip+0x2a@@ 0@@ 62], call_0xffffffffffffa@@ 3b@@ 2, mov_rdi_qword_ptr_[rsp+0x10], cmp_rdi@@ _qword_ptr_[rip+0x2@@ 7c@@ 59], je_7, call_0xffffffffffff60@@ 4f, mov_rdi_qword_ptr_[rsp+0x18], cmp_rdi@@ _qword_ptr_[rip+0x2@@ 7c@@ 3e], je_0xffffffffffffff@@ 21, call_0xffffffffffff60@@ 38, jmp_0xffffffffffffff16, mov_rdi_qword_ptr_[rip+0x2@@ 7@@ 9e@@ 9], call_0xffffffffffff6@@ 5e@@ 1, test_eax_eax, jne_0x12@@ 4, lea_rax_[rip+0x@@ 1d@@ e8@@ 5], mov_qword_ptr_[rsp+0x20]_rax, lea_rdi_[rsp+8], lea_rax_[rip+0x@@ 1d@@ ea@@ 8], mov_qword_ptr_[rsp+0x28]_rax, mov_qword_ptr_[rsp+0x30]@@ _rbp, mov_qword_ptr_[rsp+0x38]_0, call_0xffffffffffff6@@ 28@@ 9, test_eax_eax, jne_0x1@@ 13, call_0xffffffffffff6@@ 60c, mov_dword_ptr_[rip+0x2@@ 7@@ bb@@ 1]_eax, test_eax_eax, js@@ _0xf@@ 4, jne_0x79, mov_edi_dword_ptr_[rsp+0xc], call_0xffffffffffff6@@ 25@@ 3, mov_edi_dword_ptr_[rsp+8], test_edi_edi, je_0x1a, xor_esi_esi, call_0xffffffffffff6@@ 1a@@ 4, test_eax_eax, js_0x@@ 95, mov_edi_dword_ptr_[rsp+8], call_0xffffffffffff6@@ 23@@ 3, lea_rdi_[rip+0x1d@@ e0@@ f], lea_rsi_[rsp+0x20], call_0xffffffffffff6@@ 5b@@ 2, call_0xffffffffffff5@@ fc@@ d, xor_edi_edi, cmp_dword_ptr_[rax]_2, sete_dil, add_edi@@ _0x7e, call_0xffffffffffff5@@ fe@@ c, lea_rsi_[rsp+0x10], xor_edx_edx, lea_rdi_[rip+0x2@@ 9f@@ 62], call_0xffffffffffffa@@ 2b@@ 2, jmp_0xffffffffffffff00, mov_edi_dword_ptr_[rsp+8], call_0xffffffffffff6@@ 1d@@ c, mov_edi_dword_ptr_[rsp+0xc], lea_rsi_[rip+0x1d@@ f5@@ 7], call_0xffffffffffff6@@ 3a@@ c, mov_qword_ptr_[rip+0x2@@ 9d@@ c8]_rax, test_rax_rax, je_0x6a, mov_edi_1, call_0xfffffffffffff5a@@ 6, jmp_0xfffffffffffffe@@ 92, lea_rdi_[rip+0x@@ 1dd@@ ca], call_0xfffffffffffffd@@ 11, mov_rdi_rbp, call_0xffffffffffff5@@ fa@@ 5, jmp_0xfffffffffffffe@@ 71, call_0xffffffffffff60@@ bb, xor_edi_edi, mov_edx_5, lea_rsi_[rip+0x1b@@ 8a@@ 9], call_0xffffffffffff60@@ 68, mov_rdi_rax, call_0xfffffffffffffc@@ e0, lea_rdi_[rip+0x@@ 1dd@@ 88], call_0xfffffffffffffc@@ d4, lea_rdi_[rip+0x@@ 1dd@@ 77], call_0xfffffffffffffcc@@ 8, lea_rdi_[rip+0x@@ 1dd@@ 7a], call_0xfffffffffffffc@@ b@@ c
endbr64, push_rbx, sub_rsp_0x10, mov_rdi_qword_ptr_[rip+0x2@@ 9d@@ 38], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, test_rdi_rdi, je_0x4f, cmp_rdi@@ _qword_ptr_[rip+0x2@@ 7@@ 84@@ c], je_0x46, test_byte_ptr_[r@@ di]@@ _0x20, jne_0x@@ c1, call_0xffffffffffff5@@ fc@@ 9, test_eax_eax, jne_0x8d, mov_edi_dword_ptr_[rip+0x2@@ 7a@@ 46], xor_edx_edx, lea_rsi_[rsp+4], call_0xffffffffffff6@@ 37@@ f, test_eax_eax, js_0x8@@ e, mov_eax_dword_ptr_[rsp+4], test_al@@ _0x7f, jne_0x9a, movzx_ebx@@ _ah, test_ah@@ _0xff, jne_0x23, mov_qword_ptr_[rip+0x2@@ 9c@@ cb@@ ]_0, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x3b, add_rsp_0x10, pop_rbx, ret, lea_rsi_[rip+0x1@@ dd@@ 76], cmp_ebx@@ _0x7e, jne_0x6f, mov_edx_5, xor_edi_edi, call_0xffffffffffff5f@@ 8a, mov_rdx_rax, mov_r8d_ebx, lea_rcx_[rip+0x@@ 1d@@ c@@ 70], xor_esi_esi, mov_edi_2, xor_eax_eax, call_0xffffffffffff6@@ 2@@ ff, call_0xffffffffffff5@@ fa@@ a, xor_edi_edi, mov_edx_5, lea_rsi_[rip+0x1b@@ 7@@ 98], call_0xffffffffffff5f@@ 57, mov_rdi_rax, call_0xfffffffffffffb@@ cf, lea_rdi_[rip+0x1d@@ c@@ 88], call_0xfffffffffffffb@@ c3, lea_rdi_[rip+0x1b@@ 7@@ 78], call_0xfffffffffffffb@@ f7, mov_ebx@@ _0x7fffffff, lea_rsi_[rip+0x1@@ dd@@ 36], jmp_0xffffffffffffff95, cmp_ebx@@ _0x7f, lea_rsi_[rip+0x1d@@ cc@@ a], lea_rax_[rip+0x@@ 1dd@@ 43], cmove_rsi_rax, jmp_0xffffffffffffff7@@ e
endbr64, push_r15, lea_rcx_[r@@ di+1], xor_r15d_r15d, push_r14, mov_r14_rsi, lea_rdx_[r@@ 14+1], push_r13, mov_r9_r14, push_r12, mov_r12_rcx, push_rbp, push_rbx, sub_rsp_0x48, mov_eax_dword_ptr_[rip+0x2@@ 9c@@ 1c], movzx_esi_byte_ptr_[r@@ ip+0x2@@ 9c@@ a2], mov_dword_ptr_[rsp+0x24]_eax, sub_eax_2, mov_r13_qword_ptr_[rip+0x2@@ 9c@@ 37], mov_byte_ptr_[rsp+0x@@ 2f@@ ]_sil, mov_qword_ptr_[rsp+0x30]_rcx, mov_qword_ptr_[rsp+0x38]_rdx, mov_dword_ptr_[rsp+0x28]_eax, mov_r14_r13, movzx_ebp@@ _byte_ptr_[rdi], movzx_ebx_byte_ptr_[r@@ 9], mov_qword_ptr_[rsp+0x18]_rdi, mov_qword_ptr_[rsp+0x10]_rdx, mov_qword_ptr_[rsp+8]_r9, mov_r13_rdx, cmp_bpl@@ _bl, je_0xc4, mov_eax_dword_ptr_[rsp+0x24], cmp_eax_4, je_0x1@@ f7, ja@@ _0xf@@ 1, cmp_eax_1, je_0x1@@ 58, cmp_dword_ptr_[rsp+0x@@ 28]_1, ja_0x7@@ d, call_0xffffffffffff6@@ 32@@ b, mov_rax_qword_ptr_[rax], movzx_r10d@@ _bpl, test_byte_ptr_[rax+r@@ 10@@ *@@ 2+1]_0x20, mov_r9_qword_ptr_[rsp+8], mov_rdx_qword_ptr_[rsp+0x10], mov_rdi_qword_ptr_[rsp+0x18], je_0x11a, movzx_r10d@@ _bl, test_byte_ptr_[rax+r@@ 10@@ *@@ 2+1]_0x20, je_0x10@@ a, cmp_bpl@@ _0xa, je_0x3@@ 40, movzx_edi_byte_ptr_[r@@ di+1], mov_r10@@ _r12, cmp_dil@@ _0xa, jne_0x21, jmp_0x3@@ 2d, movzx_edi_byte_ptr_[r@@ 10+1], inc@@ _r10, cmp_dil@@ _0xa, je_0x3@@ 14, test_byte_ptr_[rax+r@@ di*@@ 2+1]_0x20, jne_0xffffffffffffffe9, cmp_byte_ptr_[rsp+0x@@ 2f@@ ]_0, je_0x12, call_0xffffffffffff6@@ 29@@ 9, mov_rax_qword_ptr_[rax], movzx_ebp_byte_ptr_[r@@ ax+r@@ bp*4], movzx_ebx_byte_ptr_[r@@ ax+r@@ bx*4], cmp_bpl@@ _bl, jne_0x2@@ 57, cmp_bl@@ _0xa, je_0x2@@ 85, mov_eax_1, cmp_bl@@ _9, jne_0x10, mov_rax_r15, xor_edx_edx, div@@ _r14, mov_rax_r14, sub_rax_rdx, add_r15_rax, mov_r9_r13, mov_rdi_r12, lea_r12_[r@@ di+1], lea_rdx_[r@@ 9+1], jmp_0xfffffffffffffeee, cmp_dword_ptr_[rsp+0x@@ 24@@ ]_5, jne_0xffffffffffffff@@ 9b, call_0xffffffffffff6@@ 24@@ 9, mov_rax_qword_ptr_[rax], jmp_0x17, cmp_bpl@@ _0xa, je_0x15, movzx_ebp_byte_ptr_[r@@ 12], inc_r12, movzx_edx@@ _bpl, test_byte_ptr_[rax+rdx*@@ 2+1]_0x20, jne_0xffffffffffffffe9, movzx_edx@@ _bl, test_byte_ptr_[rax+rdx*@@ 2+1]_0x20, jne_0x1d, jmp_0xffffffffffffff65, movzx_edx_byte_ptr_[r@@ 13], inc@@ _r13, mov_rbx_rdx, test_byte_ptr_[rax+rdx*@@ 2+1]_0x20, je_0xffffffffffffff@@ 50, cmp_bl@@ _0xa, jne_0xffffffffffffffe7, jmp_0xffffffffffffff45, cmp_dword_ptr_[rsp+0x@@ 24@@ ]_2, je_0xffffffffffffff@@ 3b, cmp_bpl@@ _0x20, jne_0xb, cmp_bl@@ _9, je_0x1@@ af, cmp_bpl@@ _9, jne_0xffffffffffffff@@ 1d, cmp_bl@@ _0x20, jne_0xffffffffffffff@@ 14, mov_rdi_r15, jmp_0x27, cmp_bpl@@ _9, jne_0x4b, mov_rax_rdi, xor_edx_edx, div@@ _r14, add_rdi@@ _r14, sub_rdi_rdx, movzx_ebp_byte_ptr_[r@@ 12], inc_r12, cmp_bpl@@ _0x20, jne_0xffffffffffffffe0, inc_rdi, jmp_0xffffffffffffff@@ ef, cmp_bl@@ _9, jne_0x13@@ 5, mov_rax_r15, xor_edx_edx, div@@ _r14, add_r15@@ _r14, sub_r15@@ _rdx, movzx_ebx_byte_ptr_[r@@ 13], inc@@ _r13, cmp_bl@@ _0x20, jne_0xffffffffffffffde, inc_r15, jmp_0xfffffffffffffff@@ 0, call_0xffffffffffff6@@ 150, mov_rax_qword_ptr_[rax], movzx_edx@@ _bl, movzx_edx_word_ptr_[r@@ ax@@ +rdx*2], and@@ _dx@@ _0x2000, mov_r9d_edx, movzx_edx@@ _bpl, test_byte_ptr_[rax+rdx*@@ 2+1]_0x20, jne_0xa3, test_r9@@ w@@ _r9w, jne_0x@@ d0, cmp_bl@@ _0x20, sete_dl, cmp_bpl@@ _0xa, setne_dil, and_dl@@ _dil, je_0xf7, cmp_r12@@ _qword_ptr_[rsp+0x30], jbe_0x@@ 114, movzx_edi_byte_ptr_[r@@ 12@@ -2], mov_ebx@@ _0x20, test_byte_ptr_[rax+r@@ di*@@ 2+1]_0x20, jne_0x1@@ 6f, cmp_bpl@@ _0x20, jne_0xfffffffffffffe@@ 34, test_dl_dl, je_0xfffffffffffffe@@ 2c, cmp_r13@@ _qword_ptr_[rsp+0x38], jbe_0x@@ f1, movzx_edx_byte_ptr_[r@@ 13@@ -2], lea_r9_[r@@ 13-1], mov_rdi_r12, test_byte_ptr_[rax+rdx*@@ 2+1]_0x20, je_0xfffffffffffffe@@ 0a, jmp_0xfffffffffffffe@@ 4e, movzx_ecx_byte_ptr_[r@@ 12], lea_rdx_[r@@ 12+1], mov_rbp_rcx, test_byte_ptr_[rax@@ +rcx*@@ 2+1]_0x20, je_0xd6, mov_r12_rdx, cmp_bpl@@ _0xa, jne_0xffffffffffffffe1, test_r9@@ w@@ _r9w, jne_0x2d, cmp_bl@@ _bpl, je_0xfffffffffffffd@@ ce, jmp_0xffffffffffffff58, movzx_ecx_byte_ptr_[r@@ 13], lea_rdx_[r@@ 13+1], mov_rbx_rcx, test_byte_ptr_[rax@@ +rcx*@@ 2+1]_0x20, je_0x8f, mov_r13_rdx, cmp_bl@@ _0xa, jne_0xffffffffffffffe3, jmp_0xfffffffffffffd@@ a1, cmp_rdi_r15, je_0xfffffffffffffd@@ 95, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_1, pop_r15, ret, mov_ebp@@ _0x20, jmp_0xfffffffffffffe@@ 65, cmp_bl@@ _0xa, setne_dl, jmp_0xffffffffffffff2a, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret, mov_ebx@@ _0x20, jmp_0xffffffffffffff03, mov_ebp@@ _0x20, jmp_0xfffffffffffffd@@ 2b, mov_ebx@@ _0x20, jmp_0xffffffffffffff4a, mov_ebp@@ _0x20, jmp_0xffffffffffffff34, cmp_bl@@ _0xa, je_0xffffffffffffff@@ a5, movzx_edi_byte_ptr_[r@@ 9+1], cmp_dil@@ _0xa, jne_0x17, jmp_0xffffffffffffff98, movzx_edi_byte_ptr_[r@@ dx+1], inc_rdx, cmp_dil@@ _0xa, je_0xffffffffffffff@@ 85, test_byte_ptr_[rax+r@@ di*@@ 2+1]_0x20, jne_0xffffffffffffffee, jmp_0xfffffffffffffc@@ d4, lea_rdi_[r@@ 12-1], mov_r9_r13, jmp_0xfffffffffffffd@@ 1@@ 1
endbr64, mov_rax_rdi, ret
endbr64, mov_rax_rdi, ret
endbr64, test_rdi_rdi, je_0x49, push_r13, mov_r13_rsi, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, mov_rdi_rbp, call_r13, mov_rdi_rbp, mov_rbp_qword_ptr_[rax], mov_qword_ptr_[rax]_0, mov_rbx_rax, call_r12, mov_qword_ptr_[rbx@@ ]_rbp, test_rbp_rbp, jne_0xffffffffffffffe1, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, ret
endbr64, push_rbx, mov_ebx_edi, cmp_edi@@ _3, je_7, call_0x@@ e4, cmp_byte_ptr_[rip+0x2@@ 7@@ 48@@ 0]_0, je_0xa, cmp_dword_ptr_[rip+0x2@@ 7@@ 13@@ 0]_ebx, jne_8, pop_rbx, ret, mov_rdi_qword_ptr_[rip+0x2@@ 7@@ 13@@ 1], lea_rsi_[rip+0x27@@ 13@@ 2], call_0xfffffffffffff@@ 36@@ a, cmp_ebx_4, ja_0xffffffffffff@@ 5e@@ ec, lea_rcx_[rip+0x@@ 1d@@ 66@@ 9], mov_edx_ebx, movsxd_rax_dword_ptr_[r@@ cx+rdx*4], add_rax_rcx, jmp_rax
push_rbx, sub_rsp_0xa0, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, lea_rbx_[rsp+0x10], jmp_0x29, dec_eax, mov_dword_ptr_[rip+0x2@@ 7@@ 39@@ 0]_eax, mov_edi@@ _0x13, call_0xffffffffffff57@@ 6b, xor_edx_edx, mov_rsi_rbx, mov_edi_2, call_0xffffffffffff57@@ 4c, mov_eax_dword_ptr_[rip+0x27@@ 37@@ 5], test_eax_eax, jne_0xc, mov_eax_dword_ptr_[rip+0x27@@ 36@@ 7], test_eax_eax, je_0x4d, mov_edi_3, call_0xfffffffffffffea@@ e, mov_rdi_qword_ptr_[rip+0x2@@ 7@@ 10@@ a], call_0xffffffffffff5d@@ 02, xor_edi_edi, mov_rdx_rbx, lea_rsi_[rip+0x27@@ 35@@ 1], call_0xffffffffffff57@@ 11, mov_edi_dword_ptr_[rip+0x2@@ 7@@ 33@@ a], mov_eax_dword_ptr_[rip+0x2@@ 73@@ 30], test_eax_eax, jne_0xffffffffffffff@@ 96, xor_esi_esi, mov_dword_ptr_[rsp+0xc]@@ _edi, call_0xffffffffffff5a@@ 66, mov_edi_dword_ptr_[rsp+0xc], jmp_0xffffffffffffff92, mov_rax_qword_ptr_[rsp+0x98], xor_rax_qword_ptr_fs:[0x28], jne_0xb, add_rsp@@ _0xa0, pop_rbx, ret, call_0xffffffffffff58@@ a@@ c
endbr64, push_r15, mov_r15_rdi, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0x28, cmp_byte_ptr_[rip+0x2@@ 96@@ a@@ 3]_0, mov_qword_ptr_[rsp+8]_rdx, mov_qword_ptr_[rsp+0x18]_rcx, jne_0x67, sub_rbp@@ _rdi, je_0x4c, mov_r12d@@ _0x400, jmp_0x1a, sub_rbp@@ _rax, add_r15_rax, call_0xfffffffffffffe@@ ea, test_rbp_rbp, je_0x2c, cmp_rbp@@ _0x400, mov_rbx_r12, cmovbe@@ _rbx@@ _rbp, mov_rcx_qword_ptr_[rip+0x2@@ 95@@ 13], mov_rdx_rbx, mov_esi_1, mov_rdi_r15, call_0xffffffffffff5a@@ c0, cmp_rbx_rax, jbe_0xffffffffffffff@@ c8, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[rip+0x29@@ 54@@ 1], mov_rbx_qword_ptr_[rip+0x2@@ 94@@ da], mov_qword_ptr_[rsp+0x10]_rax, xor_r13d_r13d, mov_r14d_1, cmp_rdi_rsi, jae_0xffffffffffffff@@ cb, movzx_r12d_byte_ptr_[r@@ 15], inc_r15, cmp_r12b@@ _9, je_0x77, cmp_r12b@@ _0xd, je_0xe7, cmp_r12b@@ _8, je_0xb5, call_0xffffffffffff5c@@ 57, mov_r9_rax, mov_rdx_qword_ptr_[r@@ 9], movzx_eax@@ _r12b, movzx_eax_word_ptr_[r@@ dx@@ +rax*2], shr_ax@@ _0xe, and_eax_1, add_r13_rax, mov_rax_qword_ptr_[rbx+0x28], cmp_rax_qword_ptr_[r@@ bx+0x30], jae_0x@@ 11@@ 2, lea_rdx_[rax+1], mov_qword_ptr_[rbx+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _r12b, cmp_rbp@@ _r15, jbe_0xffffffffffffff@@ 68, inc@@ _r14, cmp_r14@@ _0x400, jne_0xffffffffffffff@@ 96, inc_r15, call_0xfffffffffffffe0@@ 9, movzx_r12d_byte_ptr_[r@@ 15-1], xor_r14d_r14d, cmp_r12b@@ _9, jne_0xffffffffffffff@@ 8d, mov_rcx_qword_ptr_[rsp+0x10], mov_rax_r13, xor_edx_edx, div_rcx, sub_rcx_rdx, mov_r12_rcx, add_r13@@ _rcx, jmp_0x18, lea_rsi_[rax+1], mov_qword_ptr_[rbx+0x@@ 28]_rsi, mov_byte_ptr_[rax]_0x20, dec@@ _r12, je_0xffffffffffffff@@ a9, mov_rax_qword_ptr_[rbx+0x28], cmp_rax_qword_ptr_[r@@ bx+0x30], jb_0xffffffffffffff@@ e8, mov_esi_0x20, mov_rdi_rbx, call_0xffffffffffff57@@ 76, jmp_0xffffffffffffffe4, test_r13_r13, je_0x75, mov_rax_qword_ptr_[rbx+0x28], dec@@ _r13, cmp_rax_qword_ptr_[r@@ bx+0x30], jae_0x@@ 9f, lea_rdx_[rax+1], mov_qword_ptr_[rbx+0x@@ 28]_rdx, mov_byte_ptr_[rax@@ ]_8, jmp_0xffffffffffffff66, mov_rax_qword_ptr_[rbx+0x28], cmp_rax_qword_ptr_[r@@ bx+0x30], jae_0x@@ 70, lea_rdx_[rax+1], mov_qword_ptr_[rbx+0x@@ 28]_rdx, mov_byte_ptr_[rax]@@ _0xd, cmp_qword_ptr_[rsp+8]_0, je_0x35, cmp_rbp@@ _r15, jbe_0x@@ 30, cmp_byte_ptr_[r@@ 15]@@ _0xa, je_0x1b, mov_rcx_qword_ptr_[rsp+0x18], mov_rdx_qword_ptr_[rsp+8], mov_esi_1, mov_rdi_rbx, xor_eax_eax, call_0xffffffffffff5a@@ a4, xor_r13d_r13d, jmp_0xffffffffffffff24, xor_r13d_r13d, jmp_0xffffffffffffff0c, movzx_esi@@ _r12b, mov_rdi_rbx, call_0xffffffffffff56@@ d9, jmp_0xfffffffffffffef3, mov_esi@@ _0xd, mov_rdi_rbx, call_0xffffffffffff5@@ 6c0, jmp_0xffffffffffffff90, mov_esi_8, mov_rdi_rbx, call_0xffffffffffff56@@ b1, jmp_0xfffffffffffffec@@ b
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_ebp_edx, push_rbx, sub_rsp_8, mov_r14_qword_ptr_[r@@ si], mov_r12_qword_ptr_[r@@ si+8], mov_r15_qword_ptr_[r@@ ip+0x2@@ 9@@ 30@@ 6], test_rdi_rdi, je_0x113, movzx_eax_byte_ptr_[rdi], mov_rbx_rdi, xor_r13d_r13d, test_al_al, je_0x59, cmp_byte_ptr_[rip+0x2@@ 9@@ 2f@@ 1]_0, lea_rdx_[rip+0x1d@@ 3@@ 1b], lea_r13_[rip+0x@@ 1d@@ 310], cmove@@ _r13@@ _rdx, cmp_byte_ptr_[rip+0x2@@ 9@@ 30@@ 7]_0, mov_rcx_rdi, mov_rdx_r13, je_0x22, cmp_byte_ptr_[r@@ 14]@@ _0xa, jne_0x1c, xor_ecx_ecx, cmp_al_0x20, sete_cl, add_rcx@@ _rdi, lea_rdx_[rip+0x1a@@ d@@ 44], mov_esi_1, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff5@@ 9b@@ 6, test_bpl_bpl, jne_0x6e, mov_rcx_rbx, mov_rdx_r13, mov_rsi_r12, mov_rdi_r14, call_0xfffffffffffffd@@ 10, cmp_byte_ptr_[rbx]_0, je_0x7c, cmp_byte_ptr_[r@@ 12@@ -1]_0xa, je_0x74, mov_edi_3, call_0xfffffffffffffb@@ 39, mov_edx_5, lea_rsi_[rip+0x1a@@ c@@ 84], xor_edi_edi, call_0xffffffffffff5@@ 54@@ 6, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_rcx_rax, mov_rdi_r15, lea_rdx_[rip+0x1d@@ 27@@ d], mov_esi_1, xor_eax_eax, pop_r15, jmp_0xffffffffffff@@ 5@@ 94@@ f, xor_eax_eax, cmp_byte_ptr_[r@@ 12@@ -1]_0xa, sete_al, mov_rsi_r12, sub_rsi_rax, mov_rcx_rbx, mov_rdx_r13, mov_rdi_r14, call_0xfffffffffffffc@@ 96, cmp_byte_ptr_[rbx]_0, jne_0xffffffffffffff@@ 88, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, test_dl_dl, je_0x26, xor_eax_eax, cmp_byte_ptr_[r@@ 12@@ -1]_0xa, sete_al, mov_rsi_r12, sub_rsi_rax, xor_ecx_ecx, xor_edx_edx, mov_rdi_r14, call_0xfffffffffffffc@@ 5c, jmp_0xffffffffffffff51, xor_ecx_ecx, xor_edx_edx, mov_rsi_r12, mov_rdi_r14, call_0xfffffffffffffc@@ 46, jmp_0xffffffffffffff3@@ b
endbr64, xor_edx_edx, jmp_0xfffffffffffffe@@ 7@@ a
endbr64, add_rsi_qword_ptr_[r@@ di+0x@@ e8], lea_rax_[r@@ si+1], ret
endbr64, mov_rax_qword_ptr_[rdi+0x@@ e8], lea_rax_[rax+r@@ si+1], mov_qword_ptr_[rcx]_rax, mov_rax_qword_ptr_[rdi+0x@@ e8], lea_rax_[rax@@ +rdx+1], mov_qword_ptr_[r@@ 8]_rax, ret
endbr64, mov_rax_qword_ptr_[rsi+0x@@ e8], mov_r8_rcx, lea_r9@@ _[rax+r@@ 8+1], lea_rcx_[rax@@ +rdx+1], mov_r10_qword_ptr_[rip+0x2@@ 9@@ 13@@ 9], cmp_rcx@@ _r9, jge_0x@@ 1e, movsx_r8d@@ _dil, lea_rdx_[rip+0x1d@@ 16@@ d], mov_esi_1, mov_rdi_r10, xor_eax_eax, jmp_0xffffffffffff@@ 58@@ 37, mov_rcx_r9, lea_rdx_[rip+0x1a@@ b@@ a8], mov_esi_1, mov_rdi_r10, xor_eax_eax, jmp_0xffffffffffff@@ 58@@ 1@@ c
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x78, movzx_eax_byte_ptr_[rip+0x2@@ 92@@ 28], mov_qword_ptr_[rsp+0x30]_rdi, mov_qword_ptr_[rsp+0x5@@ 8]_rdx, mov_qword_ptr_[rsp+0x6@@ 0]_r8, test_al_al, jne_0x2@@ ac, mov_dword_ptr_[rsp+0x@@ 44]_0, cmp_qword_ptr_[rip+0x2@@ 9@@ 1e@@ 0]_0, setne_al, mov_rbp@@ _-1, xor_r12d_r12d, mov_rdi_qword_ptr_[rsp+0x30], mov_r13_qword_ptr_[rip+0x2@@ 9@@ 3e@@ f], mov_rdx_qword_ptr_[r@@ di+0x18], mov_r14_qword_ptr_[rip+0x2@@ 9@@ 2b@@ 4], mov_qword_ptr_[rsi@@ ]_rdx, mov_qword_ptr_[rsp+0x50]_0, mov_qword_ptr_[rsp+0x48]_0, mov_rdx_qword_ptr_[r@@ di+0x20], mov_qword_ptr_[rsp+0x6@@ 8]_r13, mov_qword_ptr_[rcx@@ ]_rdx, mov_rsi_qword_ptr_[rsp+0x30], mov_r11_qword_ptr_[r@@ si+0x18], mov_rcx_qword_ptr_[r@@ si+0x10], mov_rdx_qword_ptr_[r@@ si+8], lea_rdi_[r@@ cx+r11@@ -1], mov_rbx_qword_ptr_[r@@ si+0x20], add_qword_ptr_[rsp+0x@@ 4@@ 8]_rcx, add_qword_ptr_[rsp+0x@@ 5@@ 0]_rdx, cmp_r11@@ _rdi, lea_rsi_[r@@ dx+r@@ bx-1], setl@@ e@@ _r13b, mov_qword_ptr_[rsp+0x10]_rdi, mov_qword_ptr_[rsp+8]_rsi, and@@ _r13@@ b@@ _al, je_0x1@@ 76, mov_r15_rbp, mov_ebp_r12d, mov_r12d_r13d, mov_r13@@ _r11, jmp_0x44, cmp_qword_ptr_[rip+0x2@@ 9@@ 13@@ 8]_0, je_0x68, xor_r9d_r9d, mov_r8_rdx, xor_ecx_ecx, lea_rdi_[rip+0x@@ 29@@ 10@@ 7], call_0x1@@ 50@@ 37, not_rax, shr_rax_0x3f, inc@@ _r13, cmp_qword_ptr_[rsp+0x1@@ 0]_r13, jl@@ _0x2@@ 90, test_al_al, je_0x2@@ 88, mov_rax_qword_ptr_[r@@ 14+r@@ 13@@ *8+8], xor_edx_edx, cmp_byte_ptr_[rax@@ -1]_0xa, setne_dl, lea_rdi_[rax@@ +rdx@@ -1], mov_rsi_qword_ptr_[r@@ 14+r@@ 13*8], mov_rdx_rdi, sub_rdx_rsi, mov_rax_rdx, test_ebp_ebp, jne_0x@@ 83, cmp_r15_rax, jne_0xffffffffffffff9a, mov_eax_r12d, jmp_0xffffffffffffffba, mov_r12d_ebp, xor_eax_eax, mov_rbp_r15, mov_rcx_qword_ptr_[rsp+0x30], mov_rcx_qword_ptr_[r@@ cx], mov_qword_ptr_[rsp+0x30]_rcx, test_rcx_rcx, jne_0xffffffffffffff@@ 20, mov_rcx_qword_ptr_[rsp+0x58], mov_rsi_qword_ptr_[rsp+0x10], xor_r8d_r8d, mov_qword_ptr_[rcx@@ ]_rsi, mov_rcx_qword_ptr_[rsp+0x60], mov_rsi_qword_ptr_[rsp+8], mov_qword_ptr_[rcx@@ ]_rsi, test_al_al, jne_0x1e, xor_eax_eax, cmp_qword_ptr_[rsp+0x@@ 48]_0, setne_al, mov_r8d_eax, or_r8d@@ _2, cmp_qword_ptr_[rsp+0x50]_0, cmove@@ _r8d_eax, add_rsp_0x78, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r8d, pop_r15, ret, movzx_ebx_byte_ptr_[r@@ si], mov_qword_ptr_[rsp+0x18]_rdi, cmp_bl@@ _0xa, je_0xffffffffffffff@@ 78, mov_qword_ptr_[rsp+0x28]_rsi, mov_qword_ptr_[rsp+0x20]_rdx, call_0xffffffffffff56@@ d5, mov_rsi_qword_ptr_[rsp+0x28], mov_rcx_qword_ptr_[rax], mov_rdx_qword_ptr_[rsp+0x20], mov_rdi_qword_ptr_[rsp+0x18], mov_rax_rsi, jmp_0x17, movzx_ebx_byte_ptr_[r@@ ax+1], inc_rax, cmp_bl@@ _0xa, je_0x26, test_byte_ptr_[r@@ cx+r@@ bx*@@ 2+1]_0x20, jne_0xffffffffffffffef, mov_ecx_dword_ptr_[rsp+0x@@ 44], sub_rdi_rax, mov_rax_rdi, test_ecx_ecx, cmove_rax_rdx, jmp_0xffffffffffffff20, sub_rdi_rax, mov_rax_rdi, jmp_0xffffffffffffff0d, cmp_rbx@@ _qword_ptr_[rsp+8], setl@@ e@@ _r13b, and@@ _r13d_eax, mov_ecx_r13d, test_cl_cl, je_0xffffffffffffff@@ 0c, mov_qword_ptr_[rsp+0x3@@ 8]_r14, mov_r15@@ _qword_ptr_[rsp+0x68], mov_r14d_ecx, jmp_0x48, cmp_qword_ptr_[rip+0x2@@ 8@@ fb@@ 0]_0, je_0xa0, xor_r9d_r9d, mov_r8_rdx, xor_ecx_ecx, lea_rdi_[rip+0x28@@ f7@@ b], call_0x14@@ ea@@ b, not_rax, shr_rax_0x3f, inc_rbx, cmp_qword_ptr_[rsp+@@ 8]_rbx, jl@@ _0xf@@ a, test_al_al, je_0xf2, mov_rax_qword_ptr_[r@@ 15+r@@ bx*@@ 8+8], xor_edx_edx, cmp_byte_ptr_[rax@@ -1]_0xa, setne_dl, lea_rdi_[rax@@ +rdx@@ -1], mov_rsi_qword_ptr_[r@@ 15+r@@ bx*8], mov_rdx_rdi, sub_rdx_rsi, mov_rax_rdx, test_r12d_r12d, jne_0x56, cmp_rbp_rax, jne_0xffffffffffffff@@ 99, mov_eax_r14d, jmp_0xffffffffffffffbd, mov_edx_dword_ptr_[rip+0x2@@ 8e@@ 4c], cmp_edx_1, jbe_0x1c, xor_edi_edi, cmp_edx_3, seta@@ _dil, mov_dword_ptr_[rsp+0x4@@ 4]_edi, mov_r12d_1, xor_ebp_ebp, jmp_0xfffffffffffffd@@ 57, mov_dword_ptr_[rsp+0x@@ 44]_0, xor_r12d_r12d, xor_ebp_ebp, jmp_0xfffffffffffffd@@ 45, mov_r14@@ _qword_ptr_[rsp+0x38], xor_eax_eax, jmp_0xfffffffffffffe@@ 41, movzx_r13d_byte_ptr_[r@@ si], mov_qword_ptr_[rsp+0x18]_rdi, cmp_r13b@@ _0xa, je_0xffffffffffffff@@ 9f, mov_qword_ptr_[rsp+0x28]_rsi, mov_qword_ptr_[rsp+0x20]_rdx, call_0xffffffffffff5@@ 577, mov_rsi_qword_ptr_[rsp+0x28], mov_rcx_qword_ptr_[rax], mov_rdx_qword_ptr_[rsp+0x20], mov_rdi_qword_ptr_[rsp+0x18], mov_rax_rsi, jmp_0x13, movzx_r13d_byte_ptr_[r@@ ax+1], inc_rax, cmp_r13b@@ _0xa, je_0x24, test_byte_ptr_[r@@ cx+r@@ 13*@@ 2+1]_0x20, jne_0xffffffffffffffec, sub_rdi_rax, mov_eax_dword_ptr_[rsp+0x44], test_eax_eax, mov_rax_rdi, cmove_rax_rdx, jmp_0xffffffffffffff4e, sub_rdi_rax, mov_rax_rdi, jmp_0xffffffffffffff3e, mov_r14@@ _qword_ptr_[rsp+0x38], jmp_0xfffffffffffffd@@ c0, mov_rcx_qword_ptr_[rsp+0x30], mov_r12d_ebp, mov_rbx_qword_ptr_[r@@ cx+0x20], mov_rbp_r15, cmp_qword_ptr_[rsp+@@ 8]_rbx, setg@@ e@@ _r13b, and@@ _r13d_eax, mov_ecx_r13d, jmp_0xfffffffffffffe@@ 8@@ f
endbr64, push_r14, push_r13, mov_r13_rdx, push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, call_0xffffffffffff50@@ 2b, mov_rdi_rbp, mov_r14_rax, call_0xffffffffffff50@@ 20, mov_r12_rax, mov_rdi_r13, call_0xffffffffffff50@@ 15, lea_rdi_[r@@ 14+r@@ 12+1], add_rdi_rax, call_0x6@@ 348, sub_rsp_8, push_r13, mov_r12_rax, mov_r9_rbp, mov_r8_rbx, mov_rdx_-1, mov_rdi_rax, lea_rcx_[rip+0x@@ 1c@@ d@@ 28], mov_esi_1, xor_eax_eax, call_0xffffffffffff5@@ 4a@@ c, pop_rax, pop_rdx, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret
endbr64, push_r12, mov_r12_rdi, call_0x6@@ 2f@@ 7, mov_rdi_rax, mov_rdx_r12, xor_esi_esi, call_0xffffffffffff50@@ 7a, pop_r12, ret
endbr64, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rdi_qword_ptr_[rip+0x2@@ 67@@ b4], call_0xffffffffffff5@@ 3a@@ c, test_rbx_rbx, je_0x3f, lea_rbp_[rip+0x@@ 1c@@ db@@ 3], sub_rsp_8, mov_r9_qword_ptr_[r@@ bx+0x10], mov_r8_qword_ptr_[r@@ bx+0x20], mov_rcx_qword_ptr_[r@@ bx+0x18], push_qword_ptr_[r@@ bx+8], mov_rdi_qword_ptr_[rip+0x2@@ 67@@ be], mov_rdx_rbp, mov_esi_1, xor_eax_eax, call_0xffffffffffff5@@ 3@@ 64, mov_rbx_qword_ptr_[rbx], pop_rax, pop_rdx, test_rbx_rbx, jne_0xffffffffffffffcf, mov_rdi_qword_ptr_[rip+0x2@@ 67@@ 9e], add_rsp_8, pop_rbx, pop_rbp, jmp_0xffffffffffff@@ 5@@ 35@@ 8
endbr64, ret
endbr64, push_r12, xor_edi_edi, push_rbp, sub_rsp_8, mov_rax_qword_ptr_[rip+0x2@@ 8a@@ 3c], call_rax, call_0x1@@ 25@@ a, mov_rdi_rax, mov_rbp_rax, call_0xffffffffffff4e@@ ff, mov_r12_qword_ptr_[rip+0x2@@ 8a@@ 13], mov_rdx_rax, mov_rsi_rbp, mov_edi_2, call_0xffffffffffff4e@@ 68, mov_edx_2, lea_rsi_[rip+0x1c@@ d@@ 34], mov_edi_2, call_0xffffffffffff4e@@ 52, mov_rdi_r12, call_0xffffffffffff4@@ ec@@ a, mov_rdx_rax, mov_rsi_r12, mov_edi_2, call_0xffffffffffff4e@@ 3a, mov_edi_2, mov_edx_1, lea_rsi_[rip+0x1a@@ 8@@ 26], call_0xffffffffffff4e@@ 24, mov_edi_dword_ptr_[rip+0x2@@ 66@@ 49], call_0xffffffffffff4d@@ 6@@ 9
endbr64, push_rbp, xor_esi_esi, push_rbx, mov_rbx_rdi, sub_rsp_0xc8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xb8]_rax, xor_eax_eax, mov_rdi_rsp, lea_rax_[rip+0x26@@ 98@@ 1], mov_dword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp]_rax, mov_qword_ptr_[rsp+0x10]@@ _0x2000, call_0xffffffffffff5@@ 29@@ c, test_eax_eax, jne_0x80, test_rbx_rbx, lea_rax_[rip-0x@@ f7], cmove_rbx_rax, mov_edx_5, lea_rsi_[rip+0x1c@@ c8@@ 9], xor_edi_edi, mov_qword_ptr_[rip+0x2@@ 8@@ 95@@ 0]_rbx, call_0xffffffffffff4e@@ 00, mov_edx_5, lea_rsi_[rip+0x1c@@ c7@@ d], xor_edi_edi, mov_qword_ptr_[rip+0x2@@ 89@@ 2e@@ ]_rax, lea_rbp_[rsp+0x20], call_0xffffffffffff4d@@ e1, lea_rdi_[rsp+0x28], mov_qword_ptr_[rip+0x2@@ 89@@ 10]_rax, call_0xffffffffffff4@@ fb0, lea_rax_[rip-0x@@ 13c], xor_edx_edx, mov_rsi_rbp, mov_edi@@ _0xb, mov_dword_ptr_[rsp+0xa@@ 8]@@ _0x@@ c8@@ 0000@@ 04, mov_qword_ptr_[rsp+0x20]_rax, call_0xffffffffffff4c@@ fa, mov_rcx_qword_ptr_[rsp+0x@@ b8], xor_rcx_qword_ptr_fs:[0x28], jne_0xc, add_rsp_0xc8, pop_rbx, pop_rbp, ret, call_0xffffffffffff4d@@ c@@ 8
endbr64, movzx_edx_byte_ptr_[rdi], mov_rax_rdi, cmp_dl@@ _0x2f, jne_0xf, movzx_edx_byte_ptr_[rax+1], inc_rax, cmp_dl@@ _0x2f, je_0xfffffffffffffff6, test_dl_dl, je_0x3c, mov_rcx_rax, xor_esi_esi, jmp_0x20, test_sil_sil, je_7, mov_rax_rcx, xor_esi_esi, movzx_edx_byte_ptr_[r@@ cx+1], inc_rcx, test_dl_dl, je_0x17, cmp_dl@@ _0x2f, jne_0xffffffffffffffe8, movzx_edx_byte_ptr_[r@@ cx+1], inc_rcx, mov_esi_1, test_dl_dl, jne_0xffffffffffffffed, ret
endbr64, push_rbx, mov_rbx_rdi, call_0xffffffffffff4d@@ 38, cmp_rax_1, jbe_0x@@ d, cmp_byte_ptr_[rbx@@ +rax@@ -1]_0x2f, lea_rdx_[rax-1], je_4, pop_rbx, ret, mov_rax_rdx, jmp_0xffffffffffffffe@@ a
endbr64, jmp_qword_ptr_[r@@ cx@@ ]
endbr64, jmp_0xffffffffffff@@ 4b@@ 5@@ c
endbr64, sub_rsp_8, call_0x24@@ 18, test_eax_eax, sete_al, add_rsp_8, ret
endbr64, sub_rsp_8, call_0xffffffffffff4e@@ 68, test_eax_eax, sete_al, add_rsp_8, ret
endbr64, jmp_0x1@@ 95@@ c
endbr64, push_r12, mov_eax_edx, and_eax_0x10, push_rbp, mov_r12_rdi, mov_rbp_rsi, push_rbx, sub_rsp_0x10, and_edx@@ _8, je_0xa6, test_eax_eax, jne_0x36, call_0xffffffffffff4c@@ 7c, mov_rdx_rax, mov_rsi_rbp, mov_rdi_r12, mov_rbx_rax, call_0xffffffffffff4b@@ 1b, test_eax_eax, jne_0xd, movsx_edx_byte_ptr_[r@@ bp+r@@ bx], cmp_edx_0x2f, cmovne_eax_edx, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, ret, mov_rdi_rsi, call_0x6@@ 1d@@ 5, mov_rbp_rax, mov_rdi_rax, jmp_0x23, mov_byte_ptr_[rax]_0, mov_rsi_rbp, mov_rdi_r12, call_0x2@@ 35@@ 7, test_eax_eax, jle_0x@@ 26, mov_byte_ptr_[rbx]@@ _0x2f, lea_rdi_[r@@ bx+1], mov_esi_0x2f, call_0xffffffffffff4c@@ 72, mov_rbx_rax, test_rax_rax, jne_0xffffffffffffffd7, mov_rsi_rbp, mov_rdi_r12, call_0x2@@ 32@@ f, mov_rdi_rbp, mov_dword_ptr_[rsp+0xc]_eax, call_0xffffffffffff4a@@ 53, mov_eax_dword_ptr_[rsp+0xc], add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, ret, test_eax_eax, je_0x16, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, jmp_0x2@@ 30@@ 4, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, jmp_0xffffffffffff@@ 4d@@ 6@@ 0
endbr64, push_r14, push_r13, push_r12, xor_r12d_r12d, push_rbp, lea_rbp_[rip+0x@@ 1c@@ d@@ 3b], push_rbx, mov_rbx_rsi, sub_rsp_0x50, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x10]_rdi, mov_byte_ptr_[r@@ sp]_0, mov_qword_ptr_[rsp+@@ 4]_0, mov_byte_ptr_[rsp+0x@@ c]_0, jmp_0x3b, mov_edi_r14d, call_0xffffffffffff4@@ f0@@ d, movsxd_rdx_eax, mov_rax_r12, shl_rax_5, sub_rax_r12, add_rax_rdx, xor_edx_edx, div@@ _rbx, mov_byte_ptr_[rsp+0x@@ c]_0, add_r13@@ _qword_ptr_[rsp+0x18], mov_qword_ptr_[rsp+0x10]@@ _r13, mov_r12_rdx, cmp_byte_ptr_[r@@ sp]_0, lea_r13_[r@@ sp+4], jne_0x79, mov_rdx_qword_ptr_[rsp+0x10], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ bp@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0x46, mov_qword_ptr_[rsp+0x1@@ 8]_1, movsx@@ _r14d@@ _byte_ptr_[r@@ dx], mov_byte_ptr_[rsp+0x@@ 20]_1, mov_dword_ptr_[rsp+0x2@@ 4]_r14d, mov_byte_ptr_[rsp+0x@@ c]_1, test_r14d_r14d, je_0xd0, cmp_byte_ptr_[rsp+0x@@ 20]_0, mov_r13_qword_ptr_[rsp+0x10], jne_0xffffffffffffff@@ 7d, movsx_rdx_byte_ptr_[r@@ 13], jmp_0xffffffffffffff7d, lea_r13_[r@@ sp+4], mov_rdi_r13, call_0xffffffffffff4f@@ 00, test_eax_eax, je_0x1@@ 1b, mov_byte_ptr_[rsp@@ ]_1, call_0xffffffffffff4a@@ 9f, mov_r14_qword_ptr_[rsp+0x10], mov_rsi_rax, mov_rdi_r14, call_0x50@@ df, mov_rdx_rax, lea_rdi_[rsp+0x@@ 24], mov_rcx_r13, mov_rsi_r14, call_0x6@@ 3@@ 1c, mov_qword_ptr_[rsp+0x18]_rax, cmp_rax_-1, je_0x8e, cmp_rax@@ _-2, je_0xa4, test_rax_rax, jne_0xc3, mov_qword_ptr_[rsp+0x1@@ 8]_1, mov_rax_qword_ptr_[rsp+0x10], cmp_byte_ptr_[rax]_0, jne_0x@@ f4, mov_r14d_dword_ptr_[rsp+0x@@ 24], test_r14d_r14d, jne_0xc7, mov_rdi_r13, mov_byte_ptr_[rsp+0x@@ 20]_1, call_0xffffffffffff4e@@ 78, test_eax_eax, je_6, mov_byte_ptr_[r@@ sp]_0, mov_byte_ptr_[rsp+0x@@ c]_1, test_r14d_r14d, jne_0xffffffffffffff@@ 3c, mov_rax_qword_ptr_[rsp+0x48], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ ce, add_rsp_0x50, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, mov_qword_ptr_[rsp+0x1@@ 8]_1, mov_byte_ptr_[rsp+0x@@ 20]_0, mov_byte_ptr_[rsp+0x@@ c]_1, mov_r14d_dword_ptr_[rsp+0x@@ 24], jmp_0xfffffffffffffef1, mov_rdi_qword_ptr_[rsp+0x10], call_0xffffffffffff4@@ 9c@@ b, mov_qword_ptr_[rsp+0x18]_rax, mov_byte_ptr_[rsp+0x@@ 20]_0, mov_byte_ptr_[rsp+0x@@ c]_1, mov_r14d_dword_ptr_[rsp+0x@@ 24], jmp_0xfffffffffffffe@@ cb, mov_r14d_dword_ptr_[rsp+0x@@ 24], jmp_0xffffffffffffff63, lea_rcx_[rip+0x@@ 1c@@ 9e@@ 7], mov_edx_0x@@ 96, lea_rsi_[rip+0x1c@@ 80@@ 8], lea_rdi_[rip+0x1c@@ 80@@ b], call_0xffffffffffff4a@@ 34, lea_rcx_[rip+0x@@ 1c@@ 9c@@ 8], mov_edx_0x@@ b3, lea_rsi_[rip+0x1c@@ 7e@@ 9], lea_rdi_[rip+0x1c@@ 8@@ 1a], call_0xffffffffffff4a@@ 15, lea_rcx_[rip+0x@@ 1c@@ 9a@@ 9], mov_edx_0x@@ b2, lea_rsi_[rip+0x1c@@ 7c@@ a], lea_rdi_[rip+0x1c@@ 7e@@ 4], call_0xffffffffffff4@@ 9f@@ 6, call_0xffffffffffff4@@ 96@@ 1
endbr64, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, mov_edi_0x10, sub_rsp_8, call_0x5c@@ 5b, mov_rdx_qword_ptr_[rbx+8], mov_qword_ptr_[rax+@@ 8]_rbp, mov_qword_ptr_[rax]_rdx, mov_qword_ptr_[rbx+8]_rax, add_rsp_8, pop_rbx, pop_rbp, ret
endbr64, mov_r9d_esi, mov_r8d_esi, movzx_eax_byte_ptr_[rdi], lea_rdx_[rip+0x1c@@ 7b@@ c], and_r9d@@ _0x20, and_r8d@@ _0x8@@ 000000, and_esi@@ _2, lea_rcx_[r@@ di+1], test_al_al, je_0x30, sub_eax@@ _0x21, cmp_al_0x5c, ja_0x1@@ a, movzx_eax_al, movsxd_rax_dword_ptr_[rdx+rax*4], add_rax_rdx, jmp_rax, movzx_eax_byte_ptr_[r@@ di+1], mov_rdi_rcx, lea_rcx_[r@@ di+1], test_al_al, jne_0xffffffffffffffd4, xor_eax_eax, ret
endbr64, mov_edi_0x10, jmp_0x5@@ d6@@ 7
endbr64, push_r13, mov_r13_rdi, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_r12_qword_ptr_[rdi], test_r12_r12, je_0x7d, mov_rbp_r12, mov_eax_dword_ptr_[rbp+8], mov_r12_qword_ptr_[r12], test_eax_eax, je_0xa4, cmp_eax_1, jne_0x52, cmp_qword_ptr_[rbp+0x@@ 20]_0, mov_r8_qword_ptr_[r@@ bp+0x10], je_0x3f, xor_ebx_ebx, jmp_0x15, inc_rbx, cmp_rbx_qword_ptr_[r@@ bp+0x20], jae_0x@@ 28, lea_rax_[rbx+r@@ bx*8], lea_rdi_[r@@ 8@@ +rax*8], test_dword_ptr_[r@@ di]@@ _0x8@@ 000000, je_0xffffffffffffffe9, add_rdi_8, inc_rbx, call_0x1@@ 44@@ 00, mov_r8_qword_ptr_[r@@ bp+0x10], cmp_rbx_qword_ptr_[r@@ bp+0x20], jb_0xffffffffffffff@@ dc, mov_rdi_r8, call_0xffffffffffff@@ 46@@ 3e, mov_rdi_rbp, call_0xffffffffffff@@ 46@@ 36, test_r12_r12, jne_0xffffffffffffff@@ 8e, mov_rbx_qword_ptr_[r@@ 13+8], test_rbx_rbx, je_0x21, mov_rbp_rbx, mov_rdi_qword_ptr_[rbp+8], mov_rbx_qword_ptr_[rbx], call_0xffffffffffff@@ 46@@ 16, mov_rdi_rbp, call_0xffffffffffff4@@ 60@@ e, test_rbx_rbx, jne_0xffffffffffffffe6, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_rdi_r13, pop_r13, jmp_0xffffffffffff@@ 4@@ 5f@@ 7, mov_rdi_qword_ptr_[rbp+0x10], call_0x1@@ 65@@ c, mov_rdi_rbp, call_0xffffffffffff4@@ 5e@@ 4, test_r12_r12, jne_0xffffffffffffff@@ 3c, jmp_0xffffffffffffffa@@ a
endbr64, push_r14, mov_r14_rdi, push_r13, lea_r13_[r@@ ip-0x@@ 54@@ 2], push_r12, push_rbp, mov_ebp_edx, and_edx@@ _0x10000000, push_rbx, mov_rbx_rsi, je_9, mov_r13_qword_ptr_[rip+0x2@@ 5e@@ 1e], mov_edx_ebp, mov_rsi_rbx, mov_rdi_r14, call_r13, test_eax_eax, sete_r8b, test_ebp@@ _0x4@@ 0000000, jne_0x23, movzx_ecx_byte_ptr_[r@@ bx], test_cl_cl, je_0x1c, test_eax_eax, je_0x54, mov_r12_rbx, mov_eax_ecx, inc_rbx, movzx_ecx_byte_ptr_[r@@ bx], cmp_al_0x2f, je_0x1f, test_cl_cl, jne_0xffffffffffffffef, xor_r8d_r8d, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_eax_r8d, pop_r14, ret, movzx_ecx_byte_ptr_[r@@ bx+1], mov_r12_rbx, inc_rbx, cmp_cl@@ _0x2f, je_0xfffffffffffffff@@ 3, mov_edx_ebp, mov_rsi_rbx, mov_rdi_r14, call_r13, movzx_ecx_byte_ptr_[r@@ 12+1], test_cl_cl, jne_0xffffffffffffffb8, test_eax_eax, sete_r8b, jmp_0xffffffffffffffca, pop_rbx, pop_rbp, pop_r12, mov_r8d_1, pop_r13, mov_eax_r8d, pop_r14, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x18, mov_rbx_qword_ptr_[rdi], test_rbx_rbx, je_0x1@@ 7a, mov_edx_dword_ptr_[rbx+8], mov_r14_rsi, xor_r12d_r12d, test_edx_edx, jne_0x@@ d9, test_r12_r12, je_0x1@@ 35, mov_r13d_dword_ptr_[r@@ bx+0xc], mov_r15_qword_ptr_[r@@ bx+0x10], mov_eax_r13d, and_eax_8, mov_dword_ptr_[rsp+0xc]_eax, mov_rbp_r14, mov_rsi_rbp, mov_rdi_r12, call_0xffffffffffff@@ 45@@ 3a, mov_rsi_r12, mov_rdi_r15, call_0x1@@ 10@@ f, test_rax_rax, jne_0x2f, mov_eax_dword_ptr_[rsp+0xc], test_eax_eax, je_0x4f, mov_esi_0x2f, mov_rdi_r12, call_0xffffffffffff4@@ 6b@@ 5, test_rax_rax, je_0x3d, mov_byte_ptr_[rax]_0, mov_rsi_r12, mov_rdi_r15, call_0x10@@ e2, test_rax_rax, je_0xffffffffffffff@@ d5, xor_ebp_ebp, mov_rdi_r12, call_0xffffffffffff4@@ 47@@ 3, mov_eax_dword_ptr_[rbx+0xc], add_rsp_0x18, shr_eax@@ _0x1d, xor_eax_1, pop_rbx, and_eax_1, xor_eax@@ _ebp, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, test_r13d@@ _0x4@@ 0000000, jne_0x21, mov_esi_0x2f, mov_rdi_rbp, call_0xffffffffffff@@ 46@@ 3f, test_rax_rax, je_0xf, lea_rbp@@ _[rax+1], jmp_0xffffffffffffff71, mov_rax_qword_ptr_[rbx], test_rax_rax, je_0x9a, mov_rbx_rax, mov_edx_dword_ptr_[rbx+8], test_edx_edx, je_0xffffffffffffff@@ 34, mov_r13_qword_ptr_[r@@ bx+0x20], mov_rbp_qword_ptr_[r@@ bx+0x10], test_r13_r13, je_0xffffffffffffffdb, add_rbp_8, xor_r15d_r15d, jmp_0x35, xor_r8d_r8d, xor_ecx_ecx, xor_edx_edx, mov_rsi_r14, mov_rdi_rbp, call_0x14@@ 1e@@ 3, test_eax_eax, sete_al, test_al_al, jne_0xffffffffffffff@@ 5f, inc_r15, add_rbp@@ _0x48, cmp_r13@@ _r15, je_0xffffffffffffff@@ 9f, mov_edx_dword_ptr_[r@@ bp-8], test_edx@@ _0x8@@ 000000, jne_0xffffffffffffffcc, mov_rdi_qword_ptr_[rbp], mov_rsi_r14, call_0xfffffffffffffd@@ e3, jmp_0xffffffffffffffd5, mov_rdi_r14, call_0xffffffffffff4@@ 54@@ 5, lea_rdi_[rax+1], call_0x58@@ 7c, mov_r12_rax, jmp_0xfffffffffffffebd, mov_ebp_1, jmp_0xffffffffffffff0d, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret
endbr64, push_r15, push_r14, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, push_rbp, mov_ebp_edx, push_rbx, sub_rsp_8, and_edx@@ _0x1@@ 8@@ 000000, mov_rbx_qword_ptr_[rdi], je_0xd5, mov_esi_ebp, mov_rdi_r13, call_0xfffffffffffffb@@ d2, test_al_al, je_0xc3, test_rbx_rbx, je_0xc, cmp_dword_ptr_[rbx+@@ 8]_1, je_0x1@@ ec, mov_edi_0x28, call_0x5@@ 9b@@ 1, mov_rbx_rax, mov_dword_ptr_[rax+@@ 8]_1, mov_dword_ptr_[rax+0x@@ c]_ebp, mov_rax_qword_ptr_[r12], mov_qword_ptr_[r12@@ ]_rbx, mov_qword_ptr_[rbx]_rax, mov_r14_qword_ptr_[r@@ bx+0x20], mov_rdi_qword_ptr_[rbx+0x10], cmp_r14@@ _qword_ptr_[r@@ bx+0x18], je_0x1@@ d0, lea_rax_[r@@ 14+1], mov_qword_ptr_[rbx+0x20]_rax, lea_rax_[r@@ 14+r@@ 14*8], lea_r15_[r@@ di+rax*8], mov_dword_ptr_[r15@@ ]_ebp, test_ebp@@ _0x8@@ 000000, je_0x1@@ 79, mov_r12d_ebp, sar@@ _r12d@@ _3, and_r12d@@ _2, or_r12d@@ _9, and_ebp@@ _8, je_0x2@@ 09, mov_rdi_r13, call_0xffffffffffff44@@ 48, mov_rbp_rax, jmp_0x1b, cmp_byte_ptr_[r@@ 13+r@@ bp-@@ 1]@@ _0x2f, lea_rax_[r@@ bp-1], jne_0x2@@ 3e, mov_rbp_rax, test_rbp_rbp, jne_0xffffffffffffffea, mov_qword_ptr_[rbx+0x20]@@ _r14, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, test_rbx_rbx, je_0xd, mov_edx_dword_ptr_[rbx+8], test_edx_edx, je_0xae, mov_edi_0x28, call_0x58@@ f3, mov_rbx_rax, mov_dword_ptr_[rax+8]_0, mov_dword_ptr_[rax+0x@@ c]_ebp, mov_eax_ebp, and_eax_0x10, lea_rdx_[rip-0x@@ 8f@@ b], lea_rcx_[rip-0x@@ 92@@ 2], cmove@@ _rcx_rdx, lea_rax_[rip-0x@@ 8e@@ d], lea_rdx_[rip-0x@@ 7f@@ 4], cmove_rdx_rax, lea_r8_[rip-0x@@ 94@@ f], xor_esi_esi, xor_edi_edi, call_0x10@@ bd, mov_qword_ptr_[rbx+0x10]_rax, mov_rax_qword_ptr_[r12], mov_qword_ptr_[r12@@ ]_rbx, mov_qword_ptr_[rbx]_rax, mov_rdi_r13, call_0x5@@ 92@@ 6, and_ebp@@ _0x1@@ 0000@@ 002, mov_r12_rax, cmp_ebp@@ _0x10000000, je_0x4a, mov_rdi_qword_ptr_[rbx+0x10], mov_rsi_r12, call_0x1@@ 76@@ 9, cmp_r12_rax, je_0xffffffffffffff@@ 55, add_rsp_8, pop_rbx, pop_rbp, mov_rdi_r12, pop_r12, pop_r13, pop_r14, pop_r15, jmp_0xffffffffffff@@ 4@@ 1b@@ a, mov_eax_dword_ptr_[rbx+0xc], xor_eax@@ _ebp, test_eax@@ _0x6@@ 0000@@ 0@@ 18, je_0xffffffffffffff@@ ad, jmp_0xffffffffffffff4c, mov_rdx_rax, mov_rcx_rax, jmp_0xf, inc_rcx, mov_byte_ptr_[rcx@@ -1]_al, test_al_al, je_0xffffffffffffff@@ a8, mov_rdx_rsi, movzx_eax_byte_ptr_[rdx], lea_rsi_[rdx@@ +1], cmp_al_0x5c, jne_0xffffffffffffffea, cmp_byte_ptr_[rdx+@@ 1]_0, je_0x14, movzx_eax_byte_ptr_[rdx+1], lea_rsi_[rdx@@ +2], jmp_0xffffffffffffffda, inc_rcx, mov_byte_ptr_[rcx@@ -1]@@ _0x5c, jmp_0xffffffffffffffd3, and_ebp@@ _0x4@@ 000000, jne_0x@@ ca, mov_qword_ptr_[r15+@@ 8]_r13, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_eax_dword_ptr_[rbx+0xc], xor_eax@@ _ebp, test_eax@@ _0x2@@ 0000000, je_0xfffffffffffffe@@ 32, jmp_0xfffffffffffffe@@ 0a, test_rdi_rdi, je_0x3d, movabs_rax_0x1@@ 2f@@ 68@@ 4b@@ da@@ 12@@ f@@ 68@@ 3, cmp_r14_rax, ja_0x5@@ 5, mov_rax_r14, shr_rax_1, lea_r14_[r@@ 14@@ +rax+1], mov_qword_ptr_[rbx+0x1@@ 8]_r14, lea_rsi_[r@@ 14+r@@ 14*8], shl_rsi_3, call_0x56@@ 2d, mov_qword_ptr_[rbx+0x10]_rax, mov_r14_qword_ptr_[r@@ bx+0x20], mov_rdi_rax, jmp_0xfffffffffffffd@@ fb, test_r14_r14, mov_eax_1, mov_edx_0x4@@ 8, cmove@@ _r14@@ _rax, mov_rax_rdx, mul@@ _r14, set@@ o@@ _dl, movzx_edx_dl, test_rax_rax, js@@ _7, test_rdx_rdx, je_0xffffffffffffff@@ ba, call_0x5@@ 80@@ 1, lea_rdi_[r@@ 15+8], mov_edx_r12d, mov_rsi_r13, call_0x1@@ 3c@@ 9e, mov_ebp_eax, test_ebp_ebp, je_0xfffffffffffffe@@ 19, mov_rax_qword_ptr_[rbx+0x20], lea_r14@@ _[rax-1], jmp_0xfffffffffffffe@@ 07, mov_rdi_r13, call_0x57@@ ad, mov_edi_0x10, mov_r13_rax, call_0x55@@ 50, mov_rdx_qword_ptr_[r12+8], mov_qword_ptr_[rax+@@ 8]_r13, mov_qword_ptr_[rax]_rdx, mov_qword_ptr_[r12+8]_rax, jmp_0xffffffffffffff16, lea_rdi_[r@@ bp+@@ 7], call_0x55@@ 2c, mov_r14_rax, mov_rdx_rbp, mov_rsi_r13, mov_rdi_rax, call_0xffffffffffff4@@ 3a@@ b, add_rbp@@ _r14, mov_eax_0x3@@ f@@ 29, mov_dword_ptr_[rbp]@@ _0x2@@ a@@ 2e@@ 2f@@ 28, mov_word_ptr_[r@@ bp+@@ 4]_ax, mov_byte_ptr_[rbp+@@ 6]_0, lea_rdi_[r@@ 15+8], mov_edx_r12d, mov_rsi_r14, call_0x1@@ 3c@@ 15, mov_rdi_r14, mov_ebp_eax, call_0xffffffffffff4@@ 00@@ b, jmp_0xffffffffffffff6@@ f
endbr64, push_r15, xor_r15d_r15d, push_r14, xor_r14d_r14d, push_r13, mov_r13d_r8d, push_r12, mov_r12_rsi, push_rbp, mov_ebp_r8d, push_rbx, mov_rbx_rdx, sub_rsp_0x48, mov_qword_ptr_[rsp+8]_rdi, mov_dword_ptr_[rsp+0x20]@@ _ecx, mov_qword_ptr_[rsp+0x10]_r9, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, lea_rax_[rsp+0x30], mov_qword_ptr_[rsp+0x30]_0, mov_qword_ptr_[rsp+0x18]_rax, jmp_0x12, mov_byte_ptr_[r14+r@@ 15]@@ _r8b, inc_r15, mov_rax_qword_ptr_[rbx+8], cmp_rax_qword_ptr_[r@@ bx+0x10], jae_0x@@ 31, lea_rsi_[rax+1], mov_qword_ptr_[rbx+@@ 8]_rsi, movzx_r8d_byte_ptr_[r@@ ax], cmp_qword_ptr_[rsp+0x@@ 30]@@ _r15, jne_0xffffffffffffffde, mov_rsi_qword_ptr_[rsp+0x18], mov_rdi_r14, mov_dword_ptr_[rsp]_r8d, call_0x5@@ 5b0, mov_r14_rax, mov_r8d_dword_ptr_[rsp], jmp_0xffffffffffffffc4, mov_rdi_rbx, call_0xffffffffffff3f@@ 1d, mov_r8d_eax, cmp_eax_-1, jne_0xffffffffffffffcf, mov_eax_dword_ptr_[rbx], and_eax_0x20, mov_dword_ptr_[rsp+0x18]_eax, mov_ebx_eax, call_0xffffffffffff3f@@ 85, mov_qword_ptr_[rsp+0x28]_rax, mov_dword_ptr_[rsp+0x24]_0, test_ebx_ebx, je_0x16, mov_eax_dword_ptr_[rax], test_eax_eax, mov_dword_ptr_[rsp+0x18]_eax, setne_al, movzx_eax_al, neg_eax, mov_dword_ptr_[rsp+0x24]_eax, mov_rdi_r14, lea_rsi_[r@@ 15+1], call_0x54@@ 54, mov_byte_ptr_[rax+r@@ 15]@@ _r13b, mov_r14_rax, test_r15_r15, je_0xf5, xor_ebx_ebx, cmp_byte_ptr_[r@@ ax+r@@ 15@@ -1]@@ _r13b, setne_bl, add_rbx@@ _r15, mov_edi_0x10, add_rbx_rax, call_0x5@@ 3c@@ a, mov_rdx_qword_ptr_[r12+8], mov_qword_ptr_[rax+@@ 8]_r14, mov_qword_ptr_[rax]_rdx, mov_qword_ptr_[r12+8]_rax, cmp_r14_rbx, jae_0x@@ 5d, movzx_r13d@@ _bpl, add_r13@@ _r13, mov_rsi_r14, jmp_0xa, cmp_rbx_r14, je_0x49, movzx_eax_byte_ptr_[r14], mov_r15_r14, inc@@ _r14, cmp_al@@ _bpl, jne_0xffffffffffffffee, mov_qword_ptr_[rsp]_rsi, call_0xffffffffffff44@@ f8, mov_rcx_qword_ptr_[rax], mov_rsi_qword_ptr_[rsp], test@@ _word_ptr_[r@@ cx+r@@ 13]@@ _0x2000, jne_0x55, mov_byte_ptr_[r@@ 15]_0, mov_rcx_qword_ptr_[rsp+0x10], mov_edx_dword_ptr_[rsp+0x20], mov_rax_qword_ptr_[rsp+8], mov_rdi_r12, call_rax, mov_rsi_r14, cmp_rbx_r14, jne_0xffffffffffffffbb, mov_rax_qword_ptr_[rsp+0x28], mov_edx_dword_ptr_[rsp+0x18], mov_dword_ptr_[rax]_edx, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x6b, mov_eax_dword_ptr_[rsp+0x24], add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rax_[r@@ 14-1], cmp_rsi_rax, jne_0x11, jmp_0xffffffffffffffbb, dec@@ _r15, cmp_r15@@ _rsi, je_0xffffffffffffff@@ ae, movzx_eax_byte_ptr_[r@@ 15-1], test_byte_ptr_[rcx@@ +rax*2+1]_0x20, jne_0xffffffffffffffee, jmp_0xffffffffffffff89, mov_edi_0x10, call_0x5@@ 2e@@ b, mov_rdx_qword_ptr_[r12+8], mov_qword_ptr_[rax+@@ 8]_r14, mov_qword_ptr_[rax]_rdx, mov_qword_ptr_[r12+8]_rax, jmp_0xffffffffffffff81, call_0xffffffffffff3@@ fb@@ 0
endbr64, push_r12, mov_r12_rsi, push_rbp, push_rbx, mov_ebx_r8d, sub_rsp_0x10, cmp_byte_ptr_[rdx]@@ _0x2d, mov_qword_ptr_[rsp+8]_rdi, je_0x5e, lea_rsi_[rip+0x19@@ bf@@ 6], mov_rdi_rdx, mov_dword_ptr_[rsp+4]@@ _ecx, call_0xffffffffffff4@@ 2f@@ 6, test_rax_rax, mov_ecx_dword_ptr_[rsp+4], mov_rbp_rax, je_0x70, mov_rsi_r12, lea_rdi_[rip-0x@@ dd@@ 5], lea_r9_[r@@ sp+8], movsx_r8d@@ _bl, mov_rdx_rbp, call_0xfffffffffffffd@@ 8f, mov_rdi_rbp, mov_r12d_eax, call_0xffffffffffff3e@@ d4, test_eax_eax, jne_0x46, add_rsp_0x10, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, cmp_byte_ptr_[rdx+@@ 1]_0, jne_0xffffffffffffffa0, mov_rdx_qword_ptr_[rip+0x2@@ 57@@ 2b], lea_r9_[r@@ sp+8], movsx_r8d@@ _r8b, lea_rdi_[rip-0x@@ e@@ 25], call_0xfffffffffffffd@@ 4b, add_rsp_0x10, pop_rbx, mov_r12d_eax, pop_rbp, mov_eax_r12d, pop_r12, ret, mov_r12d_0xffffffff, jmp_0xffffffffffffffb@@ 6
endbr64, mov_eax_dword_ptr_[rdi+0x18], mov_edx_5, and_eax_0xf000, cmp_eax_0x8000, je_0x4a, cmp_eax_0x4000, je_0x8@@ 3, cmp_eax_0xa@@ 000, je_0x98, cmp_eax_0x6@@ 000, je_0x9d, cmp_eax_0x2@@ 000, je_0x52, cmp_eax@@ _0x1000, je_0x9b, cmp_eax_0x@@ c@@ 000, je_0x60, lea_rsi_[rip+0x1b@@ f@@ 38], xor_edi_edi, jmp_0xffffffffffff@@ 3e@@ 45, cmp_qword_ptr_[rdi+0x@@ 30]_0, jne_0x13, lea_rsi_[rip+0x1b@@ eb@@ 5], xor_edi_edi, jmp_0xffffffffffff@@ 3e@@ 30, lea_rsi_[rip+0x1b@@ eb@@ 7], xor_edi_edi, jmp_0xffffffffffff@@ 3e@@ 1f, lea_rsi_[rip+0x1b@@ ed@@ 7], xor_edi_edi, jmp_0xffffffffffff@@ 3e@@ 07, lea_rsi_[rip+0x1b@@ e@@ 9c], xor_edi_edi, jmp_0xffffffffffff@@ 3d@@ f7, lea_rsi_[rip+0x1b@@ ed@@ 3], xor_edi_edi, jmp_0xffffffffffff@@ 3d@@ e7, lea_rsi_[rip+0x1b@@ e8@@ 6], xor_edi_edi, jmp_0xffffffffffff@@ 3@@ dd@@ 7, lea_rsi_[rip+0x1b@@ e@@ 84], xor_edi_edi, jmp_0xffffffffffff@@ 3d@@ c7, lea_rsi_[rip+0x1b@@ e@@ 9e], xor_edi_edi, jmp_0xffffffffffff@@ 3d@@ b@@ 7
endbr64, sub_rsp_8, call_0x1@@ 8, test_rax_rax, je_7, add_rsp_8, ret, call_0x5@@ 36@@ 9
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0x18, mov_qword_ptr_[rsp+8]_rdx, call_0xffffffffffffe@@ ff@@ 3, mov_r13_rax, mov_rdi_rax, call_0xfffffffffffff0@@ 48, sub_r13@@ _r12, lea_rdx_[r@@ 13+rax], mov_rbx_rax, mov_rdi_rbp, mov_qword_ptr_[rsp]_rdx, call_0xffffffffffff3d@@ 71, test_rbx_rbx, mov_rdx_qword_ptr_[rsp], mov_r13_rax, je_0x32, cmp_byte_ptr_[r@@ 12@@ +rdx@@ -1]_0x2f, je_0xa2, xor_ebx_ebx, mov_r15d@@ _0, cmp_byte_ptr_[rbp]@@ _0x2f, mov_eax@@ _0x2f, cmovne@@ _r15d_eax, setne_bl, jmp_0x24, xor_ebx_ebx, mov_r15d@@ _0, cmp_byte_ptr_[rbp]@@ _0x2f, mov_eax@@ _0x2e, cmove_r15d_eax, sete_bl, lea_rdi_[r@@ dx+r@@ 13+1], add_rdi_rbx, mov_qword_ptr_[rsp]_rdx, call_0xffffffffffff3f@@ 4c, mov_r14_rax, test_rax_rax, je_0x33, mov_rdx_qword_ptr_[rsp], mov_rdi_rax, mov_rsi_r12, call_0xffffffffffff40@@ 45, mov_byte_ptr_[rax]@@ _r15b, lea_rdi_[rax+r@@ bx], mov_rax_qword_ptr_[rsp+8], test_rax_rax, je_5, mov_qword_ptr_[rax]@@ _rdi, mov_rdx_r13, mov_rsi_rbp, call_0xffffffffffff40@@ 26, mov_byte_ptr_[rax]_0, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_rax_r14, pop_r14, pop_r15, ret, xor_ebx_ebx, xor_r15d_r15d, jmp_0xffffffffffffff9@@ b
endbr64, mov_rax_qword_ptr_[rip+0x25@@ 4c@@ 5], ret
endbr64, mov_rsi_rdi, xor_edi_edi, jmp_0xffffffffffff@@ 3b@@ f@@ 7
endbr64, sub_rsp_0x28, xor_edi_edi, mov_rsi_rsp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xffffffffffff3b@@ d3, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], mov_rax_qword_ptr_[rsp], mov_rdx_qword_ptr_[rsp+8], jne_7, add_rsp_0x28, ret, call_0xffffffffffff3c@@ 7@@ 0
endbr64, xor_esi_esi, sub_rsp_8, call_0xffffffffffff3f@@ 16, mov_rsi_rax, mov_eax_1, test_rsi_rsi, je_0x1f, cmp_byte_ptr_[rsi@@ ]_0x4@@ 3, je_0x21, mov_ecx_6, lea_rdi_[rip+0x1b@@ ce@@ f], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, setne_al, add_rsp_8, ret, xor_eax_eax, cmp_byte_ptr_[rsi+@@ 1]_0, jne_0xffffffffffffffdb, add_rsp_8, ret
endbr64, mov_rax_rdi, ror_rax@@ _3, xor_edx_edx, div_rsi, mov_rax_rdx, ret
endbr64, cmp_rsi@@ _rdi, sete_al, ret
push_rbx, mov_rbx_rdi, mov_rdi_rsi, mov_rsi_qword_ptr_[rbx+0x10], call_qword_ptr_[r@@ bx+0x30], cmp_qword_ptr_[rbx+0x1@@ 0]_rax, jbe_0xffffffffffff@@ 40@@ 9d, shl_rax_4, add_rax_qword_ptr_[r@@ bx], pop_rbx, ret
push_r14, mov_r14_rdx, push_r13, mov_r13d_ecx, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, push_rbx, call_0xffffffffffffff@@ bc, mov_qword_ptr_[r14]_rax, mov_rsi_qword_ptr_[rax], test_rsi_rsi, je_0x7f, mov_rbx_rax, cmp_rsi@@ _rbp, je_0xce, mov_rdi_rbp, call_qword_ptr_[r12+0x@@ 38], test_al_al, je_0x5e, mov_rax_qword_ptr_[rbx], test_r13b_r13b, je_0x61, mov_rdx_qword_ptr_[rbx+8], test_rdx_rdx, je_0x9d, movdqu_xmm0_xmmword_ptr_[r@@ dx], movups_xmmword_ptr_[r@@ bx@@ ]_xmm0, mov_qword_ptr_[rdx]_0, mov_rcx_qword_ptr_[r12+0x@@ 48], mov_qword_ptr_[rdx+@@ 8]_rcx, mov_qword_ptr_[r12+0x@@ 48]_rdx, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rsi_qword_ptr_[rax], cmp_rsi@@ _rbp, je_0x2a, mov_rdi_rbp, call_qword_ptr_[r12+0x@@ 38], test_al_al, jne_0x1e, mov_rbx_qword_ptr_[rbx+8], mov_rax_qword_ptr_[rbx+8], test_rax_rax, jne_0xffffffffffffffe1, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rdx_qword_ptr_[rbx+8], mov_rax_qword_ptr_[rdx], test_r13b_r13b, je_0xffffffffffffffe9, mov_rcx_qword_ptr_[rdx+8], mov_qword_ptr_[rbx+@@ 8]_rcx, mov_qword_ptr_[rdx]_0, mov_rcx_qword_ptr_[r12+0x@@ 48], mov_qword_ptr_[rdx+@@ 8]_rcx, mov_qword_ptr_[r12+0x@@ 48]_rdx, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_qword_ptr_[rbx]_0, jmp_0xffffffffffffffb4, mov_rax_rsi, jmp_0xffffffffffffff4@@ 4
mov_rax_qword_ptr_[rdi], lea_rdx_[rip+0x@@ 1bb@@ e6], cmp_rax_rdx, je_0x6b, movss_xmm0@@ _dword_ptr_[r@@ ax+8], comi@@ ss@@ _xmm0_xmmword_ptr_[r@@ ip+0x@@ 1bb@@ e9], jbe_0x@@ 53, movss@@ _xmm1@@ _dword_ptr_[rip+0x@@ 1bb@@ e3], comi@@ ss@@ _xmm1_xmm0, jbe_0x@@ 46, movss@@ _xmm1@@ _dword_ptr_[r@@ ax+0xc], comi@@ ss@@ _xmm1_xmmword_ptr_[r@@ ip+0x@@ 1bb@@ d6], jbe_0x@@ 38, movss@@ _xmm1@@ _dword_ptr_[r@@ ax], comi@@ ss@@ _xmm1_xmmword_ptr_[r@@ ip+0x@@ 1bb@@ cd], jb@@ _0x2b, add@@ ss@@ _xmm1@@ _dword_ptr_[rip+0x@@ 1bb@@ b7], movss@@ _xmm2@@ _dword_ptr_[r@@ ax+4], comi@@ ss@@ _xmm2_xmm1, jbe_0x@@ 19, movss@@ _xmm3@@ _dword_ptr_[rip+0x@@ 1bb@@ b5], comi@@ ss@@ _xmm3@@ _xmm2, jb@@ _0xc, comi@@ ss@@ _xmm0_xmm1, mov_eax_1, ja_0x1@@ 1, mov_qword_ptr_[rdi]_rdx, xor_eax_eax, ret, mov_eax_1, ret
movaps@@ _xmm1_xmm0, test_sil_sil, jne_0x4a, test_rdi_rdi, js@@ _0xf8, pxor_xmm0_xmm0, cvtsi2ss_xmm0@@ _rdi, div@@ ss@@ _xmm0_xmm1, xor_r8d_r8d, comi@@ ss@@ _xmm0_xmmword_ptr_[r@@ ip+0x@@ 1bb@@ 70], jae_0x@@ d7, comi@@ ss@@ _xmm0_xmmword_ptr_[r@@ ip+0x@@ 1bb@@ 67], jb_0x@@ ec, sub@@ ss_xmm0@@ _dword_ptr_[rip+0x@@ 1bb@@ 59], cvtt@@ ss@@ 2si@@ _rdi@@ _xmm0, bt@@ c@@ _rdi@@ _0x3f, cmp_rdi@@ _0xa, mov_r8d@@ _0xa, cmovae@@ _r8@@ _rdi, movabs@@ _r9@@ _0x@@ aaaa@@ aaaa@@ aaaaaaab, or@@ _r8@@ _1, cmp_r8@@ _-1, je_0x6f, mov_rax_r8, mul@@ _r9, mov_rcx_r8, mov_rax_rdx, shr_rax_1, and_rdx@@ _0xfffffffffffffff@@ e, add_rax_rdx, sub_rcx_rax, mov_rax_rcx, cmp_r8@@ _9, jbe_0x@@ 38, test_rcx_rcx, je_0x38, mov_edi_0x10, mov_esi_9, mov_ecx_3, jmp_0xb, add_rdi_8, test_rdx_rdx, je_0x1e, add_rcx@@ _2, mov_rax_r8, xor_edx_edx, div_rcx, add_rsi_rdi, mov_rax_rdx, cmp_r8@@ _rsi, ja_0xffffffffffffff@@ e2, test_rax_rax, jne_0x13, add_r8@@ _2, cmp_r8@@ _-1, jne_0xffffffffffffff@@ 9b, xor_r8d_r8d, mov_rax_r8, ret, mov_rax_r8, shr_rax@@ _0x3d, setne_al, bt@@ _r8@@ _0x3c, movzx_eax_al, jb_0xffffffffffffff@@ e7, test_rax_rax, jne_0xffffffffffffffe2, mov_rax_r8, ret, mov_rax_rdi, shr_rax_1, and_edi_1, or_rax@@ _rdi, pxor_xmm0_xmm0, cvtsi2ss_xmm0@@ _rax, add@@ ss@@ _xmm0_xmm0, jmp_0xfffffffffffffefe, cvtt@@ ss@@ 2si@@ _rdi@@ _xmm0, jmp_0xffffffffffffff2@@ a
push_r15, push_r14, mov_r14_rdi, push_r13, mov_r13d_edx, push_r12, mov_r12_rsi, push_rbp, push_rbx, sub_rsp_8, mov_rbp_qword_ptr_[r@@ si], cmp_rbp@@ _qword_ptr_[r@@ si+8], jb_0x1@@ 9, jmp_0x@@ e0, add_rbp_0x10, cmp_qword_ptr_[r@@ 12+@@ 8]_rbp, jbe_0x@@ cf, mov_r15_qword_ptr_[r@@ bp], test_r15_r15, je_0xffffffffffffffea, mov_rbx_qword_ptr_[r@@ bp+8], test_rbx_rbx, jne_0x1a, jmp_0x5@@ 6, mov_rcx_qword_ptr_[rax+8], mov_qword_ptr_[rdx+@@ 8]_rcx, mov_qword_ptr_[rax+8]_rdx, test_rbx_rbx, je_0x3c, mov_r15_qword_ptr_[rbx], mov_rdi_r14, mov_rsi_r15, call_0xfffffffffffffc@@ b6, cmp_qword_ptr_[rax]_0, mov_rdx_rbx, mov_rbx_qword_ptr_[rbx+8], jne_0xffffffffffffffd6, mov_qword_ptr_[rax]@@ _r15, inc_qword_ptr_[r@@ 14+0x18], mov_qword_ptr_[rdx]_0, mov_rax_qword_ptr_[r14+0x@@ 48], mov_qword_ptr_[rdx+8]_rax, mov_qword_ptr_[r14+0x@@ 48]_rdx, test_rbx_rbx, jne_0xffffffffffffffc8, mov_r15_qword_ptr_[r@@ bp], mov_qword_ptr_[rbp@@ +8]_0, test_r13b_r13b, jne_0xffffffffffffff@@ 7e, mov_rsi_r15, mov_rdi_r14, call_0xfffffffffffffc@@ 6a, cmp_qword_ptr_[rax]_0, mov_rbx_rax, je_0x56, mov_rax_qword_ptr_[r14+0x@@ 48], test_rax_rax, je_0x56, mov_rdx_qword_ptr_[rax+8], mov_qword_ptr_[r14+0x@@ 48]_rdx, mov_rdx_qword_ptr_[rbx+8], mov_qword_ptr_[rax]@@ _r15, mov_qword_ptr_[rax+8]_rdx, mov_qword_ptr_[rbx+8]_rax, mov_qword_ptr_[rbp]_0, add_rbp_0x10, dec@@ _qword_ptr_[r@@ 12+0x18], cmp_qword_ptr_[r@@ 12+@@ 8]_rbp, ja_0xffffffffffffff@@ 3d, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_1, pop_r15, ret, mov_qword_ptr_[rax]@@ _r15, inc_qword_ptr_[r@@ 14+0x18], jmp_0xffffffffffffffc5, mov_edi_0x10, call_0xffffffffffff3@@ 9f@@ a, test_rax_rax, jne_0xffffffffffffffa7, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret
endbr64, mov_rax_qword_ptr_[rdi+0x10], ret
endbr64, mov_rax_qword_ptr_[rdi+0x18], ret
endbr64, mov_rax_qword_ptr_[rdi+0x20], ret
endbr64, mov_rcx_qword_ptr_[rdi], mov_rsi_qword_ptr_[r@@ di+8], xor_r8d_r8d, cmp_rcx_rsi, jb@@ _0x10, jmp_0x41, add_rcx_0x10, cmp_rcx_rsi, jae_0x@@ 35, cmp_qword_ptr_[rcx@@ ]_0, je_0xfffffffffffffff@@ 3, mov_rax_qword_ptr_[r@@ cx+8], mov_edx_1, test_rax_rax, je_0x11, mov_rax_qword_ptr_[rax+8], inc_rdx, test_rax_rax, jne_0xfffffffffffffff6, cmp_r8@@ _rdx, cmovb@@ _r8@@ _rdx, add_rcx_0x10, cmp_rcx_rsi, jb_0xffffffffffffff@@ cf, mov_rax_r8, ret
endbr64, mov_rcx_qword_ptr_[rdi], mov_rsi_qword_ptr_[r@@ di+8], xor_edx_edx, xor_r8d_r8d, cmp_rcx_rsi, jb@@ _0x16, jmp_0x40, add_rcx_0x10, cmp_rcx_rsi, jae_0x@@ 2e, cmp_qword_ptr_[rcx@@ ]_0, je_0xfffffffffffffff@@ 3, mov_rax_qword_ptr_[r@@ cx+8], inc@@ _r8, inc_rdx, test_rax_rax, je_0xffffffffffffffe4, mov_rax_qword_ptr_[rax+8], inc_rdx, test_rax_rax, jne_0xfffffffffffffff6, add_rcx_0x10, cmp_rcx_rsi, jb_0xffffffffffffff@@ d6, xor_eax_eax, cmp_qword_ptr_[rdi+0x1@@ 8]_r8, je_@@ 3, ret, cmp_qword_ptr_[rdi+0x@@ 20]_rdx, sete_al, ret
endbr64, push_r13, push_r12, xor_r12d_r12d, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_8, mov_rcx_qword_ptr_[rdi], mov_rsi_qword_ptr_[r@@ di+8], mov_r8_qword_ptr_[r@@ di+0x20], mov_rbx_qword_ptr_[rdi+0x10], mov_r13_qword_ptr_[r@@ di+0x18], cmp_rcx_rsi, jb@@ _0xf, jmp_0x40, add_rcx_0x10, cmp_rcx_rsi, jae_0x@@ 35, cmp_qword_ptr_[rcx@@ ]_0, je_0xfffffffffffffff@@ 3, mov_rax_qword_ptr_[r@@ cx+8], mov_edx_1, test_rax_rax, je_0x11, mov_rax_qword_ptr_[rax+8], inc_rdx, test_rax_rax, jne_0xfffffffffffffff6, cmp_r12@@ _rdx, cmovb@@ _r12@@ _rdx, add_rcx_0x10, cmp_rcx_rsi, jb_0xffffffffffffff@@ cf, mov_rcx_r8, lea_rdx_[rip+0x1b@@ 6f@@ c], mov_esi_1, mov_rdi_rbp, xor_eax_eax, call_0xffffffffffff3a@@ 20, xor_eax_eax, mov_rcx_rbx, lea_rdx_[rip+0x1b@@ 6f@@ 9], mov_esi_1, mov_rdi_rbp, call_0xffffffffffff3a@@ 07, test_r13_r13, js_0x6@@ 7, pxor_xmm0_xmm0, cvtsi2sd_xmm0@@ _r13, mulsd_xmm0_qword_ptr_[rip+0x@@ 1b@@ 76@@ c], test_rbx_rbx, js_0x7@@ a, pxor_xmm1_xmm1, cvtsi2sd_xmm1@@ _rbx, divsd_xmm0_xmm1, mov_rcx_r13, mov_rdi_rbp, lea_rdx_[rip+0x1b@@ 6e@@ d], mov_esi_1, mov_eax_1, call_0xffffffffffff3@@ 9c@@ 3, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, mov_rcx_r12, pop_r12, lea_rdx_[rip+0x1b@@ 6a@@ b], mov_esi_1, xor_eax_eax, pop_r13, jmp_0xffffffffffff@@ 3@@ 9a0, mov_rax_r13, mov_rdx_r13, shr_rax_1, and_edx_1, or_rax_rdx, pxor_xmm0_xmm0, cvtsi2sd_xmm0_rax, addsd_xmm0_xmm0, mulsd_xmm0_qword_ptr_[rip+0x@@ 1b@@ 6f@@ 4], test_rbx_rbx, jns_0xffffffffffffff@@ 8a, mov_rax_rbx, shr_rax_1, and_ebx_1, or_rax@@ _rbx, pxor_xmm1_xmm1, cvtsi2sd_xmm1_rax, addsd@@ _xmm1_xmm1, jmp_0xffffffffffffff7@@ 8
endbr64, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, push_rbx, call_0xfffffffffffff97@@ 2, mov_rsi_qword_ptr_[rax], test_rsi_rsi, je_0x24, mov_rbx_rax, jmp_5, mov_rsi_qword_ptr_[rbx], cmp_rsi@@ _rbp, je_0x25, mov_rdi_rbp, call_qword_ptr_[r12+0x@@ 38], test_al_al, jne_0x16, mov_rbx_qword_ptr_[rbx+8], test_rbx_rbx, jne_0xffffffffffffffe5, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret, mov_rbp_qword_ptr_[rbx], pop_rbx, mov_rax_rbp, pop_rbp, pop_r12, ret
endbr64, cmp_qword_ptr_[rdi+0x@@ 20]_0, je_0x37, sub_rsp_8, mov_rax_qword_ptr_[rdi], mov_rdx_qword_ptr_[rdi+8], cmp_rax_rdx, jb@@ _0x10, jmp_0xffffffffffff@@ 3@@ 9b@@ 9, add_rax_0x10, cmp_rax_rdx, jae_0x@@ 20, mov_r8_qword_ptr_[rax], test_r8_r8, je_0xfffffffffffffff1, mov_rax_r8, add_rsp_8, ret, xor_r8d_r8d, mov_rax_r8, ret, jmp_0xffffffffffff@@ 3@@ 98@@ d
endbr64, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, sub_rsp_8, call_0xfffffffffffff8c@@ 0, mov_rdx_rax, jmp_0xd, test_rdx_rdx, je_0x13, mov_rcx_qword_ptr_[rdx], mov_rdx_qword_ptr_[rdx+8], cmp_rcx@@ _rbx, jne_0xfffffffffffffff1, test_rdx_rdx, jne_0x2c, mov_rdx_qword_ptr_[rbp+8], jmp_0xe, mov_r8_qword_ptr_[rax], test_r8_r8, jne_0xe, add_rax_0x10, cmp_rdx_rax, ja@@ _0xfffffffffffffff@@ 1, xor_r8d_r8d, add_rsp_8, pop_rbx, mov_rax_r8, pop_rbp, ret, mov_r8_qword_ptr_[r@@ dx], add_rsp_8, pop_rbx, mov_rax_r8, pop_rbp, ret
endbr64, mov_r9_qword_ptr_[r@@ di], xor_eax_eax, cmp_qword_ptr_[rdi+@@ 8]_r9, jbe_0x@@ 34, cmp_qword_ptr_[r@@ 9]_0, jne_0xd, add_r9@@ _0x10, cmp_qword_ptr_[rdi+@@ 8]_r9, ja@@ _0xfffffffffffffff@@ 2, ret, mov_rcx_r9, jmp_0x19, mov_r8_qword_ptr_[r@@ cx], inc_rax, mov_qword_ptr_[rsi@@ +rax*8@@ -@@ 8]_r8, mov_rcx_qword_ptr_[r@@ cx+8], test_rcx_rcx, je_0xffffffffffffffdb, cmp_rdx_rax, ja_0xffffffffffffff@@ e9, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_r14_qword_ptr_[r@@ di], cmp_qword_ptr_[rdi+@@ 8]_r14, jbe_0x@@ 59, mov_r15_rdi, mov_rbp_rsi, mov_r13_rdx, xor_r12d_r12d, mov_rdi_qword_ptr_[r14], test_rdi_rdi, jne_0x23, add_r14_0x10, cmp_qword_ptr_[r@@ 15+@@ 8]_r14, ja@@ _0xfffffffffffffff0, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rbx_r14, jmp_0x14, mov_rbx_qword_ptr_[rbx+8], inc_r12, test_rbx_rbx, je_0xffffffffffffffcd, mov_rdi_qword_ptr_[rbx], mov_rsi_r13, call_rbp, test_al_al, jne_0xffffffffffffffea, jmp_0xffffffffffffffc9, xor_r12d_r12d, jmp_0xffffffffffffffc@@ 4
endbr64, movzx_ecx_byte_ptr_[r@@ di], xor_edx_edx, test_cl_cl, je_0x21, mov_rax_rdx, shl_rax_5, sub_rax_rdx, inc_rdi, add_rax_rcx, movzx_ecx_byte_ptr_[r@@ di], xor_edx_edx, div_rsi, test_cl_cl, jne_0xffffffffffffffe6, mov_rax_rdx, ret
endbr64, movabs_rax_0x3@@ f8@@ 00000000@@ 00000, mov_qword_ptr_[rdi]_rax, movabs_rax_0x3@@ fb@@ 4@@ fd@@ f4@@ 3f@@ 4c@@ cc@@ cd, mov_qword_ptr_[rdi@@ +8]_rax, mov_byte_ptr_[r@@ di+0x1@@ 0]_0, ret
endbr64, push_r15, lea_rax_[rip-0x@@ 90@@ d], mov_r15_rsi, push_r14, mov_r14_r8, push_r13, mov_r13_rdi, mov_edi@@ _0x50, push_r12, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rcx, sub_rsp_8, test_rdx_rdx, cmove@@ _rbp_rax, test_rcx_rcx, lea_rax_[rip-0x@@ 9@@ 1e], cmove_rbx_rax, call_0xffffffffffff34@@ ee, mov_r12_rax, test_rax_rax, je_0x97, test_r15_r15, lea_rax_[rip+0x@@ 1b@@ 3f@@ 3], cmove@@ _r15@@ _rax, lea_rdi_[r@@ 12+0x28], mov_qword_ptr_[r12+0x@@ 28]@@ _r15, call_0xfffffffffffff7f@@ 5, test_al_al, je_0x8e, movzx_esi_byte_ptr_[r@@ 15+0x10], movss_xmm0@@ _dword_ptr_[r@@ 15+8], mov_rdi_r13, call_0xfffffffffffff85@@ a, mov_qword_ptr_[r12+0x10]_rax, mov_r13_rax, test_rax_rax, je_0x6a, mov_esi_0x10, mov_rdi_rax, call_0xffffffffffff3@@ 3e0, mov_qword_ptr_[r12]_rax, test_rax_rax, je_0x54, shl_r13@@ _4, add_r13_rax, mov_qword_ptr_[r12+@@ 8]_r13, mov_qword_ptr_[r12+0x1@@ 8]_0, mov_qword_ptr_[r12+0x@@ 20]_0, mov_qword_ptr_[r12+0x@@ 30]@@ _rbp, mov_qword_ptr_[r12+0x@@ 3@@ 8]_rbx, mov_qword_ptr_[r12+0x@@ 4@@ 0]_r14, mov_qword_ptr_[r12+0x@@ 48]_0, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_r12, call_0xffffffffffff30@@ 4d, xor_r12d_r12d, jmp_0xffffffffffffffd@@ 9
endbr64, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_r12_qword_ptr_[rdi], cmp_r12@@ _qword_ptr_[r@@ di+8], jb@@ _0x18, jmp_0x8@@ 7, add_r12_0x10, cmp_qword_ptr_[r@@ bp+@@ 8]_r12, jbe_0x@@ 73, cmp_qword_ptr_[r@@ 12]_0, je_0xfffffffffffffff1, mov_rbx_qword_ptr_[r@@ 12+8], mov_rdx_qword_ptr_[rbp+0x@@ 40], test_rbx_rbx, jne_0xe, jmp_0x36, mov_rbx_rax, test_rdx_rdx, je_0xb, mov_rdi_qword_ptr_[rbx], call_rdx, mov_rdx_qword_ptr_[rbp+0x@@ 40], mov_rax_qword_ptr_[rbx+8], mov_rcx_qword_ptr_[rbp+0x@@ 48], mov_qword_ptr_[rbx]_0, mov_qword_ptr_[rbx+@@ 8]_rcx, mov_qword_ptr_[rbp+0x@@ 4@@ 8]_rbx, test_rax_rax, jne_0xffffffffffffffd5, test_rdx_rdx, je_8, mov_rdi_qword_ptr_[r12], call_rdx, mov_qword_ptr_[r12]_0, mov_qword_ptr_[r12@@ +8]_0, add_r12_0x10, cmp_qword_ptr_[r@@ bp+@@ 8]_r12, ja_0xffffffffffffff@@ 91, pop_rbx, mov_qword_ptr_[rbp+0x@@ 18]_0, mov_qword_ptr_[rbp+0x@@ 20]_0, pop_rbp, pop_r12, ret
endbr64, push_r12, mov_r12_rdi, push_rbp, push_rbx, cmp_qword_ptr_[rdi+0x@@ 40]_0, mov_rbp_qword_ptr_[rdi], mov_rax_qword_ptr_[rdi+8], je_0x5c, cmp_qword_ptr_[rdi+0x@@ 20]_0, je_0x55, cmp_rbp_rax, jb@@ _0x16, jmp_0x8@@ 7, add_rbp_0x10, cmp_rax_rbp, jbe_0x@@ 38, mov_rdi_qword_ptr_[rbp], test_rdi_rdi, je_0xfffffffffffffff@@ 0, mov_rbx_rbp, jmp_0xe, mov_rdi_qword_ptr_[rbx], call_qword_ptr_[r12+0x@@ 40], mov_rbx_qword_ptr_[rbx+8], test_rbx_rbx, jne_0xfffffffffffffff1, mov_rax_qword_ptr_[r12+8], add_rbp_0x10, cmp_rax_rbp, ja_0xffffffffffffff@@ cc, mov_rbp_qword_ptr_[r@@ 12], cmp_rbp_rax, jae_0x@@ 36, mov_rbx_qword_ptr_[r@@ bp+8], test_rbx_rbx, je_0x1a, mov_rdi_rbx, mov_rbx_qword_ptr_[rbx+8], call_0xffffffffffff2e@@ f9, test_rbx_rbx, jne_0xfffffffffffffff1, add_rbp_0x10, cmp_qword_ptr_[r@@ 12+@@ 8]_rbp, ja_0xffffffffffffff@@ d6, mov_rbx_qword_ptr_[r@@ 12+0x@@ 48], test_rbx_rbx, je_0x1d, mov_rdi_rbx, mov_rbx_qword_ptr_[rbx+8], call_0xffffffffffff2@@ ec@@ 9, test_rbx_rbx, jne_0xfffffffffffffff1, mov_rdi_qword_ptr_[r12], call_0xffffffffffff2e@@ bb, pop_rbx, pop_rbp, mov_rdi_r12, pop_r12, jmp_0xffffffffffff@@ 2@@ ea@@ f
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rdi, mov_rdi_rsi, push_rbx, sub_rsp_0x68, mov_r12_qword_ptr_[r@@ bp+0x28], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x58]_rax, xor_eax_eax, movzx_esi_byte_ptr_[r@@ 12+0x10], movss_xmm0@@ _dword_ptr_[r@@ 12+8], call_0xfffffffffffff5f@@ b, test_rax_rax, je_0x103, mov_rbx_rax, cmp_qword_ptr_[rbp+0x@@ 10]_rax, je_0xe6, mov_esi_0x10, mov_rdi_rax, call_0xffffffffffff3@@ 178, mov_qword_ptr_[rsp]_rax, test_rax_rax, je_0xdc, mov_qword_ptr_[rsp+0x10]_rbx, shl_rbx_4, add_rbx_rax, mov_rax_qword_ptr_[rbp+0x30], mov_r13_rsp, mov_qword_ptr_[rsp+0x30]_rax, mov_rax_qword_ptr_[rbp+0x@@ 38], xor_edx_edx, mov_qword_ptr_[rsp+0x38]_rax, mov_rax_qword_ptr_[rbp+0x40], mov_rsi_rbp, mov_qword_ptr_[rsp+0x40]_rax, mov_rax_qword_ptr_[rbp+0x@@ 48], mov_rdi_r13, mov_qword_ptr_[rsp+0x2@@ 8]_r12, mov_qword_ptr_[rsp+8]_rbx, mov_qword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rsp+0x20]_0, mov_qword_ptr_[rsp+0x48]_rax, call_0xfffffffffffff6@@ 9f, mov_r12d_eax, test_al_al, jne_0x7d, mov_rax_qword_ptr_[rsp+0x48], mov_edx_1, mov_qword_ptr_[rbp+0x@@ 48]_rax, mov_rsi_r13, mov_rdi_rbp, call_0xfffffffffffff67@@ f, test_al_al, je_0xffffffffffff@@ 34@@ 51, xor_edx_edx, mov_rsi_r13, mov_rdi_rbp, call_0xfffffffffffff66@@ a, test_al_al, je_0xffffffffffff@@ 34@@ 3c, mov_rdi_qword_ptr_[rsp], call_0xffffffffffff2d@@ 99, mov_rax_qword_ptr_[rsp+0x58], xor_rax_qword_ptr_fs:[0x28], jne_0x65, add_rsp_0x68, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, mov_r12d_1, jmp_0xffffffffffffffd6, xor_r12d_r12d, jmp_0xffffffffffffffc9, mov_rdi_qword_ptr_[rbp], call_0xffffffffffff2d@@ 54, mov_rax_qword_ptr_[rsp], mov_qword_ptr_[rbp]_rax, mov_rax_qword_ptr_[rsp+8], mov_qword_ptr_[rbp+8]_rax, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rbp+0x10]_rax, mov_rax_qword_ptr_[rsp+0x18], mov_qword_ptr_[rbp+0x18]_rax, mov_rax_qword_ptr_[rsp+0x48], mov_qword_ptr_[rbp+0x@@ 48]_rax, jmp_0xffffffffffffff8f, call_0xffffffffffff2e@@ e@@ 1
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, test_rsi_rsi, je_0xffffffffffff@@ 3@@ 38@@ d, mov_r12_rsp, mov_r13_rdx, xor_ecx_ecx, mov_rdx_r12, mov_rbx_rdi, mov_rbp_rsi, call_0xfffffffffffff2e@@ 8, test_rax_rax, je_0x30, xor_r8d_r8d, test_r13_r13, je_6, mov_qword_ptr_[r13]_rax, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x2@@ 38, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, mov_eax_r8d, pop_r13, ret, mov_rax_qword_ptr_[rbx+0x18], test_rax_rax, js_0x7@@ 9, pxor_xmm1_xmm1, cvtsi2@@ ss@@ _xmm1@@ _rax, mov_rax_qword_ptr_[rbx+0x10], mov_rdx_qword_ptr_[rbx+0x28], test_rax_rax, js_0x8@@ d, pxor_xmm0_xmm0, cvtsi2ss_xmm0@@ _rax, mul@@ ss_xmm0@@ _dword_ptr_[r@@ dx+8], comi@@ ss@@ _xmm1_xmm0, ja_0x@@ 9d, mov_r12_qword_ptr_[r@@ sp], cmp_qword_ptr_[r@@ 12]_0, je_0x105, mov_rax_qword_ptr_[rbx+0x48], test_rax_rax, je_0x1@@ 10, mov_rdx_qword_ptr_[rax+8], mov_qword_ptr_[rbx+0x4@@ 8]_rdx, mov_rdx_qword_ptr_[r12+8], mov_qword_ptr_[rax]_rbp, mov_qword_ptr_[rax+8]_rdx, mov_r8d_1, mov_qword_ptr_[r12+8]_rax, inc_qword_ptr_[r@@ bx+0x20], jmp_0xffffffffffffff65, mov_rdx_rax, shr_rdx_1, and_eax_1, or_rdx_rax, pxor_xmm1_xmm1, cvtsi2@@ ss@@ _xmm1@@ _rdx, mov_rax_qword_ptr_[rbx+0x10], mov_rdx_qword_ptr_[rbx+0x28], add@@ ss@@ _xmm1_xmm1, test_rax_rax, jns_0xffffffffffffff@@ 7f, mov_rcx_rax, shr_rcx@@ _1, and_eax_1, or@@ _rcx_rax, pxor_xmm0_xmm0, cvtsi2ss_xmm0@@ _rcx, add@@ ss@@ _xmm0_xmm0, mul@@ ss_xmm0@@ _dword_ptr_[r@@ dx+8], comi@@ ss@@ _xmm1_xmm0, jbe_0xffffffffffffff@@ 6f, lea_rdi_[r@@ bx+0x28], call_0xfffffffffffff2d@@ b, mov_rdx_qword_ptr_[rbx+0x28], mov_rax_qword_ptr_[rbx+0x10], movss@@ _xmm2@@ _dword_ptr_[r@@ dx+8], test_rax_rax, js_0x@@ b6, pxor_xmm0_xmm0, cvtsi2ss_xmm0@@ _rax, mov_rax_qword_ptr_[rbx+0x18], test_rax_rax, js@@ _0x78, pxor_xmm1_xmm1, cvtsi2@@ ss@@ _xmm1@@ _rax, movaps_xmm3@@ _xmm2, mul@@ ss@@ _xmm3@@ _xmm0, comi@@ ss@@ _xmm1_xmm3, jbe_0xffffffffffffff@@ 25, cmp_byte_ptr_[rdx+0x1@@ 0]_0, mul@@ ss_xmm0@@ _dword_ptr_[r@@ dx+0xc], je_0x9c, comi@@ ss@@ _xmm0_xmmword_ptr_[r@@ ip+0x@@ 1a@@ e@@ 97], jb_0x@@ 9f, mov_r8d_0xffffffff, jmp_0xfffffffffffffea@@ 1, mov_qword_ptr_[r12@@ ]_rbp, mov_r8d_1, inc_qword_ptr_[r@@ bx+0x20], inc_qword_ptr_[r@@ bx+0x18], jmp_0xfffffffffffffe@@ 84, mov_edi_0x10, call_0xffffffffffff2f@@ 1b, test_rax_rax, je_0xffffffffffffff@@ ca, jmp_0xfffffffffffffeef, mov_rcx_rax, shr_rcx@@ _1, and_eax_1, or@@ _rcx_rax, pxor_xmm1_xmm1, cvtsi2@@ ss@@ _xmm1@@ _rcx, add@@ ss@@ _xmm1_xmm1, jmp_0xffffffffffffff7a, mov_rcx_rax, shr_rcx@@ _1, and_eax_1, or@@ _rcx_rax, pxor_xmm0_xmm0, cvtsi2ss_xmm0@@ _rcx, add@@ ss@@ _xmm0_xmm0, jmp_0xffffffffffffff40, mul@@ ss@@ _xmm0_xmm2, jmp_0xffffffffffffff66, comi@@ ss@@ _xmm0_xmmword_ptr_[r@@ ip+0x@@ 1a@@ df@@ 5], jae_0x@@ 39, cvtt@@ ss@@ 2si@@ _rsi@@ _xmm0, mov_rdi_rbx, call_0xfffffffffffffc@@ 1f, test_al_al, je_0xffffffffffffff@@ 4f, xor_ecx_ecx, mov_rdx_r12, mov_rsi_rbp, mov_rdi_rbx, call_0xfffffffffffff0@@ b7, test_rax_rax, je_0xfffffffffffffe@@ 39, jmp_0xffffffffffff@@ 3@@ 13@@ 7, sub@@ ss_xmm0@@ _dword_ptr_[rip+0x@@ 1a@@ db@@ 4], cvtt@@ ss@@ 2si@@ _rsi@@ _xmm0, bt@@ c@@ _rsi@@ _0x3f, jmp_0xffffffffffffffbc, call_0xffffffffffff2c@@ 3@@ c
endbr64, push_rbx, mov_rbx_rsi, sub_rsp_0x10, mov_rdx_rsp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xfffffffffffffd@@ 41, cmp_eax_-1, je_0x29, test_eax_eax, mov_rax_rbx, cmove_rax@@ _qword_ptr_[rsp], mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x13, add_rsp_0x10, pop_rbx, ret, xor_eax_eax, jmp_0xffffffffffffffe1, call_0xffffffffffff2b@@ d@@ c
endbr64, push_r12, mov_ecx_1, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x10, mov_rdx_rsp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xffffffffffffe@@ ff@@ 9, mov_r12_rax, test_rax_rax, je_0x10, mov_rax_qword_ptr_[rsp], dec@@ _qword_ptr_[r@@ bx+0x20], cmp_qword_ptr_[rax]_0, je_0x28, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ a7, add_rsp_0x10, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, mov_rax_qword_ptr_[rbx+0x18], dec_rax, mov_qword_ptr_[rbx+0x18]_rax, js_0x@@ dd, pxor_xmm0_xmm0, cvtsi2ss_xmm0@@ _rax, mov_rax_qword_ptr_[rbx+0x10], mov_rdx_qword_ptr_[rbx+0x28], test_rax_rax, js_0x@@ ed, pxor_xmm1_xmm1, cvtsi2@@ ss@@ _xmm1@@ _rax, mul@@ ss@@ _xmm1@@ _dword_ptr_[r@@ dx], comi@@ ss@@ _xmm1_xmm0, jbe_0xffffffffffffff@@ 9f, lea_rdi_[r@@ bx+0x28], call_0xfffffffffffff0@@ 77, mov_rax_qword_ptr_[rbx+0x10], mov_rdx_qword_ptr_[rbx+0x28], test_rax_rax, js@@ _0x10@@ 7, pxor_xmm0_xmm0, cvtsi2ss_xmm0@@ _rax, mov_rax_qword_ptr_[rbx+0x18], test_rax_rax, js_0x@@ d1, pxor_xmm1_xmm1, cvtsi2@@ ss@@ _xmm1@@ _rax, movss@@ _xmm2@@ _dword_ptr_[r@@ dx], mul@@ ss@@ _xmm2_xmm0, comi@@ ss@@ _xmm2_xmm1, jbe_0xffffffffffffff@@ 59, cmp_byte_ptr_[rdx+0x1@@ 0]_0, mul@@ ss_xmm0@@ _dword_ptr_[r@@ dx+4], jne_7, mul@@ ss_xmm0@@ _dword_ptr_[r@@ dx+8], comi@@ ss@@ _xmm0_xmmword_ptr_[r@@ ip+0x@@ 1a@@ c@@ 36], jae_0x@@ da, cvtt@@ ss@@ 2si@@ _rsi@@ _xmm0, mov_rdi_rbx, call_0xfffffffffffffa@@ 5c, test_al_al, jne_0xffffffffffffff@@ 27, mov_rbp_qword_ptr_[rbx+0x@@ 48], test_rbp_rbp, je_0x19, mov_rdi_rbp, mov_rbp_qword_ptr_[r@@ bp+8], call_0xffffffffffff2@@ 8d@@ 9, test_rbp_rbp, jne_0xfffffffffffffff1, mov_qword_ptr_[rbx+0x@@ 48]_0, jmp_0xfffffffffffffef9, mov_rdx_rax, shr_rdx_1, and_eax_1, or_rdx_rax, pxor_xmm0_xmm0, cvtsi2ss_xmm0@@ _rdx, mov_rax_qword_ptr_[rbx+0x10], mov_rdx_qword_ptr_[rbx+0x28], add@@ ss@@ _xmm0_xmm0, test_rax_rax, jns_0xffffffffffffff@@ 1f, mov_rcx_rax, shr_rcx@@ _1, and_eax_1, or@@ _rcx_rax, pxor_xmm1_xmm1, cvtsi2@@ ss@@ _xmm1@@ _rcx, add@@ ss@@ _xmm1_xmm1, jmp_0xffffffffffffff09, mov_rcx_rax, shr_rcx@@ _1, and_eax_1, or@@ _rcx_rax, pxor_xmm1_xmm1, cvtsi2@@ ss@@ _xmm1@@ _rcx, add@@ ss@@ _xmm1_xmm1, jmp_0xffffffffffffff25, mov_rcx_rax, shr_rcx@@ _1, and_eax_1, or@@ _rcx_rax, pxor_xmm0_xmm0, cvtsi2ss_xmm0@@ _rcx, add@@ ss@@ _xmm0_xmm0, jmp_0xfffffffffffffeef, sub@@ ss_xmm0@@ _dword_ptr_[rip+0x@@ 1a@@ b@@ 54], cvtt@@ ss@@ 2si@@ _rsi@@ _xmm0, bt@@ c@@ _rsi@@ _0x3f, jmp_0xffffffffffffff1f, call_0xffffffffffff2@@ 9d@@ 9
endbr64, push_rbp, mov_ebp_edi, call_0xffffffffffff2b@@ c9, test_eax_eax, js@@ _0xa, pop_rbp, ret, mov_edi_ebp, call_0xffffffffffff2@@ 8d@@ 6, test_eax_eax, sete_al, movzx_eax_al, pop_rbp, ret
endbr64, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, lea_rax_[r@@ bx+0x18], sub_rsp_8, mov_rsi_qword_ptr_[rsi], mov_rdx_qword_ptr_[rbx+8], cmp_rsi_rax, je_0x22, mov_qword_ptr_[rdi@@ ]_rsi, movzx_eax_byte_ptr_[r@@ bx+0x10], mov_qword_ptr_[rbp@@ +8]_rdx, mov_byte_ptr_[rbp+0x@@ 10@@ ]_al, test_al_al, je_8, mov_eax_dword_ptr_[rbx+0x14], mov_dword_ptr_[rbp+0x@@ 14]_eax, add_rsp_8, pop_rbx, pop_rbp, ret, lea_rcx_[r@@ di+0x18], mov_rdi_rcx, call_0xffffffffffff2b@@ 09, mov_qword_ptr_[rbp]_rax, mov_rdx_qword_ptr_[rbx+8], jmp_0xffffffffffffffc@@ f
endbr64, mov_eax_edi, shr_al_5, and_eax_7, lea_rdx_[rip+0x1a@@ aa@@ d], mov_eax_dword_ptr_[rdx+rax*4], mov_ecx_edi, shr_eax@@ _cl, and_eax_1, ret
push_rax, pop_rax, lea_rcx_[rip+0x@@ 87@@ b7], mov_edx_0x@@ b3, lea_rsi_[rip+0x@@ 76@@ 38], lea_rdi_[rip+0x7@@ 66@@ 9], sub_rsp_8, call_0xfffffffffffdf@@ 86@@ 0
endbr64, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x90, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, cmp_rdi_rsi, je_0x4@@ 07, mov_rbp_rdi, mov_r12_rsi, call_0xffffffffffff28@@ 8b, cmp_rax_1, jbe_0x@@ 1d@@ 2, mov_qword_ptr_[rsp+0x10]@@ _rbp, mov_byte_ptr_[r@@ sp]_0, mov_qword_ptr_[rsp+@@ 4]_0, mov_byte_ptr_[rsp+0x@@ c]_0, mov_qword_ptr_[rsp+0x5@@ 0]_r12, mov_byte_ptr_[rsp+0x@@ 40]_0, mov_qword_ptr_[rsp+0x4@@ 4]_0, mov_byte_ptr_[rsp+0x@@ 4c]_0, lea_rbp_[rip+0x@@ 1a@@ 9f@@ 6], jmp_0x@@ f3, mov_rdx_qword_ptr_[rsp+0x10], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ bp@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0x2@@ f0, mov_qword_ptr_[rsp+0x1@@ 8]_1, movsx_eax_byte_ptr_[r@@ dx], mov_byte_ptr_[rsp+0x@@ 20]_1, mov_dword_ptr_[rsp+0x24]_eax, mov_byte_ptr_[rsp+0x@@ c]_1, mov_edi_dword_ptr_[rsp+0x@@ 24], test_edi_edi, je_0x3@@ b2, cmp_byte_ptr_[rsp+0x@@ 4c]_0, jne_0x2@@ 7f, cmp_byte_ptr_[rsp+0x@@ 40]_0, lea_r12_[rsp+0x@@ 44], jne_0x1@@ e1, mov_rdx_qword_ptr_[rsp+0x50], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ bp@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0x1@@ a9, mov_qword_ptr_[rsp+0x@@ 58]_1, movsx_eax_byte_ptr_[r@@ dx], mov_byte_ptr_[rsp+0x@@ 60]_1, mov_dword_ptr_[rsp+0x@@ 64]_eax, mov_byte_ptr_[rsp+0x@@ 4c]_1, mov_r12d_dword_ptr_[rsp+0x@@ 64], test_r12d_r12d, je_0x4@@ 9b, cmp_byte_ptr_[rsp+0x@@ 20]_0, je_0x3@@ 26, mov_edi_dword_ptr_[rsp+0x@@ 24], call_0xffffffffffff2b@@ 4c, mov_edi_r12d, mov_ebx_eax, call_0xffffffffffff2b@@ 42, sub_ebx_eax, mov_eax_ebx, test_eax_eax, jne_0x12@@ 7, mov_rax_qword_ptr_[rsp+0x18], mov_byte_ptr_[rsp+0x@@ c]_0, add_qword_ptr_[rsp+0x1@@ 0]_rax, mov_rax_qword_ptr_[rsp+0x58], mov_byte_ptr_[rsp+0x@@ 4c]_0, add_qword_ptr_[rsp+0x@@ 50]_rax, cmp_byte_ptr_[r@@ sp]_0, lea_r12_[r@@ sp+4], je_0xffffffffffffff@@ 0a, call_0xffffffffffff27@@ 44, mov_r13_qword_ptr_[rsp+0x10], mov_rsi_rax, mov_rdi_r13, call_0x2d@@ 84, mov_rdx_rax, lea_rdi_[rsp+0x@@ 24], mov_rcx_r12, mov_rsi_r13, call_0x3@@ fc@@ 1, mov_qword_ptr_[rsp+0x18]_rax, cmp_rax_-1, je_0x2@@ 03, cmp_rax@@ _-2, je_0x2@@ 39, test_rax_rax, jne_0x27, mov_qword_ptr_[rsp+0x1@@ 8]_1, mov_rax_qword_ptr_[rsp+0x10], cmp_byte_ptr_[rax]_0, jne_0x4@@ d9, mov_r8d_dword_ptr_[rsp+0x@@ 24], test_r8d_r8d, jne_0x4@@ ea, mov_rdi_r12, mov_byte_ptr_[rsp+0x@@ 20]_1, call_0xffffffffffff2b@@ 21, test_eax_eax, je_6, mov_byte_ptr_[r@@ sp]_0, mov_byte_ptr_[rsp+0x@@ c]_1, jmp_0xfffffffffffffeb7, call_0xffffffffffff2b@@ 70, mov_r14_qword_ptr_[rax], jmp_0x16, inc_rbp, inc_r12, cmp_bl@@ _dl, jne_0x2@@ 38, movzx_r13d_byte_ptr_[r@@ bp], mov_rbx_r13, test_byte_ptr_[r@@ 14+r@@ 13*@@ 2+@@ 1]_1, je_0xf, call_0xffffffffffff2b@@ 32, mov_rax_qword_ptr_[rax], movzx_ebx_byte_ptr_[r@@ ax+r@@ 13*4], movzx_r13d_byte_ptr_[r@@ 12], mov_rdx_r13, test_byte_ptr_[r@@ 14+r@@ 13*@@ 2+@@ 1]_1, je_0xf, call_0xffffffffffff2b@@ 15, mov_rax_qword_ptr_[rax], movzx_edx_byte_ptr_[r@@ ax+r@@ 13*4], test_bl_bl, jne_0xffffffffffffffb6, xor_eax_eax, sub_eax_edx, mov_rcx_qword_ptr_[rsp+0x88], xor_rcx_qword_ptr_fs:[0x28], jne_0x4@@ 4f, add_rsp_0x@@ 90, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, lea_r12_[rsp+0x@@ 44], mov_rdi_r12, call_0xffffffffffff2a@@ 68, test_eax_eax, je_0x3@@ de, mov_byte_ptr_[rsp+0x@@ 40]_1, call_0xffffffffffff2@@ 606, mov_r13@@ _qword_ptr_[rsp+0x50], mov_rsi_rax, mov_rdi_r13, call_0x2c@@ 46, mov_rdx_rax, lea_rdi_[rsp+0x@@ 64], mov_rcx_r12, mov_rsi_r13, call_0x3e@@ 83, mov_qword_ptr_[rsp+0x58]_rax, cmp_rax_-1, je_0xe5, cmp_rax@@ _-2, je_0x1@@ 1b, test_rax_rax, jne_0x25, mov_qword_ptr_[rsp+0x@@ 58]_1, mov_rax_qword_ptr_[rsp+0x50], cmp_byte_ptr_[rax]_0, jne_0x3@@ 9b, mov_esi_dword_ptr_[rsp+0x@@ 64], test_esi_esi, jne_0x3@@ ae, mov_rdi_r12, mov_byte_ptr_[rsp+0x@@ 60]_1, call_0xffffffffffff2@@ 9e@@ 5, test_eax_eax, je_7, mov_byte_ptr_[rsp+0x@@ 40]_0, mov_byte_ptr_[rsp+0x@@ 4c]_1, jmp_0xfffffffffffffdd@@ 9, cmp_byte_ptr_[rsp+0x@@ 60]_0, jne_0xfffffffffffffd@@ ca, cmp_byte_ptr_[rsp+0x@@ 20]_0, jne_0x2@@ 58, mov_rdx_qword_ptr_[rsp+0x18], mov_r8@@ _qword_ptr_[rsp+0x58], mov_rsi_qword_ptr_[rsp+0x50], mov_rdi_qword_ptr_[rsp+0x10], cmp_rdx@@ _r8, jne_0xc2, call_0xffffffffffff26@@ 95, jmp_0xfffffffffffffd@@ c7, lea_r12_[r@@ sp+4], mov_rdi_r12, call_0xffffffffffff2@@ 980, test_eax_eax, je_0x2@@ f6, mov_byte_ptr_[rsp@@ ]_1, jmp_0xfffffffffffffdd@@ b, mov_qword_ptr_[rsp+0x1@@ 8]_1, mov_byte_ptr_[rsp+0x@@ 20]_0, mov_byte_ptr_[rsp+0x@@ c]_1, jmp_0xfffffffffffffd@@ 01, mov_qword_ptr_[rsp+0x@@ 58]_1, mov_byte_ptr_[rsp+0x@@ 60]_0, mov_byte_ptr_[rsp+0x@@ 4c]_1, jmp_0xffffffffffffff70, mov_rdi_qword_ptr_[rsp+0x10], call_0xffffffffffff24@@ db, mov_qword_ptr_[rsp+0x18]_rax, mov_byte_ptr_[rsp+0x@@ 20]_0, mov_byte_ptr_[rsp+0x@@ c]_1, jmp_0xfffffffffffffc@@ bb, mov_rdi_qword_ptr_[rsp+0x50], call_0xffffffffffff24@@ bb, mov_qword_ptr_[rsp+0x58]_rax, mov_byte_ptr_[rsp+0x@@ 60]_0, mov_byte_ptr_[rsp+0x@@ 4c]_1, jmp_0xffffffffffffff2a, xor_eax_eax, jmp_0xfffffffffffffe@@ 3e, jae_0x@@ 1bd, call_0xffffffffffff2@@ 5d@@ 3, test_eax_eax, jle_0x@@ 16@@ c, mov_eax_1, jmp_0xfffffffffffffe@@ 1b, movzx_eax@@ _bl, sub_eax_edx, jmp_0xfffffffffffffe@@ 0b, cmp_byte_ptr_[rsp+0x@@ c]_0, jne_0x@@ dd, cmp_byte_ptr_[r@@ sp]_0, lea_r12_[r@@ sp+4], jne_0x3f, mov_rdx_qword_ptr_[rsp+0x10], lea_rsi_[rip+0x1a@@ 5d@@ e], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ si@@ +rax*4], shr_eax@@ _cl, test_al_1, jne_0x13@@ 1, lea_r12_[r@@ sp+4], mov_rdi_r12, call_0xffffffffffff28@@ 5e, test_eax_eax, je_0x1@@ d4, mov_byte_ptr_[rsp@@ ]_1, call_0xffffffffffff2@@ 3f@@ d, mov_rbp_qword_ptr_[rsp+0x10], mov_rsi_rax, mov_rdi_rbp, call_0x2a@@ 3d, mov_rdx_rax, lea_rdi_[rsp+0x@@ 24], mov_rcx_r12, mov_rsi_rbp, call_0x3c@@ 7a, mov_qword_ptr_[rsp+0x18]_rax, cmp_rax_-1, je_0xffffffffffffff@@ 5c, cmp_rax@@ _-2, je_0xffffffffffffff@@ 52, test_rax_rax, jne_0x25, mov_qword_ptr_[rsp+0x1@@ 8]_1, mov_rax_qword_ptr_[rsp+0x10], cmp_byte_ptr_[rax]_0, jne_0x1@@ 92, mov_ecx_dword_ptr_[rsp+0x24], test_ecx_ecx, jne_0x1@@ a5, mov_rdi_r12, mov_byte_ptr_[rsp+0x@@ 20]_1, call_0xffffffffffff27@@ dc, test_eax_eax, je_6, mov_byte_ptr_[r@@ sp]_0, mov_byte_ptr_[rsp+0x@@ c]_1, mov_edx_dword_ptr_[rsp+0x24], test_edx_edx, jne_0xffffffffffffff@@ 04, cmp_byte_ptr_[rsp+0x@@ 4c]_0, jne_0x12@@ 6, cmp_byte_ptr_[rsp+0x@@ 40]_0, lea_r12_[rsp+0x@@ 44], jne_0x@@ b5, mov_rdx_qword_ptr_[rsp+0x50], lea_rsi_[rip+0x1a@@ 4f@@ 7], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ si@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0x7b, mov_qword_ptr_[rsp+0x@@ 58]_1, movsx_eax_byte_ptr_[r@@ dx], mov_byte_ptr_[rsp+0x@@ 60]_1, mov_dword_ptr_[rsp+0x@@ 64]_eax, mov_eax_dword_ptr_[rsp+0x@@ 64], test_eax_eax, je_0xfffffffffffffc@@ c8, mov_eax_0xffffffff, jmp_0xfffffffffffffc@@ bb, cmp_byte_ptr_[rsp+0x@@ c]_0, je_0xfffffffffffffe@@ bc, cmp_byte_ptr_[rsp+0x@@ 20]_0, jne_0xffffffffffffff@@ 7c, jmp_0xfffffffffffffe@@ 80, mov_qword_ptr_[rsp+0x1@@ 8]_1, movsx_eax_byte_ptr_[r@@ dx], mov_byte_ptr_[rsp+0x@@ 20]_1, mov_dword_ptr_[rsp+0x24]_eax, mov_byte_ptr_[rsp+0x@@ c]_1, jmp_0xffffffffffffff57, mov_rdx_r8, call_0xffffffffffff24@@ 19, test_eax_eax, jns_0xfffffffffffffe@@ 52, jmp_0xffffffffffffffac, lea_r12_[rsp+0x@@ 44], mov_rdi_r12, call_0xffffffffffff2@@ 70@@ 2, test_eax_eax, je_0x78, mov_byte_ptr_[rsp+0x@@ 40]_1, call_0xffffffffffff22@@ a4, mov_rbp@@ _qword_ptr_[rsp+0x50], mov_rsi_rax, mov_rdi_rbp, call_0x2@@ 8e@@ 4, mov_rdx_rax, lea_rdi_[rsp+0x@@ 64], mov_rcx_r12, mov_rsi_rbp, call_0x3b@@ 21, mov_qword_ptr_[rsp+0x58]_rax, cmp_rax@@ _-3, ja_0xffffffffffffff@@ 63, test_rax_rax, jne_0x1d, mov_qword_ptr_[rsp+0x@@ 58]_1, mov_rax_qword_ptr_[rsp+0x50], cmp_byte_ptr_[rax]_0, jne_0x43, mov_eax_dword_ptr_[rsp+0x@@ 64], test_eax_eax, jne_0x5a, mov_byte_ptr_[rsp+0x@@ 60]_1, jmp_0xffffffffffffff2a, cmp_byte_ptr_[rsp+0x@@ 60]_0, jne_0xffffffffffffff@@ 20, jmp_0xffffffffffffff28, lea_rcx_[rip+0x@@ 1a@@ 3f@@ c], mov_edx_0x@@ 96, lea_rsi_[rip+0x1a@@ 0@@ ad], lea_rdi_[rip+0x1a@@ 0@@ b0], call_0xffffffffffff22@@ d9, lea_rcx_[rip+0x@@ 1a@@ 3@@ dd], mov_edx_0x@@ b2, lea_rsi_[rip+0x1a@@ 0@@ 8e], lea_rdi_[rip+0x1a@@ 0@@ a8], call_0xffffffffffff22@@ ba, call_0xfffffffffffff90@@ 5, call_0xffffffffffff22@@ 2@@ 0
push_r12, mov_r12_rdi, push_rbp, push_rbx, test_rdx_rdx, je_0x2e, mov_rbp_rsi, lea_rbx_[rdx@@ -1], call_0xffffffffffff26@@ 7d, movzx_ecx_byte_ptr_[r@@ bp+r@@ bx], mov_rdx_qword_ptr_[rax], mov_edx_dword_ptr_[r@@ dx@@ +rcx*4], mov_byte_ptr_[r12+r@@ bx@@ ]_dl, dec@@ _rbx, cmp_rbx@@ _-1, jne_0xffffffffffffffea, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret
push_r12, mov_r12_rdi, push_rbp, push_rbx, test_rdx_rdx, je_0x2e, mov_rbp_rsi, lea_rbx_[rdx@@ -1], call_0xffffffffffff@@ 1fa@@ d, movzx_ecx_byte_ptr_[r@@ bp+r@@ bx], mov_rdx_qword_ptr_[rax], mov_edx_dword_ptr_[r@@ dx@@ +rcx*4], mov_byte_ptr_[r12+r@@ bx@@ ]_dl, dec@@ _rbx, cmp_rbx@@ _-1, jne_0xffffffffffffffea, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret
push_r15, mov_r10_rdi, push_r14, mov_r14_rcx, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdx, sub_rsp_0x4@@ c8, mov_rax_qword_ptr_[rsp+0x@@ 500], mov_qword_ptr_[rsp]_rsi, mov_qword_ptr_[rsp+0x18]_r9, mov_qword_ptr_[rsp+0x10]_rax, mov_byte_ptr_[rsp+0x@@ 2b@@ ]@@ _r8b, mov_r13_qword_ptr_[r@@ cx+0x30], mov_r15d_dword_ptr_[r@@ cx+8], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x4@@ b8]_rax, xor_eax_eax, test_r13_r13, lea_rax_[rip+0x@@ 19@@ e4@@ 6], cmove@@ _r13_rax, cmp_r15d@@ _0xc, jle_0x@@ ae, sub_r15d@@ _0xc, movzx_eax_byte_ptr_[rbx], xor_r11d_r11d, test_al_al, je_0x51, mov_dword_ptr_[rsp+0x2c]@@ _r15d, mov_qword_ptr_[rsp+0x20]@@ _r13, mov_qword_ptr_[rsp+8]@@ _r14, mov_rbp@@ _r11, mov_r12@@ _r10, cmp_al_0x25, je_0x9b, mov_rdx_qword_ptr_[rsp], sub_rdx@@ _rbp, cmp_rdx_1, jbe_0x@@ 42, test_r12_r12, je_9, mov_byte_ptr_[r12@@ ]_al, inc_r12, inc_rbp, mov_r9_rbx, movzx_eax_byte_ptr_[r@@ 9+1], lea_rbx_[r@@ 9+1], test_al_al, jne_0xffffffffffffffce, mov_r11@@ _rbp, mov_r10@@ _r12, test_r10_r10, je_0x1b, cmp_qword_ptr_[rsp]_0, je_0x14, mov_byte_ptr_[r@@ 10]_0, jmp_0xe, xor_r11d_r11d, mov_rax_qword_ptr_[rsp+0x@@ 4b@@ 8], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ 7@@ 2b, add_rsp_0x4@@ c8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_rax@@ _r11, pop_r15, ret, test_r15d_r15d, mov_eax_0xc, cmove_r15d_eax, jmp_0xffffffffffffff50, movzx_r8d@@ _byte_ptr_[rsp+0x@@ 2b], xor_r9d_r9d, xor_r15d_r15d, movsx@@ _r10d@@ _byte_ptr_[r@@ bx+1], inc_rbx, mov_ecx_r10d, cmp_r10@@ b@@ _0x30, je_0x21, jg@@ _0x27, cmp_r10@@ b@@ _0x23, jne_0x31, movsx@@ _r10d@@ _byte_ptr_[r@@ bx+1], inc_rbx, mov_r9d_1, mov_ecx_r10d, cmp_r10@@ b@@ _0x30, jne_0xffffffffffffffe3, mov_r15d@@ _0x30, jmp_0xffffffffffffffca, cmp_r10@@ b@@ _0x5@@ e, jne_0x1c, mov_r8d_1, jmp_0xffffffffffffffbc, cmp_r10@@ b@@ _0x2d, jne_0x24, mov_r15d@@ _0x2d, jmp_0xffffffffffffffac, cmp_r10@@ b@@ _0x5f, jne_0x13@@ c, mov_r15d@@ _0x5f, jmp_0xffffffffffffff98, mov_r13d_0xffffffff, cmp_cl@@ _0x4@@ f, je_0x2c, xor_r10d_r10d, cmp_cl@@ _0x7@@ a, ja_0x3@@ 7, lea_rdi_[rip+0x1a@@ 1a@@ 2], movzx_eax@@ _cl, movsxd_rax_dword_ptr_[r@@ di@@ +rax*4], add_rax_rdi, jmp_rax, or_r13d@@ _0xffffffff, cmp_cl@@ _0x4@@ 5, jne_0xffffffffffffffd3, movzx_ecx_byte_ptr_[r@@ bx+1], inc_rbx, cmp_cl@@ _0x7@@ a, jbe_0xffffffffffffff@@ d4, lea_rax_[r@@ bx-1], lea_edx_[r@@ bx+1], mov_r10_rax, mov_ecx_edx, sub_ecx_eax, cmp_byte_ptr_[r@@ 10]@@ _0x25, lea_rax_[rax@@ -1], jne_0xfffffffffffffff1, mov_rdx_qword_ptr_[rsp], mov_eax_0, sub_rdx@@ _rbp, test_r13d_r13d, cmovns@@ _eax@@ _r13d, movsxd_rcx_ecx, cdqe, cmp_rax_rcx, mov_r14_rcx, cmovae@@ _r14@@ _rax, mov_r9_rbx, cmp_r14@@ _rdx, jae_0xfffffffffffffe@@ b0, test_r12_r12, je_0x86, cmp_rcx_rax, jae_0x@@ 4f, movsxd_rdx@@ _r13d, sub_rdx_rcx, mov_qword_ptr_[rsp+0x5@@ 0]_rcx, mov_qword_ptr_[rsp+0x48]_r9, mov_qword_ptr_[rsp+0x4@@ 0]_r10, mov_byte_ptr_[rsp+0x@@ 30]@@ _r8b, lea_rbx_[r@@ 12@@ +rdx], cmp_r15d@@ _0x30, je_0x12@@ 7a, mov_rdi_r12, mov_esi_0x20, call_0xffffffffffff@@ 1fc@@ c, mov_rcx_qword_ptr_[rsp+0x50], mov_r9_qword_ptr_[rsp+0x48], mov_r10@@ _qword_ptr_[rsp+0x40], movzx_r8d@@ _byte_ptr_[rsp+0x@@ 30], mov_r12_rbx, mov_qword_ptr_[rsp+0x4@@ 0]_r9, mov_qword_ptr_[rsp+0x30]_rcx, mov_rdx_rcx, mov_rsi_r10, mov_rdi_r12, test_r8b_r8b, je_0x10@@ 49, call_0xfffffffffffffd@@ 13, mov_rcx_qword_ptr_[rsp+0x30], mov_r9_qword_ptr_[rsp+0x40], add_r12@@ _rcx, add_rbp@@ _r14, jmp_0xfffffffffffffd@@ f0, lea_eax_[r@@ 10@@ -0x30], cmp_eax_9, ja_0xfffffffffffffe@@ f8, xor_r13d_r13d, movsx@@ _r10d@@ _byte_ptr_[r@@ bx+1], lea_rdx_[r@@ bx+1], mov_ecx_r10d, lea_eax_[r@@ 10@@ -0x30], cmp_r13d@@ _0x@@ cccccc@@ c, jg@@ _0x27, movsx_esi@@ _byte_ptr_[rbx], je_0x1c, lea_edi_[r@@ 13+r@@ 13*4], lea_r13d_[r@@ si+r@@ di*@@ 2@@ -0x30], mov_rbx_rdx, cmp_eax_9, jbe_0xffffffffffffff@@ d2, jmp_0xfffffffffffffec8, cmp_sil@@ _0x37, jle_0xffffffffffffff@@ e2, cmp_eax_9, ja@@ _0x1f, movsx@@ _r10d@@ _byte_ptr_[r@@ bx+2], mov_r13d@@ _0x7fffffff, mov_ecx_r10d, lea_eax_[r@@ 10@@ -0x30], add_rbx_2, jmp_0xffffffffffffffd2, mov_rbx_rdx, mov_r13d@@ _0x7fffffff, jmp_0xfffffffffffffe@@ 8f, call_0xffffffffffff10@@ 50, mov_r9_qword_ptr_[rsp+0x40], mov_rcx_qword_ptr_[rsp+0x30], jmp_0xffffffffffffe@@ fb@@ d, mov_rdi_r12, mov_esi_0x30, call_0xffffffffffff0d@@ 58, mov_r12_rbx, movzx_r8d@@ _byte_ptr_[rsp+0x@@ 30], mov_r10@@ _qword_ptr_[rsp+0x40], mov_r9_qword_ptr_[rsp+0x48], mov_rcx_qword_ptr_[rsp+0x50], jmp_0xffffffffffffed@@ 8c, call_0xffffffffffff0@@ 97@@ 1
endbr64, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_byte_ptr_[rsp+@@ 7]_0, push_r9, push_r8, xor_r8d_r8d, lea_r9_[r@@ sp+0x1@@ 7], call_0xffffffffffffe7@@ 97, pop_rdx, pop_rcx, mov_rdx_qword_ptr_[rsp+8], xor_rdx_qword_ptr_fs:[0x28], jne_7, add_rsp_0x18, ret, call_0xffffffffffff0@@ 90@@ b
endbr64, push_rbx, test_rdi_rdi, je_0x8b, mov_esi_0x2f, mov_rbx_rdi, call_0xffffffffffff0@@ 94@@ a, test_rax_rax, je_0x4d, lea_r8@@ _[rax+1], mov_rdx_r8, sub_rdx_rbx, cmp_rdx@@ _6, jle_0x@@ 3d, lea_rsi_[rax@@ -6], mov_ecx_7, lea_rdi_[rip+0x18@@ c@@ b8], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_dl, sbb_dl_0, test_dl_dl, jne_0x21, cmp_byte_ptr_[rax+1]@@ _0x6c, jne_0x30, cmp_byte_ptr_[r@@ 8+@@ 1]@@ _0x74, jne_0x29, cmp_byte_ptr_[r@@ 8+@@ 2]@@ _0x2d, jne_0x22, lea_rbx_[rax@@ +4], mov_qword_ptr_[rip+0x2@@ 20@@ 95@@ ]_rbx, mov_qword_ptr_[rip+0x24@@ 3a@@ 6@@ ]_rbx, mov_qword_ptr_[rip+0x2@@ 20@@ af@@ ]_rbx, pop_rbx, ret, mov_rbx_r8, mov_qword_ptr_[rip+0x24@@ 38@@ e@@ ]_rbx, mov_qword_ptr_[rip+0x2@@ 20@@ 97@@ ]_rbx, pop_rbx, ret, mov_rcx_qword_ptr_[rip+0x2@@ 20@@ a6], mov_edx_0x3@@ 7, mov_esi_1, lea_rdi_[rip+0x18@@ c@@ 15], call_0xffffffffffff0c@@ 35, call_0xffffffffffff0@@ 6c@@ 0
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, mov_rdi_rsi, sub_rsp_0xa8, mov_esi_2, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, call_0xe@@ 71, cmp_byte_ptr_[rbx]_0, mov_r14_rax, je_0x4@@ 6c, lea_r13_[rip+0x@@ 18@@ 94@@ 9], jmp_0x6@@ 4, mov_rdi_r14, call_0xffffffffffff0@@ 7@@ 9d, lea_r12_[r@@ bp+rax], cmp_rbp_rbx, jbe_0x@@ 14, call_0xffffffffffff0c@@ 3e, mov_rax_qword_ptr_[rax], movzx_edx_byte_ptr_[r@@ bp-1], test_byte_ptr_[rax+rdx*@@ 2@@ ]_8, jne_0x21, movzx_ebx_byte_ptr_[r@@ 12], test_bl_bl, je_0x7@@ c2, call_0xffffffffffff0c@@ 1f, mov_rax_qword_ptr_[rax], test_byte_ptr_[rax+r@@ bx*@@ 2@@ ]_8, je_0x7@@ b0, cmp_byte_ptr_[rbp]_0, je_0x4@@ 0f, cmp_byte_ptr_[rbp+@@ 1]_0, lea_rbx_[r@@ bp+1], je_0x4@@ 01, mov_rsi_r14, mov_rdi_rbx, call_0x1@@ 19@@ 8f, mov_rbp_rax, test_rax_rax, je_0x3@@ ea, call_0xffffffffffff0@@ 7@@ 1e, cmp_rax_1, jbe_0xffffffffffffff@@ 85, mov_qword_ptr_[rsp+0x20]@@ _rbx, mov_byte_ptr_[rsp+0x1@@ 0]_0, mov_qword_ptr_[rsp+0x1@@ 4]_0, mov_byte_ptr_[rsp+0x1@@ c]_0, lea_r12_[r@@ sp+0x14], cmp_rbp_rbx, ja_0x7@@ 1, jmp_0x5@@ 51, mov_rbx_qword_ptr_[rsp+0x20], movzx_ecx_byte_ptr_[r@@ bx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ 13@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0xdf, mov_qword_ptr_[rsp+0x2@@ 8]_1, movsx@@ _r15d@@ _byte_ptr_[rbx], mov_byte_ptr_[rsp+0x@@ 30]_1, mov_dword_ptr_[rsp+0x3@@ 4]_r15d, mov_byte_ptr_[rsp+0x1@@ c]_1, test_r15d_r15d, je_0xffffffffffff@@ 0@@ bb@@ d, mov_rbx_qword_ptr_[rsp+0x20], add_rbx@@ _qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp+0x20]@@ _rbx, mov_byte_ptr_[rsp+0x1@@ c]_0, movzx_eax_byte_ptr_[rsp+0x@@ 30], cmp_rbx_rbp, jae_0x@@ d8, cmp_byte_ptr_[rsp+0x1@@ 0]_0, je_0xffffffffffffff@@ 95, call_0xffffffffffff0@@ 67@@ b, mov_r15_qword_ptr_[rsp+0x20], mov_rsi_rax, mov_rdi_r15, call_0xcb@@ b, mov_rdx_rax, lea_rdi_[rsp+0x@@ 34], mov_rcx_r12, mov_rsi_r15, call_0x1@@ ef@@ 8, mov_qword_ptr_[rsp+0x28]_rax, cmp_rax_-1, je_0x7a, cmp_rax@@ _-2, je_0x4@@ b4, test_rax_rax, jne_0x4@@ d3, mov_qword_ptr_[rsp+0x2@@ 8]_1, mov_rbx_qword_ptr_[rsp+0x20], cmp_byte_ptr_[rbx]_0, jne_0x@@ 6a@@ a, mov_r15d_dword_ptr_[rsp+0x@@ 34], test_r15d_r15d, jne_0x@@ 6b@@ b, mov_rdi_r12, mov_byte_ptr_[rsp+0x@@ 30]_1, call_0xffffffffffff0a@@ 58, test_eax_eax, je_7, mov_byte_ptr_[rsp+0x1@@ 0]_0, mov_byte_ptr_[rsp+0x1@@ c]_1, jmp_0xffffffffffffff48, mov_rdi_r12, call_0xffffffffffff0a@@ 3d, test_eax_eax, je_0x6@@ 4d, mov_byte_ptr_[rsp+0x10@@ ]_1, jmp_0xffffffffffffff60, mov_qword_ptr_[rsp+0x2@@ 8]_1, mov_byte_ptr_[rsp+0x@@ 30]_0, mov_r15d_dword_ptr_[rsp+0x@@ 34], mov_rbx_qword_ptr_[rsp+0x20], jmp_0xffffffffffffff19, test_al_al, je_0x4@@ 0e, mov_edi_r15d, call_0xffffffffffff0@@ 7e@@ 5, test_eax_eax, sete@@ _byte_ptr_[rsp+0x@@ f], mov_qword_ptr_[rsp+0x20]@@ _rbp, mov_byte_ptr_[rsp+0x1@@ 0]_0, mov_qword_ptr_[r12]_0, mov_byte_ptr_[rsp+0x1@@ c]_0, mov_qword_ptr_[rsp+0x6@@ 0]_r14, mov_byte_ptr_[rsp+0x@@ 50]_0, mov_qword_ptr_[rsp+0x@@ 54]_0, mov_byte_ptr_[rsp+0x@@ 5c]_0, lea_rbx_[rsp+0x@@ 54], jmp_0x@@ c3, mov_rdx_qword_ptr_[rsp+0x60], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ 13@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0x3@@ 07, mov_qword_ptr_[rsp+0x6@@ 8]_1, movsx_eax_byte_ptr_[r@@ dx], mov_byte_ptr_[rsp+0x@@ 70]_1, mov_dword_ptr_[rsp+0x7@@ 4]_eax, mov_byte_ptr_[rsp+0x@@ 5c]_1, mov_ecx_dword_ptr_[rsp+0x@@ 74], test_ecx_ecx, je_0x11a, cmp_byte_ptr_[rsp+0x1@@ c]_0, jne_0x2@@ c6, cmp_byte_ptr_[rsp+0x1@@ 0]_0, jne_0x2@@ 28, mov_rdx_qword_ptr_[rsp+0x20], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ 13@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0x1@@ f4, mov_qword_ptr_[rsp+0x2@@ 8]_1, movsx_eax_byte_ptr_[r@@ dx], mov_byte_ptr_[rsp+0x@@ 30]_1, mov_dword_ptr_[rsp+0x34]_eax, mov_byte_ptr_[rsp+0x1@@ c]_1, mov_edi_dword_ptr_[rsp+0x@@ 34], test_edi_edi, je_0xffffffffffff@@ 0@@ 9d@@ 9, mov_rax_qword_ptr_[rsp+0x28], mov_byte_ptr_[rsp+0x1@@ c]_0, add_qword_ptr_[rsp+0x@@ 20]_rax, mov_rax_qword_ptr_[rsp+0x68], mov_byte_ptr_[rsp+0x@@ 5c]_0, add_qword_ptr_[rsp+0x@@ 60]_rax, cmp_byte_ptr_[rsp+0x@@ 50]_0, je_0xffffffffffffff@@ 3d, call_0xffffffffffff0@@ 4@@ 97, mov_r15@@ _qword_ptr_[rsp+0x60], mov_rsi_rax, mov_rdi_r15, call_0xa@@ d7, mov_rdx_rax, lea_rdi_[rsp+0x@@ 74], mov_rcx_rbx, mov_rsi_r15, call_0x1d@@ 14, mov_qword_ptr_[rsp+0x68]_rax, cmp_rax_-1, je_0x2@@ 46, cmp_rax@@ _-2, je_0x2@@ 74, test_rax_rax, jne_0x25, mov_qword_ptr_[rsp+0x6@@ 8]_1, mov_rax_qword_ptr_[rsp+0x60], cmp_byte_ptr_[rax]_0, jne_0x@@ 4c@@ 6, mov_esi_dword_ptr_[rsp+0x@@ 74], test_esi_esi, jne_0x4@@ d9, mov_rdi_rbx, mov_byte_ptr_[rsp+0x@@ 70]_1, call_0xffffffffffff0@@ 87@@ 6, test_eax_eax, je_7, mov_byte_ptr_[rsp+0x@@ 50]_0, mov_ecx_dword_ptr_[rsp+0x@@ 74], mov_byte_ptr_[rsp+0x@@ 5c]_1, test_ecx_ecx, jne_0xfffffffffffffe@@ f2, cmp_byte_ptr_[rsp+0x1@@ c]_0, jne_0x3@@ 52, cmp_byte_ptr_[rsp+0x1@@ 0]_0, jne_0x2@@ b4, mov_rdx_qword_ptr_[rsp+0x20], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ 13@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0x2@@ 80, mov_qword_ptr_[rsp+0x2@@ 8]_1, movsx_ebx@@ _byte_ptr_[r@@ dx], mov_byte_ptr_[rsp+0x@@ 30]_1, mov_dword_ptr_[rsp+0x3@@ 4]_ebx, mov_byte_ptr_[rsp+0x1@@ c]_1, test_ebx_ebx, je_0x14, cmp_byte_ptr_[rsp+0x@@ 30]_0, je_0xd, mov_edi_ebx, call_0xffffffffffff0@@ 5e@@ b, test_eax_eax, jne_9, cmp_byte_ptr_[rsp+0x@@ f]_0, jne_0x68, mov_qword_ptr_[rsp+0x20]@@ _rbp, mov_byte_ptr_[rsp+0x1@@ 0]_0, mov_qword_ptr_[r12]_0, mov_byte_ptr_[rsp+0x1@@ c]_0, movzx_ecx_byte_ptr_[r@@ bp], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ 13@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0x2@@ d7, mov_qword_ptr_[rsp+0x2@@ 8]_1, movsx_eax_byte_ptr_[r@@ bp], mov_byte_ptr_[rsp+0x@@ 30]_1, mov_dword_ptr_[rsp+0x34]_eax, mov_eax_dword_ptr_[rsp+0x34], test_eax_eax, je_0x13, mov_rbx_qword_ptr_[rsp+0x28], add_rbx@@ _rbp, cmp_byte_ptr_[rbx]_0, jne_0xfffffffffffffc@@ 0b, mov_byte_ptr_[rsp+0x@@ f]_0, mov_rdi_r14, call_0xffffffffffff0@@ 1a@@ 2, mov_rax_qword_ptr_[rsp+0x98], xor_rax_qword_ptr_fs:[0x28], jne_0x3@@ e0, movzx_eax_byte_ptr_[rsp+0x@@ f], add_rsp_0xa8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_r12, call_0xffffffffffff0@@ 74@@ 5, test_eax_eax, je_0x3@@ 55, mov_byte_ptr_[rsp+0x10@@ ]_1, call_0xffffffffffff0@@ 2e@@ 3, mov_r15_qword_ptr_[rsp+0x20], mov_rsi_rax, mov_rdi_r15, call_0x@@ 92@@ 3, mov_rdx_rax, lea_rdi_[rsp+0x@@ 34], mov_rcx_r12, mov_rsi_r15, call_0x1b@@ 60, mov_qword_ptr_[rsp+0x28]_rax, cmp_rax_-1, je_0xb2, cmp_rax@@ _-2, je_0xe8, test_rax_rax, jne_0x27, mov_qword_ptr_[rsp+0x2@@ 8]_1, mov_rax_qword_ptr_[rsp+0x20], cmp_byte_ptr_[rax]_0, jne_0x3@@ 12, mov_r8d_dword_ptr_[rsp+0x@@ 34], test_r8d_r8d, jne_0x3@@ 23, mov_rdi_r12, mov_byte_ptr_[rsp+0x@@ 30]_1, call_0xffffffffffff0@@ 6c0, test_eax_eax, je_7, mov_byte_ptr_[rsp+0x1@@ 0]_0, mov_byte_ptr_[rsp+0x1@@ c]_1, jmp_0xfffffffffffffd@@ 91, cmp_byte_ptr_[rsp+0x@@ 30]_0, je_0xfffffffffffffd@@ 8b, jmp_0xfffffffffffffd@@ 79, mov_rdi_rbx, call_0xffffffffffff0@@ 68@@ d, test_eax_eax, je_0x2@@ 9d, mov_byte_ptr_[rsp+0x@@ 50]_1, jmp_0xfffffffffffffd@@ 94, mov_qword_ptr_[rsp+0x6@@ 8]_1, mov_byte_ptr_[rsp+0x@@ 70]_0, mov_byte_ptr_[rsp+0x@@ 5c]_1, jmp_0xfffffffffffffc@@ f2, mov_qword_ptr_[rsp+0x2@@ 8]_1, mov_byte_ptr_[rsp+0x@@ 30]_0, jmp_0xfffffffffffffd@@ 32, mov_rdi_qword_ptr_[rsp+0x60], call_0xffffffffffff0@@ 1f@@ 3, mov_qword_ptr_[rsp+0x68]_rax, mov_byte_ptr_[rsp+0x@@ 70]_0, mov_byte_ptr_[rsp+0x@@ 5c]_1, jmp_0xfffffffffffffc@@ b4, mov_rdi_qword_ptr_[rsp+0x20], call_0xffffffffffff0@@ 1c@@ b, mov_qword_ptr_[rsp+0x28]_rax, mov_byte_ptr_[rsp+0x@@ 30]_0, jmp_0xfffffffffffffc@@ ec, mov_byte_ptr_[rsp+0x@@ f]_1, jmp_0xfffffffffffffc@@ 02, mov_rbx_qword_ptr_[rsp+0x20], mov_rdi_rbx, call_0xffffffffffff0@@ 198, mov_qword_ptr_[rsp+0x28]_rax, mov_byte_ptr_[rsp+0x@@ 30]_0, mov_r15d_dword_ptr_[rsp+0x@@ 34], jmp_0xfffffffffffffa@@ d5, mov_r15d_dword_ptr_[rsp+0x@@ 34], jmp_0xfffffffffffffb@@ 53, mov_rdi_r12, call_0xffffffffffff0@@ 5a@@ 5, test_eax_eax, je_0x1@@ b5, mov_byte_ptr_[rsp+0x10@@ ]_1, call_0xffffffffffff0@@ 14@@ 3, mov_rbx_qword_ptr_[rsp+0x20], mov_rsi_rax, mov_rdi_rbx, call_0x7@@ 83, mov_rdx_rax, lea_rdi_[rsp+0x@@ 34], mov_rcx_r12, mov_rsi_rbx, call_0x1@@ 9c0, mov_qword_ptr_[rsp+0x28]_rax, cmp_rax_-1, je_0x102, cmp_rax@@ _-2, je_0x12@@ 6, test_rax_rax, jne_0x15@@ 3, mov_qword_ptr_[rsp+0x2@@ 8]_1, mov_rax_qword_ptr_[rsp+0x20], cmp_byte_ptr_[rax]_0, jne_0x1@@ 6e, mov_ebx_dword_ptr_[rsp+0x@@ 34], test_ebx_ebx, jne_0x1@@ a5, mov_rdi_r12, mov_byte_ptr_[rsp+0x@@ 30]_1, call_0xffffffffffff0@@ 5@@ 1e, test_eax_eax, je_7, mov_byte_ptr_[rsp+0x1@@ 0]_0, mov_byte_ptr_[rsp+0x1@@ c]_1, jmp_0xfffffffffffffd@@ 03, cmp_byte_ptr_[rsp+0x@@ 30]_0, mov_ebx_dword_ptr_[rsp+0x@@ 34], je_0xfffffffffffffc@@ f3, jmp_0xfffffffffffffc@@ e9, mov_rdi_r12, call_0xffffffffffff0@@ 4e@@ 5, test_eax_eax, je_0xf5, mov_byte_ptr_[rsp+0x10@@ ]_1, call_0xffffffffffff00@@ 83, mov_r15_qword_ptr_[rsp+0x20], mov_rsi_rax, mov_rdi_r15, call_0x6c@@ 3, mov_rdx_rax, lea_rdi_[rsp+0x@@ 34], mov_rcx_r12, mov_rsi_r15, call_0x19@@ 00, mov_qword_ptr_[rsp+0x28]_rax, cmp_rax_-1, je_0x62, cmp_rax@@ _-2, je_0x8c, test_rax_rax, jne_0x25, mov_qword_ptr_[rsp+0x2@@ 8]_1, mov_rax_qword_ptr_[rsp+0x20], cmp_byte_ptr_[rax]_0, jne_0x@@ b6, mov_edx_dword_ptr_[rsp+0x@@ 34], test_edx_edx, jne_0x@@ ed, mov_byte_ptr_[rsp+0x@@ 30]_1, jmp_0xfffffffffffffc@@ c6, mov_qword_ptr_[rsp+0x2@@ 8]_1, mov_byte_ptr_[rsp+0x@@ 30]_0, mov_byte_ptr_[rsp+0x1@@ c]_1, mov_ebx_dword_ptr_[rsp+0x@@ 34], jmp_0xfffffffffffffc@@ 45, mov_qword_ptr_[rsp+0x2@@ 8]_1, jmp_0xfffffffffffffc@@ 9c, mov_rdi_qword_ptr_[rsp+0x20], call_0xfffffffffffeff@@ ed, mov_qword_ptr_[rsp+0x28]_rax, mov_byte_ptr_[rsp+0x@@ 30]_0, mov_byte_ptr_[rsp+0x1@@ c]_1, mov_ebx_dword_ptr_[rsp+0x@@ 34], jmp_0xfffffffffffffc@@ 11, mov_rdi_qword_ptr_[rsp+0x20], call_0xfffffffffffeff@@ cb, mov_qword_ptr_[rsp+0x28]_rax, jmp_0xfffffffffffffc@@ 66, mov_ebx_dword_ptr_[rsp+0x@@ 34], jmp_0xfffffffffffffe@@ d2, mov_byte_ptr_[rsp+0x@@ f]_1, jmp_0xfffffffffffffc@@ 69, lea_rcx_[rip+0x@@ 18@@ 3d@@ 2], mov_edx_0x@@ 96, lea_rsi_[rip+0x17@@ e@@ 13], lea_rdi_[rip+0x17@@ e@@ 16], call_0xffffffffffff00@@ 3f, lea_rcx_[rip+0x@@ 18@@ 3b@@ 3], mov_edx_0x@@ b2, lea_rsi_[rip+0x17@@ df@@ 4], lea_rdi_[rip+0x17@@ e0@@ e], call_0xffffffffffff00@@ 20, lea_rcx_[rip+0x@@ 18@@ 39@@ 4], mov_edx_0x@@ b3, lea_rsi_[rip+0x17@@ dd@@ 5], lea_rdi_[rip+0x17@@ e0@@ 6], call_0xffffffffffff@@ 0001, call_0xfffffffffffeff@@ 6c, call_0xfffffffffffff7@@ 2@@ 7
endbr64, push_r12, mov_rsi_rdi, mov_edx_5, push_rbp, push_rbx, mov_rbx_rdi, xor_edi_edi, call_0xfffffffffffeff@@ 0b, mov_r12_rax, cmp_rbx_rax, je_0x11, mov_rsi_rbx, mov_rdi_rax, call_0xfffffffffffff7@@ 28, test_al_al, je_0x11, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, mov_rdi_r12, call_0xfffffffffffefe@@ fd, mov_rdi_rbx, mov_rbp_rax, call_0xfffffffffffefe@@ f2, lea_rdi_[r@@ bp@@ +rax+4], call_0x1@@ 228, mov_rbp_rax, mov_r9_rbx, mov_r8_r12, mov_rdi_rax, lea_rcx_[rip+0x@@ 18@@ 2f0], mov_rdx_-1, mov_esi_1, xor_eax_eax, call_0xffffffffffff0@@ 3@@ 92, pop_rbx, mov_r12_rbp, pop_rbp, mov_rax_r12, pop_r12, ret
endbr64, push_r15, mov_edx_5, push_r14, push_r13, mov_r13_rdi, push_r12, push_rbp, mov_rbp_rsi, mov_rsi_rdi, push_rbx, xor_edi_edi, sub_rsp_0x18, call_0xfffffffffffefe@@ 6e, mov_r12_rax, call_0x10@@ 4c@@ 6, mov_rdi_rax, lea_rsi_[rip+0x18@@ 29@@ f], mov_r14_rax, call_0x10@@ 24@@ 4, test_eax_eax, jne_0x1@@ 1d, mov_rsi_r13, mov_rdi_r12, call_0xffffffffffff@@ 0001, test_rbp_rbp, je_0x79, mov_rbx_rbp, mov_r15_rbp, xor_r14d_r14d, test_eax_eax, je_0x2@@ 3c, mov_rsi_r13, mov_rdi_r12, call_0xfffffffffffff65@@ 0, xor_r10d_r10d, test_al_al, jne_0x2d, test_r15_r15, je_0x61, mov_rsi_r15, mov_rdi_r12, mov_qword_ptr_[rsp+8]_r10, call_0xfffffffffffff6@@ 34, test_al_al, mov_r10_qword_ptr_[rsp+8], je_0x48, test_r10_r10, je_0xa, mov_rdi_r10, call_0xfffffffffffefc@@ 6e, test_r14_r14, je_0xa, mov_rdi_r14, call_0xfffffffffffefc@@ 61, add_rsp_0x18, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, test_eax_eax, jne_0x1@@ de, mov_r12_r13, jmp_0xffffffffffffffd9, test_rbx_rbx, je_0x1b, mov_rsi_rbx, mov_rdi_r12, mov_qword_ptr_[rsp+8]_r10, call_0xfffffffffffff5d@@ 0, test_al_al, mov_r10_qword_ptr_[rsp+8], jne_0xffffffffffffff@@ 9e, mov_rdi_r12, mov_qword_ptr_[rsp+8]_r10, call_0xfffffffffffefd@@ aa, mov_rdi_rbp, mov_rbx_rax, call_0xfffffffffffefd@@ 9f, lea_rdi_[r@@ bx@@ +rax+4], call_0x10@@ d5, mov_rdi_rax, mov_rbx_rax, mov_r9_rbp, mov_r8_r12, lea_rcx_[rip+0x@@ 18@@ 1@@ 9d], mov_rdx_-1, mov_esi_1, xor_eax_eax, call_0xffffffffffff0@@ 23f, mov_r10_qword_ptr_[rsp+8], test_r10_r10, je_0xa, mov_rdi_r10, call_0xfffffffffffef@@ bb@@ d, mov_r12_rbx, jmp_0xffffffffffffff4c, mov_rdx_r14, lea_rsi_[rip+0x18@@ 16@@ e], mov_rdi_rbp, call_0x1@@ 3c@@ 3, mov_rdi_r14, mov_r15_rax, call_0xfffffffffffefd@@ 38, lea_rdi_[rax+0x@@ b], mov_rbx_rax, call_0x10@@ 6c, mov_rdi_rax, mov_rdx_rbx, mov_rsi_r14, call_0xfffffffffffefe@@ ee, mov_r8_rax, add_rbx_rax, movabs_rax@@ _0x4@@ c5@@ 34@@ e4@@ 15@@ 2@@ 54@@ 2f@@ 2f, mov_qword_ptr_[rbx]_rax, mov_eax_0x5@@ 44@@ 9, mov_word_ptr_[rbx+@@ 8]_ax, mov_byte_ptr_[rbx+0x@@ a]_0, mov_rdi_rbp, mov_rdx_r8, lea_rsi_[rip+0x18@@ 114], mov_qword_ptr_[rsp+8]_r8, call_0x1@@ 36@@ 7, mov_r8_qword_ptr_[rsp+8], mov_rbp_rax, mov_rdi_r8, call_0xfffffffffffefb@@ 37, test_rbp_rbp, je_0x97, mov_esi@@ _0x3f, mov_rdi_rbp, call_0xfffffffffffefd@@ 21, test_rax_rax, je_0x49, mov_rdi_rbp, call_0xfffffffffffefb@@ 14, mov_rsi_r13, mov_rdi_r12, test_r15_r15, je_0xce, call_0xfffffffffffefe@@ 40, test_eax_eax, je_0x81, mov_rsi_r13, mov_rdi_r12, call_0xfffffffffffff4a@@ 1, mov_r10@@ _r15, test_al_al, jne_0x@@ f2, mov_rbp_r15, xor_ebx_ebx, xor_r14d_r14d, jmp_0xfffffffffffffe@@ 45, mov_rsi_r13, mov_rdi_r12, call_0xfffffffffffefe@@ 0a, test_r15_r15, je_0xa2, test_eax_eax, jne_0xa5, cmp_r15@@ _rbp, je_0x39, mov_rdi_rbp, call_0xfffffffffffefa@@ ac, mov_r12_r15, jmp_0xfffffffffffffe@@ 48, mov_rsi_r13, mov_rdi_r12, call_0xfffffffffffef@@ dd@@ 2, test_r15_r15, jne_0xffffffffffffff8f, xor_ebx_ebx, xor_r14d_r14d, mov_rbp_r13, jmp_0xfffffffffffffdd@@ 2, mov_r12_r15, jmp_0xfffffffffffffe@@ 19, mov_r12_rbp, jmp_0xfffffffffffffe@@ 11, mov_rsi_r13, mov_rdi_r12, call_0xfffffffffffff40@@ a, test_al_al, jne_0xfffffffffffffd@@ f7, xor_r14d_r14d, xor_r10d_r10d, mov_rbp_r13, jmp_0xfffffffffffffe@@ 32, call_0xfffffffffffefd@@ 78, xor_ebx_ebx, xor_r14d_r14d, mov_rbp_r13, jmp_0xfffffffffffffd@@ 7d, mov_rbx_rbp, mov_r14_rbp, jmp_0xfffffffffffffd@@ 6c, mov_rsi_r13, mov_rdi_r12, call_0xfffffffffffff3b@@ f, test_al_al, jne_0x1b, mov_rbx_rbp, mov_r14_rbp, mov_r10@@ _r15, mov_rbp_r15, jmp_0xfffffffffffffd@@ 66, xor_r14d_r14d, jmp_0xfffffffffffffd@@ 7c, mov_r14_rbp, mov_r10@@ _r15, jmp_0xfffffffffffffd@@ 7@@ 6
sub_rsp_8, xor_edi_edi, call_0x13@@ 1a@@ a, mov_qword_ptr_[rip+0x2@@ 36@@ ae@@ ]_rax, mov_rdi_rax, mov_esi_1, add_rsp_8, jmp_0x1@@ 3@@ 1f@@ 2
endbr64, push_r12, mov_r12_rdi, push_rbx, sub_rsp_8, mov_rbx_qword_ptr_[rip+0x2@@ 36@@ 7b], test_rbx_rbx, je_0x28, mov_rdi_r12, call_0xfffffffffffefb@@ 33, add_rsp_8, mov_r8_rbx, pop_rbx, mov_rdx_r12, mov_rcx_rax, xor_esi_esi, xor_edi_edi, pop_r12, jmp_0x1@@ 3@@ 26@@ a, call_0xffffffffffffff@@ 90, mov_rbx_qword_ptr_[rip+0x2@@ 36@@ 44], jmp_0xffffffffffffffc@@ e
endbr64, push_r12, mov_r12_rsi, push_rbp, mov_rbp_qword_ptr_[rip+0x2@@ 36@@ 2f], push_rbx, mov_rbx_rdi, test_rbp_rbp, je_0x30, mov_rdi_r12, call_0xfffffffffffefa@@ e3, mov_rcx_rax, mov_r8_rbp, mov_rdx_r12, mov_rdi_rbx, mov_rsi@@ _-1, call_0x1@@ 32@@ 1b, add_rax_rbx, pop_rbx, pop_rbp, pop_r12, ret, call_0xffffffffffffff@@ 38, mov_rbp_qword_ptr_[rip+0x2@@ 3@@ 5e@@ c], jmp_0xffffffffffffffc@@ 6
endbr64, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, mov_r12_qword_ptr_[rip+0x2@@ 3@@ 5c@@ b], test_r12_r12, je_0x28, mov_rdi_rbp, call_0xfffffffffffefa@@ 83, add_rsp_8, mov_rdi_rbp, pop_rbp, mov_rdx_r12, mov_rsi_rax, pop_r12, jmp_0x1@@ 3@@ 32@@ e, call_0xfffffffffffffee@@ 0, mov_r12_qword_ptr_[rip+0x2@@ 35@@ 94], jmp_0xffffffffffffffc@@ e
endbr64, push_r12, push_rbp, push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi], test_rdi_rdi, je_0x67, mov_rbp_rbx, xor_r12d_r12d, add_rbp_8, call_0xfffffffffffffed@@ c, mov_rdi_qword_ptr_[rbp], lea_r12_[r@@ 12@@ +rax+1], test_rdi_rdi, jne_0xffffffffffffffeb, mov_rdi_r12, call_0xd@@ 56, mov_r12_rax, mov_rdi_rax, jmp_0x12, mov_byte_ptr_[rax]_0x20, lea_rdi_[rax+1], mov_rsi_qword_ptr_[rbx], add_rbx_8, call_0xfffffffffffffe@@ f2, cmp_qword_ptr_[rbx]_0, jne_0xffffffffffffffe9, mov_byte_ptr_[rax]_0, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret, pop_rbx, pop_rbp, lea_rdi_[rip+0x17@@ 6@@ ff], pop_r12, jmp_0x@@ f5@@ d
endbr64, push_rbp, mov_rdx_rsi, mov_rbp_rdi, push_rbx, mov_rbx_rsi, xor_esi_esi, sub_rsp_8, call_0xfffffffffffefa@@ cb, mov_rdx_rax, sub_rax_rbp, inc_rax, test_rdx_rdx, cmove_rax@@ _rbx, add_rsp_8, pop_rbx, pop_rbp, ret
push_rax, pop_rax, lea_rcx_[rip+0x@@ 17@@ dc@@ 7], mov_edx_0x@@ aa, lea_rsi_[rip+0x17@@ da@@ e], lea_rdi_[rip+0x17@@ 8@@ 19], sub_rsp_8, call_0xfffffffffffefa@@ 1@@ 0
endbr64, push_r15, push_r14, mov_r14d_esi, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x68, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x58]_rax, xor_eax_eax, call_0xfffffffffffefd@@ 5b, test_rax_rax, je_0x5@@ a4, mov_r12_rax, call_0xfffffffffffef@@ 90@@ a, cmp_rax_1, jbe_0x@@ 2b@@ 1, test_r14d_r14d, jne_0x3@@ e8, mov_qword_ptr_[rsp+0x2@@ 8]_r12, mov_rbx_r12, mov_edx_dword_ptr_[rbx], add_rbx_4, lea_eax_[rdx-0x1010101], not_edx, and_eax_edx, and_eax_0x80808080, je_0xffffffffffffffeb, mov_edx_eax, shr_edx_0x10, test_eax_0x8080, cmove_eax_edx, lea_rdx_[r@@ bx+2], cmove_rbx@@ _rdx, mov_esi_eax, add_sil@@ _al, sbb@@ _rbx@@ _3, mov_qword_ptr_[rsp+0x10]_rbx, mov_byte_ptr_[rsp+0x1@@ 8]_0, mov_qword_ptr_[rsp+0x1@@ c]_0, mov_byte_ptr_[rsp+0x@@ 24]_0, mov_rbp_r12, xor_r15d_r15d, lea_r14_[rip+0x@@ 17@@ a@@ 40], cmp_rbx_r12, ja_0x4@@ a, jmp_0x1@@ cc, cmp_byte_ptr_[rsp+0x@@ 38]_0, mov_r15d_1, je_0x1c, mov_edi_dword_ptr_[rsp+0x@@ 3c], mov_qword_ptr_[rsp]_rdx, call_0xfffffffffffefb@@ 9b, xor_r15d_r15d, mov_rdx_qword_ptr_[rsp], test_eax_eax, sete@@ _r15b, add_rbp@@ _rdx, mov_qword_ptr_[rsp+0x2@@ 8]_rbp, mov_byte_ptr_[rsp+0x@@ 24]_0, cmp_rbp_rbx, jae_0x@@ 2f@@ 1, cmp_byte_ptr_[rsp+0x1@@ 8]_0, lea_r13_[r@@ sp+0x1c], jne_0x@@ b3, movzx_ecx_byte_ptr_[r@@ bp], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ 14@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0x7f, mov_qword_ptr_[rsp+0x@@ 30]_1, mov_rbx_qword_ptr_[rsp+0x10], mov_rdx_qword_ptr_[rsp+0x28], movsx_eax_byte_ptr_[r@@ bp], mov_byte_ptr_[rsp+0x@@ 38]_1, mov_dword_ptr_[rsp+0x3c]_eax, mov_ebp_1, mov_byte_ptr_[rsp+0x@@ 24]_1, test_r15d_r15d, je_0xffffffffffffff@@ 70, cmp_r15d_1, je_0x1@@ 56, cmp_r15d@@ _2, jne_0x2@@ bc, cmp_byte_ptr_[rsp+0x@@ 38]_0, je_0x2@@ b1, mov_edi_dword_ptr_[rsp+0x@@ 3c], mov_qword_ptr_[rsp]_rdx, call_0xfffffffffffefa@@ f3, test_eax_eax, mov_eax_1, cmove_r15d_eax, mov_rdx_qword_ptr_[rsp], jmp_0xffffffffffffff56, lea_r13_[r@@ sp+0x1c], mov_rdi_r13, call_0xfffffffffffefb@@ e8, test_eax_eax, je_0x4@@ 4b, mov_byte_ptr_[rsp+0x1@@ 8]_1, mov_rdx_rbx, sub_rdx@@ _rbp, mov_rsi_rbp, lea_rdi_[rsp+0x@@ 3c], mov_rcx_r13, call_0x10@@ 15, mov_qword_ptr_[rsp+0x30]_rax, mov_rbp_rax, cmp_rax_-1, je_0x1@@ e4, mov_rdx_qword_ptr_[rsp+0x28], cmp_rax@@ _-2, je_0x2@@ 15, test_rax_rax, jne_0x25, mov_qword_ptr_[rsp+0x@@ 30]_1, cmp_byte_ptr_[rdx]_0, jne_0x3@@ d4, mov_eax_dword_ptr_[rsp+0x3c], test_eax_eax, jne_0x3@@ e7, mov_ebp_1, mov_rdi_r13, mov_qword_ptr_[rsp]_rdx, mov_byte_ptr_[rsp+0x@@ 38]_1, call_0xfffffffffffefb@@ 6b, test_eax_eax, mov_rbx_qword_ptr_[rsp+0x10], mov_rdx_qword_ptr_[rsp], je_0xffffffffffffff@@ 13, mov_byte_ptr_[rsp+0x1@@ 8]_0, jmp_0xffffffffffffff08, mov_qword_ptr_[rsp+0x@@ 30]_1, mov_byte_ptr_[rsp+0x@@ 38]_0, mov_byte_ptr_[rsp+0x@@ 24]_1, mov_rbp_qword_ptr_[rsp+0x28], mov_rdi_rbp, call_0xfffffffffffef@@ 6e@@ d, lea_rdx_[rax+1], mov_rsi_rbp, mov_rdi_r12, call_0xfffffffffffefa@@ 3e, cmp_r14d_1, jne_0xfffffffffffffdd@@ 3, mov_rax_qword_ptr_[rsp+0x58], xor_rax_qword_ptr_fs:[0x28], jne_0x3@@ 3d, add_rsp_0x68, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, cmp_byte_ptr_[rsp+0x@@ 38]_0, je_0xfffffffffffffe@@ 32, mov_edi_dword_ptr_[rsp+0x@@ 3c], mov_qword_ptr_[rsp]_rdx, call_0xfffffffffffef@@ 9a@@ d, mov_rsi_qword_ptr_[rsp+8], mov_rdx_qword_ptr_[rsp], test_eax_eax, cmovne@@ _rsi@@ _rdx, mov_eax_2, mov_qword_ptr_[rsp+8]_rsi, cmovne@@ _r15d_eax, jmp_0xfffffffffffffe@@ 02, test_r14d_r14d, je_0x50, movzx_ebx_byte_ptr_[r@@ 12], test_bl_bl, je_0x2@@ c8, call_0xfffffffffffefa@@ fe, mov_rax_qword_ptr_[rax], mov_rbp_r12, jmp_0xe, movzx_ebx_byte_ptr_[r@@ bp+1], inc_rbp, test_bl_bl, je_9, test_byte_ptr_[rax+r@@ bx*@@ 2+1]_0x20, jne_0xfffffffffffffff0, mov_rdi_rbp, call_0xfffffffffffef@@ 6@@ 2b, lea_rdx_[rax+1], mov_rsi_rbp, mov_rdi_r12, call_0xfffffffffffef@@ 97@@ c, cmp_r14d_1, je_0xffffffffffffff@@ 44, mov_rdx_r12, mov_ecx_dword_ptr_[rdx], add_rdx_4, lea_eax_[rcx-0x1010101], not_ecx, and_eax_ecx, and_eax_0x80808080, je_0xffffffffffffffeb, mov_ecx_eax, shr_ecx_0x10, test_eax_0x8080, cmove_eax_ecx, lea_rcx_[rdx+2], cmove_rdx_rcx, mov_esi_eax, add_sil@@ _al, sbb_rdx_3, lea_rbx_[rdx@@ -1], cmp_r12_rbx, ja_0xfffffffffffffe@@ ff, call_0xfffffffffffefa@@ 78, mov_rdx_qword_ptr_[rax], jmp_0x17, mov_byte_ptr_[rbx]_0, dec@@ _rbx, cmp_r12_rbx, ja_0xfffffffffffffe@@ e0, movzx_eax_byte_ptr_[rbx], test_byte_ptr_[rdx@@ +rax*2+1]_0x20, jne_0xffffffffffffffe9, jmp_0xfffffffffffffe@@ d0, mov_qword_ptr_[rsp+0x@@ 30]_1, mov_byte_ptr_[rsp+0x@@ 38]_0, mov_rbx_qword_ptr_[rsp+0x10], mov_rdx_qword_ptr_[rsp+0x28], mov_ebp_1, jmp_0xfffffffffffffd@@ 6b, cmp_r15d@@ _2, jne_0xfffffffffffffe@@ 95, mov_rax_qword_ptr_[rsp+8], mov_byte_ptr_[rax]_0, jmp_0xfffffffffffffe@@ 87, mov_rbx_qword_ptr_[rsp+0x10], mov_byte_ptr_[rsp+0x@@ 38]_0, mov_rbp_rbx, sub_rbp@@ _rdx, mov_qword_ptr_[rsp+0x30]@@ _rbp, jmp_0xfffffffffffffd@@ 33, mov_r15d_1, jmp_0xfffffffffffffc@@ c1, mov_qword_ptr_[rsp+0x2@@ 8]_r12, mov_rdx_r12, mov_ecx_dword_ptr_[rdx], add_rdx_4, lea_eax_[rcx-0x1010101], not_ecx, and_eax_ecx, and_eax_0x80808080, je_0xffffffffffffffeb, mov_ecx_eax, shr_ecx_0x10, test_eax_0x8080, cmove_eax_ecx, lea_rcx_[rdx+2], cmove_rdx_rcx, mov_esi_eax, add_sil@@ _al, sbb_rdx_3, mov_qword_ptr_[rsp+0x10]_rdx, mov_byte_ptr_[rsp+0x1@@ 8]_0, mov_qword_ptr_[rsp+0x1@@ c]_0, mov_byte_ptr_[rsp+0x@@ 24]_0, mov_r15_rdx, mov_rbp_r12, lea_rbx_[rip+0x@@ 17@@ 65@@ e], cmp_rdx@@ _r12, ja_0x7@@ 2, jmp_0xfffffffffffffd@@ c9, movzx_ecx_byte_ptr_[r@@ bp], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ bx+rax*4], shr_eax@@ _cl, test_al_1, je_0xd5, mov_qword_ptr_[rsp+0x@@ 30]_1, movsx_eax_byte_ptr_[r@@ bp], mov_byte_ptr_[rsp+0x@@ 38]_1, mov_dword_ptr_[rsp+0x3c]_eax, mov_byte_ptr_[rsp+0x@@ 24]_1, mov_rbp_qword_ptr_[rsp+0x28], mov_edi_dword_ptr_[rsp+0x@@ 3c], call_0xfffffffffffef7@@ 93, test_eax_eax, je_0xfffffffffffffd@@ 7c, mov_r15_qword_ptr_[rsp+0x10], add_rbp@@ _qword_ptr_[rsp+0x30], mov_qword_ptr_[rsp+0x2@@ 8]_rbp, mov_byte_ptr_[rsp+0x@@ 24]_0, cmp_rbp@@ _r15, jae_0xffffffffffff@@ fd@@ 5f, cmp_byte_ptr_[rsp+0x1@@ 8]_0, lea_r13_[r@@ sp+0x1c], je_0xffffffffffffff@@ 8f, mov_rdx_r15, sub_rdx@@ _rbp, lea_rdi_[rsp+0x@@ 3c], mov_rcx_r13, mov_rsi_rbp, call_0xcb@@ c, mov_qword_ptr_[rsp+0x30]_rax, cmp_rax_-1, je_0xfffffffffffffd@@ 16, mov_rbp_qword_ptr_[rsp+0x28], cmp_rax@@ _-2, je_0x67, test_rax_rax, jne_0x1d, mov_qword_ptr_[rsp+0x@@ 30]_1, cmp_byte_ptr_[rbp]_0, jne_0x81, mov_edx_dword_ptr_[rsp+0x@@ 3c], test_edx_edx, jne_0x98, mov_rdi_r13, mov_byte_ptr_[rsp+0x@@ 38]_1, call_0xfffffffffffef@@ 8@@ 25, test_eax_eax, je_7, mov_byte_ptr_[rsp+0x1@@ 8]_0, mov_byte_ptr_[rsp+0x@@ 24]_1, jmp_0xffffffffffffff5b, lea_r13_[r@@ sp+0x1c], mov_rdi_r13, call_0xfffffffffffef@@ 800, test_eax_eax, je_0x63, mov_byte_ptr_[rsp+0x1@@ 8]_1, jmp_0xffffffffffffff75, mov_rax_qword_ptr_[rsp+0x10], mov_byte_ptr_[rsp+0x@@ 38]_0, sub_rax_rbp, mov_qword_ptr_[rsp+0x30]_rax, mov_byte_ptr_[rsp+0x@@ 24]_1, jmp_0xfffffffffffffc@@ a1, mov_rbp_r12, jmp_0xfffffffffffffd@@ 5b, call_0xfffffffffffef@@ 3a@@ 4, call_0x@@ 92@@ f, lea_rcx_[rip+0x@@ 17@@ 7c@@ 3], mov_edx_0x@@ a9, lea_rsi_[rip+0x17@@ 7a@@ a], lea_rdi_[rip+0x17@@ 1@@ fe], call_0xfffffffffffef@@ 4@@ 10, call_0xfffffffffffff9d@@ b, lea_rcx_[rip+0x@@ 17@@ 79@@ f], mov_edx_0x8@@ e, lea_rsi_[rip+0x17@@ 78@@ 6], lea_rdi_[rip+0x17@@ 1c@@ 3], call_0xfffffffffffef@@ 3e@@ c
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12_r9, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_r8, sub_rsp_0x38, test_rsi_rsi, je_0x12@@ a, mov_r9_rcx, mov_r8_rdx, mov_rcx_rsi, lea_rdx_[rip+0x17@@ 75@@ e], mov_esi_1, xor_eax_eax, call_0xfffffffffffef@@ 705, xor_edi_edi, mov_edx_5, lea_rsi_[rip+0x17@@ 75@@ 7], call_0xfffffffffffef@@ 2c@@ 2, mov_rcx_rax, mov_r8d@@ _0x7@@ e2, lea_rdx_[rip+0x17@@ a@@ 8d], mov_esi_1, mov_rdi_rbp, xor_eax_eax, call_0xfffffffffffef@@ 6d@@ 3, xor_edi_edi, lea_rsi_[rip+0x17@@ 7b@@ 5], mov_edx_5, call_0xfffffffffffe@@ f2@@ 90, mov_rdi_rax, mov_rsi_rbp, call_0xfffffffffffef@@ 4@@ 15, cmp_r12@@ _9, ja_0x3@@ 60, lea_rdx_[rip+0x17@@ a@@ 13], movsxd_rax_dword_ptr_[r@@ dx+r@@ 12*4], add_rax_rdx, jmp_rax, mov_r10_qword_ptr_[rsp+0x28], mov_esi_1, push_r10, mov_rdi_rbp, xor_eax_eax, mov_r9_qword_ptr_[rsp+0x28], push_r9, mov_r9_r14, mov_r8_qword_ptr_[rsp+0x28], push_r8, mov_r8_r13, mov_rcx_qword_ptr_[rsp+0x28], push_rcx, mov_rcx_r12, push_r15, call_0xfffffffffffef@@ 6@@ 13, add_rsp_0x30, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_r8_rcx, mov_esi_1, mov_rcx_rdx, xor_eax_eax, lea_rdx_[rip+0x17@@ 64@@ 2], call_0xfffffffffffef@@ 5e@@ 4, jmp_0xfffffffffffffedf, xor_edi_edi, call_0xfffffffffffef@@ 15@@ 6, mov_r11_qword_ptr_[rsp+0x28], mov_rdx_rax, push_r11, jmp_0xffffffffffffff34, mov_r11_qword_ptr_[r@@ bx+0x40], mov_r10_qword_ptr_[r@@ bx+0x38], mov_r9_qword_ptr_[r@@ bx+0x30], mov_r8_qword_ptr_[r@@ bx+0x28], mov_rcx_qword_ptr_[rbx+0x20], mov_qword_ptr_[rsp+0x28]_r11, mov_qword_ptr_[rsp+0x20]_r10, mov_qword_ptr_[rsp+0x18]_r9, mov_qword_ptr_[rsp+0x10]_r8, mov_qword_ptr_[rsp+8]_rcx, mov_r15_qword_ptr_[r@@ bx+0x18], mov_r14_qword_ptr_[r@@ bx+0x10], mov_r13_qword_ptr_[r@@ bx+8], mov_r12_qword_ptr_[rbx], mov_edx_5, lea_rsi_[rip+0x17@@ 5c@@ c], jmp_0xfffffffffffffd@@ 7@@ c
endbr64, xor_r9d_r9d, cmp_qword_ptr_[r@@ 8]_0, je_0xf, inc@@ _r9, cmp_qword_ptr_[r@@ 8+r@@ 9@@ *@@ 8]_0, jne_0xfffffffffffffff@@ 8, jmp_0xfffffffffffffb@@ 9@@ 6
endbr64, sub_rsp_0x68, mov_r11@@ _r8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x58]_rax, xor_eax_eax, xor_r9d_r9d, mov_r8_rsp, jmp_0x29, mov_r10d_eax, add_eax_8, mov_dword_ptr_[r@@ 11@@ ]_eax, add_r10@@ _qword_ptr_[r@@ 11@@ +0x10], mov_rax_qword_ptr_[r@@ 10], mov_qword_ptr_[r@@ 8+r@@ 9@@ *@@ 8]_rax, test_rax_rax, je_0x31, inc@@ _r9, cmp_r9@@ _0xa, je_0x28, mov_eax_dword_ptr_[r@@ 11], cmp_eax_0x2f, jbe_0xffffffffffffff@@ d8, mov_r10_qword_ptr_[r@@ 11+8], lea_rax_[r@@ 10+8], mov_qword_ptr_[r@@ 11@@ +8]_rax, mov_rax_qword_ptr_[r@@ 10], mov_qword_ptr_[r@@ 8+r@@ 9@@ *@@ 8]_rax, test_rax_rax, jne_0xffffffffffffffd9, call_0xfffffffffffffb@@ 20, mov_rax_qword_ptr_[rsp+0x58], xor_rax_qword_ptr_fs:[0x28], jne_7, add_rsp_0x68, ret, call_0xfffffffffffeee@@ 5@@ 6
endbr64, push_rbx, mov_r10d@@ _0x20, sub_rsp_0x@@ b0, mov_qword_ptr_[rsp+0xa@@ 0]_r8, mov_qword_ptr_[rsp+0xa@@ 8]_r9, lea_r11_[rsp+0x@@ c0], xor_r9d_r9d, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x78]_rax, xor_eax_eax, lea_rax_[rsp+0xc0], mov_qword_ptr_[rsp+0x10]_rax, lea_rax_[rsp+0x80], mov_dword_ptr_[rsp+8]@@ _0x20, mov_qword_ptr_[rsp+0x18]_rax, mov_rbx_rax, lea_r8_[rsp+0x@@ 20], jmp_0x28, mov_eax_r10d, add_rax_rbx, mov_rax_qword_ptr_[rax], add_r10d@@ _8, mov_qword_ptr_[r@@ 8+r@@ 9@@ *@@ 8]_rax, test_rax_rax, je_0x2c, inc@@ _r9, cmp_r9@@ _0xa, je_0x23, cmp_r10d@@ _0x2f, jbe_0xffffffffffffff@@ dd, mov_rax@@ _r11, mov_rax_qword_ptr_[rax], add_r11@@ _8, mov_qword_ptr_[r@@ 8+r@@ 9@@ *@@ 8]_rax, test_rax_rax, jne_0xffffffffffffffe0, call_0xfffffffffffffa@@ 50, mov_rax_qword_ptr_[rsp+0x78], xor_rax_qword_ptr_fs:[0x28], jne_0xb, add_rsp_0x@@ b0, pop_rbx, ret, call_0xfffffffffffeed@@ 8@@ 2
endbr64, push_rbp, mov_edx_5, lea_rsi_[rip+0x17@@ 1f@@ b], xor_edi_edi, call_0xfffffffffffeed@@ 1d, mov_rsi_rax, lea_rdx_[rip+0x17@@ 1@@ ff], mov_edi_1, xor_eax_eax, call_0xfffffffffffef0@@ 17, mov_edx_5, lea_rsi_[rip+0x17@@ 1@@ fd], xor_edi_edi, call_0xfffffffffffeec@@ f4, mov_rsi_rax, lea_rcx_[rip+0x@@ 17@@ 4@@ 1d], lea_rdx_[rip+0x14@@ 5f@@ 8], mov_edi_1, xor_eax_eax, call_0xfffffffffffee@@ fe@@ 7, mov_rbp_qword_ptr_[rip+0x20@@ 5@@ 13], lea_rsi_[rip+0x17@@ 4@@ 24], xor_edi_edi, mov_edx_5, call_0xfffffffffffeec@@ bd, mov_rdi_rax, mov_rsi_rbp, pop_rbp, jmp_0xfffffffffff@@ ee@@ e4@@ 1
endbr64, push_rbx, mov_rbx_rdi, call_0xfffffffffffeee@@ f8, test_rax_rax, jne_7, test_rbx_rbx, jne_4, pop_rbx, ret, call_0x25@@ 7
endbr64, mov_rax_rdi, mul@@ _rsi, mov_rdi_rax, set@@ o@@ _al, test_rdi_rdi, js@@ _0xc, movzx_eax_al, test_rax_rax, jne_4, jmp_0xffffffffffffffc3, push_rax, call_0x23@@ 0
endbr64, jmp_0xffffffffffffffa@@ c
endbr64, push_rbx, mov_rbx_rsi, test_rsi_rsi, jne_7, test_rdi_rdi, jne_0x20, mov_rsi_rbx, call_0xfffffffffffee@@ f0@@ b, test_rax_rax, jne_7, test_rbx_rbx, jne_0x17, pop_rbx, ret, call_0xfffffffffffeea@@ 90, xor_eax_eax, pop_rbx, ret, call_0x1d@@ 7
endbr64, mov_rax_rsi, mul_rdx, mov_rsi_rax, set@@ o@@ _al, test_rsi_rsi, js@@ _0xc, movzx_eax_al, test_rax_rax, jne_4, jmp_0xffffffffffffffa3, push_rax, call_0x1b@@ 0
endbr64, mov_r9_rsi, mov_r8_rdx, mov_rsi_qword_ptr_[rsi], test_rdi_rdi, je_0x30, movabs_rax@@ _0x5@@ 5555@@ 5555@@ 5555@@ 55@@ 4, xor_edx_edx, div@@ _r8, cmp_rax_rsi, jbe_0x@@ 37, mov_rax_rsi, shr_rax_1, lea_rsi@@ _[rax+r@@ si+1], mov_qword_ptr_[r@@ 9]@@ _rsi, imul_rsi@@ _r8, jmp_0xffffffffffffff58, test_rsi_rsi, je_0x25, mov_rax_rsi, mul@@ _r8, set@@ o@@ _dl, movzx_edx_dl, test_rax_rax, js@@ _7, test_rdx_rdx, je_0xffffffffffffffd8, push_rax, call_0x1@@ 44, xor_edx_edx, mov_eax@@ _0x80, div@@ _r8, xor_ecx_ecx, cmp_r8@@ _0x80, seta_cl, lea_rsi_[r@@ cx+rax], jmp_0xffffffffffffffc@@ 3
endbr64, mov_rax_rsi, mov_rsi_qword_ptr_[rsi], test_rdi_rdi, je_0x2b, movabs_rdx@@ _0x5@@ 5555@@ 5555@@ 5555@@ 55@@ 3, cmp_rsi_rdx, ja_0x3@@ 6, mov_rdx_rsi, shr_rdx_1, lea_rsi_[r@@ dx+r@@ si+1], mov_qword_ptr_[rax]_rsi, jmp_0xfffffffffffffe@@ d4, test_rsi_rsi, jne_0x15, mov_esi_0x80, mov_qword_ptr_[rax]_rsi, jmp_0xfffffffffffffe@@ bb, jns_0xffffffffffffff@@ d9, push_rax, call_0xb@@ d
endbr64, push_r12, mov_r12_rdi, call_0xfffffffffffffe@@ 37, mov_rdi_rax, mov_rdx_r12, xor_esi_esi, pop_r12, jmp_0xfffffffffff@@ ee@@ bb@@ 8
endbr64, mov_rax_rdi, sub_rsp_8, mul@@ _rsi, set@@ o@@ _dl, test_rax_rax, js_0x1@@ 9, movzx_edx_dl, test_rdx_rdx, jne_0x11, call_0xfffffffffffeec@@ 52, test_rax_rax, je_7, add_rsp_8, ret, call_0x6@@ 3
endbr64, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, mov_rdi_rsi, sub_rsp_8, call_0xfffffffffffffd@@ cc, add_rsp_8, mov_rsi_rbp, pop_rbp, mov_rdx_r12, mov_rdi_rax, pop_r12, jmp_0xfffffffffffe@@ ec@@ 4@@ 7
endbr64, push_rbp, mov_rbp_rdi, call_0xfffffffffffeea@@ 68, lea_rsi_[rax+1], mov_rdi_rbp, pop_rbp, jmp_0xffffffffffffffb@@ b
endbr64, push_rax, pop_rax, mov_edx_5, lea_rsi_[rip+0x17@@ 22@@ d], xor_edi_edi, sub_rsp_8, call_0xfffffffffffeea@@ 18, mov_edi_dword_ptr_[rip+0x20@@ 1@@ dd], mov_rcx_rax, lea_rdx_[rip+0x14@@ 1a@@ e], xor_esi_esi, xor_eax_eax, call_0xfffffffffffeed@@ 8@@ f
endbr64, push_r12, call_0x@@ ed@@ ba, mov_r12_rax, test_rax_rax, je_0xf, mov_rax_r12, pop_r12, ret, call_0xfffffffffffee@@ 8@@ 90, cmp_dword_ptr_[rax]@@ _0xc, jne_0xffffffffffffffeb, call_0xffffffffffffff@@ 9@@ 6
endbr64, push_r12, call_0x1@@ 28@@ 0a, mov_r12d_eax, test_eax_eax, js@@ _0x10, mov_eax_r12d, pop_r12, ret, call_0xfffffffffffee@@ 860, cmp_dword_ptr_[rax]@@ _0xc, jne_0xffffffffffffffea, call_0xffffffffffffff@@ 6@@ 6
endbr64, push_r12, call_0x1@@ 2a@@ 7a, mov_r12_rax, test_rax_rax, je_0xf, mov_rax_r12, pop_r12, ret, call_0xfffffffffffee@@ 8@@ 30, cmp_dword_ptr_[rax]@@ _0xc, jne_0xffffffffffffffeb, call_0xffffffffffffff@@ 3@@ 6
endbr64, push_r12, call_0x1@@ 2c@@ 7a, mov_r12_rax, test_rax_rax, je_0xf, mov_rax_r12, pop_r12, ret, call_0xfffffffffffee@@ 800, cmp_dword_ptr_[rax]@@ _0xc, jne_0xffffffffffffffeb, call_0xffffffffffffff@@ 0@@ 6
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x28]_rsi, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rsi_rsp, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]_8, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0x1@@ 2d@@ f8, mov_rdx_qword_ptr_[rsp+0x18], xor_rdx_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xfffffffffffee@@ 8b@@ b
endbr64, push_r15, mov_r15_rsi, push_r14, movabs@@ _r14@@ _0x7@@ fffffffffffffff, push_r13, mov_r13_rsi, push_r12, mov_r12d_edi, push_rbp, lea_rbp_[r@@ si+rdx], push_rbx, sub_rsp_8, jmp_0xf, add_r15_rax, cmp_r15@@ _rbp, jae_0x@@ 46, mov_rax_rbp, sub_rax@@ _r15, cmp_rax_r14, cmova@@ _rax@@ _r14, mov_rsi_r15, mov_rdx_rax, mov_edi_r12d, mov_rbx_rax, call_0xfffffffffffee@@ 96@@ f, test_rax_rax, jg_0xffffffffffffff@@ d7, je_0x21, call_0xfffffffffffee@@ 6d@@ 3, cmp_dword_ptr_[rax]@@ _0x16, jne_0x33, mov_eax@@ _0x80000000, cmp_rbx_rax, jb@@ _0x29, mov_r14d@@ _0x7fffffff, cmp_r15@@ _rbp, jb_0xffffffffffffff@@ be, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_rax_r15, sub_rax_r13, pop_r13, pop_r14, pop_r15, ret, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_rax_-1, pop_r15, ret
endbr64, mov_r8_rdi, mov_rcx_rdx, test_rdi_rdi, je_0x43, test_rsi_rsi, je_0x38, mov_rdi_rsi, mov_rax_r8, xor_edx_edx, div@@ _rdi, test_rdx_rdx, jne_0x46, mov_rax_r8, xor_edx_edx, div@@ _rdi, mov_rdi_rsi, imul@@ _rdi_rax, mov_r9_rax, cmp_rdi_rcx, ja_0x1@@ 1, xor_edx_edx, mov_rax_rdi, div_rsi, cmp_rax@@ _r9, cmove@@ _r8@@ _rdi, mov_rax_r8, ret, test_rsi_rsi, mov_r8d@@ _0x2000, cmovne@@ _r8@@ _rsi, mov_rax_r8, ret, mov_rax_rdi, mov_rdi_rdx, jmp_0xffffffffffffffa@@ c
endbr64, push_r13, mov_r13_rsi, push_r12, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, test_rdi_rdi, lea_rax_[r@@ sp+4], cmove_rbx_rax, mov_rdi_rbx, call_0xfffffffffffee@@ 77@@ a, mov_r12_rax, cmp_rax@@ _-3, jbe_@@ 7, test_rbp_rbp, jne_0x29, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x33, add_rsp_0x18, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, xor_edi_edi, call_0xffffffffffffaa@@ be, test_al_al, jne_0xffffffffffffffd0, movzx_eax_byte_ptr_[r13], mov_r12d_1, mov_dword_ptr_[rbx]_eax, jmp_0xffffffffffffffc1, call_0xfffffffffffee@@ 70@@ 6
test_rdi_rdi, sete_al, test_rsi_rsi, sete_dl, or_al@@ _dl, jne_0x32, mov_rdx_qword_ptr_[rdi+8], cmp_rdx_qword_ptr_[r@@ si+8], je_0x1a, ret, mov_rcx_qword_ptr_[r@@ si+0x10], mov_r8_qword_ptr_[r@@ di+0x10], mov_rcx_qword_ptr_[r@@ cx@@ +rdx*8], cmp_qword_ptr_[r@@ 8@@ +rdx*@@ 8]_rcx, jne_0xffffffffffffffea, dec@@ _rdx, jns_0xffffffffffffff@@ eb, mov_eax_1, ret, xor_eax_eax, ret
mov_rax_qword_ptr_[rsi+0x@@ 48], cmp_qword_ptr_[rsi+0x@@ 68]_rax, jle_0x@@ 88, mov_r8_qword_ptr_[r@@ si+8], cmp_dword_ptr_[rsi+0x@@ 90]_1, movzx_ecx_byte_ptr_[r@@ 8+rax], mov_byte_ptr_[rdi@@ ]_cl, jle_0x@@ 13, cmp_rax_qword_ptr_[r@@ si+0x30], je_0xd, mov_r9_qword_ptr_[r@@ si+0x10], cmp_dword_ptr_[r@@ 9@@ +rax*4@@ ]_-1, je_0x36, cmp_cl@@ _0x5c, je_0x22, cmp_cl@@ _0x5b, je_0x65, cmp_cl@@ _0x5d, je_0x90, cmp_cl@@ _0x5@@ e, jne_0x2f, mov_byte_ptr_[rdi+@@ 8]@@ _0x19, mov_eax_1, ret, and_edx_1, je_0xc, lea_rdx_[rax+1], cmp_rdx_qword_ptr_[r@@ si+0x@@ 58], jl@@ _0x7@@ b, mov_byte_ptr_[rdi+@@ 8]_1, mov_eax_1, ret, cmp_cl@@ _0x2d, jne_0xffffffffffffffec, mov_byte_ptr_[rdi+@@ 8]@@ _0x16, mov_eax_1, ret, mov_byte_ptr_[rdi+@@ 8]_2, xor_eax_eax, ret, lea_rcx_[rax+1], cmp_rcx_qword_ptr_[r@@ si+0x@@ 58], jge_0x@@ 16, movzx_eax_byte_ptr_[r@@ 8@@ +rax+1], mov_byte_ptr_[rdi]_al, cmp_al_0x3a, je_0x6c, cmp_al_0x3d, je_0x58, cmp_al_0x2e, je_0x44, mov_byte_ptr_[rdi+@@ 8]_1, mov_byte_ptr_[r@@ di]@@ _0x5b, mov_eax_1, ret, mov_byte_ptr_[rdi+@@ 8]@@ _0x15, mov_eax_1, ret, mov_qword_ptr_[rsi+0x@@ 48]_rdx, movzx_eax_byte_ptr_[r@@ 8@@ +rax+1], mov_byte_ptr_[rdi+@@ 8]_1, mov_byte_ptr_[rdi]_al, mov_eax_1, ret, mov_byte_ptr_[rdi+@@ 8]@@ _0x1a, mov_eax_2, ret, mov_byte_ptr_[rdi+@@ 8]@@ _0x1c, mov_eax_2, ret, and_edx@@ _4, je_0xffffffffffffff@@ 9b, mov_byte_ptr_[rdi+@@ 8]@@ _0x1e, mov_eax_2, ret
endbr64, cmp_byte_ptr_[r@@ si+0x@@ 30]@@ _0x11, je_8, xor_eax_eax, ret, cmp_rdi_qword_ptr_[r@@ si+0x28], jne_0xfffffffffffffff6, or_byte_ptr_[r@@ si+0x@@ 32@@ ]_8, xor_eax_eax, ret
push_r15, push_r14, mov_r14_rcx, lea_rcx_[rcx@@ +rcx*2], push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x58, mov_r15_qword_ptr_[r@@ di+0x98], mov_rax_qword_ptr_[r15+0x@@ 30], lea_r13_[rax@@ +rcx*8], cmp_qword_ptr_[r@@ 13+@@ 8]_0, jle_0x@@ 1b@@ 2, lea_rax_[r@@ 8+r@@ 8*4], shl_rax_3, mov_qword_ptr_[rsp+0x38]_rax, mov_ecx_edx, mov_eax_1, shl_rax_cl, mov_qword_ptr_[rsp+0x28]_rax, not_eax, mov_word_ptr_[rsp+0x@@ 36@@ ]_ax, mov_eax_esi, and_eax_1, mov_dword_ptr_[rsp+0x30]_eax, mov_eax_esi, and_eax_2, mov_qword_ptr_[rsp+0x1@@ 8]_r14, mov_dword_ptr_[rsp+0x14]_eax, xor_ebx_ebx, mov_r14_rdi, jmp_0x14, cmp_cl@@ _4, je_0x75, inc_rbx, cmp_qword_ptr_[r@@ 13+@@ 8]_rbx, jle_0x@@ 15@@ f, mov_rax_qword_ptr_[r13+0x10], mov_rbp_qword_ptr_[r@@ ax+r@@ bx*8], mov_rax_rbp, shl_rax_4, add_rax_qword_ptr_[r@@ 15], movzx_ecx_byte_ptr_[r@@ ax+8], cmp_cl@@ _8, je_0x25, cmp_cl_9, jne_0xffffffffffffffd0, mov_ecx_dword_ptr_[rsp+0x14], test_ecx_ecx, je_0xffffffffffffffcd, cmp_qword_ptr_[rax]@@ _rdx, jne_0xffffffffffffffc8, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret, mov_edi_dword_ptr_[rsp+0x@@ 30], test_edi_edi, je_0xffffffffffffff@@ af, cmp_qword_ptr_[rax]@@ _rdx, jne_0xffffffffffffffaa, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_0xffffffff, pop_r15, ret, cmp_r8@@ _-1, je_0xffffffffffffff@@ 89, lea_rax_[rbp+r@@ bp@@ *2], shl_rax_3, mov_r12@@ _qword_ptr_[rsp+0x38], mov_qword_ptr_[rsp+0x20]_rax, mov_qword_ptr_[rsp+0x4@@ 0]_r13, mov_qword_ptr_[rsp+0x4@@ 8]_rbx, add_r12@@ _qword_ptr_[r@@ 14+0x@@ d8], mov_rbx_r14, mov_r13d_esi, mov_r14_r15, mov_r15_rbp, mov_rbp_rdx, cmp_qword_ptr_[r@@ 12]@@ _r15, jne_0x7c, cmp_rbp@@ _0x3f, jg@@ _0xf, movzx_eax_word_ptr_[r@@ 12+0x@@ 22], test@@ _qword_ptr_[rsp+0x@@ 28]_rax, je_0x69, mov_rax_qword_ptr_[r14+0x@@ 28], mov_rdi_qword_ptr_[rsp+0x20], mov_rax_qword_ptr_[rax+r@@ di+0x10], mov_rcx_qword_ptr_[rax], cmp_qword_ptr_[rsp+0x1@@ 8]_rcx, je_0x99, mov_rdx_rbp, mov_esi_r13d, mov_rdi_rbx, mov_qword_ptr_[rsp+8]_r8, call_0xfffffffffffffe@@ 95, cmp_eax_-1, mov_r8_qword_ptr_[rsp+8], je_0xffffffffffffff@@ 55, test_eax_eax, jne_0x10, mov_r9d_dword_ptr_[r@@ sp+0x14], test_r9d_r9d, jne_0xffffffffffffff@@ 25, cmp_rbp@@ _0x3f, jg@@ _0x14, movzx_eax_word_ptr_[rsp+0x@@ 36], and@@ _word_ptr_[r@@ 12+0x@@ 22@@ ]_ax, add_r12@@ _0x28, cmp_byte_ptr_[r@@ 12@@ -8]_0, jne_0xffffffffffffff@@ 76, mov_r15_r14, mov_r14_rbx, mov_rbx_qword_ptr_[rsp+0x48], mov_esi_r13d, mov_r13@@ _qword_ptr_[rsp+0x40], inc_rbx, mov_rdx_rbp, cmp_qword_ptr_[r@@ 13+@@ 8]_rbx, jg_0xfffffffffffff@@ ead, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_eax_esi, pop_r14, sar_eax_1, pop_r15, ret, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, mov_esi_r13d, and_esi_1, pop_r13, mov_eax_esi, pop_r14, neg_eax, pop_r15, ret
mov_rax_r8, lea_r8_[r@@ si+r@@ si*4], mov_rsi_qword_ptr_[rdi+0x@@ d8], lea_r8_[r@@ si+r@@ 8@@ *8], mov_rsi_qword_ptr_[r@@ 8+0x10], cmp_rsi_rax, jg_0x4@@ 7, mov_r8_qword_ptr_[r@@ 8+0x18], cmp_r8_rax, jl@@ _0x2e, xor_r10d_r10d, cmp_rsi_rax, sete@@ _r10b, cmp_r8_rax, je_0xf, xor_r8d_r8d, cmp_rsi_rax, je_0xb, mov_eax_r8d, ret, or@@ _r10d@@ _2, mov_r8_r9, mov_esi@@ _r10d, jmp_0xfffffffffffffd@@ a6, mov_r8d_1, mov_eax_r8d, ret, mov_r8d_0xffffffff, jmp_0xffffffffffffffd@@ 5
push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+8], test_rdi_rdi, jne_0xfffffffffffffff6, mov_rdi_qword_ptr_[rbx+0x10], test_rdi_rdi, jne_0xffffffffffffffed, mov_rsi_rbx, mov_rdi_rbp, call_r12, test_eax_eax, jne_0x2e, mov_rdx_qword_ptr_[rbx], test_rdx_rdx, je_0x20, mov_rdi_qword_ptr_[r@@ dx+0x10], test_rdi_rdi, je_7, cmp_rdi_rbx, jne_0xffffffffffffffc4, mov_rbx_rdx, mov_rsi_rbx, mov_rdi_rbp, call_r12, test_eax_eax, je_0xffffffffffffffdc, pop_rbx, pop_rbp, pop_r12, ret
push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, jmp_6, mov_rbx_rdx, mov_rsi_rbx, mov_rdi_rbp, call_r12, test_eax_eax, jne_0x2e, mov_rdx_qword_ptr_[rbx+8], test_rdx_rdx, jne_0xffffffffffffffe9, jmp_0xa, mov_rbx_rcx, mov_rcx_qword_ptr_[rbx+0x10], test_rcx_rcx, je_7, cmp_rcx_rdx, jne_0x19, mov_rcx_qword_ptr_[rbx], mov_rdx_rbx, test_rcx_rcx, jne_0xffffffffffffffe6, pop_rbx, pop_rbp, pop_r12, ret, mov_rdx_rcx, jmp_0xffffffffffffffb@@ 5
push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, cmp_dword_ptr_[rdi+0x@@ 90]_1, jle_0x@@ 4a, movabs_rax_0x1@@ fffffffffffffff, cmp_rsi_rax, ja_0x6@@ e, mov_rdi_qword_ptr_[rdi+0x10], lea_rsi_[r@@ si*4], call_0xfffffffffffee@@ 480, test_rax_rax, je_0x58, mov_rdi_qword_ptr_[rbx+0x18], mov_qword_ptr_[rbx+0x10]_rax, test_rdi_rdi, je_0x18, lea_rsi_[r@@ bp*8], call_0xfffffffffffee@@ 46@@ 1, test_rax_rax, je_0x39, mov_qword_ptr_[rbx+0x18]_rax, cmp_byte_ptr_[rbx+0x@@ 8b@@ ]_0, jne_0x14, mov_qword_ptr_[rbx+0x4@@ 0]_rbp, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret, mov_rdi_qword_ptr_[rbx+8], mov_rsi_rbp, call_0xfffffffffffee@@ 4@@ 31, test_rax_rax, je_9, mov_qword_ptr_[rbx+8]_rax, jmp_0xffffffffffffffd9, add_rsp_8, pop_rbx, mov_eax_0xc, pop_rbp, ret
push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rsi_qword_ptr_[r@@ di+8], mov_rdi_qword_ptr_[rdi+0x10], cmp_qword_ptr_[r@@ bx]@@ _rsi, je_0x21, lea_rax_[r@@ si+1], mov_qword_ptr_[rbx+8]_rax, mov_qword_ptr_[rdi@@ +r@@ si*@@ 8]_rbp, mov_eax_1, add_rsp_8, pop_rbx, pop_rbp, ret, inc@@ _rsi, lea_rax_[r@@ si+r@@ si], mov_qword_ptr_[rbx]_rax, shl_rsi_4, call_0xfffffffffffee@@ 3c@@ a, mov_rdi_rax, test_rax_rax, je_0xf, mov_qword_ptr_[rbx+0x10]_rax, mov_rsi_qword_ptr_[rbx+8], jmp_0xffffffffffffffbe, xor_eax_eax, jmp_0xffffffffffffffc@@ 8
push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rax_qword_ptr_[rdi], test_rax_rax, je_0x26, mov_rsi_qword_ptr_[r@@ di+8], mov_rdi_qword_ptr_[rdi+0x10], test_rsi_rsi, jne_0x51, mov_qword_ptr_[rdi@@ ]_rbp, mov_eax_1, inc_qword_ptr_[r@@ bx+8], add_rsp_8, pop_rbx, pop_rbp, ret, mov_qword_ptr_[rdi@@ ]_1, mov_qword_ptr_[rdi+@@ 8]_1, mov_edi_8, call_0xfffffffffffee@@ 2d@@ 4, mov_qword_ptr_[rbx+0x10]_rax, test_rax_rax, je_0x88, mov_qword_ptr_[rax]_rbp, add_rsp_8, mov_eax_1, pop_rbx, pop_rbp, ret, cmp_rax_rsi, je_0x85, lea_rdx_[r@@ si*8], cmp_qword_ptr_[rdi]@@ _rbp, jle_0x@@ 34, test_rsi_rsi, jle_0x@@ 1a, add_rdx@@ _rdi, mov_rax_qword_ptr_[r@@ dx-8], sub_rdx@@ _8, mov_qword_ptr_[rdx+8]_rax, cmp_rdx@@ _rdi, jne_0xfffffffffffffff1, xor_edx_edx, mov_qword_ptr_[rdi@@ +rdx@@ ]_rbp, mov_eax_1, inc_qword_ptr_[r@@ bx+8], jmp_0xffffffffffffff7d, mov_rax_qword_ptr_[r@@ di+rdx@@ -8], cmp_rbp_rax, jge_0xffffffffffffff@@ e3, mov_qword_ptr_[rdi@@ +rdx@@ ]_rax, sub_rdx@@ _8, mov_rax_qword_ptr_[r@@ di+rdx@@ -8], cmp_rax_rbp, jg@@ _0xfffffffffffffff0, jmp_0xffffffffffffffc9, mov_qword_ptr_[rbx+8]_0, mov_qword_ptr_[rbx]_0, jmp_0xffffffffffffff3e, lea_rax_[r@@ si+r@@ si], mov_qword_ptr_[rbx]_rax, shl_rsi_4, call_0xfffffffffffee@@ 29@@ d, mov_rdi_rax, test_rax_rax, je_0xf, mov_qword_ptr_[rbx+0x10]_rax, mov_rsi_qword_ptr_[rbx+8], jmp_0xffffffffffffff61, xor_eax_eax, jmp_0xffffffffffffff0@@ e
push_r15, push_r14, mov_r14_rdi, push_r13, lea_r13_[r@@ si+0x20], push_r12, mov_r12_rdx, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_8, mov_r15_qword_ptr_[r@@ si+0x10], mov_qword_ptr_[rsi@@ ]_rdx, mov_qword_ptr_[rsi+0x@@ 20]@@ _r15, mov_qword_ptr_[rsi+0x@@ 28]_0, lea_rdi_[r@@ 15*8], call_0xfffffffffffee@@ 1b@@ a, mov_qword_ptr_[rbp+0x@@ 30]_rax, test_rax_rax, je_0x3b, xor_ebx_ebx, test_r15_r15, jg@@ _0x10, jmp_0x4d, inc_rbx, cmp_qword_ptr_[rbp+0x@@ 1@@ 0]_rbx, jle_0x@@ 41, mov_rax_qword_ptr_[rbp+0x18], mov_rsi_qword_ptr_[rax+r@@ bx*8], mov_rax_rsi, shl_rax_4, add_rax_qword_ptr_[r@@ 14], test_byte_ptr_[r@@ ax+@@ 8]_8, jne_0xffffffffffffffe1, mov_rdi_r13, call_0xfffffffffffffd@@ ec, test_al_al, jne_0xffffffffffffffd5, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_0xc, pop_r15, ret, mov_rax_qword_ptr_[r14+0x@@ 40], and@@ _r12@@ _qword_ptr_[r@@ 14+0x@@ 88], lea_rdx_[r@@ 12+r@@ 12@@ *2], lea_rbx_[rax@@ +rdx*8], mov_rax_qword_ptr_[rbx], mov_rdi_qword_ptr_[rbx+0x10], lea_rsi_[rax+1], cmp_qword_ptr_[rbx+@@ 8]_rax, jle_0x@@ 1a, mov_qword_ptr_[rbx@@ ]_rsi, mov_qword_ptr_[rdi@@ +rax*@@ 8]_rbp, add_rsp_8, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_r12_[r@@ si+r@@ si], shl_rsi_4, call_0xfffffffffffee@@ 19@@ 4, mov_rdi_rax, test_rax_rax, je_0xffffffffffffff@@ 96, mov_qword_ptr_[rbx+0x10]_rax, mov_rax_qword_ptr_[rbx], mov_qword_ptr_[rbx+@@ 8]_r12, lea_rsi_[rax+1], jmp_0xffffffffffffffc@@ 4
push_r12, mov_r12_qword_ptr_[r@@ di+0x@@ 58], push_rbp, cmp_qword_ptr_[rdi+0x@@ 4@@ 0]_r12, cmovle@@ _r12@@ _qword_ptr_[r@@ di+0x40], push_rbx, mov_rbx_qword_ptr_[r@@ di+0x30], mov_rbp_rdi, cmp_r12_rbx, jle_0x@@ 55, call_0xfffffffffffed@@ ca@@ 3, mov_rdx_qword_ptr_[rbp], mov_rcx_qword_ptr_[rbp+0x@@ 78], add_rdx_rbx, add_rdx_qword_ptr_[r@@ bp+0x28], movzx_edx_byte_ptr_[rdx], test_rcx_rcx, jne_0x2b, mov_rsi_qword_ptr_[rax], mov_rcx_qword_ptr_[r@@ bp+8], mov_edx_dword_ptr_[r@@ si@@ +rdx*4], mov_byte_ptr_[r@@ cx+r@@ bx@@ ]_dl, inc_rbx, cmp_r12_rbx, jne_0xffffffffffffffd6, pop_rbx, mov_qword_ptr_[rbp+0x@@ 30]@@ _r12, mov_qword_ptr_[rbp+0x@@ 3@@ 8]_r12, pop_rbp, pop_r12, ret, movzx_edx_byte_ptr_[r@@ cx+rdx], jmp_0xffffffffffffffd3, mov_r12_rbx, pop_rbx, mov_qword_ptr_[rbp+0x@@ 30]@@ _r12, mov_qword_ptr_[rbp+0x@@ 3@@ 8]_r12, pop_rbp, pop_r12, ret
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x68, mov_r12_qword_ptr_[r@@ di+0x@@ 58], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x58]_rax, xor_eax_eax, cmp_qword_ptr_[rdi+0x@@ 4@@ 0]_r12, cmovle@@ _r12@@ _qword_ptr_[r@@ di+0x40], mov_rbp_qword_ptr_[r@@ di+0x30], cmp_r12_rbp, jle_0x@@ a3, lea_r14_[r@@ di+0x20], lea_r13_[rsp+0x@@ c], mov_rcx_qword_ptr_[rbx+0x@@ 78], mov_r8_r12, mov_r15_qword_ptr_[r@@ bx+0x20], sub_r8@@ _rbp, test_rcx_rcx, jne_0x@@ f7, mov_rsi_qword_ptr_[rbx+0x28], add_rsi@@ _rbp, add_rsi_qword_ptr_[r@@ bx], mov_rdx_r8, mov_rcx_r14, mov_rdi_r13, call_0xfffffffffffff64@@ e, lea_rdx_[rax-1], cmp_rdx@@ _-3, ja_0x8@@ 9, mov_ecx_dword_ptr_[rsp+0xc], cmp_rax@@ _-2, je_0x12@@ b, mov_rdx_qword_ptr_[rbx+0x10], lea_rsi_[r@@ bp+1], mov_dword_ptr_[r@@ dx+r@@ bp*@@ 4]_ecx, lea_rdi_[r@@ bp*4], add_rbp_rax, cmp_rsi@@ _rbp, jge_0x@@ 8c, lea_rax_[rdx+r@@ di+4], lea_rdx_[r@@ dx+r@@ bp*4], mov_dword_ptr_[rax]@@ _0xffffffff, add_rax_4, cmp_rdx_rax, jne_0xfffffffffffffff3, cmp_rbp_r12, jl_0xffffffffffffff@@ 76, mov_qword_ptr_[rbx+0x@@ 30]@@ _rbp, mov_qword_ptr_[rbx+0x3@@ 8]_rbp, mov_rax_qword_ptr_[rsp+0x58], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ ee, add_rsp_0x68, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[rbx], mov_rdx_qword_ptr_[rbx+0x@@ 78], add_rax_rbp, add_rax_qword_ptr_[r@@ bx+0x28], movzx_ecx_byte_ptr_[rax], mov_dword_ptr_[rsp+0xc]_ecx, test_rdx_rdx, jne_0xaf, mov_qword_ptr_[rbx+0x20]@@ _r15, mov_eax_1, jmp_0xffffffffffffff64, mov_rbp_rsi, cmp_rbp_r12, jl_0xffffffffffffff@@ 0a, jmp_0xffffffffffffff94, mov_eax_dword_ptr_[rbx+0x@@ 90], lea_rsi_[rsp+0x10], test_eax_eax, jle_0xffffffffffffff@@ 0c, xor_eax_eax, lea_rsi_[rsp+0x10], jmp_0x16, inc_rax, cmp_r8_rax, je_0xfffffffffffffe@@ f3, mov_rcx_qword_ptr_[rbx+0x@@ 78], mov_rdx_qword_ptr_[rbx], add_rdx@@ _rbp, add_rdx_rax, add_rdx_qword_ptr_[r@@ bx+0x28], movzx_edx_byte_ptr_[rdx], movzx_edx_byte_ptr_[r@@ cx+rdx], mov_rcx_qword_ptr_[rbx+8], add_rcx@@ _rbp, mov_byte_ptr_[rcx@@ +rax]_dl, mov_byte_ptr_[rsi@@ +rax]_dl, lea_edx_[rax+1], cmp_dword_ptr_[rbx+0x@@ 9@@ 0]_edx, jg_0xffffffffffffff@@ c6, jmp_0xfffffffffffffebd, mov_rax_qword_ptr_[rbx+0x58], cmp_qword_ptr_[rbx+0x@@ 40]_rax, jge_0xffffffffffffff@@ 48, mov_qword_ptr_[rbx+0x20]@@ _r15, jmp_0xffffffffffffff0e, movzx_ecx_byte_ptr_[r@@ dx@@ +rcx], mov_dword_ptr_[rsp+0xc]_ecx, jmp_0xffffffffffffff4f, call_0xfffffffffffedc@@ 7@@ 4
push_r15, push_r14, mov_r14_rdi, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x98, mov_rbx_qword_ptr_[rdi+0x@@ 58], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, cmp_qword_ptr_[rdi+0x@@ 4@@ 0]_rbx, cmovle@@ _rbx@@ _qword_ptr_[r@@ di+0x40], cmp_byte_ptr_[rdi+0x@@ 8a@@ ]_0, mov_r15_qword_ptr_[r@@ di+0x30], jne_0xd, cmp_qword_ptr_[rdi+0x@@ 78]_0, je_0x1@@ 7a, mov_rbp_qword_ptr_[r@@ 14+0x38], cmp_rbx_r15, jg@@ _0x3d, mov_qword_ptr_[r14+0x@@ 30]@@ _r15, mov_qword_ptr_[r14+0x@@ 3@@ 8]_rbp, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x@@ 88], xor_rbx_qword_ptr_fs:[0x28], jne_0x@@ 5c@@ 9, add_rsp_0x98, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rax_[rsp+0x@@ 34], mov_qword_ptr_[rsp+0x18]_rax, mov_r12_rbx, lea_r13_[r@@ 14+0x20], sub_r12@@ _r15, mov_rax_qword_ptr_[r14+0x20], mov_rdx_qword_ptr_[r14+0x@@ 78], mov_qword_ptr_[rsp+0x38]_rax, test_rdx_rdx, jne_0x3@@ 35, mov_rax_qword_ptr_[r14+0x@@ 28], add_rax_rbp, add_rax_qword_ptr_[r@@ 14], mov_qword_ptr_[rsp+8]_rax, mov_rsi_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[rsp+0x18], mov_rcx_r13, mov_rdx_r12, call_0xfffffffffffff3f@@ 7, mov_r13_rax, lea_rax_[rax@@ -1], mov_qword_ptr_[rsp+0x18]_rax, cmp_rax@@ _-@@ 4, ja_0x3@@ 75, mov_edx_dword_ptr_[rsp+0x@@ 34], mov_edi_edx, mov_dword_ptr_[rsp+0x10]_edx, call_0xfffffffffffed@@ f@@ 12, mov_edx_dword_ptr_[rsp+0x10], mov_r12d_eax, mov_rcx_r15, cmp_edx_eax, je_0x3@@ 31, lea_r11_[rsp+0x@@ 40], lea_rdx_[rsp+0x@@ 38], mov_rdi_r11, mov_esi_eax, mov_qword_ptr_[rsp+0x10]_r11, mov_qword_ptr_[rsp+0x20]@@ _r15, call_0xfffffffffffedd@@ 62, cmp_r13_rax, mov_r11_qword_ptr_[rsp+0x10], mov_rcx_qword_ptr_[rsp+0x20], mov_rdx_rax, jne_0x3@@ b7, mov_rdi_qword_ptr_[r14+8], mov_rdx_r13, add_rdi@@ _r15, mov_rsi_r11, mov_qword_ptr_[rsp+8]_rcx, call_0xfffffffffffed@@ cb@@ 5, mov_rcx_qword_ptr_[rsp+8], cmp_byte_ptr_[r@@ 14+0x@@ 8c]_0, lea_rax_[r@@ 13+r@@ bp], jne_0x3@@ 66, mov_rdx_qword_ptr_[r@@ 14+0x10], inc_r15, add_r13@@ _rcx, mov_rbp_rax, mov_dword_ptr_[rdx@@ +rcx*@@ 4]_r12d, lea_rax_[rcx@@ *4], cmp_r15@@ _r13, jge_0xffffffffffff@@ fe@@ bc, lea_rax_[rdx@@ +rax+4], lea_rdx_[r@@ dx+r@@ 13*4], mov_dword_ptr_[rax]@@ _0xffffffff, add_rax_4, cmp_rdx_rax, jne_0xfffffffffffffff3, mov_r15_r13, jmp_0xfffffffffffffe@@ 96, cmp_byte_ptr_[rdi+0x@@ 8c]_0, jne_0xfffffffffffffe@@ 85, cmp_r15@@ _rbx, jge_0x@@ 12@@ b, lea_rax_[rsp+0x@@ 34], mov_qword_ptr_[rsp+0x28]_rax, lea_r13_[r@@ di+0x20], mov_rbp_qword_ptr_[r@@ 14], mov_rsi_qword_ptr_[r@@ 14+0x28], mov_qword_ptr_[rsp+8]@@ _r15, lea_rax_[rbp+r@@ si], movzx_r12d_byte_ptr_[r@@ ax+r@@ 15], test_r12b@@ _0x80, jne_0x1c, mov_rdi_r13, mov_qword_ptr_[rsp+0x10]_rsi, call_0xfffffffffffed@@ e@@ 74, test_eax_eax, mov_rsi_qword_ptr_[rsp+0x10], jne_0x12@@ 8, mov_r12_rbx, mov_rax_qword_ptr_[r14+0x20], mov_rdi_qword_ptr_[rsp+0x28], sub_r12@@ _r15, add_rsi@@ _r15, add_rsi@@ _rbp, mov_rcx_r13, mov_rdx_r12, mov_qword_ptr_[rsp+0x38]_rax, mov_qword_ptr_[rsp+0x18]_rdi, call_0xfffffffffffff@@ 28@@ d, mov_rbp_rax, lea_rax_[rax@@ -1], cmp_rax@@ _-@@ 4, ja_0x1@@ 1d, mov_edx_dword_ptr_[rsp+0x@@ 34], mov_edi_edx, mov_dword_ptr_[rsp+0x10]_edx, call_0xfffffffffffedd@@ ad, mov_edx_dword_ptr_[rsp+0x10], cmp_edx_eax, je_0xa2, lea_r11_[rsp+0x@@ 40], lea_rdx_[rsp+0x@@ 38], mov_esi_eax, mov_rdi_r11, mov_dword_ptr_[rsp+0x20]_eax, mov_qword_ptr_[rsp+0x10]_r11, call_0xfffffffffffed@@ c0@@ 4, cmp_rbp_rax, jne_0x1@@ a4, mov_rdi_qword_ptr_[r14+8], mov_r11_qword_ptr_[rsp+0x10], add_rdi@@ _r15, mov_rdx_rbp, mov_rsi_r11, call_0xfffffffffffedb@@ 64, mov_r10d_dword_ptr_[rsp+0x@@ 20], mov_rcx_qword_ptr_[rsp+8], mov_rdx_qword_ptr_[r@@ 14+0x10], inc_r15, add_rbp@@ _rcx, mov_dword_ptr_[rdx@@ +rcx*@@ 4]@@ _r10d, lea_rax_[rcx@@ *4], cmp_r15@@ _rbp, jge_0x@@ 1e, lea_rax_[rdx@@ +rax+4], lea_rdx_[r@@ dx+r@@ bp*4], mov_dword_ptr_[rax]@@ _0xffffffff, add_rax_4, cmp_rdx_rax, jne_0xfffffffffffffff3, mov_r15_rbp, cmp_r15@@ _rbx, jl_0xffffffffffff@@ fe@@ f3, mov_qword_ptr_[r14+0x@@ 30]@@ _r15, mov_qword_ptr_[r14+0x@@ 3@@ 8]_r15, xor_eax_eax, jmp_0xfffffffffffffd@@ 5a, mov_rsi_qword_ptr_[r@@ 14+0x28], mov_rdi_qword_ptr_[r14+8], add_rsi@@ _r15, add_rdi@@ _r15, add_rsi_qword_ptr_[r@@ 14], mov_rdx_rbp, mov_dword_ptr_[rsp+0x10]_eax, call_0xfffffffffffeda@@ e8, mov_r10d_dword_ptr_[rsp+0x10], jmp_0xffffffffffffff84, call_0xfffffffffffed@@ 710, mov_rdx_qword_ptr_[rax], mov_rcx_qword_ptr_[r@@ 14+8], mov_edx_dword_ptr_[r@@ dx+r@@ 12*4], mov_byte_ptr_[r@@ cx+r@@ 15@@ ]_dl, mov_rdx_qword_ptr_[r@@ 14+8], mov_rax_qword_ptr_[r14+0x10], movzx_edx_byte_ptr_[r@@ dx+r@@ 15], mov_dword_ptr_[rax+r@@ 15*@@ 4]_edx, inc_r15, jmp_0xffffffffffffff8a, cmp_rax@@ _-3, je_0x3e, mov_rax_qword_ptr_[r14], mov_rdx_qword_ptr_[r@@ 14+8], add_rax_r15, add_rax_qword_ptr_[r@@ 14+0x28], movzx_eax_byte_ptr_[rax], mov_rcx_qword_ptr_[rsp+8], mov_byte_ptr_[rdx@@ +r@@ 15@@ ]_al, inc_r15, mov_rdx_qword_ptr_[r@@ 14+0x10], mov_dword_ptr_[rdx@@ +rcx*@@ 4]_eax, cmp_rbp@@ _-1, jne_0xffffffffffffff@@ 54, mov_rax_qword_ptr_[rsp+0x38], mov_qword_ptr_[r14+0x@@ 20]_rax, jmp_0xffffffffffffff45, mov_rax_qword_ptr_[r14+0x@@ 58], cmp_qword_ptr_[r14+0x@@ 40]_rax, jl@@ _0x2@@ 2f, mov_rax_qword_ptr_[r14], mov_rdx_qword_ptr_[r@@ 14+8], add_rax_r15, add_rax_qword_ptr_[r@@ 14+0x28], movzx_eax_byte_ptr_[rax], mov_rcx_qword_ptr_[rsp+8], mov_byte_ptr_[rdx@@ +r@@ 15@@ ]_al, inc_r15, mov_rdx_qword_ptr_[r@@ 14+0x10], mov_dword_ptr_[rdx@@ +rcx*@@ 4]_eax, jmp_0xffffffffffffff0e, mov_eax_dword_ptr_[r14+0x@@ 90], test_eax_eax, jle_0x@@ 23@@ d, mov_rsi_qword_ptr_[r@@ 14+0x28], lea_edi@@ _[rax-1], add_rsi@@ _rbp, xor_eax_eax, lea_r11_[rsp+0x@@ 40], add_rsi_qword_ptr_[r@@ 14], jmp_0xa, inc_rax, cmp_r12_rax, je_0x13, movzx_ecx_byte_ptr_[rsi@@ +rax], movzx_ecx_byte_ptr_[r@@ dx@@ +rcx], mov_byte_ptr_[r@@ 11@@ +rax@@ ]_cl, cmp_rdi_rax, jne_0xffffffffffffffe9, mov_qword_ptr_[rsp+8]_r11, jmp_0xfffffffffffffc@@ 9d, mov_rbp_r15, jmp_0xfffffffffffffc@@ 69, mov_rdi_qword_ptr_[r14+8], mov_rsi_qword_ptr_[rsp+8], add_rdi@@ _r15, mov_rdx_r13, mov_qword_ptr_[rsp+0x10]_rcx, call_0xfffffffffffed@@ 9b@@ c, mov_rcx_qword_ptr_[rsp+0x10], jmp_0xfffffffffffffd@@ 07, cmp_qword_ptr_[rsp+0x1@@ 8@@ ]_-@@ 3, jne_0x10, mov_rax_qword_ptr_[r14+0x@@ 58], cmp_qword_ptr_[r14+0x@@ 40]_rax, jl_0x1@@ 68, mov_rax_qword_ptr_[r14], mov_rdx_qword_ptr_[r14+0x@@ 78], add_rax_rbp, add_rax_qword_ptr_[r@@ 14+0x28], movzx_eax_byte_ptr_[rax], test_rdx_rdx, jne_0x1@@ be, mov_rdx_qword_ptr_[r@@ 14+8], mov_rcx_r15, mov_byte_ptr_[rdx@@ +r@@ 15@@ ]_al, cmp_byte_ptr_[r@@ 14+0x@@ 8c]_0, jne_0x1@@ 98, mov_rdx_qword_ptr_[r@@ 14+0x10], inc_rbp, mov_dword_ptr_[rdx@@ +rcx*@@ 4]_eax, inc_r15, cmp_r13@@ _-1, jne_0xfffffffffffffb@@ 93, mov_rax_qword_ptr_[rsp+0x38], mov_qword_ptr_[r14+0x@@ 20]_rax, jmp_0xfffffffffffffb@@ 84, mov_rdx_qword_ptr_[r14+0x18], mov_rsi_r15, sub_rsi@@ _rbp, lea_rdx_[r@@ dx+r@@ si*8], mov_rsi_rbp, mov_qword_ptr_[rdx+r@@ si*@@ 8]_rsi, inc@@ _rsi, cmp_rax_rsi, jne_0xfffffffffffffff6, jmp_0xfffffffffffffc@@ 83, cmp_rax_-1, je_0xffffffffffffff@@ 42, lea_rax_[rax+r@@ 15], mov_qword_ptr_[rsp+8]_rax, mov_rbx_rax, mov_rax_qword_ptr_[r14+0x@@ 40], cmp_rbx_rax, ja_0x@@ c4, cmp_qword_ptr_[r@@ 14+0x1@@ 8]_0, je_0xd5, cmp_byte_ptr_[r@@ 14+0x@@ 8c]_0, jne_0x21, test_r15_r15, je_0x14, mov_rsi_qword_ptr_[r14+0x18], xor_eax_eax, mov_qword_ptr_[rsi@@ +rax*@@ 8]_rax, inc_rax, cmp_rax_r15, jne_0xfffffffffffffff6, mov_byte_ptr_[r14+0x@@ 8c@@ ]_1, mov_rdi_qword_ptr_[r14+8], mov_rsi_r11, add_rdi@@ _r15, mov_qword_ptr_[rsp+0x10]_rdx, call_0xfffffffffffed@@ 8b@@ 0, mov_rax_qword_ptr_[r14+0x10], mov_rdx_qword_ptr_[rsp+0x10], lea_rdi_[rax+r@@ 15*4], mov_rax_qword_ptr_[r@@ 14+0x18], mov_dword_ptr_[rdi]@@ _r12d, lea_rsi@@ _[rax+r@@ 15*8], mov_qword_ptr_[rsi@@ ]_rbp, mov_eax_1, cmp_rdx_1, jbe_0x@@ 24, mov_rcx_qword_ptr_[rsp+0x18], cmp_r13_rax, cmova@@ _rcx_rax, add_rcx@@ _rbp, mov_qword_ptr_[rsi@@ +rax*@@ 8]_rcx, mov_dword_ptr_[rdi@@ +rax*@@ 4]_0xffffffff, inc_rax, cmp_rax_rdx, jne_0xffffffffffffffe0, mov_rbx_qword_ptr_[r@@ 14+0x@@ 58], sub_rdx@@ _r13, add_rbx@@ _rdx, mov_qword_ptr_[r14+0x@@ 5@@ 8]_rbx, cmp_rbp@@ _qword_ptr_[r@@ 14+0x@@ 60], jg@@ e_@@ 6, add_qword_ptr_[r@@ 14+0x@@ 6@@ 8]_rdx, cmp_qword_ptr_[r14+0x@@ 4@@ 0]_rbx, cmovle@@ _rbx@@ _qword_ptr_[r@@ 14+0x40], mov_r15_qword_ptr_[rsp+8], add_rbp@@ _r13, jmp_0xfffffffffffffa@@ 7a, mov_rax_qword_ptr_[rsp+0x38], mov_qword_ptr_[r14+0x@@ 20]_rax, jmp_0xfffffffffffffa@@ 71, mov_rax_qword_ptr_[rsp+0x38], mov_qword_ptr_[r14+0x@@ 20]_rax, jmp_0xfffffffffffffd@@ 09, lea_rdi_[rax@@ *8], mov_qword_ptr_[rsp+0x20]_r11, mov_qword_ptr_[rsp+0x10]_rdx, call_0xfffffffffffed@@ 87@@ 7, test_rax_rax, mov_qword_ptr_[r14+0x1@@ 8]_rax, mov_rdx_qword_ptr_[rsp+0x10], mov_r11_qword_ptr_[rsp+0x20], jne_0xffffffffffffff@@ 09, mov_eax_0xc, jmp_0xfffffffffffffa@@ 35, lea_r11_[rsp+0x@@ 40], jmp_0xfffffffffffffd@@ f3, call_0xfffffffffffed@@ 6@@ 27, mov_rdx_qword_ptr_[r14+0x18], mov_qword_ptr_[rdx+r@@ 15*@@ 8]_rbp, jmp_0xfffffffffffffe@@ 66, movzx_eax_byte_ptr_[rdx+rax], jmp_0xfffffffffffffe@@ 4@@ 4
push_r12, movabs_rdx@@ _0xffffffffffffff@@ e, push_rbp, sub_rsp_8, mov_rax_qword_ptr_[rdi+0x40], cmp_rax_rdx, ja_0x1@@ 38, mov_rdx_qword_ptr_[rdi+0x@@ 58], add_rax_rax, cmp_rax_rdx, cmovg@@ _rax_rdx, movsxd_rsi_esi, cmp_rax_rsi, cmovge@@ _rsi_rax, mov_rbp_rdi, call_0xfffffffffffff3b@@ 7, mov_r12d_eax, test_eax_eax, jne_0x68, mov_rdi_qword_ptr_[rbp+0x@@ b8], test_rdi_rdi, je_0x23, mov_rax_qword_ptr_[rbp+0x40], lea_rsi_[rax@@ *8+8], call_0xfffffffffffed@@ 84@@ 3, test_rax_rax, je_0xeb, mov_qword_ptr_[rbp+0x@@ b8]_rax, cmp_byte_ptr_[rbp+0x@@ 88]_0, mov_eax_dword_ptr_[rbp+0x@@ 90], je_0x41, mov_rdi_rbp, cmp_eax_1, jle_0x@@ b1, add_rsp_8, pop_rbp, pop_r12, jmp_0xfffffffffffff90@@ c, mov_rsi_rax, mov_qword_ptr_[rbp+0x@@ 3@@ 0]_rsi, mov_qword_ptr_[rbp+0x@@ 3@@ 8]_rsi, add_rsp_8, pop_rbp, mov_eax_r12d, pop_r12, ret, cmp_eax_1, jg@@ _0x5d, mov_rcx_qword_ptr_[rbp+0x@@ 78], test_rcx_rcx, je_0xffffffffffffffdf, mov_rsi_qword_ptr_[rbp+0x@@ 58], mov_rax_qword_ptr_[rbp+0x30], cmp_qword_ptr_[rbp+0x@@ 4@@ 0]_rsi, cmovle@@ _rsi@@ _qword_ptr_[r@@ bp+0x40], cmp_rsi_rax, jg_0x1@@ 2, jmp_0xffffffffffffffbc, mov_rcx_qword_ptr_[rbp+0x@@ 78], mov_rdx_qword_ptr_[rbp], add_rdx_rax, add_rdx_qword_ptr_[r@@ bp+0x28], movzx_edx_byte_ptr_[rdx], movzx_ecx_byte_ptr_[r@@ cx+rdx], mov_rdx_qword_ptr_[rbp+8], mov_byte_ptr_[rdx@@ +rax@@ ]_cl, inc_rax, cmp_rsi_rax, jne_0xffffffffffffffdd, mov_qword_ptr_[rbp+0x@@ 3@@ 0]_rsi, mov_qword_ptr_[rbp+0x@@ 3@@ 8]_rsi, jmp_0xffffffffffffff8e, mov_rdi_rbp, call_0xfffffffffffff68@@ d, add_rsp_8, pop_rbp, mov_eax_r12d, pop_r12, ret, call_0xfffffffffffff5f@@ 8, add_rsp_8, pop_rbp, mov_eax_r12d, pop_r12, ret, add_rsp_8, mov_r12d@@ _0xc, pop_rbp, mov_eax_r12d, pop_r12, ret
push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, mov_rax_qword_ptr_[rdi+0x40], mov_r12_qword_ptr_[r@@ di+0x@@ c0], cmp_rax_rsi, jg@@ _0x28, cmp_rax_qword_ptr_[r@@ di+0x@@ 58], jge_0x@@ 22, lea_esi_[r@@ bp+1], mov_rdi_rbx, call_0xfffffffffffffe@@ 6a, test_eax_eax, jne_9, cmp_r12_rbp, jl@@ _0x2e, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, ret, mov_rax_qword_ptr_[rbx+0x30], cmp_rax_rbp, jg_0xffffffffffffff@@ e8, cmp_rax_qword_ptr_[r@@ bx+0x@@ 58], jge_0xffffffffffffff@@ e2, lea_esi_[r@@ bp+1], mov_rdi_rbx, call_0xfffffffffffffe@@ 3b, test_eax_eax, je_0xffffffffffffffd3, jmp_0xffffffffffffffd8, mov_rax_qword_ptr_[rbx+0x@@ b8], mov_rdx_rbp, sub_rdx@@ _r12, shl_rdx_3, lea_rdi_[rax+r@@ 12@@ *8+8], xor_esi_esi, call_0xfffffffffffed@@ 4c8, mov_qword_ptr_[rbx+0x@@ c@@ 0]_rbp, jmp_0xffffffffffffffb@@ 0
push_rbp, mov_rbp_rdi, mov_rdi_qword_ptr_[rdi], call_0xfffffffffffed@@ 23@@ 9, mov_rdi_qword_ptr_[rbp+8], call_0xfffffffffffed@@ 230, mov_rdi_qword_ptr_[rbp+0x10], call_0xfffffffffffed@@ 22@@ 7, mov_rdi_qword_ptr_[rbp+0x18], call_0xfffffffffffed@@ 2@@ 1e, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffff@@ ed@@ 21@@ 5
mov_eax_dword_ptr_[rdi+8], and_eax@@ _0x400@@ ff, cmp_eax_6, je_0xd, cmp_eax_3, je_0x10, ret, mov_rdi_qword_ptr_[rdi], jmp_0xffffffffffffffb5, mov_rdi_qword_ptr_[rdi], jmp_0xfffffffffff@@ ed@@ 1e@@ d
endbr64, sub_rsp_8, lea_rdi_[r@@ si+0x28], call_0xffffffffffffff@@ c4, xor_eax_eax, add_rsp_8, ret
push_r15, push_r14, push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, sub_rsp_0x18, mov_rsi_qword_ptr_[r@@ di+0x10], mov_r13_qword_ptr_[r@@ di+8], cmp_rsi@@ _r13, jae_0x@@ ae, mov_r14_qword_ptr_[r@@ di+0x18], mov_r13_qword_ptr_[r@@ di+0x28], mov_rax_rsi, shl_rax_4, mov_edx_ebp, add_rax_qword_ptr_[r@@ bx], and_edx@@ _0xfff@@ c@@ 00@@ ff, cmp_bpl@@ _6, mov_qword_ptr_[rax+@@ 8]_rbp, mov_qword_ptr_[rax]_r12, mov_dword_ptr_[rax+8]_edx, sete_dl, cmp_bpl@@ _5, jne_0xc, cmp_dword_ptr_[rbx+0x@@ b@@ 4]_1, setg@@ _dl, mov_ecx_edx, movzx_edx_byte_ptr_[rax+0x@@ a], shl_ecx@@ _4, and_edx_0xffffff@@ ef, or_edx_ecx, mov_byte_ptr_[rax+0x@@ a@@ ]_dl, mov_qword_ptr_[r@@ 14+r@@ si*@@ 8]_-1, pxor_xmm0_xmm0, mov_rax_qword_ptr_[rbx+0x10], lea_rax_[rax+rax*2], lea_rax_[r@@ 13+rax*8], mov_qword_ptr_[rax+0x10]_0, movups_xmmword_ptr_[rax]_xmm0, mov_rax_qword_ptr_[rbx+0x10], lea_rdx_[rax+rax*2], mov_rax_qword_ptr_[rbx+0x30], lea_rax_[rax@@ +rdx*8], mov_qword_ptr_[rax+0x10]_0, movups_xmmword_ptr_[rax]_xmm0, mov_rax_qword_ptr_[rbx+0x10], lea_rdx_[rax+1], mov_qword_ptr_[rbx+0x1@@ 0]_rdx, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_r15_[r@@ 13+r@@ 13], movabs_rax@@ _0x@@ aaaa@@ aaaa@@ aaaaaa@@ a, cmp_r15_rax, ja_0x@@ e0, mov_rsi_r13, mov_rdi_qword_ptr_[rdi], shl_rsi@@ _5, call_0xfffffffffffed@@ 5@@ 2e, test_rax_rax, je_0xc8, mov_qword_ptr_[rbx]_rax, mov_rdi_qword_ptr_[rbx+0x18], mov_rsi_r13, shl_rsi_4, mov_qword_ptr_[rsp]_rsi, call_0xfffffffffffed@@ 50@@ e, mov_rdi_qword_ptr_[rbx+0x20], mov_rsi_qword_ptr_[rsp], mov_r14_rax, call_0xfffffffffffed@@ 4f@@ e, mov_rdi_qword_ptr_[rbx+0x28], lea_rsi_[r@@ 15+r@@ 13], shl_rsi_4, mov_qword_ptr_[rsp]_rsi, mov_qword_ptr_[rsp+8]_rax, call_0xfffffffffffed@@ 4e@@ 4, mov_rdi_qword_ptr_[rbx+0x30], mov_rsi_qword_ptr_[rsp], mov_r13_rax, call_0xfffffffffffed@@ 4d@@ 4, test_r14_r14, mov_r8_qword_ptr_[rsp+8], je_0x37, test_r8_r8, je_0x32, test_r13_r13, je_0x2d, test_rax_rax, je_0x28, mov_qword_ptr_[rbx+0x1@@ 8]_r14, mov_qword_ptr_[rbx+0x20]@@ _r8, mov_qword_ptr_[rbx+0x@@ 28]@@ _r13, mov_qword_ptr_[rbx+0x30]_rax, mov_qword_ptr_[rbx+@@ 8]_r15, mov_rsi_qword_ptr_[rbx+0x10], jmp_0xfffffffffffffea@@ e, mov_rdi_r14, mov_qword_ptr_[rsp+8]_rax, mov_qword_ptr_[rsp]_r8, call_0xfffffffffffed0@@ 24, mov_r8_qword_ptr_[rsp], mov_rdi_r8, call_0xfffffffffffed0@@ 18, mov_rdi_r13, call_0xfffffffffffed0@@ 10, mov_rax_qword_ptr_[rsp+8], mov_rdi_rax, call_0xfffffffffffed@@ 003, mov_rax_-1, jmp_0xfffffffffffffef@@ 6
push_r13, mov_r13_rsi, shl_r13@@ _4, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, push_rbx, mov_ebx_edx, sub_rsp_8, mov_rax_qword_ptr_[rdi], mov_rsi_qword_ptr_[rax+r@@ 13], mov_rdx_qword_ptr_[r@@ ax+r@@ 13+8], call_0xfffffffffffffe0@@ b, cmp_rax_-1, je_0x54, mov_rdi_qword_ptr_[r12], mov_rcx_rax, mov_edx_ebx, shl_rcx_4, add_rcx@@ _rdi, and_edx@@ _0x3ff, mov_esi_edx, mov_edx_dword_ptr_[r@@ cx+8], shl_esi@@ _8, and_edx@@ _0xfff@@ c@@ 00@@ ff, or_edx@@ _esi, mov_dword_ptr_[rcx+@@ 8]_edx, and_edx@@ _0xfff@@ 8@@ 00@@ ff, or@@ _@@ bx@@ _word_ptr_[r@@ di+r@@ 13+@@ 9], and_ebx@@ _0x3ff, shl_ebx@@ _8, or_ebx@@ _0x40000, or_ebx@@ _edx, mov_rdx_qword_ptr_[r@@ 12+0x20], mov_dword_ptr_[rcx+@@ 8]_ebx, mov_qword_ptr_[rdx@@ +rax*@@ 8]_rbp, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret
push_r15, mov_r10_rsi, push_r14, push_r13, mov_r13d_r8d, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rdx, sub_rsp_0x18, mov_qword_ptr_[rsp+8]_rcx, mov_rdx_qword_ptr_[rbp], mov_rax_r10, shl_rax_4, add_rax_rdx, cmp_byte_ptr_[rax+@@ 8]_4, mov_rdi_qword_ptr_[rbp+0x28], mov_r14_rbx, je_0x1@@ 68, lea_r15_[r@@ 10+r@@ 10@@ *2], shl_r15@@ _3, lea_rsi_[r@@ di+r@@ 15], mov_rcx_qword_ptr_[r@@ si+8], test_rcx_rcx, je_0x2@@ 07, lea_r12_[r@@ bx+r@@ bx*2], mov_rsi_qword_ptr_[r@@ si+0x10], shl_r12@@ _3, add_rdi@@ _r12, mov_r14_qword_ptr_[r@@ si], mov_qword_ptr_[rdi+8]_0, cmp_rcx@@ _1, je_0xdb, mov_rcx_qword_ptr_[r@@ bp+0x10], lea_rsi_[r@@ cx-1], mov_rax_rsi, shl_rax_4, add_rax_rdx, test_byte_ptr_[rax+0x@@ a@@ ]_4, je_0x1@@ 6f, test_rsi_rsi, jle_0x@@ 16@@ 6, shl_rcx_4, sub_rdx_rax, mov_r8_qword_ptr_[r@@ bp+0x20], lea_rcx_[rdx@@ +rcx@@ -0x20], jmp_0x21, add_rax_rcx, dec@@ _rsi, test_byte_ptr_[rax+0x@@ a@@ ]_4, je_0x1@@ 3e, test_rsi_rsi, jle_0x@@ 13@@ 5, cmp_qword_ptr_[r@@ 8+r@@ si*@@ 8]_r14, jne_0xffffffffffffffe3, mov_edx_dword_ptr_[rax+8], shr_edx@@ _8, and_edx@@ _0x3ff, cmp_r13d@@ _edx, jne_0xffffffffffffffd2, call_0xffffffffffffef@@ 38, test_al_al, je_0x45, mov_rax_qword_ptr_[rbp+0x28], mov_edx_r13d, mov_rax_qword_ptr_[rax+r@@ 15+0x10], mov_rdi_rbp, mov_r10_qword_ptr_[r@@ ax+8], mov_rsi_r10, mov_qword_ptr_[rsp]_r10, call_0xfffffffffffffe@@ 65, mov_rbx_rax, cmp_rax_-1, je_0x1d, mov_rdi_r12, add_rdi_qword_ptr_[r@@ bp+0x28], mov_rsi_rbx, call_0xffffffffffffe@@ ef@@ d, test_al_al, mov_r10_qword_ptr_[rsp], jne_0xfffffffffffffe@@ f1, mov_eax_0xc, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, cmp_r10@@ _qword_ptr_[rsp+8], jne_0xb, cmp_r10@@ _rbx, jne_0x1@@ 11, mov_eax_dword_ptr_[rax+8], mov_rsi_r14, shr_eax@@ _8, and_eax@@ _0x3ff, or@@ _r13d_eax, mov_edx_r13d, mov_rdi_rbp, call_0xfffffffffffffd@@ f9, mov_rbx_rax, cmp_rax_-1, je_0xffffffffffffff@@ b1, mov_rdi_qword_ptr_[rbp+0x28], mov_rsi_rax, add_rdi@@ _r12, call_0xffffffffffffee@@ 91, test_al_al, je_0xffffffffffffff@@ 9e, mov_r10@@ _r14, jmp_0xfffffffffffffe@@ 84, mov_rax_qword_ptr_[rbp+0x18], lea_r15_[r@@ bx+r@@ bx*2], shl_r15@@ _3, lea_r12_[r@@ 10@@ *8], mov_r10_qword_ptr_[r@@ ax+r@@ 10@@ *8], mov_qword_ptr_[rdi@@ +r@@ 15+@@ 8]_0, mov_rsi_r10, mov_edx_r13d, mov_rdi_rbp, mov_qword_ptr_[rsp]_r10, call_0xfffffffffffffd@@ a2, cmp_rax_-1, mov_r10_qword_ptr_[rsp], mov_rbx_rax, je_0xffffffffffffff@@ 56, mov_rax_qword_ptr_[rbp+0x18], mov_qword_ptr_[rsp]_r10, mov_rdx_qword_ptr_[r@@ ax+r@@ 12], mov_rdi_r15, mov_qword_ptr_[rax+r@@ 14*@@ 8]_rdx, jmp_0xffffffffffffff25, mov_edx_r13d, mov_rsi_r14, mov_rdi_rbp, call_0xfffffffffffffd@@ 67, mov_rbx_rax, cmp_rax_-1, je_0xffffffffffffff@@ 1f, mov_rdi_qword_ptr_[rbp+0x28], mov_rsi_rbx, add_rdi@@ _r12, call_0xffffffffffffed@@ fb, test_al_al, je_0xffffffffffffff@@ 08, mov_rcx_qword_ptr_[rsp+8], mov_r8d_r13d, mov_rdx_rbx, mov_rsi_r14, mov_rdi_rbp, call_0xfffffffffffffd@@ bd, test_eax_eax, je_0xfffffffffffffea@@ 7, jmp_0xfffffffffffffee9, mov_rax_qword_ptr_[rbp+0x18], mov_rdx_qword_ptr_[r@@ ax+r@@ 10@@ *8], mov_qword_ptr_[rax+r@@ bx*@@ 8]_rdx, xor_eax_eax, jmp_0xfffffffffffffe@@ d3, mov_rsi_r14, call_0xffffffffffffe@@ db@@ 2, mov_r8d_eax, xor_eax_eax, test_r8b_r8b, jne_0xfffffffffffffe@@ be, jmp_0xfffffffffffffeb@@ 3
push_rbp, mov_rbp_rdi, mov_rdi_qword_ptr_[rdi+0x30], call_0xfffffffffffecc@@ c8, mov_rdi_qword_ptr_[rbp+0x@@ 48], call_0xfffffffffffecc@@ bf, mov_rax_qword_ptr_[rbp+0x@@ 50], lea_rdx_[r@@ bp+8], cmp_rax_rdx, je_0x14, mov_rdi_qword_ptr_[rax+0x10], call_0xfffffffffffecc@@ a9, mov_rdi_qword_ptr_[rbp+0x@@ 50], call_0xfffffffffffecc@@ a0, mov_rdi_qword_ptr_[rbp+0x18], call_0xfffffffffffecc@@ 97, mov_rdi_qword_ptr_[rbp+0x@@ 60], call_0xfffffffffffecc@@ 8e, mov_rdi_qword_ptr_[rbp+0x@@ 58], call_0xfffffffffffecc@@ 85, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffff@@ ec@@ c7@@ c
push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+0x10], call_0xfffffffffffecc@@ 68, mov_rdi_qword_ptr_[rbx+0x18], call_0xfffffffffffecc@@ 5f, cmp_byte_ptr_[rbx+0x@@ 8b@@ ]_0, jne_0xb, pop_rbx, ret, mov_rdi_qword_ptr_[rbx+8], pop_rbx, jmp_0xfffffffffff@@ ec@@ c4@@ 3
push_r13, push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_8, mov_rdi_qword_ptr_[rdi], test_rdi_rdi, je_0x32, cmp_qword_ptr_[r12+0x1@@ 0]_0, je_0x2a, xor_ebx_ebx, jmp_0xd, mov_rdi_qword_ptr_[r12], mov_rax_rbx, shl_rax_4, add_rdi_rax, inc_rbx, call_0xfffffffffffff9e@@ 7, cmp_qword_ptr_[r12+0x1@@ 0]_rbx, ja_0xffffffffffffff@@ e5, mov_rdi_qword_ptr_[r@@ 12+0x18], xor_ebx_ebx, call_0xfffffffffffec@@ be@@ 4, cmp_qword_ptr_[r12+0x1@@ 0]_0, je_0x5b, mov_rax_qword_ptr_[r12+0x@@ 30], test_rax_rax, je_0x10, lea_rdx_[r@@ bx+r@@ bx*2], mov_rdi_qword_ptr_[r@@ ax+rdx*@@ 8+0x10], call_0xfffffffffffec@@ bb@@ d, mov_rax_qword_ptr_[r12+0x@@ 38], test_rax_rax, je_0x10, lea_rdx_[r@@ bx+r@@ bx*2], mov_rdi_qword_ptr_[r@@ ax+rdx*@@ 8+0x10], call_0xfffffffffffecb@@ a5, mov_rax_qword_ptr_[r12+0x@@ 28], test_rax_rax, je_0x10, lea_rdx_[r@@ bx+r@@ bx*2], mov_rdi_qword_ptr_[r@@ ax+rdx*@@ 8+0x10], call_0xfffffffffffecb@@ 8d, inc_rbx, cmp_qword_ptr_[r12+0x1@@ 0]_rbx, ja_0xffffffffffffff@@ b0, mov_rdi_qword_ptr_[r12+0x@@ 28], xor_r13d_r13d, call_0xfffffffffffecb@@ 76, mov_rdi_qword_ptr_[r12+0x30], call_0xfffffffffffecb@@ 6c, mov_rdi_qword_ptr_[r12+0x@@ 38], call_0xfffffffffffecb@@ 62, mov_rdi_qword_ptr_[r12], call_0xfffffffffffecb@@ 59, mov_rdi_qword_ptr_[r12+0x@@ 40], test_rdi_rdi, je_0x61, lea_rax_[r@@ 13+r@@ 13@@ *2], lea_rbp_[r@@ di+rax*8], xor_ebx_ebx, cmp_qword_ptr_[rbp]_0, jle_0x@@ 1e, mov_rax_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rax+r@@ bx*8], inc_rbx, call_0xfffffffffffffe@@ 4d, cmp_qword_ptr_[r@@ bp@@ ]_rbx, jg_0xffffffffffffff@@ ec, mov_rdi_qword_ptr_[rbp+0x10], inc@@ _r13, call_0xfffffffffffec@@ b0@@ b, cmp_qword_ptr_[r12+0x@@ 8@@ 8]_r13, jb@@ _0xe, mov_rdi_qword_ptr_[r12+0x@@ 40], jmp_0xffffffffffffffb7, mov_rdi_qword_ptr_[r12+0x@@ 40], call_0xfffffffffffeca@@ eb, mov_rdi_qword_ptr_[r12+0x@@ 78], lea_rax_[rip+0x15@@ 9d@@ a], cmp_rdi_rax, je_7, call_0xfffffffffffeca@@ d5, mov_rdi_qword_ptr_[r12+0x@@ e0], call_0xfffffffffffeca@@ c8, add_rsp_8, pop_rbx, pop_rbp, mov_rdi_r12, pop_r12, pop_r13, jmp_0xfffffffffff@@ ec@@ ab@@ 6
push_r14, mov_r14_rdi, push_r13, push_r12, push_rbp, push_rbx, cmp_qword_ptr_[rdi+0x@@ e8]_0, jle_0x@@ 84, xor_r13d_r13d, mov_rax_qword_ptr_[r14+0x@@ f8], mov_r12_qword_ptr_[r@@ ax+r@@ 13*8], cmp_qword_ptr_[r12+0x@@ 20]_0, jle_0x@@ 2b, xor_ebx_ebx, mov_rax_qword_ptr_[r12+0x@@ 28], mov_rbp_qword_ptr_[r@@ ax+r@@ bx*8], inc_rbx, mov_rdi_qword_ptr_[rbp+0x20], call_0xfffffffffffeca@@ 68, mov_rdi_rbp, call_0xfffffffffffeca@@ 60, cmp_qword_ptr_[r12+0x@@ 20]@@ _rbx, jg_0xffffffffffffff@@ de, mov_rdi_qword_ptr_[r12+0x@@ 28], call_0xfffffffffffeca@@ 4f, mov_rax_qword_ptr_[r12+0x10], test_rax_rax, je_0x15, mov_rdi_qword_ptr_[rax+0x10], call_0xfffffffffffeca@@ 3c, mov_rdi_qword_ptr_[r12+0x10], call_0xfffffffffffeca@@ 32, mov_rdi_r12, inc@@ _r13, call_0xfffffffffffeca@@ 27, cmp_qword_ptr_[r14+0x@@ e@@ 8]_r13, jg_0xffffffffffffff@@ 8b, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_qword_ptr_[r14+0x@@ e8]_0, mov_qword_ptr_[r14+0x@@ c8]_0, pop_r14, ret
mov_rdx_qword_ptr_[r@@ di+0x30], inc@@ _rsi, cmp_rsi_rdx, jge_0x@@ 2f, mov_rcx_qword_ptr_[r@@ di+0x10], mov_eax_1, jmp_0x15, inc@@ _rsi, inc_eax, cmp_rsi_rdx, je_0x10, cmp_dword_ptr_[r@@ cx+r@@ si@@ *4@@ ]_-1, je_0xfffffffffffffff2, ret, ret, mov_eax_1, ret
xor_eax_eax, test_rdi_rdi, jle_0x@@ 30, lea_rcx_[r@@ di-1], mov_rdi_qword_ptr_[rsi], xor_esi_esi, jmp_0x18, lea_rax_[r@@ cx+r@@ si], shr_rax_1, cmp_qword_ptr_[r@@ di@@ +rax*@@ 8]_rdx, jl@@ _0x1d, mov_rcx_rax, cmp_rcx_rsi, ja_0xffffffffffffff@@ ed, xor_eax_eax, cmp_rdx_qword_ptr_[r@@ di+r@@ si*8], je_0x1d, ret, lea_rsi_[rax+1], jmp_0xffffffffffffffe4, lea_rax_[r@@ si+1], ret
push_r15, mov_r15_rsi, push_r14, lea_r14_[r@@ si+0x10], push_r13, mov_r13_rcx, push_r12, mov_r12d_r8d, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rdi_qword_ptr_[r15+8], mov_rdx_rbp, mov_rsi_r14, call_0xffffffffffffff@@ 75, test_rax_rax, jne_0x@@ b5, mov_rax_rbp, shl_rax_4, add_rax_qword_ptr_[r@@ bx], movzx_edx_byte_ptr_[r@@ ax+8], cmp_edx@@ _r12d, jne_7, cmp_qword_ptr_[rax]@@ _r13, je_0x69, mov_rsi_rbp, mov_rdi_r15, call_0xffffffffffffe@@ 9b@@ 9, test_al_al, je_0x72, mov_rdx_qword_ptr_[rbx+0x28], lea_rbp_[r@@ bp+r@@ bp@@ *2], shl_rbp@@ _3, add_rdx@@ _rbp, mov_rax_qword_ptr_[rdx+8], test_rax_rax, je_0x71, mov_rdx_qword_ptr_[rdx+0x10], cmp_rax_2, je_0xf, mov_rbp_qword_ptr_[r@@ dx], jmp_0xffffffffffffff9b, mov_rdx_qword_ptr_[rdx+8], mov_r8d_r12d, mov_rcx_r13, mov_rsi_r15, mov_rdi_rbx, call_0xffffffffffffff@@ 60, test_eax_eax, jne_0x2e, mov_rax_qword_ptr_[rbx+0x28], mov_rdx_qword_ptr_[r@@ ax+r@@ bp+0x10], jmp_0xffffffffffffffd1, cmp_r12d@@ _9, jne_0x2c, mov_rsi_rbp, mov_rdi_r15, call_0xffffffffffffe@@ 94@@ c, test_al_al, jne_0x1d, mov_eax_0xc, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret
cmp_rdx_qword_ptr_[r@@ di], jge_0x@@ 1e, mov_rax_qword_ptr_[rsi], mov_rcx_qword_ptr_[r@@ ax+rdx*@@ 8+8], mov_qword_ptr_[rax+rdx*@@ 8]_rcx, inc_rdx, cmp_rdx_qword_ptr_[r@@ di], jl@@ _0xfffffffffffffff@@ 1, ret
endbr64, movzx_eax_byte_ptr_[r@@ si+0x30], cmp_al_4, je_0x66, cmp_al@@ _0x11, je_0xa, xor_eax_eax, ret, mov_rax_qword_ptr_[rsi+8], test_rax_rax, je_0xfffffffffffffff1, cmp_byte_ptr_[rax+0x@@ 30]@@ _0x11, jne_0xffffffffffffffeb, mov_rcx_qword_ptr_[rax+0x28], mov_rax_qword_ptr_[rax+8], mov_qword_ptr_[rsi+8]_rax, test_rax_rax, je_5, mov_qword_ptr_[rax]_rsi, mov_rax_qword_ptr_[rdi+0xe0], mov_rdx_qword_ptr_[r@@ si+0x28], mov_rdx_qword_ptr_[r@@ ax+rdx*8], mov_qword_ptr_[rax@@ +rcx*@@ 8]_rdx, cmp_rcx@@ _0x3f, jg_0xffffffffffffff@@ be, mov_rax@@ _-2, rol_rax@@ _cl, and@@ _qword_ptr_[r@@ di+0x@@ a0]_rax, jmp_0xffffffffffffffab, mov_rax_qword_ptr_[rdi+0xe0], test_rax_rax, je_0xffffffffffffff@@ 96, movsxd_rdx_dword_ptr_[r@@ si+0x28], mov_rcx_qword_ptr_[r@@ ax+rdx*8], mov_eax_1, shl_eax_cl, cdqe, mov_qword_ptr_[rsi+0x@@ 28]_rcx, or_qword_ptr_[r@@ di+0x@@ a0]_rax, xor_eax_eax, ret
endbr64, movzx_eax_byte_ptr_[r@@ si+0x30], mov_rdx_qword_ptr_[r@@ si+8], cmp_al@@ _0xb, je_0x2a, cmp_al@@ _0x10, je_0x2e, test_rdx_rdx, je_0xa, mov_rax_qword_ptr_[r@@ si+0x20], mov_qword_ptr_[rdx+0x@@ 20]_rax, mov_rax_qword_ptr_[rsi+0x10], test_rax_rax, je_0xa, mov_rdx_qword_ptr_[r@@ si+0x20], mov_qword_ptr_[rax+0x20]_rdx, xor_eax_eax, ret, mov_qword_ptr_[rdx+0x@@ 20]_rsi, xor_eax_eax, ret, mov_rax_qword_ptr_[rsi+0x10], mov_rcx_qword_ptr_[rax+0x18], mov_qword_ptr_[rdx+0x@@ 20]_rcx, mov_rdx_qword_ptr_[r@@ si+0x20], mov_qword_ptr_[rax+0x20]_rdx, xor_eax_eax, ret
push_r15, mov_r10@@ _rcx, mov_r15_rdx, push_r14, xor_r11d_r11d, push_r13, mov_r13_rdi, push_r12, push_rbp, mov_rbp_r8, push_rbx, sub_rsp_0x38, mov_qword_ptr_[rsp+0x10]_rsi, mov_rax_qword_ptr_[rdi+0x@@ 98], mov_rsi_qword_ptr_[rdi+0x@@ c8], mov_qword_ptr_[rsp+0x20]_r9, mov_qword_ptr_[rsp+0x18]_rax, mov_r12@@ _qword_ptr_[rsp+0x70], mov_rcx_rsi, jmp_0x29, lea_rax_[r@@ cx+r@@ 11], mov_r9_qword_ptr_[r@@ 13+0x@@ d8], sar_rax_1, lea_rdx_[rax+rax*4], lea_rdx_[r@@ 9@@ +rdx*8], cmp_qword_ptr_[r@@ dx+@@ 8]_rbp, jl_0x1@@ 36, mov_rcx_rax, cmp_rcx@@ _r11, jg_0xffffffffffffff@@ da, cmp_rsi@@ _r11, jle_0x@@ 15@@ a, mov_r8_qword_ptr_[r@@ 13+0x@@ d8], lea_rax_[r@@ 11+r@@ 11@@ *4], lea_rax_[r@@ 8@@ +rax*8], cmp_rbp@@ _qword_ptr_[r@@ ax+8], mov_rax_-1, cmovne@@ _r11@@ _rax, mov_rcx_rsi, xor_ebx_ebx, jmp_0x27, lea_rax_[r@@ cx+r@@ bx], mov_rdi_qword_ptr_[r13+0x@@ d8], sar_rax_1, lea_rdx_[rax+rax*4], lea_rdx_[r@@ di@@ +rdx*8], cmp_qword_ptr_[r@@ dx+@@ 8]_r12, jl@@ _0x@@ ee, mov_rcx_rax, cmp_rcx@@ _rbx, jg_0xffffffffffffff@@ da, cmp_rsi@@ _rbx, jle_0x@@ 10e, mov_rcx_qword_ptr_[r@@ 13+0x@@ d8], lea_rax_[rbx+r@@ bx*4], lea_rax_[rcx@@ +rax*8], cmp_r12@@ _qword_ptr_[r@@ ax+8], mov_rax_-1, cmovne@@ _rbx_rax, mov_rax_qword_ptr_[rsp+0x10], cmp_qword_ptr_[rax]_0, jle_0x@@ d1, mov_qword_ptr_[rsp+0x2@@ 8]_rbp, xor_r14d_r14d, mov_rbp_rbx, mov_rbx@@ _r11, mov_r11@@ _r13, mov_r13_r12, mov_r12@@ _r10, mov_rax_qword_ptr_[r15], mov_rdx_qword_ptr_[r@@ 11+0x@@ d8], mov_rsi_qword_ptr_[rax+r@@ 14*8], mov_rdi_qword_ptr_[rsp+0x18], lea_rax_[r@@ si+r@@ si*4], lea_rax_[rdx@@ +rax*8], mov_rax_qword_ptr_[rax], mov_r8_qword_ptr_[rsp+0x28], shl_rax_4, add_rax_qword_ptr_[r@@ di], mov_rdx_qword_ptr_[rax], mov_r9_rbx, mov_rcx_r12, mov_rdi_r11, mov_qword_ptr_[rsp+8]_rdx, call_0xffffffffffffe@@ 440, mov_dword_ptr_[rsp+4]_eax, mov_rax_qword_ptr_[r15], mov_rcx_qword_ptr_[rsp+0x20], mov_rsi_qword_ptr_[rax+r@@ 14*8], mov_rdx_qword_ptr_[rsp+8], mov_r9_rbp, mov_r8_r13, mov_rdi_r11, call_0xffffffffffffe4@@ 1d, cmp_dword_ptr_[rsp+@@ 4]_eax, je_0x3c, mov_eax_1, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_r11@@ _[rax+1], jmp_0xfffffffffffffecf, lea_rbx_[rax+1], jmp_0xffffffffffffff17, mov_rax_qword_ptr_[rsp+0x10], inc@@ _r14, cmp_r14@@ _qword_ptr_[r@@ ax], jl_0xffffffffffffff@@ 52, xor_eax_eax, jmp_0xffffffffffffffb8, mov_r11@@ _-1, jmp_0xfffffffffffffe@@ c3, mov_rbx@@ _-1, jmp_0xffffffffffffff0@@ f
test_rsi_rsi, je_0x1@@ ad, push_r12, mov_r12_rsi, push_rbp, push_rbx, mov_rcx_qword_ptr_[r@@ si+8], test_rcx_rcx, je_0xf9, mov_rax_qword_ptr_[rdi+8], mov_rsi_qword_ptr_[rdi], lea_rdx_[rax@@ +rcx*2], mov_rbp_rdi, cmp_rsi_rdx, jl_0x1@@ 22, test_rax_rax, je_0x1@@ 4f, lea_rbx_[rax@@ +rcx*2], lea_rdx_[r@@ cx-1], neg@@ _rcx, dec_rax, test_rcx_rcx, jns@@ _0x5@@ 2, test_rax_rax, js_0x4@@ d, mov_rdi_qword_ptr_[rbp+0x10], mov_r8_qword_ptr_[r@@ 12+0x10], jmp_0x22, jge_0x@@ c0, dec@@ _rbx, dec@@ _rdx, mov_qword_ptr_[rdi@@ +r@@ bx*@@ 8]_rsi, mov_rcx_rdx, not_rcx, test_rcx_rcx, jns@@ _0x27, test_rax_rax, js@@ _0x22, mov_rsi_qword_ptr_[r@@ 8@@ +rdx*8], cmp_qword_ptr_[r@@ di@@ +rax*@@ 8]_rsi, jne_0xffffffffffffffd8, dec@@ _rdx, mov_rcx_rdx, not_rcx, dec_rax, test_rcx_rcx, js_0xffffffffffffff@@ e2, test_rdx_rdx, js_0x1@@ e, inc_rdx, mov_rax_qword_ptr_[rbp+0x10], sub_rbx@@ _rdx, mov_rsi_qword_ptr_[r@@ 12+0x10], lea_rdi_[rax+r@@ bx*8], shl_rdx_3, call_0xfffffffffffec@@ 7e@@ 4, mov_rcx_qword_ptr_[r@@ bp+8], mov_rax_qword_ptr_[r12+8], lea_r8_[r@@ cx@@ +rax*2@@ -1], mov_rdx_r8, sub_rdx_rbx, inc_rdx, je_0x38, lea_rax_[r@@ cx-1], add_rcx_rdx, mov_qword_ptr_[rbp+@@ 8]_rcx, mov_rdi_qword_ptr_[rbp+0x10], mov_rsi_qword_ptr_[r@@ di+r@@ 8@@ *8], mov_rcx_qword_ptr_[r@@ di+rax*8], lea_r9@@ _[rax@@ +rdx], lea_r9_[r@@ di+r@@ 9@@ *8], cmp_rsi_rcx, jle_0x@@ 2d, mov_qword_ptr_[r@@ 9]@@ _rsi, dec@@ _r8, dec@@ _rdx, jne_0xffffffffffffffe2, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, ret, dec_rax, jmp_0xffffffffffffff53, mov_qword_ptr_[r@@ 9@@ ]_rcx, dec_rax, jns_0xffffffffffffff@@ ba, lea_rsi_[r@@ di+r@@ bx*8], shl_rdx_3, call_0xfffffffffffec@@ 7@@ 60, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret, add_rcx_rsi, mov_rsi_rcx, mov_rdi_qword_ptr_[rdi+0x10], shl_rsi_4, lea_rbx_[r@@ cx@@ +rcx], call_0xfffffffffffec@@ 8@@ 2e, test_rax_rax, je_0x49, mov_qword_ptr_[rbp+0x10]_rax, mov_rax_qword_ptr_[rbp+8], mov_qword_ptr_[rbp]_rbx, mov_rcx_qword_ptr_[r@@ 12+8], test_rax_rax, jne_0xfffffffffffffe@@ bd, mov_qword_ptr_[rbp+@@ 8]_rcx, mov_rdi_qword_ptr_[rbp+0x10], mov_rsi_qword_ptr_[r@@ 12+0x10], mov_rax_qword_ptr_[r12+8], lea_rdx_[rax*8], call_0xfffffffffffec@@ 7@@ 00, jmp_0xffffffffffffff6b, xor_eax_eax, ret, mov_eax_0xc, jmp_0xffffffffffffff5@@ a
push_r15, push_r14, push_r13, mov_r13_rsi, push_r12, push_rbp, mov_rbp_rdx, push_rbx, lea_rbx_[rdx@@ +rdx*2], shl_rbx@@ _3, sub_rsp_0x68, mov_qword_ptr_[rsp+0x10]_rdi, mov_dword_ptr_[rsp+0x1@@ c]_ecx, mov_r14_qword_ptr_[r@@ si+0x28], add_r14@@ _rbx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x58]_rax, xor_eax_eax, mov_rax_qword_ptr_[r14+8], mov_qword_ptr_[rsp+0x28]_0, lea_rdi_[rax+1], mov_qword_ptr_[rsp+0x20]_rdi, shl_rdi_3, call_0xfffffffffffec@@ 6f@@ a, mov_qword_ptr_[rsp+0x30]_rax, test_rax_rax, je_0x2@@ 2d, mov_rax_qword_ptr_[r13+0x@@ 30], mov_rdx_qword_ptr_[r13], mov_r15_rbp, shl_r15@@ _4, mov_qword_ptr_[rax+r@@ bx+@@ 8]_-1, lea_rax_[rdx+r@@ 15], mov_r8d_dword_ptr_[r@@ ax+8], test_r@@ 8d@@ _0x3@@ ff@@ 00, jne_0x1@@ 60, test_byte_ptr_[r@@ ax+@@ 8]_8, je_0x1@@ a6, mov_rsi_qword_ptr_[r@@ 13+0x28], lea_rax_[r@@ si+r@@ bx], cmp_qword_ptr_[rax+8]_0, jle_0x@@ 19@@ 3, mov_byte_ptr_[rsp+0x1@@ b]_0, xor_r12d_r12d, lea_r14_[rsp+0x20], jmp_0x5@@ 3, movdqu_xmm0_xmmword_ptr_[r@@ ax], lea_r11_[rsp+0x@@ 40], movaps_xmmword_ptr_[rsp+0x40]_xmm0, mov_rax_qword_ptr_[rax+0x10], mov_qword_ptr_[rsp+0x50]_rax, mov_rsi_r11, mov_rdi_r14, call_0xfffffffffffffd@@ 5b, test_eax_eax, jne_0x74, mov_rax_qword_ptr_[r13+0x@@ 30], cmp_qword_ptr_[r@@ ax+r@@ 15+@@ 8]_0, je_0x90, mov_rsi_qword_ptr_[r@@ 13+0x28], inc_r12, lea_rax_[r@@ si+r@@ bx], cmp_qword_ptr_[rax+@@ 8]_r12, jle_0x@@ a9, mov_rax_qword_ptr_[rax+0x10], mov_rdx_qword_ptr_[r@@ ax+r@@ 12*8], mov_rax_qword_ptr_[r13+0x@@ 30], lea_r8@@ _[rdx@@ +rdx*2], lea_r15_[r@@ 8@@ *8], add_rax_r15, mov_rcx_qword_ptr_[rax+8], cmp_rcx_-1, je_0x6a, test_rcx_rcx, jne_0xffffffffffffff@@ 8d, lea_r11_[rsp+0x@@ 40], mov_rdi_r11, mov_rsi_r13, mov_qword_ptr_[rsp+8]_r11, call_0xfffffffffffffeb@@ 3, test_eax_eax, mov_r11_qword_ptr_[rsp+8], je_0xffffffffffffff@@ 86, mov_rbx_qword_ptr_[rsp+0x58], xor_rbx_qword_ptr_fs:[0x28], jne_0x12@@ c, add_rsp_0x68, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_qword_ptr_[rsp+0x50], call_0xfffffffffffec@@ 1e@@ 3, mov_byte_ptr_[rsp+0x1@@ b@@ ]_1, jmp_0xffffffffffffff67, inc_r12, lea_rax_[r@@ si+r@@ bx], mov_byte_ptr_[rsp+0x1@@ b@@ ]_1, cmp_qword_ptr_[rax+@@ 8]_r12, jg_0xffffffffffffff@@ 63, lea_rdi_[rsp+0x20], mov_rsi_rbp, call_0xffffffffffffe@@ 27@@ 2, test_al_al, je_0xcb, mov_rax_qword_ptr_[r13+0x@@ 30], cmp_byte_ptr_[rsp+0x1@@ c]_1, lea_rdx_[rax+r@@ bx], je_0x7d, cmp_byte_ptr_[rsp+0x1@@ b]_0, je_0x76, mov_qword_ptr_[rdx@@ +8]_0, jmp@@ _0x80, cmp_qword_ptr_[r@@ 14+@@ 8]_0, je_0x4b, mov_rcx_qword_ptr_[r@@ 14+0x10], mov_rcx_qword_ptr_[r@@ cx], shl_rcx_4, test_byte_ptr_[rdx@@ +rcx+0x@@ a@@ ]_4, jne_0xfffffffffffffe@@ 8f, shr_r8d@@ _8, and_r8d@@ _0x3ff, mov_rcx_rbp, mov_rdx_rbp, mov_rsi_rbp, mov_rdi_r13, call_0xfffffffffffff@@ 1e@@ c, test_eax_eax, jne_0xffffffffffffff@@ 35, mov_rax_qword_ptr_[r13], add_rax_r15, jmp_0xfffffffffffffe@@ 5e, lea_rdi_[rsp+0x20], mov_rsi_rbp, call_0xffffffffffffe@@ 1e8, test_al_al, je_0x41, mov_rax_qword_ptr_[r13+0x@@ 30], movdqa_xmm2_xmmword_ptr_[r@@ sp+0x@@ 20], movups_xmmword_ptr_[r@@ ax+r@@ bx@@ ]_xmm2, mov_rdx_qword_ptr_[rsp+0x30], mov_qword_ptr_[rax+r@@ bx+0x1@@ 0]_rdx, mov_rbx_qword_ptr_[rsp+0x10], mov_rax_qword_ptr_[rsp+0x30], movdqa_xmm1_xmmword_ptr_[r@@ sp+0x@@ 20], mov_qword_ptr_[rbx+0x10]_rax, movaps_xmmword_ptr_[r@@ bx@@ ]_xmm1, xor_eax_eax, jmp_0xfffffffffffffede, mov_eax_0xc, jmp_0xfffffffffffffe@@ cb, call_0xfffffffffffec@@ 29@@ 6
push_r15, mov_r15d_ecx, push_r14, mov_r14_rsi, push_r13, mov_r13_rdi, push_r12, push_rbp, push_rbx, mov_rbx_rdx, sub_rsp_0x38, mov_rbp_qword_ptr_[r@@ si+8], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, lea_rdi_[r@@ bp*8], mov_qword_ptr_[rsp+0x10]@@ _rbp, mov_qword_ptr_[rsp+0x18]_0, call_0xfffffffffffec@@ 46@@ c, mov_qword_ptr_[rsp+0x20]_rax, test_rax_rax, je_0xff, test_rbp_rbp, jle_0x@@ 92, xor_r12d_r12d, lea_rbp_[rsp+0x10], mov_rax_qword_ptr_[r14+0x10], mov_r9_qword_ptr_[r@@ ax+r@@ 12*8], mov_rax_qword_ptr_[r13+0x@@ 30], lea_rdx_[r@@ 9+r@@ 9@@ *2], lea_r10@@ _[rax@@ +rdx*8], mov_rsi_qword_ptr_[r@@ 10+8], test_rsi_rsi, jle_0x@@ 85, mov_r8_qword_ptr_[r@@ 10@@ +0x10], mov_rdi_qword_ptr_[r13], xor_edx_edx, jmp_0xd, inc_rdx, cmp_rsi_rdx, je_0x6a, mov_rcx_qword_ptr_[r@@ 8@@ +rdx*8], mov_rax_rcx, shl_rax_4, add_rax_rdi, movzx_r11d_byte_ptr_[r@@ ax+8], cmp_r15d@@ _r11d, jne_0xffffffffffffffe2, cmp_rbx_qword_ptr_[r@@ ax], jne_0xffffffffffffffdd, cmp_rcx_-1, je_0x47, mov_r8d_r15d, mov_rcx_rbx, mov_rdx_r9, mov_rsi_rbp, mov_rdi_r13, call_0xfffffffffffff6a@@ 6, test_eax_eax, jne_0x3e, inc_r12, cmp_qword_ptr_[r@@ 14+@@ 8]_r12, jg_0xffffffffffffff@@ 86, mov_rdi_qword_ptr_[r14+0x10], call_0xfffffffffffeb@@ fe0, mov_rax_qword_ptr_[rsp+0x20], movdqa_xmm0_xmmword_ptr_[r@@ sp+0x10], mov_qword_ptr_[r14+0x1@@ 0]_rax, movaps_xmmword_ptr_[r@@ 14@@ ]_xmm0, xor_eax_eax, jmp_0x27, mov_rsi_r10, mov_rdi_rbp, call_0xfffffffffffffa@@ 8a, test_eax_eax, je_0xffffffffffffffc6, mov_rdi_qword_ptr_[rsp+0x20], mov_dword_ptr_[rsp+0xc]_eax, call_0xfffffffffffeb@@ fa@@ 8, mov_eax_dword_ptr_[rsp+0xc], mov_rbx_qword_ptr_[rsp+0x28], xor_rbx_qword_ptr_fs:[0x28], jne_0x18, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_eax_0xc, jmp_0xffffffffffffffdc, call_0xfffffffffffec@@ 13@@ 9
push_r13, xor_eax_eax, push_r12, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_8, mov_rsi_qword_ptr_[r@@ si+8], test_rsi_rsi, je_0xc5, mov_r8_qword_ptr_[r@@ dx+8], mov_r12_rdx, test_r8_r8, je_0xb5, mov_rax_qword_ptr_[rdi+8], mov_r13_qword_ptr_[rdi], lea_rdx_[r@@ si+r@@ 8], lea_rcx_[rdx+rax], mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+0x10], cmp_rcx@@ _r13, jg_0x1@@ 16, lea_r10@@ _[rax+r@@ si], mov_r11_qword_ptr_[r@@ bp+0x10], mov_rdx_qword_ptr_[r12+0x10], add_r10@@ _r8, dec@@ _rsi, dec@@ _r8, mov_rcx_qword_ptr_[r@@ 11+r@@ si*8], mov_r9_qword_ptr_[r@@ dx+r@@ 8@@ *8], dec_rax, cmp_rcx@@ _r9, je_0x16, jge_0x@@ 7b, dec@@ _r8, js_0x8@@ 6, mov_r9_qword_ptr_[r@@ dx+r@@ 8@@ *8], cmp_rcx@@ _r9, jne_0xffffffffffffffee, test_rax_rax, jns@@ _0xd, jmp_0x13, dec_rax, cmp_rax_-1, je_0xa, cmp_qword_ptr_[r@@ di@@ +rax*@@ 8]_rcx, jg@@ _0xfffffffffffffff@@ 3, je_9, dec@@ _r10, mov_qword_ptr_[rdi@@ +r@@ 10@@ *@@ 8]_rcx, dec@@ _rsi, js_0x5@@ 5, dec@@ _r8, js@@ _0x50, mov_rcx_qword_ptr_[r@@ 11+r@@ si*8], jmp_0xffffffffffffffca, dec_rax, mov_qword_ptr_[r@@ 9@@ ]_rcx, cmp_rax_-1, jne_0x66, shl_rdx_3, lea_rsi_[r@@ di+r@@ 10@@ *8], call_0xfffffffffffec@@ 20@@ c, xor_eax_eax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, dec@@ _rsi, js_0xd, mov_rcx_qword_ptr_[r@@ 11+r@@ si*8], jmp_0xffffffffffffff77, mov_rcx_qword_ptr_[rbx+8], mov_rdx_qword_ptr_[rbp+8], lea_rax_[r@@ cx-1], add_rdx_rcx, add_rdx_qword_ptr_[r@@ 12+8], lea_r8@@ _[rdx@@ -1], sub_rdx@@ _r10, add_rcx_rdx, mov_qword_ptr_[rbx+@@ 8]_rcx, test_rdx_rdx, jle_0xffffffffffffff@@ a7, test_rax_rax, js_0xffffffffffffff@@ a2, mov_rsi_qword_ptr_[r@@ di+r@@ 8@@ *8], mov_rcx_qword_ptr_[r@@ di+rax*8], lea_r9@@ _[rax@@ +rdx], lea_r9_[r@@ di+r@@ 9@@ *8], cmp_rsi_rcx, jle_0xffffffffffffff@@ 7d, mov_qword_ptr_[r@@ 9]@@ _rsi, dec@@ _r8, dec@@ _rdx, jne_0xffffffffffffffde, xor_edx_edx, jmp_0xffffffffffffff7a, add_r13@@ _rdx, lea_rsi_[r@@ 13*8], call_0xfffffffffffec@@ 26@@ a, mov_rdi_rax, test_rax_rax, je_0x1b, mov_qword_ptr_[rbx+0x10]_rax, mov_qword_ptr_[rbx@@ ]_r13, mov_rax_qword_ptr_[rbx+8], mov_rsi_qword_ptr_[rbp+8], mov_r8_qword_ptr_[r@@ 12+8], jmp_0xfffffffffffffe@@ c4, mov_eax_0xc, jmp_0xffffffffffffff4@@ a
push_r13, mov_r13_rdi, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rcx, sub_rsp_0x18, mov_edi_dword_ptr_[r@@ si], cmp_edi@@ _0xf, je_0x7d, movsxd_rsi@@ _edi, mov_rax_rsi, shl_rax_6, mov_rdx_qword_ptr_[r13], lea_ecx_[r@@ di+1], add_rax_8, shl_rsi@@ _6, lea_rdi_[r@@ dx+r@@ si], mov_dword_ptr_[r12@@ ]_ecx, mov_qword_ptr_[rdi+8]_0, mov_qword_ptr_[rdi+0x1@@ 0]_rbp, mov_qword_ptr_[rdi+0x1@@ 8]_rbx, add_rax_rdx, movdqu_xmm0_xmmword_ptr_[r@@ 8], movups_xmmword_ptr_[r@@ di+0x@@ 30]_xmm0, and_byte_ptr_[r@@ dx+r@@ si+0x@@ 3a@@ ]@@ _0xf@@ 3, mov_qword_ptr_[rdi+0x@@ 20]_0, mov_qword_ptr_[rdi+0x@@ 28]_0, mov_qword_ptr_[rdi+0x@@ 40@@ ]_-1, test_rbp_rbp, je_6, mov_qword_ptr_[rbp]_rax, test_rbx_rbx, je_5, mov_qword_ptr_[rbx]_rax, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_edi@@ _0x3@@ c8, mov_qword_ptr_[rsp+8]_r8, call_0xfffffffffffec@@ 10e, mov_rdx_rax, test_rax_rax, je_0x23, mov_rax_qword_ptr_[r13], mov_r8_qword_ptr_[rsp+8], mov_qword_ptr_[rdx]_rax, mov_qword_ptr_[r13@@ ]_rdx, mov_eax_8, mov_ecx_1, xor_esi_esi, jmp_0xffffffffffffff67, xor_eax_eax, jmp_0xffffffffffffffb@@ 6
push_r14, push_r13, lea_r13_[r@@ si+0x@@ 70], push_r12, lea_r12_[r@@ si+0x@@ 80], push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_rbp_qword_ptr_[rdi], mov_r14_rsp, jmp_0xf, lea_r14_[r@@ bp+8], mov_rbx_rax, lea_r8_[r@@ bx+0x28], xor_ecx_ecx, xor_edx_edx, mov_rsi_r12, mov_rdi_r13, call_0xfffffffffffffed@@ 3, mov_qword_ptr_[r14]_rax, test_rax_rax, je_0x3c, mov_qword_ptr_[rax]_rbp, mov_rbp_qword_ptr_[r@@ 14], or_byte_ptr_[r@@ bp+0x@@ 32@@ ]_4, mov_rax_qword_ptr_[rbx+8], test_rax_rax, jne_0xffffffffffffffcd, jmp_6, mov_rbx_rdx, mov_rdx_qword_ptr_[rbx+0x10], test_rdx_rdx, je_7, cmp_rdx_rax, jne_0x39, mov_rdx_qword_ptr_[rbx], mov_rbp_qword_ptr_[rbp], mov_rax_rbx, test_rdx_rdx, jne_0xffffffffffffffe2, mov_rax_qword_ptr_[rsp], mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x22, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, lea_r14_[r@@ bp+0x10], mov_rbx_rdx, jmp_0xffffffffffffff80, call_0xfffffffffffe@@ bd@@ e@@ c
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdx, sub_rsp_0x38, mov_qword_ptr_[rsp+8]_rdi, mov_rbp_qword_ptr_[r@@ si], mov_r12_qword_ptr_[r@@ dx+8], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, test_byte_ptr_[rsi+0x@@ 38]@@ _0x10, je_0x1@@ 7f, test_r12_r12, je_0x12@@ 6, mov_rax_qword_ptr_[r@@ dx+0x28], cmp_rax@@ _0x3f, jg@@ _0xf@@ 2, mov_rdx_qword_ptr_[rbp+0x@@ a0], bt@@ _rdx_rax, jae_0x@@ e1, lea_r14_[r@@ bp+0x@@ 70], sub_rbp@@ _-0x80, lea_r8_[rsp+0x10], xor_ecx_ecx, xor_edx_edx, mov_rsi_rbp, mov_rdi_r14, mov_qword_ptr_[rsp]_r8, mov_byte_ptr_[rsp+0x1@@ 8]_8, call_0xfffffffffffffdd@@ 1, mov_r8_qword_ptr_[rsp], xor_ecx_ecx, xor_edx_edx, mov_rsi_rbp, mov_rdi_r14, mov_byte_ptr_[rsp+0x1@@ 8@@ ]_9, mov_r13_rax, call_0xfffffffffffffd@@ b6, mov_r8_qword_ptr_[rsp], mov_r15_rax, mov_rcx_r15, mov_rdx_r12, mov_rsi_rbp, mov_rdi_r14, mov_qword_ptr_[rsp]_r8, mov_byte_ptr_[rsp+0x1@@ 8]_0x10, call_0xfffffffffffffd@@ 95, mov_r8_qword_ptr_[rsp], mov_rcx_rax, mov_rdx_r13, mov_rsi_rbp, mov_rdi_r14, mov_byte_ptr_[rsp+0x1@@ 8]_0x10, mov_qword_ptr_[rsp]_rcx, call_0xfffffffffffffd@@ 77, mov_r12_rax, test_rax_rax, je_0x12c, mov_rcx_qword_ptr_[rsp], test_rcx_rcx, je_0x11f, test_r13_r13, je_0x116, test_r15_r15, je_0x10d, mov_rax_qword_ptr_[rbx+0x28], mov_qword_ptr_[r15+0x@@ 28]_rax, mov_qword_ptr_[r13+0x@@ 28]_rax, movzx_eax_byte_ptr_[rbx+0x@@ 32], movzx_edx_byte_ptr_[r@@ 15+0x@@ 32], and_eax_8, mov_ecx_eax, and_edx@@ _0xfffffff7, or_edx_ecx, mov_byte_ptr_[r15+0x@@ 32@@ ]_dl, movzx_eax_byte_ptr_[r@@ 13+0x@@ 32], and_eax_0xfffffff@@ 7, or_eax_ecx, mov_byte_ptr_[r13+0x@@ 32@@ ]_al, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ db, add_rsp_0x38, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_r14_[r@@ bp+0x@@ 70], sub_rbp@@ _-0x80, lea_r8_[rsp+0x10], xor_ecx_ecx, xor_edx_edx, mov_rsi_rbp, mov_rdi_r14, mov_qword_ptr_[rsp]_r8, mov_byte_ptr_[rsp+0x1@@ 8]_8, call_0xfffffffffffffc@@ d0, mov_r8_qword_ptr_[rsp], xor_ecx_ecx, xor_edx_edx, mov_rsi_rbp, mov_rdi_r14, mov_byte_ptr_[rsp+0x1@@ 8@@ ]_9, mov_r13_rax, call_0xfffffffffffffc@@ b5, mov_rcx_rax, mov_r8_qword_ptr_[rsp], mov_r15_rax, jmp_0xffffffffffffff1d, lea_r14_[r@@ bp+0x@@ 70], sub_rbp@@ _-0x80, lea_r8_[rsp+0x10], xor_ecx_ecx, xor_edx_edx, mov_rsi_rbp, mov_rdi_r14, mov_qword_ptr_[rsp]_r8, mov_byte_ptr_[rsp+0x1@@ 8]_8, call_0xfffffffffffffc@@ 80, mov_r8_qword_ptr_[rsp], xor_ecx_ecx, xor_edx_edx, mov_rsi_rbp, mov_rdi_r14, mov_byte_ptr_[rsp+0x1@@ 8@@ ]_9, mov_r13_rax, call_0xfffffffffffffc@@ 65, test_r12_r12, mov_r8_qword_ptr_[rsp], mov_r15_rax, mov_rcx_rax, jne_0xfffffffffffffea@@ 9, jmp_0xfffffffffffffe@@ c4, mov_rax_qword_ptr_[rsp+8], xor_r12d_r12d, mov_dword_ptr_[rax]_0xc, jmp_0xffffffffffffff1c, call_0xfffffffffffebb@@ b@@ d
endbr64, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, sub_rsp_0x18, mov_rdx_qword_ptr_[r@@ si+8], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_dword_ptr_[rsp+4]_0, test_rdx_rdx, je_8, cmp_byte_ptr_[r@@ dx+0x@@ 30]@@ _0x11, je_0x33, mov_rdx_qword_ptr_[rbx+0x10], test_rdx_rdx, je_8, cmp_byte_ptr_[r@@ dx+0x@@ 30]@@ _0x11, je_0x44, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], mov_eax_dword_ptr_[rsp+4], jne_0x4b, add_rsp_0x18, pop_rbx, pop_rbp, ret, lea_rdi_[r@@ sp+4], mov_rsi_rbp, call_0xfffffffffffffd@@ 60, mov_qword_ptr_[rbx+8]_rax, test_rax_rax, je_0xffffffffffffff@@ bb, mov_qword_ptr_[rax]_rbx, jmp_0xffffffffffffffb6, lea_rdi_[r@@ sp+4], mov_rsi_rbp, call_0xfffffffffffffd@@ 40, mov_qword_ptr_[rbx+0x10]_rax, test_rax_rax, je_0xffffffffffffff@@ aa, mov_qword_ptr_[rax]_rbx, jmp_0xffffffffffffffa5, call_0xfffffffffffebb@@ 0@@ d
push_r12, push_rbp, push_rbx, mov_rbx_rdi, mov_rdx_qword_ptr_[r@@ si+8], mov_qword_ptr_[rdi@@ +8]_rdx, test_rdx_rdx, jle_0x@@ 3e, mov_qword_ptr_[rdi]_rdx, lea_r12@@ _[rdx@@ *8], mov_rdi_r12, mov_rbp_rsi, call_0xfffffffffffe@@ bc@@ fb, mov_qword_ptr_[rbx+0x10]_rax, mov_rdi_rax, test_rax_rax, je_0x3c, mov_rsi_qword_ptr_[rbp+0x10], mov_rdx_r12, call_0xfffffffffffe@@ bc@@ 73, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, ret, mov_qword_ptr_[rdi+0x10]_0, pxor_xmm0_xmm0, movups_xmmword_ptr_[r@@ di@@ ]_xmm0, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret, mov_qword_ptr_[rbx+8]_0, mov_qword_ptr_[rbx]_0, mov_eax_0xc, jmp_0xffffffffffffffc@@ 0
push_r13, push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_0x18, test_rsi_rsi, je_0xb5, mov_rbx_qword_ptr_[r@@ si+8], test_rdx_rdx, je_0xa3, test_rbx_rbx, jle_0x@@ 9f, mov_r13_qword_ptr_[r@@ dx+8], mov_qword_ptr_[rsp]_rdx, test_r13_r13, jle_0x@@ bc, lea_rdi_[r@@ bx+r@@ 13], mov_qword_ptr_[r12@@ ]_rdi, shl_rdi_3, mov_qword_ptr_[rsp+8]_rsi, call_0xfffffffffffe@@ bc@@ 42, test_rax_rax, mov_qword_ptr_[r12+0x10]_rax, mov_rsi_qword_ptr_[rsp+8], mov_rdx_qword_ptr_[rsp], je_0xfc, mov_r8_qword_ptr_[r@@ dx+0x10], mov_r9_qword_ptr_[r@@ si+0x10], xor_ebp_ebp, xor_edx_edx, xor_ecx_ecx, jmp_0x29, sete_dil, mov_qword_ptr_[rax+r@@ bp*@@ 8@@ -@@ 8]_rsi, movzx_edi@@ _dil, add_rdx@@ _rdi, inc_rcx, cmp_rbx@@ _rcx, jle_0x@@ 72, cmp_r13@@ _rdx, jle_0x@@ a5, mov_rsi_qword_ptr_[r@@ 9@@ +rcx*8], mov_rdi_qword_ptr_[r@@ 8@@ +rdx*8], inc_rbp, cmp_rsi@@ _rdi, jle_0xffffffffffffff@@ d1, mov_qword_ptr_[rax+r@@ bp*@@ 8@@ -@@ 8]_rdi, inc_rdx, jmp_0xffffffffffffffda, test_rbx_rbx, jg@@ _0x30, test_rdx_rdx, je_9, cmp_qword_ptr_[r@@ dx+@@ 8]_0, jg@@ _0x21, mov_qword_ptr_[r12+0x1@@ 0]_0, pxor_xmm0_xmm0, movaps_xmmword_ptr_[r@@ 12@@ ]_xmm0, xor_eax_eax, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_rsi_rdx, add_rsp_0x18, pop_rbx, pop_rbp, mov_rdi_r12, pop_r12, pop_r13, jmp_0xfffffffffffffe@@ 70, cmp_r13@@ _rdx, jg_0x1@@ 5, mov_qword_ptr_[r12+@@ 8]_rbp, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, xor_eax_eax, pop_r13, ret, sub_r13@@ _rdx, lea_r9_[r@@ 13*8], lea_rdi_[rax+r@@ bp*8], lea_rsi_[r@@ 8@@ +rdx*8], mov_rdx_r9, call_0xfffffffffffeba@@ ea, add_rbp@@ _r13, jmp_0xffffffffffffffcf, sub_rbx@@ _rcx, lea_rdi_[rax+r@@ bp*8], lea_rdx_[r@@ bx*8], lea_rsi_[r@@ 9@@ +rcx*8], call_0xfffffffffffeba@@ cd, add_rbp@@ _rbx, jmp_0xffffffffffffffb2, mov_eax_0xc, jmp_0xffffffffffffff8@@ 0
push_r15, push_r14, mov_r14_rdx, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x28, mov_rdx_qword_ptr_[rdx+8], mov_qword_ptr_[rsp+0x10]_rdi, test_rdx_rdx, je_0x2@@ c3, mov_r15d_ecx, mov_r13_rsi, mov_ebp_ecx, add_r15@@ _rdx, test_rdx_rdx, jle_0x@@ 1b, mov_rax_qword_ptr_[r14+0x10], lea_rdx_[rax@@ +rdx*8], add_r15@@ _qword_ptr_[r@@ ax], add_rax_8, cmp_rdx_rax, jne_0xfffffffffffffff6, mov_rax_qword_ptr_[r13+0x@@ 88], and_rax@@ _r15, lea_rdx_[rax+rax*2], mov_rax_qword_ptr_[r13+0x@@ 40], lea_rax_[rax@@ +rdx*8], mov_r10_qword_ptr_[r@@ ax], test_r10_r10, jle_0x@@ 58, mov_r11_qword_ptr_[r@@ ax+0x10], xor_r9d_r9d, jmp_0xf, inc@@ _r9, cmp_r9@@ _r10, je_0x42, mov_r12_qword_ptr_[r@@ 11+r@@ 9@@ *8], cmp_qword_ptr_[r@@ 12]@@ _r15, jne_0xfffffffffffffff0, movzx_eax_byte_ptr_[r@@ 12+0x@@ 68], and_eax_0xf, cmp_eax_ebp, jne_0xffffffffffffffe3, mov_rdi_qword_ptr_[r12+0x@@ 50], mov_rsi_r14, call_0xffffffffffffd@@ 16@@ 1, test_al_al, je_0xffffffffffffffd2, add_rsp_0x28, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_esi_1, mov_edi@@ _0x70, call_0xfffffffffffeb@@ 9a@@ 6, mov_r12_rax, test_rax_rax, je_0x1@@ 79, lea_r9@@ _[rax+8], mov_rdi_r9, mov_rsi_r14, mov_qword_ptr_[rsp]_r9, call_0xfffffffffffffd@@ 17, test_eax_eax, mov_r9_qword_ptr_[rsp], jne_0x1@@ fa, movzx_eax_byte_ptr_[r@@ 12+0x@@ 68], mov_edx_ebp, and_edx_0xf, and_eax_0xfffffff@@ 0, or_eax_edx, cmp_qword_ptr_[r@@ 14+@@ 8]_0, mov_byte_ptr_[r12+0x@@ 68@@ ]_al, mov_qword_ptr_[r12+0x@@ 50]@@ _r9, jle_0x@@ 11@@ 7, lea_rax_[r@@ 12+0x18], mov_qword_ptr_[rsp]_rax, mov_qword_ptr_[rsp+0x1@@ 8]_r15, xor_r10d_r10d, mov_r15_r13, xor_ebx_ebx, mov_r13_r9, mov_rax_qword_ptr_[r14+0x10], mov_rax_qword_ptr_[rax+r@@ bx*8], shl_rax_4, add_rax_qword_ptr_[r@@ 15], mov_edx_dword_ptr_[rax+8], movzx_edi_byte_ptr_[r@@ ax+8], shr_edx@@ _8, mov_r8d_edx, and_r8@@ w@@ _0x3ff, and_edx@@ _0x3ff, cmp_edi_1, jne_0xa, test_edx_edx, je_0xac, movzx_esi_byte_ptr_[r@@ 12+0x@@ 68], movzx_eax_byte_ptr_[rax+0x@@ a], mov_r11d@@ _esi, shr@@ _r11b@@ _5, shr_al@@ _4, or_eax@@ _r11d, and_eax_1, shl_eax@@ _5, and_esi@@ _0xffffffdf, or_eax@@ _esi, mov_byte_ptr_[r12+0x@@ 68@@ ]_al, cmp_edi_2, je_0xc9, cmp_edi@@ _4, jne_0xa, or_eax@@ _0x40, mov_byte_ptr_[r12+0x@@ 68@@ ]_al, test_edx_edx, je_0x67, cmp_r13@@ _qword_ptr_[r@@ 12+0x@@ 50], je_0xdd, test_r8b@@ _1, je_0xb3, test_bpl@@ _1, je_0x21, test_r8b@@ _2, jne_0x1b, test_r8b@@ _0x10, je_8, test_bpl@@ _2, je_0xf, and_r8d@@ _0x40, je_0x34, test_bpl@@ _4, jne_0x2e, mov_rdx_rbx, sub_rdx@@ _r10, js@@ _0x22, mov_rax_qword_ptr_[r12+0x10], cmp_rdx_rax, jge_0x@@ 18, dec_rax, mov_qword_ptr_[r12+0x10]_rax, mov_rsi_qword_ptr_[rsp], lea_rdi_[r@@ 12+0x10], call_0xffffffffffffe@@ cd@@ d, inc@@ _r10, inc_rbx, cmp_rbx_qword_ptr_[r@@ 14+8], jl_0xffffffffffffff@@ 1e, mov_r13_r15, mov_r15_qword_ptr_[rsp+0x18], mov_rdx_r15, mov_rsi_r12, mov_rdi_r13, call_0xffffffffffffd@@ 6f@@ 7, test_eax_eax, je_0xfffffffffffffe@@ 68, mov_rdi_r12, call_0xffffffffffffe8@@ 27, mov_rax_qword_ptr_[rsp+0x10], xor_r12d_r12d, mov_dword_ptr_[rax]_0xc, jmp_0xfffffffffffffe@@ 4c, or_eax@@ _0x10, mov_byte_ptr_[r12+0x@@ 68@@ ]_al, jmp_0xffffffffffffff42, test_r8b@@ _2, je_0xffffffffffffff@@ 5b, test_bpl@@ _1, je_0xffffffffffffff@@ 51, jmp_0xffffffffffffff64, mov_edi_0x18, mov_dword_ptr_[rsp+0xc]_r8d, call_0xfffffffffffeb@@ 87@@ e, test_rax_rax, mov_qword_ptr_[r12+0x@@ 50]_rax, mov_r8d_dword_ptr_[rsp+0xc], mov_rdi_rax, je_0xffffffffffffff@@ 8f, mov_rsi_r14, mov_dword_ptr_[rsp+0xc]_r8d, call_0xfffffffffffffb@@ 3f, test_eax_eax, jne_0xffffffffffffff@@ 86, or_byte_ptr_[r@@ 12+0x@@ 6@@ 8]_0x80, mov_r8d_dword_ptr_[rsp+0xc], xor_r10d_r10d, jmp_0xfffffffffffffee9, mov_dword_ptr_[rdi]_0, xor_r12d_r12d, jmp_0xfffffffffffffd@@ bf, mov_rdi_r12, call_0xfffffffffffeb@@ 44@@ f, jmp_0xffffffffffffff5@@ 8
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_r13_qword_ptr_[r@@ dx+8], test_r13_r13, je_0x1@@ cb, mov_rbp_rsi, mov_r14_rdx, jle_0x@@ 18, mov_rax_qword_ptr_[rdx+0x10], lea_rdx_[rax+r@@ 13*8], add_r13@@ _qword_ptr_[r@@ ax], add_rax_8, cmp_rdx_rax, jne_0xfffffffffffffff6, mov_rax_qword_ptr_[rbp+0x@@ 88], and_rax@@ _r13, lea_rdx_[rax+rax*2], mov_rax_qword_ptr_[rbp+0x40], lea_rax_[rax@@ +rdx*8], mov_r10_qword_ptr_[r@@ ax], test_r10_r10, jle_0x@@ 37, mov_r11_qword_ptr_[r@@ ax+0x10], xor_r9d_r9d, mov_r12_qword_ptr_[r@@ 11+r@@ 9@@ *8], cmp_qword_ptr_[r@@ 12]@@ _r13, jne_0x17, lea_rdi_[r@@ 12+8], mov_rsi_r14, call_0xffffffffffffce@@ 86, test_al_al, jne_0x1@@ 12, inc@@ _r9, cmp_r9@@ _r10, jne_0xffffffffffffffdb, mov_esi_1, mov_edi@@ _0x70, call_0xfffffffffffeb@@ 6d@@ 7, mov_r12_rax, test_rax_rax, je_0x1@@ 34, lea_r15@@ _[rax+8], mov_rsi_r14, mov_rdi_r15, call_0xfffffffffffffa@@ 4c, test_eax_eax, jne_0x1@@ 15, mov_rax_qword_ptr_[r14+8], mov_qword_ptr_[r12+0x@@ 50]@@ _r15, test_rax_rax, jle_0x@@ b4, mov_rsi_qword_ptr_[r@@ 14+0x10], mov_r9_qword_ptr_[r@@ bp], lea_r8_[r@@ si+rax*8], jmp_0x5@@ 3, movzx_ecx_byte_ptr_[r@@ 12+0x@@ 68], movzx_edx_byte_ptr_[rax+0x@@ a], mov_r10d@@ _ecx, shr@@ _r10@@ b@@ _5, shr_dl@@ _4, or_edx@@ _r10d, and_edx_1, shl_edx@@ _5, and_ecx@@ _0xffffffdf, or_edx_ecx, mov_byte_ptr_[r12+0x@@ 6@@ 8]_dl, cmp_edi_2, je_0x96, cmp_edi@@ _4, jne_0x9d, or_edx@@ _0x40, mov_byte_ptr_[r12+0x@@ 6@@ 8]_dl, add_rsi_8, cmp_r8@@ _rsi, je_0x51, mov_rax_qword_ptr_[rsi], shl_rax_4, add_rax@@ _r9, movzx_edi_byte_ptr_[r@@ ax+8], cmp_edi_1, jne_0xffffffffffffffa5, test_dword_ptr_[r@@ ax+@@ 8]@@ _0x3@@ ff@@ 00, je_0xffffffffffffffdd, movzx_edx_byte_ptr_[r@@ 12+0x@@ 68], movzx_eax_byte_ptr_[rax+0x@@ a], mov_ecx_edx, shr@@ _cl@@ _5, shr_al@@ _4, or_eax_ecx, and_eax_1, shl_eax@@ _5, and_edx_0xffffff@@ df, or_eax_edx, mov_byte_ptr_[r12+0x@@ 68@@ ]_al, add_rsi_8, or_byte_ptr_[r@@ 12+0x@@ 6@@ 8]_0x80, cmp_r8@@ _rsi, jne_0xffffffffffffffb3, mov_rdx_r13, mov_rsi_r12, mov_rdi_rbp, call_0xffffffffffffd@@ 4a@@ 6, test_eax_eax, jne_0x5d, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, or_edx@@ _0x10, mov_byte_ptr_[r12+0x@@ 6@@ 8]_dl, jmp_0xffffffffffffff79, cmp_edi@@ _0xc, je_0xffffffffffffff@@ b7, test_dword_ptr_[r@@ ax+@@ 8]@@ _0x3@@ ff@@ 00, je_0xffffffffffffff@@ 65, jmp_0xffffffffffffffa8, mov_rdi_r12, call_0xfffffffffffeb@@ 26@@ d, mov_dword_ptr_[rbx]@@ _0xc, xor_r12d_r12d, jmp_0xffffffffffffffb2, mov_dword_ptr_[rdi]_0, xor_r12d_r12d, jmp_0xffffffffffffffa7, mov_rdi_r12, call_0xffffffffffffe@@ 57@@ f, jmp_0xffffffffffffffe@@ 2
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, test_rcx_rcx, jle_0x@@ 87, mov_r15_rdi, mov_rbp_rsi, mov_r13_rdx, mov_r12_rcx, xor_ebx_ebx, lea_r14_[rsp+0x10], jmp_0x5@@ 2, test_rdx_rdx, je_0x41, add_rdx_8, add_rsi_8, mov_rdi_r14, call_0xfffffffffffff94@@ 0, mov_dword_ptr_[rsp+0xc]_eax, test_eax_eax, jne_0x4f, lea_rdi_[rsp+0x@@ c], mov_rdx_r14, mov_rsi_r15, call_0xfffffffffffffd@@ 98, mov_qword_ptr_[rbp@@ +r@@ bx*@@ 8]_rax, mov_rdi_qword_ptr_[rsp+0x20], call_0xfffffffffffeb@@ 1c@@ 9, mov_eax_dword_ptr_[rsp+0xc], test_eax_eax, jne_0x28, inc_rbx, cmp_r12_rbx, je_0x1e, mov_rsi_qword_ptr_[r@@ bp+r@@ bx*8], mov_rdx_qword_ptr_[r@@ 13+r@@ bx*8], test_rsi_rsi, jne_0xffffffffffffffa7, mov_qword_ptr_[rbp@@ +r@@ bx*@@ 8]_rdx, inc_rbx, cmp_r12_rbx, jne_0xffffffffffffffe6, xor_eax_eax, mov_rcx_qword_ptr_[rsp+0x28], xor_rcx_qword_ptr_fs:[0x28], jne_0x11, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xfffffffffffeb@@ 33@@ 7
push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rdx, sub_rsp_0x78, mov_qword_ptr_[rsp]_rsi, mov_qword_ptr_[rsp+0x30]_rcx, mov_dword_ptr_[rsp+0x3c]@@ _r8d, mov_rdi_qword_ptr_[rdi+0x@@ c8], xor_esi_esi, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x68]_rax, xor_eax_eax, mov_rcx_rdi, jmp_0x25, lea_rax_[r@@ cx+r@@ si], mov_r8_qword_ptr_[r@@ bp+0x@@ d8], sar_rax_1, lea_rdx_[rax+rax*4], lea_rdx_[r@@ 8@@ +rdx*8], cmp_rbx_qword_ptr_[r@@ dx+8], jg_0x2@@ 86, mov_rcx_rax, cmp_rcx_rsi, jg_0xffffffffffffff@@ da, cmp_rdi_rsi, jle_0x@@ 28@@ 5, lea_rax_[r@@ si+r@@ si*4], mov_r15_qword_ptr_[r@@ bp+0x@@ d8], lea_rdi_[rax@@ *8], mov_qword_ptr_[rsp+0x28]_rdi, cmp_rbx_qword_ptr_[r@@ 15@@ +rax*8+8], jne_0x2@@ 62, mov_rax_qword_ptr_[rsp], mov_r13_qword_ptr_[r@@ bp+0x98], lea_r12_[r@@ ax+0x10], lea_rax_[rsp+0x@@ 4c], mov_qword_ptr_[rsp+0x20]_rax, add_r15@@ _qword_ptr_[rsp+0x28], jmp_0x@@ f5, mov_rax_qword_ptr_[r@@ 13+0x18], mov_r11_qword_ptr_[r@@ bp+0x@@ b8], mov_r10_qword_ptr_[r@@ ax+rdx*8], lea_rax_[r@@ 14*8], add_r11@@ _rax, mov_r9_qword_ptr_[r@@ 11], mov_qword_ptr_[rsp+8]_rax, test_r9_r9, je_0x1@@ a3, mov_rdi_qword_ptr_[r@@ 9+0x10], lea_rsi_[r@@ 9@@ +0x18], mov_rdx_r10, mov_qword_ptr_[rsp+0x10]_r10, call_0xffffffffffffe@@ 6c@@ 5, test_rax_rax, jne_0x95, lea_rdx_[rsp+0x50], lea_rsi_[r@@ 9+8], mov_rdi_rdx, mov_qword_ptr_[rsp+0x18]_rdx, call_0xfffffffffffff7@@ 16, mov_rdx_qword_ptr_[rsp+0x18], mov_r10_qword_ptr_[rsp+0x10], mov_rdi_rdx, mov_rsi_r10, mov_qword_ptr_[rsp+0x10]_rdx, mov_dword_ptr_[rsp+0x4c]_eax, call_0xffffffffffffd0@@ f8, mov_edx_dword_ptr_[rsp+0x@@ 4c], test_edx_edx, jne_0x1@@ ed, cmp_al_1, jne_0x1@@ e5, mov_r11_qword_ptr_[rsp+8], mov_rdx_qword_ptr_[rsp+0x10], add_r11@@ _qword_ptr_[r@@ bp+0x@@ b8], mov_rdi_qword_ptr_[rsp+0x20], mov_rsi_r13, mov_qword_ptr_[rsp+8]_r11, call_0xfffffffffffffb@@ c1, mov_r11_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[rsp+0x60], mov_qword_ptr_[r@@ 11@@ ]_rax, call_0xfffffffffffea@@ fe@@ f, mov_rax_qword_ptr_[rbp+0x@@ b8], cmp_qword_ptr_[r@@ ax+r@@ 14*@@ 8]_0, je_0x1@@ 86, add_r15@@ _0x28, cmp_byte_ptr_[r@@ 15@@ -8]_0, je_0x1@@ 4f, mov_rax_qword_ptr_[rsp], mov_rdx_qword_ptr_[r15], mov_r9_qword_ptr_[r@@ ax+8], mov_rsi_r12, mov_rdi_r9, call_0xffffffffffffe@@ 608, test_rax_rax, je_0xffffffffffffffd8, mov_r8_qword_ptr_[r@@ 15+0x18], add_r8@@ _rbx, mov_r14_r8, sub_r14@@ _qword_ptr_[r@@ 15+0x10], cmp_rbx_r14, jne_0xfffffffffffffe@@ ed, mov_rcx_qword_ptr_[r@@ 13+0x28], lea_rax_[rdx@@ +rdx*2], lea_rax_[rcx@@ +rax*8], mov_rax_qword_ptr_[rax+0x10], mov_rsi_r12, mov_r14_qword_ptr_[rax], mov_rdi_r9, mov_rdx_r14, call_0xffffffffffffe@@ 5c@@ b, test_rax_rax, jne_0xffffffffffffff@@ 9b, mov_edi_8, mov_qword_ptr_[rsp+0x@@ 50]_1, mov_qword_ptr_[rsp+0x@@ 58]_1, call_0xfffffffffffeb@@ 33@@ a, mov_qword_ptr_[rsp+0x60]_rax, test_rax_rax, je_0x136, mov_qword_ptr_[rax]@@ _r14, xor_eax_eax, mov_rdx_qword_ptr_[rsp+0x30], mov_ecx_dword_ptr_[rsp+0x@@ 3c], lea_r15_[rsp+0x@@ 50], mov_rsi_r15, mov_rdi_r13, mov_dword_ptr_[rsp+0x4c]_eax, call_0xffffffffffffee@@ 5a, mov_rdi_qword_ptr_[rsp], mov_rsi_r15, mov_r14d_eax, call_0xffffffffffffe@@ 9e@@ b, mov_rdi_qword_ptr_[rsp+0x60], mov_r15d_eax, call_0xfffffffffffea@@ f0@@ e, mov_eax_dword_ptr_[rsp+0x4c], mov_edx_r14d, or_edx@@ _r15d, or_edx_eax, jne_0x@@ d6, mov_r15_qword_ptr_[r@@ bp+0x@@ d8], jmp_0xfffffffffffffe@@ 2d, mov_edi_8, mov_qword_ptr_[rsp+0x10]_r11, mov_qword_ptr_[rsp+8]_r10, mov_qword_ptr_[rsp+0x@@ 50]_1, mov_qword_ptr_[rsp+0x@@ 58]_1, call_0xfffffffffffeb@@ 2a@@ 7, mov_qword_ptr_[rsp+0x60]_rax, test_rax_rax, je_0x8c, mov_r10_qword_ptr_[rsp+8], mov_dword_ptr_[rsp+0x@@ 4c]_0, mov_qword_ptr_[rax]@@ _r10, mov_r11_qword_ptr_[rsp+0x10], lea_rdx_[rsp+0x50], jmp_0xfffffffffffffe@@ 8c, lea_rsi_[rax+1], jmp_0xfffffffffffffd@@ 7f, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x@@ 68], xor_rbx_qword_ptr_fs:[0x28], jne_0x75, add_rsp_0x78, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_eax_dword_ptr_[rsp+0x4c], test_eax_eax, je_0xfffffffffffffe@@ 7a, jmp_0xffffffffffffffce, mov_rdi_qword_ptr_[rsp+0x60], call_0xfffffffffffea@@ e@@ 3b, mov_eax_dword_ptr_[rsp+0x4c], test_eax_eax, jne_0xffffffffffffffb2, mov_eax_0xc, jmp_0xffffffffffffffab, test_eax_eax, jne_0xffffffffffffffa7, test_r14d_r14d, mov_eax_r15d, cmovne_eax@@ _r14d, jmp_0xffffffffffffff9b, mov_qword_ptr_[rsp+0x58]_0, mov_qword_ptr_[rsp+0x50]_0, mov_eax_0xc, jmp_0xfffffffffffffe@@ be, call_0xfffffffffffea@@ fb@@ b
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x28, cmp_qword_ptr_[rsi@@ ]_0, mov_r14_qword_ptr_[r@@ di+0x98], jle_0x@@ bf, mov_r15_rdi, mov_r13_rsi, mov_r12_rcx, xor_ebx_ebx, jmp_0x13, inc_rbx, cmp_rbx_qword_ptr_[r@@ 13], jge_0x@@ a1, mov_rax_qword_ptr_[rdx], mov_rbp_qword_ptr_[r@@ ax+r@@ bx*8], mov_rax_rbp, shl_rax_4, add_rax_qword_ptr_[r@@ 14], cmp_byte_ptr_[rax+@@ 8]_8, jne_0xffffffffffffffde, mov_rax_qword_ptr_[rax], cmp_rax@@ _0x3f, jg_0xffffffffffffff@@ d5, mov_rcx_qword_ptr_[r@@ 14+0x@@ a0], bt@@ _rcx_rax, jae_0xffffffffffffff@@ c8, mov_rcx_qword_ptr_[r@@ 15+0x@@ e8], mov_r9_qword_ptr_[r@@ 15+0x@@ f8], cmp_rcx_qword_ptr_[r@@ 15+0x@@ f0], je_0x71, mov_esi_0x30, mov_edi_1, mov_qword_ptr_[rsp+0x10]_r9, mov_qword_ptr_[rsp+8]_rcx, mov_qword_ptr_[rsp+0x18]_rdx, call_0xfffffffffffeb0@@ 86, mov_rcx_qword_ptr_[rsp+8], mov_r9_qword_ptr_[rsp+0x10], mov_qword_ptr_[r@@ 9@@ +rcx*@@ 8]_rax, test_rax_rax, je_0x39, inc_rcx, mov_qword_ptr_[r15+0x@@ e@@ 8]_rcx, inc_rbx, mov_qword_ptr_[rax+@@ 8]_rbp, mov_qword_ptr_[rax]_r12, mov_rdx_qword_ptr_[rsp+0x18], cmp_rbx_qword_ptr_[r@@ 13], jl_0xffffffffffffff@@ 6e, xor_eax_eax, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_eax_0xc, jmp_0xffffffffffffff@@ ec, mov_rsi_rcx, lea_rax_[rcx@@ +rcx], shl_rsi_4, mov_rdi_r9, mov_qword_ptr_[rsp+8]_rdx, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffeb@@ 148, test_rax_rax, mov_rdx_qword_ptr_[rsp+8], mov_r9_rax, je_0xffffffffffffffd1, mov_qword_ptr_[r15+0x@@ f8]_rax, mov_rax_qword_ptr_[rsp+0x10], mov_rcx_qword_ptr_[r@@ 15+0x@@ e8], mov_qword_ptr_[r15+0x@@ f0]_rax, jmp_0xffffffffffffff4@@ d
push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, test_rsi_rsi, js_0xa@@ 4, cmp_qword_ptr_[rdi+0x@@ 5@@ 8]_rsi, je_0xaa, cmp_dword_ptr_[rdi+0x@@ 90]_1, jle_0x@@ 3d, mov_rax_qword_ptr_[rdi+0x10], jmp_0x10, dec@@ _rsi, cmp_rsi@@ _-1, je_0x79, mov_ebx_dword_ptr_[r@@ ax+r@@ si*4], cmp_ebx_-1, je_0xfffffffffffffff1, cmp_byte_ptr_[rbp+0x@@ 8e@@ ]_0, jne_0x@@ 88, xor_eax_eax, cmp_ebx@@ _0xa, je_0x3e, add_rsp_8, pop_rbx, pop_rbp, ret, mov_rax_qword_ptr_[rdi+8], mov_rdx_qword_ptr_[rdi+0x@@ 80], movzx_eax_byte_ptr_[r@@ ax+r@@ si], mov_rcx_rax, sar_rax@@ _6, mov_rax_qword_ptr_[r@@ dx+rax*8], shr_rax_cl, mov_rdx_rax, and_edx_1, mov_eax_1, jne_0xffffffffffffffcd, xor_eax_eax, cmp_cl@@ _0xa, jne_0xffffffffffffffc6, xor_eax_eax, cmp_byte_ptr_[rbp+0x@@ 8d@@ ]_0, setne_al, add_rsp_8, pop_rbx, add_eax_eax, pop_rbp, ret, mov_eax_dword_ptr_[rbp+0x@@ 70], add_rsp_8, pop_rbx, pop_rbp, ret, and_edx_2, cmp_edx_1, sbb_eax_eax, and_eax_2, add_eax_8, jmp_0xffffffffffffff87, mov_edi_ebx, call_0xfffffffffffea@@ fa@@ e, test_eax_eax, jne_0xb, cmp_ebx@@ _0x5f, jne_0xffffffffffffff@@ 70, mov_eax_1, jmp_0xffffffffffffff6@@ c
mov_rax_qword_ptr_[rdi+8], mov_r8_rdx, movzx_ecx_byte_ptr_[r@@ ax+rdx], movzx_eax_byte_ptr_[r@@ si+8], cmp_al_5, je_0xac, ja_0x@@ 99, cmp_al_1, je_0xe9, cmp_al_3, jne_0x10@@ c, mov_rdx_qword_ptr_[rsi], movzx_eax@@ _cl, sar_rax@@ _6, mov_rax_qword_ptr_[r@@ dx+rax*8], shr_rax_cl, and_eax_1, je_0xbf, push_rbx, mov_eax_1, mov_ebx_dword_ptr_[r@@ si+8], test_ebx@@ _0x3@@ ff@@ 00, je_0x4e, mov_edx_dword_ptr_[rdi+0x@@ a0], mov_rsi_r8, shr_ebx@@ _8, call_0xfffffffffffffea@@ c, mov_ecx_ebx, mov_edx_eax, and@@ _cx@@ _0x3ff, test_bl@@ _4, jne_0x73, and_ebx@@ _8, je_0xa, test_al_1, jne_0x@@ b1, test_cl@@ _0x20, je_9, xor_eax_eax, test_dl_2, je_0x16, shr_edx@@ _3, and_edx_1, mov_eax_1, and_ecx@@ _0x80, cmovne_eax_edx, pop_rbx, ret, cmp_al@@ _7, mov_eax_0, jne_0x29, test_cl_cl, js_0x2@@ 1, cmp_cl@@ _0xa, je_0x58, test_cl_cl, jne_0xffffffffffffff@@ 83, mov_rdx_qword_ptr_[rdi+0x@@ 98], xor_eax_eax, test_byte_ptr_[rdx+0x@@ d@@ 8]_0x80, je_0xffffffffffffff@@ 71, ret, ret, xor_eax_eax, test_dl_1, je_0xffffffffffffff@@ b7, and_ebx@@ _8, je_0xffffffffffffff@@ 92, pop_rbx, ret, ret, xor_eax_eax, cmp_byte_ptr_[rsi@@ ]_cl, je_0xffffffffffffff@@ 3b, ret, mov_rdx_qword_ptr_[rdi+0x@@ 98], xor_eax_eax, test_byte_ptr_[rdx+0x@@ d@@ 8]@@ _0x40, jne_0xffffffffffffff@@ 1f, ret, xor_eax_eax, pop_rbx, ret, xor_eax_eax, ret
push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, mov_rsi_rcx, mov_edx_dword_ptr_[rdi+0x@@ a0], call_0xfffffffffffffd@@ ba, test_rbx_rbx, jle_0x@@ a2, mov_rdx_qword_ptr_[rbp+0x@@ 98], mov_r11d_eax, mov_ebp_eax, mov_r9_qword_ptr_[r@@ 12], and_eax_1, mov_r8_qword_ptr_[r@@ dx], xor_esi_esi, and_ebp@@ _8, and_r11d@@ _2, mov_r10d_eax, mov_rax_qword_ptr_[r@@ 9+r@@ si*8], mov_rdx_rax, shl_rdx_4, add_rdx@@ _r8, mov_ecx_dword_ptr_[r@@ dx+8], shr_ecx@@ _8, mov_edi_ecx, and@@ _@@ di@@ _0x3ff, cmp_byte_ptr_[rdx+@@ 8]_2, jne_0x49, test_@@ di@@ _di, je_0x28, test_cl@@ _4, je_0x2f, test_r10d_r10d, je_0x3a, and_ecx@@ _8, jne_0x35, test_dil@@ _0x20, je_7, test_r11d_r11d, je_0x2a, and_edi@@ _0x80, je_6, test_ebp_ebp, je_0x1e, pop_rbx, pop_rbp, pop_r12, ret, and_ecx@@ _8, je_0xffffffffffffffda, test_r10d_r10d, je_0xffffffffffffff@@ d5, inc@@ _rsi, cmp_rsi@@ _rbx, jne_0xffffffffffffff92, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret
push_r15, mov_r8d_edx, push_r14, push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_rax_qword_ptr_[rdi+0x28], sub_rbp@@ _rax, cmp_rax_rsi, jle_0x@@ 66, cmp_dword_ptr_[rdi+0x@@ 90]_1, jle_0x@@ a, mov_qword_ptr_[rdi+0x@@ 20]_0, mov_rax_qword_ptr_[rbx+0x50], mov_qword_ptr_[rbx+0x@@ 30]_0, mov_qword_ptr_[rbx+0x@@ 58]_rax, mov_rax_qword_ptr_[rbx+0x60], mov_qword_ptr_[rbx+0x28]_0, mov_qword_ptr_[rbx+0x@@ 68]_rax, mov_eax_r8d, and_eax_1, cmp_eax_1, sbb_eax_eax, and_eax_2, add_eax_4, cmp_byte_ptr_[rbx+0x@@ 8b@@ ]_0, mov_qword_ptr_[rbx+0x@@ 38]_0, mov_byte_ptr_[rbx+0x@@ 8c]_0, mov_dword_ptr_[rbx+0x7@@ 0]_eax, mov_rbp_r12, je_0xdc, test_rbp_rbp, je_0xe3, mov_rax_qword_ptr_[rbx+0x38], movzx_edx_byte_ptr_[r@@ bx+0x@@ 8c], mov_r13_qword_ptr_[r@@ bx+0x30], cmp_rax_rbp, jle_0x@@ 1b@@ b, test_dl_dl, jne_0x2@@ a3, lea_rsi_[r@@ bp-1], mov_edx_r8d, mov_rdi_rbx, call_0xfffffffffffffc@@ 33, sub_r13@@ _rbp, cmp_dword_ptr_[rbx+0x@@ 90]_1, mov_dword_ptr_[rbx+0x7@@ 0]_eax, jg_0x@@ b1, movzx_edx_byte_ptr_[r@@ bx+0x@@ 8b], test_dl_dl, jne_0x2@@ ba, sub_qword_ptr_[r@@ bx+0x@@ 3@@ 8]_rbp, mov_qword_ptr_[rbx+0x@@ 30]@@ _r13, mov_rax_qword_ptr_[rbx+0x58], mov_rcx_qword_ptr_[rbx+0x@@ 68], mov_esi_dword_ptr_[rbx+0x@@ 90], sub_rax_rbp, sub_rcx@@ _rbp, test_dl_dl, jne_6, add_qword_ptr_[r@@ bx+@@ 8]_rbp, mov_qword_ptr_[rbx+0x@@ 28]@@ _r12, mov_qword_ptr_[rbx+0x@@ 58]_rax, mov_qword_ptr_[rbx+0x@@ 6@@ 8]_rcx, cmp_esi_1, jle_0x@@ 13@@ 1, cmp_byte_ptr_[rbx+0x@@ 88]_0, mov_rdi_rbx, jne_0x81, call_0xffffffffffffc@@ be@@ 7, mov_qword_ptr_[rbx+0x@@ 48]_0, xor_eax_eax, mov_rdi_qword_ptr_[rsp+0x38], xor_rdi_qword_ptr_fs:[0x28], jne_0x@@ 6a@@ 0, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[rbx], mov_qword_ptr_[rbx+8]_rax, test_rbp_rbp, jne_0xffffffffffffff@@ 29, mov_esi_dword_ptr_[rbx+0x@@ 90], mov_rax_qword_ptr_[rbx+0x58], mov_rcx_qword_ptr_[rbx+0x@@ 68], jmp_0xffffffffffffff8a, mov_rdi_qword_ptr_[rbx+0x10], lea_rdx_[r@@ 13*4], lea_rsi_[r@@ di+r@@ bp*4], call_0xfffffffffffea@@ d@@ 10, mov_r13_qword_ptr_[r@@ bx+0x30], sub_r13@@ _rbp, jmp_0xffffffffffffff39, call_0xffffffffffffcd@@ 58, test_eax_eax, je_0xffffffffffffff@@ 7f, jmp_0xffffffffffffff83, mov_rax_qword_ptr_[rbx], add_rax_rbp, movzx_ecx_byte_ptr_[r@@ 9@@ +rax-1], mov_rax_qword_ptr_[rbx+0x@@ 78], mov_qword_ptr_[rbx+0x@@ 38]_0, test_rax_rax, je_6, movzx_ecx_byte_ptr_[r@@ ax+rcx], mov_rdx_qword_ptr_[rbx+0x@@ 80], movzx_eax@@ _cl, sar_rax@@ _6, mov_rax_qword_ptr_[r@@ dx+rax*8], mov_edx_1, shr_rax_cl, test_al_1, jne_0x1b, xor_edx_edx, cmp_cl@@ _0xa, jne_0x14, xor_edx_edx, cmp_byte_ptr_[rbx+0x@@ 8d@@ ]_0, setne_dl, add@@ _edx_edx, mov_rax_qword_ptr_[rbx+0x58], mov_rcx_qword_ptr_[rbx+0x@@ 68], sub_rax_rbp, sub_rcx@@ _rbp, cmp_byte_ptr_[rbx+0x@@ 8b@@ ]_0, mov_dword_ptr_[rbx+0x7@@ 0]_edx, je_0xfffffffffffffe@@ d4, mov_qword_ptr_[rbx+0x@@ 28]@@ _r12, mov_qword_ptr_[rbx+0x@@ 58]_rax, mov_qword_ptr_[rbx+0x@@ 6@@ 8]_rcx, cmp_byte_ptr_[rbx+0x@@ 8b@@ ]_0, jne_0x3@@ b1, mov_qword_ptr_[rbx+0x30]_rax, jmp_0xfffffffffffffed5, test_dl_dl, jne_0x4@@ 8b, movsxd_rsi@@ _dword_ptr_[rbx+0x@@ 90], mov_qword_ptr_[rbx+0x@@ 30]_0, mov_r9_qword_ptr_[r@@ bx+0x28], cmp_esi_1, jle_0xffffffffffffff@@ 42, cmp_byte_ptr_[rbx+0x@@ 89@@ ]_0, jne_0x2@@ bd, lea_r15_[r@@ 9@@ +rax], cmp_r12@@ _r15, jle_0x@@ 3@@ ff, lea_rax_[r@@ bx+0x20], mov_qword_ptr_[rsp+0x10]_rax, lea_rdi_[rsp+0x@@ 24], mov_r14_qword_ptr_[r@@ bx+0x@@ 50], mov_rsi_qword_ptr_[rbx], mov_rax_qword_ptr_[rbx+0x20], mov_rcx_qword_ptr_[rsp+0x10], sub_r14@@ _r15, add_rsi@@ _r15, mov_rdx_r14, mov_dword_ptr_[rsp+0xc]_r8d, mov_qword_ptr_[rsp]_rdi, mov_qword_ptr_[rsp+0x18]_rax, call_0xffffffffffffc0@@ f9, lea_rsi@@ _[rax-1], cmp_rsi@@ _-@@ 4, mov_ecx_dword_ptr_[rsp+0x24], mov_rdi_qword_ptr_[rsp], mov_r8d_dword_ptr_[rsp+0xc], ja_0x4@@ 24, add_r15_rax, cmp_r12@@ _r15, jg_0xffffffffffffff@@ b3, sub_r15@@ _r12, mov_qword_ptr_[rbx+0x@@ 30]@@ _r15, mov_r14_r15, cmp_ecx_-1, je_0x3@@ 95, cmp_byte_ptr_[rbx+0x@@ 8e@@ ]_0, jne_0x4@@ 6b, xor_eax_eax, cmp_ecx@@ _0xa, jne_0x10, xor_eax_eax, cmp_byte_ptr_[rbx+0x@@ 8d@@ ]_0, setne_al, add_eax_eax, mov_dword_ptr_[rbx+0x7@@ 0]_eax, test_r14_r14, jne_0x4@@ 00, movzx_edx_byte_ptr_[r@@ bx+0x@@ 8b], mov_qword_ptr_[rbx+0x3@@ 8]_r14, jmp_0xfffffffffffffd@@ a1, mov_r15_qword_ptr_[r@@ bx+0x18], mov_rcx_r13, xor_esi_esi, jmp_0x16, jge_0x@@ 3@@ 10, lea_rsi_[rax+1], cmp_rsi_rcx, jge_0x@@ 53, lea_rdx_[r@@ si+rcx], mov_rax_rdx, shr_rax_0x3f, add_rax_rdx, sar_rax_1, mov_rdx_qword_ptr_[r@@ 15@@ +rax*8], mov_r9_rax, cmp_rdx@@ _rbp, jle_0xffffffffffffff@@ d6, mov_rcx_rax, jmp_0xffffffffffffffdb, mov_rdi_qword_ptr_[rbx+8], mov_rdx_r13, lea_rsi_[r@@ di+r@@ bp], call_0xfffffffffffeaa@@ fd, mov_r13_qword_ptr_[r@@ bx+0x30], movzx_edx_byte_ptr_[r@@ bx+0x@@ 8b], sub_r13@@ _rbp, jmp_0xfffffffffffffd@@ 2e, lea_r14@@ _[rax+1], cmp_rdx@@ _rbp, jge_0x@@ 22@@ 9, mov_edx_r8d, mov_rsi_r9, mov_rdi_rbx, call_0xfffffffffffff9@@ 1a, mov_dword_ptr_[rbx+0x7@@ 0]_eax, cmp_rbp@@ _r14, jne_0x9f, cmp_rbp@@ _r13, jge_0x@@ 96, cmp_qword_ptr_[r@@ 15+r@@ 14*@@ 8]_rbp, jne_0x8c, mov_rdi_qword_ptr_[rbx+0x10], sub_r13@@ _rbp, lea_rsi_[r@@ di+r@@ bp*4], lea_rdx_[r@@ 13*4], call_0xfffffffffffeaa@@ 93, mov_rdi_qword_ptr_[rbx+8], mov_rdx_qword_ptr_[rbx+0x30], lea_rsi_[r@@ di+r@@ bp], sub_rdx@@ _rbp, call_0xfffffffffffeaa@@ 7f, mov_rax_qword_ptr_[rbx+0x30], sub_qword_ptr_[r@@ bx+0x@@ 3@@ 8]_rbp, sub_rax_rbp, mov_qword_ptr_[rbx+0x30]_rax, test_rax_rax, jle_0x@@ 24, mov_rcx_qword_ptr_[r@@ bx+0x18], xor_eax_eax, lea_rsi_[r@@ cx+r@@ bp*8], mov_rdx_qword_ptr_[r@@ si+rax*8], sub_rdx@@ _rbp, mov_qword_ptr_[rcx@@ +rax*@@ 8]_rdx, inc_rax, cmp_qword_ptr_[rbx+0x@@ 30]_rax, jg_0xffffffffffffff@@ ee, mov_rax_qword_ptr_[rbx+0x58], mov_rcx_qword_ptr_[rbx+0x@@ 68], mov_esi_dword_ptr_[rbx+0x@@ 90], movzx_edx_byte_ptr_[r@@ bx+0x@@ 8b], sub_rax_rbp, sub_rcx@@ _rbp, jmp_0xfffffffffffffc@@ 89, mov_rax_qword_ptr_[rbx+0x50], mov_rcx_qword_ptr_[rbx+0x@@ 60], sub_rax_r12, lea_rdx_[rax+r@@ bp], sub_rcx@@ _r12, mov_qword_ptr_[rbx+0x@@ 58]_rdx, lea_rdx_[r@@ cx+r@@ bp], mov_qword_ptr_[rbx+0x@@ 6@@ 8]_rdx, mov_byte_ptr_[rbx+0x@@ 8c]_0, test_r14_r14, jg@@ _0xd, jmp_0x12, dec@@ _r14, je_9, cmp_qword_ptr_[r@@ 15+r@@ 14*@@ 8@@ -@@ 8]_rbp, je_0xfffffffffffffff6, cmp_r14@@ _r13, jge_0x@@ 1b@@ c, mov_rdx_qword_ptr_[rbx+0x10], jmp_0x13, inc@@ _r14, cmp_r14@@ _r13, je_0x1@@ b2, cmp_dword_ptr_[r@@ dx+r@@ 14@@ *4@@ ]_-1, je_0xffffffffffffffef, mov_rdx_qword_ptr_[r@@ 15+r@@ 14*8], sub_rdx@@ _rbp, mov_qword_ptr_[rbx+0x@@ 30]_rdx, test_rdx_rdx, je_0x3e, jle_0x@@ 1c, mov_rax_qword_ptr_[rbx+0x10], lea_rcx_[rax@@ +rdx*4], mov_dword_ptr_[rax]@@ _0xffffffff, add_rax_4, cmp_rcx_rax, jne_0xfffffffffffffff3, mov_rdi_qword_ptr_[rbx+8], mov_esi_0xff, call_0xfffffffffffea@@ 6f@@ 8, mov_rax_qword_ptr_[rbx+0x58], mov_rcx_qword_ptr_[rbx+0x@@ 68], mov_rdx_qword_ptr_[rbx+0x30], sub_rax_rbp, sub_rcx@@ _rbp, mov_qword_ptr_[rbx+0x3@@ 8]_rdx, mov_esi_dword_ptr_[rbx+0x@@ 90], movzx_edx_byte_ptr_[r@@ bx+0x@@ 8b], jmp_0xfffffffffffffb@@ c0, mov_rcx_qword_ptr_[rbx], mov_rdx_rbp, lea_r15_[r@@ cx+r@@ 9], sub_rdx_rsi, add_rdx@@ _r15, cmp_rcx_rdx, cmovb@@ _rcx_rdx, lea_r14_[r@@ 15+r@@ bp-1], cmp_r14@@ _rcx, jae_0x@@ 15, jmp_0xfffffffffffffd@@ 28, dec@@ _r14, cmp_r14@@ _rcx, jb_0xffffffffffff@@ fd@@ 1b, movzx_edx_byte_ptr_[r@@ 14], and_edx_0xffffff@@ c0, cmp_dl@@ _0x80, je_0xffffffffffffffea, mov_rdx_qword_ptr_[rbx+0x@@ 58], mov_rcx_qword_ptr_[rbx+0x@@ 78], add_rdx@@ _r15, sub_rdx@@ _r14, mov_rsi_r14, test_rcx_rcx, jne_0x2@@ 14, add_r15@@ _rbp, lea_rcx_[rsp+0x28], lea_rdi_[rsp+0x@@ 24], mov_dword_ptr_[rsp]_r8d, mov_qword_ptr_[rsp+0x28]_0, sub_r15@@ _r14, call_0xffffffffffffbe@@ 11, cmp_rax_r15, mov_r8d_dword_ptr_[rsp], mov_r9_rax, jb@@ _0xc, cmp_r9@@ _-3, jbe_0x@@ e4, mov_r9_qword_ptr_[r@@ bx+0x28], mov_rax_qword_ptr_[rbx+0x38], jmp_0xfffffffffffffc@@ af, mov_r14_rax, lea_r9@@ _[rax-1], jmp_0xfffffffffffffdd@@ 6, cmp_byte_ptr_[rbx+0x@@ 88]_0, jne_0x@@ d9, mov_rcx_qword_ptr_[rbx+0x@@ 78], test_rcx_rcx, je_0xfffffffffffffb@@ 1a, cmp_qword_ptr_[rbx+0x@@ 40]_rax, cmovle@@ _rax@@ _qword_ptr_[r@@ bx+0x40], mov_rdx_qword_ptr_[rbx+0x30], cmp_rax_rdx, jg@@ _0x16, jmp_0x1@@ 7c, mov_r12_qword_ptr_[r@@ bx+0x28], mov_rcx_qword_ptr_[rbx+0x@@ 78], mov_rsi_qword_ptr_[rbx], add_rsi_rdx, movzx_esi@@ _byte_ptr_[rsi@@ +r@@ 12], movzx_esi_byte_ptr_[r@@ cx+r@@ si], mov_rcx_qword_ptr_[rbx+8], mov_byte_ptr_[rcx@@ +rdx@@ ]_sil, inc_rdx, cmp_rax_rdx, jne_0xffffffffffffffdb, mov_qword_ptr_[rbx+0x30]_rax, mov_qword_ptr_[rbx+0x38]_rax, jmp_0xfffffffffffffa@@ c7, mov_r14_rax, dec@@ _r9, jmp_0xfffffffffffffd@@ 57, jne_0xfffffffffffffe@@ 68, mov_qword_ptr_[rbx+0x@@ 30]_0, xor_edx_edx, jmp_0xfffffffffffffe@@ 9d, sub_r15@@ _r12, mov_qword_ptr_[rbx+0x@@ 30]@@ _r15, mov_r14_r15, lea_rsi_[r@@ 13-1], mov_edx_r8d, mov_rdi_rbx, call_0xfffffffffffff64@@ 5, mov_dword_ptr_[rbx+0x7@@ 0]_eax, jmp_0xfffffffffffffc@@ 84, mov_ecx_dword_ptr_[rsp+0x24], sub_r9@@ _r15, mov_qword_ptr_[rbx+0x20]_0, mov_qword_ptr_[rbx+0x@@ 30]@@ _r9, mov_r14_r9, cmp_ecx_-1, jne_0xfffffffffffffc@@ 41, jmp_0xffffffffffffff03, mov_rdi_rbx, call_0xffffffffffffc@@ 5a@@ d, jmp_0xfffffffffffffa@@ 46, mov_rdx_qword_ptr_[rbx+0x@@ 50], mov_byte_ptr_[rbx+0x@@ 8c]_0, add_rdx@@ _rbp, sub_rdx@@ _r12, mov_qword_ptr_[rbx+0x@@ 58]_rdx, mov_rdx_qword_ptr_[rbx+0x@@ 60], add_rdx@@ _rbp, sub_rdx@@ _r12, mov_qword_ptr_[rbx+0x@@ 6@@ 8]_rdx, jmp_0xfffffffffffffb@@ 58, test_rax_rax, je_0x68, test_r14_r14, je_0x63, mov_rax_qword_ptr_[rbx], movzx_ecx_byte_ptr_[r@@ ax+r@@ 15], mov_rax_qword_ptr_[rsp+0x18], mov_qword_ptr_[rbx+0x20]_rax, mov_eax_1, jmp_0xfffffffffffffb@@ c2, jle_0x@@ 1d, mov_rax_qword_ptr_[rbx+0x10], lea_rdx_[rax+r@@ 14*4], mov_dword_ptr_[rax]@@ _0xffffffff, add_rax_4, cmp_rdx_rax, jne_0xfffffffffffffff3, movzx_edx_byte_ptr_[r@@ bx+0x@@ 8b], test_dl_dl, je_0xfffffffffffffb@@ e7, mov_rdi_qword_ptr_[rbx+8], mov_rdx_r14, mov_esi_0xff, call_0xfffffffffffea@@ 4@@ 9e, mov_r14_qword_ptr_[r@@ bx+0x30], jmp_0xfffffffffffffb@@ c5, xor_ecx_ecx, jmp_0xffffffffffffffa5, mov_edi_ecx, mov_dword_ptr_[rsp]_ecx, call_0xfffffffffffea@@ 5e@@ 7, mov_ecx_dword_ptr_[rsp], cmp_ecx@@ _0x5f, je_0xa, test_eax_eax, je_0xfffffffffffffb@@ 87, mov_eax_1, jmp_0xfffffffffffffb@@ 91, mov_rax_rdx, jmp_0xfffffffffffffe@@ b4, cmp_rdx@@ _6, mov_edi_6, cmovle@@ _rdi@@ _rdx, lea_rsi_[rsp+0x@@ 32], dec@@ _edi, movsxd_rax@@ _edi, js_0xffffffffffff@@ f@@ dd@@ b, movzx_edi_byte_ptr_[r@@ 14+rax], movzx_edi_byte_ptr_[r@@ cx+r@@ di], mov_byte_ptr_[rsi@@ +rax@@ ]_dil, dec_rax, test_eax_eax, jns_0xffffffffffffff@@ ee, jmp_0xfffffffffffffd@@ c1, call_0xfffffffffffea@@ 37@@ a
push_r15, pxor_xmm0_xmm0, push_r14, push_r13, mov_r13_rdx, lea_rdx_[r@@ si+r@@ si*2], push_r12, push_rbp, push_rbx, sub_rsp_0x38, mov_qword_ptr_[rsp+8]_rcx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x20]_0, mov_rax_qword_ptr_[rdi+0x@@ 38], movaps_xmmword_ptr_[rsp+0x10]_xmm0, lea_r15@@ _[rax@@ +rdx*8], mov_r8_qword_ptr_[r@@ 15+8], test_r8_r8, jle_0x@@ 1a@@ 1, mov_rbp_rdi, mov_r12_rsi, xor_ebx_ebx, lea_r14_[r@@ 15+0x10], jmp_0x5@@ 7, test_rax_rax, jne_0xbd, mov_rdi_qword_ptr_[r13+8], lea_rsi_[r@@ 13+0x10], call_0xffffffffffffd@@ 78@@ f, test_rax_rax, je_0xa7, mov_rdx_qword_ptr_[rbp+0x@@ 38], mov_rsi_qword_ptr_[rsp+8], add_rdx@@ _r9, lea_rdi_[rsp+0x10], call_0xffffffffffffe@@ 1b0, test_eax_eax, jne_0x14@@ 1, mov_r8_qword_ptr_[r@@ 15+8], inc_rbx, cmp_r8@@ _rbx, jle_0x@@ 92, mov_rax_qword_ptr_[r15+0x10], mov_rax_qword_ptr_[rax+r@@ bx*8], cmp_r12_rax, je_0xffffffffffffffe9, mov_rdx_rax, shl_rdx_4, add_rdx_qword_ptr_[r@@ bp], test_byte_ptr_[r@@ dx+@@ 8]_8, je_0xffffffffffffffd8, lea_r9@@ _[rax@@ +rax*2], mov_r11_qword_ptr_[r@@ bp+0x28], shl@@ _r9@@ _3, add_r11@@ _r9, mov_r10_qword_ptr_[r@@ 11@@ +0x10], mov_rsi_r14, mov_rdx_qword_ptr_[r@@ 10], mov_rdi_r8, call_0xffffffffffffd7@@ 12, cmp_qword_ptr_[r@@ 11@@ +@@ 8]_1, jg_0xffffffffffffff@@ 68, test_rax_rax, jne_0xffffffffffffffa7, mov_rdi_qword_ptr_[r13+8], lea_rsi_[r@@ 13+0x10], call_0xffffffffffffd@@ 6f@@ 5, test_rax_rax, je_0xffffffffffffff@@ 95, jmp_0xffffffffffffff6a, mov_rdx_qword_ptr_[r@@ 10+8], test_rdx_rdx, jle_0xffffffffffffff@@ 81, mov_rsi_r14, mov_rdi_r8, call_0xffffffffffffd@@ 6cd, jmp_0xffffffffffffffc6, xor_r9d_r9d, lea_r10_[rsp+0x@@ 20], lea_r11_[r@@ 13+0x10], test_r8_r8, jle_0x@@ 5b, mov_rax_qword_ptr_[r15+0x10], mov_rdi_qword_ptr_[rsp+0x18], mov_rdx_qword_ptr_[r@@ ax+r@@ 9@@ *8], mov_rsi_r10, call_0xffffffffffffd6@@ 98, test_rax_rax, jne_0x31, mov_r8_qword_ptr_[r@@ 13+8], mov_rsi_r11, mov_rdi_r8, call_0xffffffffffffd@@ 68@@ 4, dec_rax, mov_rdx_rax, js_0x1@@ a, cmp_rax@@ _r8, jge_0x@@ 15, dec@@ _r8, mov_qword_ptr_[r13@@ +@@ 8]_r8, lea_rdi_[r@@ 13+8], mov_rsi_r11, call_0xffffffffffffd@@ 7c@@ 4, inc@@ _r9, cmp_qword_ptr_[r@@ 15+@@ 8]_r9, jg_0xffffffffffffff@@ b0, mov_rdi_qword_ptr_[rsp+0x20], call_0xfffffffffffea@@ 001, xor_eax_eax, mov_rcx_qword_ptr_[rsp+0x28], xor_rcx_qword_ptr_fs:[0x28], jne_0x2c, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_qword_ptr_[rsp+0x20], mov_dword_ptr_[rsp+8]_eax, call_0xfffffffffffe9@@ fc@@ f, mov_eax_dword_ptr_[rsp+8], jmp_0xffffffffffffffcc, xor_edi_edi, jmp_0xffffffffffffffc1, call_0xfffffffffffea@@ 18@@ 0
push_r15, push_r14, push_r13, push_r12, mov_r12_rdi, mov_edi@@ _0x3@@ 800, push_rbp, push_rbx, sub_rsp_0xf8, mov_qword_ptr_[rsp+0x4@@ 8]_rsi, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xe8]_rax, xor_eax_eax, call_0xfffffffffffea@@ 35@@ f, mov_qword_ptr_[rsp+0x20]_rax, test_rax_rax, je_0x3@@ a2, mov_r9_qword_ptr_[rsp+0x48], mov_rax_qword_ptr_[rsp+0x20], pxor_xmm0_xmm0, add_rax_0x1@@ 800, cmp_qword_ptr_[r@@ 9+0x1@@ 0]_0, mov_qword_ptr_[rsp+8]_rax, mov_qword_ptr_[r@@ 9+0x@@ 58]_0, mov_qword_ptr_[r@@ 9+0x@@ 60]_0, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm0, jle_0x@@ 9d@@ 7, xor_r8d_r8d, mov_qword_ptr_[rsp+0x18]_r8, xor_ebp_ebp, mov_r8_r12, mov_rbx_qword_ptr_[rsp+0x18], lea_rax_[r@@ bx*8], mov_qword_ptr_[rsp+0x28]_rax, mov_rax_qword_ptr_[r@@ 9@@ +0x18], mov_r15_qword_ptr_[r@@ ax+r@@ bx*8], shl_r15@@ _4, add_r15@@ _qword_ptr_[r@@ 8], mov_eax_dword_ptr_[r15+8], movzx_r12d_byte_ptr_[r@@ 15+8], shr_eax@@ _8, and_ax@@ _0x3ff, cmp_r12d_1, je_0x3@@ 46, cmp_r12d@@ _3, je_0x8@@ 14, cmp_r12d@@ _5, je_0x6@@ 7a, cmp_r12d@@ _7, je_0x7@@ c8, inc@@ _qword_ptr_[rsp+0x18], mov_rax_qword_ptr_[rsp+0x18], cmp_rax_qword_ptr_[r@@ 9+0x10], jl_0xffffffffffffff@@ 99, mov_r12_r8, test_rbp_rbp, jle_0x@@ a@@ 72, lea_rbx_[r@@ bp+1], mov_qword_ptr_[rsp+0x6@@ 0]_rbx, shl_rbx@@ _3, mov_rdi_rbx, mov_qword_ptr_[rsp+0x68]_0, call_0xfffffffffffea@@ 26@@ d, mov_qword_ptr_[rsp+0x70]_rax, mov_r13_rax, test_rax_rax, je_0x@@ 88@@ c, movabs_rax@@ _0x@@ aaaa@@ aaaa@@ aaaa@@ 85@@ 5, mov_dword_ptr_[rsp+0x@@ 5c]_0, cmp_rbp_rax, jg@@ _0x8@@ 71, lea_rax_[rbp+r@@ bp@@ *2], shl_rax_3, mov_rdi_rax, mov_qword_ptr_[rsp+0x40]_rax, call_0xfffffffffffea@@ 22@@ b, mov_qword_ptr_[rsp+0x10]_rax, test_rax_rax, je_0x@@ 84@@ d, mov_rax_qword_ptr_[rsp+0x10], sub_rbx@@ _8, add_rax_rbx, add_rbx_rax, mov_qword_ptr_[rsp+0x28]_rax, mov_rax_qword_ptr_[rsp+0x20], mov_byte_ptr_[rsp+0x@@ 38]_0, lea_r14@@ _[rax+8], lea_rax_[rsp+0x@@ 5c], mov_qword_ptr_[rsp+0x18]_rax, pxor_xmm0_xmm0, mov_qword_ptr_[rsp+0x3@@ 0]_rbx, mov_r13_r14, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm0, xor_r15d_r15d, lea_rbx_[rsp+0x@@ 60], mov_r14_r12, mov_qword_ptr_[rsp+0x68]_0, xor_r12d_r12d, cmp_qword_ptr_[r@@ 13]_0, jle_0x@@ 43, mov_rax_qword_ptr_[r13+8], mov_rdx_qword_ptr_[r@@ ax+r@@ 12*8], mov_rax_qword_ptr_[r@@ 14+0x18], mov_rax_qword_ptr_[rax+rdx*8], cmp_rax_-1, je_0x22, lea_rdx_[rax+rax*2], mov_rax_qword_ptr_[r14+0x@@ 30], mov_rdi_rbx, lea_rsi_[rax@@ +rdx*8], call_0xffffffffffffd@@ 87@@ b, mov_dword_ptr_[rsp+0x5c]_eax, test_eax_eax, jne_0x@@ 7a@@ 0, inc_r12, cmp_qword_ptr_[r@@ 13@@ ]_r12, jg_0xffffffffffffff@@ c3, mov_rdi_qword_ptr_[rsp+0x18], xor_ecx_ecx, mov_rdx_rbx, mov_rsi_r14, call_0xffffffffffffe@@ 64@@ 4, mov_rdi_qword_ptr_[rsp+0x10], mov_qword_ptr_[rdi@@ +r@@ 15*@@ 8]_rax, test_rax_rax, je_0x7@@ c3, cmp_byte_ptr_[rax+0x@@ 68]_0, js_0x6@@ e9, mov_rdi_qword_ptr_[rsp+0x28], mov_qword_ptr_[rdi@@ +r@@ 15*@@ 8]_rax, mov_rax_qword_ptr_[rsp+0x10], mov_rdi_qword_ptr_[rsp+0x30], mov_rax_qword_ptr_[rax+r@@ 15*8], mov_qword_ptr_[rdi@@ +r@@ 15*@@ 8]_rax, mov_rdx_r15, lea_r9_[rsp+0x@@ c0], shl_rdx_5, mov_rax_r9, add_rdx@@ _qword_ptr_[rsp+8], lea_rsi_[rsp+0x@@ e0], mov_rcx_qword_ptr_[rdx], add_rdx_8, or_qword_ptr_[r@@ ax]@@ _rcx, add_rax_8, cmp_rsi_rax, jne_0xffffffffffffffef, inc_r15, add_r13@@ _0x18, cmp_r15@@ _rbp, jne_0xffffffffffffff@@ 27, cmp_byte_ptr_[rsp+0x@@ 38]_0, mov_qword_ptr_[rsp+8]_r9, mov_r12_r14, jne_0x@@ 80@@ 8, mov_esi_0x100, mov_edi_8, call_0xfffffffffffea@@ 0@@ 19, mov_rbx_rax, mov_rax_qword_ptr_[rsp+0x48], mov_qword_ptr_[rax+0x5@@ 8]_rbx, test_rbx_rbx, je_0x6@@ d5, mov_r10_qword_ptr_[rsp+0x20], mov_r13_qword_ptr_[rsp+0x10], mov_r14_qword_ptr_[rsp+0x28], mov_r9_qword_ptr_[rsp+8], xor_r11d_r11d, lea_r8_[r@@ 10+0x1@@ 820], mov_rsi_r11, mov_rax_qword_ptr_[r@@ 9+r@@ 11], shl_rsi@@ _6, add_rsi@@ _rbx, mov_edx_1, test_rax_rax, je_0x1f, test_al_1, jne_0x@@ 6e@@ e, add_rdx_rdx, add_rsi_8, shr_rax_1, jne_0xffffffffffffffee, add_r11@@ _8, cmp_r11@@ _0x20, jne_0xffffffffffffffc3, test_byte_ptr_[rsp+0x@@ c@@ 1]_4, je_0x26, mov_rcx_qword_ptr_[rsp+0x20], xor_eax_eax, mov_rdx_rax, shl_rdx_5, test_byte_ptr_[rcx@@ +rdx+0x1@@ 80@@ 1]_4, jne_0x7@@ 3d, inc_rax, cmp_rax_rbp, jne_0xffffffffffffffe5, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffe9c@@ 3f, mov_rdi_qword_ptr_[rsp+0x70], call_0xfffffffffffe9c@@ 35, mov_rax_qword_ptr_[rsp+0x20], mov_rbx_qword_ptr_[rsp+0x40], lea_rbp_[r@@ ax+0x10], add_rbx@@ _rbp, mov_rdi_qword_ptr_[rbp], add_rbp@@ _0x18, call_0xfffffffffffe9c@@ 10, cmp_rbx_rbp, jne_0xfffffffffffffff0, mov_rdi_qword_ptr_[rsp+0x20], call_0xfffffffffffe9c@@ 01, mov_eax_1, jmp_0x29, mov_qword_ptr_[r14+@@ 8]_0, mov_qword_ptr_[r@@ 14]_0, test_rbp_rbp, jne_0x34@@ e, mov_rdi_qword_ptr_[rsp+0x20], call_0xfffffffffffe9b@@ d8, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x@@ e8], xor_rbx_qword_ptr_fs:[0x28], jne_0x7@@ 9b, add_rsp_0xf8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, movzx_ecx_byte_ptr_[r@@ 15], mov_edi_1, mov_rdx_rcx, shr_rdx@@ _3, lea_r13_[rsp+0x@@ 80], and_edx@@ _0x18, shl_rdi@@ _cl, or_qword_ptr_[r@@ 13@@ +rdx@@ ]_rdi, test_ax_ax, je_0xba, test_al_0x20, jne_0x38@@ a, test_al_0x80, jne_0x2@@ bb, test_al_4, je_0x50, cmp_r12d_1, je_0x4@@ 3c, cmp_dword_ptr_[r@@ 8+0x@@ b@@ 4]_1, jle_0x@@ 3f@@ 6, mov_rdi_qword_ptr_[r@@ 8+0x@@ 78], xor_esi_esi, xor_ecx_ecx, mov_rdx_qword_ptr_[r@@ di@@ +rcx*8], not@@ _rdx, or_rdx@@ _qword_ptr_[r@@ 8@@ +rcx@@ *8+0x@@ b8], and_rdx@@ _qword_ptr_[r@@ 13@@ +rcx*8], mov_qword_ptr_[r13@@ +rcx*@@ 8]_rdx, inc_rcx, or@@ _rsi@@ _rdx, cmp_rcx@@ _4, jne_0xffffffffffffffdd, test_rsi_rsi, je_0xfffffffffffffc@@ 56, test_al_8, je_0x50, cmp_r12d_1, je_0x4@@ 7a, cmp_dword_ptr_[r@@ 8+0x@@ b@@ 4]_1, jle_0x@@ 36@@ c, mov_rsi_qword_ptr_[r@@ 8+0x@@ 78], xor_ecx_ecx, xor_edx_edx, mov_rax_qword_ptr_[r@@ 8@@ +rdx*8+0x@@ b8], and_rax@@ _qword_ptr_[r@@ si@@ +rdx*8], not_rax, and_rax@@ _qword_ptr_[r@@ 13@@ +rdx*8], mov_qword_ptr_[r13@@ +rdx*@@ 8]_rax, inc_rdx, or@@ _rcx_rax, cmp_rdx@@ _4, jne_0xffffffffffffffdd, test_rcx_rcx, je_0xfffffffffffffc@@ 04, mov_r14_qword_ptr_[rsp+8], xor_ebx_ebx, test_rbp_rbp, jle_0x@@ 17@@ e, mov_dword_ptr_[rsp+0x10]@@ _r12d, mov_qword_ptr_[rsp+0x40]_r8, mov_r12_rbp, mov_qword_ptr_[rsp+0x30]_r9, mov_rbp_r14, mov_r14_r13, mov_r13_rbx, jmp_0x33, movzx_ecx_byte_ptr_[r@@ 15], mov_rax_rcx, shr_rax@@ _3, and_eax@@ _0x18, add_rax_qword_ptr_[r@@ sp+8], mov_rax_qword_ptr_[r@@ ax+rdx], shr_rax_cl, test_al_1, jne_0x20, inc@@ _r13, add_rbp@@ _0x20, cmp_r13@@ _r12, jge_0x@@ 11@@ d, mov_rdx_r13, shl_rdx_5, cmp_dword_ptr_[r@@ sp+0x10]_1, je_0xffffffffffffffc6, xor_ecx_ecx, xor_eax_eax, lea_rsi_[rsp+0xa0], mov_rdx_qword_ptr_[r@@ 14@@ +rax*8], and_rdx@@ _qword_ptr_[r@@ bp+rax*8], mov_qword_ptr_[rsi@@ +rax*@@ 8]_rdx, inc_rax, or_rcx@@ _rdx, cmp_rax@@ _4, jne_0xffffffffffffffe9, test_rcx_rcx, je_0xffffffffffffff@@ ba, xor_ebx_ebx, xor_edi_edi, xor_edx_edx, lea_r11_[rsp+0x@@ c0], mov_rsi_qword_ptr_[r@@ 14@@ +rdx*8], mov_rax_qword_ptr_[r@@ bp@@ +rdx*8], mov_rcx_rsi, not_rcx, and@@ _rcx_rax, not_rax, and_rax@@ _rsi, mov_qword_ptr_[r@@ 11@@ +rdx*@@ 8]_rcx, mov_qword_ptr_[r14@@ +rdx*@@ 8]_rax, inc_rdx, or@@ _rdi@@ _rcx, or@@ _rbx_rax, cmp_rdx@@ _4, jne_0xffffffffffffffd3, mov_rsi_qword_ptr_[rsp+0x20], lea_rax_[r@@ 13+r@@ 13@@ *2], lea_r11_[r@@ si+rax*8], test_rdi_rdi, je_0x66, mov_rax_r12, movdqa_xmm1_xmmword_ptr_[r@@ sp+0x@@ c0], shl_rax_5, add_rax_qword_ptr_[r@@ sp+8], movups_xmmword_ptr_[r@@ ax@@ ]_xmm1, movdqa_xmm2_xmmword_ptr_[r@@ sp+0x@@ d0], mov_qword_ptr_[rsp+0x3@@ 8]_r11, movups_xmmword_ptr_[rax+0x1@@ 0@@ ]_xmm2, movdqa_xmm3_xmmword_ptr_[r@@ sp+0x@@ a0], lea_rax_[r@@ 12+r@@ 12@@ *2], movups_xmmword_ptr_[r@@ bp@@ ]_xmm3, movdqa_xmm4@@ _xmmword_ptr_[r@@ sp+0x@@ b0], lea_rdi_[r@@ si+rax*8], movups_xmmword_ptr_[rbp+0x@@ 10@@ ]_xmm4, mov_rsi_r11, call_0xffffffffffffe0@@ 4b, test_eax_eax, jne_0x@@ ec, mov_r11@@ _qword_ptr_[rsp+0x38], inc_r12, mov_rax_qword_ptr_[rsp+0x30], mov_rdi_qword_ptr_[rsp+0x28], mov_rax_qword_ptr_[rax+0x18], mov_rsi_qword_ptr_[rax+r@@ di], mov_rdi_r11, call_0xffffffffffffba@@ 21, test_al_al, je_0xc2, test_rbx_rbx, jne_0xfffffffffffffe@@ df, mov_r8_qword_ptr_[rsp+0x40], mov_r9_qword_ptr_[rsp+0x30], mov_rbx_r13, mov_rbp_r12, mov_r13_r14, cmp_rbp_rbx, jne_0xfffffffffffffa@@ 73, mov_rax_rbp, movdqa_xmm@@ 5@@ _xmmword_ptr_[r@@ sp+0x@@ 80], shl_rax_5, add_rax_qword_ptr_[r@@ sp+8], movups_xmmword_ptr_[r@@ ax@@ ]_xmm5, movdqa_xmm@@ 6@@ _xmmword_ptr_[r@@ sp+0x@@ 90], mov_rbx_qword_ptr_[rsp+0x28], movups_xmmword_ptr_[rax+0x1@@ 0@@ ]_xmm6, mov_rax_qword_ptr_[r@@ 9@@ +0x18], mov_rdi_qword_ptr_[rsp+0x20], mov_rbx_qword_ptr_[r@@ ax+r@@ bx], lea_rax_[rbp+r@@ bp@@ *2], lea_r14_[r@@ di+rax*8], mov_qword_ptr_[r14@@ ]_1, mov_qword_ptr_[r14+@@ 8]_1, mov_edi_8, mov_qword_ptr_[rsp+0x3@@ 0]_r8, mov_qword_ptr_[rsp+0x10]_r9, call_0xfffffffffffe9c@@ b1, test_rax_rax, mov_qword_ptr_[r14+0x1@@ 0]_rax, mov_r9_qword_ptr_[rsp+0x10], mov_r8_qword_ptr_[rsp+0x30], je_0xfffffffffffffc@@ c6, mov_qword_ptr_[rax]_rbx, inc_rbp, pxor_xmm0_xmm0, movaps_xmmword_ptr_[r@@ 13@@ ]_xmm0, movaps_xmmword_ptr_[r@@ 13+0x1@@ 0]_xmm0, jmp_0xfffffffffffff9d@@ f, mov_rbp_r12, mov_rax_qword_ptr_[rsp+0x20], xor_ebx_ebx, lea_r12_[r@@ ax+0x10], mov_rdi_qword_ptr_[r12], inc_rbx, call_0xfffffffffffe@@ 98@@ 79, add_r12@@ _0x18, cmp_rbp_rbx, jg_0xffffffffffffff@@ ed, mov_rdi_qword_ptr_[rsp+0x20], call_0xfffffffffffe9@@ 86@@ 6, jmp_0xfffffffffffffc@@ 91, cmp_dword_ptr_[r@@ 8+0x@@ b@@ 4]_1, lea_r13_[rsp+0x@@ 80], jle_0x@@ 98, mov_rcx_qword_ptr_[r@@ 8+0x@@ 78], mov_rdx_r13, lea_rsi_[rsp+0xa0], mov_rdi_qword_ptr_[r@@ cx], add_rcx_8, or_qword_ptr_[r@@ dx@@ ]_rdi, add_rdx_8, cmp_rsi_rdx, jne_0xffffffffffffffef, mov_rdx_qword_ptr_[r@@ 8+0x@@ d8], test_dl@@ _0x40, jne_0xe, and@@ _qword_ptr_[rsp+0x@@ 8@@ 0]@@ _0xffffffffffff@@ fb@@ ff, and_edx@@ _0x80, je_0xfffffffffffffc@@ 85, and@@ _qword_ptr_[rsp+0x@@ 8@@ 0]@@ _0xfffffffffffffff@@ e, jmp_0xfffffffffffffc@@ 76, mov_rdx_qword_ptr_[rsp+0x80], pxor_xmm0_xmm0, movaps_xmmword_ptr_[r@@ 13@@ ]_xmm0, movaps_xmmword_ptr_[r@@ 13+0x1@@ 0]_xmm0, and_dh@@ _4, je_0xfffffffffffff@@ 90@@ d, mov_qword_ptr_[rsp+0x8@@ 0]@@ _0x400, jmp_0xfffffffffffffc@@ 51, pcmpeq@@ d@@ _xmm0_xmm0, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm0, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm0, jmp_0xffffffffffffff7c, xor_ecx_ecx, xor_edx_edx, mov_rax_qword_ptr_[r@@ 8@@ +rdx*8+0x@@ b8], not_rax, and_rax@@ _qword_ptr_[r@@ 13@@ +rdx*8], mov_qword_ptr_[r13@@ +rdx*@@ 8]_rax, inc_rdx, or@@ _rcx_rax, cmp_rdx@@ _4, jne_0xffffffffffffffe1, test_rcx_rcx, je_0xfffffffffffff@@ 8a@@ 6, jmp_0xfffffffffffffc@@ a2, xor_esi_esi, xor_edx_edx, mov_rcx_qword_ptr_[r@@ 13@@ +rdx*8], and_rcx@@ _qword_ptr_[r@@ 8@@ +rdx*8+0x@@ b8], mov_qword_ptr_[r13@@ +rdx*@@ 8]_rcx, inc_rdx, or@@ _rsi@@ _rcx, cmp_rdx@@ _4, jne_0xffffffffffffffe4, test_rsi_rsi, jne_0xfffffffffffffc@@ 21, jmp_0xfffffffffffff86@@ b, test_byte_ptr_[r15+0x@@ a@@ ]_0x40, je_0xfffffffffffffe@@ 6c, cmp_dword_ptr_[r@@ 8+0x@@ b@@ 4]_1, jg_0xffffffffffff@@ fb@@ c5, jmp_0xffffffffffffffaf, mov_rdx_qword_ptr_[r@@ 8+0x@@ d8], pcmpeq@@ d@@ _xmm0_xmm0, lea_r13_[rsp+0x@@ 80], movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm0, test_dl@@ _0x40, jne_0xfffffffffffffe@@ da, mov_qword_ptr_[rsp+0x@@ 80@@ ]_@@ -0x@@ 401, jmp_0xfffffffffffffec8, lea_r13_[rsp+0x@@ 80], mov_rcx_qword_ptr_[r@@ 15], mov_rdx_r13, lea_rsi_[rsp+0xa0], mov_rdi_qword_ptr_[r@@ cx], add_rcx_8, or_qword_ptr_[r@@ dx@@ ]_rdi, add_rdx_8, cmp_rsi_rdx, jne_0xffffffffffffffef, jmp_0xfffffffffffffb@@ 22, test_byte_ptr_[r15+0x@@ a@@ ]_0x40, je_0xfffffffffffffb@@ 87, jmp_0xfffffffffffffdd@@ 6, mov_rdi_qword_ptr_[rsp+0x18], mov_ecx_1, mov_rdx_rbx, mov_rsi_r14, call_0xffffffffffffdf@@ 30, mov_rdi_qword_ptr_[rsp+0x28], mov_qword_ptr_[rdi@@ +r@@ 15*@@ 8]_rax, test_rax_rax, je_0x1@@ 35, mov_rdi_qword_ptr_[rsp+0x10], cmp_rax_qword_ptr_[r@@ di+r@@ 15*8], je_0x1c, movzx_edi_byte_ptr_[r@@ sp+0x@@ 38], cmp_dword_ptr_[r14+0x@@ b4@@ ]_2, mov_eax_1, cmovge@@ _edi@@ _eax, mov_byte_ptr_[rsp+0x@@ 38@@ ]_dil, mov_rdi_qword_ptr_[rsp+0x18], mov_ecx_2, mov_rdx_rbx, mov_rsi_r14, call_0xffffffffffffd@@ ee@@ 4, mov_rdi_qword_ptr_[rsp+0x30], mov_qword_ptr_[rdi@@ +r@@ 15*@@ 8]_rax, test_rax_rax, jne_0xfffffffffffff@@ 8c@@ b, mov_eax_dword_ptr_[rsp+0x@@ 5c], test_eax_eax, je_0xfffffffffffff@@ 8b@@ f, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffe@@ 95@@ fb, mov_r13@@ _qword_ptr_[rsp+0x70], mov_rdi_r13, call_0xfffffffffffe9@@ 5e@@ e, mov_rax_qword_ptr_[rsp+0x20], lea_rbx_[r@@ ax+0x10], lea_rax_[rbp+r@@ bp@@ *2], lea_rbp_[r@@ bx+rax*8], mov_rdi_qword_ptr_[rbx], add_rbx_0x18, call_0xfffffffffffe9@@ 5c@@ 9, cmp_rbp_rbx, jne_0xfffffffffffffff1, mov_rdi_qword_ptr_[rsp+0x20], call_0xfffffffffffe9@@ 5b@@ a, jmp_0xfffffffffffff9e@@ 5, mov_ecx_dword_ptr_[rsp+0x@@ 5c], test_ecx_ecx, je_0xfffffffffffff8@@ 3d, jmp_0xffffffffffffffa4, test_qword_ptr_[r@@ 10+r@@ 11+0x1@@ 80@@ 0]_rdx, jne_0x7f, lea_rcx_[r@@ 8+r@@ 11], xor_edi_edi, mov_r15_qword_ptr_[r@@ cx], inc_rdi, and@@ _r15@@ _rdx, add_rcx_0x20, test_r15_r15, je_0xfffffffffffffff@@ 0, shl_rdi_3, test_qword_ptr_[r@@ 12+r@@ 11+0x@@ b@@ 8]_rdx, je_0xe, mov_rcx_qword_ptr_[r@@ 14+r@@ di], mov_qword_ptr_[rsi@@ ]_rcx, jmp_0xfffffffffffff8e@@ 1, mov_rcx_qword_ptr_[r@@ 13+r@@ di], mov_qword_ptr_[rsi@@ ]_rcx, jmp_0xfffffffffffff8d@@ 4, mov_rdi_qword_ptr_[rsp+0x20], call_0xfffffffffffe9@@ 55@@ 2, mov_esi_0x100, mov_edi_8, call_0xfffffffffffe@@ 98@@ 73, mov_rbx_qword_ptr_[rsp+0x48], test_rax_rax, mov_qword_ptr_[rbx+0x@@ 58]_rax, setne_al, jmp_0xfffffffffffff96@@ 1, mov_edx_dword_ptr_[rsp+0x@@ 5c], test_edx_edx, je_0xfffffffffffffe@@ cb, jmp_0xffffffffffffff1e, xor_edi_edi, jmp_0xffffffffffffff9d, mov_rdi_qword_ptr_[rsp+0x30], cmp_byte_ptr_[rsp+0x@@ 38]_0, mov_rax_qword_ptr_[r@@ di+rax*8], mov_qword_ptr_[rbx+0x@@ 50]_rax, je_0xfffffffffffff@@ 8b@@ f, mov_qword_ptr_[rbx+0x@@ 85@@ 0]_rax, jmp_0xfffffffffffff8b@@ 2, mov_esi_0x200, mov_edi_8, call_0xfffffffffffe@@ 98@@ 17, mov_rbx_rax, mov_rax_qword_ptr_[rsp+0x48], mov_qword_ptr_[rax+0x6@@ 0]_rbx, test_rbx_rbx, je_0xfffffffffffffe@@ d3, mov_rax_qword_ptr_[rsp+0x20], mov_r13_qword_ptr_[rsp+0x10], mov_r14_qword_ptr_[rsp+0x28], mov_r9_qword_ptr_[rsp+8], lea_r12_[r@@ ax+0x1@@ 820], xor_r11d_r11d, mov_rcx_r11, mov_rax_qword_ptr_[r@@ 9+r@@ 11@@ *8], shl_rcx@@ _9, add_rcx@@ _rbx, mov_edx_1, test_rax_rax, je_0x12, test_al_1, jne_0x20, add_rdx_rdx, add_rcx_8, shr_rax_1, jne_0xfffffffffffffff2, inc@@ _r11, add_r12_8, cmp_r11@@ _4, jne_0xffffffffffffffcd, jmp_0xfffffffffffff80@@ 8, test_qword_ptr_[r@@ 12-0x@@ 20]_rdx, jne_0x31, mov_rdi_r12, xor_esi_esi, mov_r8_qword_ptr_[r@@ di], inc@@ _rsi, and_r8@@ _rdx, mov_r10_rsi, add_rdi_0x20, test_r8_r8, je_0xffffffffffffffed, mov_rsi_qword_ptr_[r@@ 13+r@@ 10@@ *8], mov_qword_ptr_[rcx@@ ]_rsi, mov_rsi_qword_ptr_[r@@ 14+r@@ 10@@ *8], mov_qword_ptr_[rcx+0x@@ 80@@ 0]_rsi, jmp_0xffffffffffffffae, xor_r10d_r10d, jmp_0xffffffffffffff@@ e8, mov_rdi_qword_ptr_[rsp+0x20], call_0xfffffffffffe@@ 94@@ 35, test_rbp_rbp, jne_0xfffffffffffff@@ 85@@ d, jmp_0xfffffffffffffe@@ da, call_0xfffffffffffe9@@ 5e@@ 2
endbr64, push_rbp, push_rbx, mov_rbx_rsi, sub_rsp_8, cmp_byte_ptr_[r@@ si+0x@@ 30]@@ _0x10, jne_0x27, mov_rax_qword_ptr_[rsi+8], xor_r8d_r8d, mov_rdx_qword_ptr_[rax+0x18], mov_rax_qword_ptr_[rax+0x38], mov_qword_ptr_[rsi+0x1@@ 8]_rdx, mov_qword_ptr_[rsi+0x@@ 38]_rax, add_rsp_8, pop_rbx, mov_eax_r8d, pop_rbp, ret, mov_qword_ptr_[rbx+0x1@@ 8]_rsi, mov_rdx_qword_ptr_[rbx+0x30], mov_rsi_qword_ptr_[r@@ si+0x28], mov_rbp_rdi, call_0xffffffffffffc@@ 20@@ 9, mov_qword_ptr_[rbx+0x38]_rax, cmp_rax_-1, je_0x3c, xor_r8d_r8d, cmp_byte_ptr_[rbx+0x@@ 30]@@ _0xc, jne_0xffffffffffffffcd, mov_edx_dword_ptr_[r@@ bx+0x28], shl_rax_4, add_rax_qword_ptr_[r@@ bp], and_edx@@ _0x3ff, mov_ecx_edx, mov_edx_dword_ptr_[rax+8], shl_ecx@@ _8, and_edx@@ _0xfff@@ c@@ 00@@ ff, or_edx_ecx, mov_dword_ptr_[rax+8]_edx, add_rsp_8, mov_eax_r8d, pop_rbx, pop_rbp, ret, mov_r8d@@ _0xc, jmp_0xffffffffffffff9@@ 4
push_r12, mov_r12_rdi, push_rbp, push_rbx, cmp_qword_ptr_[rdi]_0, jle_0x@@ 34, xor_ebx_ebx, mov_rax_qword_ptr_[r12+0x10], lea_rbp_[r@@ bx+r@@ bx*2], shl_rbp@@ _4, mov_rdi_qword_ptr_[rax+r@@ bp+0x28], inc_rbx, call_0xfffffffffffe9@@ 34@@ b, mov_rax_qword_ptr_[r12+0x10], mov_rdi_qword_ptr_[rax+r@@ bp+0x10], call_0xfffffffffffe9@@ 33@@ c, cmp_rbx_qword_ptr_[r@@ 12], jl_0xffffffffffffff@@ d3, pop_rbx, mov_rdi_qword_ptr_[r12+0x10], pop_rbp, pop_r12, jmp_0xfffffffffffe@@ 9@@ 32@@ 8
push_r12, push_rbp, push_rbx, mov_rax_qword_ptr_[rdi], dec_rax, mov_qword_ptr_[rdi]_rax, js@@ _0x64, lea_rbx_[rax@@ +rax*2], mov_rax_qword_ptr_[rsi], shl_rbx_4, add_rax_rbx, mov_r12_rsi, mov_rsi_qword_ptr_[rax], shl_rcx_4, mov_qword_ptr_[rdx@@ ]_rsi, mov_rsi_qword_ptr_[rax+0x10], mov_rbp_r9, mov_rdi_r8, mov_rdx_rcx, call_0xfffffffffffe@@ 96@@ 59, mov_rdi_qword_ptr_[rbp+0x10], call_0xfffffffffffe9@@ 2e0, mov_rax_qword_ptr_[r12], mov_rdi_qword_ptr_[rax+r@@ bx+0x10], call_0xfffffffffffe9@@ 2d@@ 2, add_rbx_qword_ptr_[r@@ 12], movdqu_xmm0_xmmword_ptr_[r@@ bx+0x18], movaps_xmmword_ptr_[r@@ bp@@ ]_xmm0, mov_rax_qword_ptr_[rbx+0x28], mov_qword_ptr_[rbp+0x10]_rax, mov_rax_qword_ptr_[rbx+8], pop_rbx, pop_rbp, pop_r12, ret, lea_rcx_[rip+0x12@@ 148], mov_edx_0x5@@ 53, lea_rsi_[rip+0x11@@ c@@ 3c], lea_rdi_[rip+0x11@@ c@@ 3f], call_0xfffffffffffe@@ 94@@ e@@ 5
push_rbp, mov_rbp_rdi, mov_rdi_rsi, push_rbx, mov_rbx_rsi, sub_rsp_8, call_0xfffffffffffe@@ 94@@ 21, cmp_rax_1, jne_0x28, movzx_ecx_byte_ptr_[r@@ bx], mov_rdx_rcx, shr_rdx@@ _3, shl_rax_cl, and_edx@@ _0x18, or_qword_ptr_[r@@ bp@@ +rdx@@ ]_rax, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret, add_rsp_8, pop_rbx, mov_eax_3, pop_rbp, ret
push_r14, push_r13, mov_r13_rcx, push_r12, mov_r12_r9, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, sub_rsp_0x10, test@@ _qword_ptr_[rsp+0x@@ 40]@@ _0x4@@ 00000, je_0x27, mov_ecx_6, lea_rdi_[rip+0x11@@ bc@@ a], mov_rsi_r9, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x@@ fa, lea_r12_[rip+0x@@ 11@@ ba@@ b], mov_rax_qword_ptr_[r13], mov_rdi_qword_ptr_[rdx], cmp_qword_ptr_[r@@ 8]_rax, je_0x116, lea_rdx_[rax+1], mov_qword_ptr_[r13@@ ]_rdx, lea_r13_[r@@ di+rax*8], mov_rdi_r12, call_0xfffffffffffe9@@ 4c@@ 9, mov_qword_ptr_[r13]_rax, mov_ecx_6, lea_rdi_[rip+0x11@@ b8@@ 9], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x70, mov_ecx_6, lea_rdi_[rip+0x11@@ b7@@ 5], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x10@@ 5, call_0xfffffffffffe@@ 97@@ e8, mov_rdx_qword_ptr_[rax], xor_ecx_ecx, mov_edi_1, test_rbp_rbp, jne_0x2@@ b5, test_byte_ptr_[rdx@@ +rcx*@@ 2@@ ]_2, je_0x13, mov_rax_rcx, mov_rsi_rdi, sar_rax@@ _6, shl_rsi@@ _cl, or_qword_ptr_[r@@ bx@@ +rax*@@ 8]_rsi, inc_rcx, cmp_rcx@@ _0x100, jne_0xffffffffffffffdf, xor_eax_eax, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, call_0xfffffffffffe@@ 97@@ 98, mov_rdx_qword_ptr_[rax], xor_ecx_ecx, mov_edi_1, test_rbp_rbp, jne_0x2@@ 2f, test_byte_ptr_[rdx@@ +rcx*@@ 2@@ ]_8, je_0x13, mov_rax_rcx, mov_rsi_rdi, sar_rax@@ _6, shl_rsi@@ _cl, or_qword_ptr_[r@@ bx@@ +rax*@@ 8]_rsi, inc_rcx, cmp_rcx@@ _0x100, jne_0xffffffffffffffdf, jmp_0xffffffffffffffb0, lea_rdi_[rip+0x11@@ ac@@ 3], mov_ecx_6, mov_rsi_r9, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], mov_rdi_qword_ptr_[rdx], seta_al, sbb_al_0, test_al_al, lea_rax_[rip+0x@@ 11@@ a@@ 9c], cmove@@ _r12_rax, mov_rax_qword_ptr_[r13], cmp_qword_ptr_[r@@ 8]_rax, jne_0xfffffffffffffe@@ f6, lea_r14@@ _[rax@@ +rax+1], lea_rsi_[r@@ 14*8], mov_qword_ptr_[rsp+8]_r8, mov_qword_ptr_[rsp]_rdx, call_0xfffffffffffe@@ 95@@ 22, mov_rdi_rax, test_rax_rax, je_0x3@@ 13, mov_rdx_qword_ptr_[rsp], mov_r8_qword_ptr_[rsp+8], mov_qword_ptr_[rdx]_rax, mov_qword_ptr_[r@@ 8]_r14, mov_rax_qword_ptr_[r13], jmp_0xfffffffffffffe@@ b6, mov_ecx_6, lea_rdi_[rip+0x11@@ a@@ 4c], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x6a, mov_ecx_6, lea_rdi_[rip+0x@@ ed@@ 53], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x98, call_0xfffffffffffe@@ 96@@ b1, mov_rdx_qword_ptr_[rax], xor_ecx_ecx, mov_edi_1, test_rbp_rbp, jne_0x34@@ 5, test_byte_ptr_[rdx@@ +rcx*@@ 2+1]_0x20, je_0x13, mov_rax_rcx, mov_rsi_rdi, sar_rax@@ _6, shl_rsi@@ _cl, or_qword_ptr_[r@@ bx@@ +rax*@@ 8]_rsi, inc_rcx, cmp_rcx@@ _0x100, jne_0xffffffffffffffde, jmp_0xfffffffffffffebf, call_0xfffffffffffe9@@ 667, mov_rdx_qword_ptr_[rax], xor_ecx_ecx, mov_edi_1, test_rbp_rbp, jne_0x1@@ 6c, test_byte_ptr_[rdx@@ +rcx*@@ 2+1@@ ]_2, je_0x13, mov_rax_rcx, mov_rsi_rdi, sar_rax@@ _6, shl_rsi@@ _cl, or_qword_ptr_[r@@ bx@@ +rax*@@ 8]_rsi, inc_rcx, cmp_rcx@@ _0x100, jne_0xffffffffffffffde, jmp_0xfffffffffffffe@@ 77, mov_ecx_6, lea_rdi_[rip+0x11@@ 97@@ 6], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x68, mov_ecx_6, lea_rdi_[rip+0x11@@ 99@@ 3], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x13@@ d, call_0xfffffffffffe9@@ 5e@@ 7, mov_rdx_qword_ptr_[rax], xor_ecx_ecx, mov_edi_1, test_rbp_rbp, jne_0x2@@ b5, test_byte_ptr_[rdx@@ +rcx*@@ 2+1]_8, je_0x13, mov_rax_rcx, mov_rsi_rdi, sar_rax@@ _6, shl_rsi@@ _cl, or_qword_ptr_[r@@ bx@@ +rax*@@ 8]_rsi, inc_rcx, cmp_rcx@@ _0x100, jne_0xffffffffffffffde, jmp_0xfffffffffffffd@@ f7, call_0xfffffffffffe@@ 95@@ 9f, mov_rdx_qword_ptr_[rax], xor_ecx_ecx, mov_edi_1, test_rbp_rbp, jne_0x20@@ 1, test_byte_ptr_[rdx@@ +rcx*@@ 2+1@@ ]_4, je_0x13, mov_rax_rcx, mov_rsi_rdi, sar_rax@@ _6, shl_rsi@@ _cl, or_qword_ptr_[r@@ bx@@ +rax*@@ 8]_rsi, inc_rcx, cmp_rcx@@ _0x100, jne_0xffffffffffffffde, jmp_0xfffffffffffffd@@ af, xor_eax_eax, test_byte_ptr_[rdx@@ +rax*2@@ ]_8, je_0x1b, movzx_ecx_byte_ptr_[r@@ bp+rax], mov_r10_rdi, mov_rsi_rcx, shr_rsi@@ _3, and_esi@@ _0x18, shl@@ _r10@@ _cl, or_qword_ptr_[r@@ bx+r@@ si@@ ]_r10, inc_rax, cmp_rax@@ _0x100, jne_0xffffffffffffffd8, jmp_0xfffffffffffffd@@ 79, xor_eax_eax, test_byte_ptr_[rdx@@ +rax*2@@ ]_2, je_0x1b, movzx_ecx_byte_ptr_[r@@ bp+rax], mov_r11@@ _rdi, mov_rsi_rcx, shr_rsi@@ _3, and_esi@@ _0x18, shl@@ _r11@@ _cl, or_qword_ptr_[r@@ bx+r@@ si@@ ]@@ _r11, inc_rax, cmp_rax@@ _0x100, jne_0xffffffffffffffd8, jmp_0xfffffffffffffd@@ 41, xor_eax_eax, test_byte_ptr_[rdx@@ +rax*@@ 2+1@@ ]_2, je_0x1b, movzx_ecx_byte_ptr_[r@@ bp+rax], mov_r14_rdi, mov_rsi_rcx, shr_rsi@@ _3, and_esi@@ _0x18, shl_r14@@ _cl, or_qword_ptr_[r@@ bx+r@@ si@@ ]_r14, inc_rax, cmp_rax@@ _0x100, jne_0xffffffffffffffd7, jmp_0xfffffffffffffd@@ 08, mov_ecx_6, lea_rdi_[rip+0x11@@ 8@@ 25], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x49, call_0xfffffffffffe@@ 94@@ 96, mov_rdx_qword_ptr_[rax], xor_ecx_ecx, mov_edi_1, test_rbp_rbp, jne_0x3@@ 3a, test_byte_ptr_[rdx@@ +rcx*@@ 2+1]@@ _0x40, je_0x13, mov_rax_rcx, mov_rsi_rdi, sar_rax@@ _6, shl_rsi@@ _cl, or_qword_ptr_[r@@ bx@@ +rax*@@ 8]_rsi, inc_rcx, cmp_rcx@@ _0x100, jne_0xffffffffffffffde, jmp_0xfffffffffffffc@@ a7, mov_ecx_6, lea_rdi_[rip+0x11@@ 7a@@ c], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x4d, call_0xfffffffffffe@@ 94@@ 35, mov_rax_qword_ptr_[rax], xor_ecx_ecx, mov_edi_1, test_rbp_rbp, jne_0x34@@ 1, test_byte_ptr_[rax@@ +rcx*@@ 2+@@ 1]_1, je_0x13, mov_rdx_rcx, mov_rsi_rdi, sar_rdx@@ _6, shl_rsi@@ _cl, or_qword_ptr_[r@@ bx@@ +rdx*@@ 8]_rsi, inc_rcx, cmp_rcx@@ _0x100, jne_0xffffffffffffffde, jmp_0xfffffffffffffc@@ 4c, mov_eax_0xc, jmp_0xfffffffffffffc@@ 44, mov_ecx_6, lea_rdi_[rip+0x11@@ 76@@ 5], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x@@ e4, call_0xfffffffffffe9@@ 3c@@ c, mov_rdx_qword_ptr_[rax], xor_ecx_ecx, mov_esi_1, test_rbp_rbp, jne_0x2@@ a2, test_byte_ptr_[rdx@@ +rcx*@@ 2]_1, je_0x13, mov_rax_rcx, mov_rdi_rsi, sar_rax@@ _6, shl_rdi@@ _cl, or_qword_ptr_[r@@ bx@@ +rax*@@ 8]_rdi, inc_rcx, cmp_rcx@@ _0x100, jne_0xffffffffffffffdf, jmp_0xfffffffffffffb@@ e4, xor_eax_eax, test_byte_ptr_[rdx@@ +rax*@@ 2+1@@ ]_4, je_0x1b, movzx_ecx_byte_ptr_[r@@ bp+rax], mov_r14_rdi, mov_rsi_rcx, shr_rsi@@ _3, and_esi@@ _0x18, shl_r14@@ _cl, or_qword_ptr_[r@@ bx+r@@ si@@ ]_r14, inc_rax, cmp_rax@@ _0x100, jne_0xffffffffffffffd7, jmp_0xfffffffffffffbb@@ 2, xor_eax_eax, test_byte_ptr_[rdx@@ +rax*2+1]_0x20, je_0x1b, movzx_ecx_byte_ptr_[r@@ bp+rax], mov_r14_rdi, mov_rsi_rcx, shr_rsi@@ _3, and_esi@@ _0x18, shl_r14@@ _cl, or_qword_ptr_[r@@ bx+r@@ si@@ ]_r14, inc_rax, cmp_rax@@ _0x100, jne_0xffffffffffffffd7, jmp_0xfffffffffffffb@@ 78, xor_eax_eax, test_byte_ptr_[rdx@@ +rax*@@ 2+1]_8, je_0x1b, movzx_ecx_byte_ptr_[r@@ bp+rax], mov_r9_rdi, mov_rsi_rcx, shr_rsi@@ _3, and_esi@@ _0x18, shl@@ _r9@@ _cl, or_qword_ptr_[r@@ bx+r@@ si@@ ]_r9, inc_rax, cmp_rax@@ _0x100, jne_0xffffffffffffffd7, jmp_0xfffffffffffffb@@ 46, mov_ecx_6, lea_rdi_[rip+0x11@@ 66@@ f], mov_rsi_r12, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x76, call_0xfffffffffffe9@@ 2d@@ 4, mov_rsi_qword_ptr_[rax], xor_ecx_ecx, mov_edx_1, test_rbp_rbp, jne_0x2b, cmp_word_ptr_[r@@ si@@ +rcx*@@ 2]_0, jns@@ _0x13, mov_rax_rcx, mov_rdi_rdx, sar_rax@@ _6, shl_rdi@@ _cl, or_qword_ptr_[r@@ bx@@ +rax*@@ 8]_rdi, inc_rcx, cmp_rcx@@ _0x100, jne_0xffffffffffffffde, jmp_0xfffffffffffffa@@ ef, xor_eax_eax, mov_edi_1, cmp_word_ptr_[r@@ si@@ +rax*@@ 2]_0, jns@@ _0x1b, movzx_ecx_byte_ptr_[r@@ bp+rax], mov_r9_rdi, mov_rdx_rcx, shr_rdx@@ _3, and_edx@@ _0x18, shl@@ _r9@@ _cl, or_qword_ptr_[r@@ bx@@ +rdx]@@ _r9, inc_rax, cmp_rax@@ _0x100, jne_0xffffffffffffffd7, jmp_0xfffffffffffffa@@ b8, lea_rsi_[rip+0x1@@ 15@@ ec], mov_rdi_r12, call_0xfffffffffffe@@ 8f@@ 46, test_eax_eax, jne_0x74, call_0xfffffffffffe9@@ 24@@ d, mov_rsi_qword_ptr_[rax], xor_ecx_ecx, mov_edx_1, test_rbp_rbp, jne_0x2a, test_byte_ptr_[rsi@@ +rcx*@@ 2@@ ]_4, je_0x13, mov_rax_rcx, mov_rdi_rdx, sar_rax@@ _6, shl_rdi@@ _cl, or_qword_ptr_[r@@ bx@@ +rax*@@ 8]_rdi, inc_rcx, cmp_rcx@@ _0x100, jne_0xffffffffffffffdf, jmp_0xfffffffffffffa@@ 69, xor_eax_eax, mov_edi_1, test_byte_ptr_[rsi@@ +rax*2@@ ]_4, je_0x1b, movzx_ecx_byte_ptr_[r@@ bp+rax], mov_r14_rdi, mov_rdx_rcx, shr_rdx@@ _3, and_edx@@ _0x18, shl_r14@@ _cl, or_qword_ptr_[r@@ bx@@ +rdx]@@ _r14, inc_rax, cmp_rax@@ _0x100, jne_0xffffffffffffffd8, jmp_0xfffffffffffffa@@ 33, lea_rsi_[rip+0x1@@ 15@@ 6d], mov_rdi_r12, call_0xfffffffffffe8@@ ec@@ 1, test_eax_eax, jne_0x76, call_0xfffffffffffe9@@ 1c8, mov_rsi_qword_ptr_[rax], xor_ecx_ecx, mov_edx_1, test_rbp_rbp, jne_0x2b, test_byte_ptr_[rsi@@ +rcx*@@ 2+1]@@ _0x10, je_0x13, mov_rax_rcx, mov_rdi_rdx, sar_rax@@ _6, shl_rdi@@ _cl, or_qword_ptr_[r@@ bx@@ +rax*@@ 8]_rdi, inc_rcx, cmp_rcx@@ _0x100, jne_0xffffffffffffffde, jmp_0xfffffffffffff9e@@ 3, xor_eax_eax, mov_edi_1, test_byte_ptr_[rsi@@ +rax*@@ 2+1]@@ _0x10, je_0x1b, movzx_ecx_byte_ptr_[r@@ bp+rax], mov_r9_rdi, mov_rdx_rcx, shr_rdx@@ _3, and_edx@@ _0x18, shl@@ _r9@@ _cl, or_qword_ptr_[r@@ bx@@ +rdx]@@ _r9, inc_rax, cmp_rax@@ _0x100, jne_0xffffffffffffffd7, jmp_0xfffffffffffff9a@@ c, mov_eax_4, jmp_0xfffffffffffff9a@@ 4, xor_eax_eax, test_byte_ptr_[rdx@@ +rax*@@ 2+1]@@ _0x40, je_0x1b, movzx_ecx_byte_ptr_[r@@ bp+rax], mov_r9_rdi, mov_rsi_rcx, shr_rsi@@ _3, and_esi@@ _0x18, shl@@ _r9@@ _cl, or_qword_ptr_[r@@ bx+r@@ si@@ ]_r9, inc_rax, cmp_rax@@ _0x100, jne_0xffffffffffffffd7, jmp_0xfffffffffffff97@@ 0, xor_eax_eax, mov_edi_1, test_byte_ptr_[rdx@@ +rax*@@ 2]_1, je_0x1b, movzx_ecx_byte_ptr_[r@@ bp+rax], mov_r14_rdi, mov_rsi_rcx, shr_rsi@@ _3, and_esi@@ _0x18, shl_r14@@ _cl, or_qword_ptr_[r@@ bx+r@@ si@@ ]_r14, inc_rax, cmp_rax@@ _0x100, jne_0xffffffffffffffd8, jmp_0xfffffffffffff93@@ a, xor_edx_edx, test_byte_ptr_[rax+rdx*@@ 2+@@ 1]_1, je_0x1b, movzx_ecx_byte_ptr_[r@@ bp@@ +rdx], mov_r9_rdi, mov_rsi_rcx, shr_rsi@@ _3, and_esi@@ _0x18, shl@@ _r9@@ _cl, or_qword_ptr_[r@@ bx+r@@ si@@ ]_r9, inc_rdx, cmp_rdx@@ _0x100, jne_0xffffffffffffffd6, jmp_0xfffffffffffff90@@ 7
push_r15, push_r14, mov_r14_rdx, push_r13, mov_r13_rcx, push_r12, mov_r12d_r8d, push_rbp, push_rbx, mov_rbx_rdi, mov_edi_0x20, sub_rsp_0x58, mov_qword_ptr_[rsp]_rsi, mov_qword_ptr_[rsp+8]_r9, mov_esi_1, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x18]_0, call_0xfffffffffffe@@ 8d@@ 3a, test_rax_rax, je_0x1@@ aa, mov_esi_1, mov_edi@@ _0x50, mov_rbp_rax, call_0xfffffffffffe@@ 8d@@ 1f, mov_r15_rax, test_rax_rax, je_0x1@@ b4, sub_rsp_8, movzx_eax_byte_ptr_[r@@ ax+0x20], push_0, mov_edx_r12d, and_edx_1, mov_rdi_qword_ptr_[rsp+0x10], and_eax_0xfffffffe, or_eax_edx, lea_r8_[rsp+0x@@ 28], lea_rcx_[r@@ 15+0x@@ 48], lea_rdx_[r@@ 15+0x18], mov_r9_r14, mov_rsi_rbp, mov_byte_ptr_[r15+0x@@ 20@@ ]_al, call_0xfffffffffffff76@@ d, pop_rdx, pop_rcx, test_eax_eax, jne_0x1@@ 94, movsx_rcx@@ _byte_ptr_[r@@ 13], mov_esi_1, test_cl_cl, je_0x3c, test_rcx_rcx, lea_rax_[r@@ cx+0x@@ 3f], mov_rdx_rcx, cmovns@@ _rax@@ _rcx, sar_rdx@@ _0x3f, shr_rdx@@ _0x3a, add_rcx_rdx, and_ecx_0x3f, sub_rcx_rdx, inc@@ _r13, mov_rdx_rsi, shl_rdx_cl, movsx_rcx@@ _byte_ptr_[r@@ 13], sar_rax@@ _6, or_qword_ptr_[r@@ bp@@ +rax*@@ 8]_rdx, test_cl_cl, jne_0xffffffffffffffc8, test_r12b_r12b, je_0x15, mov_rax_rbp, lea_rdx_[r@@ bp+0x20], not@@ _qword_ptr_[r@@ ax], add_rax_8, cmp_rdx_rax, jne_0xfffffffffffffff6, cmp_dword_ptr_[rbx+0x@@ b@@ 4]_1, jle_0x@@ 1b, mov_rcx_qword_ptr_[rbx+0x@@ 78], xor_eax_eax, mov_rdx_qword_ptr_[r@@ cx+rax], and@@ _qword_ptr_[r@@ bp@@ +rax@@ ]_rdx, add_rax_8, cmp_rax@@ _0x20, jne_0xffffffffffffffef, lea_r13_[r@@ bx+0x@@ 70], lea_r14_[r@@ bx+0x@@ 80], lea_r8_[rsp+0x@@ 20], xor_ecx_ecx, xor_edx_edx, mov_rsi_r14, mov_rdi_r13, mov_byte_ptr_[rsp+0x@@ 28@@ ]_3, mov_qword_ptr_[rsp+0x20]@@ _rbp, mov_qword_ptr_[rsp]_r8, call_0xffffffffffffcb@@ 24, mov_r12_rax, test_rax_rax, je_0x81, cmp_dword_ptr_[rbx+0x@@ b@@ 4]_1, jle_0x@@ a0, or_byte_ptr_[rbx+0x@@ b0@@ ]_2, mov_r8_qword_ptr_[rsp], xor_ecx_ecx, xor_edx_edx, mov_rsi_r14, mov_rdi_r13, mov_byte_ptr_[rsp+0x@@ 28@@ ]_6, mov_qword_ptr_[rsp+0x20]@@ _r15, call_0xffffffffffffca@@ eb, mov_rcx_rax, test_rax_rax, je_0x48, mov_rdx_r12, lea_r8_[rsp+0x@@ 30], mov_rsi_r14, mov_rdi_r13, mov_byte_ptr_[rsp+0x@@ 38]@@ _0xa, call_0xffffffffffffca@@ cb, mov_r12_rax, mov_rax_qword_ptr_[rsp+0x48], xor_rax_qword_ptr_fs:[0x28], jne_0x9a, add_rsp_0x58, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_rbp, call_0xfffffffffffe8@@ 86@@ 5, mov_rdi_r15, call_0xffffffffffffb6@@ 1d, mov_rax_qword_ptr_[rsp+8], xor_r12d_r12d, mov_dword_ptr_[rax]_0xc, jmp_0xffffffffffffffb7, mov_rdi_r15, call_0xffffffffffffb@@ 5f@@ d, jmp_0xffffffffffffffa5, mov_rdi_rbp, call_0xfffffffffffe@@ 88@@ 2d, mov_rax_qword_ptr_[rsp+8], xor_r12d_r12d, mov_dword_ptr_[rax]_0xc, jmp_0xffffffffffffff87, mov_rdi_rbp, mov_dword_ptr_[rsp]_eax, call_0xfffffffffffe8@@ 80@@ a, mov_rdi_r15, call_0xffffffffffffb@@ 5c@@ 2, mov_rbx_qword_ptr_[rsp+8], mov_eax_dword_ptr_[rsp], xor_r12d_r12d, mov_dword_ptr_[rbx]_eax, jmp_0xffffffffffffff5d, call_0xfffffffffffe8@@ 9a@@ b
push_r15, mov_r15_rcx, push_r14, push_r13, push_r12, xor_r12d_r12d, push_rbp, push_rbx, sub_rsp_0x1@@ 68, mov_qword_ptr_[rsp+0x28]_rdi, mov_qword_ptr_[rsp+0x3@@ 0]_rsi, mov_qword_ptr_[rsp+0x38]_rdx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 58]_rax, xor_eax_eax, mov_rax_qword_ptr_[rdi], cmp_dword_ptr_[rax+0x@@ b@@ 4]_1, mov_qword_ptr_[rsp+0x10]_rax, jne_0x19, mov_rax_qword_ptr_[rdi+0x18], mov_r9_rax, shr@@ _r9@@ _0x16, mov_qword_ptr_[rsp+8]_rax, mov_r12d@@ _r9d, and_r12d@@ _1, mov_rax_qword_ptr_[rsp+0x30], xor_ebx_ebx, cmp_qword_ptr_[rax]_0, lea_rbp_[rsp+0x@@ 48], jg_0x4@@ 6, jmp_0x1@@ 92, cmp_ecx_3, je_0x3@@ 12, cmp_ecx@@ _6, je_0x1@@ a2, and_eax_0xfffffffd, cmp_al_5, je_0x3@@ 96, cmp_ecx_2, je_0x4@@ 10, mov_rax_qword_ptr_[rsp+0x30], inc_rbx, cmp_rbx_qword_ptr_[r@@ ax], jge_0x@@ 154, mov_rax_qword_ptr_[rsp+0x38], mov_rax_qword_ptr_[rax], mov_r14_qword_ptr_[r@@ ax+r@@ bx*8], mov_rax_qword_ptr_[rsp+0x10], mov_rdx_qword_ptr_[rax], mov_rax_r14, shl_rax_4, lea_rsi_[r@@ dx+rax], movzx_ecx_byte_ptr_[rsi@@ +8], mov_qword_ptr_[rsp+0x20]_rax, mov_eax_ecx, cmp_cl@@ _1, jne_0xffffffffffffff9c, movzx_edx_byte_ptr_[rsi], mov_byte_ptr_[r15@@ +rdx@@ ]_1, mov_qword_ptr_[rsp+8]_rdx, test_r12d_r12d, je_0x18, call_0xfffffffffffe@@ 8d@@ 28, mov_rax_qword_ptr_[rax], mov_rdx_qword_ptr_[rsp+8], movsxd_rax_dword_ptr_[r@@ ax+rdx*4], mov_byte_ptr_[r15@@ +rax@@ ]_1, mov_rax_qword_ptr_[rsp+0x28], test_byte_ptr_[rax+0x1@@ a@@ ]_0x40, je_0xffffffffffffff@@ 8f, mov_rax_qword_ptr_[rsp+0x10], cmp_dword_ptr_[rax+0x@@ b@@ 4]_1, jle_0xffffffffffffff@@ 81, mov_rdx_qword_ptr_[rax], mov_rcx_rax, mov_rax_qword_ptr_[rsp+0x20], lea_rsi_[rsp+0x@@ 51], movzx_eax_byte_ptr_[rdx+rax], mov_byte_ptr_[rsp+0x@@ 50@@ ]_al, lea_rax_[r@@ 14+1], cmp_rax_qword_ptr_[r@@ cx+0x10], jb@@ _0x2b, jmp_0x3@@ e0, movzx_edx_byte_ptr_[rdx], mov_rcx_qword_ptr_[rsp+0x10], mov_byte_ptr_[rsi@@ ]_dl, inc_rax, inc@@ _rsi, cmp_qword_ptr_[r@@ cx+0x1@@ 0]_rax, jbe_0x@@ 25, mov_rdx_qword_ptr_[rsp+0x10], mov_rdx_qword_ptr_[rdx], mov_rcx_rax, shl_rcx_4, add_rdx_rcx, mov_ecx_dword_ptr_[r@@ dx+8], and_ecx@@ _0x2@@ 000@@ ff, cmp_ecx@@ _0x20000@@ 1, je_0xffffffffffffffc9, lea_r13_[rsp+0x@@ 50], mov_rdx_rsi, sub_rdx@@ _r13, lea_r14_[rsp+0x@@ 44], mov_rcx_rbp, mov_rsi_r13, mov_rdi_r14, mov_qword_ptr_[rsp+8]_rdx, mov_qword_ptr_[rbp]_0, call_0xffffffffffffa0@@ 59, mov_rdx_qword_ptr_[rsp+8], cmp_rax_rdx, jne_0xfffffffffffffe@@ e2, mov_edi_dword_ptr_[rsp+0x@@ 44], call_0xfffffffffffe@@ 8b@@ 62, mov_esi_eax, mov_rdx_rbp, mov_rdi_r13, call_0xfffffffffffe8@@ 9f@@ 5, cmp_rax_-1, je_0xfffffffffffffe@@ c2, movzx_eax_byte_ptr_[rsp+0x@@ 50], inc_rbx, mov_byte_ptr_[r15@@ +rax@@ ]_1, mov_rax_qword_ptr_[rsp+0x30], cmp_rbx_qword_ptr_[r@@ ax], jl_0xffffffffffff@@ fe@@ b8, mov_rax_qword_ptr_[rsp+0x1@@ 58], xor_rax_qword_ptr_fs:[0x28], jne_0x3@@ 26, add_rsp_0x1@@ 68, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[rsp+0x10], mov_r14_qword_ptr_[r@@ si], cmp_dword_ptr_[rax+0x@@ b@@ 4]_1, jle_0x@@ 23, cmp_qword_ptr_[r14+0x@@ 48]_0, jne_0x10@@ c, test_byte_ptr_[r14+0x@@ 20]_1, jne_0x10@@ 1, cmp_qword_ptr_[r14+0x@@ 40]_0, jne_0x@@ f6, xor_ecx_ecx, cmp_qword_ptr_[r14+0x@@ 28]_0, lea_r13_[rsp+0x@@ 50], jg_0x1@@ 9, jmp_0xfffffffffffffe@@ 38, inc_rcx, cmp_rcx_qword_ptr_[r@@ 14+0x28], jge_0xffffffffffff@@ fe@@ 27, mov_qword_ptr_[rbp]_0, lea_rax_[rcx@@ *4], mov_qword_ptr_[rsp+0x18]_rax, mov_rax_qword_ptr_[r14], mov_rdx_rbp, mov_esi_dword_ptr_[r@@ ax@@ +rcx*4], mov_rdi_r13, mov_qword_ptr_[rsp+8]_rcx, call_0xfffffffffffe8@@ 925, cmp_rax_-1, mov_rcx_qword_ptr_[rsp+8], je_0x36, movzx_edx_byte_ptr_[rsp+0x@@ 50], mov_byte_ptr_[r15@@ +rdx@@ ]_1, mov_qword_ptr_[rsp+8]_rdx, test_r12d_r12d, je_0x22, mov_qword_ptr_[rsp+0x20]_rcx, call_0xfffffffffffe@@ 8b@@ 4c, mov_rax_qword_ptr_[rax], mov_rdx_qword_ptr_[rsp+8], mov_rcx_qword_ptr_[rsp+0x20], movsxd_rax_dword_ptr_[r@@ ax+rdx*4], mov_byte_ptr_[r15@@ +rax@@ ]_1, mov_rax_qword_ptr_[rsp+0x28], test_byte_ptr_[rax+0x1@@ a@@ ]_0x40, je_0xffffffffffffff@@ 80, mov_rax_qword_ptr_[rsp+0x10], cmp_dword_ptr_[rax+0x@@ b@@ 4]_1, jle_0xffffffffffffff@@ 6e, mov_rax_qword_ptr_[r14], mov_qword_ptr_[rsp+8]_rcx, mov_rcx_qword_ptr_[rsp+0x18], mov_edi_dword_ptr_[r@@ ax+rcx], call_0xfffffffffffe8a@@ 10, mov_esi_eax, mov_rdx_rbp, mov_rdi_r13, call_0xfffffffffffe@@ 88@@ a3, cmp_rax_-1, mov_rcx_qword_ptr_[rsp+8], je_0xffffffffffffff@@ 3d, movzx_eax_byte_ptr_[rsp+0x@@ 50], mov_byte_ptr_[r15@@ +rax@@ ]_1, jmp_0xffffffffffffff2d, mov_byte_ptr_[rsp+0x@@ 44]_0, lea_r14_[rsp+0x@@ 44], xor_edi_edi, mov_rcx_rbp, mov_edx_1, mov_rsi_r14, mov_qword_ptr_[rbp]_0, call_0xffffffffffff9e@@ 9b, cmp_rax@@ _-2, jne_0xc, movzx_eax_byte_ptr_[rsp+0x@@ 44], mov_byte_ptr_[r15@@ +rax@@ ]_1, inc@@ _byte_ptr_[rsp+0x@@ 44], jne_0xffffffffffffffd2, jmp_0xfffffffffffffd@@ 16, mov_qword_ptr_[rsp+0x18]_0, mov_rax_qword_ptr_[rsp+0x20], xor_r14d_r14d, mov_rax_qword_ptr_[r@@ dx+rax], mov_rdx_qword_ptr_[rsp+0x18], mov_rsi_qword_ptr_[r@@ ax+rdx], lea_r13@@ _[rdx@@ *8], bt@@ _rsi@@ _r14, jae_0x@@ 3b, mov_byte_ptr_[r@@ 15+r@@ 13@@ ]_1, lea_rax_[r@@ 15+r@@ 13], test_r12d_r12d, je_0x2d, lea_edi_[r@@ 13+0x@@ 80], cmp_edi@@ _0x1@@ 7f, ja_0x1@@ b, mov_qword_ptr_[rsp+8]_rsi, call_0xfffffffffffe8a@@ 38, mov_rax_qword_ptr_[rax], mov_rsi_qword_ptr_[rsp+8], movsxd_rax_dword_ptr_[r@@ ax+r@@ 13*4], add_rax_r15, mov_byte_ptr_[rax@@ ]_1, inc@@ _r14d, inc@@ _r13, cmp_r14d@@ _0x40, jne_0xffffffffffffffb7, add_qword_ptr_[rsp+0x1@@ 8]_8, mov_rax_qword_ptr_[rsp+0x18], cmp_rax@@ _0x20, je_0xfffffffffffffc@@ 8c, mov_rax_qword_ptr_[rsp+0x10], mov_rdx_qword_ptr_[rax], jmp_0xffffffffffffff76, movdqa_xmm0_xmmword_ptr_[r@@ ip+0x@@ 115@@ 1b], movups_xmmword_ptr_[r@@ 15@@ ]_xmm0, movups_xmmword_ptr_[r@@ 15+0x1@@ 0]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ 20]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ 30]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ 40]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ 50]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ 60]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ 70@@ ]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ 80]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ 90@@ ]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ a0@@ ]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ b0@@ ]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ c0@@ ]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ d0@@ ]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ e0@@ ]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ f0@@ ]_xmm0, cmp_ecx_2, jne_0xfffffffffffffd@@ 66, jmp_0x7@@ a, movdqa_xmm0_xmmword_ptr_[r@@ ip+0x@@ 114@@ 98], movups_xmmword_ptr_[r@@ 15@@ ]_xmm0, movups_xmmword_ptr_[r@@ 15+0x1@@ 0]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ 20]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ 30]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ 40]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ 50]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ 60]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ 70@@ ]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ 80]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ 90@@ ]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ a0@@ ]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ b0@@ ]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ c0@@ ]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ d0@@ ]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ e0@@ ]_xmm0, movups_xmmword_ptr_[r@@ 15+0x@@ f0@@ ]_xmm0, mov_rax_qword_ptr_[rsp+0x28], or_byte_ptr_[r@@ ax+0x@@ 38]_1, jmp_0xfffffffffffffc@@ dd, mov_edx_1, lea_r13_[rsp+0x@@ 50], jmp_0xfffffffffffffc@@ 65, call_0xfffffffffffe@@ 84@@ 6@@ 4
push_r13, shl_rdx_4, lea_r10_[r@@ di+rdx], push_r12, mov_r9_rcx, push_rbp, push_rbx, sub_rsp_8, movzx_r11d_byte_ptr_[r@@ 10+8], cmp@@ _r11b@@ _7, je_0xda, cmp_dword_ptr_[r@@ cx+0x@@ 90]_1, je_0x25, mov_rbx_rsi, mov_rdi_rcx, mov_rsi_r8, call_0xffffffffffffb@@ 86@@ a, mov_r12d_eax, cmp@@ _r11b@@ _5, je_0x26, cmp@@ _r11b@@ _6, jne_8, cmp_eax_1, jne_0x43, xor_r12d_r12d, add_rsp_8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret, cmp_eax_1, je_0xffffffffffffffe5, mov_rax_qword_ptr_[rbx], test_al_0x40, jne_0xd, mov_rdx_qword_ptr_[r@@ 9+8], cmp_byte_ptr_[r@@ dx+r@@ 8]@@ _0xa, je_0xffffffffffffffd3, test_al_0x80, je_0xffffffffffffffd2, mov_rax_qword_ptr_[r@@ 9+8], cmp_byte_ptr_[r@@ ax+r@@ 8]_0, je_0xffffffffffffff@@ c4, jmp_0xffffffffffffffc5, mov_r13_qword_ptr_[r@@ 10], mov_rsi_qword_ptr_[r13+0x@@ 40], mov_rdx_qword_ptr_[r@@ 13+0x28], test_rsi_rsi, jne_0xf, mov_rax_rdx, or_rax@@ _qword_ptr_[r@@ 13+0x@@ 48], je_0x1@@ 53, mov_rax_qword_ptr_[r@@ 9+0x10], mov_ebx_dword_ptr_[r@@ ax+r@@ 8*4], test_rdx_rdx, jle_0x@@ d8, mov_rcx_qword_ptr_[r13], xor_eax_eax, jmp_0x18, inc_rax, cmp_rax_rdx, je_0xba, cmp_ebx_dword_ptr_[r@@ cx+rax*4], jne_0xfffffffffffffff1, test_byte_ptr_[r13+0x@@ 20]_1, jne_0xffffffffffffff@@ 6a, jmp_0xffffffffffffff67, mov_rax_qword_ptr_[r@@ cx+8], movzx_edx_byte_ptr_[r@@ ax+r@@ 8], cmp_dl@@ _0x@@ c1, jbe_0xffffffffffffff@@ 4c, mov_rsi_qword_ptr_[r@@ 9+0x@@ 58], lea_rcx_[r@@ 8+1], cmp_rcx_rsi, jge_0xffffffffffffff@@ 3b, movzx_edi_byte_ptr_[r@@ ax+r@@ 8+1], cmp_dl@@ _0xdf, jbe_0x@@ 10@@ a, cmp_dl@@ _0x@@ ef, ja_0x@@ dd, cmp_dl@@ _0x@@ e0, jne_0xc, cmp_dil@@ _0x@@ 9f, jbe_0xffffffffffffff@@ 14, mov_edi_3, mov_r12d@@ _3, lea_rdx_[r@@ 8+r@@ di], cmp_rsi_rdx, jl_0xffffffffffff@@ fe@@ fc, lea_rdx_[rax@@ +rcx], add_rax_r8, add_rax_rdi, jmp_0x18, inc_rdx, cmp_rax_rdx, je_0xfffffffffffffe@@ dd, movzx_ebx_byte_ptr_[r@@ dx], lea_ecx_[r@@ bx-0x@@ 80], cmp_cl@@ _0x3f, jbe_0xffffffffffffff@@ eb, jmp_0xfffffffffffffec9, mov_rax_qword_ptr_[r13+0x@@ 48], test_rax_rax, jle_0x@@ 35, xor_ebp_ebp, jmp_0xe, inc_rbp, cmp_rbp@@ _qword_ptr_[r@@ 13+0x@@ 48], jge_0x@@ 21, mov_rax_qword_ptr_[r@@ 13+0x18], mov_edi_ebx, mov_rsi_qword_ptr_[rax+r@@ bp*8], call_0xfffffffffffe8@@ 2@@ 1d, test_eax_eax, je_0xffffffffffffffe6, jmp_0xffffffffffffff25, mov_rsi_qword_ptr_[r13+0x@@ 40], test_rsi_rsi, jle_0x@@ 2b, mov_rdx_qword_ptr_[r@@ 13+8], xor_eax_eax, cmp_ebx_dword_ptr_[r@@ dx+rax*4], jl@@ _0xf, mov_rcx_qword_ptr_[r@@ 13+0x10], cmp_ebx_dword_ptr_[r@@ cx+rax*4], jle_0xfffffffffffffe@@ f5, inc_rax, cmp_rax_rsi, jne_0xffffffffffffffe8, test_byte_ptr_[r13+0x@@ 20]_1, jne_0xfffffffffffffe@@ 54, jmp_0xfffffffffffffe@@ 4b, cmp_dl@@ _0xf7, ja_0x3@@ 9, cmp_dl@@ _0xf0, jne_0xc, cmp_dil@@ _0x8@@ f, jbe_0xfffffffffffffe@@ 38, mov_edi_4, mov_r12d@@ _4, jmp_0xffffffffffffff24, add_edi@@ _-0x80, mov_r12d_2, cmp_dil@@ _0x3f, jbe_0xfffffffffffffe@@ 18, jmp_0xfffffffffffffe@@ 0f, cmp_dl@@ _0xfb, ja_0x2@@ 1, cmp_dl@@ _0xf8, jne_0xc, cmp_dil@@ _0x8@@ 7, jbe_0xfffffffffffffd@@ fc, mov_edi_5, mov_r12d@@ _5, jmp_0xfffffffffffffee8, cmp_dl@@ _0xfd, ja_0xfffffffffffffd@@ e3, cmp_dl@@ _0xfc, jne_0xc, cmp_dil@@ _0x8@@ 3, jbe_0xfffffffffffff@@ dd@@ 4, mov_edi_6, mov_r12d@@ _6, jmp_0xfffffffffffffec@@ 0
push_r15, push_r14, push_r13, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rcx, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x6@@ 0]_rsi, mov_qword_ptr_[rsp+0x7@@ 8]_r8, mov_qword_ptr_[rsp+0x48]_r9, mov_rdx_qword_ptr_[rdi+0x@@ 98], mov_r13_qword_ptr_[r@@ si+8], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xc8]_rax, xor_eax_eax, mov_rax_rbp, shl_rax_4, add_rax_qword_ptr_[r@@ dx], mov_rax_qword_ptr_[rax], mov_qword_ptr_[rsp+0x40]_rdx, mov_qword_ptr_[rsp+0x50]_rax, movsxd_rax_dword_ptr_[r@@ di+0xe0], mov_dword_ptr_[rsp+0x8@@ 8]_0, add_rax@@ _r9, cmp_rax_r13, jge_0x@@ 6@@ 3a, mov_rcx_qword_ptr_[r12+0x@@ b8], mov_rax_qword_ptr_[rsp+0x60], mov_qword_ptr_[rsp+0x6@@ 8]_rcx, mov_r15_qword_ptr_[rax], mov_rcx_qword_ptr_[r12+0x@@ 48], mov_r13_qword_ptr_[r@@ ax+0x10], mov_qword_ptr_[rsp+0x7@@ 0]_rcx, mov_qword_ptr_[r12+0x@@ b@@ 8]_r13, mov_edx_dword_ptr_[r12+0x@@ a0], test_r15_r15, je_0x5@@ 6e, mov_qword_ptr_[r12+0x@@ 4@@ 8]_r15, lea_rsi_[r@@ 15-1], mov_rdi_r12, call_0xffffffffffffd@@ 27@@ c, mov_dword_ptr_[rsp+8]_eax, cmp_r15@@ _rbx, je_0x5@@ 65, mov_r14_qword_ptr_[r@@ 13+r@@ 15*8], test_r14_r14, je_0xd, test_byte_ptr_[r14+0x@@ 6@@ 8]@@ _0x40, jne_0x3@@ eb, mov_qword_ptr_[rsp+0xa0]_0, pxor_xmm0_xmm0, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm0, cmp_r15@@ _qword_ptr_[rsp+0x48], jge_0x@@ 33@@ 5, lea_r13_[r@@ 15+1], lea_rax_[rsp+0x90], mov_qword_ptr_[rsp+0x30]_0, mov_qword_ptr_[rsp+0x18]_rax, mov_qword_ptr_[rsp+0x10]@@ _r13, mov_rax_qword_ptr_[rsp+0x10], lea_r15@@ _[rax-1], movsxd_rax_dword_ptr_[r@@ 12+0x@@ e0], cmp_qword_ptr_[rsp+0x@@ 30]_rax, jg_0x2@@ fa, mov_rbx_qword_ptr_[rsp+0x10], mov_qword_ptr_[rsp+0x98]_0, lea_rax_[r@@ bx*8], mov_qword_ptr_[rsp+0x38]_rax, mov_rax_qword_ptr_[r12+0x@@ b8], mov_rsi_qword_ptr_[rax+r@@ bx*8], test_rsi_rsi, je_0x4@@ 0a, mov_rdi_qword_ptr_[rsp+0x18], add_rsi_8, call_0xffffffffffffb@@ 93@@ b, mov_dword_ptr_[rsp+0x8@@ 8]_eax, test_eax_eax, jne_0x4@@ 1d, test_r14_r14, je_0x1@@ d4, lea_rax_[rsp+0xb0], pxor_xmm0_xmm0, cmp_qword_ptr_[r14+0x@@ 28]_0, mov_dword_ptr_[rsp+0x@@ 8c]_0, mov_qword_ptr_[rsp+0x28]_rax, mov_qword_ptr_[rsp+0xc0]_0, mov_rbp_qword_ptr_[r@@ 12+0x@@ 98], movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm0, jle_0x@@ 5@@ 99, mov_qword_ptr_[rsp+8]_0, mov_rbx_r14, jmp_0x5@@ 6, mov_rdx_r15, mov_rdi_r12, call_0xffffffffffffd@@ 23@@ 2, test_al_al, je_0x2e, lea_rax_[r@@ 13*8], mov_qword_ptr_[rsp+0x20]_rax, mov_rax_qword_ptr_[rbp+0x18], mov_rcx_qword_ptr_[rsp+0x20], mov_rdi_qword_ptr_[rsp+0x18], mov_rsi_qword_ptr_[r@@ ax+rcx], call_0xffffffffffff9e@@ 8a, test_al_al, je_0x3@@ 6b, inc@@ _qword_ptr_[rsp+8], mov_rax_qword_ptr_[rsp+8], cmp_rax_qword_ptr_[r@@ bx+0x28], jge_0x@@ 38@@ f, mov_rax_qword_ptr_[rbx+0x30], mov_rcx_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[rbp], mov_r13_qword_ptr_[r@@ ax@@ +rcx*8], mov_r14_r13, shl_r14@@ _4, lea_rsi_[r@@ di+r@@ 14], test_byte_ptr_[rsi+0x@@ a@@ ]_0x10, je_0xffffffffffffff@@ 91, lea_rsi_[rbp+0x@@ d8], mov_r8_r15, mov_rcx_r12, mov_rdx_r13, call_0xfffffffffffffa@@ e7, cmp_eax_1, jle_0x@@ 2e@@ 7, cdqe, lea_r14@@ _[rax+r@@ 15], mov_rax_qword_ptr_[r12+0x@@ b8], lea_rdx_[r@@ 13*8], mov_qword_ptr_[rsp+0x20]_rdx, mov_rsi_qword_ptr_[rax+r@@ 14*8], mov_rdx_qword_ptr_[rbp+0x18], mov_r8_qword_ptr_[r@@ dx+r@@ 13*8], mov_qword_ptr_[rsp+0xb8]_0, lea_r13_[r@@ 14*8], test_rsi_rsi, je_0x25, mov_rdi_qword_ptr_[rsp+0x28], add_rsi_8, mov_qword_ptr_[rsp+0x5@@ 8]_r8, call_0xffffffffffffb@@ 7e@@ b, test_eax_eax, mov_dword_ptr_[rsp+0x@@ 8c]_eax, mov_r8@@ _qword_ptr_[rsp+0x58], jne_0x60, mov_rdi_qword_ptr_[rsp+0x28], mov_rsi_r8, call_0xffffffffffff9d@@ be, test_al_al, je_0x2@@ 9f, mov_rdx_qword_ptr_[rsp+0x28], lea_rdi_[rsp+0x@@ 8c], mov_rsi_rbp, add_r13@@ _qword_ptr_[r@@ 12+0x@@ b8], call_0xffffffffffffc8@@ 99, mov_qword_ptr_[r13]_rax, mov_rax_qword_ptr_[r12+0x@@ b8], cmp_qword_ptr_[r@@ ax+r@@ 14*@@ 8]_0, jne_0xfffffffffffffe@@ e7, mov_edx_dword_ptr_[rsp+0x@@ 8c], test_edx_edx, je_0xfffffffffffffe@@ d8, mov_rdi_qword_ptr_[rsp+0xc0], call_0xfffffffffffe@@ 7c@@ a0, mov_eax_dword_ptr_[rsp+0x@@ 8c], mov_dword_ptr_[rsp+0x8@@ 8]_eax, test_eax_eax, jne_0x2@@ 4b, cmp_qword_ptr_[rsp+0x@@ 98]_0, mov_rbx_qword_ptr_[rsp+0x10], je_0x5a, mov_ecx_dword_ptr_[r@@ sp+0x110], mov_rdx_qword_ptr_[rsp+0x50], mov_rsi_qword_ptr_[rsp+0x18], mov_rdi_qword_ptr_[rsp+0x40], call_0xffffffffffffbb@@ 8a, mov_dword_ptr_[rsp+0x8@@ 8]_eax, test_eax_eax, jne_0x20@@ c, mov_r8d_dword_ptr_[r@@ sp+0x110], mov_rcx_qword_ptr_[rsp+0x50], mov_rdx_qword_ptr_[rsp+0x10], mov_rsi_qword_ptr_[rsp+0x18], mov_rdi_r12, call_0xffffffffffffca@@ bc, mov_dword_ptr_[rsp+0x8@@ 8]_eax, test_eax_eax, jne_0x1@@ de, mov_edx_dword_ptr_[r12+0x@@ a0], mov_rsi_r15, mov_rdi_r12, call_0xffffffffffffcf@@ 5a, mov_rdx_qword_ptr_[rsp+0x18], mov_rsi_qword_ptr_[rsp+0x40], mov_ecx_eax, lea_rdi_[rsp+0x@@ 88], call_0xffffffffffffc@@ 4b@@ 1, mov_r14_rax, test_rax_rax, je_0x1@@ e6, mov_rax_qword_ptr_[r12+0x@@ b8], mov_rcx_qword_ptr_[rsp+0x38], mov_qword_ptr_[rsp+0x30]_0, mov_qword_ptr_[rax@@ +rcx@@ ]_r14, inc@@ _qword_ptr_[rsp+0x10], cmp_rbx@@ _qword_ptr_[rsp+0x48], jl_0xffffffffffff@@ fc@@ f9, mov_r15_rbx, mov_rdi_qword_ptr_[rsp+0xa0], call_0xfffffffffffe@@ 7b@@ ab, mov_rax_qword_ptr_[r12+0x@@ b8], mov_rbx_qword_ptr_[rsp+0x48], mov_rax_qword_ptr_[rax+r@@ bx*8], test_rax_rax, je_0x2@@ ea, mov_rbx_qword_ptr_[rsp+0x@@ 60], mov_rdx_qword_ptr_[rsp+0x78], mov_qword_ptr_[rbx@@ ]_r15, mov_rbx_qword_ptr_[rsp+0x@@ 68], lea_rsi_[r@@ ax+0x18], mov_qword_ptr_[r12+0x@@ b@@ 8]_rbx, mov_rbx_qword_ptr_[rsp+0x@@ 70], mov_qword_ptr_[r12+0x@@ 4@@ 8]_rbx, mov_rdi_qword_ptr_[rax+0x10], call_0xffffffffffffb@@ 1b0, test_rax_rax, sete_al, movzx_eax_al, mov_rbx_qword_ptr_[rsp+0x@@ c8], xor_rbx_qword_ptr_fs:[0x28], jne_0x2@@ ce, add_rsp_0xd8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_r13_[rsp+0x@@ 90], lea_rsi_[r@@ 14+8], mov_rdi_r13, call_0xffffffffffffc@@ 1d@@ 1, mov_dword_ptr_[rsp+0x8@@ 8]_eax, test_eax_eax, jne_0xffffffffffffffb3, test_byte_ptr_[r14+0x@@ 6@@ 8]@@ _0x40, je_0xfffffffffffffc@@ 0f, cmp_qword_ptr_[rsp+0x@@ 98]_0, je_0x2c, mov_r8d_dword_ptr_[r@@ sp+0x110], mov_rcx_qword_ptr_[rsp+0x50], mov_rdx_r15, mov_rsi_r13, mov_rdi_r12, call_0xffffffffffffc@@ 96@@ 5, mov_dword_ptr_[rsp+0x8@@ 8]_eax, test_eax_eax, jne_0x@@ 87, mov_ecx_dword_ptr_[rsp+8], mov_rsi_qword_ptr_[rsp+0x40], lea_rdi_[rsp+0x@@ 88], mov_rdx_r13, call_0xffffffffffffc@@ 36@@ d, mov_r14_rax, test_rax_rax, je_0x1@@ d2, mov_rax_qword_ptr_[r12+0x@@ b8], mov_qword_ptr_[rax+r@@ 15*@@ 8]_r14, jmp_0xfffffffffffffb@@ a3, test_eax_eax, jne_0xfffffffffffffc@@ 9d, mov_rsi_qword_ptr_[rbp], add_rsi@@ _r14, jmp_0xfffffffffffffc@@ 81, test_r14_r14, jne_0xfffffffffffffc@@ 1f, mov_rbx_qword_ptr_[rsp+0x10], jmp_0xfffffffffffffe@@ 4a, mov_rdi_qword_ptr_[rsp+0xc0], call_0xfffffffffffe@@ 7a@@ 50, mov_dword_ptr_[rsp+0x8@@ 8]_0xc, mov_rdi_qword_ptr_[rsp+0xa0], call_0xfffffffffffe@@ 7a@@ 38, mov_eax_dword_ptr_[rsp+0x88], jmp_0xfffffffffffffedc, mov_rdi_qword_ptr_[rsp+0xc0], call_0xfffffffffffe@@ 7a@@ 18, mov_dword_ptr_[rsp+0x8@@ 8]_0, jmp_0xfffffffffffffd@@ 88, mov_eax_dword_ptr_[rsp+0x88], test_eax_eax, jne_0xffffffffffffffb7, mov_rax_qword_ptr_[r12+0x@@ b8], mov_rcx_qword_ptr_[rsp+0x38], inc@@ _qword_ptr_[rsp+0x30], mov_qword_ptr_[rax@@ +rcx]_0, jmp_0xfffffffffffffe@@ 15, mov_qword_ptr_[r12+0x@@ 4@@ 8]_rbx, lea_rsi_[r@@ bx-1], mov_rdi_r12, call_0xffffffffffffcd@@ 14, mov_dword_ptr_[rsp+8]_eax, mov_edi_8, mov_qword_ptr_[rsp+0x@@ 90]_1, mov_qword_ptr_[rsp+0x@@ 98]_1, call_0xfffffffffffe@@ 7d@@ 7e, mov_qword_ptr_[rsp+0xa0]_rax, test_rax_rax, je_0xd6, mov_qword_ptr_[rax]_rbp, mov_ecx_dword_ptr_[r@@ sp+0x110], mov_rdx_qword_ptr_[rsp+0x50], mov_rdi_qword_ptr_[rsp+0x40], lea_r13_[rsp+0x@@ 90], mov_rsi_r13, mov_dword_ptr_[rsp+0x8@@ 8]_0, call_0xffffffffffffb@@ 88@@ e, mov_dword_ptr_[rsp+0x8@@ 8]_eax, mov_r15_rbx, test_eax_eax, je_0xfffffffffffffe@@ 57, jmp_0xffffffffffffff07, lea_r15@@ _[rax+1], movabs_rax_0x7fffffffffffffff, sub_rax_r13, cmp_rax_r15, jl@@ _0x74, lea_r14_[r@@ 13+r@@ 15], movabs_rax_0x1@@ fffffffffffffff, cmp_r14_rax, ja@@ _0x60, mov_rax_qword_ptr_[rsp+0x60], lea_rsi_[r@@ 14*8], mov_rdi_qword_ptr_[rax+0x10], call_0xfffffffffffe@@ 7d@@ 65, test_rax_rax, je_0x45, mov_rcx_qword_ptr_[rsp+0x60], lea_rdx_[r@@ 15*8], mov_qword_ptr_[rcx+0x1@@ 0]_rax, mov_qword_ptr_[rcx@@ +@@ 8]_r14, lea_rdi_[rax+r@@ 13*8], xor_esi_esi, call_0xfffffffffffe@@ 7b@@ 50, jmp_0xfffffffffffff96@@ 7, mov_ecx_dword_ptr_[rsp+0x@@ 88], test_ecx_ecx, je_0xfffffffffffffe@@ 2b, jmp_0xfffffffffffffe@@ 81, mov_eax_0xc, jmp_0xfffffffffffffd@@ 63, mov_rax_qword_ptr_[rsp+0x60], mov_qword_ptr_[rax]@@ _r15, mov_rax_qword_ptr_[rsp+0x68], mov_qword_ptr_[r12+0x@@ b8]_rax, mov_rax_qword_ptr_[rsp+0x70], mov_qword_ptr_[r12+0x@@ 48]_rax, mov_eax_1, jmp_0xfffffffffffffd@@ 34, xor_edi_edi, jmp_0xfffffffffffffe@@ 5e, call_0xfffffffffffe@@ 7a@@ 3@@ 1
push_rbp, mov_rbp_rsp, push_r15, push_r14, push_r13, mov_r13_rcx, push_r12, push_rbx, mov_rbx_rsi, sub_rsp_0xa8, mov_qword_ptr_[rbp-0x9@@ 0]_rdx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x38]_rax, xor_eax_eax, mov_rax_qword_ptr_[rdi], mov_qword_ptr_[rbp-0x5@@ 0]_0, mov_qword_ptr_[rbp-0x88]_rax, mov_qword_ptr_[rbp-0x48@@ ]_2, mov_qword_ptr_[rbp-0x4@@ 0]_0, test_r8b_r8b, je_0x7@@ fb, mov_edi_0x6@@ 0, call_0xfffffffffffe@@ 7b@@ e0, mov_qword_ptr_[rbp-0x40]_rax, test_rax_rax, je_0x5@@ 6c, lea_r14_[r@@ bp-0x@@ 50], mov_rax_qword_ptr_[rbp-0x88], pxor_xmm0_xmm0, mov_r12_qword_ptr_[r@@ ax+0x@@ 90], mov_rax_qword_ptr_[rbp-0x90], mov_qword_ptr_[rbp-0x6@@ 0]_0, shl_rax_4, mov_qword_ptr_[rbp-0xb0]_rax, movaps_xmmword_ptr_[rbp-0x@@ 70@@ ]_xmm0, cmp_rax@@ _0x@@ fb@@ f, ja_0x7@@ 7c, add_rax_0x10, mov_rdx_rax, and_rdx@@ _0xffffffffffff@@ f000, mov_rcx_rsp, sub_rcx_rdx, mov_rdx_rcx, cmp_rsp@@ _rdx, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rdx, jne_0xffffffffffffffed, and_eax@@ _0xfff, sub_rsp_rax, test_rax_rax, jne_0x@@ 77@@ b, lea_rax_[rsp+0x@@ f], and_rax_0xfffffffffffffff0, mov_qword_ptr_[rbp-0xb8]_rax, mov_byte_ptr_[rbp-0x@@ b@@ 9]_0, mov_rdx_qword_ptr_[rbp-0x@@ b0], mov_rdi_qword_ptr_[rbp-0x@@ b8], mov_rsi_r13, call_0xfffffffffffe@@ 7a@@ b4, mov_rcx_qword_ptr_[r13], lea_rax_[rbp-0x@@ 70], mov_qword_ptr_[rbp-0x7@@ 8]_rcx, mov_qword_ptr_[rbp-0xa8]_rax, jmp_0x@@ ea, cmp_edx@@ _9, je_0x2@@ 6d, cmp_rax_rcx, jne_0xf, cmp_qword_ptr_[rbx+0x@@ b@@ 0]_r12, je_0x4@@ c3, mov_r10_qword_ptr_[r@@ bx+0x98], mov_rdi_qword_ptr_[r@@ 10], lea_rsi_[r@@ di+r@@ 9], movzx_eax_byte_ptr_[r@@ si+8], test_al_8, jne_0x1@@ 11, test_byte_ptr_[rsi+0x@@ a@@ ]_0x10, jne_0x2@@ b7, cmp_al_4, je_0x2@@ ff, mov_rcx_qword_ptr_[rbp-0x@@ 78], mov_rdx_rcx, mov_rdi_rbx, mov_qword_ptr_[rbp-0xa@@ 0]_r10, mov_qword_ptr_[rbp-0x9@@ 8]_rcx, call_0xffffffffffffc@@ b0@@ 1, test_al_al, mov_rcx_qword_ptr_[rbp-0x@@ 98], mov_r10_qword_ptr_[rbp-0x@@ a0], je_0x1@@ 86, mov_rax_qword_ptr_[r@@ 10@@ +0x18], mov_r12_qword_ptr_[r@@ ax+r@@ 15*8], lea_rax_[r@@ cx+1], mov_qword_ptr_[rbp-0x78]_rax, test_r14_r14, je_0x3c, cmp_rax_qword_ptr_[r@@ bx+0x@@ a8], jg_0x1@@ 6d, mov_rdx_qword_ptr_[rbx+0x@@ b8], mov_rax_qword_ptr_[r@@ dx+rax*8], test_rax_rax, je_0x1@@ 59, mov_rdi_qword_ptr_[rax+0x10], lea_rsi_[r@@ ax+0x18], mov_rdx_r12, call_0xffffffffffffa@@ cb@@ 5, test_rax_rax, je_0x1@@ 40, mov_qword_ptr_[rbp-0x@@ 68]_0, test_r12_r12, js_0x1@@ 1c, mov_rcx_qword_ptr_[rbp-0x@@ 78], mov_rax_qword_ptr_[r13+8], cmp_rax_rcx, jl_0x1@@ 5b, mov_rdi_qword_ptr_[rbp-0x@@ 88], mov_r9_r12, mov_rsi_qword_ptr_[rdi], shl@@ _r9@@ _4, add_rsi@@ _r9, movzx_edx_byte_ptr_[r@@ si+8], mov_r15_r12, cmp_edx@@ _8, jne_0xfffffffffffffe@@ f7, mov_rdx_qword_ptr_[rsi], inc_rdx, cmp_qword_ptr_[rbp-0x@@ 90]_rdx, jle_0xfffffffffffffe@@ ed, shl_rdx_4, add_rdx@@ _r13, mov_qword_ptr_[rdx+@@ 8]_-1, mov_qword_ptr_[rdx]_rcx, mov_rax_qword_ptr_[r13+8], jmp_0xfffffffffffffe@@ d1, mov_rax_qword_ptr_[rbx+0x@@ b8], mov_rdx_qword_ptr_[rbp-0x78], mov_rdi_qword_ptr_[rbp-0x@@ a8], mov_r9_qword_ptr_[r@@ ax+rdx*8], mov_rax_qword_ptr_[r@@ 10+0x@@ 28], lea_rdx_[r@@ 12+r@@ 12@@ *2], mov_rsi_r12, mov_qword_ptr_[rbp-0x9@@ 8]_r9, lea_r15@@ _[rax@@ +rdx*8], call_0xffffffffffff96@@ 74, test_al_al, mov_r9_qword_ptr_[rbp-0x@@ 98], je_0x4@@ b6, mov_r10_qword_ptr_[r@@ 15+8], test_r10_r10, jle_0x@@ 73, mov_rax_qword_ptr_[r15+0x10], mov_r11_qword_ptr_[r@@ 9+0x10], add_r9@@ _0x18, mov_qword_ptr_[rbp-0x9@@ 8]_rbx, mov_r12@@ _-1, mov_rbx@@ _r10, xor_r8d_r8d, mov_r10@@ _r9, mov_r9_rax, mov_r15_qword_ptr_[r@@ 9+r@@ 8@@ *8], mov_rsi_r10, mov_rdx_r15, mov_rdi_r11, call_0xffffffffffffa@@ bb@@ 3, test_rax_rax, je_0xf, cmp_r12@@ _-1, jne_0x20@@ 5, mov_r12_r15, inc@@ _r8, cmp_r8@@ _rbx, jne_0xffffffffffffffd6, mov_rbx_qword_ptr_[rbp-0x@@ 98], test_r12_r12, jns_0xfffffffffffffe@@ f4, cmp_r12@@ _-2, je_0x4@@ 3c, test_r14_r14, je_0x5@@ 75, mov_rcx_qword_ptr_[rbp-0x@@ 90], mov_r9_qword_ptr_[rbp-0x@@ a8], lea_rdx_[rbp-0x@@ 78], lea_rsi_[r@@ 14+0x10], mov_r8_r13, mov_rdi_r14, call_0xffffffffffffe@@ 1e@@ 1, mov_r12_rax, mov_rcx_qword_ptr_[rbp-0x@@ 78], mov_rax_qword_ptr_[r13+8], cmp_rax_rcx, jge_0xffffffffffff@@ fe@@ b9, mov_rdi_qword_ptr_[rbp-0x@@ 60], call_0xfffffffffffe7@@ 4d@@ c, cmp_byte_ptr_[rbp-0x@@ b@@ 9]_0, jne_0x@@ 4c8, test_r14_r14, je_0xa, mov_rdi_r14, call_0xffffffffffffe@@ 15@@ 2, xor_eax_eax, jmp_0x2@@ 38, mov_rdi_qword_ptr_[rsi], lea_rdx_[r@@ di+1], cmp_qword_ptr_[rbp-0x@@ 90]_rdx, jle_0xfffffffffffffd@@ 8b, shl_rdx_4, lea_rax_[r@@ 13@@ +rdx], cmp_qword_ptr_[rax]@@ _rcx, jl@@ _0x3@@ d0, test_byte_ptr_[rsi+0x@@ a@@ ]_8, je_0x2@@ e6, mov_rsi_qword_ptr_[rbp-0x@@ b8], cmp_qword_ptr_[rsi@@ +rdx@@ ]_-1, je_0x2@@ d4, mov_rdx_qword_ptr_[rbp-0x@@ b0], mov_rdi_r13, mov_qword_ptr_[rbp-0xa@@ 0]_rcx, mov_qword_ptr_[rbp-0x9@@ 8]_r9, call_0xfffffffffffe7@@ 7c@@ 6, mov_rax_qword_ptr_[r13+8], mov_r9_qword_ptr_[rbp-0x@@ 98], mov_rcx_qword_ptr_[rbp-0x@@ a0], jmp_0xfffffffffffffd@@ 28, mov_r8_qword_ptr_[rbp-0x@@ 78], lea_rsi_[r@@ 10+0x@@ d8], mov_rdx_r12, mov_rcx_rbx, mov_qword_ptr_[rbp-0x9@@ 8]_r10, mov_qword_ptr_[rbp-0xa@@ 0]_r9, call_0xfffffffffffff@@ 18@@ 1, movsxd_rdx_eax, test_rdx_rdx, mov_r10_qword_ptr_[rbp-0x@@ 98], jne_0x1@@ a8, mov_r9_qword_ptr_[rbp-0x@@ a0], mov_rsi_qword_ptr_[r@@ 10], mov_rcx_qword_ptr_[rbp-0x@@ 78], add_rsi@@ _r9, jmp_0xfffffffffffffd@@ 13, mov_rax_qword_ptr_[rsi], inc_rax, shl_rax_4, add_rax_r13, mov_rcx_qword_ptr_[rax+8], mov_rdi_qword_ptr_[rax], mov_rdx_rcx, sub_rdx_rdi, test_r14_r14, je_0x1@@ 63, cmp_rdi@@ _-1, je_0xfffffffffffffe@@ 9c, cmp_rcx_-1, je_0xfffffffffffffe@@ 92, test_rdx_rdx, je_0x2@@ 16, mov_rax_qword_ptr_[rbx+8], mov_r15_qword_ptr_[rbp-0x@@ 78], add_rdi_rax, lea_rsi@@ _[rax+r@@ 15], mov_qword_ptr_[rbp-0xa@@ 0]_r10, mov_qword_ptr_[rbp-0x9@@ 8]_rdx, call_0xfffffffffffe7@@ 66@@ 3, test_eax_eax, mov_rdx_qword_ptr_[rbp-0x98], mov_r10_qword_ptr_[rbp-0x@@ a0], jne_0xfffffffffffffe@@ 51, mov_rax_qword_ptr_[r@@ 10@@ +0x18], mov_r12_qword_ptr_[r@@ ax+r@@ 12*8], lea_rax_[r@@ 15@@ +rdx], jmp_0xfffffffffffffc@@ c2, mov_rdi_qword_ptr_[rbp-0x@@ 68], lea_rsi_[rbp-0x@@ 60], mov_rdx_r12, mov_rbx_qword_ptr_[rbp-0x@@ 98], call_0xffffffffffffa@@ 98@@ e, test_rax_rax, jne_0x2@@ 3e, test_r14_r14, je_0xfffffffffffffc@@ de, mov_rcx_qword_ptr_[r@@ 14], mov_rdx_qword_ptr_[rbp-0x78], lea_rax_[r@@ cx+1], mov_qword_ptr_[r14]_rax, cmp_rax_qword_ptr_[r@@ 14+8], je_0x2@@ 95, mov_rax_qword_ptr_[r14+0x10], lea_rcx_[rcx@@ +rcx*2], shl_rcx_4, add_rcx_rax, mov_qword_ptr_[rcx@@ +@@ 8]_r15, mov_qword_ptr_[rcx@@ ]_rdx, mov_r15_qword_ptr_[rbp-0x@@ b0], mov_qword_ptr_[rbp-0x9@@ 8]_rcx, mov_rdi_r15, call_0xfffffffffffe7@@ 6c8, mov_rcx_qword_ptr_[rbp-0x@@ 98], mov_rdi_rax, mov_qword_ptr_[rcx+0x1@@ 0]_rax, test_rax_rax, je_0x2c, mov_rsi_r13, mov_rdx_r15, call_0xfffffffffffe@@ 76@@ 3a, mov_rcx_qword_ptr_[rbp-0x@@ 98], mov_rsi_qword_ptr_[rbp-0x@@ a8], lea_rdi_[r@@ cx+0x18], call_0xffffffffffffb@@ 97@@ 3, test_eax_eax, je_0xfffffffffffffc@@ 5d, mov_rdi_qword_ptr_[rbp-0x@@ 60], call_0xfffffffffffe7@@ 2a@@ 2, cmp_byte_ptr_[rbp-0x@@ b@@ 9]_0, jne_0x2@@ ae, mov_rdi_r14, call_0xffffffffffffdf@@ 1d, mov_eax_0xc, mov_rbx_qword_ptr_[rbp-0x@@ 38], xor_rbx_qword_ptr_fs:[0x28], jne_0x3@@ 00, lea_rsp_[rbp-0x28], pop_rbx, pop_r12, pop_r13, pop_r14, pop_r15, pop_rbp, ret, test_rdx_rdx, je_0xcd, mov_r15_qword_ptr_[rbp-0x@@ 78], jmp_0xfffffffffffffeeb, test_r14_r14, je_0x2@@ 6e, mov_rcx_qword_ptr_[rbp-0x@@ 90], test_rcx_rcx, je_0x26, mov_rax_r13, xor_edx_edx, cmp_qword_ptr_[rax]_0, js@@ _9, cmp_qword_ptr_[rax+@@ 8]_-1, je_0x3d, inc_rdx, add_rax_0x10, cmp_rcx_rdx, jne_0xffffffffffffffe9, mov_rdi_qword_ptr_[rbp-0x@@ 60], call_0xfffffffffffe7@@ 20@@ b, cmp_byte_ptr_[rbp-0x@@ b@@ 9]_0, je_0xfffffffffffffd@@ 3a, mov_rdi_qword_ptr_[rbp-0x@@ b8], call_0xfffffffffffe7@@ 1f@@ 2, jmp_0xfffffffffffffd@@ 28, cmp_qword_ptr_[rbp-0x@@ 90]_rdx, je_0xffffffffffffff@@ ca, mov_r9_qword_ptr_[rbp-0x@@ a8], mov_rcx_qword_ptr_[rbp-0x@@ 90], lea_rdx_[rbp-0x@@ 78], lea_rsi_[r@@ 14+0x10], mov_r8_r13, mov_rdi_r14, call_0xffffffffffffde@@ 9b, mov_r9_rax, mov_r12_rax, mov_r15_rax, shl@@ _r9@@ _4, jmp_0xfffffffffffffaa@@ 4, mov_qword_ptr_[rax+8]_rcx, mov_rax_qword_ptr_[r13+8], jmp_0xfffffffffffffa@@ 81, mov_rdi_qword_ptr_[rbp-0x@@ a8], mov_rsi_r12, mov_qword_ptr_[rbp-0x9@@ 8]_r10, mov_qword_ptr_[rbp-0xa@@ 0]_r9, call_0xffffffffffff9@@ 238, test_al_al, je_0x81, mov_r10_qword_ptr_[rbp-0x@@ 98], lea_rax_[r@@ 12+r@@ 12@@ *2], shl_rax_3, add_rax_qword_ptr_[r@@ 10+0x@@ 28], mov_rax_qword_ptr_[rax+0x10], mov_rcx_qword_ptr_[rbp-0x@@ 78], mov_r12_qword_ptr_[rax], mov_rax_qword_ptr_[rbx+0x@@ b8], mov_rdx_r12, mov_rax_qword_ptr_[r@@ ax@@ +rcx*8], mov_qword_ptr_[rbp-0xc@@ 8]_r10, mov_rdi_qword_ptr_[rax+0x10], lea_rsi_[r@@ ax+0x18], mov_qword_ptr_[rbp-0x9@@ 8]_rcx, call_0xffffffffffffa@@ 77@@ d, test_rax_rax, jne_0xfffffffffffffa@@ d6, mov_r9_qword_ptr_[rbp-0x@@ a0], mov_r10_qword_ptr_[rbp-0x@@ c8], mov_rsi_r9, mov_rcx_qword_ptr_[rbp-0x@@ 98], add_rsi_qword_ptr_[r@@ 10], jmp_0xfffffffffffffa@@ 2f, mov_r12_r15, jmp_0xfffffffffffffaa@@ 6, mov_rdi_qword_ptr_[rbp-0x@@ 60], call_0xfffffffffffe@@ 70@@ ec, cmp_byte_ptr_[rbp-0x@@ b@@ 9]_0, jne_0x@@ f8, test_r14_r14, je_0xfffffffffffffe@@ 4f, mov_rdi_r14, call_0xffffffffffffdd@@ 5e, jmp_0xfffffffffffffe@@ 41, mov_qword_ptr_[rax+8]_rcx, mov_rdx_qword_ptr_[rbp-0x@@ b0], mov_rdi_qword_ptr_[rbp-0x@@ b8], mov_rsi_r13, mov_qword_ptr_[rbp-0xa@@ 0]_r9, mov_qword_ptr_[rbp-0x9@@ 8]_rcx, call_0xfffffffffffe7@@ 40@@ d, mov_rax_qword_ptr_[r13+8], mov_rcx_qword_ptr_[rbp-0x@@ 98], mov_r9_qword_ptr_[rbp-0x@@ a0], jmp_0xfffffffffffff96@@ f, lea_rsi_[rax@@ +rax*2], mov_rdi_qword_ptr_[r14+0x10], shl_rsi@@ _5, mov_qword_ptr_[rbp-0xa@@ 0]_rcx, mov_qword_ptr_[rbp-0x9@@ 8]_rdx, call_0xfffffffffffe7@@ 4c@@ 6, test_rax_rax, je_0xfffffffffffffd@@ b8, mov_qword_ptr_[r14+0x1@@ 0]_rax, mov_rcx_qword_ptr_[rbp-0x@@ a0], mov_rdx_qword_ptr_[rbp-0x98], shl@@ _qword_ptr_[r@@ 14+@@ 8]_1, jmp_0xfffffffffffffd@@ 37, mov_rdi_qword_ptr_[rbp-0x@@ b0], call_0xfffffffffffe@@ 74@@ 11, mov_qword_ptr_[rbp-0xb8]_rax, test_rax_rax, je_0xffffffffffffff@@ 48, mov_byte_ptr_[rbp-0x@@ b@@ 9]_1, jmp_0xfffffffffffff8c@@ 0, xor_r14d_r14d, jmp_0xfffffffffffff8@@ 23, mov_rdi_qword_ptr_[rbp-0x@@ b8], call_0xfffffffffffe7@@ 001, jmp_0xfffffffffffffb@@ 32, or_qword_ptr_[r@@ sp@@ +rax@@ -8]_0, jmp_0xfffffffffffff88@@ 5, mov_rdi_qword_ptr_[rbp-0x@@ b8], call_0xfffffffffffe6@@ fe@@ 1, jmp_0xffffffffffffff02, mov_rdi_qword_ptr_[rbp-0x@@ 60], call_0xfffffffffffe6@@ fd@@ 3, cmp_byte_ptr_[rbp-0x@@ b@@ 9]_0, je_0xfffffffffffffb@@ 0a, mov_rdi_qword_ptr_[rbp-0x@@ b8], call_0xfffffffffffe6@@ fb@@ a, xor_eax_eax, jmp_0xfffffffffffffd@@ 30, mov_rdi_qword_ptr_[rbp-0x@@ 60], call_0xfffffffffffe6@@ fa@@ a, cmp_byte_ptr_[rbp-0x@@ b@@ 9]_0, mov_eax_1, je_0xfffffffffffffd@@ 16, mov_rdi_qword_ptr_[rbp-0x@@ b8], mov_dword_ptr_[rbp-0x8@@ 8]_eax, call_0xfffffffffffe@@ 6f@@ 86, mov_eax_dword_ptr_[rbp-0x88], jmp_0xfffffffffffffc@@ f8, call_0xfffffffffffe7@@ 13@@ 6
push_r15, mov_r9_r8, push_r14, mov_r14_rcx, push_r13, mov_r13_rsi, lea_rsi_[r@@ dx+0x10], push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_r8, mov_r8_r14, sub_rsp_0x20, mov_rcx_qword_ptr_[rdx+8], push@@ _8, mov_rdx_qword_ptr_[rdx], call_0xffffffffffffef@@ 50, pop_rdx, pop_rcx, test_eax_eax, je_0x17, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_r15_qword_ptr_[r@@ 12+8], mov_rax_qword_ptr_[rbp+0x@@ c8], mov_rdx_qword_ptr_[rbp+0x@@ d0], mov_rcx_qword_ptr_[r13], mov_rdi_qword_ptr_[rbp+0x@@ d8], mov_rsi_r15, cmp_rax_rdx, jge_0x@@ 9c, lea_rdx_[rax+rax*4], shl_rdx_3, test_rax_rax, jle_0x@@ d, lea_r8_[r@@ di+rdx-0x@@ 28], cmp_rbx_qword_ptr_[r@@ 8+8], je_0x70, add_rdi_rdx, xor_edx_edx, cmp_r15@@ _rcx, sete_dl, neg_edx, inc_rax, mov_word_ptr_[r@@ di+0x@@ 22@@ ]_dx, mov_qword_ptr_[rdi@@ ]_r14, mov_qword_ptr_[rdi+@@ 8]_rbx, mov_qword_ptr_[rdi+0x1@@ 0]_rcx, mov_qword_ptr_[rdi+0x1@@ 8]_r15, mov_qword_ptr_[rbp+0x@@ c8]_rax, mov_byte_ptr_[rdi+0x@@ 20]_0, mov_rax_r15, sub_rax_rcx, movsxd_rdx_dword_ptr_[r@@ bp+0x@@ e0], cmp_rdx_rax, jge_0x@@ c, sub_r15d@@ _ecx, mov_dword_ptr_[rbp+0x@@ e@@ 0]@@ _r15d, add_rsi@@ _rbx, sub_rsi@@ _qword_ptr_[r@@ 13], add_rsp_0x18, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, jmp_0xffffffffffff@@ 9b@@ ac, mov_byte_ptr_[r@@ 8+0x@@ 20]_1, jmp_0xffffffffffffff8d, lea_rsi_[rdx@@ +rdx*4], shl_rsi_4, mov_qword_ptr_[rsp+8]_rcx, call_0xfffffffffffe7@@ 2b@@ 3, test_rax_rax, mov_rcx_qword_ptr_[rsp+8], je_0x5e, mov_rdx_qword_ptr_[rbp+0x@@ d0], mov_rsi_qword_ptr_[rbp+0x@@ c8], mov_qword_ptr_[rbp+0x@@ d8]_rax, lea_rsi_[r@@ si+r@@ si*4], lea_rdx_[rdx@@ +rdx*4], lea_rdi_[rax+r@@ si*8], shl_rdx_3, xor_esi_esi, mov_qword_ptr_[rsp+8]_rcx, call_0xfffffffffffe@@ 70@@ 88, mov_rax_qword_ptr_[rbp+0x@@ c8], mov_rdi_qword_ptr_[rbp+0x@@ d8], mov_rsi_qword_ptr_[r12+8], mov_rcx_qword_ptr_[rsp+8], shl@@ _qword_ptr_[r@@ bp+0x@@ d0@@ ]_1, jmp_0xfffffffffffffefe, mov_rdi_qword_ptr_[rbp+0x@@ d8], call_0xfffffffffffe@@ 6d@@ e1, mov_eax_0xc, jmp_0xfffffffffffffea@@ 2
push_r15, push_r14, mov_r14_rdi, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0xa8, mov_qword_ptr_[rsp+0x4@@ 0]_rsi, mov_qword_ptr_[rsp+0x38]_rdx, mov_r15_qword_ptr_[r@@ di+0x@@ 48], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, mov_rax_qword_ptr_[rdi+0x@@ 98], cmp_qword_ptr_[rsi@@ ]_0, mov_qword_ptr_[rsp+0x30]_rax, lea_rax_[r@@ 15*8], mov_qword_ptr_[rsp+0x50]_rax, mov_qword_ptr_[rsp]_0, jg_0x4@@ c, jmp_0x5@@ 94, test_al_1, je_0x26, and_edx@@ _8, jne_0x21, test_cl@@ _0x20, je_6, test_al_2, je_0x18, and_ecx@@ _0x80, je_0xa0, test_al_8, jne_0x98, inc@@ _qword_ptr_[rsp], mov_rdi_qword_ptr_[rsp+0x40], mov_rax_qword_ptr_[rsp], cmp_rax_qword_ptr_[r@@ di], jge_0x@@ 550, mov_rax_qword_ptr_[rsp+0x38], mov_rdi_qword_ptr_[rsp], mov_rax_qword_ptr_[rax], mov_r13_qword_ptr_[r@@ ax+r@@ di*8], mov_rdi_qword_ptr_[rsp+0x30], mov_rbp_r13, mov_rax_qword_ptr_[rdi], shl_rbp@@ _4, add_rax_rbp, cmp_byte_ptr_[rax+@@ 8]_4, jne_0xffffffffffffffc4, mov_ebx_dword_ptr_[r@@ ax+8], test_ebx@@ _0x3@@ ff@@ 00, je_0x49, mov_edx_dword_ptr_[r14+0x@@ a0], shr_ebx@@ _8, mov_rsi_r15, mov_rdi_r14, call_0xffffffffffffc0@@ 37, mov_ecx_ebx, mov_edx_ebx, and@@ _cx@@ _0x3ff, test_bl@@ _4, jne_0xffffffffffffff@@ 6e, and_edx@@ _8, je_0xffffffffffffff@@ 6e, test_al_1, je_0xffffffffffffff@@ 66, jmp_0xffffffffffffff7f, mov_rbx_qword_ptr_[r@@ 14+0x@@ c8], xor_esi_esi, mov_rcx_rbx, jmp_0x27, lea_rax_[r@@ cx+r@@ si], mov_rdi_qword_ptr_[r14+0x@@ d8], sar_rax_1, lea_rdx_[rax+rax*4], lea_rdx_[r@@ di@@ +rdx*8], cmp_r15@@ _qword_ptr_[r@@ dx+8], jg_0x2@@ 16, mov_rcx_rax, cmp_rcx_rsi, jg_0xffffffffffffff@@ da, cmp_rbx@@ _rsi, jle_0x@@ 2@@ 15, mov_rax_qword_ptr_[r14+0x@@ d8], lea_rdx_[r@@ si+r@@ si*4], lea_rax_[rax@@ +rdx*8], cmp_r15@@ _qword_ptr_[r@@ ax+8], je_0x1a, jmp_0x1@@ fa, add_rax_0x28, cmp_byte_ptr_[rax@@ -8]_0, je_0x1@@ e8, cmp_r13@@ _qword_ptr_[r@@ ax], jne_0xffffffffffffffef, mov_rax_rbx, mov_dword_ptr_[rsp+0x@@ 7c]_0, cmp_rbx_rax, jge_0xffffffffffff@@ fe@@ ef, lea_rax_[r@@ 13*8], mov_qword_ptr_[rsp+0x58]_rax, lea_rax_[r@@ 13+r@@ 13@@ *2], shl_rax_3, mov_qword_ptr_[rsp+0x60]_rax, mov_rax_r14, mov_r12@@ _qword_ptr_[rsp+0x30], mov_r14_rbx, mov_rbx_rax, jmp_0x1@@ 38, mov_rcx_qword_ptr_[r@@ 12+0x28], mov_rsi_qword_ptr_[rsp+0x60], mov_rcx_qword_ptr_[r@@ cx+r@@ si+0x10], mov_rcx_qword_ptr_[r@@ cx], lea_rcx_[rcx@@ +rcx*2], lea_rdi_[rdx@@ +rcx*8], mov_qword_ptr_[rsp+0x10]_rdi, add_rbp@@ _r15, sub_rbp@@ _rax, mov_edx_dword_ptr_[rbx+0x@@ a0], lea_rsi_[r@@ bp-1], mov_rdi_rbx, call_0xffffffffffffbf@@ 16, mov_ecx_eax, mov_rsi_qword_ptr_[rsp+0x50], mov_rax_qword_ptr_[rbx+0x@@ b8], lea_r11_[r@@ bp*8], lea_r10@@ _[rax+r@@ 11], mov_rax_qword_ptr_[rax+r@@ si], mov_qword_ptr_[rsp+8]_0, mov_rdx_qword_ptr_[r@@ 10], test_rax_rax, je_0xb, mov_rax_qword_ptr_[rax+0x10], mov_qword_ptr_[rsp+8]_rax, test_rdx_rdx, je_0x2@@ d6, lea_r10_[rsp+0x@@ 80], mov_rsi_qword_ptr_[r@@ dx+0x@@ 50], mov_rdx_qword_ptr_[rsp+0x10], mov_rdi_r10, mov_qword_ptr_[rsp+0x4@@ 8]_r11, mov_dword_ptr_[rsp+0x28]_ecx, mov_qword_ptr_[rsp+0x20]_r10, call_0xffffffffffffb@@ 2a@@ e, test_eax_eax, mov_dword_ptr_[rsp+0x@@ 7c]_eax, mov_r10_qword_ptr_[rsp+0x20], mov_ecx_dword_ptr_[rsp+0x28], mov_r11@@ _qword_ptr_[rsp+0x48], jne_0x34@@ 5, add_r11@@ _qword_ptr_[r@@ bx+0x@@ b8], mov_rdx_r10, lea_rdi_[rsp+0x@@ 7c], mov_rsi_r12, mov_qword_ptr_[rsp+0x20]_r11, call_0xffffffffffffb@@ 3e8, mov_r11_qword_ptr_[rsp+0x20], mov_rdi_qword_ptr_[rsp+0x90], mov_qword_ptr_[r@@ 11@@ ]_rax, call_0xfffffffffffe@@ 6b@@ 13, mov_rdx_qword_ptr_[rbx+0x@@ b8], cmp_qword_ptr_[r@@ dx+r@@ bp*@@ 8]_0, je_0x2@@ 83, cmp_qword_ptr_[rsp+0x18]_0, jne_0x1e, mov_rax_qword_ptr_[rsp+0x50], mov_rsi_qword_ptr_[rsp+8], mov_rax_qword_ptr_[r@@ dx+rax], cmp_qword_ptr_[rax+0x1@@ 0]_rsi, jg_0x2@@ 7a, inc@@ _r14, cmp_r14@@ _qword_ptr_[r@@ bx+0x@@ c8], jge_0x@@ 2b@@ e, mov_rdx_qword_ptr_[rbx+0x@@ d8], lea_rax_[r@@ 14+r@@ 14*4], lea_rax_[rdx@@ +rax*8], cmp_r13@@ _qword_ptr_[r@@ ax], jne_0xffffffffffffffde, cmp_r15@@ _qword_ptr_[r@@ ax+8], jne_0xffffffffffffffd8, mov_rbp_qword_ptr_[r@@ ax+0x18], mov_rax_qword_ptr_[rax+0x10], mov_rdi_rbp, sub_rdi_rax, mov_qword_ptr_[rsp+0x18]_rdi, mov_rdx_qword_ptr_[r12+0x@@ 30], je_0xfffffffffffffe@@ 9e, mov_rcx_qword_ptr_[r@@ 12+0x18], mov_rsi_qword_ptr_[rsp+0x58], mov_rcx_qword_ptr_[r@@ cx+r@@ si], lea_rcx_[rcx@@ +rcx*2], lea_rdi_[rdx@@ +rcx*8], mov_qword_ptr_[rsp+0x10]_rdi, jmp_0xfffffffffffffe@@ 9c, lea_rsi_[rax+1], jmp_0xfffffffffffffd@@ ef, mov_rax_qword_ptr_[r14+0x@@ 98], cmp_qword_ptr_[r14+0x@@ e8]_0, mov_rdx_qword_ptr_[rax], mov_qword_ptr_[rsp+0x60]_rax, mov_rax_qword_ptr_[r@@ dx+r@@ bp], mov_qword_ptr_[rsp+0x58]_rax, jle_0xfffffffffffffe@@ 03, mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x2@@ 8]_r15, mov_qword_ptr_[rsp+0x4@@ 8]_r13, mov_qword_ptr_[rsp+0x6@@ 8]_rbx, mov_r10_qword_ptr_[r@@ 14+8], mov_rax_qword_ptr_[r14+0x@@ f8], mov_rsi_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[rsp+0x58], mov_rbx_qword_ptr_[r@@ ax+r@@ si*8], mov_rax_qword_ptr_[rbx+8], shl_rax_4, cmp_rdi_qword_ptr_[r@@ dx+rax], je_0x2d, inc@@ _qword_ptr_[rsp+8], mov_rax_qword_ptr_[rsp+8], cmp_rax_qword_ptr_[r@@ 14+0x@@ e8], jge_0x@@ 4@@ 12, mov_rax_qword_ptr_[rsp+0x60], mov_rdx_qword_ptr_[rax], jmp_0xffffffffffffffbe, cmp_qword_ptr_[rbx+0x@@ 20]_0, mov_r15_qword_ptr_[rbx], jle_0x@@ 4@@ 38, mov_rbp_qword_ptr_[rsp+0x28], xor_r12d_r12d, jmp_0x17, inc_r12, cmp_r12@@ _qword_ptr_[r@@ bx+0x20], jge_0x@@ 3a@@ 2, mov_rax_qword_ptr_[rbx+0x28], mov_rcx_r15, mov_r13_qword_ptr_[r@@ ax+r@@ 12*8], mov_r8_rbp, mov_r15_qword_ptr_[r@@ 13+8], mov_rdx_r15, sub_rdx_rcx, add_rbp@@ _rdx, test_rdx_rdx, jle_0x@@ 3f, cmp_qword_ptr_[r14+0x@@ 30]@@ _rbp, jl@@ _0x8@@ f, lea_rsi_[r@@ 10@@ +rcx], lea_rdi_[r@@ 10+r@@ 8], mov_qword_ptr_[rsp+0x20]_rcx, mov_qword_ptr_[rsp+0x18]_r8, mov_qword_ptr_[rsp+0x10]_r10, call_0xfffffffffffe@@ 6c@@ 42, test_eax_eax, mov_r10_qword_ptr_[rsp+0x10], mov_r8_qword_ptr_[rsp+0x18], mov_rcx_qword_ptr_[rsp+0x20], jne_0x1@@ 73, mov_r8_qword_ptr_[rsp+0x28], mov_rcx_qword_ptr_[rsp+0x48], mov_rdx_r13, mov_rsi_rbx, mov_rdi_r14, call_0xfffffffffffff9c@@ 3, mov_r10_qword_ptr_[r@@ 14+8], cmp_eax_1, jbe_0xffffffffffffff@@ 77, mov_rbx_qword_ptr_[rsp+0x@@ 98], xor_rbx_qword_ptr_fs:[0x28], jne_0x38@@ d, add_rsp_0xa8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_qword_ptr_[rsp+0x10]_rdx, cmp_qword_ptr_[r14+0x@@ 5@@ 8]_rbp, jl@@ _0x10@@ e, mov_rsi_rbp, mov_rdi_r14, mov_qword_ptr_[rsp+0x20]_rcx, mov_qword_ptr_[rsp+0x18]_r8, call_0xffffffffffff9@@ 601, test_eax_eax, jne_0xffffffffffffffa9, mov_r10_qword_ptr_[r@@ 14+8], mov_rdx_qword_ptr_[rsp+0x10], mov_rcx_qword_ptr_[rsp+0x20], mov_r8_qword_ptr_[rsp+0x18], jmp_0xffffffffffffff3c, mov_rdx_qword_ptr_[rsp+0x10], lea_rdi_[rsp+0x@@ 7c], mov_rsi_r12, mov_qword_ptr_[rsp+0x20]_r10, call_0xffffffffffffb@@ 15@@ e, mov_r10_qword_ptr_[rsp+0x20], mov_rdx_qword_ptr_[rbx+0x@@ b8], mov_qword_ptr_[r@@ 10]_rax, cmp_qword_ptr_[r@@ dx+r@@ bp*@@ 8]_0, jne_0xfffffffffffffd@@ 89, mov_eax_dword_ptr_[rsp+0x@@ 7c], test_eax_eax, je_0xfffffffffffffd@@ 7d, jmp_0xffffffffffffff52, mov_rax_qword_ptr_[rsp+0x10], mov_rcx_r15, lea_rbp@@ _[rax+8], lea_rdx_[rax+0x10], mov_rsi_rbp, mov_rdi_rbx, mov_qword_ptr_[rsp+8]_rdx, call_0xffffffffffffba@@ 5d, mov_dword_ptr_[rsp+0x@@ 7c]_eax, test_eax_eax, jne_0xffffffffffffff@@ 21, mov_rdx_qword_ptr_[rsp+8], mov_rsi_rbp, mov_rdi_rbx, call_0xfffffffffffffa@@ 61, mov_dword_ptr_[rsp+0x@@ 7c]_eax, test_eax_eax, jne_0xffffffffffffff@@ 05, inc@@ _r14, cmp_r14@@ _qword_ptr_[r@@ bx+0x@@ c8], jl_0xffffffffffff@@ fd@@ 4e, mov_r14_rbx, jmp_0xfffffffffffffa@@ cd, mov_rdi_qword_ptr_[rsp+0x90], call_0xfffffffffffe@@ 67@@ f8, mov_eax_dword_ptr_[rsp+0x@@ 7c], jmp_0xfffffffffffffe@@ ce, xor_eax_eax, jmp_0xfffffffffffffebd, mov_r11@@ _r8, mov_r13_rcx, cmp_r12@@ _qword_ptr_[r@@ bx+0x20], jl_0xffffffffffff@@ f@@ dd@@ 4, test_r12_r12, jne_0x1@@ b9, cmp_qword_ptr_[rsp+0x@@ 28]@@ _r13, jl_0xffffffffffff@@ fd@@ c0, mov_rbp@@ _qword_ptr_[rsp+0x58], mov_r12_r13, mov_r15@@ _r11, mov_r13@@ _r10, mov_rax_r12, sub_rax_qword_ptr_[r@@ bx], test_rax_rax, jle_0x@@ 24, cmp_qword_ptr_[r14+0x@@ 30]@@ _r15, jle_0x@@ 19@@ 6, movzx_edi_byte_ptr_[r@@ 13+r@@ 12-1], lea_rax_[r@@ 15+1], cmp_byte_ptr_[r@@ 13+r@@ 15@@ ]_dil, jne_0x12@@ 6, mov_r15_rax, mov_rax_qword_ptr_[r14+0x@@ b8], mov_rax_qword_ptr_[rax+r@@ 12*8], test_rax_rax, je_0x101, mov_rcx_qword_ptr_[rax+0x10], test_rcx_rcx, jle_0x@@ f4, mov_rdi_qword_ptr_[rax+0x18], mov_rax_qword_ptr_[rsp+0x60], xor_edx_edx, mov_rsi_qword_ptr_[rax], jmp_0x10, inc_rdx, cmp_rcx_rdx, je_0xd6, mov_r8_qword_ptr_[r@@ di@@ +rdx*8], mov_rax_r8, shl_rax_4, add_rax_rsi, cmp_byte_ptr_[rax+@@ 8@@ ]_9, jne_0xffffffffffffffe2, cmp_rbp@@ _qword_ptr_[r@@ ax], jne_0xffffffffffffffdd, cmp_r8@@ _-1, je_0xb3, mov_rsi_qword_ptr_[rbx+0x10], mov_rcx_qword_ptr_[rbx], test_rsi_rsi, je_0xb9, sub_rsp_8, mov_rdx_qword_ptr_[rbx+8], push@@ _9, mov_r9_r12, mov_rdi_r14, mov_qword_ptr_[rsp+0x20]_r8, call_0xffffffffffffe@@ 6f@@ c, pop_rdx, pop_rcx, cmp_eax_1, je_0x7e, test_eax_eax, jne_0xfffffffffffffd@@ bd, mov_rax_qword_ptr_[rbx+0x18], mov_r8_qword_ptr_[rsp+0x10], cmp_qword_ptr_[rbx+0x@@ 20]_rax, je_0x10e, mov_esi_0x28, mov_edi_1, mov_qword_ptr_[rsp+0x10]_r8, call_0xfffffffffffe6@@ 9e@@ 6, mov_rdx_rax, test_rax_rax, je_0x94, mov_rax_qword_ptr_[rbx+0x20], mov_rcx_qword_ptr_[r@@ bx+0x28], mov_r8_qword_ptr_[rsp+0x10], mov_qword_ptr_[rcx@@ +rax*@@ 8]_rdx, inc_rax, mov_qword_ptr_[rdx@@ ]_r8, mov_qword_ptr_[rdx+@@ 8]_r12, mov_qword_ptr_[rbx+0x20]_rax, mov_r8_qword_ptr_[rsp+0x28], mov_rcx_qword_ptr_[rsp+0x48], mov_rsi_rbx, mov_rdi_r14, call_0xfffffffffffff70@@ 6, mov_r13_qword_ptr_[r@@ 14+8], cmp_eax_1, ja_0xfffffffffffffd@@ 49, inc_r12, cmp_qword_ptr_[rsp+0x@@ 28]@@ _r12, jge_0xffffffffffff@@ fe@@ bc, mov_r10@@ _r13, jmp_0xfffffffffffffc@@ 58, mov_rsi_r12, sub_rsi_rcx, inc@@ _rsi, mov_edi_0x18, mov_qword_ptr_[rsp+0x18]_r8, mov_qword_ptr_[rsp+0x10]_rcx, call_0xfffffffffffe6@@ 96@@ 6, test_rax_rax, mov_qword_ptr_[rbx+0x10]_rax, mov_rcx_qword_ptr_[rsp+0x10], mov_r8_qword_ptr_[rsp+0x18], mov_rsi_rax, jne_0xffffffffffffff@@ 1c, mov_eax_0xc, jmp_0xfffffffffffffc@@ f1, mov_rbp_r8, mov_r15_rcx, lea_r13_[r@@ 15+1], mov_r11@@ _rbp, jmp_0xfffffffffffffe@@ 40, cmp_qword_ptr_[r14+0x@@ 5@@ 8]_r15, jle_0xffffffffffffff@@ a1, lea_esi_[r@@ 15+1], mov_rdi_r14, call_0xffffffffffff9@@ 1a@@ e, test_eax_eax, jne_0xfffffffffffffc@@ c6, mov_r13_qword_ptr_[r@@ 14+8], jmp_0xfffffffffffffe@@ 52, mov_r15_qword_ptr_[rsp+0x28], mov_r13@@ _qword_ptr_[rsp+0x48], mov_rbx_qword_ptr_[rsp+0x@@ 68], mov_rax_qword_ptr_[r14+0x@@ c8], jmp_0xfffffffffffff98@@ 8, lea_r13_[rax@@ +rax+1], mov_rdi_qword_ptr_[rbx+0x28], lea_rsi_[r@@ 13*8], call_0xfffffffffffe@@ 6a@@ 0c, test_rax_rax, je_0xffffffffffffff@@ 8d, mov_qword_ptr_[rbx+0x28]_rax, mov_qword_ptr_[rbx+0x1@@ 8]_r13, mov_r8_qword_ptr_[rsp+0x10], jmp_0xfffffffffffffe@@ d0, mov_r11_qword_ptr_[rsp+0x28], mov_r13_r15, jmp_0xfffffffffffffd@@ c8, call_0xfffffffffffe@@ 67@@ 4@@ 3
push_r15, push_r14, push_r13, mov_r13_rdi, push_r12, push_rbp, push_rbx, mov_rbx_rsi, sub_rsp_0x38, mov_rbp_qword_ptr_[r@@ si+0x@@ 48], mov_r14_qword_ptr_[r@@ si+0x@@ b8], lea_r12_[r@@ bp*8], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_r15_qword_ptr_[r@@ si+0x@@ 98], add_r14@@ _r12, cmp_qword_ptr_[rsi+0x@@ c@@ 0]_rbp, jge_0x@@ 48, mov_qword_ptr_[r14@@ ]_rdx, mov_qword_ptr_[rsi+0x@@ c@@ 0]_rbp, mov_r12_rdx, cmp_qword_ptr_[r15+0x@@ 98]_0, jne_0x12@@ 9, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ 7d, add_rsp_0x38, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[r14], test_rax_rax, je_0xe2, mov_r10_qword_ptr_[r@@ ax+0x50], test_rdx_rdx, je_0x8d, mov_rax_qword_ptr_[rdx+0x@@ 50], lea_r14_[rsp+0x10], mov_rdx_r10, mov_rsi_rax, mov_rdi_r14, mov_qword_ptr_[rsp]_rax, call_0xffffffffffffa@@ c0@@ 1, mov_dword_ptr_[r13]_eax, test_eax_eax, jne_0x1@@ 1e, mov_rax_qword_ptr_[rbx+0x48], mov_edx_dword_ptr_[rbx+0x@@ a0], lea_rsi@@ _[rax-1], mov_rdi_rbx, call_0xffffffffffffb@@ 7d@@ f, mov_r8_qword_ptr_[rbx+0x@@ b8], mov_ecx_eax, add_r8@@ _r12, mov_rdx_r14, mov_rsi_r15, mov_rdi_r13, mov_qword_ptr_[rsp+8]_r8, call_0xffffffffffffad@@ 30, mov_r8_qword_ptr_[rsp+8], cmp_qword_ptr_[rsp]_0, mov_qword_ptr_[r@@ 8]_rax, mov_r12_rax, je_0xffffffffffffff@@ 42, mov_rdi_qword_ptr_[rsp+0x20], call_0xfffffffffffe@@ 64@@ 50, jmp_0xffffffffffffff32, movdqu_xmm0_xmmword_ptr_[r@@ 10], mov_edx_dword_ptr_[r@@ si+0x@@ a0], movaps_xmmword_ptr_[rsp+0x10]_xmm0, mov_rax_qword_ptr_[r@@ 10@@ +0x10], lea_rsi_[r@@ bp-1], mov_rdi_rbx, mov_qword_ptr_[rsp+0x20]_rax, call_0xffffffffffffb@@ 77@@ 0, mov_ecx_eax, lea_rdx_[rsp+0x10], mov_rsi_r15, mov_rdi_r13, call_0xffffffffffffa@@ cc@@ e, mov_qword_ptr_[r14]_rax, mov_r12_rax, jmp_0xfffffffffffffe@@ ea, mov_qword_ptr_[r14@@ ]_rdx, mov_r12_rdx, jmp_0xfffffffffffffed9, test_r12_r12, je_0x5d, lea_r14_[r@@ 12+0x10], lea_r15_[r@@ 12+0x18], mov_rcx_rbp, mov_rdx_r15, mov_rsi_r14, mov_rdi_rbx, call_0xffffffffffffb@@ 5d@@ d, mov_dword_ptr_[r13]_eax, test_eax_eax, jne_0x3a, test_byte_ptr_[r12+0x@@ 6@@ 8]@@ _0x40, je_0xfffffffffffffea@@ f, mov_rdx_r15, mov_rsi_r14, mov_rdi_rbx, call_0xfffffffffffff5d@@ b, mov_dword_ptr_[r13]_eax, test_eax_eax, jne_0x18, mov_rax_qword_ptr_[rbx+0x@@ b8], mov_r12_qword_ptr_[r@@ ax+r@@ bp*8], jmp_0xfffffffffffffe@@ 88, xor_r12d_r12d, jmp_0xfffffffffffffe@@ 7a, call_0xfffffffffffe6@@ 54@@ 0
push_r15, mov_r15_rsi, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, mov_edi_8, push_rbx, sub_rsp_0x68, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x58]_rax, xor_eax_eax, mov_rbx_qword_ptr_[r@@ si+0x18], mov_qword_ptr_[rsp+0x@@ 40]_1, mov_qword_ptr_[rsp+0x4@@ 8]_1, mov_r12_qword_ptr_[r@@ si+0x10], call_0xfffffffffffe6@@ 70d, mov_qword_ptr_[rsp+0x50]_rax, test_rax_rax, je_0x2@@ c8, mov_qword_ptr_[rax]_r12, lea_rcx_[rsp+0x40], mov_rdx_rbx, mov_rsi_r15, mov_rdi_rbp, mov_qword_ptr_[rsp+0x18]_rcx, call_0x1a@@ 84, test_eax_eax, jne_0x2@@ 2d, lea_rax_[r@@ 15+0x30], mov_dword_ptr_[rsp+0x14]_0, mov_qword_ptr_[rsp+0x38]_rax, test_rbx_rbx, jle_0x@@ 28@@ 3, mov_rdi_qword_ptr_[r15], lea_rax_[r@@ bx*8], cmp_qword_ptr_[r@@ di+r@@ bx*@@ 8]_0, mov_qword_ptr_[rsp+8]_rax, je_0x2@@ 38, mov_dword_ptr_[rsp+0x14]_0, mov_eax_dword_ptr_[rsp+0x14], cmp_dword_ptr_[rbp+0x@@ e@@ 0]_eax, jl@@ _0x2@@ 34, mov_rax_qword_ptr_[rbp+0x@@ b8], mov_rcx_qword_ptr_[rsp+8], mov_qword_ptr_[rsp+0x48]_0, mov_r13_qword_ptr_[r@@ ax@@ +rcx@@ -8], dec@@ _rbx, test_r13_r13, je_0x1@@ 9a, cmp_qword_ptr_[r13+0x@@ 28]_0, mov_r12_qword_ptr_[r@@ bp+0x98], jle_0x@@ 188, mov_qword_ptr_[rsp]_0, jmp_0x@@ a4, mov_rdx_rbx, mov_rdi_rbp, call_0xffffffffffffb6@@ 9a, test_al_al, je_0x7b, mov_rax_qword_ptr_[r15], mov_rcx_qword_ptr_[rsp+8], mov_rax_qword_ptr_[r@@ ax+rcx], test_rax_rax, je_0x6a, mov_rdx_qword_ptr_[r@@ 12+0x18], mov_rdi_qword_ptr_[rax+0x10], mov_rdx_qword_ptr_[r@@ dx+r@@ 14*8], lea_rsi_[r@@ ax+0x18], call_0xffffffffffff98@@ 7f, test_rax_rax, je_0x4f, mov_r8d_1, cmp_qword_ptr_[r15+0x@@ 28]_0, je_0x2d, mov_rax_qword_ptr_[r12+0x18], sub_rsp_8, mov_rcx_qword_ptr_[r@@ ax+r@@ 14*8], push_rbx, lea_rsi_[r@@ 15+0x28], mov_r9_r14, mov_rdx_qword_ptr_[rsp+0x48], add_r8@@ _rbx, mov_rdi_rbp, call_0xffffffffffff9a@@ d8, pop_rdx, pop_rcx, test_al_al, jne_0x17, mov_rdi_qword_ptr_[rsp+0x18], mov_rsi_r14, call_0xffffffffffff8@@ 2a@@ 5, test_al_al, je_0x1@@ 3e, inc@@ _qword_ptr_[rsp], mov_rax_qword_ptr_[rsp], cmp_rax_qword_ptr_[r@@ 13+0x28], jge_0x@@ dc, mov_rax_qword_ptr_[r13+0x@@ 30], mov_rcx_qword_ptr_[rsp], mov_rsi_qword_ptr_[r12], mov_r14_qword_ptr_[r@@ ax@@ +rcx*8], mov_r11@@ _r14, shl@@ _r11@@ _4, add_rsi@@ _r11, test_byte_ptr_[rsi+0x@@ a@@ ]_0x10, je_0xffffffffffffff@@ 48, mov_r10_qword_ptr_[r@@ bp+0x98], mov_rax_qword_ptr_[r15+0x18], mov_rdi_qword_ptr_[r@@ 10], mov_r8_rbx, lea_rsi_[r@@ 10+0x@@ d8], mov_rcx_rbp, mov_rdx_r14, mov_qword_ptr_[rsp+0x28]_r11, mov_qword_ptr_[rsp+0x20]_rax, mov_qword_ptr_[rsp+0x30]@@ _r10, call_0xffffffffffffd@@ ee@@ 5, movsxd_r8@@ _eax, test_r8d_r8d, mov_r11_qword_ptr_[rsp+0x28], jle_0x@@ 5d, movsxd_rax@@ _r8d, add_rax_rbx, cmp_qword_ptr_[rsp+0x@@ 20]_rax, jl_0xffffffffffffff@@ 39, mov_rdx_qword_ptr_[r15], mov_r10_qword_ptr_[rsp+0x30], mov_rax_qword_ptr_[r@@ dx+rax*8], test_rax_rax, je_0x41, mov_rdx_qword_ptr_[r@@ 10@@ +0x18], mov_rdi_qword_ptr_[rax+0x10], mov_rdx_qword_ptr_[r@@ dx+r@@ 14*8], lea_rsi_[r@@ ax+0x18], mov_qword_ptr_[rsp+0x20]_r11, call_0xffffffffffff97@@ 7c, test_rax_rax, jne_0xffffffffffffff@@ 05, mov_r11_qword_ptr_[rsp+0x20], mov_rsi_qword_ptr_[r12], add_rsi@@ _r11, jmp_0xfffffffffffffe@@ b2, jne_0xfffffffffffffe@@ e9, mov_rsi_qword_ptr_[r12], add_rsi@@ _r11, jmp_0xfffffffffffffe@@ 9b, mov_rcx_qword_ptr_[rsp+0x18], mov_rdx_rbx, mov_rsi_r15, mov_rdi_rbp, call_0x1@@ 86@@ 2, test_eax_eax, je_0xfffffffffffffd@@ f5, mov_rdi_qword_ptr_[rsp+0x50], mov_dword_ptr_[rsp]_eax, call_0xfffffffffffe@@ 60@@ c8, mov_eax_dword_ptr_[rsp], mov_rdx_qword_ptr_[rsp+0x58], xor_rdx_qword_ptr_fs:[0x28], jne_0x61, add_rsp_0x68, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_eax_0xc, jmp_0xffffffffffffffcb, inc_dword_ptr_[r@@ sp+0x14], mov_eax_dword_ptr_[rsp+0x14], cmp_dword_ptr_[rbp+0x@@ e@@ 0]_eax, jge_0xffffffffffff@@ f@@ dd@@ 8, mov_rdx_qword_ptr_[rsp+8], xor_esi_esi, call_0xfffffffffffe6@@ 2e@@ 5, mov_rdi_qword_ptr_[rsp+0x50], call_0xfffffffffffe@@ 60@@ 6b, xor_eax_eax, jmp_0xffffffffffffffa4, xor_eax_eax, jmp_0xffffffffffffff8e, mov_eax_0xc, jmp_0xffffffffffffff93, call_0xfffffffffffe6@@ 21@@ 1
push_r15, push_r14, push_r13, push_r12, mov_r12_r9, push_rbp, mov_rbp_r8, push_rbx, mov_rbx_rcx, xor_ecx_ecx, sub_rsp_0x2@@ 28, mov_rax_qword_ptr_[rsp+0x@@ 268], mov_qword_ptr_[rsp+0x7@@ 8]_rdx, mov_qword_ptr_[rsp+0x4@@ 8]_rdi, mov_qword_ptr_[rsp+0x8@@ 8]_rsi, mov_qword_ptr_[rsp+0xb0]_rax, xor_edx_edx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x2@@ 18]_rax, xor_eax_eax, mov_rax_qword_ptr_[rdi], mov_qword_ptr_[rsp+0x18]_rax, mov_eax_edx, add_edx@@ _0x20, mov_qword_ptr_[rsp+r@@ ax+0x1@@ 1@@ 0]_rcx, mov_qword_ptr_[rsp+r@@ ax+0x1@@ 1@@ 8]_rcx, mov_qword_ptr_[rsp+r@@ ax+0x1@@ 20]_rcx, mov_qword_ptr_[rsp+r@@ ax+0x1@@ 28]_rcx, cmp_edx@@ _0x100, jb_0xffffffffffffff@@ d5, mov_rax_qword_ptr_[rsp+0x18], mov_qword_ptr_[rsp+0x1@@ a8]_rax, mov_rax_qword_ptr_[rsp+0x48], mov_rsi_qword_ptr_[rax+0x20], mov_qword_ptr_[rsp+0x7@@ 0]_rsi, test_rsi_rsi, je_0x27, movzx_eax_byte_ptr_[rax+0x@@ 38], test_al_8, je_0x@@ eb@@ a, cmp_rbx_rbp, je_0x@@ eb@@ 1, test_al_1, mov_eax_0, cmove_rax@@ _rsi, mov_qword_ptr_[rsp+0x70]_rax, mov_rax_qword_ptr_[rsp+0x48], mov_qword_ptr_[rsp+0x98]_0, mov_rax_qword_ptr_[rax+0x30], cmp_rax@@ _qword_ptr_[rsp+0x@@ 260], jae_0x@@ 27, mov_rcx_qword_ptr_[rsp+0x@@ 260], lea_rdx_[r@@ cx-1], mov_rcx_rdx, sub_rcx_rax, sub_rax_rdx, add_qword_ptr_[rsp+0x@@ 26@@ 0]_rax, mov_qword_ptr_[rsp+0x9@@ 8]_rcx, mov_rdi_qword_ptr_[rsp+0x48], cmp_qword_ptr_[rdi+0x1@@ 0]_0, je_0xe@@ 85, mov_rsi_qword_ptr_[rsp+0x18], mov_rax_qword_ptr_[rsi+0x@@ 48], test_rax_rax, je_0xe@@ 73, mov_rdx_qword_ptr_[r@@ si+0x50], test_rdx_rdx, je_0xe@@ 66, mov_rcx_qword_ptr_[r@@ si+0x@@ 58], test_rcx_rcx, je_0xe@@ 59, cmp_qword_ptr_[rsi+0x@@ 60]_0, je_0xe@@ 4e, cmp_qword_ptr_[rax+0x10]_0, jne_0xd, cmp_qword_ptr_[r@@ dx+0x1@@ 0]_0, je_0x1@@ 18@@ 4, cmp_qword_ptr_[rsp+0x@@ 26@@ 0]_0, mov_dword_ptr_[rsp+0x@@ 50]_1, jne_0x19, mov_rax_qword_ptr_[rsp+0x18], cmp_qword_ptr_[rax+0x@@ 98]_0, setne_al, movzx_eax_al, mov_dword_ptr_[rsp+0x50]_eax, mov_rax_qword_ptr_[rsp+0x48], mov_r11_qword_ptr_[rsp+0x18], mov_rcx_qword_ptr_[rax+0x28], mov_rax_qword_ptr_[rax+0x18], mov_edx_dword_ptr_[r@@ 11+0x@@ b4], mov_qword_ptr_[rsp+8]_rax, mov_rax_qword_ptr_[r@@ 11@@ +0x10], mov_rdi_qword_ptr_[rsp+0x78], lea_rsi_[rax+1], mov_qword_ptr_[rsp+0x10]_rax, movsxd_rax_edx, cmp_rsi_rax, cmovl@@ _rsi_rax, lea_rax_[r@@ di+1], cmp_rsi_rax, cmovg@@ _rsi_rax, mov_rax_qword_ptr_[rsp+0x88], mov_dword_ptr_[rsp+0x1@@ a@@ 0]_edx, mov_qword_ptr_[rsp+0x1@@ 10]_rax, mov_rax_qword_ptr_[rsp+8], lea_r15_[r@@ sp+0x110], and_eax@@ _0x4@@ 00000, setne@@ _byte_ptr_[r@@ sp+0x1@@ 98], or_rax@@ _rcx, movzx_eax_byte_ptr_[r@@ 11+0x@@ b0], setne@@ _byte_ptr_[r@@ sp+0x1@@ 9b], mov_edx_eax, shr_dl@@ _2, shr_al@@ _3, mov_qword_ptr_[rsp+0x1@@ 6@@ 8]_rdi, mov_qword_ptr_[rsp+0x1@@ 6@@ 0]_rdi, mov_qword_ptr_[rsp+0x1@@ 7@@ 8]_rdi, mov_qword_ptr_[rsp+0x1@@ 7@@ 0]_rdi, and_edx_1, and_eax_1, mov_rdi_r15, mov_qword_ptr_[rsp+0xa@@ 0]_rcx, mov_qword_ptr_[rsp+0x1@@ 8@@ 8]_rcx, mov_byte_ptr_[rsp+0x1@@ 99@@ ]_dl, mov_byte_ptr_[rsp+0x1@@ 9a@@ ]_al, call_0xffffffffffff7d@@ 84, mov_dword_ptr_[rsp+0x54]_eax, test_eax_eax, jne_0x@@ 7c@@ 9, mov_rcx_qword_ptr_[rsp+0x18], lea_rax_[r@@ cx+0x@@ b8], mov_qword_ptr_[rsp+0x1@@ 90]_rax, movzx_eax_byte_ptr_[r@@ cx+0x@@ b0], mov_byte_ptr_[rsp+@@ 8]_al, shr_al@@ _4, and_eax_1, cmp_byte_ptr_[rsp+0x1@@ 9b@@ ]_0, mov_byte_ptr_[rsp+0x1@@ 9e@@ ]_al, jne_0x25, mov_rsi_qword_ptr_[rsp+0x18], mov_rax_qword_ptr_[rsp+0x88], cmp_dword_ptr_[rsi+0x@@ b@@ 4]_1, mov_qword_ptr_[rsp+0x118]_rax, mov_rax_qword_ptr_[rsp+0x78], jle_@@ 4, xor_eax_eax, mov_qword_ptr_[rsp+0x1@@ 40]_rax, mov_qword_ptr_[rsp+0x1@@ 48]_rax, mov_rax_qword_ptr_[rsp+0x48], mov_qword_ptr_[rsp+0x1@@ 7@@ 8]_r12, movzx_eax_byte_ptr_[rax+0x@@ 38], mov_qword_ptr_[rsp+0x1@@ 7@@ 0]_r12, mov_byte_ptr_[rsp+@@ 8]_al, shr_al@@ _7, mov_byte_ptr_[rsp+0x1@@ 9d@@ ]_al, mov_rax_qword_ptr_[rsp+0x18], mov_r14_qword_ptr_[r@@ ax+0x@@ 98], mov_eax_dword_ptr_[rsp+0x@@ 270], lea_r12_[r@@ 14+r@@ 14], mov_dword_ptr_[rsp+0x1@@ b@@ 0]_eax, mov_qword_ptr_[rsp+0x1@@ b8@@ ]_-1, test_r12_r12, jle_0x@@ 53, movabs_rax_0x6@@ 6666@@ 6666@@ 6666@@ 66, cmp_r12_rax, jg_0x@@ cd@@ 5, lea_rdi_[r@@ 12+r@@ 14*8], shl_rdi_3, call_0xfffffffffffe@@ 60@@ c7, mov_rdi_r14, shl_rdi_4, mov_qword_ptr_[rsp+0x1@@ e8]_rax, mov_r13_rax, call_0xfffffffffffe@@ 60@@ b0, mov_qword_ptr_[rsp+0x20@@ 8]_rax, test_rax_rax, je_0x@@ ca@@ 0, test_r13_r13, je_0xc@@ 97, cmp_qword_ptr_[rsp+0x@@ 2@@ 60]_1, mov_qword_ptr_[rsp+0x1@@ e@@ 0]_r12, mov_dword_ptr_[rsp+0x1@@ f0]_1, mov_qword_ptr_[rsp+0x20@@ 0]_r12, jbe_0x@@ f@@ 6d, mov_rax_qword_ptr_[rsp+0x1@@ 50], movabs_rdx@@ _0x1@@ ffffffff@@ ffffffe, cmp_rax_rdx, ja_0x@@ c@@ 52, lea_rdi_[rax@@ *8+8], call_0xfffffffffffe@@ 60@@ 44, mov_qword_ptr_[rsp+0x1@@ c8]_rax, mov_rdi_rax, test_rax_rax, je_0xc@@ 13, mov_eax_dword_ptr_[rsp+0x@@ 270], mov_qword_ptr_[rsp+0xc@@ 8]_rbx, and_eax_1, cmp_eax_1, sbb_eax_eax, and_eax_2, add_eax_4, mov_dword_ptr_[rsp+0x1@@ 8@@ 0]_eax, xor_eax_eax, cmp_rbx_rbp, setl@@ e_al, lea_eax_[rax@@ +rax-1], mov_dword_ptr_[rsp+0x@@ 94]_eax, mov_rax_rbp, cmovle@@ _rax@@ _rbx, mov_dword_ptr_[rsp+0x@@ 90@@ ]_8, mov_qword_ptr_[rsp+0x80]_rax, mov_rax_rbp, cmovge@@ _rax@@ _rbx, cmp_qword_ptr_[rsp+0x@@ 70]_0, mov_qword_ptr_[rsp+0x58]_rax, mov_rax_qword_ptr_[rsp+0x18], mov_eax_dword_ptr_[rax+0x@@ b4], mov_dword_ptr_[rsp+0xb@@ 8]_eax, je_0x57, mov_edx_4, cmp_eax_1, je_0x25, mov_rax_qword_ptr_[rsp+0x48], xor_edx_edx, mov_rax_qword_ptr_[rax+0x18], mov_qword_ptr_[rsp+8]_rax, and_eax@@ _0x4@@ 00000, or_rax@@ _qword_ptr_[rsp+0xa0], sete_dl, shl_edx@@ _2, cmp_rbx_rbp, mov_eax_2, cmovg@@ _eax@@ _dword_ptr_[rsp+0x@@ 54], mov_esi_eax, xor_eax_eax, cmp_qword_ptr_[rsp+0x@@ a0]_0, setne_al, or_eax_edx, or_eax@@ _esi, mov_dword_ptr_[rsp+0x9@@ 0]_eax, cmp_rbx@@ _qword_ptr_[rsp+0x80], setl@@ _dl, cmp_rbx@@ _qword_ptr_[rsp+0x58], setg_al, or_dl_al, jne_0x1@@ 92, cmp_rbx_rbp, lea_rdx_[rsp+0x@@ c8], mov_eax_0, cmovle@@ _rax_rdx, test_rax_rax, mov_qword_ptr_[rsp+0xa8]_rax, mov_eax_dword_ptr_[rsp+0x90], setne@@ _byte_ptr_[rsp+0x@@ bf], cmp_eax_7, je_0xa@@ 07, cmp_eax_8, je_0x1@@ 80, cmp_eax_5, jg_0x@@ c1, cmp_eax_3, jg_0x@@ b@@ 10, mov_rbp@@ _qword_ptr_[rsp+0x70], mov_r13d_dword_ptr_[rsp+0x@@ 94], mov_r14@@ _qword_ptr_[rsp+0x80], mov_rcx_qword_ptr_[rsp+0x58], mov_r12@@ _qword_ptr_[rsp+0x78], jmp_0x43, mov_rax_rbp, cmp_r12_rbx, jle_0x@@ 11, mov_rax_qword_ptr_[rsp+0x1@@ 18], movzx_eax_byte_ptr_[r@@ ax+rdx], add_rax_rbp, cmp_byte_ptr_[rax]_0, jne_0x12@@ c, movsxd_rax_r13d, add_rbx_rax, mov_qword_ptr_[rsp+0xc@@ 8]_rbx, cmp_rbx_r14, jl@@ _0x@@ e7, cmp_rbx@@ _rcx, jg_0x@@ de, mov_rdx_rbx, sub_rdx_qword_ptr_[r@@ sp+0x1@@ 38], cmp_qword_ptr_[rsp+0x1@@ 48]_rdx, ja_0xffffffffffffff@@ ad, mov_edx_dword_ptr_[rsp+0x@@ 270], mov_rsi_rbx, mov_rdi_r15, mov_qword_ptr_[rsp+8]_rcx, call_0xffffffffffffb0@@ d9, test_eax_eax, mov_rcx_qword_ptr_[rsp+8], jne_0x1@@ 16@@ 6, mov_rdx_rbx, sub_rdx_qword_ptr_[r@@ sp+0x1@@ 38], jmp_0xffffffffffffff7c, cmp_dword_ptr_[rsp+0x@@ 90@@ ]_6, jne_0xffffffffffffff@@ 46, xor_ecx_ecx, mov_rax_rbx, cmp_qword_ptr_[rsp+0x@@ 5@@ 8]_rbx, jle_0x@@ 97, mov_rsi_qword_ptr_[rsp+0x70], mov_r8@@ _qword_ptr_[rsp+0x58], mov_rdi_qword_ptr_[rsp+0x88], movzx_edx_byte_ptr_[r@@ di+rax], cmp_byte_ptr_[rsi@@ +rdx]_0, jne_0x68, inc_rax, mov_ecx_1, cmp_rax@@ _r8, jne_0xffffffffffffffeb, mov_rax_qword_ptr_[rsp+0x58], mov_rbx_qword_ptr_[rsp+0x58], mov_qword_ptr_[rsp+0xc8]_rax, xor_eax_eax, cmp_rbx@@ _qword_ptr_[rsp+0x78], jl@@ _0xe@@ 78, mov_rcx_qword_ptr_[rsp+0x@@ a0], test_rcx_rcx, je_6, movzx_eax_byte_ptr_[r@@ cx+rax], mov_rcx_qword_ptr_[rsp+0x@@ 70], cmp_byte_ptr_[rcx@@ +rax]_0, jne_0x36, mov_dword_ptr_[rsp+0x@@ 54]_1, mov_rdi_qword_ptr_[rsp+0x1@@ c8], jmp_0x3@@ d0, test_cl_cl, je_0x14, mov_qword_ptr_[rsp+0xc8]_rax, mov_rbx_rax, cmp_qword_ptr_[rsp+0x@@ 5@@ 8]_rbx, je_0xffffffffffffff@@ a5, mov_edx_dword_ptr_[rsp+0x@@ 270], mov_rsi_rbx, mov_rdi_r15, call_0xffffffffffffa@@ fe@@ d, mov_dword_ptr_[rsp+0x54]_eax, test_eax_eax, jne_0x3@@ 92, cmp_dword_ptr_[rsp+0x@@ b@@ 8]_1, je_0x1e, cmp_qword_ptr_[rsp+0x1@@ 40]_0, je_0x13, mov_rax_qword_ptr_[rsp+0x1@@ 20], cmp_dword_ptr_[rax@@ ]_-1, je_0x@@ 80@@ 4, movzx_eax_byte_ptr_[rsp+0x@@ 50], mov_rbp_qword_ptr_[r@@ sp+0x1@@ a8], and_eax_1, mov_rbx_qword_ptr_[rbp+0x@@ 48], mov_byte_ptr_[rsp+0x@@ be@@ ]_al, mov_rax_qword_ptr_[rsp+0x1@@ 58], cmp_byte_ptr_[rbx+0x@@ 68]_0, mov_dword_ptr_[rsp+0x1@@ f0]_0, mov_qword_ptr_[rsp+0x1@@ d8]_0, mov_qword_ptr_[rsp+0x1@@ d0]_0, mov_qword_ptr_[rsp+0x10]_rax, mov_dword_ptr_[rsp+0x@@ c0]_0, jns@@ _0x44, mov_edx_dword_ptr_[r@@ sp+0x1@@ b0], lea_rsi@@ _[rax-1], mov_rdi_r15, call_0xffffffffffffac@@ 4c, test_al_1, jne_0xc@@ 25, test_eax_eax, je_0x25, mov_edx_eax, and_edx@@ _6, cmp_edx@@ _6, je_0x@@ fc@@ 3, test_al_2, jne_0xc@@ fb, test_al_4, jne_0x@@ d0@@ 3, mov_rax_qword_ptr_[rsp+0x1@@ c8], test_rax_rax, je_0x19, mov_rcx_qword_ptr_[rsp+0x10], cmp_qword_ptr_[rbp+0x@@ 98]_0, mov_qword_ptr_[rax@@ +rcx*@@ 8]_rbx, jne_0xf@@ 4a, movzx_eax_byte_ptr_[rsp+0x@@ bf], mov_byte_ptr_[rsp+0x@@ bd@@ ]_al, movzx_eax_byte_ptr_[rbx+0x@@ 68], mov_qword_ptr_[rsp+0x20]_0, mov_r12@@ _-1, test_al_0x10, jne_0xc@@ 4f, mov_rbp_qword_ptr_[r@@ sp+0x1@@ 58], mov_rax_qword_ptr_[rsp+0xa8], cmp_rbp@@ _qword_ptr_[r@@ sp+0x1@@ 78], mov_qword_ptr_[rsp+0x60]_rax, jge_0x@@ 198, lea_rax_[rsp+0xc0], mov_qword_ptr_[rsp+0x30]_rax, mov_qword_ptr_[rsp+0x2@@ 8]_r12, jmp_0x6@@ f, cmp_r12_rbx, sete_al, and@@ _byte_ptr_[rsp+0x@@ bd@@ ]_al, mov_rax_qword_ptr_[rsp+8], mov_rbp_qword_ptr_[r@@ sp+0x1@@ 58], cmove_rax@@ _qword_ptr_[rsp+0x10], mov_qword_ptr_[rsp+0x10]_rax, movzx_eax_byte_ptr_[r@@ 12+0x@@ 68], test_al_0x10, je_0x2d, test_al_al, js_0x2@@ bf, mov_edx_dword_ptr_[rsp+0x@@ 50], test_edx_edx, je_0x@@ c0@@ 3, mov_qword_ptr_[rsp+0x2@@ 8]_rbp, mov_qword_ptr_[rsp+0x@@ 20]_1, mov_qword_ptr_[rsp+0x60]_0, cmp_qword_ptr_[rsp+0x1@@ 7@@ 8]_rbp, jle_0x@@ 27@@ e, mov_rbx_r12, lea_rax_[r@@ bp+1], mov_qword_ptr_[rsp+8]_rax, mov_rsi_rax, mov_rax_qword_ptr_[rsp+0x1@@ 50], cmp_rsi_rax, jge_0x@@ 29@@ 6, mov_rax_qword_ptr_[rsp+0x1@@ 40], cmp_qword_ptr_[rsp+@@ 8]_rax, jge_0x@@ 5@@ 9b, mov_r8_rbp, test_byte_ptr_[rbx+0x@@ 6@@ 8]_0x20, jne_0x2@@ be, lea_rax_[r@@ 8+1], mov_qword_ptr_[rsp+0x1@@ 58]_rax, mov_rax_qword_ptr_[rsp+0x1@@ 18], movzx_ebp_byte_ptr_[r@@ ax+r@@ 8], mov_rax_qword_ptr_[rbx+0x58], test_rax_rax, je_0x5@@ 28, mov_r12_qword_ptr_[r@@ ax+r@@ bp*8], cmp_qword_ptr_[rsp+0x1@@ c8]_0, je_0x15, mov_rdi_qword_ptr_[rsp+0x30], mov_rdx_r12, mov_rsi_r15, call_0xfffffffffffff@@ 1e8, mov_r12_rax, test_r12_r12, jne_0xffffffffffffff@@ 0d, mov_esi_dword_ptr_[rsp+0x@@ c0], mov_rdi_qword_ptr_[rsp+0x1@@ c8], test_esi_esi, jne_0x@@ 6f@@ 8, test_rdi_rdi, je_0x1@@ cd, movzx_eax_byte_ptr_[rsp+0x@@ be], xor_eax_1, test_byte_ptr_[rsp+0x@@ 20@@ ]_al, jne_0x1@@ b8, mov_rbp@@ _qword_ptr_[rsp+0x30], mov_rcx_qword_ptr_[rsp+0x1@@ d0], mov_rax_qword_ptr_[rsp+0x1@@ 58], xor_edx_edx, jmp_0x1b, cmp_qword_ptr_[r@@ di@@ +rax*@@ 8]_0, mov_edx_1, jne_0x13@@ e, mov_rsi_rax, inc_rax, cmp_rcx_rax, jge_0xffffffffffffff@@ e7, mov_r12@@ _qword_ptr_[rsp+0x28], test_dl_dl, je_0xa, mov_qword_ptr_[rsp+0x1@@ 5@@ 8]_rsi, mov_rax_qword_ptr_[rsp+0x60], test_rax_rax, je_0xa, mov_rbx_qword_ptr_[rsp+0x10], add_qword_ptr_[r@@ ax]@@ _rbx, cmp_r12@@ _-1, je_0x5@@ 36, cmp_r12@@ _-2, je_0x6@@ 84, mov_rax_qword_ptr_[rsp+0x48], mov_qword_ptr_[rsp+0x1@@ b@@ 8]_r12, test_byte_ptr_[rax+0x@@ 38]@@ _0x10, jne_0x65, cmp_qword_ptr_[rsp+0x@@ 2@@ 60]_1, jbe_0x@@ 5a, mov_rbx_qword_ptr_[rsp+0x1@@ c8], mov_rcx_r12, mov_rax_qword_ptr_[r@@ bx+r@@ 12*8], mov_rdi_r15, mov_rsi_qword_ptr_[rax+0x10], lea_rdx_[r@@ ax+0x18], call_0xffffffffffffa@@ be@@ 6, mov_qword_ptr_[rsp+0x1@@ c0]_rax, mov_r14_rax, mov_rax_qword_ptr_[rsp+0x18], test_byte_ptr_[rax+0x@@ b0]_1, jne_0x@@ 6f@@ 1, mov_rax_qword_ptr_[rsp+0x18], cmp_qword_ptr_[rax+0x@@ 98]_0, jne_0x@@ 6d@@ 6, jmp_0x1c, mov_rax_qword_ptr_[rsp+0x18], cmp_qword_ptr_[rax+0x@@ 98]_0, jne_0x6@@ 93, cmp_qword_ptr_[rsp+0x@@ 26@@ 0]_0, jne_0xa@@ 95, mov_rdi_qword_ptr_[rsp+0x1@@ c8], call_0xfffffffffffe@@ 55@@ f8, mov_rax_qword_ptr_[rsp+0x18], cmp_qword_ptr_[rax+0x@@ 98]_0, jne_0x@@ 8e@@ e, mov_rdi_r15, call_0xffffffffffff8@@ 96@@ d, mov_rax_qword_ptr_[rsp+0x@@ 218], xor_rax_qword_ptr_fs:[0x28], jne_0xd@@ 29, mov_eax_dword_ptr_[rsp+0x54], add_rsp_0x2@@ 28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, xor_edx_edx, mov_rsi_r15, mov_rdi_rbp, mov_qword_ptr_[rsp+0x1@@ 58]_rax, call_0xfffffffffffff0@@ 28, mov_ecx_dword_ptr_[rsp+0x@@ c0], test_ecx_ecx, jne_0x1a, test_rax_rax, jne_0x@@ 97@@ d, mov_rdi_qword_ptr_[rsp+0x1@@ c8], jmp_0xfffffffffffffe@@ 6a, mov_r12_rax, test_rax_rax, jne_0xfffffffffffffd@@ 2a, mov_r12@@ _qword_ptr_[rsp+0x28], jmp_0xfffffffffffffe@@ 97, mov_rsi_qword_ptr_[r@@ 12+0x10], lea_rdx_[r@@ 12+0x18], mov_rcx_rbp, mov_rdi_r15, call_0xffffffffffffaa@@ c0, test_rax_rax, je_0xfffffffffffffd@@ 52, jmp_0xfffffffffffffd@@ 29, cmp_rax_qword_ptr_[r@@ sp+0x1@@ 68], jge_0xffffffffffff@@ fd@@ 68, mov_eax_dword_ptr_[rsp+8], mov_rdi_r15, lea_esi_[rax+1], call_0xffffffffffff80@@ d0, mov_dword_ptr_[rsp+0xc@@ 0]_eax, test_eax_eax, jne_0x@@ 8a@@ a, mov_rbp_qword_ptr_[r@@ sp+0x1@@ 58], mov_r8_rbp, test_byte_ptr_[rbx+0x@@ 6@@ 8]_0x20, je_0xfffffffffffffd@@ 55, cmp_qword_ptr_[rbx+0x10]_0, mov_r12_qword_ptr_[r@@ sp+0x1@@ a8], jle_0x@@ 44@@ 3, lea_rax_[r@@ 12+0x@@ d8], mov_qword_ptr_[rsp+0x68]_rax, xor_r13d_r13d, jmp_0x1@@ 70, test_al_1, je_0x1@@ 54, and_edx@@ _8, jne_0x14@@ b, test_cl@@ _0x20, je_0xa, test_al_2, je_0x1@@ 3e, and_ecx@@ _0x80, je_0xc, test_al_8, je_0x12@@ e, mov_rsi_qword_ptr_[rsp+0x68], mov_rcx_r15, mov_rdx_rbp, mov_rdi_r14, call_0xffffffffffffd@@ 1e@@ 2, test_eax_eax, je_0x109, mov_r14_qword_ptr_[r@@ sp+0x1@@ 58], movsxd_r8@@ _eax, add_r14@@ _r8, cmp_dword_ptr_[rsp+0x1@@ f@@ 0]_eax, cmovge@@ _eax@@ _dword_ptr_[r@@ sp+0x1@@ f0], mov_rsi_r14, mov_rdi_r15, mov_dword_ptr_[rsp+0x1@@ f@@ 0]_eax, call_0xffffffffffff8@@ 16@@ b, mov_dword_ptr_[rsp+0xc@@ 4]_eax, test_eax_eax, jne_0x3@@ 6d, mov_rax_qword_ptr_[r12+0x18], mov_r10_qword_ptr_[r@@ sp+0x1@@ c8], mov_rax_qword_ptr_[rax+r@@ bp*8], lea_rbp_[r@@ 14*8], lea_rdx_[rax+rax*2], mov_rax_qword_ptr_[r12+0x@@ 30], add_r10@@ _rbp, lea_rdx_[rax@@ +rdx*8], mov_rax_qword_ptr_[r@@ 10], mov_qword_ptr_[rsp+0x38]_r10, test_rax_rax, je_0x123, lea_r8_[rsp+0x@@ d0], mov_rsi_qword_ptr_[r@@ ax+0x50], mov_rdi_r8, mov_qword_ptr_[rsp+0x3@@ 8]_r8, call_0xffffffffffff9b@@ 29, test_eax_eax, mov_dword_ptr_[rsp+0xc@@ 4]_eax, mov_r8_qword_ptr_[rsp+0x38], jne_0x30@@ 6, mov_edx_dword_ptr_[r@@ sp+0x1@@ b0], lea_rsi_[r@@ 14-1], mov_rdi_r15, mov_qword_ptr_[rsp+0x3@@ 8]_r8, call_0xffffffffffffa@@ 6f@@ d, mov_r8_qword_ptr_[rsp+0x38], mov_ecx_eax, mov_rdx_r8, lea_rdi_[rsp+0x@@ c4], mov_rsi_r12, add_rbp@@ _qword_ptr_[r@@ sp+0x1@@ c8], call_0xffffffffffff9c@@ 4b, mov_qword_ptr_[rbp]_rax, mov_rdi_qword_ptr_[rsp+0xe0], call_0xfffffffffffe5@@ 37@@ a, mov_rdx_qword_ptr_[rsp+0x1@@ c8], cmp_qword_ptr_[r@@ dx+r@@ 14*@@ 8]_0, je_0xfb, mov_r8_qword_ptr_[r@@ sp+0x1@@ 58], inc@@ _r13, cmp_r13@@ _qword_ptr_[r@@ bx+0x10], jge_0x@@ 2c@@ 3, mov_rax_qword_ptr_[rbx+0x18], mov_r14_qword_ptr_[r@@ 12], mov_rbp_qword_ptr_[r@@ ax+r@@ 13*8], mov_rax_rbp, shl_rax_4, add_rax_r14, test_byte_ptr_[rax+0x@@ a@@ ]_0x10, je_0xffffffffffffffd9, mov_ecx_dword_ptr_[rax+8], test@@ _ecx@@ _0x3@@ ff@@ 00, mov_dword_ptr_[rsp+0x4@@ 4]_ecx, je_0xfffffffffffffea@@ 4, mov_edx_dword_ptr_[r@@ sp+0x1@@ b0], mov_rsi_r8, mov_rdi_r15, mov_qword_ptr_[rsp+0x3@@ 8]_r8, call_0xffffffffffffa@@ 65@@ c, mov_ecx_dword_ptr_[rsp+0x@@ 44], mov_r8_qword_ptr_[rsp+0x38], shr_ecx@@ _8, mov_edx_ecx, and@@ _cx@@ _0x3ff, test_dl_4, jne_0xfffffffffffffe@@ 41, and_edx@@ _8, je_0xfffffffffffffe@@ 49, test_al_1, je_0xfffffffffffffe@@ 41, jmp_0xffffffffffffff80, movdqu_xmm1_xmmword_ptr_[r@@ dx], lea_rsi_[r@@ 14-1], movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm1, mov_rax_qword_ptr_[rdx+0x10], mov_edx_dword_ptr_[r@@ sp+0x1@@ b0], mov_rdi_r15, mov_qword_ptr_[rsp+0xe0]_rax, call_0xffffffffffffa@@ 5f@@ a, lea_r8_[rsp+0x@@ d0], mov_rdx_r8, mov_ecx_eax, lea_rdi_[rsp+0x@@ c4], mov_rsi_r12, call_0xffffffffffff9b@@ 4d, mov_r10_qword_ptr_[rsp+0x38], mov_rdx_qword_ptr_[rsp+0x1@@ c8], mov_qword_ptr_[r@@ 10]_rax, cmp_qword_ptr_[r@@ dx+r@@ 14*@@ 8]_0, jne_0xffffffffffffff@@ 11, mov_eax_dword_ptr_[rsp+0x@@ c4], test_eax_eax, je_0xffffffffffffff@@ 02, jmp_0x1@@ a6, mov_r12_qword_ptr_[r@@ bx+0x60], test_r12_r12, je_0x1@@ d9, mov_rax_qword_ptr_[rsp+0x1@@ 58], mov_edx_dword_ptr_[r@@ sp+0x1@@ b0], lea_rsi@@ _[rax-1], mov_rdi_r15, call_0xffffffffffffa@@ 57@@ d, test_al_1, je_0x1@@ a6, mov_r12_qword_ptr_[r@@ 12+r@@ bp@@ *8+0x@@ 800], jmp_0xfffffffffffffaa@@ a, cmp_rax_qword_ptr_[r@@ sp+0x1@@ 68], jge_0xffffffffffff@@ fa@@ 63, jmp_0xfffffffffffffc@@ e8, lea_r10_[rsp+0x@@ d0], pxor_xmm0_xmm0, mov_rdi_r15, mov_rsi_r10, mov_qword_ptr_[rsp+0xd@@ 0]_r13, mov_qword_ptr_[rsp+0xd@@ 8]_0, mov_qword_ptr_[rsp+0xe@@ 0]_r14, mov_qword_ptr_[rsp+0xe@@ 8]_r12, mov_qword_ptr_[rsp+0x1@@ 00]_0, movaps_xmmword_ptr_[rsp+0x@@ f0@@ ]_xmm0, call_0xffffffffffffee@@ 3e, mov_rdi_qword_ptr_[r@@ sp+0x100], mov_ebx_eax, mov_dword_ptr_[rsp+8]_eax, call_0xfffffffffffe5@@ 19@@ b, test_ebx_ebx, jne_0x3c@@ a, cmp_qword_ptr_[r@@ 13]_0, jne_0x40@@ 1, mov_rdi_r13, call_0xfffffffffffe5@@ 180, mov_rdi_r15, call_0xffffffffffff8@@ 6c@@ 5, mov_rbx_qword_ptr_[rsp+0x@@ c8], movsxd_rax_dword_ptr_[rsp+0x@@ 94], add_rbx_rax, mov_qword_ptr_[rsp+0xc@@ 8]_rbx, cmp_rbx@@ _qword_ptr_[rsp+0x80], jl_0xffffffffffff@@ f7@@ 75, cmp_rbx@@ _qword_ptr_[rsp+0x58], jg_0xffffffffffff@@ f7@@ 6a, mov_eax_dword_ptr_[rsp+0x90], cmp_eax_7, jne_0xfffffffffffff@@ 60@@ 5, xor_ecx_ecx, mov_rax_rbx, cmp_qword_ptr_[rsp+0x@@ 5@@ 8]_rbx, jle_0xffffffffffff@@ f7@@ 71, mov_rsi_qword_ptr_[rsp+0x70], mov_rdi_qword_ptr_[rsp+0xa0], mov_r9@@ _qword_ptr_[rsp+0x58], mov_r8@@ _qword_ptr_[rsp+0x88], movzx_edx_byte_ptr_[r@@ 8+rax], movzx_edx_byte_ptr_[r@@ di+rdx], cmp_byte_ptr_[rsi@@ +rdx]_0, jne_0xfffffffffffff7@@ 33, inc_rax, mov_ecx_1, cmp_rax@@ _r9, jne_0xffffffffffffffe2, jmp_0xfffffffffffff@@ 6c@@ 7, mov_qword_ptr_[rsp+0x70]_0, jmp_0xfffffffffffff@@ 15@@ c, mov_rdx_qword_ptr_[rsp+0x1@@ c8], mov_dword_ptr_[rsp+0xc@@ 0]_eax, test_rdx_rdx, je_0x6e, xor_r12d_r12d, jmp_0xfffffffffffff94@@ 6, mov_dword_ptr_[rsp+0x@@ 54]_1, jmp_0xfffffffffffffa@@ c0, mov_dword_ptr_[rsp+0x@@ c0]_0, jmp_0xfffffffffffff8e@@ d, mov_r12_qword_ptr_[r@@ 12+r@@ bp*8], jmp_0xfffffffffffff90@@ e, mov_rdi_qword_ptr_[rsp+0x1@@ a8], mov_rsi_rbx, call_0xffffffffffffb0@@ b5, test_al_al, jne_0xfffffffffffff@@ 8d@@ f, cmp_qword_ptr_[rsp+0x1@@ c8]_0, mov_dword_ptr_[rsp+0xc@@ 0]@@ _0xc, jne_0xffffffffffffff98, xor_edi_edi, mov_dword_ptr_[rsp+0x5@@ 4]@@ _0xc, jmp_0xfffffffffffffa@@ 3e, mov_rdi_r13, call_0xfffffffffffe@@ 50@@ 2e, mov_dword_ptr_[rsp+0x5@@ 4]@@ _0xc, mov_rdi_qword_ptr_[rsp+0x1@@ c8], jmp_0xfffffffffffffa@@ 18, cmp_qword_ptr_[rsp+0x@@ 8@@ 0]_rbx, jg_0xffffffffffff@@ f6@@ 28, mov_rdi_qword_ptr_[rsp+0x70], mov_rsi_qword_ptr_[rsp+0xa0], mov_r9@@ _qword_ptr_[rsp+0x80], mov_r10@@ _qword_ptr_[rsp+0x88], mov_r8@@ _qword_ptr_[rsp+0x78], xor_ecx_ecx, mov_rax_rbx, jmp_0x14, dec_rax, mov_ecx_1, cmp_rax@@ _r9, jl@@ _0x3@@ 5d, xor_edx_edx, cmp_rax@@ _r8, jg@@ e_@@ 7, movzx_edx_byte_ptr_[r@@ 10@@ +rax], test_rsi_rsi, je_6, movzx_edx_byte_ptr_[r@@ si+rdx], cmp_byte_ptr_[r@@ di+rdx@@ ]_0, je_0xffffffffffffffd6, test_cl_cl, je_0xfffffffffffff@@ 5f8, mov_qword_ptr_[rsp+0xc8]_rax, mov_rbx_rax, jmp_0xfffffffffffff@@ 5e@@ 7, mov_rbx_qword_ptr_[rsp+0x1@@ c8], mov_rcx_r12, mov_rax_qword_ptr_[r@@ bx+r@@ 12*8], mov_rdi_r15, mov_rsi_qword_ptr_[rax+0x10], lea_rdx_[r@@ ax+0x18], call_0xffffffffffffa@@ 4e@@ e, mov_qword_ptr_[rsp+0x1@@ c0]_rax, mov_r14_qword_ptr_[r@@ sp+0x1@@ c0], mov_rax_qword_ptr_[rsp+0x1@@ a8], mov_qword_ptr_[rsp+0x10]_rax, movabs_rax_0x1@@ ffffffff@@ ffffffe, cmp_r12_rax, ja_0x3@@ 4f, lea_rbx_[r@@ 12+1], lea_rbp_[r@@ bx*8], mov_rdi_rbp, call_0xfffffffffffe5@@ 30@@ 9, mov_r13_rax, test_rax_rax, je_0xfffffffffffffe@@ fe, mov_rax_qword_ptr_[rsp+0x10], cmp_qword_ptr_[rax+0x@@ 98]_0, je_0xfffffffffffffd@@ 13, mov_rdi_rbp, call_0xfffffffffffe5@@ 2e@@ 2, mov_qword_ptr_[rsp+0x28]_rax, mov_rbp_rax, test_rax_rax, je_0xfffffffffffffe@@ c1, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+0x30]_rax, lea_r10_[rsp+0x@@ d0], mov_qword_ptr_[rsp+0x20]@@ _rbx, mov_rbx_rbp, mov_rbp@@ _r10, mov_rax_qword_ptr_[rsp+0x20], xor_esi_esi, lea_rdx_[rax*8], mov_rdi_rbx, call_0xfffffffffffe5@@ 12a, mov_rax_qword_ptr_[rsp+0x30], mov_qword_ptr_[rsp+0xd@@ 0]_r13, mov_qword_ptr_[rsp+0xd@@ 8]_rbx, mov_qword_ptr_[rsp+0xe@@ 0]_r14, mov_qword_ptr_[rsp+0xe@@ 8]_r12, mov_qword_ptr_[rax+0x10]_0, pxor_xmm0_xmm0, movaps_xmmword_ptr_[r@@ ax]_xmm0, mov_rsi_rbp, mov_rdi_r15, call_0xffffffffffffe@@ b0@@ b, mov_rdi_qword_ptr_[r@@ sp+0x100], mov_dword_ptr_[rsp+8]_eax, call_0xfffffffffffe@@ 4e@@ 6a, mov_eax_dword_ptr_[rsp+8], test_eax_eax, jne_0x9e, cmp_qword_ptr_[r@@ 13]_0, jne_0x5d, cmp_qword_ptr_[rbx]_0, jne_0x57, dec@@ _r12, cmp_r12@@ _-1, je_0x29, mov_rdx_qword_ptr_[rsp+0x1@@ c8], mov_rax_qword_ptr_[r@@ dx+r@@ 12*8], test_rax_rax, je_0xc, test_byte_ptr_[rax+0x@@ 6@@ 8]_0x10, jne_0x1@@ 9b, dec@@ _r12, cmp_r12@@ _-1, jne_0xffffffffffffffe6, mov_rdi_r13, call_0xfffffffffffe@@ 4e@@ 19, mov_rdi_rbx, call_0xfffffffffffe@@ 4e@@ 11, mov_rdi_r15, call_0xffffffffffff8@@ 35@@ 9, mov_rbx_qword_ptr_[rsp+0x@@ c8], jmp_0xfffffffffffffc@@ 94, mov_rbp_rbx, mov_rbx_qword_ptr_[rsp+0x20], mov_rdi_qword_ptr_[rsp+0x10], mov_rcx_rbx, mov_rdx_rbp, mov_rsi_r13, call_0xffffffffffff9b@@ a1, mov_ebx_eax, mov_rdi_rbp, mov_dword_ptr_[rsp+8]_eax, call_0xfffffffffffe4@@ dd3, test_ebx_ebx, je_0x44, mov_qword_ptr_[rsp+0x28]_0, mov_rdi_r13, call_0xfffffffffffe@@ 4d@@ be, mov_rdi_qword_ptr_[rsp+0x28], call_0xfffffffffffe@@ 4d@@ b4, cmp_dword_ptr_[rsp+@@ 8]_1, je_0xfffffffffffffc@@ 32, mov_eax_dword_ptr_[rsp+8], mov_rdi_qword_ptr_[rsp+0x1@@ c8], mov_dword_ptr_[rsp+0x54]_eax, jmp_0xfffffffffffff7@@ 9c, mov_rdi_qword_ptr_[rsp+0x1@@ c8], call_0xfffffffffffe@@ 4d@@ 80, mov_qword_ptr_[rsp+0x1@@ c@@ 8]_r13, mov_qword_ptr_[rsp+0x1@@ c@@ 0]_r14, mov_qword_ptr_[rsp+0x1@@ b@@ 8]_r12, jmp_0xfffffffffffff@@ 74@@ e, cmp_qword_ptr_[r@@ cx+0x1@@ 0]_0, je_0xc, cmp_byte_ptr_[rdi+0x@@ 38]_0, js_0xffffffffffff@@ ee@@ 77, test_rbx_rbx, je_0x13, mov_dword_ptr_[rsp+0x@@ 54]_1, test_rbp_rbp, jne_0xfffffffffffff7@@ 5f, xor_ebp_ebp, xor_ebx_ebx, jmp_0xffffffffffffee@@ 57, mov_rax_qword_ptr_[rsp+0x18], test_byte_ptr_[rax+0x@@ b0@@ ]_2, jne_0xfffffffffffff0@@ 8d, mov_qword_ptr_[rsp+0x1@@ c8]_0, jmp_0xfffffffffffff0@@ b7, mov_rdi_r15, call_0xffffffffffff8@@ 24@@ 5, mov_rdi_qword_ptr_[rsp+0x@@ 208], call_0xfffffffffffe@@ 4c@@ e8, mov_rdi_qword_ptr_[rsp+0x1@@ e8], call_0xfffffffffffe@@ 4c@@ db, jmp_0xfffffffffffff6f@@ 6, mov_rbx_qword_ptr_[rbp+0x@@ 50], test_rbx_rbx, jne_0xfffffffffffff@@ 401, mov_eax_dword_ptr_[rsp+0x@@ c0], mov_dword_ptr_[rsp+0x54]_eax, cmp_eax_0xc, je_0xfffffffffffff@@ 6b@@ 5, lea_rcx_[rip+0x@@ db@@ 58], mov_edx_0x4@@ 35, lea_rsi_[rip+0xd@@ 6@@ 3c], lea_rdi_[rip+0xd@@ 68@@ 5], call_0xfffffffffffe4@@ ee@@ 5, mov_rsi_qword_ptr_[rax+0x10], lea_rdx_[r@@ ax+0x18], mov_rcx_r12, mov_rdi_r15, call_0xffffffffffffa@@ 20@@ 2, mov_r14_rax, lea_rax_[r@@ 12+1], mov_qword_ptr_[rsp+0x20]_rax, jmp_0xfffffffffffffd@@ a4, mov_qword_ptr_[rsp+0xc8]_rax, jmp_0xfffffffffffff@@ 288, cmp_eax_0xc, je_0xfffffffffffffc@@ 35, lea_rcx_[rip+0x@@ da@@ f8], mov_edx_0x4@@ 6c, lea_rsi_[rip+0xd@@ 5d@@ c], lea_rdi_[rip+0x@@ d6@@ 25], call_0xfffffffffffe@@ 4e@@ 85, cmp_byte_ptr_[rbx+0x@@ 68]_0, js_0x7@@ c, mov_edi_dword_ptr_[rsp+0x@@ 50], mov_qword_ptr_[rsp+0x@@ 20]_1, mov_r12_qword_ptr_[rsp+0x10], test_edi_edi, jne_0xfffffffffffff@@ 3@@ 9d, jmp_0xfffffffffffff@@ 55@@ e, mov_r12_rax, jmp_0xfffffffffffff@@ 3c@@ 5, mov_r12_rbp, jmp_0xfffffffffffff@@ 54@@ b, mov_dword_ptr_[rsp+0x5@@ 4]@@ _0xc, mov_rdi_rbx, jmp_0xfffffffffffff@@ 5e@@ d, mov_rbx_qword_ptr_[rbp+0x@@ 58], jmp_0xffffffffffffff10, mov_rdx_qword_ptr_[rbx+0x@@ 50], lea_rdi_[rsp+0x@@ c0], mov_ecx_eax, mov_rsi_rbp, call_0xffffffffffff94@@ 7f, mov_rbx_rax, jmp_0xfffffffffffffeeb, mov_rsi_qword_ptr_[rbx+0x10], mov_rcx_qword_ptr_[rsp+0x10], lea_rdx_[r@@ bx+0x18], mov_rdi_r15, call_0xffffffffffffa@@ 120, mov_qword_ptr_[rsp+0x20]_rax, test_rax_rax, je_0xfffffffffffff@@ 3@@ 1a, jmp_0xffffffffffffff63, mov_rax_qword_ptr_[rsp+0x88], movzx_eax_byte_ptr_[r@@ ax+r@@ bx], jmp_0xfffffffffffff@@ 18@@ 2, mov_rdx_qword_ptr_[rsp+0x@@ 260], mov_rbx_qword_ptr_[rsp+0x@@ b0], shl_rdx_4, add_rdx_rbx, cmp_qword_ptr_[rsp+0x@@ 2@@ 60]_1, lea_rax_[rbx+0x10], jbe_0x@@ 2@@ 64, mov_qword_ptr_[rax+@@ 8]_-1, mov_qword_ptr_[rax@@ ]_-1, add_rax_0x10, cmp_rdx_rax, jne_0xffffffffffffffea, mov_rbx_qword_ptr_[rsp+0x@@ b0], mov_rax_qword_ptr_[rsp+0x1@@ b8], mov_qword_ptr_[rbx]_0, mov_qword_ptr_[rbx+8]_rax, mov_rax_qword_ptr_[rsp+0x48], test_byte_ptr_[rax+0x@@ 38]@@ _0x10, jne_0x2@@ 38, cmp_qword_ptr_[rsp+0x@@ 2@@ 60]_1, je_0x2@@ 29, mov_rax_qword_ptr_[rsp+0x18], xor_r8d_r8d, test_byte_ptr_[rax+0x@@ b0]_1, je_0x11, xor_r8d_r8d, cmp_qword_ptr_[rax+0x@@ 98]_0, setg@@ _r8b, mov_rbx_qword_ptr_[rsp+0x@@ b0], mov_rdx_qword_ptr_[rsp+0x@@ 260], mov_rdi_qword_ptr_[rsp+0x48], mov_rcx_rbx, mov_rsi_r15, call_0xffffffffffffd@@ 25@@ c, test_eax_eax, jne_0x2@@ 1c, mov_rdx_qword_ptr_[rbx], movzx_r8d_byte_ptr_[r@@ sp+0x1@@ 9c], mov_r9_qword_ptr_[r@@ sp+0x1@@ 40], mov_r11_qword_ptr_[r@@ sp+0x1@@ 28], mov_r10_qword_ptr_[r@@ sp+0x1@@ 48], mov_rdi_qword_ptr_[rsp+0x@@ c8], mov_rax_qword_ptr_[rsp+0xb0], mov_rbx_qword_ptr_[rsp+0x@@ 260], xor_ecx_ecx, jmp_0xc, mov_rdx_qword_ptr_[rax], cmp_rdx_-1, je_0x1c, mov_rsi_qword_ptr_[rax+8], test_r8b_r8b, jne_0x1@@ 93, add_rdx@@ _rdi, add_rsi_rdi, mov_qword_ptr_[rax]_rdx, mov_qword_ptr_[rax+@@ 8]_rsi, inc_rcx, add_rax_0x10, cmp_rcx@@ _rbx, jne_0xffffffffffffffd3, cmp_qword_ptr_[rsp+0x@@ 98]_0, jle_0x@@ 48, mov_rdx_qword_ptr_[rsp+0x98], mov_rax_qword_ptr_[rsp+0x@@ 260], mov_rbx_qword_ptr_[rsp+0x@@ b0], add_rdx@@ _qword_ptr_[rsp+0x@@ 260], shl_rax_4, shl_rdx_4, add_rax_rbx, add_rdx_rbx, mov_qword_ptr_[rax@@ ]_-1, mov_qword_ptr_[rax+@@ 8]_-1, add_rax_0x10, cmp_rdx_rax, jne_0xffffffffffffffea, mov_rax_qword_ptr_[rsp+0x18], mov_rdi_qword_ptr_[rsp+0x1@@ c8], mov_rsi_qword_ptr_[rax+0x@@ e0], test_rsi_rsi, je_0xfffffffffffff@@ 3d@@ 9, cmp_qword_ptr_[rsp+0x@@ 2@@ 60]_1, jbe_0xfffffffffffff@@ 3c@@ a, mov_rax_qword_ptr_[rsp+0x@@ 260], mov_rcx_qword_ptr_[rsp+0x@@ b0], lea_r8@@ _[rax-1], xor_eax_eax, mov_rdx_qword_ptr_[r@@ si+rax*8], cmp_rdx_rax, je_0x29, shl_rdx_4, mov_rdx_qword_ptr_[r@@ dx@@ +rcx@@ +0x10], mov_r9_rax, shl@@ _r9@@ _4, mov_qword_ptr_[rcx@@ +r@@ 9+0x1@@ 0]_rdx, mov_rdx_qword_ptr_[r@@ si+rax*8], shl_rdx_4, mov_rdx_qword_ptr_[r@@ dx@@ +rcx@@ +0x18], mov_qword_ptr_[rcx@@ +r@@ 9+0x1@@ 8]_rdx, inc_rax, cmp_rax@@ _r8, jne_0xffffffffffffffca, jmp_0xfffffffffffff@@ 370, lea_rbp_[r@@ bx+0x10], lea_r12_[r@@ bx+0x18], xor_ecx_ecx, mov_rdx_r12, mov_rsi_rbp, mov_rdi_r15, call_0xffffffffffff9b@@ 5d, mov_dword_ptr_[rsp+0xc@@ 0]_eax, test_eax_eax, jne_0x72, movzx_eax_byte_ptr_[rbx+0x@@ 68], test_al_0x40, jne_0x29, mov_byte_ptr_[rsp+0x@@ bd@@ ]_0, jmp_0xfffffffffffff0@@ 9c, mov_rbx_qword_ptr_[rbp+0x@@ 60], jmp_0xfffffffffffffc@@ 50, mov_dword_ptr_[rsp+0x54]_eax, jmp_0xfffffffffffff3@@ 13, mov_rdx_r12, mov_rsi_rbp, mov_rdi_r15, call_0xffffffffffffdb@@ 35, mov_dword_ptr_[rsp+0xc@@ 0]_eax, test_eax_eax, jne_0x2a, movzx_eax_byte_ptr_[rbx+0x@@ 68], jmp_0xffffffffffffffbc, mov_rbx_qword_ptr_[rsp+0x@@ b0], mov_rax_qword_ptr_[rsp+0x1@@ b8], mov_qword_ptr_[rbx]_0, mov_qword_ptr_[rbx+8]_rax, xor_edx_edx, jmp_0xfffffffffffffe@@ 26, movsxd_r12@@ _eax, jmp_0xfffffffffffff@@ 2@@ 18, cmp_r9@@ _rdx, je_0x17, mov_rdx_qword_ptr_[r@@ 11@@ +rdx*8], mov_qword_ptr_[rax]_rdx, cmp_r9@@ _rsi, je_0x10, mov_rsi_qword_ptr_[r@@ 11+r@@ si*8], jmp_0xfffffffffffffe@@ 5e, mov_rdx_r10, jmp_0xffffffffffffff@@ ec, mov_rsi_r10, jmp_0xfffffffffffffe@@ 51, call_0xfffffffffffe@@ 4a@@ 5e, mov_dword_ptr_[rsp+0x54]_eax, mov_rdi_qword_ptr_[rsp+0x1@@ c8], jmp_0xfffffffffffff@@ 29@@ 5
push_r15, push_r14, mov_r14_rdx, push_r13, push_r12, mov_r12_rcx, push_rbp, push_rbx, mov_rbx_rsi, sub_rsp_0xa8, mov_qword_ptr_[rsp]_rdi, mov_rbp_qword_ptr_[rdi+0x@@ 98], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, lea_rax_[rdx@@ *8], mov_qword_ptr_[rsp+0x18]_rax, add_rax_qword_ptr_[r@@ di+0x@@ b8], mov_rcx_qword_ptr_[rax], mov_dword_ptr_[rsp+0x@@ 5c]_0, mov_qword_ptr_[rsp+0x10]_rcx, mov_rdx_qword_ptr_[r12+8], test_rcx_rcx, je_0x4@@ 6c, test_rdx_rdx, jne_0x53, mov_rdx_qword_ptr_[rsi], mov_qword_ptr_[rdx+r@@ 14*@@ 8]_0, mov_rdx_qword_ptr_[rax], xor_eax_eax, test_byte_ptr_[rdx+0x@@ 6@@ 8]@@ _0x40, jne_0x1@@ 6f, mov_rbx_qword_ptr_[rsp+0x@@ 98], xor_rbx_qword_ptr_fs:[0x28], jne_0x7@@ 86, add_rsp_0xa8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdx_r12, lea_rdi_[rsp+0x60], mov_rsi_rbp, mov_dword_ptr_[rsp+0x6@@ 0]_0, call_0xffffffffffff9@@ 36@@ d, mov_rdx_rax, mov_eax_dword_ptr_[rsp+0x60], test_eax_eax, jne_0xffffffffffffffaf, mov_r13_qword_ptr_[r@@ dx+0x@@ 38], lea_r15_[r@@ dx+0x@@ 38], test_r13_r13, jne_0x8a, mov_rdi_qword_ptr_[r12+8], mov_qword_ptr_[rdx+0x@@ 40]_0, mov_qword_ptr_[rdx+0x@@ 3@@ 8]_rdi, shl_rdi_3, mov_qword_ptr_[rsp+8]_rdx, call_0xfffffffffffe@@ 4b@@ 52, mov_rdx_qword_ptr_[rsp+8], mov_qword_ptr_[rdx+0x@@ 48]_rax, test_rax_rax, je_0x48, cmp_qword_ptr_[r@@ 12+@@ 8]_0, mov_dword_ptr_[rsp+0x6@@ 0]_0, jg_0x1@@ 3, jmp_0x47, inc@@ _r13, cmp_r13@@ _qword_ptr_[r@@ 12+8], jge_0x@@ 38, mov_rax_qword_ptr_[r12+0x10], mov_rdi_r15, mov_rax_qword_ptr_[rax+r@@ 13*8], lea_rdx_[rax+rax*2], mov_rax_qword_ptr_[rbp+0x@@ 38], lea_rsi_[rax@@ +rdx*8], call_0xffffffffffff8@@ 1f@@ 6, mov_dword_ptr_[rsp+0x60]_eax, test_eax_eax, je_0xffffffffffffffd3, mov_eax_0xc, jmp_0xffffffffffffff24, mov_rax_qword_ptr_[rsp+0x10], mov_rdx_r15, add_rax_8, mov_rsi_rax, mov_rdi_r12, mov_qword_ptr_[rsp+0x20]_rax, call_0xffffffffffff87@@ 81, mov_dword_ptr_[rsp+0x5c]_eax, test_eax_eax, jne_0xfffffffffffffe@@ f6, cmp_qword_ptr_[rbx+0x@@ 28]_0, jne_0x4@@ 13, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rsp+0x@@ 5c], mov_rdx_r12, mov_rsi_rbp, add_r13@@ _qword_ptr_[r@@ bx], call_0xffffffffffff9@@ 28@@ 2, mov_qword_ptr_[r13]_rax, mov_eax_dword_ptr_[rsp+0x@@ 5c], test_eax_eax, jne_0xfffffffffffffe@@ c3, mov_rcx_qword_ptr_[rsp], mov_rax_qword_ptr_[rsp+0x18], add_rax_qword_ptr_[r@@ cx+0x@@ b8], mov_rdx_qword_ptr_[rax], xor_eax_eax, test_byte_ptr_[rdx+0x@@ 6@@ 8]@@ _0x40, je_0xfffffffffffffea@@ 4, mov_rax_qword_ptr_[rsp], xor_edi_edi, mov_rsi_qword_ptr_[rax+0x@@ c8], mov_rcx_rsi, jmp_0x2d, lea_rax_[r@@ cx+r@@ di], sar_rax_1, mov_r11_qword_ptr_[rsp], lea_rdx_[rax+rax*4], shl_rdx_3, add_rdx_qword_ptr_[r@@ 11+0x@@ d8], cmp_r14@@ _qword_ptr_[r@@ dx+8], jg_0x3@@ 02, mov_rcx_rax, cmp_rcx_rdi, jg_0xffffffffffffff@@ d6, mov_qword_ptr_[rsp+0x4@@ 0]_rdi, cmp_rsi@@ _rdi, jle_0x@@ 2e0, mov_rax_qword_ptr_[rsp+0x40], mov_rsi_qword_ptr_[rsp], lea_rax_[rax+rax*4], mov_rdx_qword_ptr_[r@@ si+0x@@ d8], lea_rcx_[rax*8], mov_qword_ptr_[rsp+0x48]_rcx, cmp_r14@@ _qword_ptr_[r@@ dx@@ +rax*8+8], jne_0x2@@ b4, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rsp+0x60]_0, cmp_qword_ptr_[rax+0x10]_0, mov_r13_qword_ptr_[r@@ si+0x@@ 98], jle_0x@@ 29@@ 4, lea_rax_[r@@ bx+0x30], mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x38]_rax, mov_r15_rbx, jmp_0x22, cmp_al_4, je_0x4c, inc@@ _qword_ptr_[rsp+8], mov_rbx_qword_ptr_[rsp+0x10], mov_rax_qword_ptr_[rsp+8], cmp_rax_qword_ptr_[r@@ bx+0x10], jge_0x@@ 25@@ 1, mov_rax_qword_ptr_[rsp+0x10], mov_rbx_qword_ptr_[rsp+8], mov_rax_qword_ptr_[rax+0x18], mov_rbp_qword_ptr_[r@@ ax+r@@ bx*8], mov_rax_rbp, shl_rax_4, add_rax_qword_ptr_[r@@ 13], movzx_eax_byte_ptr_[r@@ ax+8], cmp_rbp@@ _qword_ptr_[r@@ 15+0x10], jne_0xffffffffffffffbe, cmp_r14@@ _qword_ptr_[r@@ 15+0x18], je_0xffffffffffffff@@ bc, cmp_al_4, jne_0xffffffffffffffb8, mov_rax_qword_ptr_[rsp], mov_rbx_qword_ptr_[rsp+0x48], mov_r12@@ _qword_ptr_[rsp+0x40], add_rbx_qword_ptr_[r@@ ax+0x@@ d8], lea_rax_[rbp+r@@ bp@@ *2], shl_rax_3, mov_qword_ptr_[rsp+0x28]_rax, lea_rax_[r@@ bp*8], mov_qword_ptr_[rsp+0x20]_rax, jmp_0x1@@ 76, mov_rax_qword_ptr_[r@@ 13+0x18], mov_rcx_qword_ptr_[rsp+0x20], mov_r9_qword_ptr_[r@@ ax+rcx], cmp_r8@@ _qword_ptr_[r@@ 15+0x18], jg_0x1@@ 47, mov_rax_qword_ptr_[r15], mov_rax_qword_ptr_[rax+r@@ 8@@ *8], test_rax_rax, je_0x1@@ 37, mov_rdi_qword_ptr_[rax+0x10], lea_rsi_[r@@ ax+0x18], mov_rdx_r9, call_0xffffffffffff7b@@ 6e, test_rax_rax, je_0x1@@ 1e, sub_rsp_8, push_r8, mov_rcx_rbp, lea_rsi_[r@@ 15+0x28], mov_rdx_qword_ptr_[rsp+0x48], mov_rdi_qword_ptr_[rsp+0x10], mov_r8_r14, call_0xffffffffffff7@@ dd@@ 6, pop_rdx, pop_rcx, test_al_al, jne_0x@@ f5, cmp_qword_ptr_[rsp+0x@@ 60]_0, je_0x1@@ 99, lea_rdi_[rsp+0x80], lea_r8_[rsp+0x@@ 60], mov_rsi_r12, mov_qword_ptr_[rsp+0x3@@ 0]_r8, mov_qword_ptr_[rsp+0x7@@ 0]_rbp, mov_qword_ptr_[rsp+0x7@@ 8]_r14, call_0xffffffffffff6@@ 57@@ c, test_al_al, mov_r8_qword_ptr_[rsp+0x30], je_0x4@@ 38, mov_rax_qword_ptr_[rsp+0x60], mov_rbx_qword_ptr_[rsp+0x18], mov_rdi_qword_ptr_[rsp], mov_rsi_r8, mov_rbx_qword_ptr_[r@@ ax+r@@ bx], call_0xffffffffffffe@@ 125, test_eax_eax, jne_0x1@@ 9e, mov_rsi_qword_ptr_[r15+8], mov_rdx_qword_ptr_[rsp+0x60], test_rsi_rsi, je_0x1b, lea_rcx_[r@@ 14+1], mov_rdi_r13, call_0xffffffffffff9@@ 23@@ 3, test_eax_eax, jne_0x1@@ 7c, mov_rdx_qword_ptr_[rsp+0x60], mov_rax_qword_ptr_[rsp+0x18], mov_r8@@ _qword_ptr_[rsp+0x88], mov_qword_ptr_[rdx@@ +rax@@ ]_rbx, lea_r9_[rsp+0x@@ 90], mov_rdx_r12, mov_rsi_r9, mov_rdi_r8, call_0xffffffffffff7a@@ 8f, dec_rax, mov_rdx_rax, js@@ _0x22, cmp_r8_rax, jle_0x@@ 1d, dec@@ _r8, lea_rdi_[rsp+0x@@ 88], mov_rsi_r9, mov_qword_ptr_[rsp+0x8@@ 8]_r8, call_0xffffffffffff7@@ bc@@ 7, mov_rbx_qword_ptr_[rsp], lea_rax_[r@@ 12+r@@ 12*4], mov_rdx_qword_ptr_[rbx+0x@@ d8], lea_rbx_[rdx@@ +rax*8], inc_r12, cmp_byte_ptr_[rbx+0x@@ 20]_0, lea_rax_[r@@ bx+0x28], je_0xfffffffffffffe@@ 19, mov_rbx_rax, cmp_rbp@@ _qword_ptr_[r@@ bx], jne_0xffffffffffffffe9, mov_rax_qword_ptr_[rbx+0x18], sub_rax_qword_ptr_[r@@ bx+0x10], lea_r8_[r@@ 14+rax], jne_0xfffffffffffffe@@ 83, mov_rax_qword_ptr_[r13+0x@@ 28], mov_rcx_qword_ptr_[rsp+0x28], mov_rax_qword_ptr_[r@@ ax@@ +rcx@@ +0x10], mov_r9_qword_ptr_[rax], jmp_0xfffffffffffffe@@ 79, mov_rax_qword_ptr_[rsp+0x18], add_rax_qword_ptr_[r@@ si], mov_rbx_rax, test_rdx_rdx, jne_0x12, mov_qword_ptr_[rax]_0, xor_eax_eax, jmp_0xfffffffffffffb@@ a7, lea_rdi_[rsp+0x@@ 5c], mov_rdx_r12, mov_rsi_rbp, call_0xffffffffffff8f@@ 45, mov_qword_ptr_[rbx]_rax, mov_eax_dword_ptr_[rsp+0x@@ 5c], jmp_0xfffffffffffffb@@ 89, cmp_qword_ptr_[rsp+0x@@ 60]_0, jne_0x3@@ 16, xor_eax_eax, jmp_0xfffffffffffffb@@ 72, lea_rdi_[rax+1], jmp_0xfffffffffffffd@@ 03, movdqa_xmm0_xmmword_ptr_[r@@ 15], movdqa_xmm1_xmmword_ptr_[r@@ 15+0x10], movdqa_xmm2_xmmword_ptr_[r@@ 15+0x20], mov_rax_qword_ptr_[r15+0x@@ 30], lea_rdi_[rsp+0x80], lea_rsi_[r@@ 15+0x20], mov_qword_ptr_[rsp+0x30]_rdi, mov_qword_ptr_[rsp+0x90]_rax, movaps_xmmword_ptr_[rsp+0x60]_xmm0, movaps_xmmword_ptr_[rsp+0x70@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm2, call_0xffffffffffff8@@ 9c8, test_eax_eax, mov_rdi_qword_ptr_[rsp+0x30], je_0xfffffffffffffe@@ 29, cmp_qword_ptr_[rsp+0x@@ 60]_0, je_0xfffffffffffffa@@ fa, mov_rdi_qword_ptr_[rsp+0x90], mov_dword_ptr_[rsp]_eax, call_0xfffffffffffe4@@ 2d@@ 9, mov_eax_dword_ptr_[rsp], jmp_0xfffffffffffffa@@ e1, mov_rax_qword_ptr_[rsp], mov_rax_qword_ptr_[rax+0x@@ d8], mov_qword_ptr_[rsp+8]_rax, jle_0x@@ e5, xor_r13d_r13d, mov_rax_qword_ptr_[rbx+0x30], mov_rcx_qword_ptr_[rsp+8], mov_rax_qword_ptr_[rax+r@@ 13*8], lea_rax_[rax+rax*4], lea_rdx_[r@@ cx+rax*8], cmp_r14@@ _qword_ptr_[r@@ dx+0x10], jle_0x@@ af, cmp_r14@@ _qword_ptr_[r@@ dx+8], jg_0xa@@ 5, mov_rcx_qword_ptr_[rdx], mov_rax_qword_ptr_[rbp], shl_rcx_4, mov_r15_qword_ptr_[r@@ ax+rcx], mov_rsi_qword_ptr_[r12+8], cmp_r14@@ _qword_ptr_[r@@ dx+0x18], je_0xa7, xor_r8d_r8d, test_rsi_rsi, jle_0x@@ 7b, mov_qword_ptr_[rsp+0x2@@ 8]_rbx, mov_rbx_r15, mov_r15_rbp, mov_rbp_r8, jmp_0x18, inc_rbp, cmp_rbp@@ _qword_ptr_[r@@ 12+8], jge_0x@@ 50, mov_rax_qword_ptr_[r15], mov_rdx_qword_ptr_[r12+0x10], mov_rsi_qword_ptr_[r@@ dx+r@@ bp*8], mov_rdx_rsi, shl_rdx_4, add_rax_rdx, movzx_edx_byte_ptr_[r@@ ax+8], sub_edx@@ _8, cmp_edx_1, ja_0xffffffffffffff@@ d6, cmp_rbx_qword_ptr_[r@@ ax], jne_0xffffffffffffffd1, mov_rcx_qword_ptr_[rsp+0x20], mov_rdx_r12, mov_rdi_r15, call_0xffffffffffffa0@@ 54, test_eax_eax, jne_0xfffffffffffffa@@ 0d, inc_rbp, cmp_rbp@@ _qword_ptr_[r@@ 12+8], jl_0xffffffffffffff@@ b9, mov_rbx_qword_ptr_[rsp+0x28], mov_rbp_r15, inc@@ _r13, cmp_r13@@ _qword_ptr_[r@@ bx+0x28], jl_0xffffffffffffff@@ 31, mov_dword_ptr_[rsp+0x@@ 5c]_0, jmp_0xfffffffffffffa@@ f6, test_rsi_rsi, jle_0xffffffffffffff@@ dd, mov_r10_qword_ptr_[r@@ 12+0x10], mov_r8@@ _-1, mov_rcx_r10, lea_r11_[r@@ 10+r@@ si*8], mov_r9@@ _-1, jmp_0x1e, cmp_edi@@ _9, jne_9, cmp_r15@@ _qword_ptr_[r@@ dx], cmove@@ _r8@@ _rsi, add_rcx_8, cmp_r11@@ _rcx, je_0x28, mov_rsi_qword_ptr_[rcx], mov_rdx_rsi, shl_rdx_4, add_rdx_rax, movzx_edi_byte_ptr_[r@@ dx+8], cmp_edi@@ _8, jne_0xffffffffffffffd7, cmp_r15@@ _qword_ptr_[r@@ dx], cmove@@ _r9@@ _rsi, add_rcx_8, cmp_r11@@ _rcx, jne_0xffffffffffffffdc, test_r9_r9, jns@@ _0x@@ 9a, test_r8_r8, js_0xffffffffffffff@@ 71, xor_r15d_r15d, mov_qword_ptr_[rsp+0x2@@ 8]_r13, mov_qword_ptr_[rsp+0x3@@ 0]_rbx, mov_r13_r15, mov_rbx_qword_ptr_[rsp+0x20], mov_r15_r8, jmp_0x16, inc@@ _r13, cmp_qword_ptr_[r@@ 12+@@ 8]_r13, jle_0x@@ c0, mov_r10_qword_ptr_[r@@ 12+0x10], mov_r10_qword_ptr_[r@@ 10+r@@ 13*8], mov_rax_qword_ptr_[rbp+0x@@ 38], lea_r8_[r@@ 10+r@@ 10@@ *2], shl_r8@@ _3, add_rax_r8, mov_rdi_qword_ptr_[rax+8], lea_rsi_[rax+0x10], mov_rdx_r15, call_0xffffffffffff7@@ 74@@ f, test_rax_rax, jne_0xffffffffffffffc7, add_r8@@ _qword_ptr_[r@@ bp+0x30], mov_rdi_qword_ptr_[r@@ 8+8], lea_rsi_[r@@ 8+0x10], call_0xffffffffffff7@@ 7@@ 39, test_rax_rax, jne_0xffffffffffffffb1, mov_rcx_rbx, mov_rdx_r12, mov_rsi_r10, mov_rdi_rbp, call_0xffffffffffff9f@@ 23, test_eax_eax, je_0xffffffffffffff@@ 9f, jmp_0xfffffffffffff8d@@ a, mov_rcx_qword_ptr_[rsp+0x20], mov_rdx_r12, mov_rsi_r9, mov_rdi_rbp, mov_qword_ptr_[rsp+0x28]_r8, call_0xffffffffffff9e@@ fd, test_eax_eax, jne_0xfffffffffffff@@ 8b@@ 6, mov_r8_qword_ptr_[rsp+0x28], test_r8_r8, js_0xfffffffffffffe@@ b8, cmp_qword_ptr_[r@@ 12+@@ 8]_0, jle_0xfffffffffffff@@ ea@@ c, mov_r10_qword_ptr_[r@@ 12+0x10], jmp_0xffffffffffffff36, mov_eax_0xc, jmp_0xfffffffffffffd@@ 83, mov_r13@@ _qword_ptr_[rsp+0x28], mov_rbx_qword_ptr_[rsp+0x30], jmp_0xfffffffffffffe@@ 7e, call_0xfffffffffffe@@ 42@@ 19, xor_eax_eax, jmp_0xfffffffffffffd@@ 6@@ e
push_r14, mov_r10_rsi, movsxd@@ _r11@@ _ecx, push_r13, push_r12, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, sub_rsp_0x20, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, cmp_dword_ptr_[rsi+0x@@ 90]_1, mov_r12_qword_ptr_[r@@ si+0x@@ 48], je_0x12, mov_rsi_r12, mov_rdi_r10, call_0xffffffffffff7@@ 6@@ 15, cmp_eax_1, jg@@ _0x5d, movzx_eax_byte_ptr_[r@@ bp+8], add_r11@@ _r12, mov_edx_eax, and_edx@@ _0xfffffffb, mov_qword_ptr_[r@@ 10+0x@@ 4@@ 8]_r11, cmp_dl@@ _0x1a, je_0x68, cmp_al@@ _0x1c, je_0x64, cmp_al@@ _0x16, jne_0xb, test_r9b_r9b, je_0x1@@ ab, movzx_eax_byte_ptr_[rbp], mov_dword_ptr_[rbx]_0, mov_byte_ptr_[rbx+@@ 8]_al, xor_eax_eax, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x1@@ c5, add_rsp_0x20, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_dword_ptr_[rbx@@ ]_1, mov_rdx_qword_ptr_[r@@ 10@@ +0x10], cdqe, mov_edx_dword_ptr_[r@@ dx+r@@ 12*4], add_rax_r12, mov_dword_ptr_[rbx+@@ 8]_edx, mov_qword_ptr_[r@@ 10+0x@@ 48]_rax, xor_eax_eax, jmp_0xffffffffffffffbe, mov_r12_qword_ptr_[r@@ 10+0x@@ 68], cmp_r11@@ _r12, jge_0x@@ a1, movzx_r13d_byte_ptr_[r@@ bp], xor_r9d_r9d, jmp_0x28, mov_rax_qword_ptr_[rbx+8], mov_byte_ptr_[rax+r@@ 9]@@ _r8b, inc@@ _r9, cmp_r9@@ _0x20, je_0x79, movzx_eax_byte_ptr_[r@@ bp+8], mov_r11_qword_ptr_[r@@ 10+0x@@ 48], mov_r12_qword_ptr_[r@@ 10+0x@@ 68], movsxd_r14@@ _r9d, cmp_al@@ _0x1e, je_0x76, lea_rax_[r@@ 11@@ +1], mov_qword_ptr_[r@@ 10+0x@@ 48]_rax, mov_rdx_qword_ptr_[r@@ 10+8], movzx_r8d_byte_ptr_[r@@ dx+r@@ 11], cmp_r12_rax, jle_0x@@ 50, cmp_r13b@@ _r8b, jne_0xffffffffffffffc3, mov_rdx_qword_ptr_[r@@ 10+8], cmp_byte_ptr_[rdx@@ +rax]@@ _0x5d, jne_0xffffffffffffffb9, inc_rax, mov_qword_ptr_[r@@ 10+0x@@ 48]_rax, mov_rax_qword_ptr_[rbx+8], mov_byte_ptr_[rax+r@@ 14]_0, movzx_edx_byte_ptr_[r@@ bp+8], cmp_dl@@ _0x1c, je_0x100, cmp_dl@@ _0x1e, je_0xea, xor_eax_eax, cmp_dl@@ _0x1a, jne_0xffffffffffffff@@ 26, mov_dword_ptr_[rbx@@ ]_3, jmp_0xffffffffffffff1a, mov_eax_7, jmp_0xffffffffffffff0d, cmp_byte_ptr_[r@@ 10+0x@@ 8b@@ ]_0, je_0xffffffffffffff@@ 84, cmp_byte_ptr_[r@@ 10+0x@@ 8c]_0, je_0x66, cmp_r11@@ _qword_ptr_[r@@ 10+0x@@ 30], je_0x11, mov_rax_qword_ptr_[r@@ 10@@ +0x10], cmp_dword_ptr_[r@@ ax+r@@ 11@@ *4@@ ]_-1, je_0xffffffffffffff@@ 69, mov_rax_qword_ptr_[r@@ 10@@ +0x18], mov_rax_qword_ptr_[rax+r@@ 11@@ *8], add_rax_qword_ptr_[r@@ 10], add_rax_qword_ptr_[r@@ 10+0x@@ 28], movzx_r8d_byte_ptr_[r@@ ax], test_r8b@@ _0x80, jne_0xffffffffffffff@@ 4c, cmp_dword_ptr_[r@@ 10+0x@@ 90]_1, mov_eax_1, je_0xf, mov_rsi_r11, mov_rdi_r10, call_0xffffffffffff7@@ 47@@ d, cdqe, add_rax@@ _r11, mov_qword_ptr_[r@@ 10+0x@@ 48]_rax, jmp_0xffffffffffffff34, lea_rax_[r@@ 11@@ +1], mov_qword_ptr_[r@@ 10+0x@@ 48]_rax, add_r11@@ _qword_ptr_[r@@ 10], add_r11@@ _qword_ptr_[r@@ 10+0x@@ 28], movzx_r8d_byte_ptr_[r@@ 11], jmp_0xffffffffffffff12, mov_rdi_rsp, mov_rdx_r8, mov_rsi_r10, call_0xffffffffffff5@@ 93@@ 7, cmp_byte_ptr_[r@@ sp+@@ 8]@@ _0x15, mov_eax@@ _0xb, je_0xfffffffffffffe@@ 43, jmp_0xfffffffffffffe@@ 4c, mov_dword_ptr_[rbx@@ ]_4, xor_eax_eax, jmp_0xfffffffffffffe@@ 3f, mov_dword_ptr_[rbx@@ ]_2, xor_eax_eax, jmp_0xfffffffffffffe@@ 32, call_0xfffffffffffe3@@ fb@@ 3
push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x38, mov_r14_qword_ptr_[r@@ si+0x@@ 48], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, cmp_qword_ptr_[rsi+0x@@ 6@@ 8]_r14, jle_0x@@ 17@@ 7, mov_r15_qword_ptr_[r@@ si+8], mov_eax_dword_ptr_[rsi+0x@@ 90], movzx_ebx_byte_ptr_[r@@ 15+r@@ 14], mov_r12_rsi, and_byte_ptr_[r@@ di+0x@@ a]@@ _0x@@ 9f, mov_byte_ptr_[rdi@@ ]_bl, mov_r13_rdx, cmp_eax_1, jle_0x@@ cb, cmp_r14@@ _qword_ptr_[r@@ si+0x30], je_0x11, mov_rdx_qword_ptr_[r@@ si+0x10], cmp_dword_ptr_[r@@ dx+r@@ 14@@ *4@@ ]_-1, je_0x1@@ ce, cmp_bl@@ _0x5c, je_0x1@@ 15, mov_byte_ptr_[rbp+@@ 8]_1, mov_rax_qword_ptr_[r12+0x10], mov_edx_dword_ptr_[r@@ ax+r@@ 14*4], mov_edi_edx, mov_dword_ptr_[rsp+0xc]_edx, call_0xfffffffffffe4@@ 12c, mov_edx_dword_ptr_[rsp+0xc], test_eax_eax, setne_al, cmp_edx@@ _0x5f, sete_dl, or_eax_edx, shl_eax@@ _6, mov_edx_eax, movzx_eax_byte_ptr_[rbp+0x@@ a], and_eax_0xffffff@@ bf, or_eax_edx, mov_byte_ptr_[rbp+0x@@ a@@ ]_al, cmp_bl@@ _0x3f, ja_0xa@@ d, cmp_bl@@ _9, jbe_0x@@ 33, sub_ebx@@ _0xa, cmp_bl@@ _0x35, ja_0x2@@ b, lea_rdx_[rip+0x@@ c7@@ b8], movzx_ebx@@ _bl, movsxd_rax_dword_ptr_[r@@ dx+r@@ bx*4], add_rax_rdx, jmp_rax, mov_eax_1, mov_rcx_qword_ptr_[rsp+0x28], xor_rcx_qword_ptr_fs:[0x28], jne_0x@@ 5d0, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, cmp_bl@@ _0x5c, je_0x65, call_0xfffffffffffe@@ 43@@ 13, mov_r8_rax, mov_rdx_qword_ptr_[r@@ 8], movzx_eax@@ _bl, movzx_eax_word_ptr_[r@@ dx@@ +rax*2], shr_ax@@ _3, cmp_bl@@ _0x5f, sete_dl, or_eax_edx, and_eax_1, mov_edx_dword_ptr_[r@@ bp+8], shl_eax@@ _0x16, or_eax_1, and_edx@@ _0xff@@ b@@ fff@@ 00, or_eax_edx, mov_dword_ptr_[rbp+@@ 8]_eax, cmp_bl@@ _0x3f, jbe_0xffffffffffffff@@ 5f, sub_ebx@@ _0x5b, cmp_bl@@ _0x22, ja_0xffffffffffffff@@ 89, lea_rdx_[rip+0xc@@ 7e@@ e], movzx_ebx@@ _bl, movsxd_rax_dword_ptr_[r@@ dx+r@@ bx*4], add_rax_rdx, jmp_rax, lea_rcx_[r@@ 14+1], cmp_rcx_qword_ptr_[r@@ 12+0x@@ 58], jl@@ _0x27, mov_byte_ptr_[rbp+@@ 8]@@ _0x24, mov_eax_1, jmp_0xffffffffffffff5b, mov_byte_ptr_[rdi+@@ 8]_2, jmp_0xffffffffffffff4b, cmp_byte_ptr_[r@@ 12+0x@@ 8b@@ ]_0, jne_0x4@@ 85, movzx_esi_byte_ptr_[r@@ 15+r@@ 14+1], mov_dword_ptr_[rsp+0xc]_esi, mov_ebx_esi, mov_byte_ptr_[rbp@@ ]_bl, mov_byte_ptr_[rbp+@@ 8]_1, cmp_eax_1, jle_0x@@ 20@@ b, mov_rax_qword_ptr_[r12+0x10], lea_rsi_[rax@@ +rcx*4], mov_r12d_dword_ptr_[r@@ si], mov_edi_r12d, call_0xfffffffffffe3@@ fc@@ 6, test_eax_eax, setne_al, cmp_r12d@@ _0x5f, sete_cl, or_eax_ecx, shl_eax@@ _6, mov_ecx_eax, movzx_eax_byte_ptr_[rbp+0x@@ a], and_eax_0xffffff@@ bf, or_eax_ecx, mov_byte_ptr_[rbp+0x@@ a@@ ]_al, lea_edx_[r@@ bx-0x@@ 27], cmp_dl@@ _0x5@@ 6, ja_0x2@@ 04, lea_rcx_[rip+0xc@@ 7c@@ 3], movzx_edx_dl, movsxd_rax_dword_ptr_[r@@ cx+rdx*4], add_rax_rcx, jmp_rax, mov_eax_dword_ptr_[rdi+8], and_eax@@ _0xff@@ d@@ fff@@ 00, or_eax@@ _0x20000@@ 1, mov_dword_ptr_[rdi+@@ 8]_eax, mov_eax_1, jmp_0xfffffffffffffea@@ a, call_0xfffffffffffe@@ 40@@ 50, mov_r8_rax, mov_rcx_qword_ptr_[r@@ 8], movzx_eax@@ _bl, movzx_eax_word_ptr_[r@@ cx@@ +rax*2], shr_ax@@ _3, and_eax_1, cmp_bl@@ _0x5f, sete_cl, or_eax_ecx, movzx_ecx_byte_ptr_[r@@ bp+0x@@ a], shl_eax@@ _6, and_ecx@@ _0xffffff@@ bf, or_eax_ecx, mov_byte_ptr_[rbp+0x@@ a@@ ]_al, jmp_0xfffffffffffffd@@ fe, mov_eax_2, jmp_0xfffffffffffffc@@ d2, cmp_eax_1, jle_0x@@ 2a, mov_rdi_qword_ptr_[r12+0x10], lea_rdx_[rcx@@ *4], lea_rsi_[r@@ di+rdx], cmp_dword_ptr_[r@@ si@@ ]_-1, je_0x5e, lea_r8_[r@@ 14+2], cmp_qword_ptr_[r12+0x@@ 3@@ 0]_r8, je_9, cmp_dword_ptr_[r@@ di+rdx@@ +@@ 4@@ ]_-1, je_0x4c, cmp_byte_ptr_[r@@ 12+0x@@ 8c]_0, mov_rdx_qword_ptr_[r12], mov_rsi_qword_ptr_[r@@ 12+0x28], je_0x26, mov_rdi_qword_ptr_[r@@ 12+0x18], add_rdx_rsi, add_rdx_qword_ptr_[r@@ di@@ +rcx*8], movzx_esi_byte_ptr_[r@@ dx], mov_dword_ptr_[rsp+0xc]_esi, mov_ebx_esi, test_sil@@ _0x80, je_0xfffffffffffffb@@ 33, jmp_0xfffffffffffffb@@ 21, add_rdx_rcx, movzx_esi_byte_ptr_[r@@ dx+r@@ si], mov_dword_ptr_[rsp+0xc]_esi, mov_ebx_esi, jmp_0xfffffffffffffb@@ 1b, movzx_eax_byte_ptr_[r@@ 15+r@@ 14+1], mov_byte_ptr_[rbp+@@ 8]_1, mov_byte_ptr_[rbp@@ ]_al, mov_dword_ptr_[rsp+0xc]_eax, mov_ebx_eax, jmp_0xfffffffffffffb@@ 1c, call_0xfffffffffffe3@@ 8d@@ 3
push_r14, mov_r14_rdi, push_r13, mov_r13_rsi, push_r12, mov_r12@@ _-1, push_rbp, mov_ebp@@ _0x80@@ 30, push_rbx, mov_rbx_rdx, mov_rdx_rbx, mov_rsi_r14, mov_rdi_r13, call_0xfffffffffffff8f@@ 7, cdqe, add_qword_ptr_[r@@ 14+0x@@ 48]_rax, movzx_eax_byte_ptr_[r@@ 13+8], movzx_edx_byte_ptr_[r@@ 13], cmp_al_2, je_0x50, cmp_dl@@ _0x2c, je_0x52, cmp_al@@ _0x18, je_0x4e, cmp_al_1, je_0x13, mov_r12@@ _-2, jmp_0xffffffffffffffca, lea_eax_[rdx@@ -0x30], cmp_al_9, ja_0xffffffffffffff@@ ea, cmp_r12@@ _-2, je_0xffffffffffffffe4, cmp_r12@@ _-1, je_0x37, lea_rax_[r@@ 12+r@@ 12*4], lea_r12@@ _[rdx@@ +rax*2], cmp_r12@@ _0x80@@ 30, cmovg@@ _r12@@ _rbp, sub_r12@@ _0x30, jmp_0xffffffffffffff96, mov_r12@@ _-2, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, movzx_r12d@@ _dl, sub_r12d@@ _0x30, movsxd_r12_r12d, jmp_0xffffffffffffff6@@ d
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x118, mov_qword_ptr_[rsp+0x10]_rcx, mov_qword_ptr_[rsp+0x3@@ 8]_r9, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x108]_rax, xor_eax_eax, mov_rax_qword_ptr_[rsi], mov_qword_ptr_[rsp+0x18]_rax, movzx_eax_byte_ptr_[r@@ dx+8], cmp_al_0x2@@ 4, ja_0x@@ c4, mov_rbp_rsi, movzx_ecx_al, lea_rsi_[rip+0xc@@ 35@@ 1], mov_rbx_rdx, movsxd_rdx_dword_ptr_[r@@ si@@ +rcx*4], mov_r15_rdi, add_rdx_rsi, jmp_rdx, mov_qword_ptr_[rsp+0x30]_0, mov_rax_qword_ptr_[r@@ sp+0x108], xor_rax_qword_ptr_fs:[0x28], jne_0x13@@ 74, mov_rax_qword_ptr_[rsp+0x30], add_rsp_0x118, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xfffffffffffe2@@ 36@@ b
push_r15, mov_r15_r9, push_r14, push_r13, mov_r13_rcx, push_r12, mov_r12_rdx, push_rbp, mov_rbp_r8, push_rbx, mov_rbx_rsi, sub_rsp_0x58, mov_qword_ptr_[rsp+8]_rdi, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, mov_rax_qword_ptr_[rsi], mov_qword_ptr_[rsp+0x20]_rax, call_0xffffffffffffea@@ 46, mov_edx_dword_ptr_[r15], mov_r14_rax, test_edx_edx, je_0xb, test_rax_rax, je_0x1@@ 32, movzx_eax_byte_ptr_[r@@ 12+8], mov_edx_eax, and_edx@@ _0xfffffff7, cmp_dl@@ _2, je_0xd4, lea_rsi_[rsp+0x30], test_rbp_rbp, mov_qword_ptr_[rsp+0x28]_rsi, mov_rsi_r15, sete@@ _byte_ptr_[r@@ sp+0x1@@ f], mov_r15_r14, mov_r14_r12, mov_r12_rbp, mov_rbp_rbx, mov_rbx_rsi, jmp_0x5@@ 6, test_rcx_rcx, je_0x88, mov_rax_qword_ptr_[rsp+0x20], mov_r8_qword_ptr_[rsp+0x28], lea_rsi_[rax+0x@@ 80], lea_rdi_[r@@ ax+0x70], mov_rdx_r15, mov_qword_ptr_[rsp+0x10]_rcx, mov_byte_ptr_[rsp+0x@@ 38]@@ _0x10, call_0xffffffffffff6@@ 23@@ 5, test_rax_rax, mov_rcx_qword_ptr_[rsp+0x10], je_0x8e, mov_r15_rax, movzx_eax_byte_ptr_[r@@ 14+8], mov_edx_eax, and_edx@@ _0xfffffff7, cmp_dl@@ _2, je_0x53, cmp_al_9, jne_9, cmp_byte_ptr_[rsp+0x1@@ f]_0, je_0x48, mov_rdi_qword_ptr_[rsp+8], mov_rcx_r13, mov_r9_rbx, mov_r8_r12, mov_rdx_r14, mov_rsi_rbp, call_0xffffffffffffe@@ 98@@ 1, mov_rcx_rax, mov_eax_dword_ptr_[rbx], test_eax_eax, je_7, test_rcx_rcx, je_0x73, test_r15_r15, jne_0xffffffffffffff@@ 7b, movzx_eax_byte_ptr_[r@@ 14+8], test_r15_r15, mov_edx_eax, cmove@@ _r15@@ _rcx, and_edx@@ _0xfffffff7, cmp_dl@@ _2, jne_0xffffffffffffffb1, mov_r14_r15, mov_rax_qword_ptr_[rsp+0x48], xor_rax_qword_ptr_fs:[0x28], jne_0x5c, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_rax_r14, pop_r14, pop_r15, ret, mov_rdi_rcx, xor_edx_edx, lea_rsi_[rip-0x@@ b@@ 28@@ 2], call_0xffffffffffff3e@@ 3e, xor_edx_edx, lea_rsi_[rip-0x@@ b@@ 290], mov_rdi_r15, call_0xffffffffffff3e@@ 2d, mov_dword_ptr_[rbx]@@ _0xc, xor_r14d_r14d, jmp_0xffffffffffffffb3, test_r15_r15, je_0xfffffffffffffff@@ 8, xor_edx_edx, lea_rsi_[rip-0x@@ b@@ 2b@@ 1], mov_rdi_r15, call_0xffffffffffff3e@@ 0c, xor_r14d_r14d, jmp_0xffffffffffffff98, call_0xfffffffffffe@@ 20@@ e@@ 2
push_r15, push_r14, push_r13, mov_r13_r9, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rdx, push_rbx, sub_rsp_0x58, mov_qword_ptr_[rsp+0x28]_rsi, mov_qword_ptr_[rsp+0x18]_rcx, mov_qword_ptr_[rsp+8]_r8, mov_rbx_qword_ptr_[r@@ si], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, mov_rax_qword_ptr_[rbx+0x@@ a8], mov_qword_ptr_[rsp+0x20]_rax, call_0xfffffffffffffe0@@ b, mov_edx_dword_ptr_[r13], mov_r15_rax, test_edx_edx, je_0xb, test_rax_rax, je_0xe5, mov_r14_qword_ptr_[rsp+0x18], or@@ _r14@@ _0x800000, jmp_0x8@@ c, cmp_al_9, jne_0xe, cmp_qword_ptr_[rsp+8]_0, jne_0xa9, mov_rax_qword_ptr_[rbx+0x@@ a8], mov_rcx_qword_ptr_[rsp+0x18], mov_qword_ptr_[rsp+0x10]_rax, mov_rax_qword_ptr_[rsp+0x20], mov_r8_qword_ptr_[rsp+8], mov_qword_ptr_[rbx+0x@@ a8]_rax, mov_rsi_qword_ptr_[rsp+0x28], mov_r9_r13, mov_rdx_rbp, mov_rdi_r12, call_0xfffffffffffffd@@ a0, mov_rcx_rax, mov_eax_dword_ptr_[r13], test_eax_eax, je_7, test_rcx_rcx, je_0x64, mov_rax_qword_ptr_[rsp+0x10], or_qword_ptr_[r@@ bx+0x@@ a8]_rax, mov_rdx_r15, lea_rsi_[rbx+0x@@ 80], lea_rdi_[rbx+0x@@ 70], lea_r8_[rsp+0x@@ 30], mov_byte_ptr_[rsp+0x@@ 38]@@ _0xa, call_0xffffffffffff60@@ 57, mov_r15_rax, test_rax_rax, je_0x74, cmp_byte_ptr_[rbp+@@ 8]@@ _0xa, jne_0x46, mov_rdx_r14, mov_rsi_r12, mov_rdi_rbp, call_0xffffffffffffe0@@ 2b, cdqe, add_qword_ptr_[r@@ 12+0x@@ 48]_rax, movzx_eax_byte_ptr_[r@@ bp+8], mov_edx_eax, and_edx@@ _0xfffffff7, cmp_dl@@ _2, jne_0xffffffffffffff@@ 53, xor_ecx_ecx, jmp_0xffffffffffffffac, test_r15_r15, je_0x13, xor_edx_edx, lea_rsi_[rip-0x@@ b@@ 40@@ 5], mov_rdi_r15, call_0xffffffffffff3c@@ b8, xor_r15d_r15d, mov_rax_qword_ptr_[rsp+0x48], xor_rax_qword_ptr_fs:[0x28], jne_0x24, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_rax_r15, pop_r15, ret, mov_dword_ptr_[r13@@ ]@@ _0xc, jmp_0xffffffffffffffd0, call_0xfffffffffffe@@ 1f@@ 5@@ e
push_r15, push_r14, mov_r14_rdi, push_r13, mov_r13_rcx, push_r12, mov_r12_rsi, push_rbp, push_rbx, mov_rbx_rdx, sub_rsp_0x1@@ 28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x118]_rax, xor_eax_eax, and_byte_ptr_[r@@ di+0x@@ 38]@@ _0x@@ 90, cmp_qword_ptr_[rdi+@@ 8]@@ _0x@@ e7, mov_dword_ptr_[rsp+0x@@ 4c]_0, mov_qword_ptr_[rdi+0x1@@ 8]_rcx, mov_qword_ptr_[rdi+0x10]_0, mov_qword_ptr_[rdi+0x@@ 30]_0, mov_rbp_qword_ptr_[rdi], jbe_0x@@ f0@@ d, lea_rax_[r@@ bp+8], and_rax@@ _0xfffffffffffffff8, mov_rdx_rbp, mov_qword_ptr_[r14+0x1@@ 0]@@ _0x@@ e8, sub_rdx_rax, mov_qword_ptr_[rbp]_0, mov_qword_ptr_[rbp+0x@@ c8]_0, mov_qword_ptr_[rbp+0x@@ d0]_0, mov_qword_ptr_[rbp+0x@@ d8]_0, mov_qword_ptr_[rbp+0x@@ e0]_0, add_edx@@ _0x@@ e8, xor_esi_esi, and_edx_0xffffff@@ e0, xor_ecx_ecx, mov_edi_ecx, add_ecx@@ _0x20, mov_qword_ptr_[rax+r@@ di]@@ _rsi, mov_qword_ptr_[rax+r@@ di+@@ 8]_rsi, mov_qword_ptr_[rax+r@@ di+0x1@@ 0]_rsi, mov_qword_ptr_[rax+r@@ di+0x1@@ 8]_rsi, cmp_ecx_edx, jb_0xffffffffffffff@@ e6, movabs_rax@@ _0x5@@ 5555@@ 5555@@ 5555@@ 54, mov_dword_ptr_[rbp+0x@@ 8@@ 0]@@ _0xf, cmp_rbx_rax, ja_0x8@@ 15, lea_rax_[rbx+1], mov_qword_ptr_[rbp+8]_rax, mov_rdi_rax, shl_rdi_4, mov_qword_ptr_[rsp+8]_rax, call_0xfffffffffffe@@ 20@@ 6b, mov_qword_ptr_[rbp]_rax, test_rbx_rbx, je_0xe@@ 87, mov_esi_1, add_r@@ si_rsi, cmp_rbx@@ _rsi, jae_0xffffffffffff@@ fff@@ a, lea_r15_[r@@ si-1], mov_edi_0x18, call_0xfffffffffffe@@ 1f@@ 8f, mov_qword_ptr_[rbp+0x@@ 40]_rax, mov_qword_ptr_[rbp+0x@@ 8@@ 8]_r15, call_0xfffffffffffe@@ 1dd@@ f, mov_dword_ptr_[rbp+0x@@ b@@ 4]_eax, mov_edi_0xe, call_0xfffffffffffe@@ 20@@ 3f, movzx_edx_byte_ptr_[rax], and_edx_0xffffff@@ df, cmp_dl@@ _0x5@@ 5, jne_0x21, movzx_edx_byte_ptr_[rax+1], and_edx_0xffffff@@ df, cmp_dl@@ _0x5@@ 4, jne_0x15, movzx_edx_byte_ptr_[rax+2], and_edx_0xffffff@@ df, cmp_dl@@ _0x4@@ 6, je_0x@@ 84@@ 9, movzx_eax_byte_ptr_[rbp+0x@@ b0], mov_edx_eax, and_edx@@ _0xfffffff7, cmp_dword_ptr_[rbp+0x@@ b@@ 4]_1, mov_byte_ptr_[rbp+0x@@ b@@ 0]_dl, jle_0x@@ 15, test_al_4, je_0xb@@ eb, lea_rax_[rip+0x@@ aa@@ e6], mov_qword_ptr_[rbp+0x@@ 78]_rax, cmp_qword_ptr_[rbp]_0, je_0x7@@ 4d, cmp_qword_ptr_[rbp+0x@@ 40]_0, je_0x7@@ 42, mov_rax_r13, mov_dword_ptr_[rsp+0x@@ 4c]_0, and_eax@@ _0x4@@ 00000, mov_rdi_qword_ptr_[r14+0x@@ 28], mov_qword_ptr_[rsp+0x10]_rax, xor_esi_esi, lea_rax_[rsp+0x@@ 88], xor_edx_edx, mov_ecx_edx, add_edx@@ _0x20, mov_qword_ptr_[rax@@ +rcx@@ ]_rsi, mov_qword_ptr_[rax@@ +rcx@@ +@@ 8]_rsi, mov_qword_ptr_[rax@@ +rcx+0x1@@ 0]_rsi, mov_qword_ptr_[rax@@ +rcx+0x1@@ 8]_rsi, cmp_edx@@ _0x80, jb_0xffffffffffffff@@ e2, add_rax_rdx, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+8]_0, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rsp+0xf@@ 8]_rdi, test_rax_rax, setne@@ _byte_ptr_[r@@ sp+0x108], or@@ _rdi_rax, movzx_eax_byte_ptr_[rbp+0x@@ b0], setne_sil, mov_edx_eax, mov_ecx_dword_ptr_[rbp+0x@@ b4], shr_dl@@ _2, shr_al@@ _3, and_edx_1, and_eax_1, mov_qword_ptr_[rsp+0x8@@ 0]_r12, mov_qword_ptr_[rsp+0xd@@ 8]_rbx, mov_qword_ptr_[rsp+0xd@@ 0]_rbx, mov_qword_ptr_[rsp+0x18]_rdi, mov_byte_ptr_[rsp+0x10@@ b@@ ]_sil, mov_dword_ptr_[rsp+0x1@@ 1@@ 0]_ecx, mov_byte_ptr_[rsp+0x10@@ 9@@ ]_dl, mov_byte_ptr_[rsp+0x10@@ a@@ ]_al, mov_qword_ptr_[rsp+0xe@@ 8]_rbx, mov_qword_ptr_[rsp+0xe@@ 0]_rbx, lea_r15_[rsp+0x@@ 80], test_rbx_rbx, jne_0x6@@ 26, test_sil_sil, cmovne@@ _r12@@ _qword_ptr_[rsp+0x88], cmp_qword_ptr_[rsp+0x10]_0, mov_qword_ptr_[rsp+0x8@@ 8]_r12, je_0x66, cmp_ecx_1, jle_0x@@ c@@ 81, mov_rdi_r15, call_0xffffffffffff40@@ 18, test_eax_eax, jne_0x3f, cmp_rbx@@ _qword_ptr_[rsp+0xb8], jle_0x@@ d@@ 47, movsxd_rax_dword_ptr_[r@@ bp+0x@@ b4], mov_rsi_qword_ptr_[rsp+0x@@ c0], add_rax@@ _qword_ptr_[rsp+0xb0], cmp_rsi_rax, jg_0x@@ d@@ 27, add_r@@ si_rsi, mov_rdi_r15, call_0xffffffffffff3a@@ 2b, test_eax_eax, je_0xffffffffffffff@@ b9, mov_dword_ptr_[rsp+0x4c]_eax, mov_r12_qword_ptr_[r@@ 14], jmp_0x6@@ 33, cmp_ecx_1, jg_0xa@@ 3d, cmp_qword_ptr_[rsp+0x18]_0, mov_rcx_qword_ptr_[rsp+0x@@ c0], je_0x5f, cmp_qword_ptr_[rsp+0x@@ d@@ 8]_rcx, cmovle@@ _rcx@@ _qword_ptr_[rsp+0x@@ d8], mov_rax_qword_ptr_[rsp+0xb0], cmp_rcx_rax, jg_0x1@@ 3, jmp_0x@@ d@@ f9, mov_r12@@ _qword_ptr_[rsp+0x88], mov_rdx_qword_ptr_[rsp+0x80], mov_rsi_qword_ptr_[rsp+0x@@ f8], add_rdx_rax, add_rdx@@ _qword_ptr_[rsp+0x@@ a8], movzx_edx_byte_ptr_[rdx], movzx_edx_byte_ptr_[r@@ si+rdx], mov_byte_ptr_[r12@@ +rax]_dl, inc_rax, cmp_rcx_rax, jne_0xffffffffffffffcc, mov_qword_ptr_[rsp+0xb@@ 0]_rcx, mov_qword_ptr_[rsp+0xb@@ 8]_rcx, mov_dword_ptr_[rsp+0x@@ 4c]_0, mov_rbx_qword_ptr_[r@@ 14], mov_qword_ptr_[r14+0x@@ 30]_0, mov_qword_ptr_[rbx+0x@@ d@@ 8]_r13, lea_r12_[rsp+0x@@ 50], mov_rdx_r13, or_rdx@@ _0x800000, mov_rsi_r15, mov_rdi_r12, mov_qword_ptr_[rsp+0x1@@ 8]_r12, call_0xffffffffffffd@@ bc@@ 6, cdqe, mov_rcx_r13, lea_r9_[rsp+0x@@ 4c], xor_r8d_r8d, mov_rdx_r12, mov_rsi_r14, mov_rdi_r15, add_qword_ptr_[rsp+0x@@ c8]_rax, call_0xfffffffffffffa@@ 73, mov_ecx_dword_ptr_[rsp+0x@@ 4c], mov_r13_rax, test_ecx_ecx, jne_0x@@ bb@@ 5, lea_rax_[rsp+0x60], lea_r12_[r@@ bx+0x@@ 70], lea_rsi_[rbx+0x@@ 80], xor_ecx_ecx, xor_edx_edx, mov_r8_rax, mov_rdi_r12, mov_qword_ptr_[rsp+0x20]_rsi, mov_byte_ptr_[rsp+0x@@ 68@@ ]_2, mov_qword_ptr_[rsp+8]_rax, call_0xffffffffffff5b@@ 76, test_r13_r13, mov_rsi_qword_ptr_[rsp+0x20], mov_rbx_rax, je_0x23, mov_r8_qword_ptr_[rsp+8], mov_rcx_rbx, mov_rdx_r13, mov_rdi_r12, mov_byte_ptr_[rsp+0x@@ 6@@ 8]_0x10, call_0xffffffffffff5b@@ 51, mov_r8_rax, mov_rax_rbx, mov_rbx_r8, test_rax_rax, sete_dl, test_rbx_rbx, sete_al, or_dl_al, mov_r12_qword_ptr_[r@@ 14], jne_0xb@@ 8a, mov_r13_qword_ptr_[r@@ 12+8], mov_qword_ptr_[rbp+0x@@ 6@@ 8]_rbx, lea_rdi_[r@@ 13*8], mov_qword_ptr_[rsp+0x20]_rdi, call_0xfffffffffffe@@ 1c@@ c6, mov_qword_ptr_[r12+0x1@@ 8]_rax, mov_rdi_qword_ptr_[rsp+0x20], mov_rbx_rax, call_0xfffffffffffe@@ 1c@@ b4, mov_qword_ptr_[r12+0x@@ 20]_rax, lea_r13_[r@@ 13+r@@ 13@@ *2], shl_r13@@ _3, mov_rdi_r13, mov_qword_ptr_[rsp+0x28]_rax, call_0xfffffffffffe@@ 1c@@ 99, mov_qword_ptr_[r12+0x@@ 28]_rax, mov_rdi_r13, mov_qword_ptr_[rsp+0x20]_rax, call_0xfffffffffffe@@ 1c@@ 87, test_rbx_rbx, mov_qword_ptr_[r12+0x@@ 30]_rax, mov_rcx_qword_ptr_[rsp+0x20], mov_rdx_qword_ptr_[rsp+0x28], je_0x4@@ 50, test_rdx_rdx, je_0x4@@ 47, test_rcx_rcx, je_0x4@@ 3e, test_rax_rax, je_0x4@@ 35, mov_rbx_qword_ptr_[r@@ 14+0x30], lea_rdi_[r@@ bx*8], call_0xfffffffffffe@@ 1c@@ 43, mov_qword_ptr_[r12+0x@@ e0]_rax, test_rax_rax, je_0x65, xor_edx_edx, test_rbx_rbx, je_0x18, mov_qword_ptr_[rax+rdx*@@ 8]_rdx, inc_rdx, cmp_rdx_rbx, jne_0xfffffffffffffff6, mov_rdi_qword_ptr_[r12+0x@@ 68], mov_rdx_r12, lea_rsi_[rip-0x@@ a@@ ff@@ b], call_0xffffffffffff37@@ 75, mov_rdx_qword_ptr_[r14+0x@@ 30], test_rdx_rdx, je_0xa@@ 31, mov_rdi_qword_ptr_[r12+0x@@ e0], xor_eax_eax, jmp_0x15, inc_rax, cmp_rax_rdx, je_0xa@@ 1a, cmp_rax_qword_ptr_[r@@ di+rax*8], je_0xfffffffffffffff@@ 0, mov_rdi_qword_ptr_[r12+0x@@ 68], mov_rdx_r14, lea_rsi_[rip-0x@@ a@@ 2@@ 11], call_0xffffffffffff36@@ bf, test_eax_eax, jne_0xfffffffffffffd@@ 66, mov_rdi_qword_ptr_[r12+0x@@ 68], mov_rdx_r12, lea_rsi_[rip-0x@@ 7c@@ 4d], call_0xffffffffffff36@@ a3, test_eax_eax, jne_0xfffffffffffffd@@ 4a, mov_rdi_qword_ptr_[r12+0x@@ 68], lea_rsi_[rip-0x@@ a@@ fd@@ 6], mov_rdx_r12, call_0xffffffffffff36@@ f7, mov_qword_ptr_[rsp+0x20]@@ _rbp, mov_qword_ptr_[rsp+0x30]@@ _r14, mov_qword_ptr_[rsp+0x3@@ 8]_r15, mov_r13_qword_ptr_[r@@ 12+0x@@ 68], lea_rsi_[rip+0xa@@ 58@@ f], movzx_ecx_byte_ptr_[r@@ 13+0x30], mov_rdx_qword_ptr_[r13+0x@@ 38], cmp_cl@@ _0x10, ja_0x1@@ 4, movzx_eax@@ _cl, movsxd_rax_dword_ptr_[r@@ si@@ +rax*4], add_rax_rsi, jmp_rax, and_ecx@@ _8, jne_0xb@@ 98, mov_rax_qword_ptr_[r13+0x@@ 20], mov_rcx_qword_ptr_[r@@ ax+0x38], mov_rax_qword_ptr_[r12+0x18], mov_qword_ptr_[rax+rdx*@@ 8]_rcx, mov_rbx_qword_ptr_[r@@ 13+8], test_rbx_rbx, je_0x12, mov_r13_rbx, jmp_0xffffffffffffffba, mov_r13_rdx, mov_rdx_qword_ptr_[r13+0x10], test_rdx_rdx, sete_al, cmp_rdx_rbx, sete_cl, or_al@@ _cl, je_0x8@@ 9b, mov_rdx_qword_ptr_[r13], mov_rbx_r13, test_rdx_rdx, jne_0xffffffffffffffdb, xor_r13d_r13d, mov_byte_ptr_[rsp+0x@@ 28@@ ]_al, mov_r14@@ _qword_ptr_[rsp+0x30], mov_r15@@ _qword_ptr_[rsp+0x38], mov_rax_qword_ptr_[r12+0x10], mov_ebp_r13d, xor_ebx_ebx, mov_r13_r12, cmp_rbx_rax, je_0x1e, lea_r12_[r@@ bx+r@@ bx*2], shl_r12@@ _3, mov_rdx_qword_ptr_[r13+0x@@ 30], cmp_qword_ptr_[r@@ dx+r@@ 12+@@ 8]_0, je_0x26, inc_rbx, cmp_rbx_rax, jne_0xffffffffffffffe6, test_bpl_bpl, je_0x3@@ 64, mov_rdx_qword_ptr_[r13+0x@@ 30], xor_r12d_r12d, xor_ebp_ebp, xor_ebx_ebx, cmp_qword_ptr_[r@@ dx+r@@ 12+@@ 8]_0, jne_0xffffffffffffffde, mov_rdi_qword_ptr_[rsp+8], mov_ecx_1, mov_rdx_rbx, mov_rsi_r13, call_0xffffffffffff5@@ 32@@ b, test_eax_eax, jne_0x6@@ 64, mov_rax_qword_ptr_[r13+0x@@ 30], inc_rbx, cmp_qword_ptr_[r@@ ax+r@@ 12+@@ 8]_0, je_0x2@@ f1, mov_rax_qword_ptr_[r13+0x10], jmp_0xffffffffffffff8f, mov_rsi_qword_ptr_[rsp+8], mov_rdi_r15, call_0xffffffffffff34@@ 68, test_eax_eax, jne_0xfffffffffffffa@@ 3f, movzx_esi_byte_ptr_[r@@ sp+0x10@@ b], mov_ecx_dword_ptr_[rbp+0x@@ b4], jmp_0xfffffffffffff9b@@ d, mov_dword_ptr_[rsp+0x4c]@@ _0xc, mov_rdi_rbp, call_0xffffffffffff48@@ 55, mov_qword_ptr_[r@@ 14]_0, mov_qword_ptr_[r14+@@ 8]_0, mov_eax_dword_ptr_[rsp+0x4c], mov_rcx_qword_ptr_[rsp+0x1@@ 18], xor_rcx_qword_ptr_fs:[0x28], jne_0x8@@ 92, add_rsp_0x1@@ 28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_dword_ptr_[rsp+0x4c]@@ _0xc, mov_rbx_qword_ptr_[r@@ 12+0x@@ 70], test_rbx_rbx, je_0x18, mov_rdi_rbx, mov_rbx_qword_ptr_[rbx], call_0xfffffffffffe@@ 14@@ 22, test_rbx_rbx, jne_0xfffffffffffffff2, mov_qword_ptr_[r12+0x@@ 70]_0, mov_dword_ptr_[r12+0x@@ 8@@ 0]@@ _0xf, mov_qword_ptr_[r12+0x@@ 68]_0, mov_rdi_qword_ptr_[r12+0x@@ 20], call_0xfffffffffffe@@ 13@@ f5, mov_qword_ptr_[r12+0x@@ 20]_0, mov_rdi_r15, call_0xffffffffffff47@@ 74, jmp_0xffffffffffffff57, xor_edx_edx, cmp_byte_ptr_[rax+@@ 3]@@ _0x2d, sete_dl, lea_rax_[rax@@ +rdx@@ +3], cmp_byte_ptr_[rax]@@ _0x38, jne_0xfffffffffffff7@@ af, cmp_byte_ptr_[rax+1]_0, jne_0xfffffffffffff7@@ a5, or_byte_ptr_[r@@ bp+0x@@ b0@@ ]_4, jmp_0xfffffffffffff7@@ 98, mov_rdi_qword_ptr_[rsp+0x70], call_0xfffffffffffe@@ 13@@ 8b, mov_rax_qword_ptr_[r13+0x10], cmp_rax_rbx, je_0x3@@ 3f, lea_r12_[r@@ bx+r@@ bx*2], movzx_ebp@@ _byte_ptr_[rsp+0x@@ 28], shl_r12@@ _3, jmp_0xfffffffffffffc@@ 91, mov_r12_r13, mov_r13d_ebp, mov_rbp_qword_ptr_[rsp+0x20], test_byte_ptr_[r14+0x@@ 38]@@ _0x10, jne_0x18, cmp_qword_ptr_[r14+0x@@ 30]_0, je_0x11, test_byte_ptr_[r12+0x@@ b0]_1, jne_0x15, cmp_qword_ptr_[r12+0x@@ 98]_0, je_0x107, lea_rdi_[r@@ bx+r@@ bx*2], shl_rdi_3, call_0xfffffffffffe@@ 170@@ 1, mov_qword_ptr_[r12+0x@@ 38]_rax, test_rax_rax, je_0x6@@ f4, xor_ecx_ecx, test_rbx_rbx, jne_0xe, jmp_0x@@ df, mov_rax_qword_ptr_[r12+0x@@ 38], lea_rdx_[rcx@@ +rcx*2], lea_rax_[rax@@ +rdx*8], mov_qword_ptr_[rax+0x10]_0, pxor_xmm0_xmm0, movups_xmmword_ptr_[rax]_xmm0, mov_rax_qword_ptr_[r12+0x10], inc_rcx, cmp_rax_rcx, ja_0xffffffffffffff@@ d9, test_rax_rax, je_0xac, mov_qword_ptr_[rsp+0x2@@ 8]_r14, xor_ebx_ebx, mov_rax_qword_ptr_[r12+0x@@ 30], mov_qword_ptr_[rsp+0x20]@@ _rbp, mov_byte_ptr_[rsp+0x@@ 30]@@ _r13b, mov_rbp_r12, mov_r13_rbx, lea_r12_[r@@ 13+r@@ 13@@ *2], shl_r12@@ _3, lea_rdi_[rax+r@@ 12], xor_ebx_ebx, cmp_qword_ptr_[rdi+@@ 8]_0, mov_r14_qword_ptr_[r@@ di+0x10], jg@@ _0x18, jmp_0x5@@ 0, mov_rax_qword_ptr_[rbp+0x30], inc_rbx, cmp_rbx_qword_ptr_[r@@ ax+r@@ 12+8], jge_0x@@ 3c, mov_rax_qword_ptr_[r@@ 14+r@@ bx*8], mov_rsi_r13, lea_rdi_[rax@@ +rax*2], mov_rax_qword_ptr_[rbp+0x@@ 38], lea_rdi_[rax+r@@ di*8], call_0xffffffffffff3@@ 2b@@ f, test_al_al, jne_0xffffffffffffffd8, mov_rbp_qword_ptr_[rsp+0x20], mov_r14_qword_ptr_[rsp+0x28], mov_eax_0xc, mov_dword_ptr_[rsp+0x4c]_eax, mov_r12_qword_ptr_[r@@ 14], jmp_0xfffffffffffffe@@ 18, inc@@ _r13, cmp_qword_ptr_[rbp+0x@@ 10]@@ _r13, ja_0xffffffffffffff@@ 8f, mov_rbp_qword_ptr_[rsp+0x20], movzx_r13d@@ _byte_ptr_[rsp+0x@@ 30], mov_r14_qword_ptr_[rsp+0x28], movzx_eax_byte_ptr_[rbp+0x@@ b0], mov_dword_ptr_[rsp+0x@@ 4c]_0, shr_al@@ _2, cmp_qword_ptr_[rsp+0x10]_0, sete_dl, and_al@@ _dl, jne_0x2@@ bb, mov_rax_qword_ptr_[rbp+0x@@ 68], mov_rdi_qword_ptr_[rsp+8], mov_rax_qword_ptr_[rax+0x18], mov_rax_qword_ptr_[rax+0x38], lea_rdx_[rax+rax*2], mov_qword_ptr_[rbp+0x@@ 90]_rax, mov_rax_qword_ptr_[rbp+0x30], lea_rsi_[rax@@ +rdx*8], call_0xffffffffffff58@@ a1, mov_dword_ptr_[rsp+0x50]_eax, mov_ebx_eax, test_eax_eax, jne_0x1@@ 1d, cmp_qword_ptr_[rbp+0x@@ 98]_0, jle_0x@@ ce, mov_r9@@ _qword_ptr_[rsp+0x68], test_r9_r9, jle_0x@@ c0, mov_r12_qword_ptr_[rsp+8], xor_r8d_r8d, lea_r13_[rsp+0x@@ 70], jmp_0x11, inc@@ _r8, cmp_r9@@ _r8, jle_0x@@ a2, mov_rdi_qword_ptr_[rsp+0x70], mov_r10_qword_ptr_[r@@ bp], mov_rsi_qword_ptr_[r@@ di+r@@ 8@@ *8], mov_rcx_rsi, shl_rcx_4, add_rcx@@ _r10, cmp_byte_ptr_[rcx@@ +@@ 8]_4, jne_0xffffffffffffffd9, xor_edx_edx, jmp_0xd, inc_rdx, cmp_r9@@ _rdx, je_0xffffffffffffff@@ ca, mov_rax_qword_ptr_[r@@ di@@ +rdx*8], shl_rax_4, add_rax@@ _r10, cmp_byte_ptr_[rax+@@ 8@@ ]_9, jne_0xffffffffffffffe9, mov_r11_qword_ptr_[r@@ cx], cmp_qword_ptr_[rax]@@ _r11, jne_0xffffffffffffffe1, mov_rdx_qword_ptr_[rbp+0x@@ 28], lea_rax_[r@@ si+r@@ si*2], lea_rax_[rdx@@ +rax*8], mov_rax_qword_ptr_[rax+0x10], mov_rsi_r13, mov_rdx_qword_ptr_[rax], mov_rdi_r9, call_0xffffffffffff47@@ 86, test_rax_rax, jne_0xffffffffffffff@@ 8e, mov_rax_qword_ptr_[rbp+0x30], lea_rdx_[rdx@@ +rdx*2], lea_rsi_[rax@@ +rdx*8], mov_rdi_r12, call_0xffffffffffff4b@@ ed, test_eax_eax, jne_0x@@ 4c@@ 6, mov_r9@@ _qword_ptr_[rsp+0x68], mov_r8d_1, cmp_r9@@ _r8, jg_0xffffffffffffff@@ 6e, mov_rdx_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[rsp+0x18], xor_ecx_ecx, mov_rsi_rbp, call_0xffffffffffff5@@ 9a@@ 9, mov_qword_ptr_[rbp+0x@@ 48]_rax, test_rax_rax, je_0x2@@ 4d, cmp_byte_ptr_[rax+0x@@ 68]_0, js_0x1@@ db, mov_qword_ptr_[rbp+0x@@ 60]_rax, mov_qword_ptr_[rbp+0x@@ 58]_rax, mov_qword_ptr_[rbp+0x@@ 50]_rax, mov_rdi_qword_ptr_[rsp+0x70], call_0xfffffffffffe@@ 10@@ bc, mov_r12_qword_ptr_[r@@ 14], mov_dword_ptr_[rsp+0x4@@ c]_ebx, mov_rbx_qword_ptr_[r@@ 12+0x@@ 70], test_rbx_rbx, je_0x18, mov_rdi_rbx, mov_rbx_qword_ptr_[rbx], call_0xfffffffffffe@@ 10@@ 9a, test_rbx_rbx, jne_0xfffffffffffffff2, mov_qword_ptr_[r12+0x@@ 70]_0, mov_dword_ptr_[r12+0x@@ 8@@ 0]@@ _0xf, mov_qword_ptr_[r12+0x@@ 68]_0, mov_rdi_qword_ptr_[r12+0x@@ 20], call_0xfffffffffffe@@ 10@@ 6d, mov_qword_ptr_[r12+0x@@ 20]_0, mov_rdi_r15, call_0xffffffffffff4@@ 3e@@ c, mov_eax_dword_ptr_[rsp+0x4c], test_eax_eax, je_0xfffffffffffffb@@ e4, jmp_0xfffffffffffffb@@ c3, xor_ebp_ebp, xor_ebx_ebx, xor_r12d_r12d, jmp_0xfffffffffffff95@@ e, mov_rbp_qword_ptr_[rsp+0x20], jmp_0xfffffffffffff@@ 5b@@ 9, mov_rdi_r15, call_0xffffffffffff3@@ 38@@ d, mov_dword_ptr_[rsp+0x@@ 4c]_0, jmp_0xfffffffffffff6@@ 3e, mov_esi_1, mov_edi_0x20, call_0xfffffffffffe@@ 13@@ 2e, mov_qword_ptr_[rbp+0x@@ 78]_rax, test_rax_rax, je_0xfffffffffffffb@@ 62, xor_r15d_r15d, mov_qword_ptr_[rsp+0x10]@@ _r12, mov_qword_ptr_[rsp+0x18]_rbx, mov_r12_r15, mov_rbx_rbp, lea_r15d_[r@@ 12*8], xor_ebp_ebp, jmp_0x1c, test_edi_edi, jne_9, or_byte_ptr_[rbx+0x@@ b0@@ ]_8, inc_ebp, inc@@ _r15d, cmp_ebp@@ _0x40, je_0x45, mov_edi_r15d, call_0xfffffffffffe@@ 14@@ 90, mov_edi_r15d, and_edi@@ _0xffffff80, cmp_eax_-1, je_0xffffffffffffffda, mov_r8_qword_ptr_[rbx+0x@@ 78], mov_esi_1, mov_ecx_ebp, add_r8@@ _r12, shl_rsi@@ _cl, or_qword_ptr_[r@@ 8]_rsi, test_edi_edi, jne_0xffffffffffffffcd, cmp_eax@@ _r15d, jne_0xffffffffffffffc1, inc_ebp, inc@@ _r15d, cmp_ebp@@ _0x40, jne_0xffffffffffffffc8, add_r12_8, cmp_r12@@ _0x20, jne_0xffffffffffffff8f, mov_rbp_rbx, mov_r12_qword_ptr_[rsp+0x10], mov_rbx_qword_ptr_[rsp+0x18], jmp_0xfffffffffffff@@ 37@@ 7, cmp_qword_ptr_[r14+0x@@ 28]_0, jne_0xfffffffffffffd@@ 46, mov_r10_qword_ptr_[r@@ bp+0x10], test_r10_r10, je_0x3@@ 3e, mov_r11_qword_ptr_[r@@ bp], xor_ebx_ebx, mov_rdi_r11, xor_r8d_r8d, lea_r9_[rip+0x@@ 9d@@ 71], mov_esi_1, movabs_rdx@@ _0x1@@ 0000@@ 000@@ 1@@ 0001, cmp_byte_ptr_[rdi+@@ 8]_0xc, ja@@ _0xffffffff@@ fff@@ e@@ 15@@ ba, movzx_ecx_byte_ptr_[r@@ di+8], movsxd_rcx_dword_ptr_[r@@ 9@@ +rcx*4], add_rcx@@ _r9, jmp_rcx, mov_r12_qword_ptr_[rsp+8], mov_r13_qword_ptr_[r@@ sp+0x18], mov_ecx_1, mov_rdx_r12, mov_rsi_rbp, mov_rdi_r13, call_0xffffffffffff57@@ a0, mov_qword_ptr_[rbp+0x@@ 50]_rax, mov_ecx_2, mov_rdx_r12, mov_rsi_rbp, mov_rdi_r13, call_0xffffffffffff57@@ 89, mov_qword_ptr_[rbp+0x@@ 58]_rax, mov_ecx_6, mov_rdx_r12, mov_rsi_rbp, mov_rdi_r13, call_0xffffffffffff57@@ 72, cmp_qword_ptr_[rbp+0x@@ 50]_0, mov_qword_ptr_[rbp+0x@@ 60]_rax, je_0x14, cmp_qword_ptr_[rbp+0x@@ 58]_0, je_0xd, test_rax_rax, jne_0xfffffffffffffdd@@ 7, mov_ebx_dword_ptr_[rsp+0x@@ 50], jmp_0xfffffffffffffdd@@ 5, mov_rbx_rdx, jmp_0xfffffffffffff7@@ 40, mov_rdi_r15, call_0xffffffffffff3@@ 12@@ d, mov_dword_ptr_[rsp+0x@@ 4c]_0, jmp_0xfffffffffffff@@ 45@@ e, mov_rdi_rbp, mov_esi_0x@@ e8, call_0xfffffffffffe@@ 12@@ 80, mov_rbp_rax, test_rax_rax, je_0x2@@ ad, mov_qword_ptr_[r14+@@ 8]@@ _0x@@ e8, mov_qword_ptr_[r14]_rax, jmp_0xfffffffffffff0@@ d5, xor_r15d_r15d, mov_esi_1, jmp_0xfffffffffffff@@ 18@@ c, mov_rdi_qword_ptr_[r12+0x@@ e0], call_0xfffffffffffe0@@ d@@ e0, mov_qword_ptr_[r12+0x@@ e0]_0, jmp_0xfffffffffffff@@ 5e@@ 1, test_rax_rax, je_0x1@@ ad, lea_rax_[rsp+0x60], lea_r12_[r@@ bx+0x@@ 70], lea_rsi_[rbx+0x@@ 80], mov_r8_rax, xor_ecx_ecx, xor_edx_edx, mov_rdi_r12, mov_qword_ptr_[rsp+0x20]_rsi, mov_byte_ptr_[rsp+0x@@ 68@@ ]_2, mov_qword_ptr_[rsp+8]_rax, call_0xffffffffffff4@@ fb@@ e, mov_rbx_rax, mov_rsi_qword_ptr_[rsp+0x20], jmp_0xfffffffffffff@@ 44@@ d, mov_dword_ptr_[rsp+0x4c]@@ _0xc, mov_qword_ptr_[rbp+0x@@ 68]_0, jmp_0xfffffffffffff93@@ 0, mov_dword_ptr_[rsp+0x@@ 4c]_0, jmp_0xfffffffffffff@@ 38@@ 6, mov_ebx_eax, jmp_0xfffffffffffffb@@ 97, mov_rcx_rax, jmp_0xfffffffffffff@@ 24@@ 3, mov_dword_ptr_[rsp+0x4c]@@ _0xc, mov_r12_qword_ptr_[r@@ 14], jmp_0xfffffffffffff7d@@ d, mov_qword_ptr_[rbp+0x@@ 68]_0, mov_r12_qword_ptr_[r@@ 14], jmp_0xfffffffffffff7c@@ d, xor_ebx_ebx, cmp_qword_ptr_[rbp+0x@@ 98]_0, setg_al, movzx_edx_byte_ptr_[r@@ bp+0x@@ b0], or@@ _ebx_eax, lea_eax_[r@@ bx+r@@ bx], and_eax@@ _6, and_edx@@ _0xfffffff9, or_eax_edx, mov_dword_ptr_[rbp+0x@@ b@@ 4]_1, mov_byte_ptr_[rbp+0x@@ b0@@ ]_al, jmp_0xfffffffffffff9c@@ a, call_0xfffffffffffe0@@ d@@ 8a, lea_rcx_[rip+0x@@ 9a@@ 7e], mov_edx_0x5@@ ce, lea_rsi_[rip+0x9@@ 5b@@ 4], lea_rdi_[rip+0x@@ 9c@@ eb], call_0xfffffffffffe0@@ d@@ fb, mov_eax_0xc, jmp_0xfffffffffffff6f@@ 6
endbr64, sub_rsp_8, mov_rcx_qword_ptr_[rip+0x@@ 14@@ da@@ 1], mov_r8_rdi, mov_rax_rcx, shr_rax@@ _0x19, mov_rdi_rdx, and_eax_1, movzx_edx_byte_ptr_[r@@ dx+0x@@ 38], shl_eax_4, and_edx@@ _0x6f, or_eax@@ _0xffffff80, or_eax_edx, mov_byte_ptr_[rdi+0x@@ 38@@ ]_al, mov_rdx_rsi, mov_rsi_r8, call_0xffffffffffffed@@ 89, test_eax_eax, je_0x2a, lea_rdx_[rip+0x@@ 9a@@ 29], cdqe, lea_rsi_[rip+0x9a@@ c0], add_rsi_qword_ptr_[r@@ dx+rax*8], xor_edi_edi, mov_edx_5, add_rsp_8, jmp_0xfffffffffff@@ e0@@ c@@ 71, xor_eax_eax, add_rsp_8, ret
endbr64, mov_rax_qword_ptr_[rip+0x@@ 14@@ d@@ 35], mov_qword_ptr_[rip+0x@@ 14@@ d@@ 2e@@ ]_rdi, ret
endbr64, push_r12, xor_esi_esi, xor_ecx_ecx, push_rbp, push_rbx, mov_rbx_rdi, mov_r12_qword_ptr_[r@@ di+0x20], mov_rbp_qword_ptr_[rdi], lea_rax_[r@@ 12+8], and_rax@@ _0xfffffffffffffff8, mov_rdx_r12, sub_rdx_rax, mov_qword_ptr_[r12]_0, mov_qword_ptr_[r12+0x@@ e0]_0, mov_qword_ptr_[r12+0x@@ e8]_0, mov_qword_ptr_[r12+0x@@ f0]_0, mov_qword_ptr_[r12+0x@@ f8]_0, add_edx@@ _0x100, and_edx_0xffffff@@ e0, mov_edi_ecx, add_ecx@@ _0x20, mov_qword_ptr_[rax+r@@ di]@@ _rsi, mov_qword_ptr_[rax+r@@ di+@@ 8]_rsi, mov_qword_ptr_[rax+r@@ di+0x1@@ 0]_rsi, mov_qword_ptr_[rax+r@@ di+0x1@@ 8]_rsi, cmp_ecx_edx, jb_0xffffffffffffff@@ e6, mov_rsi_qword_ptr_[rbp+0x@@ 48], mov_rcx_r12, lea_rdx_[r@@ si+0x18], mov_rdi_rbx, add_rsi@@ _0x10, call_0xffffffffffff8@@ 24@@ c, mov_rsi_qword_ptr_[rbp+0x@@ 50], cmp_qword_ptr_[rbp+0x@@ 4@@ 8]_rsi, je_0x19, lea_rdx_[r@@ si+0x18], mov_rcx_r12, add_rsi@@ _0x10, mov_rdi_rbx, call_0xffffffffffff8@@ 22@@ f, mov_rsi_qword_ptr_[rbp+0x@@ 48], mov_rax_qword_ptr_[rbp+0x@@ 58], cmp_rax_rsi, je_0x19, lea_rsi_[rax+0x10], lea_rdx_[r@@ ax+0x18], mov_rcx_r12, mov_rdi_rbx, call_0xffffffffffff8@@ 20@@ f, mov_rsi_qword_ptr_[rbp+0x@@ 48], mov_rax_qword_ptr_[rbp+0x@@ 60], cmp_rax_rsi, je_0x15, lea_rdx_[r@@ ax+0x18], lea_rsi_[rax+0x10], mov_rcx_r12, mov_rdi_rbx, call_0xffffffffffff8@@ 1e@@ f, or_byte_ptr_[rbx+0x@@ 38@@ ]_8, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret
push_r15, mov_rax_r8, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rcx, add_r8@@ _rbx, sub_rsp_0x38, mov_ecx_dword_ptr_[rsp+0x@@ 78], mov_r12@@ _qword_ptr_[rsp+0x70], mov_dword_ptr_[rsp+0x28]_ecx, test_rbx_rbx, js_0x3@@ 39, cmp_rbx_rdx, jg_0x3@@ 30, mov_r15_rdi, cmp_r8@@ _rdx, jg_0x2@@ 84, test_rax_rax, js@@ _0xb, cmp_rbx@@ _r8, jg_0x2@@ 76, test_r8_r8, js_0x2@@ e5, test_rax_rax, jns@@ _0xb, cmp_rbx@@ _r8, jle_0x@@ 2d@@ 7, movzx_eax_byte_ptr_[r@@ 15+0x38], mov_r13d_eax, shr@@ _r13@@ b@@ _5, mov_edi_r13d, and_edi@@ _3, mov_dword_ptr_[rsp+0x2c]@@ _edi, cmp_r8@@ _rbx, jle_0x@@ 11, cmp_qword_ptr_[r15+0x@@ 20]_0, je_0xa, test_al_8, je_0x1@@ f5, test_al_0x10, jne_0x1@@ cd, test_r12_r12, je_0x1@@ c4, and_eax@@ _6, mov_rcx_qword_ptr_[r@@ 15+0x30], cmp_al_4, je_0x1@@ 95, lea_r14_[r@@ cx+1], mov_r13_r14, mov_rdi_r14, shl_rdi_4, mov_qword_ptr_[rsp+0x20]_r9, mov_qword_ptr_[rsp+0x18]_rdx, mov_qword_ptr_[rsp+0x10]_rsi, mov_qword_ptr_[rsp+8]_r8, call_0xfffffffffffe0@@ cb@@ d, mov_rbp_rax, test_rax_rax, je_0x2@@ 92, sub_rsp_8, mov_eax_dword_ptr_[rsp+0x34], mov_rcx_rbx, push_rax, mov_rdi_r15, push_rbp, push_r14, mov_r9_qword_ptr_[rsp+0x40], mov_r8_qword_ptr_[rsp+0x28], mov_rdx_qword_ptr_[rsp+0x38], mov_rsi_qword_ptr_[rsp+0x30], call_0xffffffffffffa@@ 86@@ 6, add_rsp_0x20, test_eax_eax, je_0x33, mov_r12@@ _-1, cmp_eax_1, je_9, mov_r12@@ _-2, mov_rdi_rbp, call_0xfffffffffffe0@@ 88@@ 3, add_rsp_0x38, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, test_r12_r12, je_0xcc, movzx_eax_byte_ptr_[r@@ 15+0x38], lea_rdx_[r@@ 13+1], shr_al@@ _1, and_eax_3, je_0x1@@ 71, cmp_eax_1, je_0x2@@ 18, cmp_eax_2, jne_0x2@@ e7, cmp_r14@@ _qword_ptr_[r@@ 12], ja_0x2@@ be, mov_r9d_2, test_r13_r13, jle_0x@@ 26@@ 6, mov_r8_qword_ptr_[r@@ 12+8], mov_rdi_qword_ptr_[r12+0x10], mov_rdx_r13, lea_rsi_[r@@ 13*8], xor_eax_eax, mov_rcx_qword_ptr_[r@@ bp@@ +rax*2], mov_qword_ptr_[r@@ 8@@ +rax@@ ]_rcx, mov_rcx_qword_ptr_[r@@ bp@@ +rax*2@@ +8], mov_qword_ptr_[rdi@@ +rax@@ ]_rcx, add_rax_8, cmp_rax_rsi, jne_0xffffffffffffffe7, cmp_qword_ptr_[r@@ 12@@ ]_rdx, jbe_0x@@ 2d, mov_rax_qword_ptr_[r12+0x10], mov_rcx_qword_ptr_[r@@ 12+8], mov_qword_ptr_[rax+rdx*@@ 8]_-1, mov_qword_ptr_[rcx@@ +rdx*@@ 8]_-1, inc@@ _r13, mov_rdx_r13, cmp_qword_ptr_[r@@ 12]@@ _r13, ja_0xffffffffffffff@@ e6, movzx_eax_byte_ptr_[r@@ 15+0x38], lea_r13d_[r@@ 9+r@@ 9], and_eax_0xfffffff@@ 9, or_eax@@ _r13d, mov_byte_ptr_[r15+0x@@ 38@@ ]_al, test_al@@ _6, je_0xffffffffffffff@@ 12, cmp_byte_ptr_[rsp+0x@@ 28]_0, mov_r12_qword_ptr_[r@@ bp], je_0xffffffffffffff@@ 0a, cmp_rbx_r12, jne_0x1@@ f1, mov_rax_qword_ptr_[rbp+8], sub_rax_r12, mov_r12_rax, jmp_0xfffffffffffffef1, mov_r14_qword_ptr_[r@@ 12], cmp_r14@@ _rcx, ja_0xfffffffffffffe@@ 6a, mov_r13_r14, test_r14_r14, jg_0xfffffffffffffe@@ 65, mov_edi_0x10, mov_r14d_1, mov_r13d_1, xor_r12d_r12d, jmp_0xfffffffffffffe@@ 4b, mov_rdi_r15, mov_qword_ptr_[rsp+0x20]_r9, mov_qword_ptr_[rsp+0x18]_rdx, mov_qword_ptr_[rsp+0x10]_rsi, mov_qword_ptr_[rsp+8]_r8, call_0xfffffffffffffc@@ 59, movzx_eax_byte_ptr_[r@@ 15+0x38], mov_r9_qword_ptr_[rsp+0x20], mov_rdx_qword_ptr_[rsp+0x18], mov_rsi_qword_ptr_[rsp+0x10], mov_r8_qword_ptr_[rsp+8], jmp_0xfffffffffffffdd@@ c, mov_r8_rdx, jmp_0xfffffffffffffd@@ a4, lea_r14@@ _[rdx@@ *8], mov_rdi_r14, mov_qword_ptr_[rsp+8]_rdx, call_0xfffffffffffe0@@ a@@ b0, test_rax_rax, mov_qword_ptr_[r12+8]_rax, mov_rdx_qword_ptr_[rsp+8], je_0x1@@ 10, mov_rdi_r14, mov_qword_ptr_[rsp+8]_rdx, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffe0@@ a@@ 8b, test_rax_rax, mov_qword_ptr_[r12+0x10]_rax, mov_rdx_qword_ptr_[rsp+8], mov_r8_qword_ptr_[rsp+0x10], je_0xde, mov_qword_ptr_[r12@@ ]_rdx, mov_r9d_1, jmp_0xfffffffffffffe@@ 5b, movzx_eax_byte_ptr_[r@@ 15+0x38], xor_r8d_r8d, mov_r13d_eax, shr@@ _r13@@ b@@ _5, mov_ecx_r13d, and_ecx@@ _3, mov_dword_ptr_[rsp+0x2@@ c]_ecx, jmp_0xfffffffffffffd@@ 40, mov_r12@@ _-1, jmp_0xfffffffffffffd@@ cb, mov_r12@@ _-2, jmp_0xfffffffffffffd@@ bb, mov_r9d_1, cmp_qword_ptr_[r@@ 12@@ ]_rdx, jae_0xffffffffffff@@ fd@@ fd, mov_rdi_qword_ptr_[r12+8], lea_rsi_[rdx@@ *8], mov_byte_ptr_[rsp+0x1@@ 8]@@ _r9b, mov_qword_ptr_[rsp+0x10]_rdx, mov_qword_ptr_[rsp+8]_rsi, call_0xfffffffffffe0@@ a@@ 64, mov_r14_rax, test_rax_rax, je_0x4b, mov_rdi_qword_ptr_[r12+0x10], mov_rsi_qword_ptr_[rsp+8], call_0xfffffffffffe0@@ a@@ 4d, test_rax_rax, mov_rdx_qword_ptr_[rsp+0x10], movzx_r9d_byte_ptr_[r@@ sp+0x18], je_0x34, mov_qword_ptr_[r12+@@ 8]_r14, mov_qword_ptr_[r12+0x10]_rax, mov_qword_ptr_[r12@@ ]_rdx, jmp_0xfffffffffffffd@@ a1, xor_edx_edx, xor_r13d_r13d, jmp_0xfffffffffffffdd@@ 6, mov_rdi_r8, call_0xfffffffffffe0@@ 5b@@ 3, xor_r9d_r9d, jmp_0xfffffffffffffd@@ f7, mov_rdi_r14, call_0xfffffffffffe0@@ 5a@@ 3, xor_r9d_r9d, jmp_0xfffffffffffffd@@ e7, lea_rcx_[rip+0x@@ 94@@ 1f], mov_edx_0x1@@ be, lea_rsi_[rip+0x@@ 8f@@ 23], lea_rdi_[rip+0x8@@ fe@@ 7], call_0xfffffffffffe0@@ 7c@@ c, lea_rcx_[rip+0x@@ 93@@ f0], mov_edx_0x1@@ fb, lea_rsi_[rip+0x8@@ f0@@ 4], lea_rdi_[rip+0x8@@ fb@@ 0], call_0xfffffffffffe0@@ 7a@@ d, lea_rcx_[rip+0x9@@ 3d@@ 1], mov_edx_0x1@@ f9, lea_rsi_[rip+0x8@@ ee@@ 5], lea_rdi_[rip+0x8@@ f7@@ 4], call_0xfffffffffffe0@@ 78@@ e
push_r15, push_r14, mov_r14_r9, push_r13, mov_r13_rdi, push_r12, push_rbp, mov_rbp_rcx, push_rbx, mov_rbx_rdx, mov_rdx_r8, sub_rsp_0x28, mov_r9@@ _qword_ptr_[rsp+0x70], shr_rdx@@ _0x3f, mov_rax_r9, shr_rax_0x3f, mov_edi_edx, or@@ _dil@@ _al, mov_ecx_dword_ptr_[rsp+0x@@ 78], jne_0x@@ d2, test_rbx_rbx, js_0x@@ c9, mov_r10@@ _rbx, add_r10@@ _r8, mov_r12_r8, j@@ o@@ _0x@@ ba, test_r8_r8, je_0xc1, mov_qword_ptr_[rsp+8]_rsi, xor_r15d_r15d, test_rbx_rbx, jne_0x48, movzx_ecx_cl, push_rcx, mov_rdx_r10, mov_rcx_r14, push@@ _qword_ptr_[rsp+0x70], mov_rsi_rbp, mov_rdi_r13, mov_r8@@ _qword_ptr_[rsp+0x70], call_0xfffffffffffffa@@ fd, mov_rdi_r15, mov_r12_rax, call_0xfffffffffffe0@@ 4a@@ 2, pop_rax, pop_rdx, add_rsp_0x28, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_r10, mov_dword_ptr_[rsp+0x1@@ c]_ecx, mov_qword_ptr_[rsp+0x7@@ 0]_r9, mov_qword_ptr_[rsp+0x10]_r10, call_0xfffffffffffe0@@ 84@@ f, mov_r15_rax, test_rax_rax, je_0x3c, mov_rsi_qword_ptr_[rsp+8], mov_rdx_rbx, mov_rdi_rax, call_0xfffffffffffe0@@ 7c@@ 7, mov_rsi_rbp, lea_rdi_[r@@ 15+r@@ bx], mov_rdx_r12, call_0xfffffffffffe0@@ 7b@@ 8, mov_rbp_r15, mov_r10_qword_ptr_[rsp+0x10], mov_r9@@ _qword_ptr_[rsp+0x70], mov_ecx_dword_ptr_[rsp+0x1c], jmp_0xffffffffffffff6c, mov_r12@@ _-2, jmp_0xffffffffffffff86, mov_rbp_rsi, xor_r15d_r15d, jmp_0xffffffffffffff4@@ c
endbr64, push_r14, mov_eax_edx, and_eax_1, push_r13, cmp_eax_1, sbb@@ _r13@@ _r13, push_r12, mov_r14_rsi, and_r13d@@ _0x@@ fd@@ 4@@ fc@@ a, push_rbp, mov_rbp_rdi, add_r13@@ _0x3@@ b@@ 2f@@ c, push_rbx, mov_qword_ptr_[rdi]_0, mov_qword_ptr_[rdi+8]_0, mov_qword_ptr_[rdi+0x10]_0, mov_edi@@ _0x100, mov_ebx_edx, call_0xfffffffffffe0@@ 7@@ 97, mov_qword_ptr_[rbp+0x20]_rax, test_rax_rax, je_0xb3, mov_r12_rbx, shl_r12@@ _0x15, and_r12d@@ _0x4@@ 00000, or@@ _r12@@ _r13, xor_eax_eax, test_bl@@ _4, jne_0x5f, shr_ebx@@ _3, and_ebx_1, shl_eax@@ _7, shl_ebx@@ _4, or@@ _ebx_eax, movzx_eax_byte_ptr_[rbp+0x@@ 38], mov_qword_ptr_[rbp+0x@@ 28]_0, and_eax@@ _0x6f, or@@ _ebx_eax, mov_byte_ptr_[rbp+0x@@ 38@@ ]_bl, mov_rdi_r14, call_0xfffffffffffe0@@ 50@@ 8, mov_rdx_rax, mov_rcx_r12, mov_rsi_r14, mov_rdi_rbp, call_0xffffffffffffe@@ 5c@@ 7, mov_r12d_eax, cmp_eax_0x10, je_0x34, test_eax_eax, jne_0x36, mov_rdi_rbp, call_0xfffffffffffff88@@ 3, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, ret, and@@ _r12@@ _0xffffffffffffff@@ bf, or@@ _r12@@ _0x100, mov_eax_1, jmp_0xffffffffffffff93, mov_r12d@@ _8, mov_rdi_qword_ptr_[rbp+0x20], call_0xfffffffffffe0@@ 30@@ e, mov_qword_ptr_[rbp+0x@@ 20]_0, jmp_0xffffffffffffffc3, pop_rbx, pop_rbp, mov_r12d@@ _0xc, mov_eax_r12d, pop_r12, pop_r13, pop_r14, ret
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, cmp_edi@@ _0x10, ja@@ _0xffffffff@@ fff@@ e0@@ 97@@ c, movsxd_rdi_edi, lea_rax_[rip+0x@@ 9@@ 1d@@ f], lea_rsi_[rip+0x@@ 92@@ 78], add_rsi_qword_ptr_[r@@ ax+r@@ di*8], mov_r13_rdx, xor_edi_edi, mov_edx_5, mov_rbx_rcx, call_0xfffffffffffe0@@ 42@@ 7, mov_rdi_rax, mov_rbp_rax, call_0xfffffffffffe0@@ 4@@ 3c, lea_r12@@ _[rax+1], test_rbx_rbx, je_0x15, mov_rdx_r12, cmp_r12_rbx, ja@@ _0x20, mov_rsi_rbp, mov_rdi_r13, call_0xfffffffffffe0@@ 5f@@ 0, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, mov_byte_ptr_[r@@ 13+r@@ bx@@ -1]_0, lea_rdx_[r@@ bx-1], jmp_0xffffffffffffffd@@ 8
endbr64, push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi], test_rdi_rdi, je_7, call_0xffffffffffff36@@ 10, mov_qword_ptr_[rbx]_0, mov_qword_ptr_[rbx+8]_0, mov_rdi_qword_ptr_[rbx+0x20], call_0xfffffffffffe0@@ 228, mov_qword_ptr_[rbx+0x20]_0, mov_rdi_qword_ptr_[rbx+0x28], call_0xfffffffffffe0@@ 2@@ 17, mov_qword_ptr_[rbx+0x28]_0, pop_rbx, ret
endbr64, test_r@@ 8d@@ _0xfffffff8, jne_0x95, push_r13, mov_r13_rdx, push_r12, mov_r12_rcx, push_rbp, mov_rbp_rdi, push_rbx, mov_ebx_r8d, sub_rsp_0x18, test_r8b@@ _4, jne_0x55, mov_rdi_rsi, mov_qword_ptr_[rsp+8]_rsi, call_0xfffffffffffe0@@ 36@@ b, mov_rdx_rax, mov_rsi_qword_ptr_[rsp+8], xor_ecx_ecx, test_byte_ptr_[rbp+0x@@ 38]@@ _0x10, je_0x46, sub_rsp_8, push_rbx, push_0, push_0, mov_rdi_rbp, mov_r9_rdx, mov_r8_rdx, call_0xffffffffffffa@@ 1@@ 64, add_rsp_0x20, test_eax_eax, setne_al, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, movzx_eax_al, pop_r13, ret, mov_rcx_qword_ptr_[r@@ cx], mov_rdx_qword_ptr_[r12+8], test_byte_ptr_[rbp+0x@@ 38]@@ _0x10, jne_0xffffffffffffffbe, sub_rsp_8, push_rbx, push_r12, push_r13, jmp_0xffffffffffffffbc, mov_eax_2, ret
endbr64, sub_rsp_8, push_1, mov_r9_rdx, push_r8, xor_r8d_r8d, call_0xfffffffffffff78@@ e, add_rsp_0x18, ret
endbr64, sub_rsp_8, push_0, push_r9, mov_r9_rdx, call_0xfffffffffffff77@@ 1, add_rsp_0x18, ret
endbr64, sub_rsp_8, push_1, push@@ _qword_ptr_[rsp+0x20], push@@ _qword_ptr_[rsp+0x20], push_0, call_0xfffffffffffffb@@ cc, add_rsp_0x28, ret
endbr64, sub_rsp_8, push_0, push@@ _qword_ptr_[rsp+0x28], push@@ _qword_ptr_[rsp+0x28], push@@ _qword_ptr_[rsp+0x28], call_0xfffffffffffffb@@ aa, add_rsp_0x28, ret
endbr64, test_rdx_rdx, je_0x21, movzx_eax_byte_ptr_[r@@ di+0x38], and_eax_0xfffffff@@ 9, or_eax_2, mov_byte_ptr_[rdi+0x@@ 38@@ ]_al, mov_qword_ptr_[rsi@@ ]_rdx, mov_qword_ptr_[rsi+@@ 8]_rcx, mov_qword_ptr_[rsi+0x1@@ 0]_r8, ret, and_byte_ptr_[r@@ di+0x@@ 38]@@ _0xf@@ 9, mov_qword_ptr_[rsi]_0, mov_qword_ptr_[rsi+0x1@@ 0]_0, mov_qword_ptr_[rsi+@@ 8]_0, ret
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ 9d], endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 12@@ 75], mov_rsi_rdi, test_rdi_rdi, je_0x1a, mov_edx_1, lea_rdi_[rip+0x9@@ 1e@@ c], jmp_0xfffffffffff@@ e0@@ 17@@ c, lea_rdi_[rip+0x9@@ 1d@@ 9], jmp_0xfffffffffff@@ e0@@ 5b@@ 9
endbr64, cmp_rdi@@ _1, je_8, jmp_0xfffffffffffffc@@ a6, ret
push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, call_0xfffffffffffe@@ 00@@ 53, cmp_byte_ptr_[rbp+@@ 8]_0, mov_r12d_dword_ptr_[rax], mov_rbx_rax, lea_rdi_[r@@ bp+@@ 9], jne_4, xor_edi_edi, call_0xffffffffffffff@@ 7c, test_eax_eax, je_0x25, mov_r12d_dword_ptr_[r@@ bx], xor_r13d_r13d, mov_rdi_rbp, call_0xffffffffffffff@@ 9a, mov_dword_ptr_[rbx]@@ _r12d, add_rsp_8, mov_eax_r13d, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, call_0xfffffffffffe0@@ 350, mov_r13d_1, jmp_0xffffffffffffffd@@ 8
endbr64, push_r12, push_rbp, push_rbx, test_rdi_rdi, je_0x65, mov_rbp_rdi, call_0xfffffffffffe0@@ 150, lea_rbx_[rax+1], cmp_rbx@@ _0x7@@ 6, mov_edi_0x7@@ 6, cmovae@@ _rdi@@ _rbx, add_rdi@@ _0x11, and_rdi_0xfffffffffffffff8, call_0xfffffffffffe0@@ 37@@ 2, mov_r12_rax, test_rax_rax, je_0x2a, mov_qword_ptr_[rax]_0, mov_eax_1, mov_word_ptr_[r@@ 12+@@ 8]_ax, lea_rdi_[r@@ 12+@@ 9], mov_rdx_rbx, mov_rsi_rbp, call_0xfffffffffffe0@@ 2d@@ 8, mov_byte_ptr_[r12+r@@ bx+@@ 9]_0, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, mov_edi@@ _0x80, call_0xfffffffffffe0@@ 32@@ b, mov_r12_rax, test_rax_rax, je_0xffffffffffffffe3, xor_edx_edx, mov_qword_ptr_[r12]_0, mov_word_ptr_[r@@ 12+@@ 8]_dx, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_r12_qword_ptr_[r@@ si+0x30], test_r12_r12, je_0xab, mov_rbp_rdi, mov_r13_rsi, cmp_rsi@@ _r12, ja@@ _0x10, lea_rdx_[r@@ si+0x38], mov_eax_1, cmp_r12@@ _rdx, jb@@ _0x6f, cmp_byte_ptr_[r12]_0, lea_rbx_[r@@ bp+@@ 9], je_0x73, mov_rsi_r12, mov_rdi_rbx, call_0xfffffffffffe0@@ 2@@ 1a, test_eax_eax, je_0x4b, cmp_byte_ptr_[rbx]_0, jne_0x11, lea_r14_[r@@ bp+@@ 9], cmp_r14_rbx, jne_0x7d, cmp_byte_ptr_[rbp+@@ 8]_0, je_0x77, mov_rdi_rbx, call_0xfffffffffffe@@ 00@@ 5a, lea_rbx_[r@@ bx+rax+1], cmp_byte_ptr_[rbx]_0, jne_0xffffffffffffffcd, mov_rax_qword_ptr_[rbp], test_rax_rax, je_0xffffffffffffff@@ c4, lea_rbx_[rax@@ +@@ 9], mov_rsi_r12, mov_rdi_rbx, mov_rbp_rax, call_0xfffffffffffe0@@ 1d@@ 5, test_eax_eax, jne_0xffffffffffffffbd, mov_qword_ptr_[r13+0x@@ 30]@@ _rbx, mov_eax_1, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rbx_[rip+0x@@ 7d@@ 39], jmp_0xffffffffffffffe1, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_1, pop_r15, ret, mov_rdi_r12, call_0xfffffffffffd@@ ff@@ e5, mov_r15_rax, lea_rdx_[rax+1], mov_rax_rbx, sub_rax_r14, mov_rcx_rax, not_rcx, cmp_rcx_rdx, jb@@ _0x22, add_rax_rdx, cmp_rax@@ _0x7@@ 6, ja_0x3@@ 1, mov_rsi_r12, mov_rdi_rbx, call_0xfffffffffffe0@@ 18@@ 9, mov_byte_ptr_[rbx+r@@ 15+@@ 1]_0, jmp_0xffffffffffffff86, call_0xfffffffffffd@@ fe@@ 48, mov_dword_ptr_[rax]_0xc, xor_eax_eax, jmp_0xffffffffffffff7c, mov_rdi_r12, call_0xfffffffffffffe@@ 2d, mov_qword_ptr_[rbp]_rax, test_rax_rax, je_0xf, mov_byte_ptr_[rax+@@ 8]_0, lea_rbx_[rax@@ +@@ 9], jmp_0xffffffffffffff4f, xor_eax_eax, jmp_0xffffffffffffff5@@ 1
push_r12, push_rbp, push_rbx, mov_rbx_rdi, lea_rdi_[rip+0x@@ 8f@@ 32], call_0xfffffffffffd@@ fd@@ 82, mov_rbp_rax, test_rax_rax, je_0x77, cmp_byte_ptr_[rbx+@@ 8]_0, jne_0x51, mov_rdi_rbp, call_0xfffffffffffffdd@@ c, mov_r12_rax, test_rax_rax, je_0x34, xor_edi_edi, cmp_byte_ptr_[rbx+@@ 8]_0, je_6, lea_rdi_[r@@ bx+@@ 9], call_0xfffffffffffffd@@ 03, test_eax_eax, je_0x64, call_0xfffffffffffd@@ fd@@ ba, mov_ebp_dword_ptr_[rax], mov_rbx_rax, cmp_r12@@ _1, je_0xa, mov_rdi_r12, call_0xfffffffffffffd@@ 17, mov_dword_ptr_[rbx]@@ _ebp, xor_r12d_r12d, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, lea_rdi_[r@@ bx+@@ 9], mov_rsi_rax, call_0xfffffffffffe@@ 00@@ 89, mov_r12d_1, test_eax_eax, jne_0xffffffffffffff9d, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, cmp_byte_ptr_[rbx+@@ 8]_0, mov_r12d_1, jne_0xffffffffffffff@@ 87, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, call_0xfffffffffffe@@ 00@@ 98, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 140@@ d], endbr64, push_r14, mov_r14_rsi, push_r13, push_r12, push_rbp, mov_rbp_rdx, sub_rsp_8, test_rdi_rdi, je_0x78, mov_r12_rdi, call_0xffffffffffffff@@ 03, mov_r13_rax, test_rax_rax, je_0x46, mov_rsi_rbp, mov_rdi_r14, call_0xfffffffffffd@@ fd@@ 10, test_rax_rax, je_0x28, mov_rsi_rbp, mov_rdi_r12, call_0xfffffffffffffd@@ 80, test_al_al, je_0x19, cmp_r13@@ _1, jne_0x33, add_rsp_8, mov_rax_rbp, pop_rbp, pop_r12, pop_r13, pop_r14, ret, cmp_r13@@ _1, je_0xa, mov_rdi_r13, call_0xfffffffffffffc@@ 57, add_rsp_8, pop_rbp, pop_r12, pop_r13, xor_eax_eax, pop_r14, ret, mov_rdi_r13, call_0xfffffffffffffc@@ 3d, test_al_al, jne_0xffffffffffffffc5, jmp_0xffffffffffffffe2, add_rsp_8, pop_rbp, pop_r12, pop_r13, mov_rdi_r14, mov_rsi_rdx, pop_r14, jmp_0xfffffffffffd@@ fe@@ 6@@ f
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rsi, sub_rsp_0x50, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, test_rdi_rdi, je_0xfd, mov_r12_rdi, call_0xfffffffffffffe@@ 44, mov_r13_rax, test_rax_rax, je_0xf9, mov_rdi_rbp, call_0xfffffffffffe@@ 00@@ 30, mov_qword_ptr_[rsp+8]_rax, cmp_rax_-1, je_0x5a, mov_rsi_rbp, mov_rdi_r12, call_0xfffffffffffffc@@ ba, test_al_al, jne_0xb, mov_qword_ptr_[rsp+@@ 8]_-1, cmp_r13@@ _1, je_0x12, mov_rdi_r13, call_0xfffffffffffffb@@ 9f, test_al_al, je_0xb8, mov_rax_qword_ptr_[rsp+8], mov_rcx_qword_ptr_[rsp+0x48], xor_rcx_qword_ptr_fs:[0x28], jne_0xa@@ b, add_rsp_0x50, pop_rbp, pop_r12, pop_r13, ret, lea_rsi_[rsp+0x10], lea_rdi_[rsp+8], call_0xfffffffffffd@@ fb@@ de, test_rax_rax, je_0xffffffffffffff@@ ae, mov_eax_dword_ptr_[rbp+0x@@ 20], mov_edx_dword_ptr_[rsp+0x30], test_eax_eax, sete_sil, test_edx_edx, sete_cl, cmp_sil@@ _cl, je_0xa, test_eax_eax, js@@ _6, test_edx_edx, jns_0xffffffffffffff@@ 8f, mov_eax_dword_ptr_[rbp+0x10], mov_edx_dword_ptr_[rbp+0x@@ 14], xor_eax@@ _dword_ptr_[rsp+0x20], xor_edx@@ _dword_ptr_[rsp+0x@@ 24], or_eax_edx, mov_edx_dword_ptr_[rbp+0x@@ c], xor_edx_dword_ptr_[r@@ sp+0x1c], or_eax_edx, mov_edx_dword_ptr_[r@@ bp+8], xor_edx_dword_ptr_[r@@ sp+0x18], or_eax_edx, mov_edx_dword_ptr_[r@@ bp+4], xor_edx_dword_ptr_[r@@ sp+0x14], or_eax_edx, mov_edx_dword_ptr_[rbp], xor_edx_dword_ptr_[r@@ sp+0x10], or_eax_edx, je_0xffffffffffffff@@ 41, jmp_0xffffffffffffff53, mov_rdi_rsi, call_0xfffffffffffd@@ ff@@ bd, jmp_0xffffffffffffff5b, mov_rax_-1, jmp_0xffffffffffffff4c, call_0xfffffffffffd@@ fc@@ b@@ 4
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 14@@ ad], endbr64, sub_rsp_8, cmp_edi@@ _-0x@@ 64, jn@@ e@@ _0xffffffff@@ fff@@ e0@@ 18@@ 7, mov_rdi_rsi, add_rsp_8, mov_rsi_rdx, mov_rdx_rcx, jmp_0xfffffffffff@@ df@@ bb@@ 2
endbr64, mov_rsi_rdi, lea_r9_[rip-0x@@ 3e], xor_r8d_r8d, xor_ecx_ecx, xor_edx_edx, mov_edi@@ _0xffffff@@ 9c, jmp_0x7@@ 6
endbr64, xor_eax_eax, cmp_rdi_rsi, je_0x5a, xor_r8d_r8d, jmp_0x21, add_eax@@ _0x20, add_r9d@@ _0x20, cmp_ecx@@ _0x19, ja@@ _0xd, add_r10d@@ _0x20, add_edx@@ _0x20, test_eax_eax, je_0x3b, inc@@ _r8, cmp_r9b@@ _dl, jne_0x33, movzx_eax_byte_ptr_[r@@ di+r@@ 8], movzx_ecx_byte_ptr_[rsi@@ +r@@ 8], lea_r11d@@ _[rax@@ -0x@@ 41], mov_edx_ecx, mov_r9d_eax, sub_ecx@@ _0x41, movzx_r10d@@ _dl, cmp_r11d@@ _0x19, jbe_0xffffffffffffff@@ c3, cmp_ecx@@ _0x19, jbe_0xffffffffffffff@@ ca, test_eax_eax, jne_0xffffffffffffffd1, sub_eax@@ _r10d, ret
endbr64, push_r15, push_r14, mov_r14_r9, push_r13, mov_r13_rsi, push_r12, mov_r12d_edi, push_rbp, mov_rbp_rcx, push_rbx, mov_rbx_r8, sub_rsp_0x4@@ 38, mov_qword_ptr_[rsp+8]_rdx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x4@@ 28]_rax, xor_eax_eax, test_r8_r8, lea_rax_[rip+0x10@@ cb@@ a], cmove_rbx_rax, test_rcx_rcx, jne_0x11, lea_rax_[rsp+0x20], mov_qword_ptr_[rsp+8]_rax, mov_ebp@@ _0x400, mov_r15_qword_ptr_[rsp+8], jmp_0x15, add_r@@ bp_rbp, mov_rdi_rbp, call_qword_ptr_[r@@ bx], mov_r15_rax, test_rax_rax, je_0x62, mov_rdx_r15, mov_rcx_rbp, mov_rsi_r13, mov_edi_r12d, call_r14, mov_rdx_rax, test_rax_rax, js_0x@@ 93, cmp_rbp_rdx, ja_0x@@ d2, cmp_qword_ptr_[rsp+@@ 8]_r15, je_8, mov_rdi_r15, call_qword_ptr_[r@@ bx+0x10], movabs_rax@@ _0x4@@ 00000000@@ 0000000, cmp_rbp_rax, jbe_0xffffffffffffff@@ b2, test_rbp_rbp, js_0x1@@ 15, movabs@@ _rbp@@ _0x8000000000000000, mov_rdi_rbp, call_qword_ptr_[r@@ bx], mov_r15_rax, test_rax_rax, jne_0xffffffffffffffa2, mov_rax_qword_ptr_[rbx+0x18], test_rax_rax, je_7, mov_rdi_rbp, call_rax, call_0xfffffffffffdf@@ 97@@ a, mov_dword_ptr_[rax]_0xc, xor_r15d_r15d, mov_rax_qword_ptr_[rsp+0x@@ 428], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ ee, add_rsp_0x4@@ 38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_rax_r15, pop_r15, ret, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffdf@@ 93@@ b, mov_ecx_dword_ptr_[rax], mov_rdx_qword_ptr_[rsp+0x10], cmp_ecx@@ _0x22, je_0xffffffffffffff@@ 5f, mov_dword_ptr_[rsp+0x1@@ c]_ecx, mov_qword_ptr_[rsp+0x10]_rax, cmp_qword_ptr_[rsp+@@ 8]_r15, je_0xa3, mov_rdi_r15, call_qword_ptr_[r@@ bx+0x10], mov_rax_qword_ptr_[rsp+0x10], mov_ecx_dword_ptr_[rsp+0x1c], xor_r15d_r15d, mov_dword_ptr_[rax]@@ _ecx, jmp_0xffffffffffffff92, lea_r13_[rsp+0x20], mov_byte_ptr_[r15@@ +rdx]_0, lea_r12@@ _[rdx+1], cmp_r15@@ _r13, je_0x37, cmp_rbp_r12, jbe_0xffffffffffffff@@ 76, cmp_qword_ptr_[rsp+@@ 8]_r15, je_0xffffffffffffff@@ 6b, mov_rax_qword_ptr_[rbx+8], test_rax_rax, je_0xffffffffffffff@@ 5e, mov_rdi_r15, mov_rsi_r12, call_rax, test_rax_rax, cmovne@@ _r15@@ _rax, jmp_0xffffffffffffff49, mov_rdi_r12, call_qword_ptr_[r@@ bx], mov_r15_rax, test_rax_rax, je_0x28, mov_rdx_r12, mov_rsi_r13, mov_rdi_rax, call_0xfffffffffffd@@ fb@@ ca, jmp_0xffffffffffffff29, call_0xfffffffffffd@@ f8@@ 90, mov_dword_ptr_[rax]@@ _0x24, xor_r15d_r15d, jmp_0xffffffffffffff16, mov_rbp_r12, jmp_0xfffffffffffffef2, xor_r15d_r15d, jmp_0xffffffffffffff06, call_0xfffffffffffdf@@ 9e@@ d
endbr64, sub_rsp_8, mov_edi_0xe, call_0xfffffffffffd@@ fc@@ 13, test_rax_rax, je_0x1b, cmp_byte_ptr_[rax]_0, lea_rdx_[rip+0x8@@ 98@@ 2], cmove_rax_rdx, add_rsp_8, ret, lea_rax_[rip+0x8@@ 96@@ c], add_rsp_8, ret
push_rbp, mov_rbp_rsp, push_r14, push_r13, push_r12, mov_r12_rdi, mov_rdi_rdx, push_rbx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x28]_rax, xor_eax_eax, mov_rax_rdx, shr_rax@@ _0x3d, setne_al, shl_rdi_3, js_0x7@@ 7, movzx_eax_al, test_rax_rax, jne_0x6f, mov_rbx_rsi, mov_r13_rdx, mov_r14_rcx, cmp_rdi@@ _0x@@ fa0, ja@@ _0x64, add_rdi@@ _0x36, mov_rax_rdi, mov_rdx_rsp, and_rdi@@ _0xffffffffffff@@ f000, sub_rdx_rdi, and_rax_0xfffffffffffffff0, cmp_rsp@@ _rdx, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rdx, jne_0xffffffffffffffed, and_eax@@ _0xfff, sub_rsp_rax, test_rax_rax, je_8, or_qword_ptr_[r@@ sp@@ +rax@@ -8]_0, lea_rdi_[rsp+0x@@ f], and_rdi@@ _0xfffffffffffffff0, add_rdi@@ _0x1f, and_rdi@@ _0xffffffffffffff@@ e0, test_rdi_rdi, jne_0x16, xor_eax_eax, jmp_0x@@ b8, call_0x3@@ ec0, mov_rdi_rax, test_rdi_rdi, je_0xffffffffffffffee, mov_qword_ptr_[rdi+@@ 8]_1, cmp_r13@@ _2, jbe_0x@@ 48, xor_eax_eax, mov_r8d_2, movzx_esi_byte_ptr_[r@@ bx+r@@ 8-1], cmp_sil@@ _byte_ptr_[r@@ bx+rax], jne_0x1c, jmp_0x@@ ac, sub_rax_qword_ptr_[r@@ di+rax*8], cmp_byte_ptr_[rbx@@ +rax@@ ]_sil, je_0x98, test_rax_rax, jne_0xffffffffffffffef, mov_qword_ptr_[rdi@@ +r@@ 8@@ *@@ 8]_r8, xor_eax_eax, inc@@ _r8, cmp_r13@@ _r8, jne_0xffffffffffffffc9, mov_qword_ptr_[r@@ 14]_0, movzx_edx_byte_ptr_[r@@ 12], test_dl_dl, je_0x3a, mov_rcx_r12, xor_eax_eax, jmp_0x20, test_rax_rax, je_0x4d, mov_rdx_qword_ptr_[r@@ di+rax*8], add_r12@@ _rdx, sub_rax_rdx, movzx_edx_byte_ptr_[r@@ cx], test_dl_dl, je_0x15, cmp_byte_ptr_[rbx@@ +rax]_dl, jne_0xffffffffffffffe7, inc_rax, inc_rcx, cmp_r13_rax, jne_0xffffffffffffffeb, mov_qword_ptr_[r14]@@ _r12, call_0x3e@@ 57, mov_eax_1, mov_rcx_qword_ptr_[rbp-0x28], xor_rcx_qword_ptr_fs:[0x28], jne_0x32, lea_rsp_[rbp-0x@@ 20], pop_rbx, pop_r12, pop_r13, pop_r14, pop_rbp, ret, inc_r12, inc_rcx, jmp_0xffffffffffffffb9, inc_rax, mov_rdx_r8, sub_rdx_rax, mov_qword_ptr_[rdi@@ +r@@ 8@@ *@@ 8]_rdx, jmp_0xffffffffffffff6c, call_0xfffffffffffd@@ f7@@ f@@ e
push_rbp, mov_rbp_rsp, push_r15, push_r14, push_r13, push_r12, push_rbx, mov_rbx_rsi, sub_rsp_0xf8, mov_qword_ptr_[rbp-0x12@@ 0]_rdi, mov_qword_ptr_[rbp-0x11@@ 8]_rdx, mov_rdi_rsi, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rbp-0x38]_rax, xor_eax_eax, call_0x3d@@ c9, mov_edx@@ _0x38, mov_rcx_rax, mov_qword_ptr_[rbp-0x11@@ 0]_rax, mov_rax_rdx, mul@@ _rcx, set@@ o@@ _dl, test_rax_rax, js_0x8@@ 1, movzx_edx_dl, test_rdx_rdx, jne_0x79, imul_rdi@@ _qword_ptr_[rbp-0x@@ 11@@ 0]@@ _0x38, cmp_rdi@@ _0x@@ fa0, ja_0x8@@ c, add_rdi@@ _0x36, mov_rax_rdi, mov_rdx_rsp, and_rdi@@ _0xffffffffffff@@ f000, sub_rdx_rdi, and_rax_0xfffffffffffffff0, cmp_rsp@@ _rdx, je_0x17, sub_rsp_0x1000, or_qword_ptr_[rsp+0x@@ ff@@ 8]_0, cmp_rsp@@ _rdx, jne_0xffffffffffffffed, and_eax@@ _0xfff, sub_rsp_rax, test_rax_rax, je_8, or_qword_ptr_[r@@ sp@@ +rax@@ -8]_0, lea_r12_[rsp+0x@@ f], and@@ _r12@@ _0xfffffffffffffff0, add_r12@@ _0x1f, and@@ _r12@@ _0xffffffffffffff@@ e0, test_r12_r12, jne_0x3a, xor_eax_eax, mov_rcx_qword_ptr_[rbp-0x38], xor_rcx_qword_ptr_fs:[0x28], jne_0x@@ 90@@ 2, lea_rsp_[rbp-0x28], pop_rbx, pop_r12, pop_r13, pop_r14, pop_r15, pop_rbp, ret, call_0x3c@@ 94, mov_r12_rax, test_r12_r12, je_0xffffffffffffffd1, mov_rax_qword_ptr_[rbp-0x110], mov_qword_ptr_[rbp-0xf@@ 0]_rbx, lea_r13_[rax@@ +rax*2], shl_r13@@ _4, mov_byte_ptr_[rbp-0x@@ 100@@ ]_0, mov_qword_ptr_[rbp-0x@@ fc]_0, mov_byte_ptr_[rbp-0x@@ f@@ 4]_0, add_r13@@ _r12, mov_r15_r12, lea_rbx_[rip+0x@@ 77@@ fb], jmp_0x@@ aa, mov_rdx_qword_ptr_[rbp-0x@@ f0], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ bx+rax*4], shr_eax@@ _cl, test_al_1, je_0x3@@ c7, mov_qword_ptr_[rbp-0xe@@ 8]_1, movsx_eax_byte_ptr_[r@@ dx], mov_byte_ptr_[rbp-0x@@ e0@@ ]_1, mov_dword_ptr_[rbp-0xd@@ c]_eax, mov_byte_ptr_[rbp-0x@@ f@@ 4]_1, mov_r8d_dword_ptr_[rbp-0x@@ dc], test_r8d_r8d, je_0x1@@ 1e, mov_eax_1, mov_rsi_qword_ptr_[rbp-0x@@ f0], lea_rcx_[rbp-0x@@ d8], mov_rdx_qword_ptr_[rbp-0x@@ e8], cmp_rsi_rcx, je_0x3@@ 9a, mov_qword_ptr_[r15@@ ]_rsi, mov_qword_ptr_[r15+@@ 8]_rdx, mov_byte_ptr_[r@@ 15+0x1@@ 0@@ ]_al, test_al_al, je_0xc, mov_eax_dword_ptr_[rbp-0x@@ dc], mov_dword_ptr_[r15+0x1@@ 4]_eax, add_qword_ptr_[rbp-0x@@ f@@ 0]_rdx, mov_byte_ptr_[rbp-0x@@ f@@ 4]_0, add_r15@@ _0x30, cmp_byte_ptr_[rbp-0x@@ 100@@ ]_0, lea_r14_[r@@ bp-0x@@ fc], je_0xffffffffffffff@@ 53, call_0xfffffffffffdf@@ 58@@ d, mov_r9_qword_ptr_[rbp-0x@@ f0], mov_rsi_rax, mov_rdi_r9, mov_qword_ptr_[rbp-0x10@@ 8]_r9, call_0xfffffffffffefb@@ c4, mov_r9_qword_ptr_[rbp-0x@@ 108], mov_rdx_rax, lea_rdi_[rbp-0x@@ dc], mov_rcx_r14, mov_rsi_r9, call_0xffffffffffff0d@@ f8, mov_qword_ptr_[rbp-0xe@@ 8]_rax, cmp_rax_-1, je_0x3@@ 38, cmp_rax@@ _-2, je_0x3@@ 4e, test_rax_rax, jne_0x2d, mov_qword_ptr_[rbp-0xe@@ 8]_1, mov_rax_qword_ptr_[rbp-0xf0], cmp_byte_ptr_[rax]_0, jne_0x7@@ 53, mov_r9d_dword_ptr_[rbp-0x@@ dc], test_r9d_r9d, jne_0x7@@ 62, mov_rdi_r14, mov_byte_ptr_[rbp-0x@@ e0@@ ]_1, call_0xfffffffffffdf@@ 94@@ e, test_eax_eax, je_9, mov_byte_ptr_[rbp-0x@@ 100@@ ]_0, mov_r8d_dword_ptr_[rbp-0x@@ dc], mov_byte_ptr_[rbp-0x@@ f@@ 4]_1, test_r8d_r8d, jne_0xfffffffffffffe@@ ee, xor_r14d_r14d, cmp_qword_ptr_[rbp-0x@@ 110@@ ]_2, mov_qword_ptr_[r13@@ +@@ 8]_1, mov_qword_ptr_[rbp-0x10@@ 8]_2, lea_r15_[r@@ 12+0x30], jbe_0x@@ 8d, movzx_ebx_byte_ptr_[r@@ 15+0x10], jmp_0x20, cmp_byte_ptr_[rax+0x1@@ 0]_0, je_0x28, mov_eax_dword_ptr_[rax+0x14], cmp_dword_ptr_[r15+0x1@@ 4]_eax, je_0x38, test_r14_r14, je_0x4@@ 46, sub_r14@@ _qword_ptr_[r@@ 13+r@@ 14*8], lea_rax_[r@@ 14+r@@ 14@@ *2], shl_rax_4, add_rax_r12, test_bl_bl, jne_0xffffffffffffffd6, mov_rdx_qword_ptr_[r15+8], cmp_rdx_qword_ptr_[r@@ ax+8], jne_0xffffffffffffffdb, mov_rsi_qword_ptr_[rax], mov_rdi_qword_ptr_[r15], call_0xfffffffffffdf@@ 5b@@ 4, test_eax_eax, jne_0xffffffffffffffcc, mov_rcx_qword_ptr_[rbp-0x@@ 108], inc@@ _r14, mov_rax_rcx, sub_rax_r14, mov_qword_ptr_[r13@@ +rcx*@@ 8]_rax, inc@@ _qword_ptr_[rbp-0x@@ 108], add_r15@@ _0x30, mov_rax_qword_ptr_[rbp-0x108], cmp_qword_ptr_[rbp-0x@@ 11@@ 0]_rax, jne_0xffffffffffffff@@ 85, mov_rax_qword_ptr_[rbp-0x118], mov_byte_ptr_[rbp-0x@@ c0]_0, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rbp-0xb@@ c]_0, mov_rax_qword_ptr_[rbp-0x120], mov_byte_ptr_[rbp-0x@@ b@@ 4]_0, mov_byte_ptr_[rbp-0x@@ 80]_0, mov_qword_ptr_[rbp-0x@@ 7c]_0, mov_byte_ptr_[rbp-0x@@ 7@@ 4]_0, mov_qword_ptr_[rbp-0xb0]_rax, mov_qword_ptr_[rbp-0x70]_rax, xor_r15d_r15d, xor_eax_eax, test_al_al, je_0xca, cmp_byte_ptr_[rbp-0x@@ 60]_0, jne_0x10@@ 7, lea_rax_[r@@ 15+r@@ 15@@ *2], shl_rax_4, add_rax_r12, mov_rdx_qword_ptr_[rax+8], cmp_rdx@@ _qword_ptr_[rbp-0x@@ 68], je_0x2@@ 94, test_r15_r15, jne_0x2@@ a8, cmp_byte_ptr_[rbp-0x@@ b@@ 4]_0, jne_0x@@ 56@@ 6, cmp_byte_ptr_[rbp-0x@@ c0]_0, lea_r14_[r@@ bp-0x@@ bc], jne_0x4@@ 90, mov_rdx_qword_ptr_[rbp-0x@@ b0], lea_rdi_[rip+0x@@ 75@@ 26], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ di@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0x4@@ 4c, mov_qword_ptr_[rbp-0xa@@ 8]_1, movsx_eax_byte_ptr_[r@@ dx], mov_byte_ptr_[rbp-0x@@ a0]_1, mov_dword_ptr_[rbp-0x@@ 9c]_eax, mov_byte_ptr_[rbp-0x@@ b@@ 4]_1, mov_edx_dword_ptr_[rbp-0x@@ 9c], test_edx_edx, j@@ e@@ _0xffffffff@@ fff@@ df@@ 85@@ b, mov_rax_qword_ptr_[rbp-0xa8], mov_byte_ptr_[rbp-0x@@ b@@ 4]_0, add_qword_ptr_[rbp-0x@@ b0]_rax, mov_rax_qword_ptr_[rbp-0x68], mov_byte_ptr_[rbp-0x@@ 7@@ 4]_0, add_qword_ptr_[rbp-0x@@ 70]_rax, cmp_byte_ptr_[rbp-0x@@ 80]_0, lea_r14_[r@@ bp-0x@@ 7c], jne_0x15@@ d, mov_rdx_qword_ptr_[rbp-0x70], lea_rbx_[rip+0x@@ 7@@ 4a@@ 4], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ bx+rax*4], shr_eax@@ _cl, test_al_1, je_0x12@@ 2, mov_qword_ptr_[rbp-0x6@@ 8]_1, movsx_eax_byte_ptr_[r@@ dx], mov_byte_ptr_[rbp-0x@@ 60]_1, mov_dword_ptr_[rbp-0x@@ 5c]_eax, mov_byte_ptr_[rbp-0x@@ 74@@ ]_1, mov_edx_dword_ptr_[rbp-0x@@ 5c], test_edx_edx, je_0x4d, lea_rax_[r@@ 15+r@@ 15@@ *2], shl_rax_4, add_rax_r12, cmp_byte_ptr_[rax+0x1@@ 0]_0, je_0xfffffffffffffe@@ f4, cmp_dword_ptr_[rax+0x1@@ 4]_edx, jne_0xfffffffffffffe@@ f9, mov_rax_qword_ptr_[rbp-0x68], inc_r15, add_qword_ptr_[rbp-0x@@ 70]_rax, mov_byte_ptr_[rbp-0x@@ 7@@ 4]_0, cmp_qword_ptr_[rbp-0x@@ 11@@ 0]_r15, jne_0xffffffffffffff@@ 7e, mov_rax_qword_ptr_[rbp-0xb0], mov_rcx_qword_ptr_[rbp-0x@@ 118], mov_qword_ptr_[rcx]_rax, mov_rdi_r12, call_0x38@@ b1, mov_eax_1, jmp_0xfffffffffffffbb@@ 1, lea_r14_[r@@ bp-0x@@ fc], mov_rdi_r14, call_0xfffffffffffdf@@ 6a@@ 6, test_eax_eax, je_0x4@@ 65, mov_byte_ptr_[rbp-0x@@ 100@@ ]_1, jmp_0xfffffffffffffc@@ b5, lea_rcx_[r@@ 15+0x18], mov_rdi_rcx, call_0xfffffffffffd@@ f4@@ 11, mov_qword_ptr_[r15]_rax, mov_rdx_qword_ptr_[rbp-0x@@ e8], movzx_eax_byte_ptr_[rbp-0x@@ e0], jmp_0xfffffffffffffc@@ 52, mov_qword_ptr_[rbp-0xe@@ 8]_1, mov_byte_ptr_[rbp-0x@@ e0]_0, mov_byte_ptr_[rbp-0x@@ f@@ 4]_1, xor_eax_eax, jmp_0xfffffffffffffc@@ 0b, mov_rdi_qword_ptr_[rbp-0x@@ f0], call_0xfffffffffffdf@@ 1f@@ 9, mov_qword_ptr_[rbp-0xe@@ 8]_rax, mov_byte_ptr_[rbp-0x@@ e0]_0, mov_byte_ptr_[rbp-0x@@ f@@ 4]_1, xor_eax_eax, jmp_0xfffffffffffffb@@ e3, lea_r14_[r@@ bp-0x@@ 7c], mov_rdi_r14, call_0xfffffffffffdf@@ 60@@ 9, test_eax_eax, je_0x3@@ c8, mov_byte_ptr_[rbp-0x@@ 80]_1, call_0xfffffffffffdf@@ 1a8, mov_rbx_qword_ptr_[rbp-0x@@ 70], mov_rsi_rax, mov_rdi_rbx, call_0xfffffffffffef7@@ e9, mov_rdx_rax, lea_rdi_[rbp-0x@@ 5c], mov_rcx_r14, mov_rsi_rbx, call_0xffffffffffff0a@@ 27, mov_qword_ptr_[rbp-0x68]_rax, cmp_rax_-1, je_0x2@@ 4a, cmp_rax@@ _-2, je_0x3@@ 18, test_rax_rax, jne_0x22, mov_qword_ptr_[rbp-0x6@@ 8]_1, mov_rax_qword_ptr_[rbp-0x70], cmp_byte_ptr_[rax]_0, jne_0x38@@ b, mov_eax_dword_ptr_[rbp-0x5c], test_eax_eax, jne_0x3@@ 9f, mov_rdi_r14, mov_byte_ptr_[rbp-0x@@ 60]_1, call_0xfffffffffffdf@@ 58@@ e, test_eax_eax, je_6, mov_byte_ptr_[rbp-0x@@ 80]_0, mov_byte_ptr_[rbp-0x@@ 74@@ ]_1, jmp_0xfffffffffffffe@@ 67, mov_rsi_qword_ptr_[rbp-0x@@ 70], mov_rdi_qword_ptr_[rax], call_0xfffffffffffdf@@ 26@@ 9, test_eax_eax, je_0xfffffffffffffe@@ 71, test_r15_r15, je_0xfffffffffffffd@@ 64, mov_rbx_qword_ptr_[r@@ 13+r@@ 15*8], mov_rax_r15, sub_rax_rbx, mov_qword_ptr_[rbp-0x10@@ 8]_rax, movzx_eax_byte_ptr_[rbp-0x@@ 74], test_rbx_rbx, je_0xfffffffffffffd@@ 11, cmp_byte_ptr_[rbp-0x@@ b@@ 4]_0, je_0x29, cmp_byte_ptr_[rbp-0x@@ a0]_0, jne_0x78, mov_rax_qword_ptr_[rbp-0xa8], mov_byte_ptr_[rbp-0x@@ b@@ 4]_0, add_qword_ptr_[rbp-0x@@ b0]_rax, dec@@ _rbx, je_0x1@@ 5a, cmp_byte_ptr_[rbp-0x@@ c0]_0, lea_r14_[r@@ bp-0x@@ bc], jne_0x94, mov_rdx_qword_ptr_[rbp-0x@@ b0], lea_rsi_[rip+0x7@@ 24@@ 2], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ si@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0x50, mov_qword_ptr_[rbp-0xa@@ 8]_1, movsx_eax_byte_ptr_[r@@ dx], mov_byte_ptr_[rbp-0x@@ a0]_1, mov_dword_ptr_[rbp-0x@@ 9c]_eax, mov_byte_ptr_[rbp-0x@@ b@@ 4]_1, mov_esi_dword_ptr_[rbp-0x@@ 9c], test_esi_esi, jne_0xffffffffffffff@@ 82, jmp_0xfffffffffff@@ df@@ 57@@ 9, mov_rax_qword_ptr_[rbp-0x108], mov_qword_ptr_[r13@@ +rax*@@ 8]_rax, jmp_0xfffffffffffffb@@ f6, lea_r14_[r@@ bp-0x@@ bc], mov_rdi_r14, call_0xfffffffffffdf@@ 47@@ 6, test_eax_eax, je_0x2@@ 35, mov_byte_ptr_[rbp-0x@@ c0@@ ]_1, call_0xfffffffffffd@@ f0@@ 12, mov_r15_qword_ptr_[rbp-0x@@ b0], mov_rsi_rax, mov_rdi_r15, call_0xfffffffffffef@@ 65@@ 0, mov_rdx_rax, lea_rdi_[rbp-0x@@ 9c], mov_rcx_r14, mov_rsi_r15, call_0xffffffffffff0@@ 88@@ b, mov_qword_ptr_[rbp-0xa8]_rax, cmp_rax_-1, je_0x63, cmp_rax@@ _-2, je_0x85, test_rax_rax, jne_0x2b, mov_qword_ptr_[rbp-0xa@@ 8]_1, mov_rax_qword_ptr_[rbp-0xb0], cmp_byte_ptr_[rax]_0, jne_0x1@@ ea, mov_edi_dword_ptr_[rbp-0x@@ 9c], test_edi_edi, jne_0x1@@ fb, mov_rdi_r14, mov_byte_ptr_[rbp-0x@@ a0]_1, call_0xfffffffffffdf@@ 3e@@ 7, test_eax_eax, je_9, mov_byte_ptr_[rbp-0x@@ c0]_0, mov_byte_ptr_[rbp-0x@@ b@@ 4]_1, jmp_0xffffffffffffff24, mov_qword_ptr_[rbp-0xa@@ 8]_1, mov_byte_ptr_[rbp-0x@@ a0]_0, jmp_0xfffffffffffffe@@ 94, movzx_eax_byte_ptr_[rbp-0x@@ 74], mov_r15_qword_ptr_[rbp-0x@@ 108], jmp_0xfffffffffffffb@@ 7c, mov_rdi_qword_ptr_[rbp-0x@@ b0], call_0xfffffffffffd@@ ef@@ 59, mov_qword_ptr_[rbp-0xa8]_rax, mov_byte_ptr_[rbp-0x@@ a0]_0, jmp_0xfffffffffffffe@@ 64, mov_qword_ptr_[rbp-0x6@@ 8]_1, mov_byte_ptr_[rbp-0x@@ 60]_0, mov_byte_ptr_[rbp-0x@@ 74@@ ]_1, jmp_0xfffffffffffffb@@ 59, lea_r14_[r@@ bp-0x@@ bc], mov_rdi_r14, call_0xfffffffffffdf@@ 35@@ e, test_eax_eax, je_0x11d, mov_byte_ptr_[rbp-0x@@ c0@@ ]_1, call_0xfffffffffffd@@ ee@@ fa, mov_rbx_qword_ptr_[rbp-0x@@ b0], mov_rsi_rax, mov_rdi_rbx, call_0xfffffffffffef@@ 5@@ 38, mov_rdx_rax, lea_rdi_[rbp-0x@@ 9c], mov_rcx_r14, mov_rsi_rbx, call_0xffffffffffff0@@ 77@@ 3, mov_qword_ptr_[rbp-0xa8]_rax, cmp_rax_-1, je_0xa3, cmp_rax@@ _-2, je_0xb0, test_rax_rax, jne_0x2b, mov_qword_ptr_[rbp-0xa@@ 8]_1, mov_rax_qword_ptr_[rbp-0xb0], cmp_byte_ptr_[rax]_0, jne_0x@@ ce, mov_ecx_dword_ptr_[rbp-0x@@ 9c], test_ecx_ecx, jne_0x@@ df, mov_rdi_r14, mov_byte_ptr_[rbp-0x@@ a0]_1, call_0xfffffffffffdf@@ 2c@@ b, test_eax_eax, je_9, mov_byte_ptr_[rbp-0x@@ c0]_0, mov_byte_ptr_[rbp-0x@@ b@@ 4]_1, jmp_0xfffffffffffffb@@ 28, mov_rdi_qword_ptr_[rbp-0x@@ 70], call_0xfffffffffffd@@ ee@@ 64, mov_qword_ptr_[rbp-0x68]_rax, mov_byte_ptr_[rbp-0x@@ 60]_0, mov_byte_ptr_[rbp-0x@@ 74@@ ]_1, jmp_0xfffffffffffffa@@ 7c, cmp_byte_ptr_[rbp-0x@@ a0]_0, je_0xfffffffffffffb@@ 03, jmp_0xfffffffffffffa@@ ef, mov_qword_ptr_[rbp-0xa@@ 8]_1, mov_byte_ptr_[rbp-0x@@ a0]_0, jmp_0xfffffffffffffa@@ e0, mov_rdi_qword_ptr_[rbp-0x@@ b0], call_0xfffffffffffd@@ ee@@ 12, mov_qword_ptr_[rbp-0xa8]_rax, mov_byte_ptr_[rbp-0x@@ a0]_0, jmp_0xfffffffffffffa@@ c1, lea_rcx_[rip+0x@@ 7d@@ e3], mov_edx_0x@@ 96, lea_rsi_[rip+0x6c@@ 64], lea_rdi_[rip+0x@@ 6c@@ 67], call_0xfffffffffffd@@ ee@@ 90, lea_rcx_[rip+0x@@ 7d@@ c4], mov_edx_0x@@ b2, lea_rsi_[rip+0x6c@@ 45], lea_rdi_[rip+0x@@ 6c@@ 5f], call_0xfffffffffffd@@ ee@@ 71, call_0xfffffffffffff5e@@ c, call_0xfffffffffffde@@ dd@@ 7
endbr64, push_r15, push_r14, mov_r14_rsi, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x1@@ 98, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 88]_rax, xor_eax_eax, call_0xfffffffffffd@@ ed@@ 72, cmp_rax_1, ja_0x@@ e9, movzx_r12d_byte_ptr_[r@@ 14], mov_rax_rbp, test_r12b_r12b, je_0x1@@ 3d, movzx_edx_byte_ptr_[r@@ bp], test_dl_dl, je_0x1@@ 99, lea_rbx_[rsp+0x@@ 38], mov_qword_ptr_[rsp+8]_rbx, mov_rdi_r14, xor_r13d_r13d, xor_ecx_ecx, xor_r9d_r9d, mov_eax_1, jmp_0x6@@ 7, test_rdi_rdi, je_0x20, mov_rsi_rbx, sub_rsi@@ _r9, mov_qword_ptr_[rsp]_rdi, call_0xfffffffffffd@@ ee@@ 09, mov_rdi_qword_ptr_[rsp], mov_r9_rbx, add_rdi_rax, cmp_byte_ptr_[rdi]_0, jne_0x7a, mov_rdi_r14, mov_qword_ptr_[rsp]_r9, call_0xfffffffffffd@@ ed@@ 0e, mov_rcx_qword_ptr_[rsp+8], mov_rdx_rax, mov_rsi_r14, mov_rdi_r15, call_0xfffffffffffff@@ 37@@ b, test_al_al, mov_r9_qword_ptr_[rsp], jne_0xe@@ 35, xor_edi_edi, movzx_edx_byte_ptr_[r@@ 15], mov_rbp_r15, mov_rcx_rbx, inc@@ _r13, lea_rbx_[r@@ cx+1], lea_r15_[r@@ bp+1], cmp_r12b@@ _dl, je_0xc8, cmp_byte_ptr_[r15]_0, je_0xfa, cmp_r13@@ _9, seta_dl, and_dl@@ _al, mov_ebp_edx, je_0xffffffffffffffcd, lea_rax_[r@@ 13+r@@ 13*4], cmp_rbx_rax, jae_0xffffffffffffff@@ 6b, mov_eax_ebp, jmp_0xffffffffffffffbb, movsx_ecx_byte_ptr_[r@@ 14], lea_r12_[rip+0x@@ 6e@@ 25], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ 12@@ +rax*4], mov_qword_ptr_[rsp+0x5@@ 0]_r14, shr_eax@@ _cl, mov_byte_ptr_[rsp+0x@@ 40]_0, mov_qword_ptr_[rsp+0x4@@ 4]_0, mov_byte_ptr_[rsp+0x@@ 4c]_0, lea_r13_[rsp+0x@@ 44], test_al_1, je_0xc@@ 98, mov_qword_ptr_[rsp+0x@@ 58]_1, mov_dword_ptr_[rsp+0x6@@ 4]_ecx, mov_byte_ptr_[rsp+0x@@ 60]_1, mov_byte_ptr_[rsp+0x@@ 4c]_1, mov_eax_dword_ptr_[rsp+0x@@ 64], test_eax_eax, jne_0x@@ 88, mov_rax_rbp, mov_rbx_qword_ptr_[rsp+0x1@@ 88], xor_rbx_qword_ptr_fs:[0x28], jne_0xd@@ e3, add_rsp_0x1@@ 98, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, movzx_edx_byte_ptr_[r@@ 14+1], test_dl_dl, je_0xffffffffffffff@@ ca, mov_rsi_rbp, mov_r10@@ _r14, sub_rsi_rcx, sub_r10@@ _rcx, jmp_0x1f, inc_rbx, cmp_cl@@ _dl, jne_0xffffffffffffff@@ 19, movzx_edx_byte_ptr_[r@@ 10+r@@ bx], test_dl_dl, je_0xffffffffffffff@@ 9f, movzx_ecx_byte_ptr_[rsi@@ +r@@ bx], test_cl_cl, jne_0xffffffffffffffe6, xor_eax_eax, jmp_0xffffffffffffff96, mov_qword_ptr_[rsp+0x@@ 58]_1, mov_byte_ptr_[rsp+0x@@ 60]_0, mov_byte_ptr_[rsp+0x@@ 4c]_1, lea_rax_[rsp+0x1@@ 64], mov_qword_ptr_[rsp+0x10]_rax, lea_rax_[rsp+0x1@@ 24], mov_qword_ptr_[rsp+0x9@@ 0]_r14, mov_byte_ptr_[rsp+0x@@ 80]_0, mov_qword_ptr_[rsp+0x@@ 84]_0, mov_byte_ptr_[rsp+0x@@ 8c]_0, mov_qword_ptr_[rsp+0xd@@ 0]_rbp, mov_byte_ptr_[rsp+0x@@ c0]_0, mov_qword_ptr_[rsp+0xc@@ 4]_0, mov_byte_ptr_[rsp+0x@@ cc@@ ]_0, mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x28]_0, mov_byte_ptr_[rsp+0x@@ 20]_1, mov_qword_ptr_[rsp+0x18]_rax, xor_ebx_ebx, lea_r15_[r@@ sp+0x1@@ 44], cmp_byte_ptr_[rsp+0x@@ c0]_0, lea_r13_[rsp+0x@@ c4], jne_0x@@ 5c8, mov_rdx_qword_ptr_[rsp+0x@@ d0], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ 12@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0x5@@ 87, mov_qword_ptr_[rsp+0xd@@ 8]_1, movsx_eax_byte_ptr_[r@@ dx], mov_byte_ptr_[rsp+0x@@ e0@@ ]_1, mov_dword_ptr_[rsp+0xe@@ 4]_eax, mov_byte_ptr_[rsp+0x@@ cc@@ ]_1, mov_r13d_dword_ptr_[rsp+0x@@ e4], test_r13d_r13d, je_0xfffffffffffffe@@ f4, cmp_qword_ptr_[rsp+@@ 8@@ ]_9, seta_al, and_al@@ _byte_ptr_[rsp+0x@@ 20], je_0x6@@ 6d, mov_rdi_qword_ptr_[rsp+8], lea_rdx_[r@@ di+r@@ di*4], cmp_rbx_rdx, jae_0x@@ 67@@ 3, mov_byte_ptr_[rsp+0x@@ 20@@ ]_al, inc_rbx, cmp_byte_ptr_[rsp+0x@@ 60]_0, je_0x4@@ b9, mov_eax_dword_ptr_[rsp+0x@@ 64], cmp_dword_ptr_[rsp+0x@@ e@@ 4]_eax, jne_0x3@@ 12, movdqa_xmm1_xmmword_ptr_[r@@ sp+0x@@ d0], movsx_ecx_byte_ptr_[r@@ 14], movaps_xmmword_ptr_[rsp+0x1@@ 10]_xmm1, mov_rax_qword_ptr_[rsp+0x1@@ 18], movdqa_xmm0_xmmword_ptr_[rsp+0x@@ c0], add_qword_ptr_[rsp+0x1@@ 10]_rax, mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ 12@@ +rax*4], movdqa_xmm2_xmmword_ptr_[r@@ sp+0x@@ e0], movdqa_xmm3_xmmword_ptr_[r@@ sp+0x@@ f0], shr_eax@@ _cl, movaps_xmmword_ptr_[rsp+0x1@@ 00@@ ]_xmm0, mov_qword_ptr_[rsp+0x1@@ 50]@@ _r14, mov_byte_ptr_[rsp+0x10@@ c]_0, mov_byte_ptr_[rsp+0x1@@ 40]_0, mov_qword_ptr_[r15@@ ]_0, mov_byte_ptr_[rsp+0x1@@ 4c]_0, movaps_xmmword_ptr_[rsp+0x1@@ 20]_xmm2, movaps_xmmword_ptr_[rsp+0x1@@ 30]_xmm3, test_al_1, je_0x@@ 88@@ b, mov_qword_ptr_[rsp+0x1@@ 58]_1, mov_dword_ptr_[rsp+0x1@@ 6@@ 4]_ecx, mov_byte_ptr_[rsp+0x1@@ 60]_1, mov_byte_ptr_[rsp+0x1@@ 4c]_1, mov_esi_dword_ptr_[r@@ sp+0x1@@ 64], test_esi_esi, j@@ e@@ _0xffffffff@@ fff@@ de@@ ec@@ 5, mov_rax_qword_ptr_[rsp+0x1@@ 58], mov_byte_ptr_[rsp+0x1@@ 4c]_0, add_qword_ptr_[rsp+0x1@@ 50]_rax, inc_rbx, jmp_0x1@@ 2f, mov_rdx_qword_ptr_[rsp+0x1@@ 50], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ 12@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0x3@@ 35, mov_qword_ptr_[rsp+0x1@@ 58]_1, movsx_eax_byte_ptr_[r@@ dx], mov_byte_ptr_[rsp+0x1@@ 60]_1, mov_dword_ptr_[rsp+0x1@@ 64]_eax, mov_byte_ptr_[rsp+0x1@@ 4c]_1, mov_edx_dword_ptr_[r@@ sp+0x1@@ 64], test_edx_edx, je_0x1@@ 90, cmp_byte_ptr_[r@@ sp+0x10@@ c]_0, jne_0x2@@ ba, cmp_byte_ptr_[rsp+0x1@@ 00]_0, lea_r13_[r@@ sp+0x10@@ 4], jne_0x1@@ f4, mov_rdx_qword_ptr_[rsp+0x1@@ 10], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ 12@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0x1@@ b3, mov_qword_ptr_[rsp+0x1@@ 18]_1, movsx_eax_byte_ptr_[r@@ dx], mov_byte_ptr_[rsp+0x1@@ 20]_1, mov_dword_ptr_[rsp+0x1@@ 24]_eax, mov_byte_ptr_[rsp+0x10@@ c]_1, mov_eax_dword_ptr_[rsp+0x1@@ 24], test_eax_eax, je_0xfffffffffffffc@@ f2, cmp_byte_ptr_[rsp+0x1@@ 60]_0, je_0x1@@ 34, cmp_dword_ptr_[rsp+0x1@@ 64]_eax, setne_al, lea_rdx_[r@@ bx+1], test_al_al, jne_0x13@@ 4, mov_rax_qword_ptr_[rsp+0x1@@ 18], mov_byte_ptr_[rsp+0x10@@ c]_0, add_qword_ptr_[rsp+0x1@@ 10]_rax, mov_rax_qword_ptr_[rsp+0x1@@ 58], mov_byte_ptr_[rsp+0x1@@ 4c]_0, add_qword_ptr_[rsp+0x1@@ 50]_rax, mov_rbx_rdx, cmp_byte_ptr_[rsp+0x1@@ 40]_0, je_0xfffffffffffffe@@ d1, call_0xfffffffffffd@@ e8@@ 3b, mov_r13_qword_ptr_[r@@ sp+0x1@@ 50], mov_rsi_rax, mov_rdi_r13, call_0xfffffffffffeee@@ 78, mov_rdi_qword_ptr_[rsp+0x10], mov_rdx_rax, mov_rcx_r15, mov_rsi_r13, call_0xffffffffffff00@@ b5, mov_qword_ptr_[rsp+0x1@@ 58]_rax, cmp_rax_-1, je_0x2@@ 84, cmp_rax@@ _-2, je_0x3@@ 72, test_rax_rax, jne_0x2e, mov_qword_ptr_[rsp+0x1@@ 58]_1, mov_rax_qword_ptr_[rsp+0x1@@ 50], cmp_byte_ptr_[rax]_0, jne_0x@@ 9b@@ 5, mov_ecx_dword_ptr_[r@@ sp+0x1@@ 64], test_ecx_ecx, jne_0x8@@ 93, mov_rdi_r15, mov_byte_ptr_[rsp+0x1@@ 60]_1, call_0xfffffffffffd@@ ec@@ 08, test_eax_eax, je_0xa, mov_byte_ptr_[rsp+0x1@@ 40]_0, mov_edx_dword_ptr_[r@@ sp+0x1@@ 64], mov_byte_ptr_[rsp+0x1@@ 4c]_1, test_edx_edx, jne_0xfffffffffffffe@@ 7c, mov_rax_qword_ptr_[rsp+0xd0], jmp_0xfffffffffffffb@@ 6c, mov_qword_ptr_[rsp+0x1@@ 18]_1, mov_byte_ptr_[rsp+0x1@@ 20]_0, mov_byte_ptr_[rsp+0x10@@ c]_1, mov_rdx_qword_ptr_[rsp+0x1@@ 18], cmp_rdx_qword_ptr_[r@@ sp+0x1@@ 58], je_0x114, mov_r13@@ _qword_ptr_[rsp+0x@@ d8], add_qword_ptr_[rsp+0x@@ d@@ 0]_r13, inc@@ _qword_ptr_[rsp+8], mov_byte_ptr_[rsp+0x@@ cc@@ ]_0, jmp_0xfffffffffffffc@@ 21, lea_r13_[r@@ sp+0x10@@ 4], mov_rdi_r13, call_0xfffffffffffd@@ eb@@ 6d, test_eax_eax, je_0x@@ 8c@@ f, mov_byte_ptr_[rsp+0x1@@ 00@@ ]_1, call_0xfffffffffffde@@ 708, mov_r8_qword_ptr_[r@@ sp+0x110], mov_rsi_rax, mov_rdi_r8, mov_qword_ptr_[rsp]_r8, call_0xfffffffffffeed@@ 41, mov_r8_qword_ptr_[rsp], mov_rdi_qword_ptr_[rsp+0x18], mov_rdx_rax, mov_rcx_r13, mov_rsi_r8, call_0xfffffffffffeff@@ 7a, mov_qword_ptr_[rsp+0x118]_rax, cmp_rax_-1, je_0xffffffffffffff@@ 49, cmp_rax@@ _-2, je_0x2@@ 67, test_rax_rax, jne_0x2e, mov_qword_ptr_[rsp+0x1@@ 18]_1, mov_rax_qword_ptr_[rsp+0x1@@ 10], cmp_byte_ptr_[rax]_0, jne_0x@@ 87@@ a, mov_eax_dword_ptr_[rsp+0x1@@ 24], test_eax_eax, jne_0x7@@ 58, mov_rdi_r13, mov_byte_ptr_[rsp+0x1@@ 20]_1, call_0xfffffffffffd@@ ea@@ cd, test_eax_eax, je_0xa, mov_byte_ptr_[rsp+0x1@@ 00]_0, mov_byte_ptr_[rsp+0x10@@ c]_1, jmp_0xfffffffffffffd@@ b5, cmp_byte_ptr_[rsp+0x1@@ 20]_0, je_0xfffffffffffffe@@ ec, jmp_0xfffffffffffffd@@ 9b, mov_rsi_qword_ptr_[rsp+0x1@@ 50], mov_rdi_qword_ptr_[rsp+0x1@@ 10], call_0xfffffffffffd@@ e7@@ 80, test_eax_eax, setne_al, jmp_0xfffffffffffffd@@ 9e, mov_rdi_r15, call_0xfffffffffffd@@ ea@@ 6d, test_eax_eax, je_0x7@@ cf, mov_byte_ptr_[rsp+0x1@@ 40]_1, jmp_0xfffffffffffffd@@ cd, mov_qword_ptr_[rsp+0xd@@ 8]_1, mov_byte_ptr_[rsp+0x@@ e0]_0, mov_byte_ptr_[rsp+0x@@ cc@@ ]_1, cmp_qword_ptr_[rsp+@@ 8@@ ]_9, seta_al, and_al@@ _byte_ptr_[rsp+0x@@ 20], je_0x1@@ b7, mov_rdi_qword_ptr_[rsp+8], lea_rdx_[r@@ di+r@@ di*4], cmp_rbx_rdx, jae_0x@@ 1b@@ 5, mov_byte_ptr_[rsp+0x@@ 20@@ ]_al, inc_rbx, mov_r13@@ _qword_ptr_[rsp+0x@@ d8], cmp_r13@@ _qword_ptr_[rsp+0x58], jne_0xfffffffffffffe@@ 65, mov_rsi_qword_ptr_[rsp+0x50], mov_rdi_qword_ptr_[rsp+0xd0], mov_rdx_r13, call_0xfffffffffffde@@ 6e@@ 5, test_eax_eax, jne_0xfffffffffffffe@@ 48, jmp_0xfffffffffffffb@@ 2e, mov_qword_ptr_[rsp+0x1@@ 58]_1, mov_byte_ptr_[rsp+0x1@@ 60]_0, mov_byte_ptr_[rsp+0x1@@ 4c]_1, jmp_0xfffffffffffffc@@ 4a, lea_r13_[rsp+0x@@ c4], mov_rdi_r13, call_0xfffffffffffde@@ 99@@ d, test_eax_eax, je_0x6@@ ff, mov_byte_ptr_[rsp+0x@@ c0@@ ]_1, call_0xfffffffffffd@@ e5@@ 38, mov_r8@@ _qword_ptr_[rsp+0x@@ d0], mov_rsi_rax, mov_rdi_r8, mov_qword_ptr_[rsp]_r8, call_0xfffffffffffeeb@@ 71, mov_r8_qword_ptr_[rsp], mov_rdx_rax, lea_rdi_[rsp+0x@@ e4], mov_rcx_r13, mov_rsi_r8, call_0xfffffffffffefd@@ a7, mov_qword_ptr_[rsp+0xd8]_rax, cmp_rax_-1, je_0xfffffffffffffe@@ f6, cmp_rax@@ _-2, je_0x2@@ e4, test_rax_rax, jne_0x2e, mov_qword_ptr_[rsp+0xd@@ 8]_1, mov_rax_qword_ptr_[rsp+0xd0], cmp_byte_ptr_[rax]_0, jne_0x@@ 6a@@ 7, mov_eax_dword_ptr_[rsp+0x@@ e4], test_eax_eax, jne_0x@@ 58@@ 5, mov_rdi_r13, mov_byte_ptr_[rsp+0x@@ e0@@ ]_1, call_0xfffffffffffde@@ 8f@@ a, test_eax_eax, je_0xa, mov_byte_ptr_[rsp+0x@@ c0]_0, mov_byte_ptr_[rsp+0x@@ cc@@ ]_1, jmp_0xfffffffffffff9d@@ e, mov_rdi_qword_ptr_[rsp+0x1@@ 50], call_0xfffffffffffd@@ e4@@ 90, mov_qword_ptr_[rsp+0x1@@ 58]_rax, mov_byte_ptr_[rsp+0x1@@ 60]_0, mov_byte_ptr_[rsp+0x1@@ 4c]_1, jmp_0xfffffffffffffb@@ 49, mov_rdi_qword_ptr_[rsp+0x1@@ 10], call_0xfffffffffffd@@ e4@@ 60, mov_qword_ptr_[rsp+0x118]_rax, mov_byte_ptr_[rsp+0x1@@ 20]_0, mov_byte_ptr_[rsp+0x10@@ c]_1, jmp_0xfffffffffffffc@@ cf, inc_rbx, jmp_0xfffffffffffff9a@@ f, inc_rbx, jmp_0xfffffffffffffe@@ 65, mov_rdi_rbx, sub_rdi@@ _qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp]_rdi, movzx_eax_byte_ptr_[rsp+0x@@ 8c], je_0x5@@ 9a, test_al_al, je_0x2e, cmp_byte_ptr_[rsp+0x@@ a0]_0, jne_0x7d, mov_rax_qword_ptr_[rsp+0x98], mov_byte_ptr_[rsp+0x@@ 8c]_0, add_qword_ptr_[rsp+0x@@ 90]_rax, dec@@ _qword_ptr_[rsp], je_0x1@@ f4, cmp_byte_ptr_[rsp+0x@@ 80]_0, lea_r13_[rsp+0x@@ 84], jne_0x@@ b6, mov_rdx_qword_ptr_[rsp+0x90], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ 12@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0x75, mov_qword_ptr_[rsp+0x@@ 98]_1, movsx_eax_byte_ptr_[r@@ dx], mov_byte_ptr_[rsp+0x@@ a0]_1, mov_dword_ptr_[rsp+0xa@@ 4]_eax, mov_byte_ptr_[rsp+0x@@ 8c@@ ]_1, mov_r10d_dword_ptr_[rsp+0x@@ a4], test_r10d_r10d, jne_0xffffffffffffff@@ 7a, cmp_byte_ptr_[rsp+0x@@ 8c]_0, je_0x1@@ 7c, lea_rdx_[rsp+0x@@ 38], mov_rsi_r14, mov_rdi_rbp, call_0xffffffffffffe@@ bb@@ 3, mov_byte_ptr_[rsp+0x@@ 20@@ ]_al, test_al_al, jne_0x4@@ 8d, movzx_edx_byte_ptr_[rsp+0x@@ e0], jmp_0x1@@ cd, lea_r13_[rsp+0x@@ 84], mov_rdi_r13, call_0xfffffffffffde@@ 76@@ 5, test_eax_eax, je_0x4@@ c7, mov_byte_ptr_[rsp+0x@@ 80]_1, call_0xfffffffffffde@@ 300, mov_r8@@ _qword_ptr_[rsp+0x90], mov_rsi_rax, mov_rdi_r8, mov_qword_ptr_[rsp+0x20]_r8, call_0xfffffffffffee@@ 938, mov_r8_qword_ptr_[rsp+0x20], mov_rdx_rax, lea_rdi_[rsp+0x@@ a4], mov_rcx_r13, mov_rsi_r8, call_0xfffffffffffefb@@ 6d, mov_qword_ptr_[rsp+0x98]_rax, cmp_rax_-1, je_0x6c, cmp_rax@@ _-2, je_0x86, test_rax_rax, jne_0x30, mov_qword_ptr_[rsp+0x@@ 98]_1, mov_rax_qword_ptr_[rsp+0x90], cmp_byte_ptr_[rax]_0, jne_0x4@@ 71, mov_r11d_dword_ptr_[rsp+0x@@ a4], test_r11d_r11d, jne_0x34@@ d, mov_rdi_r13, mov_byte_ptr_[rsp+0x@@ a0]_1, call_0xfffffffffffde@@ 6c@@ 2, test_eax_eax, je_0xa, mov_byte_ptr_[rsp+0x@@ 80]_0, mov_byte_ptr_[rsp+0x@@ 8c@@ ]_1, jmp_0xfffffffffffffeec, mov_qword_ptr_[rsp+0x@@ 98]_1, mov_byte_ptr_[rsp+0x@@ a0]_0, jmp_0xfffffffffffffe@@ 54, mov_rdi_qword_ptr_[rsp+0x90], call_0xfffffffffffde@@ 238, mov_qword_ptr_[rsp+0x98]_rax, mov_byte_ptr_[rsp+0x@@ a0]_0, jmp_0xfffffffffffffe@@ 2b, mov_rdi_qword_ptr_[rsp+0xd0], call_0xfffffffffffde@@ 210, mov_qword_ptr_[rsp+0xd8]_rax, mov_byte_ptr_[rsp+0x@@ e0]_0, mov_byte_ptr_[rsp+0x@@ cc@@ ]_1, jmp_0xfffffffffffffb@@ ff, cmp_byte_ptr_[rsp+0x@@ 80]_0, lea_r13_[rsp+0x@@ 84], jne_0x1@@ 61, mov_rdx_qword_ptr_[rsp+0x90], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ 12@@ +rax*4], shr_eax@@ _cl, test_al_1, je_0x12@@ 0, mov_qword_ptr_[rsp+0x@@ 98]_1, movsx_eax_byte_ptr_[r@@ dx], mov_byte_ptr_[rsp+0x@@ a0]_1, mov_dword_ptr_[rsp+0xa@@ 4]_eax, mov_byte_ptr_[rsp+0x@@ 8c@@ ]_1, mov_r8d_dword_ptr_[rsp+0x@@ a4], test_r8d_r8d, je_0xfffffffffffffe@@ 22, mov_byte_ptr_[rsp+0x@@ 20]_1, movzx_edx_byte_ptr_[rsp+0x@@ e0], lea_rax_[rbx+1], mov_qword_ptr_[rsp+0x2@@ 8]_rbx, mov_rbx_rax, test_dl_dl, jne_0xfffffffffffff@@ 6d@@ 9, jmp_0xfffffffffffffb@@ 91, mov_rdi_r15, call_0xfffffffffffde@@ 58@@ d, test_eax_eax, je_0x2@@ ef, mov_byte_ptr_[rsp+0x1@@ 40]_1, call_0xfffffffffffde@@ 128, mov_r13_qword_ptr_[r@@ sp+0x1@@ 50], mov_rsi_rax, mov_rdi_r13, call_0xfffffffffffee@@ 76@@ 5, mov_rdi_qword_ptr_[rsp+0x10], mov_rdx_rax, mov_rcx_r15, mov_rsi_r13, call_0xfffffffffffef@@ 9a@@ 2, mov_qword_ptr_[rsp+0x1@@ 58]_rax, cmp_rax_-1, je_0x1@@ e1, cmp_rax@@ _-2, je_0x1@@ f0, test_rax_rax, jne_0x2e, mov_qword_ptr_[rsp+0x1@@ 58]_1, mov_rax_qword_ptr_[rsp+0x1@@ 50], cmp_byte_ptr_[rax]_0, jne_0x2@@ a2, mov_edi_dword_ptr_[r@@ sp+0x1@@ 64], test_edi_edi, jne_0x1@@ 80, mov_rdi_r15, mov_byte_ptr_[rsp+0x1@@ 60]_1, call_0xfffffffffffde@@ 4f@@ 5, test_eax_eax, je_0xa, mov_byte_ptr_[rsp+0x1@@ 40]_0, mov_byte_ptr_[rsp+0x1@@ 4c]_1, jmp_0xfffffffffffff6@@ ea, lea_r13_[rsp+0x@@ 84], mov_rdi_r13, call_0xfffffffffffde@@ 4c@@ c, test_eax_eax, je_0x2@@ 2e, mov_byte_ptr_[rsp+0x@@ 80]_1, call_0xfffffffffffd@@ e0@@ 67, mov_r8@@ _qword_ptr_[rsp+0x90], mov_rsi_rax, mov_rdi_r8, mov_qword_ptr_[rsp]_r8, call_0xfffffffffffee@@ 6a@@ 0, mov_r8_qword_ptr_[rsp], mov_rdx_rax, lea_rdi_[rsp+0x@@ a4], mov_rcx_r13, mov_rsi_r8, call_0xfffffffffffef@@ 8d@@ 6, mov_qword_ptr_[rsp+0x98]_rax, cmp_rax_-1, je_0x1@@ a2, cmp_rax@@ _-2, je_0x1@@ 46, test_rax_rax, jne_0x30, mov_qword_ptr_[rsp+0x@@ 98]_1, mov_rax_qword_ptr_[rsp+0x90], cmp_byte_ptr_[rax]_0, jne_0x1@@ d6, mov_r9d_dword_ptr_[rsp+0x@@ a4], test_r9d_r9d, jne_0xb2, mov_rdi_r13, mov_byte_ptr_[rsp+0x@@ a0]_1, call_0xfffffffffffde@@ 42@@ 7, test_eax_eax, je_0xa, mov_byte_ptr_[rsp+0x@@ 80]_0, mov_byte_ptr_[rsp+0x@@ 8c@@ ]_1, jmp_0xfffffffffffffe@@ 43, mov_rdi_r13, call_0xfffffffffffde@@ 3f@@ d, test_eax_eax, je_0x1@@ 5f, mov_byte_ptr_[rsp+0x@@ 40]_1, call_0xfffffffffffdd@@ f@@ 9b, mov_r15@@ _qword_ptr_[rsp+0x50], mov_rsi_rax, mov_rdi_r15, call_0xfffffffffffee@@ 5d@@ b, mov_rdx_rax, lea_rdi_[rsp+0x@@ 64], mov_rcx_r13, mov_rsi_r15, call_0xfffffffffffef@@ 8@@ 18, mov_qword_ptr_[rsp+0x58]_rax, cmp_rax_-1, je_0xfffffffffffff@@ 3b@@ a, cmp_rax@@ _-2, je_0xbf, test_rax_rax, jne_0x27, mov_qword_ptr_[rsp+0x@@ 58]_1, mov_rax_qword_ptr_[rsp+0x50], cmp_byte_ptr_[rax]_0, jne_0x12@@ 1, mov_eax_dword_ptr_[rsp+0x@@ 64], test_eax_eax, je_8, call_0xffffffffffffe@@ 77@@ 6, mov_rdi_r13, mov_byte_ptr_[rsp+0x@@ 60]_1, call_0xfffffffffffde@@ 378, test_eax_eax, je_7, mov_byte_ptr_[rsp+0x@@ 40]_0, mov_byte_ptr_[rsp+0x@@ 4c]_1, jmp_0xfffffffffffff@@ 2@@ ea, mov_qword_ptr_[rsp+0x1@@ 58]_1, mov_byte_ptr_[rsp+0x1@@ 60]_0, jmp_0xfffffffffffff@@ 56@@ 9, mov_rdi_qword_ptr_[rsp+0x1@@ 50], call_0xfffffffffffdd@@ e@@ ff, mov_qword_ptr_[rsp+0x1@@ 58]_rax, mov_byte_ptr_[rsp+0x1@@ 60]_0, jmp_0xfffffffffffff@@ 54@@ 7, mov_rdi_qword_ptr_[rsp+0x90], call_0xfffffffffffdd@@ ed@@ d, mov_qword_ptr_[rsp+0x98]_rax, mov_byte_ptr_[rsp+0x@@ a0]_0, mov_byte_ptr_[rsp+0x@@ 8c@@ ]_1, jmp_0xfffffffffffffd@@ 46, mov_rax_qword_ptr_[rsp+0x38], jmp_0xfffffffffffff@@ 28@@ a, mov_rdi_qword_ptr_[rsp+0x50], call_0xfffffffffffdd@@ ea@@ c, mov_qword_ptr_[rsp+0x58]_rax, mov_byte_ptr_[rsp+0x@@ 60]_0, mov_byte_ptr_[rsp+0x@@ 4c]_1, jmp_0xfffffffffffff@@ 2e@@ b, mov_qword_ptr_[rsp+0x@@ 98]_1, mov_byte_ptr_[rsp+0x@@ a0]_0, mov_byte_ptr_[rsp+0x@@ 8c@@ ]_1, jmp_0xfffffffffffffc@@ fd, test_al_al, je_0xfffffffffffffc@@ 88, cmp_byte_ptr_[rsp+0x@@ a0]_0, je_0xfffffffffffffc@@ e8, jmp_0xfffffffffffffc@@ d1, lea_rcx_[rip+0x@@ 6e@@ 40], mov_edx_0x@@ 96, lea_rsi_[rip+0x5c@@ c1], lea_rdi_[rip+0x@@ 5c@@ c4], call_0xfffffffffffdd@@ ee@@ d, call_0xfffffffffffdd@@ e@@ 58, lea_rcx_[rip+0x@@ 6e@@ 1c], mov_edx_0x@@ b2, lea_rsi_[rip+0x5c@@ 9d], lea_rdi_[rip+0x@@ 5c@@ b7], call_0xfffffffffffdd@@ ec@@ 9
push_rbp, mov_rbp_rdi, push_rbx, mov_ebx_esi, sub_rsp_8, call_0xffffffffffffe@@ 44@@ 5, movzx_edx_byte_ptr_[rax], and_edx_0xffffff@@ df, cmp_dl@@ _0x5@@ 5, jne_0x4f, movzx_edx_byte_ptr_[rax+1], and_edx_0xffffff@@ df, cmp_dl@@ _0x5@@ 4, jne_0x60, movzx_edx_byte_ptr_[rax+2], and_edx_0xffffff@@ df, cmp_dl@@ _0x4@@ 6, jne_0x54, cmp_byte_ptr_[rax+@@ 3]@@ _0x2d, jne_0x4e, cmp_byte_ptr_[rax+@@ 4]@@ _0x38, jne_0x48, cmp_byte_ptr_[rax+@@ 5]_0, jne_0x42, cmp_byte_ptr_[rbp]@@ _0x60, lea_rax_[rip+0x6@@ dd@@ 0], lea_rdx_[rip+0x@@ 6d@@ be], cmovne_rax_rdx, add_rsp_8, pop_rbx, pop_rbp, ret, cmp_dl@@ _0x4@@ 7, jne_0x1a, movzx_edx_byte_ptr_[rax+1], and_edx_0xffffff@@ df, cmp_dl@@ _0x42, jne_0xe, cmp_byte_ptr_[rax+@@ 2]@@ _0x31, jne_8, cmp_byte_ptr_[rax+@@ 3]@@ _0x38, je_0x25, cmp_ebx@@ _9, lea_rax_[rip+0x@@ 6d@@ 84], lea_rdx_[rip+0x@@ 5c@@ 2d], cmovne_rax_rdx, add_rsp_8, pop_rbx, pop_rbp, ret, cmp_byte_ptr_[rax+@@ 4]@@ _0x30, jne_0xffffffffffffffd9, cmp_byte_ptr_[rax+@@ 5]@@ _0x33, jne_0xffffffffffffffd3, cmp_byte_ptr_[rax+@@ 6]@@ _0x30, jne_0xffffffffffffffcd, cmp_byte_ptr_[rax+@@ 7]_0, jne_0xffffffffffffffc7, cmp_byte_ptr_[rbp]@@ _0x60, lea_rax_[rip+0x@@ 6d@@ 4e], lea_rdx_[rip+0x@@ 6d@@ 4b], cmovne_rax_rdx, add_rsp_8, pop_rbx, pop_rbp, ret
push_r15, mov_r15_rdi, push_r14, mov_r14_rsi, push_r13, push_r12, push_rbp, mov_ebp_r8d, push_rbx, mov_ebx@@ _r9d, sub_rsp_0xa8, mov_rax_qword_ptr_[rsp+0x@@ e0], mov_qword_ptr_[rsp+0x10]_rdx, mov_qword_ptr_[rsp+0x20]_rax, mov_rax_qword_ptr_[rsp+0x@@ e8], mov_qword_ptr_[rsp]_rcx, mov_qword_ptr_[rsp+0x68]_rax, mov_rax_qword_ptr_[rsp+0xf0], mov_dword_ptr_[rsp+8]_r8d, mov_dword_ptr_[rsp+0x7@@ 0]_r9d, mov_qword_ptr_[rsp+0x60]_rax, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, call_0xfffffffffffdd@@ cb@@ 6, and_ebx@@ _2, mov_qword_ptr_[rsp+0x58]_rax, setne@@ _byte_ptr_[rsp+0x@@ f], cmp_ebp@@ _0xa, ja@@ _0xffffffff@@ fff@@ de@@ 1d@@ 2, lea_rcx_[rip+0x@@ 6d@@ 24], mov_edx_ebp, movsxd_rax_dword_ptr_[r@@ cx+rdx*4], mov_r11_qword_ptr_[rsp], add_rax_rcx, jmp_rax
push_r15, push_r14, push_r13, mov_r13_rdx, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rcx, push_rbx, movsxd_rbx@@ _edi, sub_rsp_0x28, call_0xfffffffffffd@@ ca@@ 16, mov_qword_ptr_[rsp]_rax, mov_eax_dword_ptr_[rax], mov_r15_qword_ptr_[r@@ ip+0x@@ e@@ 36@@ 4], mov_dword_ptr_[rsp+0xc]_eax, test_ebx_ebx, js@@ _0xffffffff@@ fff@@ dd@@ 0@@ 84, cmp_dword_ptr_[rip+0x@@ e@@ 34@@ a@@ ]_ebx, jg@@ _0x63, cmp_ebx@@ _0x7fffffff, je_0x1@@ 6b, lea_r14d_[r@@ bx+1], movsxd_rsi@@ _r14d, lea_rax_[rip+0x@@ e@@ 34@@ 6], shl_rsi_4, cmp_r15_rax, je_0x12f, mov_rdi_r15, call_0xfffffffffffe@@ dec@@ 6, mov_qword_ptr_[rip+0x@@ e3@@ 1a@@ ]_rax, mov_r15_rax, movsxd_rdi@@ _dword_ptr_[rip+0x@@ e@@ 308], mov_edx_r14d, sub_edx@@ _edi, movsxd_rdx_edx, shl_rdi_4, shl_rdx_4, add_rdi@@ _r15, xor_esi_esi, call_0xfffffffffffd@@ cb@@ cb, mov_dword_ptr_[rip+0x@@ e@@ 2e@@ 7]@@ _r14d, shl_rbx_4, sub_rsp_8, add_rbx@@ _r15, mov_rsi_qword_ptr_[rbx], mov_r15_qword_ptr_[r@@ bx+8], push_qword_ptr_[r@@ bp+0x30], lea_r14_[r@@ bp+8], mov_r9d_dword_ptr_[r@@ bp+4], push_qword_ptr_[r@@ bp+0x28], mov_r8d_dword_ptr_[r@@ bp], or_r9d@@ _1, push_r14, mov_rcx_r13, mov_rdx_r12, mov_rdi_r15, mov_dword_ptr_[rsp+0x38]@@ _r9d, mov_qword_ptr_[rsp+0x3@@ 0]_rsi, call_0xffffffffffffed@@ 82, add_rsp_0x20, mov_rsi_qword_ptr_[rsp+0x10], cmp_rsi_rax, ja_0x7@@ b, lea_rsi_[rax+1], lea_rax_[rip+0x10@@ 5f@@ 4], cmp_r15_rax, mov_qword_ptr_[rbx@@ ]_rsi, mov_r9d_dword_ptr_[rsp+0x18], je_0x1e, mov_rdi_r15, mov_qword_ptr_[rsp+0x18]_rsi, mov_dword_ptr_[rsp+0x10]_r9d, call_0xfffffffffffdc@@ 8d@@ a, mov_rsi_qword_ptr_[rsp+0x18], mov_r9d_dword_ptr_[rsp+0x10], mov_rdi_rsi, mov_dword_ptr_[rsp+0x18]_r9d, mov_qword_ptr_[rsp+0x10]_rsi, call_0xfffffffffffedd@@ 9e, sub_rsp_8, mov_qword_ptr_[rbx+8]_rax, push_qword_ptr_[r@@ bp+0x30], mov_r8d_dword_ptr_[r@@ bp], mov_rcx_r13, push_qword_ptr_[r@@ bp+0x28], mov_rdx_r12, mov_rdi_rax, push_r14, mov_r15_rax, mov_r9d_dword_ptr_[rsp+0x@@ 38], mov_rsi_qword_ptr_[rsp+0x30], call_0xffffffffffffec@@ ff, add_rsp_0x20, mov_rax_qword_ptr_[rsp], mov_ecx_dword_ptr_[rsp+0xc], mov_dword_ptr_[rax]@@ _ecx, add_rsp_0x28, mov_rax_r15, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, xor_edi_edi, call_0xfffffffffffedd@@ 9e, movdqa_xmm0_xmmword_ptr_[r@@ ip+0x@@ e@@ 20@@ 1], mov_qword_ptr_[rip+0x@@ e@@ 1ea@@ ]_rax, mov_r15_rax, movups_xmmword_ptr_[rax]_xmm0, jmp_0xfffffffffffffe@@ cd, call_0xfffffffffffed@@ f8@@ f
endbr64, push_r12, push_rbp, mov_rbp_rdi, push_rbx, call_0xfffffffffffdc@@ 86@@ 5, mov_r12d_dword_ptr_[rax], mov_rbx_rax, test_rbp_rbp, lea_rax_[rip+0x10@@ 6@@ 10], cmove@@ _rbp_rax, mov_esi@@ _0x38, mov_rdi_rbp, call_0xfffffffffffed@@ f0@@ 4, mov_dword_ptr_[rbx]@@ _r12d, pop_rbx, pop_rbp, pop_r12, ret
endbr64, test_rdi_rdi, lea_rax_[rip+0x10@@ 5e@@ 2], cmove@@ _rdi_rax, mov_eax_dword_ptr_[rdi], ret
endbr64, test_rdi_rdi, lea_rax_[rip+0x10@@ 5c@@ 2], cmove@@ _rdi_rax, mov_dword_ptr_[rdi]@@ _esi, ret
endbr64, test_rdi_rdi, lea_rax_[rip+0x10@@ 5a@@ 2], cmove@@ _rdi_rax, mov_eax_esi, shr_al_5, movzx_eax_al, mov_ecx_esi, lea_rsi_[r@@ di@@ +rax*4@@ +8], mov_edi_dword_ptr_[r@@ si], and_ecx@@ _0x1f, mov_eax_edi, shr_eax@@ _cl, xor_edx_eax, and_edx_1, shl_edx_cl, xor_edx@@ _edi, mov_dword_ptr_[rsi@@ ]_edx, and_eax_1, ret
endbr64, test_rdi_rdi, lea_rax_[rip+0x10@@ 56@@ 2], cmove@@ _rdi_rax, mov_eax_dword_ptr_[rdi+4], mov_dword_ptr_[rdi+@@ 4]_esi, ret
endbr64, sub_rsp_8, lea_rax_[rip+0x10@@ 54@@ 1], test_rdi_rdi, cmove@@ _rdi_rax, mov_dword_ptr_[rdi]@@ _0xa, test_rsi_rsi, j@@ e@@ _0xffffffff@@ fff@@ d@@ cd@@ fc, test_rdx_rdx, j@@ e@@ _0xffffffff@@ fff@@ d@@ cd@@ f3, mov_qword_ptr_[rdi+0x@@ 28]_rsi, mov_qword_ptr_[rdi+0x@@ 30]_rdx, add_rsp_8, ret
endbr64, push_r15, lea_rax_[rip+0x10@@ 50@@ 3], push_r14, mov_r14_rdx, push_r13, mov_r13_rsi, push_r12, mov_r12_rdi, push_rbp, push_rbx, mov_rbx_r8, sub_rsp_0x18, test_r8_r8, cmove_rbx_rax, mov_qword_ptr_[rsp+8]_rcx, call_0xfffffffffffd@@ c7@@ 1f, sub_rsp_8, mov_r15d_dword_ptr_[r@@ ax], mov_r9d_dword_ptr_[r@@ bx+4], push_qword_ptr_[r@@ bx+0x30], mov_rbp_rax, lea_rax_[r@@ bx+8], push_qword_ptr_[r@@ bx+0x28], mov_r8d_dword_ptr_[r@@ bx], mov_rdx_r14, push_rax, mov_rsi_r13, mov_rdi_r12, mov_rcx_qword_ptr_[rsp+0x28], call_0xffffffffffffeb@@ 20, mov_dword_ptr_[rbp]@@ _r15d, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
endbr64, push_r15, lea_rax_[rip+0x10@@ 48@@ 3], push_r14, mov_r14_rsi, push_r13, mov_r13_rdi, push_r12, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rcx, sub_rsp_0x28, test_rcx_rcx, cmove_rbx_rax, call_0xfffffffffffdc@@ 6a@@ 4, mov_r12_rax, mov_eax_dword_ptr_[rax], xor_r9d_r9d, test_rbp_rbp, sete@@ _r9b, mov_dword_ptr_[rsp+0x10]_eax, sub_rsp_8, or_r9d@@ _dword_ptr_[r@@ bx+4], push_qword_ptr_[r@@ bx+0x30], lea_r10_[r@@ bx+8], mov_r8d_dword_ptr_[r@@ bx], push_qword_ptr_[r@@ bx+0x28], mov_rcx_r14, mov_rdx_r13, push_r10, xor_esi_esi, xor_edi_edi, mov_qword_ptr_[rsp+0x38]_r10, mov_dword_ptr_[rsp+0x3@@ 4]@@ _r9d, call_0xffffffffffffea@@ 91, lea_rsi_[rax+1], add_rsp_0x20, mov_rdi_rsi, mov_qword_ptr_[rsp+8]_rsi, mov_r15_rax, call_0xfffffffffffeda@@ e9, sub_rsp_8, push_qword_ptr_[r@@ bx+0x30], mov_r8d_dword_ptr_[r@@ bx], mov_rcx_r14, push_qword_ptr_[r@@ bx+0x28], mov_rdx_r13, mov_rdi_rax, mov_r10_qword_ptr_[rsp+0x30], push_r10, mov_rsi_qword_ptr_[rsp+0x28], mov_r9d_dword_ptr_[rsp+0x@@ 34], mov_qword_ptr_[rsp+0x28]_rax, call_0xffffffffffffea@@ 48, mov_eax_dword_ptr_[rsp+0x30], add_rsp_0x20, test_rbp_rbp, mov_dword_ptr_[r12]_eax, mov_r11_qword_ptr_[rsp+8], je_6, mov_qword_ptr_[rbp@@ ]_r15, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_rax@@ _r11, pop_r15, ret
endbr64, mov_rcx_rdx, xor_edx_edx, jmp_0xffffffffffffff0@@ 7
endbr64, push_r12, mov_eax_dword_ptr_[rip+0x@@ df@@ 1c], mov_r12_qword_ptr_[rip+0x@@ df@@ 1d], push_rbp, push_rbx, cmp_eax_1, jle_0x@@ 29, sub_eax_2, shl_rax_4, lea_rbx_[r@@ 12+0x18], lea_rbp_[r@@ 12+r@@ ax+0x28], mov_rdi_qword_ptr_[rbx], add_rbx_0x10, call_0xfffffffffffdc@@ 55@@ 9, cmp_rbx_rbp, jne_0xfffffffffffffff1, mov_rdi_qword_ptr_[r12+8], lea_rbx_[rip+0x@@ 10@@ 24@@ 3], cmp_rdi_rbx, je_0x19, call_0xfffffffffffdc@@ 5@@ 3e, mov_qword_ptr_[rip+0x@@ d@@ ed@@ e]@@ _0x100, mov_qword_ptr_[rip+0x@@ d@@ ed@@ f@@ ]_rbx, lea_rbx_[rip+0x@@ d@@ ed@@ 0], cmp_r12_rbx, je_0x11, mov_rdi_r12, call_0xfffffffffffdc@@ 5@@ 18, mov_qword_ptr_[rip+0x@@ d@@ ea@@ c]@@ _rbx, pop_rbx, pop_rbp, mov_dword_ptr_[rip+0x@@ de@@ 98]_1, pop_r12, ret
endbr64, lea_rcx_[rip+0x10@@ 2e@@ 5], mov_rdx_-1, jmp_0xfffffffffffffa@@ e@@ e
endbr64, lea_rcx_[rip+0x10@@ 2c@@ 5], jmp_0xfffffffffffffa@@ d@@ 5
endbr64, mov_rsi_rdi, lea_rcx_[rip+0x10@@ 2b@@ 2], mov_rdx_-1, xor_edi_edi, jmp_0xfffffffffffffa@@ b@@ 9
endbr64, mov_rdx_rsi, lea_rcx_[rip+0x10@@ 29@@ 2], mov_rsi_rdi, xor_edi_edi, jmp_0xfffffffffffffa@@ 9@@ d
endbr64, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, cmp_esi@@ _0xa, j@@ e@@ _0xffffffff@@ fff@@ d@@ cb@@ 35, mov_r8_rdx, mov_dword_ptr_[rsp]@@ _esi, mov_rcx_rsp, mov_rdx_-1, mov_rsi_r8, mov_dword_ptr_[rsp+4]_0, mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x10]_0, mov_qword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rsp+0x20]_0, mov_qword_ptr_[rsp+0x28]_0, mov_qword_ptr_[rsp+0x30]_0, call_0xfffffffffffffa@@ 1e, mov_rcx_qword_ptr_[rsp+0x38], xor_rcx_qword_ptr_fs:[0x28], jne_7, add_rsp_0x48, ret, call_0xfffffffffffdc@@ 5b@@ 4
endbr64, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, cmp_esi@@ _0xa, j@@ e@@ _0xffffffff@@ fff@@ d@@ ca@@ 9a, mov_r8_rdx, mov_dword_ptr_[rsp]@@ _esi, mov_rdx_rcx, mov_rsi_r8, mov_rcx_rsp, mov_dword_ptr_[rsp+4]_0, mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x10]_0, mov_qword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rsp+0x20]_0, mov_qword_ptr_[rsp+0x28]_0, mov_qword_ptr_[rsp+0x30]_0, call_0xfffffffffffff98@@ 2, mov_rdx_qword_ptr_[rsp+0x38], xor_rdx_qword_ptr_fs:[0x28], jne_7, add_rsp_0x48, ret, call_0xfffffffffffdc@@ 5@@ 1@@ 8
endbr64, mov_rdx_rsi, mov_esi_edi, xor_edi_edi, jmp_0xfffffffffffffec@@ 5
endbr64, mov_rcx_rdx, mov_rdx_rsi, mov_esi_edi, xor_edi_edi, jmp_0xffffffffffffff5@@ 2
endbr64, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_rax_qword_ptr_[rip+0x@@ 10@@ 13@@ 1], movdqa_xmm0_xmmword_ptr_[r@@ ip+0x@@ 100@@ f9], mov_qword_ptr_[rsp+0x30]_rax, mov_eax_edx, movdqa_xmm1_xmmword_ptr_[r@@ ip+0x@@ 100@@ fa], movdqa_xmm2_xmmword_ptr_[r@@ ip+0x@@ 1010@@ 2], shr_al_5, movzx_eax_al, movaps_xmmword_ptr_[rsp]_xmm0, movaps_xmmword_ptr_[r@@ sp+0x10@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x@@ 20]_xmm2, mov_ecx_edx, lea_rdx_[r@@ sp@@ +rax*4@@ +8], mov_r9_rsi, mov_esi_dword_ptr_[r@@ dx], and_ecx@@ _0x1f, mov_eax_esi, shr_eax@@ _cl, not_eax, and_eax_1, shl_eax_cl, xor_eax@@ _esi, mov_dword_ptr_[rdx]_eax, mov_r10@@ _rsp, mov_rsi_rdi, mov_rcx_r10, xor_edi_edi, mov_rdx_r9, call_0xfffffffffffff8b@@ 2, mov_rdi_qword_ptr_[rsp+0x38], xor_rdi_qword_ptr_fs:[0x28], jne_7, add_rsp_0x48, ret, call_0xfffffffffffdc@@ 44@@ 8
endbr64, movsx_edx@@ _sil, mov_rsi@@ _-1, jmp_0xffffffffffffff5@@ 1
endbr64, mov_edx_0x3@@ a, mov_rsi@@ _-1, jmp_0xffffffffffffff3@@ 0
endbr64, mov_edx_0x3@@ a, jmp_0xffffffffffffff1@@ 7
endbr64, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, cmp_esi@@ _0xa, j@@ e@@ _0xffffffff@@ fff@@ dc@@ 8e@@ f, mov_r8_rdx, mov_dword_ptr_[rsp]@@ _esi, movabs_rax@@ _0x4@@ 00000000@@ 000000, mov_rcx_rsp, mov_rdx_-1, mov_rsi_r8, mov_dword_ptr_[rsp+4]_0, mov_qword_ptr_[rsp+8]_rax, mov_qword_ptr_[rsp+0x10]_0, mov_qword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rsp+0x20]_0, mov_qword_ptr_[rsp+0x28]_0, mov_qword_ptr_[rsp+0x30]_0, call_0xfffffffffffff7c@@ 8, mov_rcx_qword_ptr_[rsp+0x38], xor_rcx_qword_ptr_fs:[0x28], jne_7, add_rsp_0x48, ret, call_0xfffffffffffdc@@ 35@@ e
endbr64, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, movdqa_xmm0_xmmword_ptr_[r@@ ip+0x@@ ff@@ 70], movdqa_xmm1_xmmword_ptr_[r@@ ip+0x@@ ff@@ 78], movdqa_xmm2_xmmword_ptr_[r@@ ip+0x@@ ff@@ 80], mov_rax_qword_ptr_[rip+0x@@ ff@@ 89], movaps_xmmword_ptr_[rsp]_xmm0, mov_qword_ptr_[rsp+0x30]_rax, mov_dword_ptr_[rsp]@@ _0xa, movaps_xmmword_ptr_[r@@ sp+0x10@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x@@ 20]_xmm2, test_rsi_rsi, j@@ e@@ _0xffffffff@@ fff@@ dc@@ 8@@ 1b, test_rdx_rdx, j@@ e@@ _0xffffffff@@ fff@@ dc@@ 8@@ 12, mov_r9_rcx, mov_qword_ptr_[rsp+0x28]_rsi, mov_qword_ptr_[rsp+0x30]_rdx, mov_rcx_rsp, mov_rdx_r8, mov_rsi_r9, call_0xfffffffffffff7@@ 27, mov_rcx_qword_ptr_[rsp+0x38], xor_rcx_qword_ptr_fs:[0x28], jne_7, add_rsp_0x48, ret, call_0xfffffffffffdc@@ 2b@@ d
endbr64, mov_r8@@ _-1, jmp_0xffffffffffffff5@@ 5
endbr64, mov_rcx_rdx, mov_r8@@ _-1, mov_rdx_rsi, mov_rsi_rdi, xor_edi_edi, jmp_0xffffffffffffff3@@ a
endbr64, mov_r8_rcx, mov_rcx_rdx, mov_rdx_rsi, mov_rsi_rdi, xor_edi_edi, jmp_0xffffffffffffff1@@ e
endbr64, lea_rcx_[rip+0xd@@ 9f@@ 5], jmp_0xfffffffffffff6a@@ 5
endbr64, mov_rdx_rsi, lea_rcx_[rip+0xd@@ 9e@@ 2], mov_rsi_rdi, xor_edi_edi, jmp_0xfffffffffffff@@ 68@@ d
endbr64, lea_rcx_[rip+0xd@@ 9c@@ 5], mov_rdx_-1, jmp_0xfffffffffffff@@ 66@@ e
endbr64, mov_rsi_rdi, lea_rcx_[rip+0xd@@ 9a@@ 2], mov_rdx_-1, xor_edi_edi, jmp_0xfffffffffffff@@ 64@@ 9
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1000, or_qword_ptr_[rsp]_0, sub_rsp_0x68, mov_qword_ptr_[rsp+0x20]_rdi, mov_qword_ptr_[rsp+0x28]_rsi, mov_qword_ptr_[rsp+0x10]_rcx, mov_qword_ptr_[rsp+0x18]_r8, mov_rbp_rdx, mov_rbx_rsi, mov_r14_rdi, xor_r8d_r8d, xor_ecx_ecx, xor_edx_edx, xor_esi_esi, mov_rdi_rbp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x10@@ 58]_rax, xor_eax_eax, call_0xfffffffffffd@@ c0@@ 66, test_rbx_rbx, mov_qword_ptr_[rsp+0x3@@ 8]_rbx, mov_qword_ptr_[rsp+0x30]@@ _r14, mov_qword_ptr_[rsp+8]_0, lea_rbx_[rsp+0x@@ 50], lea_r13_[rsp+0x@@ 48], lea_r12_[rsp+0x@@ 40], je_0x66, lea_r15_[rsp+0x@@ 38], lea_r14_[rsp+0x@@ 30], jmp_0x1d, mov_rax_qword_ptr_[rsp+0x40], sub_rax_rbx, add_qword_ptr_[r@@ sp+@@ 8]_rax, cmp_qword_ptr_[rsp+0x@@ 38]_0, je_0x3f, mov_r8_r13, mov_rcx_r12, mov_rdx_r15, mov_rsi_r14, mov_rdi_rbp, mov_qword_ptr_[rsp+0x4@@ 0]_rbx, mov_qword_ptr_[rsp+0x4@@ 8]@@ _0x1000, call_0xfffffffffffdb@@ ff@@ 6, cmp_rax_-1, jne_0xffffffffffffffc5, call_0xfffffffffffd@@ bf@@ 9b, mov_eax_dword_ptr_[rax], cmp_eax_7, je_0xffffffffffffff@@ b9, cmp_eax_0x16, jne_0x15@@ 3, xor_edx_edx, xor_esi_esi, mov_r8_r13, mov_rcx_r12, mov_rdi_rbp, mov_qword_ptr_[rsp+0x4@@ 0]_rbx, mov_qword_ptr_[rsp+0x4@@ 8]@@ _0x1000, call_0xfffffffffffdb@@ fb@@ b, cmp_rax_-1, je_0x12@@ 9, mov_r15@@ _qword_ptr_[rsp+0x40], sub_r15@@ _rbx, add_r15@@ _qword_ptr_[rsp+8], je_0x11f, mov_rax_qword_ptr_[rsp+0x10], mov_r14_qword_ptr_[rax], test_r14_r14, je_0xe6, mov_rax_qword_ptr_[rsp+0x18], cmp_qword_ptr_[rax]@@ _r15, jb_0x@@ d8, xor_r8d_r8d, xor_ecx_ecx, xor_edx_edx, xor_esi_esi, mov_rdi_rbp, call_0xfffffffffffd@@ bf@@ 6e, mov_rax_qword_ptr_[rsp+0x20], mov_qword_ptr_[rsp+0x4@@ 0]_r14, mov_qword_ptr_[rsp+0x30]_rax, mov_rax_qword_ptr_[rsp+0x28], mov_qword_ptr_[rsp+0x4@@ 8]_r15, mov_qword_ptr_[rsp+0x38]_rax, lea_rbx_[rsp+0x@@ 38], jmp_0x2b, lea_rsi_[rsp+0x30], mov_r8_r13, mov_rcx_r12, mov_rdx_rbx, mov_rdi_rbp, call_0xfffffffffffd@@ bf@@ 2f, cmp_rax_-1, je_0xbe, mov_rax_qword_ptr_[rsp+0x38], test_rax_rax, jne_0xffffffffffffffd8, xor_edx_edx, xor_esi_esi, mov_r8_r13, mov_rcx_r12, mov_rdi_rbp, call_0xfffffffffffdb@@ f0@@ 9, cmp_rax_-1, je_0xa6, cmp_qword_ptr_[rsp+0x@@ 48]_0, jn@@ e@@ _0xffffffff@@ fff@@ dc@@ 548, mov_rax_qword_ptr_[rsp+0x10], xor_r12d_r12d, mov_qword_ptr_[rax]@@ _r14, mov_rax_qword_ptr_[rsp+0x18], mov_qword_ptr_[rax]@@ _r15, mov_rax_qword_ptr_[r@@ sp+0x10@@ 58], xor_rax_qword_ptr_fs:[0x28], jne_0x9d, add_rsp_0x10@@ 68, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_r15, call_0xfffffffffffdc@@ 1f@@ 5, mov_r14_rax, test_rax_rax, jne_0xffffffffffffff@@ 20, call_0xfffffffffffd@@ be@@ 44, mov_dword_ptr_[rax]_0xc, mov_r12d_0xffffffff, jmp_0xffffffffffffffa8, mov_rax_qword_ptr_[rsp+0x18], xor_r12d_r12d, mov_qword_ptr_[rax]_0, jmp_0xffffffffffffff96, call_0xfffffffffffd@@ be@@ 18, cmp_dword_ptr_[rax]@@ _0x16, je_0xffffffffffffff@@ 4a, mov_rax_qword_ptr_[rsp+0x10], mov_r12d_0xffffffff, cmp_qword_ptr_[rax]@@ _r14, je_0xffffffffffffff@@ 71, call_0xfffffffffffd@@ bd@@ f6, mov_ebp_dword_ptr_[rax], mov_rbx_rax, mov_rdi_r14, call_0xfffffffffffdb@@ da@@ 9, mov_dword_ptr_[rbx]@@ _ebp, jmp_0xffffffffffffff57, call_0xfffffffffffd@@ bf@@ 5@@ d
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_0x58, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x28]_rdi, call_0xfffffffffffdb@@ f0@@ 6, mov_r12_rax, shl_r12@@ _4, cmp_rax@@ _0x10000000, cmovae@@ _r12_rax, mov_qword_ptr_[rsp+0x30]_rax, lea_rbx_[r@@ 12+1], mov_rdi_rbx, call_0xfffffffffffdc@@ 12@@ 3, mov_r13_rax, test_rax_rax, je_0x1@@ be, xor_r8d_r8d, xor_ecx_ecx, xor_edx_edx, xor_esi_esi, mov_rdi_rbp, call_0xfffffffffffdb@@ db@@ 6, lea_rax_[rsp+0x40], mov_qword_ptr_[rsp+8]_rax, lea_rax_[rsp+0x30], mov_qword_ptr_[rsp+0x18]_rax, lea_rax_[rsp+0x28], mov_qword_ptr_[rsp+0x4@@ 0]_r12, mov_qword_ptr_[rsp+0x3@@ 8]_r13, mov_qword_ptr_[rsp+0x10]_rax, lea_r12_[rsp+0x@@ 38], jmp_0x6@@ c, call_0xfffffffffffd@@ bd@@ 30, mov_r14_rax, mov_eax_dword_ptr_[rax], cmp_eax_0x16, je_0xd8, cmp_eax_7, jne_0x12@@ 0, mov_rdx_qword_ptr_[rsp+0x38], lea_r15_[r@@ bx+r@@ bx], sub_rdx@@ _r13, cmp_rbx_r15, jae_0x@@ 13d, mov_rsi_r15, mov_rdi_r13, mov_qword_ptr_[rsp]_rdx, call_0xfffffffffffdc@@ 11@@ 5, test_rax_rax, mov_rdx_qword_ptr_[rsp], je_0x12@@ 1, lea_rsi_[rax@@ +rdx], mov_qword_ptr_[rsp+0x38]_rsi, lea_rsi_[r@@ 15-1], sub_rsi_rdx, mov_qword_ptr_[rsp+0x4@@ 0]_rsi, mov_rbx_r15, mov_r13_rax, mov_r8_qword_ptr_[rsp+8], mov_rdx_qword_ptr_[rsp+0x18], mov_rsi_qword_ptr_[rsp+0x10], mov_rcx_r12, mov_rdi_rbp, call_0xfffffffffffdb@@ d0@@ 3, cmp_rax_-1, je_0xffffffffffffff@@ 7a, jmp_0x5@@ 9, call_0xfffffffffffdb@@ ca@@ 0, cmp_dword_ptr_[rax@@ ]_7, mov_rdx_rax, jne_0x9b, mov_r14@@ _qword_ptr_[rsp+0x38], lea_r15_[r@@ bx+r@@ bx], sub_r14@@ _r13, cmp_rbx_r15, jae_0x@@ 80, mov_rsi_r15, mov_rdi_r13, mov_qword_ptr_[rsp]_rax, call_0xfffffffffffd@@ c0@@ 94, test_rax_rax, mov_rdx_qword_ptr_[rsp], je_0x68, lea_rdx_[rax+r@@ 14], mov_qword_ptr_[rsp+0x38]_rdx, lea_rdx_[r@@ 15-1], sub_rdx@@ _r14, mov_qword_ptr_[rsp+0x40]_rdx, mov_rbx_r15, mov_r13_rax, mov_r8_qword_ptr_[rsp+8], xor_edx_edx, xor_esi_esi, mov_rcx_r12, mov_rdi_rbp, call_0xfffffffffffd@@ bc@@ 8c, cmp_rax_-1, je_0xffffffffffffff@@ 93, mov_rax_qword_ptr_[rsp+0x38], lea_rdx_[rax+1], mov_qword_ptr_[rsp+0x38]_rdx, mov_byte_ptr_[rax]_0, mov_rsi_qword_ptr_[rsp+0x38], sub_rsi@@ _r13, cmp_rbx@@ _rsi, jbe_0x@@ 26, mov_rdi_r13, call_0xfffffffffffd@@ c0@@ 30, test_rax_rax, cmovne@@ _r13_rax, jmp_0x15, mov_dword_ptr_[rdx@@ ]@@ _0xc, mov_rdi_r13, call_0xfffffffffffd@@ bb@@ b7, xor_r13d_r13d, mov_rax_qword_ptr_[rsp+0x48], xor_rax_qword_ptr_fs:[0x28], jne_0x22, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, mov_rax_r13, pop_r13, pop_r14, pop_r15, ret, mov_dword_ptr_[r14]@@ _0xc, jmp_0xffffffffffffffc7, call_0xfffffffffffd@@ bd@@ 3f, call_0xfffffffffffd@@ bb@@ ba, mov_dword_ptr_[rax]_0xc, jmp_0xffffffffffffffc@@ 0
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, cmp_byte_ptr_[rdi]_0, je_0x17, mov_r13_rsi, mov_rdi_r13, mov_rsi_rdx, mov_r12_rdx, call_0xffffffffffffc0@@ ae, test_eax_eax, jne_0x27, mov_rdi_rbp, call_0xfffffffffffdc@@ 102, mov_r12_rax, test_rax_rax, je_0x89, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, mov_rsi_r13, mov_rdi_r12, call_0xfffffffffffdc@@ 16@@ a, mov_r13_rax, cmp_rax_-1, je_0x3e, mov_rsi_rax, mov_rdi_rbp, call_0xfffffffffffffd@@ 66, mov_r12_rax, test_rax_rax, je_0x33, mov_rdi_r13, call_0xfffffffffffd@@ bf@@ 86, test_eax_eax, jns_0xffffffffffffff@@ be, call_0xfffffffffffd@@ bb@@ 1d, mov_ebx_dword_ptr_[rax], mov_rbp_rax, mov_rdi_r12, call_0xfffffffffffd@@ ba@@ d0, xor_r12d_r12d, mov_dword_ptr_[rbp@@ ]_ebx, jmp_0xffffffffffffffa4, xor_r12d_r12d, jmp_0xffffffffffffff9c, call_0xfffffffffffd@@ ba@@ f8, mov_ebx_dword_ptr_[rax], mov_rbp_rax, mov_rdi_r13, call_0xfffffffffffd@@ bf@@ 4b, mov_dword_ptr_[rbp@@ ]_ebx, jmp_0xffffffffffffff82, call_0xfffffffffffd@@ ba@@ de, mov_dword_ptr_[rax]_0xc, jmp_0xffffffffffffff7@@ 2
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, movdqu_xmm0_xmmword_ptr_[rsi], movups_xmmword_ptr_[r@@ sp]_xmm0, mov_r15_qword_ptr_[r@@ si+0x10], mov_qword_ptr_[rsp+0x10]@@ _r15, test_rdi_rdi, je_0xce, mov_r13_rdi, mov_r12_rsi, mov_rbp_rdi, xor_ebx_ebx, mov_r14@@ _-1, jmp_0x25, mov_edx_eax, add_eax_8, mov_dword_ptr_[rsp]_eax, add_rdx@@ _r15, mov_rdi_qword_ptr_[rdx], call_0xfffffffffffd@@ bb@@ c2, add_rbx_rax, cmovb@@ _rbx@@ _r14, dec@@ _rbp, je_0x23, mov_eax_dword_ptr_[rsp], cmp_eax_0x2f, jbe_0xffffffffffffff@@ db, mov_rdx_qword_ptr_[rsp+8], lea_rax_[rdx+8], mov_qword_ptr_[rsp+8]_rax, jmp_0xffffffffffffffd6, cmp_rbx@@ _0x7fffffff, ja_0xa@@ 9, lea_rdi_[r@@ bx+1], call_0xfffffffffffec@@ eb@@ f, mov_r14_rax, mov_rbp_rax, jmp_0x36, mov_edx_eax, add_eax_8, mov_dword_ptr_[r12]_eax, add_rdx_qword_ptr_[r@@ 12+0x10], mov_r15_qword_ptr_[r@@ dx], mov_rdi_r15, call_0xfffffffffffd@@ bb@@ 5c, mov_rbx_rax, mov_rdi_rbp, mov_rdx_rax, mov_rsi_r15, call_0xfffffffffffd@@ bd@@ 1b, add_rbp@@ _rbx, dec@@ _r13, je_0x30, mov_eax_dword_ptr_[r12], cmp_eax_0x2f, jbe_0xffffffffffffff@@ c7, mov_rdx_qword_ptr_[r12+8], lea_rax_[rdx+8], mov_qword_ptr_[r12+8]_rax, jmp_0xffffffffffffffc5, mov_edi_1, call_0xfffffffffffec@@ e@@ 5b, mov_rbp_rax, mov_r14_rax, mov_byte_ptr_[rbp@@ ]_0, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x2e, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_rax_r14, pop_r14, pop_r15, ret, call_0xfffffffffffdb@@ 980, mov_dword_ptr_[rax]@@ _0x4@@ b, xor_r14d_r14d, jmp_0xffffffffffffffc6, call_0xfffffffffffd@@ ba@@ f@@ 0
endbr64, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, movzx_eax_byte_ptr_[rdi], mov_rdx_rdi, mov_rcx_rsi, xor_edi_edi, test_al_al, jne_0x1d, jmp_0x6@@ 9, cmp_byte_ptr_[r@@ dx+r@@ di*@@ 2+1]@@ _0x73, jne_0x11, inc_rdi, movzx_eax_byte_ptr_[r@@ dx+r@@ di@@ *2], test_al_al, je_0x50, cmp_al_0x25, je_0xffffffffffffffec, mov_rdi_rsp, mov_esi_1, call_0xfffffffffffd@@ bc@@ e2, mov_r8d_eax, mov_rax_qword_ptr_[rsp], test_r8d_r8d, js_0x1@@ b, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x32, add_rsp_0x18, ret, call_0xfffffffffffdb@@ 8e@@ 8, cmp_dword_ptr_[rax]@@ _0xc, je_0x1a, xor_eax_eax, jmp_0xffffffffffffffdb, mov_rsi_rcx, call_0xfffffffffffffe0@@ d, jmp_0xffffffffffffffc7, call_0xfffffffffffec@@ fd@@ 6, call_0xfffffffffffd@@ ba@@ 4@@ 1
endbr64, add_rdi_0x20, jb@@ _0x34, sub_rsp_8, call_0xfffffffffffd@@ bc@@ 42, mov_rdx_rax, test_rax_rax, je_0x1c, lea_rax_[r@@ ax+0x10], and_rax@@ _0xffffffffffffff@@ e0, add_rax_0x10, mov_rcx_rax, sub_rcx_rdx, mov_byte_ptr_[rax@@ -1@@ ]_cl, add_rsp_8, ret, xor_eax_eax, add_rsp_8, ret, xor_eax_eax, ret
endbr64, sub_rsp_8, test_dil@@ _0xf, jn@@ e@@ _0xffffffff@@ fff@@ db@@ f0@@ d, test_dil@@ _0x10, jne_0xa, add_rsp_8, ret, movzx_eax_byte_ptr_[r@@ di-1], add_rsp_8, sub_rdi_rax, jmp_0xfffffffffff@@ db@@ 80@@ 5
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x58, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, call_0xfffffffffffdb@@ 96@@ f, cmp_rax_1, ja_0x3@@ 6, mov_rdi_rbp, call_0xfffffffffffdb@@ 97@@ 1, mov_r12_rax, mov_rax_qword_ptr_[rsp+0x48], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ 9b, add_rsp_0x58, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, mov_qword_ptr_[rsp+0x10]@@ _rbp, mov_byte_ptr_[r@@ sp]_0, mov_qword_ptr_[rsp+@@ 4]_0, mov_byte_ptr_[rsp+0x@@ c]_0, xor_r12d_r12d, lea_rbx_[rip+0x@@ 3a@@ bf], jmp_0x5@@ 7, mov_rdx_qword_ptr_[rsp+0x10], movzx_ecx_byte_ptr_[rdx], mov_eax_ecx, shr_al_5, and_eax_7, mov_eax_dword_ptr_[r@@ bx+rax*4], shr_eax@@ _cl, test_al_1, je_0xd1, mov_qword_ptr_[rsp+0x1@@ 8]_1, movsx_eax_byte_ptr_[r@@ dx], mov_byte_ptr_[rsp+0x@@ 20]_1, mov_dword_ptr_[rsp+0x24]_eax, mov_eax_dword_ptr_[rsp+0x24], test_eax_eax, je_0xffffffffffffff@@ 77, mov_rax_qword_ptr_[rsp+0x18], mov_byte_ptr_[rsp+0x@@ c]_0, add_qword_ptr_[rsp+0x1@@ 0]_rax, inc_r12, cmp_byte_ptr_[r@@ sp]_0, lea_rbp_[r@@ sp+4], je_0xffffffffffffff@@ a7, call_0xfffffffffffdb@@ 8a@@ d, mov_r13_qword_ptr_[rsp+0x10], mov_rsi_rax, mov_rdi_r13, call_0xfffffffffffeb@@ ee@@ d, mov_rdx_rax, lea_rdi_[rsp+0x@@ 24], mov_rcx_rbp, mov_rsi_r13, call_0xfffffffffffed@@ 12a, mov_qword_ptr_[rsp+0x18]_rax, cmp_rax_-1, je_0x7c, cmp_rax@@ _-2, je_0x8e, test_rax_rax, jne_0x25, mov_qword_ptr_[rsp+0x1@@ 8]_1, mov_rax_qword_ptr_[rsp+0x10], cmp_byte_ptr_[rax]_0, jne_0xaf, mov_edx_dword_ptr_[rsp+0x24], test_edx_edx, jne_0xc2, mov_rdi_rbp, mov_byte_ptr_[rsp+0x@@ 20]_1, call_0xfffffffffffd@@ bc@@ 90, test_eax_eax, je_0xffffffffffffff@@ 63, mov_byte_ptr_[r@@ sp]_0, jmp_0xffffffffffffff59, lea_rbp_[r@@ sp+4], mov_rdi_rbp, call_0xfffffffffffd@@ bc@@ 68, test_eax_eax, je_0x42, mov_byte_ptr_[rsp@@ ]_1, jmp_0xffffffffffffff5e, mov_qword_ptr_[rsp+0x1@@ 8]_1, mov_byte_ptr_[rsp+0x@@ 20]_0, jmp_0xffffffffffffff28, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffdb@@ 7f@@ 3, mov_qword_ptr_[rsp+0x18]_rax, mov_byte_ptr_[rsp+0x@@ 20]_0, jmp_0xffffffffffffff0a, lea_rcx_[rip+0x@@ 4f@@ 28], mov_edx_0x@@ 96, lea_rsi_[rip+0x36@@ 49], lea_rdi_[rip+0x36@@ 4c], call_0xfffffffffffdb@@ 87@@ 5, call_0xfffffffffffd@@ b7@@ e0, lea_rcx_[rip+0x4@@ f0@@ 4], mov_edx_0x@@ b2, lea_rsi_[rip+0x36@@ 25], lea_rdi_[rip+0x36@@ 3f], call_0xfffffffffffdb@@ 85@@ 1, lea_rcx_[rip+0x4@@ ee@@ 5], mov_edx_0x@@ b3, lea_rsi_[rip+0x3@@ 60@@ 6], lea_rdi_[rip+0x36@@ 37], call_0xfffffffffffd@@ b8@@ 3@@ 2
endbr64, push_r15, lea_r15_[rip+0x@@ bd@@ f3], push_r14, mov_r14_rdx, push_r13, mov_r13_rsi, push_r12, mov_r12d_edi, push_rbp, lea_rbp_[rip+0x@@ bd@@ e4], push_rbx, sub_rbp@@ _r15, sub_rsp_8, call_0xfffffffffffd@@ ae@@ 44, sar@@ _rbp@@ _3, je_0x21, xor_ebx_ebx, mov_rdx_r14, mov_rsi_r13, mov_edi_r12d, call_qword_ptr_[r@@ 15+r@@ bx*8], add_rbx_1, cmp_rbp_rbx, jne_0xffffffffffffffec, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
endbr64, ret
endbr64, sub_rsp_8, add_rsp_8, ret
