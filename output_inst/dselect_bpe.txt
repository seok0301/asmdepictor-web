endbr64, sub_rsp_8, mov_rax_qword_ptr_[rip+0x@@ 35@@ fd@@ 1], test_rax_rax, je_4, call_rax, add_rsp_8, ret
push_qword_ptr_[rip+0x@@ 3@@ 5a@@ a2], b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 5a@@ a3@@ ]
endbr64, mov_rax_qword_ptr_[rdi], mov_rax_qword_ptr_[rax], cmp_qword_ptr_[rax+8]_0, je_0x11, movzx_esi_sil, jmp_0xffffffffffffe@@ 8@@ 3b, ret
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 35@@ 5d@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ ad@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ a5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 85@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 7d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 75@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 6d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 65@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 3@@ 50@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 35@@ 00@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ ff@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ ff@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ fe@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ fe@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ fd@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ fc@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ fc@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ fb@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ fb@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ fa@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ 85@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f7@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f7@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ 6d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ 65@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f0@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ f0@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ ef@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ ee@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ ed@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ ec@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ ec@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ eb@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ eb@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ ea@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ ea@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 85@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 7d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 75@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 6d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 65@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e0@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ e0@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ de@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ dd@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ dd@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ cd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ dc@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ db@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ db@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ da@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ da@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 85@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 7d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 75@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 6d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 65@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d0@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ d0@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ cf@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ ce@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ cd@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ cc@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ cc@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ cb@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ cb@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ ca@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ ca@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 9d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 95@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 8d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 85@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 7d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 75@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 65@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 5d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 55@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 4d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 45@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 3d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 35@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 2d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 25@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 1d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c@@ 15@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c0@@ d@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c0@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ b@@ fd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ bf@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ b@@ ed@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ be@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ b@@ dd@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ bd@@ 5@@ ]
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ b@@ cd@@ ]
endbr64, push_r12, lea_rdi_[rip+0x20@@ fd@@ 2], push_rbp, push_rbx, sub_rsp_0x10, mov_qword_ptr_[rsp+8]_rsi, call_0x10@@ 548, lea_rdi_[rip+0x20@@ f@@ bb], call_0x1@@ 57@@ cc, lea_rsi_[rip+0xe@@ fe@@ 0], xor_edx_edx, lea_rdi_[rip+0x3@@ 9c@@ 7], call_0x@@ fa@@ 37, lea_rsi_[rip+0x3@@ 1c@@ 8b], lea_rdi_[rip+0x20@@ f@@ 93], call_0x1@@ 170@@ 4, lea_rdi_[rsp+8], lea_rdx_[rip+0x2@@ 18@@ 53], lea_rsi_[rip+0x3@@ 1c@@ 6c], call_0x1@@ 18@@ 9c, mov_rdi_qword_ptr_[rip+0x@@ 34@@ c@@ 60], call_0xc@@ 45@@ 0, mov_qword_ptr_[rip+0x@@ 34@@ c@@ 54@@ ]_rax, mov_rax_qword_ptr_[rsp+8], mov_rbp_qword_ptr_[rax], test_rbp_rbp, je_0x70, add_rax_8, mov_qword_ptr_[rsp+8]_rax, lea_r12_[rip+0x@@ 20@@ f@@ 60], lea_rbx_[rip+0x@@ 3@@ 2e@@ 29], mov_rdi_r12, jmp_0x13, mov_rdi_qword_ptr_[rbx+0x28], add_rbx@@ _0x28, test_rdi_rdi, je_0x43, mov_rsi_rbp, call_0xfffffffffffffa@@ 80, test_eax_eax, jne_0xffffffffffffffe9, call_qword_ptr_[r@@ bx+0x20], mov_rax_qword_ptr_[rsp+8], mov_rbp_qword_ptr_[rax], lea_rdx_[rax+8], mov_qword_ptr_[rsp+8]_rdx, test_rbp_rbp, jne_0xffffffffffffffc0, call_0x3@@ 8d@@ e, call_0x1@@ 57@@ 89, add_rsp_0x10, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret, call_0x3@@ 5a@@ 9, jmp_0xffffffffffffff@@ e6, lea_rdi_[rip+0x2@@ 10@@ 17], call_0xfffffffffffff7f@@ b, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x1@@ 15@@ 4@@ e
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ c6@@ d], endbr64, sub_rsp_8, lea_rdx_[rip+0x@@ 32@@ 5e@@ 1], lea_rsi_[rip+0x@@ 33@@ 55@@ a], lea_rdi_[rip+0x34@@ fc@@ 3], call_0x2@@ 75@@ 3, lea_rdi_[rip+0x2a@@ d7], lea_rdx_[rip+0x34@@ a@@ c8], lea_rsi_[rip+0x34@@ fa@@ 9], add_rsp_8, jmp_0xfffffffffffffd@@ 5@@ 5
endbr64, sub_rsp_8, lea_rdx_[rip+0x3@@ 1f@@ 81], lea_rsi_[rip+0x3@@ 2e@@ da], lea_rdi_[rip+0x34@@ fa@@ 3], call_0x27@@ 13, lea_rdi_[rip+0x2a@@ 97], lea_rdx_[rip+0x34@@ a@@ 88], lea_rsi_[rip+0x34@@ f8@@ 9], add_rsp_8, jmp_0xfffffffffffffd@@ 1@@ 5
endbr64, xor_ebp_ebp, mov_r9_rdx, pop_rsi, mov_rdx_rsp, and_rsp_0xfffffffffffffff0, push_rax, push_rsp, lea_r8_[rip+0x@@ 1d@@ 2a@@ 6], lea_rcx_[rip+0x@@ 1d@@ 22@@ f], lea_rdi_[rip-0x@@ 1c8], call_qword_ptr_[rip+0x@@ 34@@ a@@ 1a], hlt
lea_rdi_[rip+0x34@@ c@@ 59], lea_rax_[rip+0x@@ 34@@ c5@@ 2], cmp_rax_rdi, je_0x17, mov_rax_qword_ptr_[rip+0x@@ 34@@ 9e@@ e], test_rax_rax, je_0xb, jmp_rax, ret
lea_rdi_[rip+0x34@@ c@@ 29], lea_rsi_[rip+0x34@@ c@@ 22], sub_rsi_rdi, mov_rax_rsi, shr_rsi@@ _0x3f, sar_rax_3, add_rsi_rax, sar_rsi_1, je_0x16, mov_rax_qword_ptr_[rip+0x@@ 34@@ 9c@@ d], test_rax_rax, je_0xa, jmp_rax, ret
endbr64, cmp_byte_ptr_[rip+0x@@ 34@@ e@@ 4d@@ ]_0, jne_0x2d, push_rbp, cmp_qword_ptr_[rip+0x@@ 34@@ 9a@@ a]_0, mov_rbp_rsp, je_0xe, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 9b@@ 6], call_0xfffffffffffff3b@@ e, call_0xffffffffffffff@@ 69, mov_byte_ptr_[rip+0x@@ 34@@ e@@ 25@@ ]_1, pop_rbp, ret, ret
endbr64, jmp_0xffffffffffffff7@@ c
endbr64, jmp_0x1@@ 0@@ 7@@ 1@@ c
endbr64, jmp_0x1@@ 0@@ 70@@ c
endbr64, jmp_0xfffffffffffff@@ 34@@ c
endbr64, jmp_0xfffffffffffff@@ 33@@ c
endbr64, jmp_0xfffffffffffff@@ 32@@ c
endbr64, push_rax, pop_rax, lea_rcx_[rip+0x@@ 1d@@ 9@@ 17], lea_rdx_[rip+0x1d@@ 92@@ d], mov_esi_0x4@@ e, lea_rdi_[rip+0x1d@@ 9@@ 34], xor_eax_eax, sub_rsp_8, call_0xf@@ 2b@@ a
endbr64, xor_eax_eax, test_rsi_rsi, je_0x12f, push_r13, push_r12, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_8, cmp_byte_ptr_[rsi]_0, je_0x108, cmp_byte_ptr_[rdi+0x@@ f8]_0, mov_byte_ptr_[rdi+0x@@ 28@@ 8]_0, mov_r12_rdi, jne_0x10@@ a, mov_rdi_rbp, call_0xffffffffffff7@@ 2a@@ 1, lea_edx_[rax-1], movsxd_rax_edx, test_edx_edx, jns@@ _0x17, jmp_0x@@ 9a, dec_rax, test_eax_eax, js_0x8@@ b, cmp_byte_ptr_[rbp@@ +rax]@@ _0x2f, lea_rdx_[r@@ bp+rax], jne_0xffffffffffffffeb, test_eax_eax, je_0xef, cmp_byte_ptr_[rbp@@ +rax@@ -1]@@ _0x5c, je_0xffffffffffffffdc, lea_ebx@@ _[rax+1], movsxd_r13@@ _ebx, mov_byte_ptr_[rdx]_0, add_r13@@ _rbp, lea_rsi_[rip+0x1a@@ d@@ 12], mov_rdi_r13, call_0xffffffffffff7@@ 4@@ 3c, test_rax_rax, jne_0x@@ d7, movzx_eax_byte_ptr_[r13], test_al_al, je_0x3f, movsxd_rcx@@ _ebx, lea_rdx_[r@@ bp@@ +rcx@@ +1], mov_r8d_8, jmp_0x1e, cmp_al@@ _0x64, jne_0xb, mov_byte_ptr_[r12+0x@@ 28@@ 8]_1, movzx_eax_byte_ptr_[rdx], inc_rdx, test_al_al, je_0x19, cmp_al@@ _0x69, jne_0xffffffffffffffe7, mov_r8d@@ _0xa, jmp_0xffffffffffffff@@ ec, mov_r8d_8, mov_edx_r8d, lea_rdi_[r12+0x@@ 290], mov_rsi_rbp, call_0xffffffffffff7@@ 3a@@ 4, mov_r8d_eax, mov_eax_1, test_r8d_r8d, je_0x1b, lea_rdi_[rip+0x1a@@ c7@@ 2], call_0xffffffffffff7@@ 20@@ b, mov_rsi_rax, mov_rdi_r12, call_0xffffffffffff7f@@ 20, xor_eax_eax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, ret, lea_rdi_[r@@ di+0x@@ 290], call_0xffffffffffff7@@ 18@@ 9, mov_byte_ptr_[r12+0x@@ f8]_0, jmp_0xfffffffffffffee7, mov_rdx_rbp, mov_r13d_1, mov_ebx_1, jmp_0xffffffffffffff16, lea_rdi_[rip+0x1a@@ bf@@ 1], jmp_0xffffffffffffff9@@ b
endbr64, push_r12, mov_r12_rdi, mov_rdi_qword_ptr_[rip+0x@@ 34@@ d@@ 18], mov_esi_1, call_0xfffffffffffff60@@ b, mov_rdi_r12, call_0x1@@ 3e@@ 3, mov_rdx_r12, lea_rsi_[rip+0x1d@@ 90@@ c], mov_edi_1, xor_eax_eax, pop_r12, jmp_0x@@ d@@ 1e@@ b
endbr64, cmp_byte_ptr_[rdi+0x@@ f8]_0, je_0xd, jmp_0x1@@ b@@ f3, jmp_0xfffffffffffff7a@@ 8
endbr64, push_r12, push_rbp, mov_ebp_esi, push_rbx, mov_rbx_rdi, mov_rax_qword_ptr_[rdi], call_qword_ptr_[rax+0x@@ 38], test_rax_rax, je_0x72, lea_r12_[r@@ bx+0x@@ 290], xor_r8d_r8d, mov_rsi_rax, xor_ecx_ecx, xor_edx_edx, mov_rdi_r12, call_0xffffffffffff7@@ 75@@ 4, mov_r8d_eax, mov_eax_1, test_r8d_r8d, je_0x41, cmp_byte_ptr_[rbx+0x@@ 28@@ 8]_0, je_0x43, mov_rax_qword_ptr_[rbx+0x@@ 258], movsxd_rsi@@ _ebp, mov_rax_qword_ptr_[rax+r@@ si*8], mov_rax_qword_ptr_[rax], mov_rsi_qword_ptr_[rax+0x@@ e0], test_rsi_rsi, je_0x26, cmp_byte_ptr_[rsi]_0, je_0x21, xor_r8d_r8d, xor_ecx_ecx, xor_edx_edx, mov_rdi_r12, call_0xffffffffffff7@@ 70d, test_eax_eax, sete_al, pop_rbx, pop_rbp, pop_r12, ret, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret
endbr64, push_r13, lea_r13_[r@@ di+0x@@ f8], mov_edx_0x80, push_r12, mov_rsi_r13, push_rbp, mov_rbp_rdi, sub_rsp_0x90, mov_r12_rsp, mov_rdi_r12, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, call_0xfffffffffffff90@@ 5, mov_rdi_qword_ptr_[rbp+0x@@ b0], call_0xfffffffffffff2a@@ 9, mov_rdi_qword_ptr_[rbp+0x@@ b0], xor_edx_edx, xor_esi_esi, call_0xfffffffffffff1f@@ 9, cmp_eax_-1, je_0x22, lea_rdi_[rip+0x1d@@ 9@@ 17], call_0xfffffffffffff47@@ 8, mov_rdi_qword_ptr_[rbp+0x@@ b0], mov_rsi_rax, mov_edx_0xffffffff, call_0xfffffffffffff@@ 34@@ 4, call_0xfffffffffffff5@@ 9f, mov_rdi_qword_ptr_[rbp+0x@@ b0], mov_edx@@ _0x7f, mov_rsi_r12, call_0xfffffffffffff7@@ 9b, cmp_eax_-1, jne_9, mov_byte_ptr_[rbp+0x@@ f8]_0, mov_edi@@ _0x1c, call_0xfffffffffffff1d@@ 5, call_0xfffffffffffff@@ 190, mov_ecx_dword_ptr_[rbp+0x@@ 24], test_ecx_ecx, je_0x8e, mov_rdi_qword_ptr_[rbp+0x@@ a8], mov_edx_0xffffffff, test_rdi_rdi, je_8, movsx_edx_word_ptr_[r@@ di+4], inc_edx, mov_ecx_1, xor_esi_esi, call_0xfffffffffffff3@@ 92, mov_rdi_rbp, call_0x1b@@ 4a, cmp_byte_ptr_[r@@ sp]_0, je_0x81, mov_rax_qword_ptr_[rbp], lea_rdx_[rip-0x@@ 1f@@ c], mov_rax_qword_ptr_[rax+0x48], cmp_rax_rdx, jne_0xbd, mov_rdi_r13, mov_edx_0x80, mov_rsi_r12, call_0xfffffffffffff8@@ 2c, mov_rdi_rbp, call_0x1a@@ 34, mov_rax_qword_ptr_[rsp+0x88], xor_rax_qword_ptr_fs:[0x28], jne_0xbd, add_rsp_0x@@ 90, pop_rbp, pop_r12, pop_r13, ret, mov_edx_dword_ptr_[r@@ bp+0x20], test_edx_edx, je_0x3b, mov_rdi_qword_ptr_[rbp+0x@@ 88], mov_edx_0xffffffff, test_rdi_rdi, jne_0xffffffffffffff@@ 73, jmp_0xffffffffffffff73, cmp_byte_ptr_[rbp+0x@@ f8]_0, je_0x59, mov_rdi_rbp, call_0x1@@ 9d@@ 4, jmp_0xffffffffffffffa0, mov_eax_dword_ptr_[rbp+0x@@ 1c], test_eax_eax, jne_0x53, mov_rdi_qword_ptr_[rbp+0x@@ 80], mov_edx_0xffffffff, test_rdi_rdi, je_8, movsx_edx_word_ptr_[r@@ di+4], inc_edx, mov_ecx_1, xor_esi_esi, call_0xfffffffffffff2c@@ 3, mov_rdi_rbp, call_0x20@@ 1b, jmp_0xffffffffffffff31, mov_rsi_r12, mov_rdi_rbp, call_rax, test_al_al, jne_0xffffffffffffff@@ 3f, call_0xfffffffffffff54@@ 0, jmp_0xffffffffffffff4c, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x18], jmp_0xffffffffffffff01, call_0xfffffffffffff2c@@ 1
endbr64, push_r13, mov_r13_rsi, push_r12, push_rbp, mov_rbp_rdi, lea_rdi_[rip+0x1d@@ 77@@ 7], push_rbx, sub_rsp_8, call_0xfffffffffffff2c@@ 5, mov_rdi_rax, mov_r12_rax, call_0xfffffffffffff27@@ a, mov_rbx_rax, call_0xfffffffffffff4e@@ 2, mov_rdi_qword_ptr_[rbp+0x@@ b0], call_0xfffffffffffff0@@ b6, mov_rdi_qword_ptr_[rbp+0x@@ b0], xor_edx_edx, xor_esi_esi, call_0xfffffffffffff@@ 006, cmp_eax_-1, je_0x16, mov_rdi_qword_ptr_[rbp+0x@@ b0], mov_edx_0xffffffff, mov_rsi_r12, call_0xfffffffffffff@@ 15@@ d, mov_rdi_qword_ptr_[rbp+0x@@ b0], xor_esi_esi, mov_edx_ebx, call_0xffffffffffffe@@ fd@@ d, cmp_eax_-1, je_0x16, mov_rdi_qword_ptr_[rbp+0x@@ b0], mov_edx_0xffffffff, mov_rsi_r13, call_0xfffffffffffff@@ 134, mov_rdi_qword_ptr_[rbp+0x@@ b0], call_0xfffffffffffff3@@ 18, mov_ecx_dword_ptr_[rbp+0x@@ 24], test_ecx_ecx, je_0x3e, mov_rdi_qword_ptr_[rbp+0x@@ a8], mov_edx_0xffffffff, test_rdi_rdi, je_8, movsx_edx_word_ptr_[r@@ di+4], inc_edx, mov_ecx_1, xor_esi_esi, call_0xfffffffffffff@@ 1a@@ e, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, jmp_0x1@@ 95@@ c, mov_edx_dword_ptr_[r@@ bp+0x20], test_edx_edx, je_0x1b, mov_rdi_qword_ptr_[rbp+0x@@ 88], mov_edx_0xffffffff, test_rdi_rdi, jne_0xffffffffffffffbf, jmp_0xffffffffffffffc3, mov_eax_dword_ptr_[rbp+0x@@ 1c], test_eax_eax, je_0x1b, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, mov_rax_qword_ptr_[rax+0x18], add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, jmp_rax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret
endbr64, push_r15, mov_r15_rdi, push_r14, mov_r14_rsi, push_r13, push_r12, push_rbp, mov_ebp_edx, push_rbx, sub_rsp_0x18, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 8d@@ f], test_rdi_rdi, je_0x3@@ e7, movsx_eax_word_ptr_[r@@ di+4], movsx@@ _r13d@@ _word_ptr_[r@@ di+@@ 6], inc_eax, mov_dword_ptr_[rsp+0xc]_eax, inc_r13d, mov_esi_dword_ptr_[r@@ 15+0x@@ 6c], or_esi@@ _0x20, call_0xfffffffffffff48@@ d, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 8b@@ 1], mov_esi_1, call_0xfffffffffffff@@ 1a@@ c, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 89@@ 9], call_0xffffffffffffef@@ 59, movsx_eax_byte_ptr_[r@@ 14], test_al_al, je_0x1@@ f6, mov_rbx_r14, jmp_0x15, movsx_eax_byte_ptr_[r@@ bx+0x10], add_rbx_0x10, test_al_al, je_0x1@@ de, cmp_eax_ebp, jne_0xffffffffffffffee, mov_esi_dword_ptr_[r@@ 15+0x@@ 6c], mov_rdi_qword_ptr_[rip+0x@@ 34@@ 86@@ 1], call_0xfffffffffffff7e@@ 1, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 85@@ 5], xor_edx_edx, mov_esi_1, call_0xffffffffffffee@@ 6e, cmp_eax_-1, je_0x23, mov_rax_qword_ptr_[rbx+8], mov_rdi_qword_ptr_[rax+8], call_0xfffffffffffff0@@ ec, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 8@@ 30], mov_rsi_rax, mov_edx_0xffffffff, call_0xffffffffffffe@@ fb8, mov_esi_dword_ptr_[r@@ 15+0x@@ 48], mov_rdi_qword_ptr_[rip+0x@@ 34@@ 8@@ 18], call_0xfffffffffffff7@@ 98, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 80@@ c], xor_edx_edx, xor_esi_esi, call_0xffffffffffffee@@ 28, cmp_eax_-1, je_0x22, lea_rdi_[rip+0x1d@@ 55@@ c], call_0xfffffffffffff0@@ a7, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 7e@@ b], mov_rsi_rax, mov_edx_0xffffffff, call_0xffffffffffffef7@@ 3, mov_rax_qword_ptr_[rbx+8], xor_ebp_ebp, mov_rdi_qword_ptr_[rax], call_0xfffffffffffff0@@ 85, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 7c@@ 9], mov_rsi_rax, mov_edx_0xffffffff, call_0xffffffffffffef@@ 51, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 7b@@ 5], test_rdi_rdi, je_8, movsx@@ _ebp@@ _word_ptr_[r@@ di+2], inc_ebp, cmp_ebp@@ _r13d, jge_0x@@ 1f, mov_esi_0x20, inc_ebp, call_0xfffffffffffff67@@ 9, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 7@@ 8d], cmp_r13d@@ _ebp, jne_0xffffffffffffffea, mov_esi_dword_ptr_[r@@ 15+0x@@ 4c], call_0xfffffffffffff70@@ 4, mov_eax_dword_ptr_[rsp+0xc], mov_rdi_qword_ptr_[rip+0x@@ 34@@ 77@@ 4], xor_edx_edx, lea_esi_[rax-1], call_0xffffffffffffed@@ 8f, cmp_eax_-1, je_0x22, lea_rdi_[rip+0x1d@@ 39@@ 6], call_0xfffffffffffff@@ 00@@ e, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 75@@ 2], mov_rsi_rax, mov_edx_0xffffffff, call_0xffffffffffffe@@ ed@@ a, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 7@@ 3e], xor_ebp_ebp, test_rdi_rdi, je_8, movsx@@ _ebp@@ _word_ptr_[r@@ di+2], inc_ebp, cmp_ebp@@ _r13d, jl@@ _0x15, jmp_0x24, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 7@@ 19], mov_esi_0x20, inc_ebp, call_0xfffffffffffff5f@@ 2, cmp_r13d@@ _ebp, jne_0xffffffffffffffea, mov_edi_dword_ptr_[rsp+0xc], mov_esi_r13d, call_0xfffffffffffff@@ 22@@ 1, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 6f@@ 5], xor_esi_esi, call_0xfffffffffffff67@@ 3, movsx_ebx@@ _byte_ptr_[r@@ bx+0x10], call_0xfffffffffffff48@@ a, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 6d@@ e], call_0xfffffffffffff0@@ 5e, mov_ebp_eax, cmp_eax_-1, je_0x1@@ f2, cmp_eax_0x20, je_0x1@@ 69, cmp_eax_0x7@@ 1, je_0x1@@ 60, cmp_eax@@ _0x3f, je_0x1@@ 49, cmp_eax@@ _0x68, je_0x1@@ 40, cmp_eax@@ _0x2e, cmove@@ _ebp@@ _ebx, jmp_0xfffffffffffffe@@ 04, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 69@@ 1], mov_edx_1, mov_esi_1, call_0xffffffffffffeca@@ 7, cmp_eax_-1, je_0x22, lea_rdi_[rip+0x1d@@ 2e@@ e], call_0xffffffffffffef@@ 26, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 66@@ a], mov_rsi_rax, mov_edx_0xffffffff, call_0xffffffffffffed@@ f2, cmp_byte_ptr_[r14]_0, je_0xf0, mov_rbx_r14, xor_ebp_ebp, jmp_8, mov_ebp_eax, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 63@@ f], mov_esi_0x2@@ 00000, call_0xfffffffffffff5b@@ a, lea_r12d_[r@@ bp+@@ 3], mov_rdi_qword_ptr_[rip+0x@@ 34@@ 6@@ 2a], mov_edx_3, mov_esi_r12d, call_0xffffffffffffec@@ 42, cmp_eax_-1, je_0x11, movsx_esi@@ _byte_ptr_[rbx], mov_rdi_qword_ptr_[rip+0x@@ 34@@ 60@@ e], call_0xfffffffffffff4e@@ e, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 60@@ 2], xor_esi_esi, call_0xfffffffffffff@@ 580, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 5f@@ 4], mov_edx_6, mov_esi_r12d, call_0xffffffffffffe@@ c0@@ c, cmp_eax_-1, je_0x22, mov_rax_qword_ptr_[rbx+8], mov_rdi_qword_ptr_[rax], call_0xffffffffffffee@@ 8b, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 5c@@ f], mov_rsi_rax, mov_edx_0xffffffff, call_0xffffffffffffed@@ 57, add_rbx_0x10, cmp_byte_ptr_[rbx]_0, lea_eax_[r@@ bp+1], jne_0xffffffffffffff@@ 70, lea_esi_[r@@ bp+@@ 5], mov_rdi_qword_ptr_[rip+0x@@ 34@@ 5a8], mov_edx_1, call_0xffffffffffffe@@ bc@@ 3, cmp_eax_-1, je_0x22, lea_rdi_[rip+0x1d@@ 24@@ a], call_0xffffffffffffee@@ 42, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 58@@ 6], mov_rsi_rax, mov_edx_0xffffffff, call_0xffffffffffffe@@ d0@@ e, movsx_ebx@@ _byte_ptr_[r@@ 14], jmp_0xfffffffffffffe@@ 8b, xor_ebp_ebp, jmp_0xfffffffffffffc@@ ce, mov_esi_4, jmp_0xffffffffffffffb5, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 55@@ b], call_0xffffffffffffec@@ 1b, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 54@@ f], mov_esi_1, call_0xffffffffffffee@@ 4a, mov_rdi_qword_ptr_[rip+0x@@ 34@@ 53@@ e], call_0xfffffffffffff@@ 11@@ e, mov_rax_qword_ptr_[r15], mov_rdi_r15, call_qword_ptr_[rax+0x28], mov_rdi_r15, call_0x1c@@ 2d, mov_rdi_r15, call_0x1a@@ c5, mov_rax_qword_ptr_[r15], mov_rdi_r15, call_qword_ptr_[rax+0x18], mov_rdi_r15, call_0x15@@ 14, mov_rdi_qword_ptr_[r15+0x@@ a8], add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, jmp_0xfffffffffffff0@@ da, mov_dword_ptr_[rsp+0xc]@@ _0xffffffff, mov_r13d_0xffffffff, jmp_0xfffffffffffffc@@ 23, lea_rdi_[rip+0x1d@@ 20@@ b], call_0xffffffffffffed@@ 8b, mov_rdi_rax, xor_eax_eax, call_0x@@ ed@@ 7@@ 1
endbr64, push_rbp, mov_rbp_rdi, mov_rax_qword_ptr_[rdi], call_qword_ptr_[rax+0x@@ 40], mov_rsi_rax, mov_rdi_rbp, xor_edx_edx, pop_rbp, jmp_0xfffffffffffffb@@ a@@ 9
endbr64, push_r12, mov_r12d_esi, push_rbp, mov_rbp_rdi, sub_rsp_8, mov_rax_qword_ptr_[rdi+0x@@ 80], mov_esi_dword_ptr_[r@@ di+0x@@ d0], test_rax_rax, je_0xaf, cmp_esi_-1, jne_0x6e, cmp_r12d_-1, je_0x18, mov_dword_ptr_[rbp+0x@@ d@@ 4]_0, mov_dword_ptr_[rbp+0x@@ d@@ 0]_r12d, test_rax_rax, je_0x39, lea_edx_[r@@ 12+1], mov_esi_r12d, mov_rdi_rbp, call_0x1@@ b0@@ d, mov_rax_qword_ptr_[rbp], mov_esi_dword_ptr_[rbp+0x@@ d0], mov_edx_1, mov_rdi_rbp, call_qword_ptr_[rax+8], mov_rdi_rbp, call_0x1@@ 9d0, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x18], mov_rax_qword_ptr_[rbp], mov_rdi_rbp, mov_rax_qword_ptr_[rax+0x20], add_rsp_8, pop_rbp, pop_r12, jmp_rax, lea_edx_[r@@ si+1], call_0x1a@@ c5, mov_rax_qword_ptr_[rbp], mov_esi_dword_ptr_[rbp+0x@@ d0], xor_edx_edx, mov_rdi_rbp, call_qword_ptr_[rax+8], mov_rax_qword_ptr_[rbp+0x80], cmp_r12d_dword_ptr_[r@@ bp+0x@@ d0], jne_0xffffffffffffff@@ 72, jmp_0xffffffffffffff76, cmp_r12d@@ _esi, je_0xffffffffffffff@@ ac, mov_dword_ptr_[rdi+0x@@ d@@ 4]_0, mov_dword_ptr_[rdi+0x@@ d@@ 0]_r12d, jmp_0xffffffffffffff9@@ 9
endbr64, mov_eax_dword_ptr_[rdi+0x18], mov_esi_dword_ptr_[r@@ di+0x@@ c8], mov_edx_dword_ptr_[rdi+0x@@ b8], add_esi@@ _eax, sub_edx_eax, mov_dword_ptr_[rdi+0x@@ c@@ 8]_esi, cmp_esi_edx, jle_0x@@ a, mov_dword_ptr_[rdi+0x@@ c@@ 8]_edx, mov_esi_edx, test_esi_esi, jns@@ _0xe, mov_dword_ptr_[rdi+0x@@ c8]_0, xor_esi_esi, cmp_dword_ptr_[rdi+0x@@ d@@ 0]_esi, jl@@ _0x11, jmp_0x1@@ 90@@ f, sub_rsp_0x18, mov_qword_ptr_[rsp+8]_rdi, call_0xfffffffffffffeb@@ 7, mov_rdi_qword_ptr_[rsp+8], add_rsp_0x18, jmp_0x1@@ 8e@@ 9
endbr64, mov_eax_dword_ptr_[rdi+0x@@ b8], mov_esi_dword_ptr_[r@@ di+0x@@ c8], sub_eax_dword_ptr_[r@@ di+0x18], cmp_esi_eax, jge_0x@@ 3b, inc@@ _esi, mov_dword_ptr_[rdi+0x@@ c@@ 8]_esi, cmp_esi_dword_ptr_[r@@ di+0x@@ d0], jg@@ _0xb, jmp_0x1@@ 8b@@ 9, sub_rsp_0x18, mov_qword_ptr_[rsp+8]_rdi, call_0xfffffffffffffe@@ 67, mov_rdi_qword_ptr_[rsp+8], add_rsp_0x18, jmp_0x1@@ 8@@ 99, ret
endbr64, mov_esi_dword_ptr_[r@@ di+0x@@ c8], mov_eax_dword_ptr_[rdi+0x18], mov_edx_esi, sub_edx_eax, js@@ _0x1f, mov_dword_ptr_[rdi+0x@@ c@@ 8]_edx, cmp_dword_ptr_[rdi+0x@@ d@@ 0]_esi, jge_0x@@ 25, jmp_0x1@@ 85@@ f, mov_esi_eax, mov_dword_ptr_[rdi+0x@@ c8]_0, cmp_dword_ptr_[rdi+0x@@ d@@ 0]_esi, jl_0xffffffffffffff@@ df, sub_rsp_0x18, dec@@ _esi, mov_qword_ptr_[rsp+8]_rdi, call_0xfffffffffffffd@@ f1, mov_rdi_qword_ptr_[rsp+8], add_rsp_0x18, jmp_0x1@@ 82@@ 3
endbr64, mov_esi_dword_ptr_[r@@ di+0x@@ c8], test_esi_esi, jle_0x@@ 44, dec@@ _esi, mov_dword_ptr_[rdi+0x@@ c@@ 8]_esi, add_esi@@ _dword_ptr_[r@@ di+0x18], cmp_dword_ptr_[rdi+0x@@ d@@ 0]_esi, jge_0x@@ 11, jmp_0x1@@ 7e@@ f, sub_rsp_0x18, dec@@ _esi, mov_qword_ptr_[rsp+8]_rdi, call_0xfffffffffffffd@@ 95, mov_rdi_qword_ptr_[rsp+8], add_rsp_0x18, jmp_0x1@@ 7c@@ 7, ret
endbr64, mov_dword_ptr_[rdi+0x@@ c8]_0, xor_esi_esi, jmp_0xfffffffffffffd@@ 6@@ 0
endbr64, mov_esi_dword_ptr_[r@@ di+0x@@ b8], mov_eax_dword_ptr_[rdi+0x18], mov_edx_esi, sub_edx_eax, js@@ _0xf, mov_dword_ptr_[rdi+0x@@ c@@ 8]_edx, dec@@ _esi, jmp_0xfffffffffffffd@@ 35, mov_dword_ptr_[rdi+0x@@ c8]_0, cmp_esi_eax, jl_0xffffffffffffff@@ ed, mov_esi_eax, jmp_0xffffffffffffffe@@ 9
endbr64, mov_edx_dword_ptr_[rdi+0x@@ b8], mov_ecx_dword_ptr_[r@@ di+0x18], mov_r8d_edx, mov_eax_dword_ptr_[rdi+0x@@ c8], sub_r8d@@ _ecx, mov_esi_dword_ptr_[r@@ di+0x@@ d0], cmp_eax@@ _r8d, jge_0x@@ 12, lea_ecx_[rax@@ +rcx@@ -3], cmp_ecx_esi, jg@@ _0xa, inc_eax, mov_dword_ptr_[rdi+0x@@ c@@ 8]_eax, lea_eax_[r@@ si+1], cmp_edx_eax, cmovg@@ _esi@@ _eax, jmp_0xfffffffffffffc@@ d@@ 4
endbr64, mov_eax_dword_ptr_[rdi+0x@@ c8], mov_esi_dword_ptr_[r@@ di+0x@@ d0], test_eax_eax, jle_0x@@ 1e, lea_edx_[rax@@ +2], cmp_edx_esi, jge_0x@@ f, dec@@ _esi, jmp_0xfffffffffffffc@@ a3, dec_eax, mov_dword_ptr_[rdi+0x@@ c@@ 8]_eax, test_esi_esi, jg_0xffffffffffffff@@ e9, jmp_0xfffffffffffffc@@ 8@@ c
endbr64, mov_eax_dword_ptr_[rdi+0x@@ 20], mov_edx_dword_ptr_[rdi+0x@@ d4], mov_ecx_dword_ptr_[rdi+0x@@ d8], add_edx_eax, sub_ecx_eax, mov_dword_ptr_[rdi+0x@@ d@@ 4]_edx, cmp_edx_ecx, jle_0x@@ a, mov_dword_ptr_[rdi+0x@@ d@@ 4]_ecx, mov_edx_ecx, test_edx_edx, jns_0xc, mov_dword_ptr_[rdi+0x@@ d@@ 4]_0, jmp_0x1@@ 0@@ e@@ 9
endbr64, mov_eax_dword_ptr_[rdi+0x@@ d4], mov_edx_0, sub_eax_dword_ptr_[r@@ di+0x20], cmovs@@ _eax_edx, mov_dword_ptr_[rdi+0x@@ d@@ 4]_eax, jmp_0x1@@ 0@@ c@@ 5
endbr64, mov_eax_dword_ptr_[rdi+0x@@ d8], mov_edx_dword_ptr_[rdi+0x@@ d4], sub_eax_dword_ptr_[r@@ di+0x20], cmp_edx_eax, jl@@ _0xb, ret, inc_edx, mov_dword_ptr_[rdi+0x@@ d@@ 4]_edx, jmp_0x1@@ 0@@ 9@@ 8
endbr64, mov_eax_dword_ptr_[rdi+0x@@ d4], test_eax_eax, jle_0x@@ 14, dec_eax, mov_dword_ptr_[rdi+0x@@ d@@ 4]_eax, jmp_0x1@@ 0@@ 7a, ret
endbr64, push_rbp, mov_rbp_rdi, movsxd_rax_dword_ptr_[r@@ di+8], mov_esi_dword_ptr_[r@@ di+0x@@ 78], mov_rdx_rax, imul_rax_rax@@ _0x5@@ 5555@@ 556, mov_ecx_edx, sar_ecx@@ _0x1f, shr_rax_0x20, sub_eax_ecx, add_eax_dword_ptr_[r@@ di+0x@@ cc], sub_esi@@ _edx, mov_dword_ptr_[rdi+0x@@ cc@@ ]_eax, cmp_eax_esi, jle_0x@@ a, mov_dword_ptr_[rbp+0x@@ c@@ c]_esi, mov_eax_esi, test_eax_eax, jns_0xc, mov_dword_ptr_[rbp+0x@@ cc@@ ]_0, mov_rdi_rbp, call_0x17@@ 11, mov_rdi_rbp, call_0x1@@ 5a@@ 9, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x18], mov_rdi_rbp, pop_rbp, jmp_0x@@ ff@@ 6
endbr64, push_rbp, mov_rbp_rdi, movsxd_rdx_dword_ptr_[r@@ di+8], mov_rax_rdx, imul_rdx_rdx@@ _0x5@@ 5555@@ 556, sar_eax_0x1f, shr_rdx@@ _0x20, sub_eax_edx, add_eax_dword_ptr_[r@@ di+0x@@ cc], mov_edx_0, cmovs@@ _eax_edx, mov_dword_ptr_[rdi+0x@@ cc@@ ]_eax, call_0x1@@ 6b@@ d, mov_rdi_rbp, call_0x1@@ 555, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x18], mov_rdi_rbp, pop_rbp, jmp_0x@@ fa@@ 2
endbr64, push_rbp, mov_rbp_rdi, mov_eax_dword_ptr_[rdi+0x@@ cc], mov_edx_dword_ptr_[rdi+0x@@ 78], inc_eax, sub_edx@@ _dword_ptr_[r@@ di+8], mov_dword_ptr_[rdi+0x@@ cc@@ ]_eax, cmp_eax_edx, jle_0x@@ a, mov_dword_ptr_[rdi+0x@@ c@@ c]_edx, mov_eax_edx, test_eax_eax, jns_0xc, mov_dword_ptr_[rbp+0x@@ cc@@ ]_0, mov_rdi_rbp, call_0x1@@ 65@@ 7, mov_rdi_rbp, call_0x1@@ 4e@@ f, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x18], mov_rdi_rbp, pop_rbp, jmp_0x@@ f3@@ c
endbr64, push_rbp, mov_edx_0, mov_rbp_rdi, mov_eax_dword_ptr_[rdi+0x@@ cc], dec_eax, cmovs@@ _eax_edx, mov_dword_ptr_[rdi+0x@@ cc@@ ]_eax, call_0x16@@ 12, mov_rdi_rbp, call_0x1@@ 4a@@ a, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x18], mov_rdi_rbp, pop_rbp, jmp_0x@@ ef@@ 7
endbr64, push_rbx, mov_rdx_rdi, mov_rbx_rdi, lea_rsi_[rip+0x1d@@ 57@@ 6], mov_edi_1, xor_eax_eax, call_0x90@@ a7, mov_rdi_rbx, call_0xffffffffffffc@@ ca@@ f, inc_dword_ptr_[r@@ bx+0x18], pop_rbx, ret
endbr64, push_r12, xor_edx_edx, mov_edi@@ _0x1c, push_rbp, sub_rsp_8, mov_rbp_qword_ptr_[r@@ si], mov_r12_qword_ptr_[r@@ si+8], mov_rsi_rbp, call_0xffffffffffffe@@ 544, test_eax_eax, jne_0x63, test_rbp_rbp, je_0xf, mov_esi_0x@@ 98, mov_rdi_rbp, call_0xfffffffffffff0@@ 4e, xor_edx_edx, mov_rsi_r12, mov_edi_2, call_0xffffffffffffe3@@ ff, test_eax_eax, jne_0x28, test_r12_r12, je_0x1b, add_rsp_8, pop_rbp, mov_rdi_r12, mov_esi_0x80, pop_r12, jmp_0xfffffffffffff0@@ 22, add_rsp_8, pop_rbp, pop_r12, ret, lea_rdi_[rip+0x1c@@ cf@@ 9], call_0xffffffffffffe@@ 64@@ 9, mov_rdi_rax, xor_eax_eax, call_0xe@@ 6@@ 2f, lea_rdi_[rip+0x1c@@ c@@ bb], call_0xffffffffffffe6@@ 33, mov_rdi_rax, xor_eax_eax, call_0xe@@ 6@@ 1@@ 9
endbr64, push_r15, push_r14, push_r13, mov_r13_rdi, push_r12, push_rbp, push_rbx, sub_rsp_0x18, test_rdi_rdi, je_0x5d, movsx_eax_word_ptr_[r@@ di+4], movzx_r14d_word_ptr_[r@@ di+@@ 6], test_ax_ax, js_0x4@@ f, inc_eax, mov_dword_ptr_[rsp+0xc]_eax, xor_r12d_r12d, movsx@@ _r15d@@ _r14w, xor_edx_edx, mov_esi_r12d, mov_rdi_r13, call_0xffffffffffffe@@ 350, test_r14@@ w@@ _r14w, js@@ _0x22, lea_ebp_[r@@ 15+1], xor_ebx_ebx, mov_esi_0x20, mov_rdi_r13, inc_ebx, call_0xffffffffffffe@@ be@@ e, cmp_ebp_ebx, jne_0xffffffffffffffef, inc_r12d, cmp_dword_ptr_[rsp+0x@@ c]@@ _r12d, jne_0xffffffffffffffc5, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, mov_rdi_r13, pop_r13, pop_r14, xor_edx_edx, xor_esi_esi, pop_r15, jmp_0xffffffffffffe@@ 30@@ 6
endbr64, push_rbp, push_rbx, mov_ebx_esi, sub_rsp_0x98, mov_rbp_rsp, mov_rdi_rbp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x88]_rax, xor_eax_eax, call_0xffffffffffffe7@@ e8, mov_esi_0x1@@ c, mov_rdi_rbp, call_0xffffffffffffe@@ be@@ b, xor_edx_edx, mov_rsi_rbp, mov_edi_ebx, call_0xffffffffffffe@@ 2c@@ f, test_eax_eax, js@@ _0x28, mov_rax_qword_ptr_[rsp+0x88], xor_rax_qword_ptr_fs:[0x28], jne_0x4b, add_rsp_0x98, pop_rbx, pop_rbp, ret, cmp_ebx_1, je_0x1d, lea_rdi_[rip+0x1c@@ a@@ 20], call_0xffffffffffffe5@@ 14, mov_rdi_rax, xor_eax_eax, call_0xe@@ 4f@@ a, lea_rdi_[rip+0x1c@@ 9@@ ea], call_0xffffffffffffe@@ 4f@@ 9, mov_rdi_rax, xor_eax_eax, call_0xe@@ 4d@@ f, call_0xffffffffffffe@@ 4b@@ a
endbr64, push_r12, push_rbp, mov_rbp_rdi, mov_edi_0x@@ 98, push_rbx, sub_rsp_0xa0, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, call_0xffffffffffffee@@ 46, mov_edi@@ _0x80, mov_r12_rax, call_0xffffffffffffee@@ 39, mov_rdx_rax, xor_esi_esi, xor_edi_edi, mov_rbx_rax, call_0xffffffffffffe@@ 2@@ 1a, test_eax_eax, jne_0x@@ c4, xor_esi_esi, mov_rdx_r12, mov_edi@@ _0x1c, call_0xffffffffffffe@@ 32@@ 3, test_eax_eax, jne_0x@@ de, mov_rcx_r12, xor_eax_eax, mov_r8_rbx, mov_edx_2, mov_esi_0xffffffff, lea_rdi_[rip-0x@@ 26@@ 3], call_0xe@@ 8e@@ d, mov_rdi_rbp, xor_esi_esi, call_0xfffffffffffffec@@ 3, lea_rdi_[rsp+8], xor_ecx_ecx, xor_eax_eax, mov_edx_eax, add_eax@@ _0x20, mov_qword_ptr_[rdi@@ +rdx@@ ]_rcx, mov_qword_ptr_[rdi@@ +rdx+@@ 8]_rcx, mov_qword_ptr_[rdi@@ +rdx+0x1@@ 0]_rcx, mov_qword_ptr_[rdi@@ +rdx+0x1@@ 8]_rcx, cmp_eax@@ _0x80, jb_0xffffffffffffff@@ e3, add_rax_rdi, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+8]_0, mov_rbp_rsp, lea_rax_[rip+0x@@ 6c@@ a], mov_qword_ptr_[rsp]_rax, call_0xffffffffffffe@@ 68@@ 6, xor_edx_edx, mov_rsi_rbp, mov_edi@@ _0x1c, call_0xffffffffffffe@@ 29@@ 7, test_eax_eax, jne_0x3c, mov_rax_qword_ptr_[rsp+0x98], xor_rax_qword_ptr_fs:[0x28], jne_0x24, add_rsp@@ _0xa0, pop_rbx, pop_rbp, pop_r12, ret, lea_rdi_[rip+0x1c@@ 8e@@ d], call_0xffffffffffffe@@ 3c8, mov_rdi_rax, xor_eax_eax, call_0xe@@ 3a@@ e, call_0xffffffffffffe@@ 38@@ 9, lea_rdi_[rip+0x1c@@ aa@@ d], call_0xffffffffffffe@@ 3a@@ d, mov_rdi_rax, xor_eax_eax, call_0xe@@ 3@@ 93, lea_rdi_[rip+0x1c@@ a6@@ f], call_0xffffffffffffe3@@ 97, mov_rdi_rax, xor_eax_eax, call_0xe@@ 37@@ d
endbr64, mov_eax_dword_ptr_[rdi+0x@@ 74], mov_dword_ptr_[rsi+0x@@ c]_ecx, mov_dword_ptr_[rsi+@@ 8]_eax, mov_qword_ptr_[rsi@@ ]_rdx, add_ecx_dword_ptr_[r@@ di+0x@@ 70], add_dword_ptr_[r@@ di+0x@@ 7@@ 4]_ecx, ret
endbr64, mov_eax_dword_ptr_[rdi+0x@@ 74], mov_qword_ptr_[rsi@@ ]_rdx, mov_dword_ptr_[rsi+@@ 8]_eax, mov_ecx_dword_ptr_[rdi+0x@@ 78], sub_ecx_eax, mov_dword_ptr_[rsi+0x@@ c]_ecx, mov_eax_ecx, add_eax_dword_ptr_[r@@ di+0x@@ 70], add_dword_ptr_[r@@ di+0x@@ 7@@ 4]_eax, ret
endbr64, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, sub_rsp_8, mov_edx_dword_ptr_[r@@ si+8], mov_rdi_qword_ptr_[rdi+0x@@ 90], xor_esi_esi, call_0xffffffffffffe0@@ 94, cmp_eax_-1, jne_0xc, add_rsp_8, pop_rbx, pop_rbp, ret, mov_edx_dword_ptr_[rbx+0xc], mov_rdi_qword_ptr_[rbp+0x@@ 90], mov_rsi_qword_ptr_[rbx], add_rsp_8, pop_rbx, pop_rbp, jmp_0xffffffffffffe@@ 1d@@ d
endbr64, push_rbx, mov_r8_rsi, mov_esi_edx, mov_edx_dword_ptr_[r@@ 8+8], mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+0x@@ 80], dec@@ _edx, call_0xffffffffffffe0@@ 46, cmp_eax_-1, jne_0xe, pop_rbx, ret, mov_rdi_qword_ptr_[rbx+0x@@ 80], mov_esi_0x20, pop_rbx, jmp_0xffffffffffffe@@ 8e@@ 3
endbr64, sub_rsp_0x10, mov_r8d_dword_ptr_[r@@ si+0xc], mov_r10d@@ _edx, mov_rdi_qword_ptr_[rdi+0x@@ 80], mov_edx_dword_ptr_[r@@ si+8], push_rcx, mov_r9d_r8d, lea_rcx_[rip+0x@@ 1c@@ 7b@@ f], mov_esi@@ _r10d, xor_eax_eax, call_0xffffffffffffe@@ 25@@ 7, add_rsp_0x18, ret
endbr64, push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+0x@@ a0], call_0xffffffffffffe@@ 17@@ 1, mov_rdi_qword_ptr_[rbx+0x@@ a8], call_0xffffffffffffe@@ 16@@ 5, mov_rdi_qword_ptr_[rbx+0x@@ 80], call_0xffffffffffffe@@ 15@@ 9, mov_rdi_qword_ptr_[rbx+0x@@ 90], call_0xffffffffffffe@@ 14d, mov_rdi_qword_ptr_[rbx+0x@@ 98], call_0xffffffffffffe@@ 14@@ 1, mov_rdi_qword_ptr_[rbx+0x@@ 88], call_0xffffffffffffe@@ 13@@ 5, mov_esi_dword_ptr_[rbx+0x@@ c], mov_rdi_qword_ptr_[rip+0x@@ 33@@ 95@@ 6], xor_edx_edx, call_0xffffffffffffd@@ f7@@ 4, mov_rdi_qword_ptr_[rip+0x@@ 33@@ 9@@ 48], call_0xffffffffffffe8@@ 18, mov_qword_ptr_[rbx+0x@@ 80]_0, mov_dword_ptr_[rbx+0x7@@ 4]_0, pop_rbx, ret
endbr64, push_rbp, mov_rbp_rdi, mov_rax_qword_ptr_[rdi], call_qword_ptr_[rax+0x28], mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x10], mov_esi_dword_ptr_[rbp+0x@@ 40], mov_rdi_qword_ptr_[rbp+0x@@ 80], call_0xffffffffffffe@@ 87@@ e, mov_rdi_qword_ptr_[rbp+0x@@ 80], call_0xfffffffffffffb@@ 82, mov_qword_ptr_[rbp+0x@@ bc@@ ]_-1, mov_rdi_rbp, call_0xe@@ 7f, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x18], mov_rax_qword_ptr_[rbp], mov_rdi_rbp, mov_rax_qword_ptr_[rax+0x20], pop_rbp, jmp_rax
endbr64, push_r12, mov_rdx_rdi, lea_rsi_[rip+0x1c@@ 6a@@ a], push_rbp, xor_eax_eax, push_rbx, mov_rbx_rdi, mov_edi_1, call_0xb@@ da@@ 4, call_0xffffffffffffe@@ 48@@ f, call_0xffffffffffffd@@ ea@@ a, call_0xffffffffffffe7@@ 15, mov_rdi_qword_ptr_[rip+0x3@@ 38@@ 89], mov_esi_1, call_0xffffffffffffe@@ 2a@@ 4, call_0xffffffffffffe@@ 15@@ f, mov_rdi_qword_ptr_[rip+0x3@@ 38@@ 73], call_0xffffffffffffe@@ 45@@ 3, call_0xffffffffffffd@@ fc@@ e, test_al_al, jne_0x2@@ 97, movabs_rax_0x1@@ 00000000@@ 0000, mov_qword_ptr_[rbx+0x40]_rax, add_rax@@ _0x40000, mov_qword_ptr_[rbx+0x@@ 48]_rax, add_rax_0x1@@ c@@ 0000, mov_qword_ptr_[rbx+0x@@ 50]_rax, movabs_rax@@ _0x4@@ 0000@@ 00@@ 2@@ 00000, mov_qword_ptr_[rbx+0x@@ 58]_rax, movabs_rax@@ _0x2@@ 00000000@@ 00000, mov_qword_ptr_[rbx+0x@@ 60]_rax, mov_qword_ptr_[rbx+0x@@ 6@@ 8]@@ _0x10000, mov_rdx_qword_ptr_[rip+0x3@@ 38@@ 14], test_rdx_rdx, je_0x2@@ c9, movsx_eax_word_ptr_[r@@ dx+4], movsx_edx_word_ptr_[r@@ dx+@@ 6], inc_eax, xor_ecx_ecx, inc_edx, cmp_eax_5, setg@@ _cl, xor_esi_esi, cmp_eax_4, setg@@ _sil, cmp_eax_2, mov_dword_ptr_[rbx+0x@@ c]_eax, setg_al, movzx_eax_al, mov_dword_ptr_[rbx+@@ 8]_edx, mov_dword_ptr_[rbx+0x1@@ 0]_ecx, mov_dword_ptr_[rbx+0x1@@ 4]_esi, mov_dword_ptr_[rbx+0x1@@ c]_eax, mov_rax_qword_ptr_[rbx], mov_rdi_rbx, call_qword_ptr_[rax], mov_rax_qword_ptr_[rbx], mov_rdi_rbx, call_qword_ptr_[rax+0x30], mov_esi_dword_ptr_[r@@ bx+8], mov_edi_1, xor_ecx_ecx, xor_edx_edx, call_0xffffffffffffdd@@ 99, mov_qword_ptr_[rbx+0x@@ a0]_rax, mov_rdi_rax, test_rax_rax, je_0x2@@ a2, mov_esi_dword_ptr_[rbx+0x@@ 48], call_0xffffffffffffe7@@ 1e, mov_edx_dword_ptr_[rbx+0x@@ 34], mov_esi_dword_ptr_[r@@ bx+8], mov_edi_1, xor_ecx_ecx, call_0xffffffffffffdd@@ 6c, mov_qword_ptr_[rbx+0x@@ a8]_rax, mov_rdi_rax, test_rax_rax, je_0x2@@ 5f, mov_esi_dword_ptr_[rbx+0x@@ 68], call_0xffffffffffffe@@ 6f@@ 1, mov_esi_dword_ptr_[rbx+0x@@ 78], mov_edi_dword_ptr_[r@@ bx+0xc], call_0xffffffffffffe@@ 5d@@ 6, mov_qword_ptr_[rbx+0x@@ 80]_rax, test_rax_rax, je_0x2@@ aa, mov_esi_dword_ptr_[rbx+0x@@ 78], mov_edi_1, call_0xffffffffffffe@@ 5b@@ 9, mov_qword_ptr_[rbx+0x@@ 90]_rax, mov_rdi_rax, test_rax_rax, je_0x2@@ 74, mov_esi_dword_ptr_[rbx+0x@@ 58], call_0xffffffffffffe@@ 6a@@ e, mov_esi_dword_ptr_[rbx+0x@@ 78], mov_edi_1, call_0xffffffffffffe5@@ 91, mov_qword_ptr_[rbx+0x@@ 98]_rax, mov_rdi_rax, test_rax_rax, je_0x2@@ 36, mov_esi_dword_ptr_[rbx+0x@@ 4c], call_0xffffffffffffe@@ 68@@ 6, mov_esi_dword_ptr_[rbx+0x@@ 78], mov_edi@@ _0x78, call_0xffffffffffffe@@ 56@@ 9, mov_qword_ptr_[rbx+0x@@ 88]_rax, mov_rdi_rax, test_rax_rax, je_0x1@@ f8, mov_esi_dword_ptr_[rbx+0x@@ 60], call_0xffffffffffffe@@ 65@@ e, mov_esi_dword_ptr_[rbx+0x@@ 60], mov_rdi_qword_ptr_[rbx+0x@@ 88], or_esi@@ _0x20, call_0xffffffffffffe@@ 29@@ c, mov_eax_dword_ptr_[rbx+0xc], mov_esi_dword_ptr_[r@@ bx+8], mov_edi_1, lea_edx_[rax-1], xor_ecx_ecx, call_0xffffffffffffdc@@ 97, mov_qword_ptr_[rbx+0x@@ b0]_rax, mov_rdi_rax, test_rax_rax, je_0x1@@ 74, mov_esi_dword_ptr_[rbx+0x@@ 5c], or_esi@@ _0x20, call_0xffffffffffffe@@ 26@@ 9, mov_eax_dword_ptr_[rbx+0x@@ c8], mov_edx_dword_ptr_[r@@ bx+0x18], mov_ecx_dword_ptr_[rbx+0x@@ d0], lea_esi_[rax@@ +rdx], cmp_ecx_esi, jl@@ _0xa, mov_dword_ptr_[rbx+0x@@ c@@ 8]_ecx, mov_eax_ecx, mov_ecx_dword_ptr_[rbx+0x@@ b8], sub_ecx_edx, cmp_ecx_eax, jl@@ _0x8@@ c, test_eax_eax, jns_0xc, mov_dword_ptr_[rbx+0x@@ c8]_0, mov_dword_ptr_[rbx+0x@@ d@@ 4]_0, mov_dword_ptr_[rbx+0x@@ cc@@ ]_0, mov_rdi_rbx, call_0xfffffffffffffd@@ 21, mov_eax_dword_ptr_[rbx+0x38], sub_rsp_8, push_rax, mov_eax_dword_ptr_[rbx+0x@@ 34], mov_ecx_dword_ptr_[rbx+0x@@ c], push_rax, mov_eax_dword_ptr_[rbx+0x@@ 30], mov_edx_dword_ptr_[rbx+8], push_rax, mov_eax_dword_ptr_[rbx+0x@@ 2c], mov_r9d_dword_ptr_[r@@ bx+0x14], push_rax, mov_eax_dword_ptr_[rbx+0x28], mov_r8d_dword_ptr_[r@@ bx+0x10], push_rax, mov_eax_dword_ptr_[rbx+0x@@ 24], lea_rsi_[rip+0x1c@@ 64@@ c], push_rax, mov_eax_dword_ptr_[rbx+0x20], mov_edi_1, push_rax, mov_eax_dword_ptr_[r@@ bx+0x1c], push_rax, mov_eax_dword_ptr_[rbx+0x18], push_rax, xor_eax_eax, call_0xba@@ f8, add_rsp_0x50, pop_rbx, pop_rbp, pop_r12, ret, mov_dword_ptr_[rbx+0x@@ c@@ 8]_ecx, mov_eax_ecx, jmp_0xffffffffffffff72, call_0xffffffffffffdb@@ c0, test_eax_eax, jne_0xfffffffffffffd@@ 68, cmp_dword_ptr_[rip+0x@@ 33@@ 3b@@ 4]@@ _0xc, jle_0xfffffffffffffd@@ 5b, lea_rdi_[rip+0x1c@@ 3c@@ 6], call_0xffffffffffffd@@ cb@@ f, lea_r12_[rip+0x@@ 33@@ 18@@ f], mov_ebp_1, jmp_0x25, mov_eax_ebp, shl_eax_8, or_eax@@ _dword_ptr_[r@@ 12+8], mov_dword_ptr_[rbx@@ +r@@ bp@@ *4+0x@@ 3c]_eax, inc_rbp, add_r12@@ _0xc, cmp_rbp@@ _0xd, je_0xfffffffffffffd@@ 64, movsx_edx_word_ptr_[r@@ 12+4], movsx_esi@@ _word_ptr_[r@@ 12], mov_edi_ebp, call_0xffffffffffffe@@ 1d@@ c, test_eax_eax, je_0xffffffffffffffcd, lea_rdi_[rip+0x1c@@ 5@@ 34], call_0xffffffffffffd@@ e0@@ c, mov_rdi_rax, xor_eax_eax, call_0xdd@@ f2, mov_dword_ptr_[rbx+0x@@ c]_0xffffffff, xor_eax_eax, xor_esi_esi, xor_ecx_ecx, mov_edx_0xffffffff, jmp_0xfffffffffffffd@@ 54, lea_rdi_[rip+0x1c@@ 3b@@ d], call_0xffffffffffffdd@@ da, mov_rdi_rax, xor_eax_eax, call_0xdd@@ c0, lea_rdi_[rip+0x1c@@ 50@@ c], call_0xffffffffffffdd@@ c4, mov_rdi_rax, xor_eax_eax, call_0xdd@@ aa, lea_rdi_[rip+0x1c@@ 3@@ 1e], call_0xffffffffffffdd@@ ae, mov_rdi_rax, xor_eax_eax, call_0xdd@@ 94, lea_rdi_[rip+0x1c@@ 36@@ 1], call_0xffffffffffffdd@@ 98, mov_rdi_rax, xor_eax_eax, call_0xdd@@ 7e, lea_rdi_[rip+0x1c@@ 4f@@ 2], call_0xffffffffffffdd@@ 82, mov_rdi_rax, xor_eax_eax, call_0xdd@@ 68, lea_rdi_[rip+0x1c@@ 3@@ 18], call_0xffffffffffffdd@@ 6c, mov_rdi_rax, xor_eax_eax, call_0xdd@@ 52, lea_rdi_[rip+0x1c@@ 2e@@ 4], call_0xffffffffffffdd@@ 56, mov_rdi_rax, xor_eax_eax, call_0xdd@@ 3@@ c
endbr64, push_r12, push_rbp, push_rbx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xffffffffffffdb@@ 14, mov_rdx_qword_ptr_[rip+0x3@@ 34@@ b8], lea_rsi_[rip+0x1c@@ 5a@@ 1], mov_r12d_dword_ptr_[rax], mov_edi_1, mov_rbx_rax, xor_eax_eax, call_0xb@@ 95@@ 4, mov_rbp_qword_ptr_[rip+0x@@ 3@@ 34@@ 98], mov_rdi_rbp, call_0xfffffffffffffa@@ 95, call_0xffffffffffffe@@ 370, call_0xffffffffffffe@@ 13b, mov_rdi_qword_ptr_[rip+0x3@@ 32@@ 17], call_0xffffffffffffd@@ fc@@ f, mov_edi_eax, mov_rdx_rsp, xor_eax_eax, mov_esi_0x5@@ 4@@ 13, call_0xffffffffffffdd@@ ce, test_eax_eax, jne_0x4a, movzx_esi_word_ptr_[r@@ sp+@@ 2], movzx_edi_word_ptr_[r@@ sp], call_0xffffffffffffd@@ ea@@ c, mov_rdi_qword_ptr_[rip+0x3@@ 34@@ 08], call_0xffffffffffffde@@ 50, mov_rdi_rbp, call_0xfffffffffffffb@@ 38, call_0xffffffffffffe0@@ a3, cmp_eax_-1, je_0x39, mov_dword_ptr_[rbx]@@ _r12d, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x21, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, ret, lea_rdi_[rip+0x1c@@ 27@@ 7], call_0xffffffffffffdc@@ 76, mov_rdi_rax, xor_eax_eax, call_0x@@ dc@@ 5c, call_0xffffffffffffdc@@ 37, lea_rdi_[rip+0x1c@@ 5@@ 1b], call_0xffffffffffffdc@@ 5b, mov_rdi_rax, xor_eax_eax, call_0x@@ dc@@ 4@@ 1
endbr64, mov_rax_qword_ptr_[rdi], cmp_dword_ptr_[rdi+0x@@ d@@ 0]_esi, sete_dl, mov_rax_qword_ptr_[rax+8], movzx_edx_dl, jmp_rax
endbr64, push_rbp, lea_rax_[rip+0x3@@ 11@@ 74], mov_rbp_rsi, push_rbx, xor_esi_esi, mov_rbx_rdi, sub_rsp_8, mov_qword_ptr_[rdi]_rax, lea_rdi_[r@@ di+0xe0], call_0x16@@ 9f@@ d, xor_eax_eax, mov_rdx_rbx, lea_rsi_[rip+0x1c@@ 20@@ 6], mov_edi_1, call_0xb@@ 8@@ 37, cmp_dword_ptr_[rip+0x@@ 33@@ 34@@ 8]@@ _0x@@ b4, mov_eax_0x@@ b4, cmovge@@ _eax@@ _dword_ptr_[rip+0x@@ 33@@ 33@@ c], mov_qword_ptr_[rbx+0x1@@ 7@@ 8]_rbp, mov_dword_ptr_[rbx+0x7@@ 8]_eax, movabs_rax_0x1@@ 00000000, mov_qword_ptr_[rbx+0x@@ c0]_rax, dec_rax, mov_qword_ptr_[rbx+0x@@ 70]_1, mov_qword_ptr_[rbx+@@ 8]_-1, mov_qword_ptr_[rbx+0x10]_0, mov_qword_ptr_[rbx+0x18]_0, mov_qword_ptr_[rbx+0x20]_0, mov_qword_ptr_[rbx+0x28]_0, mov_qword_ptr_[rbx+0x@@ 30]_0, mov_dword_ptr_[rbx+0x@@ 38]_0, mov_qword_ptr_[rbx+0x@@ 80]_0, mov_qword_ptr_[rbx+0x@@ 88]_0, mov_qword_ptr_[rbx+0x@@ 90]_0, mov_qword_ptr_[rbx+0x@@ 98]_0, mov_qword_ptr_[rbx+0x@@ a0]_0, mov_qword_ptr_[rbx+0x@@ a8]_0, mov_qword_ptr_[rbx+0x@@ b0]_0, mov_qword_ptr_[rbx+0x@@ b8]_0, mov_qword_ptr_[rbx+0x@@ c8]_0, mov_qword_ptr_[rbx+0x@@ d0]_rax, mov_dword_ptr_[rbx+0x@@ d8]_0, mov_byte_ptr_[rbx+0x@@ f8]_0, add_rsp_8, pop_rbx, pop_rbp, ret
endbr64, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, lea_rdi_[rip+0x1c@@ 0@@ fe], push_rbx, call_0xffffffffffffda@@ ca, mov_rdi_rax, mov_r12_rax, call_0xffffffffffffda@@ 7f, mov_rdx_rax, mov_rsi_r12, lea_rdi_[rbp+0x@@ e0], call_0x1@@ 6b@@ 7d, movsxd_r14@@ _dword_ptr_[r@@ bp+8], mov_rdi_qword_ptr_[rbp+0x@@ 178], mov_rax_r14, imul@@ _r14@@ _r14@@ _0x5@@ 5555@@ 556, sar_eax_0x1f, lea_r12_[rip+0x@@ 1c@@ 0@@ c8], shr@@ _r14@@ _0x20, sub_r14@@ d_eax, lea_rax_[rip+0x@@ 2e@@ 96@@ b], mov_qword_ptr_[rdi@@ +8]_rax, call_0xb@@ 77, mov_r13_rax, test_rax_rax, je_0xc0, lea_rbx_[rax@@ +8], jmp_0x19, mov_edx_0xffffffff, mov_rsi_r12, call_0xffffffffffffd@@ 928, mov_rdi_qword_ptr_[rbx], add_rbx_8, call_0xffffffffffffda@@ 3c, mov_rdi_qword_ptr_[rbp+0x@@ 88], mov_rsi_rax, mov_edx_0xffffffff, call_0xffffffffffffd@@ 908, cmp_qword_ptr_[rbx]_0, mov_rdi_qword_ptr_[rbp+0x@@ 88], jne_0xffffffffffffffc8, test_rdi_rdi, je_0x73, movsx_esi@@ _word_ptr_[r@@ di], movsx_eax_word_ptr_[r@@ di+2], cmp_eax_r14d, setg@@ e_al, movzx_eax_al, add_esi@@ _eax, mov_edx_r14d, call_0xffffffffffffd@@ 76@@ c, cmp_eax_-1, je_0x17, mov_rdi_qword_ptr_[rbp+0x@@ 88], mov_rsi_qword_ptr_[r13], mov_edx_0xffffffff, call_0xffffffffffffd@@ 8c@@ 2, mov_rdi_qword_ptr_[rbp+0x@@ 88], mov_esi_0xa, call_0xffffffffffffe@@ 001, mov_rdi_r13, call_0xffffffffffffe3@@ 99, mov_rdi_qword_ptr_[rbp+0x@@ 178], call_0xa@@ bd, mov_r13_rax, test_rax_rax, jne_0xffffffffffffff@@ 52, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_esi_0xffffffff, mov_eax_0xffffffff, jmp_0xffffffffffffff8@@ c
endbr64, push_r12, xor_eax_eax, mov_r12_rdi, push_rbp, lea_rcx_[r@@ di+0x@@ f8], mov_rdx_rdi, push_rbx, lea_rsi_[rip+0x1c@@ 25@@ a], mov_edi_1, call_0xb@@ 5b@@ d, mov_eax_dword_ptr_[r12+0x@@ d0], mov_esi_dword_ptr_[r@@ 12+0x@@ c8], lea_ebp@@ _[rax+1], mov_eax_dword_ptr_[r12+0x@@ b8], cmp_ebp@@ _esi, cmovl@@ _ebp@@ _esi, mov_ebx_1, cmp_eax_1, jg@@ _0x18, jmp_0x7@@ 6, mov_eax_dword_ptr_[r12+0x@@ b8], inc_ebx, inc_ebp, cmp_eax_ebx, jle_0x@@ 62, mov_edx_ebp, sub_edx_eax, cmp_ebp_eax, cmovge@@ _ebp@@ _edx, mov_rax_qword_ptr_[r12], mov_esi_ebp, mov_rdi_r12, call_qword_ptr_[rax+0x@@ 50], test_al_al, je_0xffffffffffffffd9, mov_eax_dword_ptr_[r12+0x@@ b8], lea_edx_[r@@ bp-1], sub_eax_dword_ptr_[r@@ 12+0x18], mov_dword_ptr_[r12+0x@@ c@@ 8]_edx, cmp_edx_eax, jle_0xc, mov_dword_ptr_[r12+0x@@ c@@ 8]_eax, mov_edx_eax, test_edx_edx, jns@@ _0xe, mov_dword_ptr_[r12+0x@@ c8]_0, pop_rbx, mov_esi_ebp, pop_rbp, mov_rdi_r12, pop_r12, jmp_0xffffffffffffeb@@ 80, pop_rbx, pop_rbp, pop_r12, jmp_0xffffffffffffda@@ f@@ 4
endbr64, push_r12, push_rbx, mov_rbx_rdi, sub_rsp_0x10, mov_r10d_dword_ptr_[r@@ di+0x@@ cc], mov_eax_dword_ptr_[rdi+0x@@ 78], mov_ecx_dword_ptr_[r@@ di+8], sub_eax@@ _r10d, cmp_ecx_eax, mov_r9d_dword_ptr_[r@@ di+0x20], lea_esi_[r@@ cx-1], mov_ecx_dword_ptr_[r@@ di+0x30], lea_edx_[rax-1], mov_eax_esi, cmovge@@ _eax_edx, add_r9d@@ _ecx, lea_edx_[r@@ cx+0x@@ 77], dec@@ _r9d, mov_esi_dword_ptr_[r@@ di+0x@@ d4], cmp_r9d@@ _edx, mov_rdi_qword_ptr_[rdi+0x@@ 88], push_rax, cmovg@@ _r9d@@ _edx, mov_edx_r10d, xor_r8d_r8d, call_0xffffffffffffdd@@ 6a, mov_esi_dword_ptr_[rbx+0x@@ 24], pop_rdx, pop_rcx, test_esi_esi, jne_0xe, add_rsp_8, pop_rbx, pop_r12, ret, mov_rdi_qword_ptr_[rbx+0x@@ a8], call_0xfffffffffffff2@@ 19, mov_rdi_qword_ptr_[rbx+0x@@ a8], xor_edx_edx, xor_esi_esi, call_0xffffffffffffd5@@ 99, cmp_eax_-1, jne_0x29, mov_edx_dword_ptr_[rbx+0x@@ d8], mov_eax_dword_ptr_[rbx+0x20], cmp_edx_eax, jg_0x4@@ 9, mov_rdi_qword_ptr_[rbx+0x@@ a8], add_rsp_8, pop_rbx, pop_r12, jmp_0xffffffffffffdb@@ 34, lea_rdi_[rbx+0x@@ e0], call_0x16@@ 92@@ 1, mov_rdi_qword_ptr_[rbx+0x@@ a8], mov_edx_0xffffffff, mov_rsi_rax, call_0xffffffffffffd@@ 6b@@ d, mov_edx_dword_ptr_[rbx+0x@@ d8], mov_eax_dword_ptr_[rbx+0x20], cmp_edx_eax, jle_0xffffffffffffff@@ bb, add_eax@@ _dword_ptr_[rbx+0x@@ d4], pxor_xmm0_xmm0, cvtsi2sd_xmm0_eax, pxor_xmm1_xmm1, cvtsi2sd_xmm1@@ _edx, lea_rdi_[rip+0x1b@@ d@@ f0], mulsd_xmm0_qword_ptr_[rip+0x@@ 1c@@ 14@@ e], divsd_xmm0_xmm1, cvttsd2si@@ _r12d@@ _xmm0, call_0xffffffffffffd7@@ 9d, mov_rdi_qword_ptr_[rbx+0x@@ a8], mov_rsi_rax, mov_edx_r12d, xor_eax_eax, call_0xffffffffffffde@@ 69, mov_eax_dword_ptr_[rbx+0x@@ d4], mov_edx_dword_ptr_[r@@ bx+0x20], add_edx_eax, cmp_edx@@ _dword_ptr_[rbx+0x@@ d8], jl@@ _0x63, test_eax_eax, jne_0x1f, mov_rdi_qword_ptr_[rbx+0x@@ a8], mov_esi_0x2e, call_0xffffffffffffdd@@ 91, jmp_0xffffffffffffff4a, mov_rdi_qword_ptr_[rbx+0x1@@ 78], lea_rsi_[rip+0x1b@@ da@@ c], call_0x7@@ 32, lea_rdi_[rip+0x1b@@ da@@ c], mov_r12_rax, call_0xffffffffffffd7@@ 33, mov_rdi_qword_ptr_[rbx+0x@@ a8], mov_rsi_rax, mov_rdx_r12, xor_eax_eax, call_0xffffffffffffdd@@ ff, jmp_0xffffffffffffffad, mov_rdi_qword_ptr_[rbx+0x1@@ 78], lea_rsi_[rip+0x1b@@ d5@@ 6], call_0x6f@@ 2, lea_rdi_[rip+0x1b@@ d@@ 54], mov_r12_rax, call_0xffffffffffffd@@ 6f@@ 3, mov_rdi_qword_ptr_[rbx+0x@@ a8], mov_rsi_rax, mov_rdx_r12, xor_eax_eax, call_0xffffffffffffdd@@ bf, mov_eax_dword_ptr_[rbx+0x@@ d4], test_eax_eax, je_0xffffffffffffff@@ 65, mov_rdi_qword_ptr_[rbx+0x@@ a8], mov_edx_0xffffffff, lea_rsi_[rip+0x1b@@ c@@ f8], call_0xffffffffffffd5@@ 99, mov_eax_dword_ptr_[rbx+0x@@ d4], jmp_0xffffffffffffff3@@ d
endbr64, push_r15, mov_r8_rdx, mov_ecx_esi, push_r14, push_r13, mov_r13_rdi, push_r12, push_rbp, mov_ebp_esi, lea_rsi_[rip+0x1b@@ f@@ 9a], push_rbx, mov_rbx_rdx, mov_rdx_rdi, sub_rsp_0x28, mov_eax_dword_ptr_[rdi+8], mov_edi_1, mov_dword_ptr_[rsp+0x1c]_eax, sub_eax@@ _5, mov_dword_ptr_[rsp+0x18]_eax, xor_eax_eax, call_0xb@@ 2b@@ 2, test_ebp_ebp, setl@@ e@@ _byte_ptr_[r@@ sp+0x1@@ 7], xor_r14d_r14d, cmp_byte_ptr_[rbx]@@ _0x20, mov_r15_rbx, jne_0x26, cmp_byte_ptr_[rsp+0x1@@ 7]_0, je_0x11, jmp_0x1d, cmp_byte_ptr_[r@@ 15@@ ]_0x20, jne_0x10, inc_r15, mov_eax_ebp, sub_eax@@ _r15d, add_eax_ebx, test_eax_eax, jg_0xffffffffffffff@@ ee, mov_esi_0xa, mov_rdi_r15, call_0xffffffffffffd@@ 4e@@ c, mov_qword_ptr_[rsp+8]_rax, sub_rax@@ _r15, movsxd_rbx_eax, test_eax_eax, jne_0x15, jmp_0x@@ a8, dec@@ _rbx, test_ebx_ebx, je_0x9b, movsx_edi_byte_ptr_[r@@ 15+r@@ bx-1], mov_esi_4, mov_r12d_ebx, call_0x9c@@ a7, test_al_al, jne_0xffffffffffffffe0, movzx_eax_byte_ptr_[r15], mov_rdi_qword_ptr_[r13+0x@@ 88], cmp_al_0x2e, je_0xd9, cmp_al_0x20, je_0xd, cmp_dword_ptr_[rsp+0x1@@ 8@@ ]_9, jg_0x@@ db, test_r14b_r14b, jne_0x1@@ a9, mov_edx_r12d, mov_rsi_r15, call_0xffffffffffffd@@ 48@@ d, mov_rdi_qword_ptr_[r13+0x@@ 88], mov_esi_0xa, call_0xffffffffffffd@@ bc@@ c, xor_r14d_r14d, mov_rax_qword_ptr_[rsp+8], cmp_byte_ptr_[rax]_0, je_0x4f, mov_rdi_qword_ptr_[r13+0x@@ 88], test_rdi_rdi, je_0xc, cmp_word_ptr_[r@@ di]@@ _0x7@@ 7, je_0x1@@ f3, mov_rbx_qword_ptr_[rsp+8], inc_rbx, jmp_0xffffffffffffff1c, mov_rdi_qword_ptr_[r13+0x@@ 88], test_r14b_r14b, jne_0x46, mov_esi_0xa, call_0xffffffffffffdb@@ 7f, mov_rax_qword_ptr_[rsp+8], xor_r14d_r14d, cmp_byte_ptr_[rax]_0, jne_0xffffffffffffffb5, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, mov_rdx_r13, pop_r13, pop_r14, lea_rsi_[rip+0x1b@@ ea@@ 7], mov_edi_1, xor_eax_eax, pop_r15, jmp_0xb@@ 16@@ e, mov_esi_0xa, call_0xffffffffffffdb@@ 3b, mov_rdi_qword_ptr_[r13+0x@@ 88], jmp_0xffffffffffffffab, cmp_r12d_1, je_0xffffffffffffff@@ 9b, cmp_dword_ptr_[rsp+0x1@@ 8@@ ]_9, jle_0xffffffffffffff@@ 31, test_r14b_r14b, jne_0x13@@ 2, test_rdi_rdi, je_0x8b, movsx_esi@@ _word_ptr_[r@@ di+2], mov_r14d_dword_ptr_[r@@ sp+0x18], sub_r14d@@ _esi, cmp_r12d@@ _r14d, jg_0x@@ e1, mov_r14d@@ _r12d, movsxd_rbx@@ _r12d, mov_edx_r14d, mov_rsi_r15, call_0xffffffffffffd@@ 38@@ f, lea_rcx_[r@@ 15+r@@ bx], cmp_r12d@@ _r14d, jle_0x@@ d6, movsxd_rax_r14d, add_rax_r15, jmp_0x16, inc@@ _r14d, inc_rax, cmp_r12d@@ _r14d, je_0x97, cmp_byte_ptr_[rax]@@ _0x20, mov_r15_rax, je_0xffffffffffffffeb, sub_r12d@@ _r14d, test_r12d_r12d, jle_0x@@ 83, mov_rdi_qword_ptr_[r13+0x@@ 88], mov_esi_0xa, call_0xffffffffffffda@@ 91, mov_rdi_qword_ptr_[r13+0x@@ 88], test_rdi_rdi, jne_0xffffffffffffff@@ 82, mov_eax_dword_ptr_[rsp+0x1c], mov_esi_0xffffffff, lea_r14d@@ _[rax@@ -4], cmp_r12d@@ _r14d, jle_0xffffffffffffff@@ 85, movsxd_rbx@@ _r14d, lea_rax_[r@@ 15+r@@ bx], mov_edx_r14d, jmp_0xb, dec_rax, dec@@ _edx, je_0x66, cmp_byte_ptr_[rax]@@ _0x20, jne_0xfffffffffffffff6, movsxd_rbx@@ _edx, mov_r14_rbx, jmp_0xffffffffffffff69, mov_esi_0xa, call_0xffffffffffffda@@ 3b, mov_rdi_qword_ptr_[r13+0x@@ 88], jmp_0xfffffffffffffe@@ 4c, mov_r14d_1, jmp_0xfffffffffffffe@@ 56, test_r14d_r14d, jg_0xffffffffffffff@@ 9f, jne_0x6a, mov_rcx_r15, cmp_r12d@@ _r14d, jg_0xffffffffffffff@@ 36, mov_r15_rcx, jmp_0xffffffffffffff51, test_esi_esi, jle_0xffffffffffffff@@ 0e, mov_rcx_r15, xor_r14d_r14d, jmp_0xffffffffffffff11, test_rdi_rdi, je_0x12, movsx_eax_word_ptr_[r@@ di+2], inc_eax, cmp_eax_dword_ptr_[r@@ sp+0x18], jge_0xffffffffffffff@@ 3d, mov_esi_0x20, call_0xffffffffffffd@@ 9c8, mov_rdi_qword_ptr_[r13+0x@@ 88], jmp_0xfffffffffffffea@@ e, mov_edx_0xffffffff, lea_rsi_[rip+0x1b@@ c@@ bb], call_0xffffffffffffd@@ 25@@ b, jmp_0xfffffffffffffe@@ 39, mov_edx_r14d, jmp_0xffffffffffffff4@@ a
endbr64, lea_rax_[rip+0x@@ 30@@ 89@@ 5], push_rbp, mov_qword_ptr_[rdi]_rax, mov_rbp_rdi, lea_rdi_[r@@ di+0xe0], call_0x1@@ 65@@ 37, mov_rdi_rbp, mov_esi_0x1@@ 80, pop_rbp, jmp_0xffffffffffffd@@ cd@@ 9
endbr64, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_r12d_dword_ptr_[r@@ di+0x@@ c8], mov_ebp_dword_ptr_[r@@ di+0x18], mov_eax_dword_ptr_[rdi+0x@@ b8], lea_r13d_[r@@ 12+r@@ bp], cmp_r13d_eax, cmovg@@ _r13d_eax, cmp_r12d@@ _r13d, jge_0x@@ 2c, mov_esi_r12d, mov_rdi_rbx, inc_r12d, call_0xfffffffffffff68@@ f, cmp_r13d@@ _r12d, jne_0xffffffffffffffef, mov_eax_dword_ptr_[rbx+0x@@ b8], mov_r12d_dword_ptr_[r@@ bx+0x@@ c8], mov_ebp_dword_ptr_[r@@ bx+0x18], mov_ecx_dword_ptr_[rbx+0x@@ 38], add_eax_ecx, add_ebp@@ _ecx, sub_eax@@ _r12d, lea_r9d_[r@@ bp-1], cmp_eax_ebp, jg@@ e_8, lea_r9d@@ _[rax-1], mov_ebp_eax, mov_edx_dword_ptr_[rbx+0x@@ cc], mov_eax_dword_ptr_[rbx+0x@@ 78], mov_esi_dword_ptr_[r@@ bx+8], sub_eax_edx, cmp_esi_eax, lea_edi_[r@@ si-1], lea_r13d@@ _[rax-1], cmovl@@ _r13d@@ _edi, sub_rsp_8, push_r13, mov_rdi_qword_ptr_[rbx+0x@@ 80], xor_r8d_r8d, xor_esi_esi, call_0xffffffffffffd7@@ 80, mov_rdi_qword_ptr_[rbx+0x@@ 80], pop_rsi, pop_r8, mov_r12d_0xffffffff, test_rdi_rdi, je_0xa, movsx@@ _r12d@@ _word_ptr_[r@@ di+4], inc_r12d, mov_eax_dword_ptr_[rbx+0x38], add_eax_dword_ptr_[r@@ bx+0x18], dec_eax, cmp_eax_ebp, jle_0x@@ 3f, dec@@ _r12d, jmp_0xe, mov_rdi_qword_ptr_[rbx+0x@@ 80], sub_rsp_8, push_r13, mov_edx_dword_ptr_[rbx+0x@@ cc], mov_ecx_ebp, mov_r9d_ebp, xor_r8d_r8d, mov_esi_r12d, call_0xffffffffffffd7@@ 2a, mov_eax_dword_ptr_[rbx+0x18], pop_rdx, add_eax@@ _dword_ptr_[rbx+0x@@ 38], inc_ebp, dec_eax, pop_rcx, cmp_eax_ebp, jg_0xffffffffffffff@@ cf, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret
endbr64, cmp_esi_edx, jge_0x@@ 2a, push_r12, mov_r12_rdi, push_rbp, mov_ebp_edx, push_rbx, mov_ebx_esi, mov_esi_ebx, mov_rdi_r12, inc_ebx, call_0xfffffffffffff5@@ 91, cmp_ebp_ebx, jne_0xfffffffffffffff2, pop_rbx, pop_rbp, pop_r12, ret, ret
endbr64, sub_rsp_0x10, mov_ecx_dword_ptr_[r@@ di+8], mov_r10d_dword_ptr_[r@@ di+0x@@ cc], mov_eax_dword_ptr_[rdi+0x@@ 78], lea_esi_[r@@ cx-1], sub_eax@@ _r10d, cmp_ecx_eax, lea_edx_[rax-1], mov_eax_esi, cmovge@@ _eax_edx, mov_ecx_dword_ptr_[r@@ di+0x28], mov_rdi_qword_ptr_[rdi+0x@@ 90], push_rax, mov_r9d_ecx, xor_r8d_r8d, mov_edx_r10d, xor_esi_esi, call_0xffffffffffffd@@ 68@@ 5, add_rsp_0x18, ret
endbr64, xor_eax_eax, cmp_esi_-1, je_0xb7, push_r14, mov_r14_rdx, push_r13, push_r12, mov_r12_rdi, push_rbp, mov_ebp_esi, push_rbx, mov_rbx_qword_ptr_[rdi+0x10], mov_rdi_qword_ptr_[rbx], test_rdi_rdi, jne_0x14, jmp_0x7@@ b, mov_rdi_qword_ptr_[rbx+0x30], add_rbx@@ _0x30, test_rdi_rdi, je_0x75, mov_rsi_r14, call_0xffffffffffffd@@ 360, test_eax_eax, jne_0xffffffffffffffe9, lea_r13_[rip+0x@@ 2e@@ 000], lea_rdi_[rip+0x1b@@ 75@@ d], jmp_0x16, mov_rdi_qword_ptr_[r13+0x10], add_r13_0x10, test_rdi_rdi, je_0xe, mov_rsi_r14, call_0xffffffffffffd@@ 330, test_eax_eax, jne_0xffffffffffffffe9, mov_rax_qword_ptr_[r12], test_rax_rax, jne_0x10, jmp_0x4@@ 6, mov_rax_qword_ptr_[rax], test_rax_rax, je_0x3a, cmp_dword_ptr_[rax+@@ 8]_ebp, jne_0xfffffffffffffff5, mov_rdx_qword_ptr_[r@@ 13+8], mov_qword_ptr_[rax+0x1@@ 0]_rbx, mov_qword_ptr_[rax+0x18]_rdx, mov_eax_1, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, pop_rbx, pop_rbp, pop_r12, pop_r13, xor_eax_eax, pop_r14, ret, ret, mov_edi_0x20, call_0xffffffffffffda@@ 23, mov_rdx_qword_ptr_[r12], mov_dword_ptr_[rax+@@ 8]_ebp, mov_qword_ptr_[rax]_rdx, mov_qword_ptr_[r12]_rax, jmp_0xffffffffffffffb@@ 5
endbr64, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rdx, sub_rsp_8, mov_rdx_qword_ptr_[rdx+8], mov_qword_ptr_[rdi+0x1@@ 0]_rsi, mov_qword_ptr_[rdi]_0, test_rdx_rdx, je_0x1d, mov_esi_dword_ptr_[rbx], mov_rdi_rbp, add_rbx_0x10, call_0xfffffffffffffed@@ f, mov_rdx_qword_ptr_[rbx+8], test_rdx_rdx, jne_0xffffffffffffffeb, lea_rax_[rip+0x2d@@ f@@ 1a], mov_qword_ptr_[rbp+8]_rax, add_rsp_8, pop_rbx, pop_rbp, ret
endbr64, push_rbp, push_rbx, sub_rsp_8, mov_rbx_qword_ptr_[rdi], test_rbx_rbx, je_0xb0, mov_rbp_rsi, jmp_0x13, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, je_0x9a, mov_rax_qword_ptr_[rbx+0x10], mov_rdi_rbp, mov_rsi_qword_ptr_[rax], call_0xffffffffffffd@@ 2@@ 1a, test_eax_eax, jne_0xffffffffffffffe3, mov_eax_dword_ptr_[rip+0x2@@ e0@@ db], mov_ebx_dword_ptr_[r@@ bx+8], cmp_eax_-1, je_0x87, cmp_ebx_eax, je_0x7f, lea_rax_[rip+0x@@ 2e@@ 0@@ c4], jmp_8, cmp_ebx@@ _edx, je_0xe, mov_edx_dword_ptr_[rax+0x10], add_rax_0x10, cmp_edx_-1, jne_0xfffffffffffffff2, mov_rax_qword_ptr_[rax+8], test_rax_rax, je_9, add_rsp_8, pop_rbx, pop_rbp, ret, lea_rdi_[rip+0x1b@@ 93@@ 9], call_0xffffffffffffcf@@ 89, mov_rcx_rax, mov_r8d_ebx, mov_edx_0x3@@ 2, mov_esi_1, lea_rdi_[rip+0x3@@ 27@@ 1d], xor_eax_eax, call_0xffffffffffffd@@ 65@@ b, add_rsp_8, pop_rbx, lea_rax_[rip+0x@@ 32@@ 70@@ a], pop_rbp, ret, add_rsp_8, pop_rbx, lea_rdi_[rip+0x1b@@ 8@@ fe], pop_rbp, jmp_0xffffffffffff@@ cf@@ 43, lea_rax_[rip+0x@@ 2e@@ 0@@ 47], jmp_0xffffffffffffff9@@ 7
endbr64, mov_rax_qword_ptr_[rdi], test_rax_rax, jne_0xe, jmp_0x15, mov_rax_qword_ptr_[rax], test_rax_rax, je_0x12, cmp_dword_ptr_[rax+@@ 8]_esi, jne_0xfffffffffffffff5, mov_rax_qword_ptr_[rax+0x10], ret, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_r13_qword_ptr_[r@@ di+8], mov_rbp_qword_ptr_[r@@ 13], test_rbp_rbp, je_0x1@@ 32, mov_r14_qword_ptr_[r@@ di], mov_r15_rdi, add_r13_0x10, test_r14_r14, je_0x107, mov_rbx_r14, xor_r12d_r12d, mov_rax_qword_ptr_[rbx+0x10], mov_rsi_rbp, mov_rdi_qword_ptr_[rax], call_0xffffffffffffd0@@ f6, mov_rbx_qword_ptr_[rbx], test_eax_eax, jne_0xd4, inc_r12d, test_rbx_rbx, jne_0xffffffffffffffe0, lea_edi_[r@@ 12+2], movsxd_rdi_edi, shl_rdi_3, call_0xffffffffffffd8@@ 32, mov_r12_qword_ptr_[r@@ 15+8], mov_r13_rax, mov_rbx_qword_ptr_[r@@ 15], mov_rax_qword_ptr_[r12+8], mov_qword_ptr_[r13]_rax, test_rbx_rbx, je_0xf0, mov_ebp_1, jmp_0x14, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, je_0x6e, mov_rax_qword_ptr_[rbx+0x10], mov_rsi_qword_ptr_[r12], mov_rdi_qword_ptr_[rax], call_0xffffffffffffd0@@ 8d, movsxd_rcx@@ _ebp, shl_rcx_3, lea_rdi_[r@@ 13@@ +rcx], test_eax_eax, jne_0xffffffffffffffda, mov_eax_dword_ptr_[rip+0x2@@ df@@ 42], mov_esi_dword_ptr_[r@@ bx+8], inc_ebp, cmp_eax_-1, je_0x8e, cmp_esi_eax, je_0x86, lea_rax_[rip+0x2d@@ f2@@ 5], jmp_0xa, cmp_edx_-1, je_0xd, mov_edx_dword_ptr_[rax+0x10], add_rax_0x10, cmp_esi_edx, jne_0xfffffffffffffff2, mov_rax_qword_ptr_[rax+8], mov_qword_ptr_[rdi]_rax, lea_rdi_[r@@ 13@@ +rcx@@ +8], mov_rbx_qword_ptr_[rbx], test_rbx_rbx, jne_0xffffffffffffff@@ 96, add_r12_0x10, mov_qword_ptr_[rdi]_0, mov_qword_ptr_[r15+@@ 8]_r12, jmp_0x2f, test_rbx_rbx, jne_0xffffffffffffff@@ 15, test_r12d_r12d, jne_0xffffffffffffff@@ 2e, mov_qword_ptr_[r15+@@ 8]_r13, add_r13_0x10, mov_rbp_qword_ptr_[r@@ 13@@ -0x10], test_rbp_rbp, jne_0xfffffffffffffe@@ e7, xor_r13d_r13d, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_rax_r13, pop_r13, pop_r14, pop_r15, ret, lea_rax_[rip+0x2d@@ ea@@ 5], mov_rax_qword_ptr_[rax+8], mov_qword_ptr_[rdi]_rax, lea_rdi_[r@@ 13@@ +rcx@@ +8], jmp_0xffffffffffffff95, lea_rdi_[r@@ 13+8], jmp_0xffffffffffffff9@@ 7
endbr64, mov_eax_dword_ptr_[rip+0x2@@ de@@ 86], cmp_esi_eax, je_0x2c, cmp_eax_-1, je_0x27, lea_rax_[rip+0x2d@@ e7@@ 6], jmp_0xb, cmp_edx_-1, je_0xd, mov_edx_dword_ptr_[rax+0x10], add_rax_0x10, cmp_edx_esi, jne_0xfffffffffffffff2, mov_rax_qword_ptr_[rax+8], ret, lea_rax_[rip+0x2d@@ e5@@ 1], mov_rax_qword_ptr_[rax+8], ret
endbr64, push_rbp, push_rbx, lea_rbx_[rip+0x@@ 2d@@ e@@ 33], sub_rsp_8, mov_rdi_qword_ptr_[rip+0x2@@ de@@ 30], test_rdi_rdi, je_0x26, mov_rbp_rsi, jmp_0x15, mov_rdi_qword_ptr_[rbx+0x18], add_rbx_0x10, test_rdi_rdi, je_0xe, mov_rsi_rbp, call_0xffffffffffffc@@ aa@@ 8, test_eax_eax, jne_0xffffffffffffffe9, mov_eax_dword_ptr_[rbx], add_rsp_8, pop_rbx, pop_rbp, ret
endbr64, push_rbx, mov_rbx_qword_ptr_[rdi], test_rbx_rbx, je_0x1a, mov_rdi_rbx, mov_rbx_qword_ptr_[rbx], mov_esi_0x20, call_0xffffffffffffd@@ 68@@ 5, test_rbx_rbx, jne_0xffffffffffffffed, pop_rbx, ret
endbr64, mov_byte_ptr_[rip+0x@@ 3@@ 24@@ 95@@ ]_1, ret
endbr64, mov_eax_2, ret
endbr64, push_rax, pop_rax, lea_rdi_[rip+0x1e@@ bf@@ 3], sub_rsp_8, call_0xffffffffffffcc@@ 7f, mov_rsi_rax, lea_rcx_[rip+0x@@ 1e@@ 340], lea_rdx_[rip+0x1e@@ 3@@ 48], mov_edi_1, xor_eax_eax, call_0xffffffffffffd0@@ f2, lea_rdi_[rip+0x1e@@ b4@@ 6], call_0xffffffffffffcc@@ 56, mov_rdx_rax, lea_rsi_[rip+0x22@@ 7d@@ 5], mov_edi_1, xor_eax_eax, call_0xffffffffffffd0@@ d0, lea_rdi_[rip+0x1e@@ 3@@ 1b], call_0xffffffffffffcc@@ 34, mov_rdi_qword_ptr_[rip+0x@@ 32@@ 160], mov_rsi_rax, call_0xe0@@ 15, xor_edi_edi, call_0xffffffffffffd@@ 20@@ e
endbr64, push_rbp, lea_rdi_[rip+0x1e@@ 5a4], lea_rbp_[rip+0x@@ 1e@@ 3@@ 15], push_rbx, lea_rbx_[rip+0x@@ 30@@ 1e@@ d], sub_rsp_8, call_0xffffffffffffcb@@ f1, mov_rsi_rax, lea_rdx_[rip+0x1e@@ 2c@@ 1], mov_edi_1, xor_eax_eax, call_0xffffffffffffd0@@ 6b, lea_rdi_[rip+0x1e@@ 2d@@ c], call_0xffffffffffffc@@ bc@@ f, mov_rsi_rax, mov_edi_1, xor_eax_eax, call_0xffffffffffffd0@@ 50, lea_rcx_[rip+0x@@ 1e@@ 5@@ 2c], lea_rdx_[rip+0x1e@@ 2a@@ 6], jmp_9, mov_rcx_qword_ptr_[r@@ bx-0x10], mov_rsi_rbp, mov_edi_1, xor_eax_eax, add_rbx@@ _0x28, call_0xffffffffffffd0@@ 26, mov_rdx_qword_ptr_[r@@ bx-0x@@ 28], test_rdx_rdx, jne_0xffffffffffffffe2, mov_rsi_qword_ptr_[rip+0x@@ 3@@ 20@@ b9], mov_edi_0xa, call_0xffffffffffffc@@ d0@@ c, lea_rdi_[rip+0x1e@@ 540], call_0xffffffffffffcb@@ 70, mov_rsi_rax, lea_rdx_[rip+0x1e@@ 28@@ 6], mov_edi_1, xor_eax_eax, call_0xffffffffffffcf@@ ea, lea_rdi_[rip+0x1e@@ 65@@ 6], call_0xffffffffffffcb@@ 4e, mov_rsi_rax, mov_edi_1, xor_eax_eax, call_0xffffffffffffc@@ fc@@ f, lea_rdi_[rip+0x1e@@ 6b@@ 3], call_0xffffffffffffcb@@ 33, mov_rsi_rax, mov_edi_1, xor_eax_eax, call_0xffffffffffffc@@ fb@@ 4, lea_rdi_[rip+0x1e@@ 24@@ b], call_0xffffffffffffcb@@ 18, mov_rsi_rax, mov_edi_1, xor_eax_eax, call_0xffffffffffffcf@@ 99, lea_rbx_[rip+0x@@ 2@@ f0@@ dd], lea_rdx_[rip+0x1b@@ 4f@@ 8], lea_rbp_[rip+0x@@ 22@@ 3@@ 18], mov_rsi_rbp, mov_edi_1, xor_eax_eax, add_rbx_0x10, call_0xffffffffffffcf@@ 6a, mov_rdx_qword_ptr_[r@@ bx-0x10], test_rdx_rdx, jne_0xffffffffffffffe6, mov_rsi_qword_ptr_[rip+0x@@ 3@@ 1ff@@ d], mov_edi_0xa, call_0xffffffffffffcc@@ 50, lea_rdi_[rip+0x1e@@ 1f@@ 9], call_0xffffffffffffca@@ b4, mov_rsi_rax, mov_edi_1, xor_eax_eax, call_0xffffffffffffcf@@ 35, lea_rbx_[rip+0x@@ 2f@@ 1f@@ 9], lea_rdx_[rip+0x1e@@ 19@@ 2], lea_rbp_[rip+0x@@ 22@@ 2b@@ 4], mov_rsi_rbp, mov_edi_1, xor_eax_eax, add_rbx_0x10, call_0xffffffffffffc@@ f0@@ a, mov_rdx_qword_ptr_[r@@ bx-0x10], test_rdx_rdx, jne_0xffffffffffffffe6, mov_rsi_qword_ptr_[rip+0x@@ 3@@ 1f@@ 9d], mov_edi_0xa, call_0xffffffffffffcb@@ f0, lea_rdi_[rip+0x1e@@ 1a@@ 5], call_0xffffffffffffca@@ 54, mov_rsi_rax, mov_edi_1, xor_eax_eax, call_0xffffffffffffc@@ ed@@ 5, lea_rbx_[rip+0x@@ 2@@ f0@@ f9], lea_rdx_[rip+0x1e@@ 138], lea_rbp_[rip+0x@@ 22@@ 25@@ 4], mov_rsi_rbp, mov_edi_1, xor_eax_eax, add_rbx_0x10, call_0xffffffffffffc@@ ea@@ a, mov_rdx_qword_ptr_[r@@ bx-0x10], test_rdx_rdx, jne_0xffffffffffffffe6, mov_rsi_qword_ptr_[rip+0x@@ 3@@ 1f@@ 3d], mov_edi_0xa, call_0xffffffffffffcb@@ 90, lea_rdi_[rip+0x@@ 1e0@@ db], call_0xffffffffffffc@@ 9f@@ 4, mov_rdi_qword_ptr_[rip+0x3@@ 1f@@ 20], mov_rsi_rax, call_0xdd@@ d5, xor_edi_edi, call_0xffffffffffffc@@ fc@@ e
push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdx, push_rbx, sub_rsp_8, test_rsi_rsi, je_0x37, mov_rbx_rdi, mov_rsi_qword_ptr_[rbx], mov_r13_rbx, test_rsi_rsi, je_0x21, mov_rdi_r12, call_0xffffffffffffc@@ 75@@ 2, add_rbx_0x10, test_eax_eax, jne_0xffffffffffffffe7, mov_eax_dword_ptr_[r13+8], add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, lea_rdi_[rip+0x@@ 1e0@@ db], call_0xffffffffffffc@@ 97@@ f, mov_rdi_rax, mov_rdx_r12, mov_rsi_rbp, xor_eax_eax, call_0xc@@ 88@@ f
endbr64, push_r14, mov_rdi_rsi, push_r13, push_r12, push_rbp, push_rbx, call_0xda@@ 61, mov_r12_rax, lea_rdi_[rip+0x@@ 1e0@@ ae], call_0xffffffffffffc@@ 94@@ 2, lea_rsi_[rip+0x2@@ 19@@ e1], mov_rdi_r12, mov_r13_rax, call_0xffffffffffffc@@ eb@@ 0, mov_rsi_rax, mov_rdx_r13, lea_rdi_[rip+0x2e@@ ee@@ e], call_0xffffffffffffff@@ 4e, lea_rsi_[rip+0x2@@ 19@@ bd], xor_edi_edi, movsxd_rbx_eax, call_0xffffffffffffce@@ 8d, lea_rsi_[rip+0x2@@ 19@@ ac], xor_edi_edi, mov_rbp_rax, call_0xffffffffffffce@@ 7c, mov_r13_rax, test_rbp_rbp, je_0xc, cmp_byte_ptr_[rbp]_0, jne_0x@@ b3, test_r13_r13, je_0x1@@ 7c, cmp_byte_ptr_[r13]_0, je_0x1@@ 71, test_rbp_rbp, je_0xc, cmp_byte_ptr_[rbp]_0, jne_0x90, lea_rsi_[rip+0x1b@@ 84@@ 4], mov_rdi_r13, call_0xffffffffffffce@@ 38, mov_rbp_rax, test_rax_rax, je_0x5f, lea_r13_[r@@ bx+r@@ bx*2], shl_r13@@ _2, jmp_0x4@@ f, lea_rdi_[rip+0x@@ 1e0@@ 32], call_0xffffffffffffc8@@ 99, mov_rdx_rax, mov_rsi_rbp, lea_rdi_[rip+0x2e@@ f@@ 37], call_0xfffffffffffffeb@@ 7, lea_rdx_[rip+0x3@@ 1b@@ ab], test_eax_eax, je_7, or_eax@@ _dword_ptr_[r@@ dx+r@@ 13+8], lea_rcx_[r@@ bx+r@@ bx*2], mov_dword_ptr_[rdx@@ +rcx@@ *4@@ +@@ 8]_eax, lea_rsi_[rip+0x1b@@ 7e@@ c], xor_edi_edi, call_0xffffffffffffcd@@ e1, mov_rbp_rax, test_rax_rax, je_8, cmp_byte_ptr_[rbp]_0, jne_0xffffffffffffffb0, pop_rbx, pop_rbp, mov_rdi_r12, pop_r12, pop_r13, pop_r14, jmp_0xffffffffffffc@@ 55@@ 3, mov_rdi_rbp, lea_rsi_[rip+0x1@@ bb@@ a3], call_0xffffffffffffc@@ da@@ e, mov_rbp_rax, test_rax_rax, je_0x42, cmp_byte_ptr_[rax]_0, je_0x3d, movsxd_rax_ebx, lea_rdx_[rip+0x3@@ 1b@@ 42], lea_rax_[rax+rax*2], lea_r14@@ _[rdx@@ +rax*4], mov_dword_ptr_[r14+@@ 8]_0, lea_rdi_[rip+0x1d@@ f@@ 8d], call_0xffffffffffffc@@ 7f@@ b, mov_rdx_rax, mov_rsi_rbp, lea_rdi_[rip+0x2e@@ f@@ 39], call_0xfffffffffffffe@@ 19, mov_dword_ptr_[r14]_eax, lea_rsi_[rip+0x1@@ bb@@ 4f], xor_edi_edi, call_0xffffffffffffcd@@ 58, mov_rbp_rax, test_rax_rax, je_0x43, cmp_byte_ptr_[rax]_0, je_0x3e, movsxd_rax_ebx, lea_rdx_[rip+0x3@@ 1a@@ ec], lea_rax_[rax+rax*2], lea_r14@@ _[rdx@@ +rax*4], mov_dword_ptr_[r14+@@ 8]_0, lea_rdi_[rip+0x1d@@ f@@ 37], call_0xffffffffffffc@@ 7a@@ 5, mov_rdx_rax, mov_rsi_rbp, lea_rdi_[rip+0x2e@@ ee@@ 3], call_0xfffffffffffffd@@ c3, mov_dword_ptr_[r14+@@ 4]_eax, test_r13_r13, je_0xffffffffffffff@@ 39, cmp_byte_ptr_[r13]_0, jne_0xfffffffffffffe@@ ba, pop_rbx, pop_rbp, mov_rdi_r12, pop_r12, pop_r13, pop_r14, jmp_0xffffffffffffc@@ 47@@ b, lea_rdi_[rip+0x1d@@ ed@@ 7], call_0xffffffffffffc@@ 75@@ f, mov_rdi_rax, xor_eax_eax, call_0xc@@ 67@@ 5
endbr64, push_rbp, mov_rbp_rsi, mov_rdi_rbp, lea_rsi_[rip+0x1b@@ 75@@ f], call_0xffffffffffffc@@ ca@@ e, test_rax_rax, je_0x18, mov_rdi_rax, mov_rsi_rbp, call_0xa@@ 2f@@ e, mov_edi@@ _0x21, pop_rbp, jmp_0xa@@ 33@@ 3, lea_rdi_[rip+0x1e@@ 2e@@ f], call_0xffffffffffffc7@@ 17, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xc@@ 6f@@ a
push_r14, push_r13, push_r12, push_rbp, mov_ebp_esi, xor_esi_esi, push_rbx, mov_ebx_edi, sub_rsp_0x20, mov_r12_rsp, mov_rdi_r12, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0x1@@ 54@@ d8, movsxd_rax_ebx, lea_rdx_[rax+rax*4], lea_rax_[rip+0x2@@ fc@@ 95], lea_r14@@ _[rax@@ +rdx*8], mov_rdi_qword_ptr_[r@@ 14+0x18], call_0xffffffffffffc@@ 6b@@ d, mov_rdi_qword_ptr_[r14+0x10], mov_r13_rax, call_0xffffffffffffc@@ 6b@@ 1, mov_r8_rax, test_ebp_ebp, je_0xb7, mov_r9_r13, mov_rdi_r12, mov_ecx_ebx, mov_edx_0x2@@ a, lea_rsi_[rip+0x1d@@ e@@ 37], xor_eax_eax, call_0x7a@@ b, mov_rdi_qword_ptr_[rip+0x3@@ 1d@@ cf], mov_r13d_0xffffffff, mov_ebp@@ _0x40000, test_rdi_rdi, je_0xf, movsx@@ _r13d@@ _word_ptr_[r@@ di+@@ 6], mov_ebp@@ _0x40000, inc_r13d, mov_esi_ebp, call_0xffffffffffffcd@@ 30, mov_rdi_qword_ptr_[rip+0x3@@ 1d@@ a4], xor_edx_edx, lea_esi_[r@@ bx+2], call_0xffffffffffffc@@ 3b@@ f, cmp_eax_-1, je_0x1d, mov_rdi_r12, call_0x1@@ 57@@ 72, mov_rdi_qword_ptr_[rip+0x3@@ 1d@@ 86], mov_rsi_rax, lea_edx_[r@@ 13-1], call_0xffffffffffffc@@ 50f, mov_rdi_qword_ptr_[rip+0x3@@ 1d@@ 73], xor_esi_esi, call_0xffffffffffffcc@@ f1, mov_rdi_r12, call_0x1@@ 58@@ 29, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x54, add_rsp_0x20, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_r9_r13, mov_rdi_r12, mov_ecx_ebx, mov_edx_0x20, lea_rsi_[rip+0x1@@ dd@@ 86], xor_eax_eax, call_0x6f@@ a, mov_rdi_qword_ptr_[rip+0x3@@ 1d@@ 1e], mov_r13d_0xffffffff, test_rdi_rdi, je_0xffffffffffffff@@ 63, movsx@@ _r13d@@ _word_ptr_[r@@ di+@@ 6], inc_r13d, jmp_0xffffffffffffff55, call_0xffffffffffffc@@ 58@@ 2
endbr64, cmp_byte_ptr_[rip+0x@@ 3@@ 1d@@ 86@@ ]_0, je_0xd, mov_byte_ptr_[rip+0x@@ 3@@ 1d@@ 7d@@ ]_1, ret, push_r12, push_rbp, push_rbx, call_0xffffffffffffc@@ 9d@@ 4, lea_rdi_[rip+0x@@ 1dd@@ 3d], call_0xffffffffffffc@@ aa@@ 8, lea_rdi_[rip+0x@@ 1dd@@ 35], mov_rbx_rax, call_0xffffffffffffca@@ 99, mov_rbp_rax, test_rbx_rbx, je_0x13, test_rax_rax, je_0xe, pop_rbx, pop_rbp, mov_byte_ptr_[rip+0x@@ 3@@ 1d@@ 3f@@ ]_1, pop_r12, ret, call_0xffffffffffffc@@ bc@@ b, test_rbx_rbx, je_0x5f, mov_rbp_qword_ptr_[rip+0x@@ 3@@ 1c@@ ca], lea_rdi_[rip+0x1e@@ 13@@ 3], call_0xffffffffffffc5@@ 33, mov_rdi_rax, mov_rsi_rbp, call_0xffffffffffffc@@ 5c8, lea_rdi_[rip+0x1e@@ 18@@ c], call_0xffffffffffffc5@@ 1c, mov_rdi_qword_ptr_[rip+0x3@@ 1c@@ a0], mov_rdx_rax, lea_rcx_[rip+0x@@ 1d@@ c@@ 34], mov_esi_1, xor_eax_eax, call_0xffffffffffffc@@ b0@@ f, lea_rdi_[rip+0x1e@@ 1d@@ 3], call_0xffffffffffffc@@ 4f@@ 3, mov_rdi_rax, xor_eax_eax, call_0xc@@ 40@@ 9, mov_r12_qword_ptr_[rip+0x@@ 3@@ 1c@@ 6d], lea_rdi_[rip+0x1e@@ 10@@ e], call_0xffffffffffffc@@ 4d@@ 6, mov_rdi_rax, mov_rsi_r12, call_0xffffffffffffc@@ 56@@ b, test_rbp_rbp, jne_0xffffffffffffffa0, jmp_0xffffffffffffff8@@ 0
endbr64, push_rbp, mov_edi@@ _0x10@@ 2, call_0x96@@ e6, call_0xffffffffffffff@@ 01, mov_edi_0x2@@ e8, call_0xffffffffffffce@@ 27, mov_rbp_rax, lea_rsi_[rip+0x3@@ 1c@@ 88], mov_rdi_rax, call_0x6@@ 60@@ 5, mov_rdi_rbp, call_0x40@@ 8d, mov_rdi_rbp, call_0x6a@@ b5, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x@@ 60], call_0x9b@@ d6, xor_eax_eax, pop_rbp, ret
push_r12, push_rbp, push_rbx, mov_ebx_0xffffffff, sub_rsp_0x20, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xfffffffffffffe@@ 93, call_0xffffffffffffc@@ 76@@ e, call_0xffffffffffffc@@ 18@@ 9, call_0xffffffffffffc@@ 9f@@ 4, mov_rdi_qword_ptr_[rip+0x3@@ 1b@@ 68], mov_esi_1, call_0xffffffffffffc@@ 58@@ 3, mov_rax_qword_ptr_[rip+0x3@@ 1b@@ 57], test_rax_rax, je_8, movsx_ebx@@ _word_ptr_[r@@ ax+@@ 6], inc_ebx, mov_rbp_rsp, xor_esi_esi, mov_rdi_rbp, call_0x15@@ 1f@@ 4, lea_rdi_[rip+0x1e@@ 3@@ 58], call_0xffffffffffffc@@ 3e8, mov_rsi_rax, lea_rdx_[rip+0x1d@@ a@@ b8], lea_rcx_[rip+0x@@ 1d@@ aa@@ 2], mov_rdi_rbp, xor_eax_eax, call_0x4@@ ed, call_0xffffffffffffc@@ 3f8, mov_rdi_qword_ptr_[rip+0x3@@ 1b@@ 0c], mov_esi_0x2@@ 00000, call_0xffffffffffffca@@ 87, mov_rdi_qword_ptr_[rip+0x3@@ 1a@@ fb], xor_edx_edx, xor_esi_esi, call_0xffffffffffffc@@ 11@@ 7, cmp_eax_-1, je_0x1c, mov_rdi_rbp, call_0x15@@ 4c@@ a, mov_rdi_qword_ptr_[rip+0x3@@ 1a@@ de], mov_rsi_rax, lea_edx_[r@@ bx-1], call_0xffffffffffffc@@ 268, mov_rdi_qword_ptr_[rip+0x3@@ 1a@@ cc], xor_esi_esi, call_0xffffffffffffca@@ 4a, xor_r12d_r12d, lea_rbx_[rip+0x@@ 2f@@ 93@@ b], xor_esi_esi, mov_edi_r12d, add_rbx@@ _0x28, call_0xfffffffffffffc@@ 5f, inc_r12d, cmp_qword_ptr_[rbx+0x10]_0, je_9, cmp_qword_ptr_[rbx+0x1@@ 8]_0, jne_0xffffffffffffffe3, mov_rdi_qword_ptr_[rip+0x3@@ 1a@@ 92], mov_esi_0x2@@ 00000, call_0xffffffffffffc@@ a0@@ d, lea_rdi_[rip+0x@@ 1e0@@ 41], call_0xffffffffffffc@@ 33@@ 1, mov_rdi_qword_ptr_[rip+0x3@@ 1a@@ 75], mov_edx_0xffffffff, mov_rsi_rax, call_0xffffffffffffc@@ 1f@@ d, mov_rdi_qword_ptr_[rip+0x3@@ 1a@@ 61], xor_esi_esi, call_0xffffffffffffc@@ 9d@@ f, lea_rdi_[rip+0x@@ 1e0@@ 9b], call_0xffffffffffffc@@ 30@@ 3, mov_rdi_qword_ptr_[rip+0x3@@ 1a@@ 47], mov_rsi_rax, mov_edx_0xffffffff, call_0xffffffffffffc@@ 1c@@ f, lea_rdi_[rip+0x1e@@ 1d@@ 3], call_0xffffffffffffc@@ 2e@@ 3, mov_rdi_qword_ptr_[rip+0x3@@ 1a@@ 27], mov_rsi_rax, mov_edx_0xffffffff, call_0xffffffffffffc@@ 1a@@ f, call_0x9@@ 22@@ a, call_0x9@@ 30@@ 5, test_al_al, je_0x2e, call_0x9@@ 23@@ c, mov_rdi_rbp, call_0x15@@ 4c@@ 4, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x33, add_rsp_0x20, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, lea_rdi_[rip+0x@@ 1e0@@ 71], call_0xffffffffffffc@@ 28@@ 9, mov_rdi_qword_ptr_[rip+0x3@@ 19@@ cd], mov_rsi_rax, mov_edx_0xffffffff, call_0xffffffffffffc@@ 15@@ 5, jmp_0xffffffffffffffb4, call_0xffffffffffffc@@ 23@@ e
endbr64, push_r15, push_r14, push_r13, push_r12, xor_r12d_r12d, push_rbp, push_rbx, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xfffffffffffffd@@ eb, mov_esi_1, xor_edi_edi, mov_ebp_eax, call_0xfffffffffffffb@@ 2d, lea_rax_[rsp+0x1@@ 6], mov_qword_ptr_[rsp+8]_rax, lea_r13d_[r@@ bp-1], call_0xffffffffffffc7@@ 00, jmp_0x17, call_0xffffffffffffb@@ ff0, mov_eax_dword_ptr_[rax], cmp_eax_4, jne_0x56, mov_rdi_qword_ptr_[rip+0x3@@ 19@@ 3d], call_0xffffffffffffc@@ 2b@@ d, mov_ebx_eax, cmp_eax_-1, je_0xffffffffffffffe3, cmp_eax@@ _0xe, je_0x17, cmp_eax_0x10@@ 2, je_0x10, cmp_ebx@@ _0x20, je_0xb, cmp_ebx@@ _0x6@@ a, jne_0x2@@ 43, xor_esi_esi, mov_edi_r12d, call_0xfffffffffffffa@@ c2, lea_eax_[r@@ 12+1], cdq, idiv@@ _ebp, mov_esi_1, mov_edi_edx, mov_r12d_edx, call_0xfffffffffffffaa@@ b, jmp_0xffffffffffffff96, test_eax_eax, jne_0x1@@ fe, mov_rdi_qword_ptr_[rip+0x3@@ 18@@ e1], mov_esi_1, call_0xffffffffffffc@@ 1d@@ c, call_0xffffffffffffc@@ 1b@@ 7, call_0xfffffffffffffd@@ 32, mov_esi_1, mov_edi_r12d, call_0xfffffffffffffa@@ 75, mov_r15d@@ _0xffffffff, cmp_ebx@@ _0xa, sete_cl, cmp_ebx@@ _0xd, sete_al, or@@ _cl_al, jne_0x41, cmp_ebx@@ _0x1@@ 57, je_0x39, cmp_ebx@@ _0xc, je_0xaf, lea_eax_[r@@ 15@@ -0x30], cmp_eax_9, jbe_0x@@ dc, call_0xffffffffffffc@@ 7f@@ c, mov_rax_qword_ptr_[rax], movsxd_r14@@ _ebx, test_byte_ptr_[rax+r@@ 14*@@ 2+1@@ ]_4, jne_0x10@@ 8, call_0xffffffffffffc@@ 35@@ 5, jmp_0xffffffffffffff10, call_0xffffffffffffc@@ 14@@ b, call_0xffffffffffffc@@ 606, movsxd_rax_r12d, lea_rax_[rax+rax*4], lea_rcx_[rip+0x@@ 2f@@ 6d@@ 3], call_qword_ptr_[r@@ cx@@ +rax*8+0x@@ 20], cmp_eax_1, je_0x72, cmp_eax_2, jne_0x2a, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x13@@ a, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_2, pop_r15, ret, test_eax_eax, je_0x58, mov_r8d_eax, lea_rcx_[rip+0x@@ 1d@@ 8a@@ a], lea_rdx_[rip+0x1d@@ 8b@@ 5], mov_esi_0x1@@ d2, lea_rdi_[rip+0x1d@@ 8b@@ 2], xor_eax_eax, call_0xbd@@ 7a, mov_rdi_qword_ptr_[rip+0x3@@ 17@@ e9], mov_esi_1, call_0xffffffffffffc0@@ e4, call_0xffffffffffffc0@@ bf, call_0xfffffffffffffc@@ 3a, mov_esi_1, mov_edi_r12d, call_0xfffffffffffff97@@ d, jmp_0xfffffffffffffe@@ 68, lea_eax_[r@@ 12+1], cdq, idiv@@ _ebp, mov_r12d_edx, jmp_0xffffffffffffffde, mov_rdi_qword_ptr_[rsp+8], mov_edx_0xa, xor_esi_esi, mov_byte_ptr_[rsp+0x1@@ 6@@ ]_bl, mov_byte_ptr_[rsp+0x1@@ 7]_0, call_0xffffffffffffc@@ 3@@ 11, mov_rbx_rax, cmp_ebp_eax, jle_0xffffffffffffff@@ 22, mov_edi_r12d, xor_esi_esi, call_0xfffffffffffff93@@ c, mov_esi_1, mov_edi_ebx, call_0xfffffffffffff93@@ 0, mov_r12d_ebx, jmp_0xfffffffffffffe@@ 18, lea_edx_[r@@ 15+0x@@ 80], cmp_edx@@ _0x1@@ 7f, jbe_0x@@ 5b, test_ebp_ebp, jle_0xfffffffffffffe@@ ed, lea_r14_[rip+0x@@ 2f@@ 60@@ 5], lea_rdi_[rip+0x1b@@ 0@@ 1f], xor_r15d_r15d, jmp_0x15, inc@@ _r15d, cmp_ebp@@ _r15d, je_0xfffffffffffffe@@ ce, mov_rdi_qword_ptr_[r14], add_r14@@ _0x28, call_0xffffffffffffb@@ fe@@ 6, movsx_eax_byte_ptr_[r@@ ax], cmp_eax_ebx, jne_0xffffffffffffffe3, mov_edi_r12d, xor_esi_esi, call_0xfffffffffffff8d@@ 5, mov_esi_1, mov_edi_r15d, call_0xfffffffffffff8c@@ 8, mov_r12d_r15d, jmp_0xfffffffffffffd@@ b0, call_0xffffffffffffc@@ 66@@ b, mov_rax_qword_ptr_[rax], mov_ebx_dword_ptr_[r@@ ax+r@@ 14*4], jmp_0xffffffffffffff9b, call_0xffffffffffffb@@ f7@@ d, lea_rdi_[rip+0x1d@@ 76@@ 7], call_0xffffffffffffbf@@ 99, mov_rdi_rax, xor_eax_eax, call_0xb@@ f7@@ f, mov_eax_ebx, and_eax_0xfffffffb, cmp_eax_0x10@@ 3, je_0xd, lea_eax_[r@@ bx-8], and_eax_0xfffffff@@ 7, mov_r15d_ebx, jne_0x16, xor_esi_esi, mov_edi_r12d, call_0xfffffffffffff86@@ e, lea_eax_[r@@ 13+r@@ 12], jmp_0xfffffffffffffd@@ ac, cmp_ebx@@ _0x1@@ 4a, je_0xffffffffffffffe6, cmp_ebx@@ _0x6@@ b, je_0xffffffffffffffe1, jmp_0xfffffffffffffd@@ e@@ 8
endbr64, cmp_byte_ptr_[rip+0x@@ 3@@ 17@@ 26@@ ]_0, jne_0xd, mov_byte_ptr_[rip+0x@@ 3@@ 17@@ 1d@@ ]_0, ret, sub_rsp_8, call_0xffffffffffffbf@@ 54, call_0xffffffffffffc@@ 40@@ f, call_0xffffffffffffc5@@ 9a, mov_byte_ptr_[rip+0x@@ 3@@ 16@@ ff@@ ]_0, add_rsp_8, ret
endbr64, sub_rsp_8, call_0xffffffffffffff@@ b8, add_rsp_8, jmp_0x@@ bb@@ 9@@ f
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]_0x10, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0x1@@ 4d@@ 7d, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xffffffffffffb@@ e0@@ 0
endbr64, mov_rax_qword_ptr_[rdi+0x@@ 258], movsxd_rsi_esi, mov_rax_qword_ptr_[rax+r@@ si*8], mov_rax_qword_ptr_[rax], mov_rax_qword_ptr_[rax], mov_rax_qword_ptr_[rax+8], ret
endbr64, push_rbx, mov_rbx_rdi, call_0x50@@ 48, mov_r8d_eax, lea_rax_[rip+0x@@ 2b@@ 6d@@ 9], test_r8d_r8d, je_0x1b, cmp_byte_ptr_[rbx+0x@@ 26@@ 4]_0, lea_rax_[rip+0x@@ 2b@@ 66@@ 6], lea_rdx_[rip+0x2b@@ 7@@ 1f], cmove_rax_rdx, pop_rbx, ret
endbr64, push_r12, mov_rdx_rdi, xor_eax_eax, push_rbp, lea_rsi_[rip+0x1b@@ 38@@ e], mov_rbp_rdi, sub_rsp_8, mov_edi_1, call_0x5d@@ b1, cmp_byte_ptr_[rbp+0x@@ 26@@ 5]_0, mov_dword_ptr_[rbp+0x@@ 7@@ 4]_0, je_0x1@@ 9e, lea_rdi_[rip+0x1b@@ 37@@ f], call_0xffffffffffff8@@ 14@@ 1, mov_rdx_rax, lea_rsi_[rbp+0x@@ 210], mov_ecx_9, mov_rdi_rbp, call_0xffffffffffff9d@@ aa, lea_rdi_[rip+0x2a@@ da@@ e], call_0xffffffffffffff@@ 0e, lea_rdi_[rip+0x1b@@ 35@@ 6], mov_r12d_eax, call_0xffffffffffff8@@ 10@@ f, mov_rdx_rax, mov_ecx_r12d, lea_rsi_[rbp+0x@@ 220], mov_rdi_rbp, call_0xffffffffffff9d@@ 7a, lea_rdi_[rip+0x2a@@ d@@ fe], call_0xfffffffffffffed@@ e, lea_rdi_[rip+0x1b@@ 33@@ 1], mov_r12d_eax, call_0xffffffffffff80@@ df, mov_rdx_rax, mov_ecx_r12d, lea_rsi_[rbp+0x@@ 230], mov_rdi_rbp, call_0xffffffffffff9d@@ 4a, lea_rdi_[rip+0x2a@@ dc@@ e], call_0xfffffffffffffea@@ e, lea_rdi_[rip+0x1b@@ 30@@ a], mov_r12d_eax, call_0xffffffffffff80@@ af, mov_rdx_rax, lea_rsi_[rbp+0x@@ 240], mov_ecx_r12d, mov_rdi_rbp, call_0xffffffffffff9d@@ 1a, cmp_dword_ptr_[rbp+0x@@ 26@@ 8]_1, je_0x10e, cmp_byte_ptr_[rbp+0x@@ 26@@ 5]_1, sbb@@ _r12d_r12d, and_r12d@@ _0xfffffffb, lea_rdi_[rip+0x1b@@ 2e@@ 3], call_0xffffffffffff80@@ 73, add_r12d@@ _8, mov_rdx_rax, lea_rsi_[rbp+0x@@ 1a0], mov_ecx_r12d, mov_rdi_rbp, call_0xffffffffffff9c@@ da, cmp_dword_ptr_[rbp+0x@@ 26@@ 8]_1, je_0x25, lea_rdi_[rip+0x1b@@ 2a@@ d], call_0xffffffffffff80@@ 45, mov_rdx_rax, lea_rsi_[rbp+0x@@ 190], mov_ecx_8, mov_rdi_rbp, call_0xffffffffffff9c@@ ae, cmp_byte_ptr_[rbp+0x@@ 26@@ 5]_1, sbb@@ _r12d_r12d, lea_rdi_[rip+0x1b@@ 29@@ 1], and_r12d@@ _0xfffffffc, call_0xffffffffffff80@@ 14, add_r12d@@ _0x10, mov_rdx_rax, lea_rsi_[rbp+0x@@ 1b0], mov_ecx_r12d, mov_rdi_rbp, call_0xffffffffffff9c@@ 7b, mov_r8d_dword_ptr_[rbp+0x@@ 270], cmp_r8d_1, je_0x9b, cmp_r8d@@ _2, je_0x1@@ f1, test_r8d_r8d, je_0x1@@ 88, lea_rcx_[rip+0x@@ 1a@@ cb@@ 1], lea_rdx_[rip+0x1b@@ 25@@ a], mov_esi@@ _0xa8, lea_rdi_[rip+0x1b@@ 258], xor_eax_eax, call_0x7c@@ 86, lea_rdi_[rip+0x1b@@ 20c], call_0xffffffffffff7@@ fa@@ 9, mov_rdx_rax, lea_rsi_[rbp+0x@@ 180], mov_ecx_4, mov_rdi_rbp, call_0xffffffffffff9c@@ 12, cmp_dword_ptr_[rbp+0x@@ 26@@ 8]_1, jne_0xfffffffffffffe@@ fe, lea_rdi_[rip+0x1b@@ 1e@@ 1], call_0xffffffffffff7@@ f7@@ 9, mov_rdx_rax, lea_rsi_[rbp+0x@@ 190], mov_ecx_8, mov_rdi_rbp, call_0xffffffffffff9b@@ e2, jmp_0xfffffffffffffed5, mov_qword_ptr_[rbp+0x@@ 1c@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 1c@@ 8]_0, cmp_byte_ptr_[rbp+0x@@ 26@@ 5]_1, sbb@@ _r12d_r12d, lea_rdi_[rip+0x1b@@ 1a@@ a], and_r12d@@ _0xfffffffc, call_0xffffffffffff7f@@ 25, add_r12d@@ _0xe, mov_rdx_rax, lea_rsi_[rbp+0x@@ 1d0], mov_ecx_r12d, mov_rdi_rbp, call_0xffffffffffff9b@@ 8c, mov_r8d_dword_ptr_[rbp+0x@@ 27@@ 4], cmp_r8d_1, je_0xe9, cmp_r8d@@ _2, jne_0x72, lea_rdi_[rip+0x1b@@ 1a@@ f], call_0xffffffffffff7@@ ee@@ 9, mov_rdx_rax, lea_rsi_[rbp+0x@@ 1e0], mov_ecx_0xb, mov_rdi_rbp, call_0xffffffffffff9b@@ 52, lea_rdi_[rip+0x1b@@ 18@@ 2], call_0xffffffffffff7@@ ec@@ 6, mov_rdx_rax, lea_rsi_[rbp+0x@@ 1f0], mov_ecx_0xb, mov_rdi_rbp, call_0xffffffffffff9b@@ 2f, lea_rdi_[rip+0x19@@ eb@@ 3], call_0xffffffffffff7@@ ea@@ 3, add_rsp_8, lea_rsi_[rbp+0x@@ 200], mov_rdi_rbp, pop_rbp, mov_rdx_rax, pop_r12, jmp_0xffffffffffff@@ 9b@@ 2a, test_r8d_r8d, je_0xcd, lea_rcx_[rip+0x@@ 1a@@ b7@@ f], lea_rdx_[rip+0x@@ 1b0@@ ff], mov_esi_0x@@ b9, lea_rdi_[rip+0x1b@@ 0@@ fd], xor_eax_eax, call_0x7b@@ 2b, mov_r8d_dword_ptr_[rbp+0x@@ 27@@ 4], mov_qword_ptr_[rbp+0x@@ 1c@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 1c@@ 8]_0, mov_qword_ptr_[rbp+0x@@ 1d@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 1d@@ 8]_0, cmp_r8d_1, jne_0xffffffffffffff@@ 23, mov_qword_ptr_[rbp+0x@@ 1e@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 1e@@ 8]_0, jmp_0xffffffffffffff30, cmp_byte_ptr_[rbp+0x@@ 26@@ 5]_1, sbb@@ _r12d_r12d, and_r12d@@ _0xfffffffc, lea_rdi_[rip+0x1b@@ 0@@ 67], call_0xffffffffffff7@@ dd@@ b, add_r12d@@ _0xe, mov_rdx_rax, lea_rsi_[rbp+0x@@ 1c0], mov_ecx_r12d, mov_rdi_rbp, call_0xffffffffffff9a@@ 42, jmp_0xfffffffffffffe@@ 83, mov_qword_ptr_[rbp+0x@@ 1e@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 1e@@ 8]_0, mov_qword_ptr_[rbp+0x@@ 1f@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 1f@@ 8]_0, jmp_0xfffffffffffffed@@ a
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12_rdi, push_rbp, mov_ebp_edx, push_rbx, movsxd_rbx@@ _esi, mov_r15_rbx, sub_rsp_0x28, mov_rax_qword_ptr_[rdi+0x@@ 258], sub_r15d@@ _dword_ptr_[r@@ di+0x@@ c8], mov_rax_qword_ptr_[rax+r@@ bx*8], mov_dword_ptr_[rsp+0x1@@ c]_edx, mov_r13_qword_ptr_[rax], xor_eax_eax, test_edx_edx, setne_al, inc_eax, cdqe, lea_rax_[r@@ di@@ +rax*4], mov_esi_dword_ptr_[rax+0x@@ 3c], mov_rdi_qword_ptr_[rdi+0x@@ 80], mov_qword_ptr_[rsp+8]_rax, call_0xffffffffffff4d@@ 4c, mov_rax_qword_ptr_[r13], cmp_qword_ptr_[rax+8]_0, je_0x6@@ 4e, cmp_byte_ptr_[r@@ 12+0x@@ 26@@ 5]_0, je_0x2@@ 97, movsxd_rdx_dword_ptr_[r@@ 13+0x14], lea_rax_[rip+0x27@@ 32@@ e], mov_rdi_qword_ptr_[r@@ ax+rdx*8], lea_r14_[r@@ 12+0x@@ 220], call_0xffffffffffff4@@ 64@@ 2, mov_rcx_rax, lea_rsi_[r12+0x@@ 210], mov_edx_r15d, mov_rdi_r12, call_0xffffffffffff6@@ 38@@ c, mov_rsi_r14, mov_edx_r15d, mov_rdi_r12, call_0xffffffffffff6@@ 32@@ e, movsxd_rdx_dword_ptr_[r@@ 13+0x18], lea_rax_[rip+0x27@@ 29@@ e], mov_rdi_qword_ptr_[r@@ ax+rdx*8], call_0xffffffffffff4@@ 60@@ a, mov_rcx_rax, mov_rsi_r14, mov_edx_r15d, lea_r14_[r@@ 12+0x@@ 230], mov_rdi_r12, call_0xffffffffffff6@@ 35@@ 1, mov_rsi_r14, mov_edx_r15d, mov_rdi_r12, call_0xffffffffffff6@@ 2f@@ 3, mov_rax_qword_ptr_[r12+0x@@ 258], lea_r8_[rip+0x@@ 27@@ 2d@@ f], mov_rax_qword_ptr_[rax+r@@ bx*8], movsxd_rax_dword_ptr_[r@@ ax+8], mov_rdi_qword_ptr_[r@@ 8@@ +rax*8], call_0xffffffffffff4@@ 5c3, mov_rcx_rax, mov_rsi_r14, mov_edx_r15d, lea_r14_[r@@ 12+0x@@ 240], mov_rdi_r12, call_0xffffffffffff6@@ 30@@ a, mov_edx_r15d, mov_rsi_r14, mov_rdi_r12, call_0xffffffffffff6@@ 2a@@ c, xor_eax_eax, test_ebp_ebp, setne_al, add_eax@@ _5, cdqe, mov_esi_dword_ptr_[r@@ 12@@ +rax*4+0x@@ 3c], mov_rdi_qword_ptr_[r12+0x@@ 80], call_0xffffffffffff4c@@ 4e, mov_rax_qword_ptr_[r12+0x@@ 258], lea_r8_[rip+0x@@ 27@@ 27@@ a], mov_rax_qword_ptr_[rax+r@@ bx*8], movsxd_rax_dword_ptr_[r@@ ax+0x14], mov_rdi_qword_ptr_[r@@ 8@@ +rax*8], call_0xffffffffffff4@@ 55@@ e, mov_rcx_rax, mov_edx_r15d, mov_rsi_r14, mov_rdi_r12, call_0xffffffffffff6@@ 2a@@ d, mov_rax_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[r12+0x@@ 80], mov_esi_dword_ptr_[rax+0x@@ 3c], lea_r14_[r@@ 12+0x1@@ a0], call_0xffffffffffff4c@@ 00, mov_edx_r15d, mov_rsi_r14, mov_rdi_r12, call_0xffffffffffff6@@ 23@@ 2, movsxd_rax_dword_ptr_[r@@ 13+0x1@@ c], cmp_eax_5, jne_0x4@@ 96, mov_rcx_qword_ptr_[r@@ 13+0x20], mov_edx_r15d, mov_rsi_r14, mov_rdi_r12, call_0xffffffffffff6@@ 26@@ 3, lea_r14_[r@@ 12+0x1@@ 90], mov_rsi_r14, mov_edx_r15d, mov_rdi_r12, call_0xffffffffffff6@@ 1f@@ d, mov_rcx_qword_ptr_[r@@ 13+0x28], lea_rax_[rip+0x@@ 17@@ 8b@@ 5], test_rcx_rcx, cmove_rcx_rax, mov_rsi_r14, mov_edx_r15d, mov_rdi_r12, lea_r14_[r@@ 12+0x1@@ b0], call_0xffffffffffff6@@ 22@@ 5, mov_edx_r15d, mov_rsi_r14, mov_rdi_r12, call_0xffffffffffff6@@ 1c@@ 7, mov_rax_qword_ptr_[r13], mov_edx_r15d, mov_rcx_qword_ptr_[rax+8], mov_rsi_r14, mov_rdi_r12, call_0xffffffffffff6@@ 20@@ 1, mov_rdi_qword_ptr_[r12+0x@@ 80], mov_esi_0x20, call_0xffffffffffff4a@@ bf, mov_r9d_dword_ptr_[r@@ 12+0x1@@ cc], test_r9d_r9d, jne_0x3@@ 5f, mov_r8d_dword_ptr_[r@@ 12+0x1@@ dc], test_r8d_r8d, jne_0x2@@ fe, mov_edi_dword_ptr_[r@@ 12+0x1@@ ec], test_edi_edi, jne_0x2@@ ae, mov_esi_dword_ptr_[r@@ 12+0x1@@ fc], test_esi_esi, jne_0x2@@ 2e, mov_rbp_qword_ptr_[r@@ 13+0x@@ e0], mov_ebx_dword_ptr_[r@@ 12+0x@@ 20c], test_rbp_rbp, je_0x3@@ 5e, test_ebx_ebx, jg@@ _0x2e, jmp_0x5@@ 2, test_al_al, je_0x2e, mov_rdi_qword_ptr_[r12+0x@@ 80], mov_rsi_rbp, mov_edx_1, call_0xffffffffffff4@@ 2e@@ c, inc_rbp, dec_ebx, je_0x28, movzx_eax_byte_ptr_[rbp], cmp_al_0xa, jne_0xffffffffffffffda, mov_rdi_qword_ptr_[r12+0x@@ 80], mov_esi_0x20, call_0xffffffffffff4a@@ 13, dec_ebx, jne_0xffffffffffffffec, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_qword_ptr_[r12+0x@@ 80], xor_edx_edx, mov_esi_r15d, call_0xffffffffffff4@@ 12@@ b, cmp_eax_-1, je_0x1e, movsxd_rax_dword_ptr_[r@@ 13+0x14], lea_rdx_[rip+0x17@@ ae@@ c], movsx_esi_byte_ptr_[r@@ dx+rax], mov_rdi_qword_ptr_[r12+0x@@ 80], call_0xffffffffffff4@@ 9c@@ a, movsxd_rax_dword_ptr_[r@@ 13+0x18], lea_rdx_[rip+0x17@@ ad@@ a], movsx_esi_byte_ptr_[r@@ dx+rax], mov_rdi_qword_ptr_[r12+0x@@ 80], lea_r14_[rip+0x@@ 17@@ ab@@ 7], call_0xffffffffffff4@@ 9a7, mov_rax_qword_ptr_[r12+0x@@ 258], mov_rdi_qword_ptr_[r12+0x@@ 80], mov_rax_qword_ptr_[rax+r@@ bx*8], movsxd_rax_dword_ptr_[r@@ ax+8], movsx_esi_byte_ptr_[r@@ 14+rax], call_0xffffffffffff4@@ 98@@ 5, mov_r10d_dword_ptr_[r@@ sp+0x1c], xor_eax_eax, test_r10d_r10d, setne_al, add_eax@@ _5, cdqe, mov_esi_dword_ptr_[r@@ 12@@ +rax*4+0x@@ 3c], mov_rdi_qword_ptr_[r12+0x@@ 80], call_0xffffffffffff4a@@ 01, mov_rax_qword_ptr_[r12+0x@@ 258], mov_rdi_qword_ptr_[r12+0x@@ 80], mov_rax_qword_ptr_[rax+r@@ bx*8], movsxd_rax_dword_ptr_[r@@ ax+0x14], movsx_esi_byte_ptr_[r@@ 14+rax], call_0xffffffffffff4@@ 93@@ f, mov_rax_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[r12+0x@@ 80], mov_esi_dword_ptr_[rax+0x@@ 3c], call_0xffffffffffff4@@ 9c@@ a, mov_eax_dword_ptr_[r@@ 12+0x1@@ a8], mov_rdi_qword_ptr_[r12+0x@@ 80], lea_edx_[rax-1], mov_esi_r15d, call_0xffffffffffff40@@ 4f, mov_rdi_qword_ptr_[r12+0x@@ 80], mov_esi_0x20, call_0xffffffffffff48@@ fd, movsxd_rax_dword_ptr_[r@@ 13+0x1@@ c], cmp_eax_5, jne_0x20@@ 1, mov_eax_dword_ptr_[r@@ 12+0x1@@ ac], mov_rbx_qword_ptr_[r@@ 13+0x20], mov_dword_ptr_[rsp+0x10]_eax, test_eax_eax, jle_0xfffffffffffffd@@ ab, movzx_r14d@@ _byte_ptr_[rbx], test_r14b_r14b, je_0x4f, movsx@@ _ebp@@ _r14b, mov_edi_ebp, mov_esi_8, call_0x94@@ 5, or@@ _r14d@@ _0x20, movzx_r14d@@ _r14b, test_al_al, cmovne@@ _ebp@@ _r14d, mov_rdi_qword_ptr_[r12+0x@@ 80], mov_esi_ebp, call_0xffffffffffff48@@ 98, inc_rbx, dec_dword_ptr_[r@@ sp+0x10], je_0xfffffffffffffd@@ 5e, movzx_r14d@@ _byte_ptr_[rbx], test_r14b_r14b, jne_0xffffffffffffffbf, mov_ebx_dword_ptr_[r@@ sp+0x10], dec_ebx, mov_rdi_qword_ptr_[r12+0x@@ 80], mov_esi_0x20, dec_ebx, call_0xffffffffffff4@@ 86@@ 1, cmp_ebx_-1, jne_0xffffffffffffffe9, jmp_0xfffffffffffffd@@ 29, lea_r14_[r@@ 13+0x1@@ 10], mov_rdi_r14, call_0xd@@ 68@@ 6, test_al_al, jne_0x1@@ a7, mov_rdi_r14, mov_esi_1, call_0x87@@ c1, mov_rcx_rax, lea_rsi_[r@@ 12+0x1@@ f0], mov_edx_r15d, mov_rdi_r12, call_0xffffffffffff5f@@ 4b, mov_rax_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[r12+0x@@ 80], mov_esi_dword_ptr_[rax+0x@@ 3c], call_0xffffffffffff48@@ a6, mov_rdi_qword_ptr_[r12+0x@@ 80], mov_esi_0x20, call_0xffffffffffff47@@ f4, jmp_0xfffffffffffffd@@ 77, lea_rdi_[r@@ 13+0x98], mov_esi_1, call_0x87@@ 64, mov_rcx_rax, lea_rsi_[r@@ 12+0x1@@ e0], mov_rdi_r12, mov_edx_r15d, call_0xffffffffffff5e@@ ee, mov_rdi_qword_ptr_[r12+0x@@ 80], mov_esi_0x20, call_0xffffffffffff47@@ ac, jmp_0xfffffffffffffd@@ 1f, lea_r14_[r@@ 12+0x1@@ d0], mov_edx_r15d, mov_rsi_r14, mov_rdi_r12, call_0xffffffffffff5e@@ 6f, mov_rax_qword_ptr_[r13+0x@@ d0], mov_rsi_r14, mov_rcx_qword_ptr_[rax+8], mov_rdi_r12, mov_edx_r15d, call_0xffffffffffff5@@ ea@@ 6, mov_rdi_qword_ptr_[r12+0x@@ 80], mov_esi_0x20, call_0xffffffffffff47@@ 64, jmp_0xfffffffffffffc@@ c7, lea_r14_[r@@ 12+0x1@@ c0], mov_edx_r15d, mov_rsi_r14, mov_rdi_r12, call_0xffffffffffff5e@@ 1f, mov_rax_qword_ptr_[r13+0x@@ 58], mov_rsi_r14, mov_rcx_qword_ptr_[rax+8], mov_rdi_r12, mov_edx_r15d, call_0xffffffffffff5e@@ 59, mov_rdi_qword_ptr_[r12+0x@@ 80], mov_esi_0x20, call_0xffffffffffff47@@ 17, jmp_0xfffffffffffffc@@ 69, mov_rbp_qword_ptr_[r@@ 13+0x@@ 68], lea_rax_[rip+0x16@@ 1c@@ 7], test_rbp_rbp, cmove@@ _rbp_rax, jmp_0xfffffffffffffc@@ 96, lea_rdx_[rip+0x2@@ 6c@@ 69], mov_rdi_qword_ptr_[r@@ dx+rax*8], call_0xffffffffffff40@@ b5, mov_edx_dword_ptr_[r@@ 12+0x1@@ ac], mov_rdi_qword_ptr_[r12+0x@@ 80], mov_r8_rax, mov_ecx_edx, lea_rsi_[rip+0x12@@ 5d@@ 7], xor_eax_eax, call_0xffffffffffff47@@ 72, jmp_0xfffffffffffffb@@ 8f, lea_rdx_[rip+0x2@@ 6c@@ c9], mov_rdi_qword_ptr_[r@@ dx+rax*8], call_0xffffffffffff40@@ 75, mov_rcx_rax, jmp_0xfffffffffffffb@@ 61, lea_rsi_[r@@ 13+0x98], mov_rdi_r14, call_0xd@@ 4f@@ e, test_eax_eax, jle_0xfffffffffffffe@@ 4e, mov_ecx_dword_ptr_[rsp+0x1c], xor_eax_eax, test_ecx_ecx, setne_al, add_eax@@ _5, cdqe, mov_esi_dword_ptr_[r@@ 12@@ +rax*4+0x@@ 3c], mov_rdi_qword_ptr_[r12+0x@@ 80], call_0xffffffffffff4@@ 70@@ 4, jmp_0xfffffffffffffe@@ 26, mov_rbx_qword_ptr_[r@@ 13+0x28], mov_rdi_r13, call_0xfffffffffffff38@@ 9, mov_rdx_rax, mov_r14d@@ _0x1@@ f4, test_rbx_rbx, je_0x1b, mov_rdi_rbx, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffff3@@ fb@@ e, mov_rdx_qword_ptr_[rsp+0x10], lea_r14_[r@@ ax+0x1@@ f4], test_rdx_rdx, je_0x17, mov_rdi_rdx, mov_qword_ptr_[rsp+0x10]_rdx, call_0xffffffffffff3@@ fa0, mov_rdx_qword_ptr_[rsp+0x10], add_r14_rax, mov_rdi_r14, mov_qword_ptr_[rsp+0x10]_rdx, call_0xffffffffffff4@@ 96@@ b, mov_r8_qword_ptr_[r@@ 13+0x1@@ 38], mov_rdx_qword_ptr_[rsp+0x10], mov_rsi_rax, mov_rdi_r12, mov_rcx_rbx, mov_r14_rax, call_0xfffffffffffff3@@ 9e, mov_rdi_qword_ptr_[r12+0x@@ 80], xor_edx_edx, mov_esi_r15d, mov_r13d_eax, call_0xffffffffffff3d@@ 09, cmp_eax_-1, je_0x1b, mov_rdi_qword_ptr_[r12+0x@@ 80], mov_edx_0xffffffff, lea_rsi_[rip+0x18@@ 4e@@ d], call_0xffffffffffff3e@@ 5b, mov_eax_dword_ptr_[r12+0x@@ 78], add@@ _r13d_r13d, lea_r15d_[r@@ 13+1], mov_ebp_eax, lea_ebx@@ _[rax@@ -7], test_r15d_r15d, jle_0x@@ 2c, mov_ebx_r13d, mov_rdi_qword_ptr_[r12+0x@@ 80], mov_esi_dword_ptr_[rip+0x2@@ 96@@ 5e], dec_ebx, call_0xffffffffffff4@@ 578, cmp_ebx_-1, jne_0xffffffffffffffe8, mov_ebx_ebp, sub_ebx@@ _8, sub_ebx@@ _r13d, mov_rdi_qword_ptr_[r12+0x@@ 80], mov_esi_0x20, call_0xffffffffffff4@@ 55@@ 9, mov_edx_dword_ptr_[rsp+0x1c], xor_eax_eax, test_edx_edx, setne_al, add_eax@@ _5, cdqe, mov_esi_dword_ptr_[r@@ 12@@ +rax*4+0x@@ 3c], mov_rdi_qword_ptr_[r12+0x@@ 80], call_0xffffffffffff4@@ 5d@@ 7, test_ebx_ebx, jle_0x@@ 94, mov_rbp_r14, jmp_0x1b, mov_rsi_rbp, mov_edx_1, call_0xffffffffffff3d@@ c8, inc_rbp, dec_ebx, je_0x72, cmp_byte_ptr_[rbp]_0, mov_rdi_qword_ptr_[r12+0x@@ 80], jne_0xffffffffffffffe0, mov_rax_qword_ptr_[rsp+8], mov_esi_dword_ptr_[rax+0x@@ 3c], call_0xffffffffffff@@ 45@@ 96, mov_rdi_qword_ptr_[r12+0x@@ 80], mov_esi_0x20, call_0xffffffffffff44@@ e4, test_r15d_r15d, jle_0x@@ 2b, mov_ebp_r13d, mov_rdi_qword_ptr_[r12+0x@@ 80], mov_esi_dword_ptr_[rip+0x2@@ 9@@ 5a@@ 6], dec@@ _ebp, call_0xffffffffffff4@@ 4c0, cmp_ebp_-1, jne_0xffffffffffffffe8, dec_ebx, sub_ebx@@ _r13d, mov_rdi_r14, call_0xffffffffffff48@@ 4e, test_ebx_ebx, jg_0xffffffffffff@@ fa@@ 87, jmp_0xfffffffffffffa@@ 97, mov_rdi_qword_ptr_[r12+0x@@ 80], jmp_0xffffffffffffff9@@ 6
endbr64, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, mov_r8d_dword_ptr_[r@@ di+0x14], test_r8d_r8d, jne_0x14, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffff@@ 6c@@ 91, mov_esi_dword_ptr_[r@@ di+0x@@ 58], mov_rdi_qword_ptr_[rdi+0x@@ 90], call_0xffffffffffff44@@ fe, mov_rdi_qword_ptr_[rbp+0x@@ 90], call_0xffffffffffff5@@ 80@@ 2, cmp_byte_ptr_[rbp+0x@@ 26@@ 5]_0, jne_0x9e, lea_rsi_[rbp+0x@@ 180], mov_rdi_rbp, call_0xffffffffffff5a@@ c6, lea_rsi_[rbp+0x@@ 190], mov_rdi_rbp, call_0xffffffffffff5a@@ b7, lea_rsi_[rbp+0x@@ 1a0], mov_rdi_rbp, call_0xffffffffffff5a@@ a8, lea_rsi_[rbp+0x@@ 1b0], mov_rdi_rbp, call_0xffffffffffff5a@@ 99, mov_esi_dword_ptr_[rbp+0x@@ 1c@@ c], test_esi_esi, jne_0x1@@ 1c, mov_ecx_dword_ptr_[rbp+0x@@ 1d@@ c], test_ecx_ecx, jne_0x@@ f6, mov_edx_dword_ptr_[rbp+0x@@ 1e@@ c], test_edx_edx, jne_0x@@ d0, mov_eax_dword_ptr_[rbp+0x@@ 1f@@ c], test_eax_eax, jne_0xaa, mov_rdi_rbp, lea_rsi_[rbp+0x@@ 200], call_0xffffffffffff5a@@ 52, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffff@@ 6b@@ d4, mov_rdi_qword_ptr_[rbp+0x@@ 90], xor_edx_edx, xor_esi_esi, call_0xffffffffffff3a@@ dd, mov_edi_dword_ptr_[r@@ bp+0x@@ 23@@ c], xor_ebx_ebx, test_edi_edi, jle_0x@@ 21, mov_rdi_qword_ptr_[rbp+0x@@ 90], mov_esi_0x2e, inc_ebx, call_0xffffffffffff4@@ 37@@ a, cmp_dword_ptr_[rbp+0x@@ 23@@ c]_ebx, jg_0xffffffffffffff@@ e7, lea_rsi_[rbp+0x@@ 210], mov_rdi_rbp, call_0xffffffffffff5@@ 9f@@ 3, lea_rsi_[rbp+0x@@ 220], mov_rdi_rbp, call_0xffffffffffff5@@ 9e@@ 4, lea_rsi_[rbp+0x@@ 230], mov_rdi_rbp, call_0xffffffffffff5@@ 9d@@ 5, lea_rsi_[rbp+0x@@ 240], mov_rdi_rbp, call_0xffffffffffff5@@ 9c@@ 6, jmp_0xffffffffffffff00, lea_rsi_[rbp+0x@@ 1f0], mov_rdi_rbp, call_0xffffffffffff5@@ 9a@@ e, jmp_0xffffffffffffff4d, lea_rsi_[rbp+0x@@ 1e0], mov_rdi_rbp, call_0xffffffffffff5@@ 99@@ 6, jmp_0xffffffffffffff27, lea_rsi_[rbp+0x@@ 1d0], mov_rdi_rbp, call_0xffffffffffff5@@ 97@@ e, jmp_0xffffffffffffff01, lea_rsi_[rbp+0x@@ 1c0], mov_rdi_rbp, call_0xffffffffffff5@@ 96@@ 6, jmp_0xfffffffffffffed@@ b
endbr64, push_rbp, mov_rbp_rdi, call_0xffffffffffffff@@ a8, mov_rdi_rbp, mov_esi_0x1@@ b8, pop_rbp, jmp_0xffffffffffffc@@ 4f@@ a
endbr64, mov_eax_dword_ptr_[rdi+0x10], test_eax_eax, jne_7, ret, push_r12, push_rbp, push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+0x@@ a0], call_0xffffffffffff97@@ 32, mov_rdi_qword_ptr_[rbx+0x@@ a0], xor_edx_edx, xor_esi_esi, call_0xffffffffffff7a@@ b2, cmp_eax_-1, je_0x3e, cmp_byte_ptr_[rbx+0x@@ 26@@ 4]_0, mov_r12d_dword_ptr_[r@@ bx+8], jne_0x14@@ d, call_0x5@@ 35@@ 7, test_eax_eax, jne_0x2@@ 68, lea_rdi_[rip+0x1b@@ 2e@@ b], call_0xffffffffffff7d@@ 13, mov_rsi_rax, mov_rdi_qword_ptr_[rbx+0x@@ a0], mov_edx_r12d, call_0xffffffffffff7@@ be@@ 1, mov_rax_qword_ptr_[rbx+0x@@ a0], mov_r12d_0xffffffff, test_rax_rax, je_7, movsx@@ _r12d@@ _word_ptr_[r@@ ax+2], mov_ebp_dword_ptr_[r@@ bx+8], cmp_ebp@@ _r12d, jle_0x@@ b0, mov_r8d_dword_ptr_[rbx+0x@@ 268], cmp_r8d@@ _2, je_0x1@@ 1e, ja@@ _0x58, test_r8d_r8d, je_0x94, mov_r8d_dword_ptr_[rbx+0x@@ 26@@ c], cmp_r8d_1, je_0x2@@ 42, cmp_r8d@@ _2, je_0x2@@ 08, lea_rdi_[rip+0x1a@@ f6@@ a], test_r8d_r8d, je_0x50, lea_rcx_[rip+0x@@ 1a@@ f@@ 92], lea_rdx_[rip+0x1a@@ fa@@ 9], mov_esi_0x@@ d9, lea_rdi_[rip+0x1a@@ f@@ 1c], xor_eax_eax, call_0x7@@ 94@@ a, cmp_r8d@@ _3, jne_0x2@@ 18, mov_r8d_dword_ptr_[rbx+0x@@ 26@@ c], cmp_r8d_1, jne_0x@@ fb, lea_rdi_[rip+0x1a@@ fc@@ 4], call_0xffffffffffff7c@@ 48, mov_edx_ebp, mov_rdi_qword_ptr_[rbx+0x@@ a0], mov_rsi_rax, sub_edx@@ _r12d, call_0xffffffffffff7b@@ 14, call_0x5@@ 25@@ f, cmp_eax_3, je_0x1@@ 37, cmp_byte_ptr_[rbx+0x@@ 26@@ 5]_0, jne_0x52, lea_rdi_[rip+0x1a@@ fd@@ 9], call_0xffffffffffff7c@@ 11, mov_rbp_rax, mov_rdi_rbp, call_0xffffffffffff7@@ bc@@ 6, mov_edx_dword_ptr_[rbx+8], mov_rdi_qword_ptr_[rbx+0x@@ a0], sub_edx_eax, test_edx_edx, jg_0x@@ d3, pop_rbx, pop_rbp, pop_r12, jmp_0xffffffffffff@@ 7f@@ 19, lea_rdi_[rip+0x1b@@ 18@@ 9], call_0xffffffffffff7@@ bd@@ 9, mov_rsi_rax, jmp_0xfffffffffffffe@@ c6, lea_rdi_[rip+0x1a@@ f6@@ e], call_0xffffffffffff7@@ bc@@ 1, mov_rbp_rax, jmp_0xffffffffffffffb0, mov_r8d_dword_ptr_[rbx+0x@@ 26@@ c], cmp_r8d_1, je_0x1@@ 45, cmp_r8d@@ _2, je_0x1@@ 1b, lea_rdi_[rip+0x1a@@ e@@ bb], test_r8d_r8d, je_0xffffffffffffff@@ 43, lea_rcx_[rip+0x@@ 1b@@ 19@@ e], lea_rdx_[rip+0x1a@@ e@@ 98], mov_esi_0x@@ e8, lea_rdi_[rip+0x1a@@ e0@@ b], xor_eax_eax, call_0x7@@ 8@@ 39, cmp_r8d@@ _2, je_0xcc, lea_rdi_[rip+0x1a@@ eb@@ 3], test_r8d_r8d, je_0xffffffffffffff@@ 04, lea_rcx_[rip+0x@@ 1b@@ 15@@ f], lea_rdx_[rip+0x1a@@ e5@@ 9], mov_esi@@ _0xf7, lea_rdi_[rip+0x1a@@ dc@@ c], xor_eax_eax, call_0x77@@ fa, xor_esi_esi, call_0xffffffffffff7@@ 88@@ e, mov_rdi_qword_ptr_[rbx+0x@@ a0], cmp_eax_-1, je_0xffffffffffffff@@ 22, mov_edx_0xffffffff, mov_rsi_rbp, call_0xffffffffffff7@@ 9e@@ 1, mov_rdi_qword_ptr_[rbx+0x@@ a0], jmp_0xffffffffffffff08, cmp_byte_ptr_[rbx+0x@@ 26@@ 5]_0, je_0x19, lea_rdi_[rip+0x1a@@ e8@@ 2], call_0xffffffffffff7a@@ e0, mov_rbp_rax, jmp_0xfffffffffffffecf, lea_rdi_[rip+0x1a@@ e8@@ 6], call_0xffffffffffff7a@@ c9, mov_rbp_rax, jmp_0xfffffffffffffe@@ b8, lea_rdi_[rip+0x1b@@ 0@@ b1], call_0xffffffffffff7a@@ b1, mov_rsi_rax, jmp_0xfffffffffffffd@@ 9e, lea_rdi_[rip+0x1a@@ d8@@ 9], jmp_0xfffffffffffffe@@ 51, lea_rdi_[rip+0x1a@@ e@@ 12], jmp_0xfffffffffffffe@@ 41, lea_rdi_[rip+0x1a@@ dc@@ 9], jmp_0xfffffffffffffe@@ 31, lea_rdi_[rip+0x1a@@ d@@ 46], jmp_0xfffffffffffffe@@ 21, lea_rdi_[rip+0x1a@@ d@@ 95], jmp_0xfffffffffffffe@@ 11, lea_rcx_[rip+0x@@ 1a@@ de@@ 3], lea_rdx_[rip+0x1a@@ d6@@ 7], mov_esi@@ _0xfd, lea_rdi_[rip+0x1a@@ cd@@ a], xor_eax_eax, call_0x7@@ 70@@ 8
endbr64, mov_eax_dword_ptr_[rdi+0x1@@ c], test_eax_eax, jne_7, ret, push_r15, push_r14, push_r13, push_r12, push_rbp, xor_ebp_ebp, push_rbx, mov_rbx_rdi, sub_rsp_0x28, mov_rdi_qword_ptr_[rdi+0x@@ 98], call_0xffffffffffff6@@ 32@@ 6, movsxd_rdx_dword_ptr_[r@@ bx+0x@@ d0], mov_rax_qword_ptr_[rbx+0x@@ 258], mov_rax_qword_ptr_[rax+rdx*8], mov_rdi_qword_ptr_[rax], mov_r13_qword_ptr_[r@@ di+0x28], call_0xfffffffffffffc@@ 98, mov_r12_rax, test_r13_r13, je_0xd, mov_rdi_r13, call_0xffffffffffff4@@ 8d8, mov_rbp_rax, test_r12_r12, je_0xd, mov_rdi_r12, call_0xffffffffffff48@@ c8, add_rbp_rax, movsxd_rdx_dword_ptr_[r@@ bx+0x@@ d0], mov_rax_qword_ptr_[rbx+0x@@ 258], mov_rax_qword_ptr_[rax+rdx*8], mov_rax_qword_ptr_[rax], mov_rax_qword_ptr_[rax], mov_rdi_qword_ptr_[rax+8], test_rdi_rdi, je_0xe, call_0xffffffffffff48@@ 9f, cmp_rbp_rax, cmovb@@ _rbp_rax, lea_rdi_[rbp+0x@@ 1f@@ 4], call_0xffffffffffff5@@ 26@@ c, mov_rbp_rax, movsxd_rdx_dword_ptr_[r@@ bx+0x@@ d0], mov_rax_qword_ptr_[rbx+0x@@ 258], mov_rax_qword_ptr_[rax+rdx*8], mov_rdx_qword_ptr_[rax], mov_rcx_qword_ptr_[rdx], cmp_qword_ptr_[rcx@@ +8]_0, je_0x1@@ af, movsxd_rax_dword_ptr_[r@@ ax+8], lea_r13_[rip+0x@@ 27@@ 5a@@ 6], mov_rdi_qword_ptr_[r@@ 13+rax*8], lea_r15_[rip+0x@@ 27@@ 56@@ a], call_0xffffffffffff4@@ 88@@ a, mov_r14_rax, movsxd_rdx_dword_ptr_[r@@ bx+0x@@ d0], mov_rax_qword_ptr_[rbx+0x@@ 258], mov_rax_qword_ptr_[rax+rdx*8], movsxd_rax_dword_ptr_[r@@ ax+0x14], mov_rdi_qword_ptr_[r@@ 13+rax*8], call_0xffffffffffff4@@ 86@@ 7, mov_r13_rax, movsxd_rdx_dword_ptr_[r@@ bx+0x@@ d0], mov_rax_qword_ptr_[rbx+0x@@ 258], mov_rax_qword_ptr_[rax+rdx*8], mov_rax_qword_ptr_[rax], movsxd_rax_dword_ptr_[r@@ ax+0x14], mov_rdi_qword_ptr_[r@@ 15@@ +rax*8], call_0xffffffffffff48@@ 42, mov_rdx_rax, movsxd_rcx@@ _dword_ptr_[rbx+0x@@ d0], mov_rax_qword_ptr_[rbx+0x@@ 258], lea_rsi_[rip+0x16@@ 8@@ ff], mov_rax_qword_ptr_[r@@ ax@@ +rcx*8], mov_rax_qword_ptr_[rax], movsxd_rcx_dword_ptr_[r@@ ax+0x14], mov_rcx_qword_ptr_[r@@ 15@@ +rcx*8], cmp_byte_ptr_[rcx@@ ]_0x20, jne_0x11, cmp_byte_ptr_[rcx@@ +@@ 1]_0, lea_rcx_[rip+0x@@ 16@@ 900], cmove_rsi@@ _rcx, movsxd_rcx_dword_ptr_[r@@ ax+0x18], lea_rax_[rip+0x27@@ 48@@ 7], mov_rdi_qword_ptr_[r@@ ax@@ +rcx*8], mov_qword_ptr_[rsp+0x18]_rsi, mov_qword_ptr_[rsp+0x10]_rdx, call_0xffffffffffff47@@ e9, mov_r15_rax, movsxd_rcx@@ _dword_ptr_[rbx+0x@@ d0], mov_rax_qword_ptr_[rbx+0x@@ 258], mov_r8d_dword_ptr_[r@@ bx+0x1@@ bc], mov_rax_qword_ptr_[r@@ ax@@ +rcx*8], lea_rdi_[rip+0x18@@ c6@@ 9], mov_rax_qword_ptr_[rax], mov_dword_ptr_[rsp+4]@@ _r8d, mov_rax_qword_ptr_[rax], mov_r9_qword_ptr_[r@@ ax+8], mov_qword_ptr_[rsp+8]_r9, call_0xffffffffffff47@@ ad, push_r12, mov_rcx_rax, mov_rdi_rbp, push_r14, xor_eax_eax, push_r13, mov_rdx_qword_ptr_[rsp+0x28], push_rdx, mov_rdx_-1, mov_rsi_qword_ptr_[rsp+0x38], push_rsi, mov_esi_1, push_r15, mov_r9_qword_ptr_[rsp+0x38], mov_r8d_dword_ptr_[rsp+0x@@ 34], call_0xffffffffffff4e@@ 66, add_rsp_0x30, mov_rdi_qword_ptr_[rbx+0x@@ 98], xor_edx_edx, xor_esi_esi, call_0xffffffffffff44@@ d2, cmp_eax_-1, je_0x14, mov_edx_dword_ptr_[rbx+0x@@ 78], mov_rdi_qword_ptr_[rbx+0x@@ 98], mov_rsi_rbp, call_0xffffffffffff@@ 46@@ 2b, mov_ecx_dword_ptr_[r@@ bx+8], mov_edx_dword_ptr_[rbx+0x@@ 78], lea_esi_[r@@ cx-1], cmp_ecx_edx, lea_eax_[rdx-1], cmovl@@ _eax@@ _esi, sub_rsp_8, mov_ecx_dword_ptr_[rbx+0x@@ 2c], mov_rdi_qword_ptr_[rbx+0x@@ 98], mov_edx_dword_ptr_[rbx+0x@@ cc], push_rax, mov_r9d_ecx, xor_r8d_r8d, xor_esi_esi, call_0xffffffffffff4c@@ 28, add_rsp_0x38, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, jmp_0xffffffffffff@@ 50@@ d2, mov_r8_qword_ptr_[r@@ dx+0x1@@ 38], mov_rcx_r13, mov_rdx_r12, mov_rsi_rbp, mov_rdi_rbx, call_0xfffffffffffffa@@ d5, jmp_0xffffffffffffff7@@ 3
endbr64, ret
endbr64, push_rbx, lea_rsi_[rip+0x1d@@ b@@ 54], mov_rbx_rdi, movsxd_rdx_dword_ptr_[r@@ di+0x@@ d0], mov_rax_qword_ptr_[rdi+0x1@@ b0], mov_rcx_qword_ptr_[r@@ ax+rdx*8], mov_rdx_rdi, xor_eax_eax, mov_edi_1, call_0x96@@ 25, movsxd_rdx_dword_ptr_[r@@ bx+0x@@ d0], mov_rax_qword_ptr_[rbx+0x1@@ b0], pop_rbx, mov_rax_qword_ptr_[rax+rdx*8], mov_qword_ptr_[rip+0x3@@ 11@@ fe@@ ]_rax, ret
endbr64, push_r12, lea_rsi_[rip+0x3@@ 11@@ c3], mov_r12_rdi, call_0xffffffffffffdd@@ 80, lea_rax_[rip+0x@@ 2f@@ 54@@ 4], mov_qword_ptr_[r12]_rax, mov_qword_ptr_[r12+0x1@@ 80]_0, mov_qword_ptr_[r12+0x1@@ 88]_0, mov_qword_ptr_[r12+0x1@@ 90]_0, mov_qword_ptr_[r12+0x1@@ 98]_0, mov_qword_ptr_[r12+0x1@@ a0]_0, mov_qword_ptr_[r12+0x1@@ a8]_0, xor_eax_eax, mov_rdx_r12, lea_rsi_[rip+0x1d@@ 98@@ a], mov_edi_1, call_0x9@@ 58@@ 7, movsxd_rax_dword_ptr_[rip+0x@@ 3@@ 11@@ 83], movabs_rdx@@ _0xfffffffffffffff@@ , cmp_rax_rdx, lea_rdi_[rax@@ *8], mov_rax_-1, cmova@@ _rdi_rax, call_0xffffffffffffc@@ 2a@@ b, mov_rdx_qword_ptr_[rip+0x3@@ 114@@ f], mov_qword_ptr_[r12+0x1@@ b0]_rax, mov_dword_ptr_[r12+0x@@ b8]_0, test_rdx_rdx, je_0x8f, mov_rcx_qword_ptr_[rip+0x@@ 3@@ 112@@ 3], mov_esi_0xffffffff, jmp_0x28, mov_r8d_dword_ptr_[r@@ 12+0x@@ b8], mov_qword_ptr_[rax]_rdx, inc@@ _r8d, add_rax_8, mov_rdx_qword_ptr_[rdx], mov_dword_ptr_[r12+0x@@ b@@ 8]_r8d, test_rdx_rdx, je_0x20, cmp_rcx_rdx, jne_0xffffffffffffffdb, cmp_esi_-1, jne_0x62, mov_esi_dword_ptr_[r@@ 12+0x@@ b8], mov_r8d_esi, jmp_0xffffffffffffffd1, mov_r9d_dword_ptr_[r@@ ip+0x@@ 3@@ 10@@ e1], cmp_r8d@@ _r9d, jne_0x66, cmp_esi_-1, je_0x39, mov_rdi_r12, call_0xffffffffffffcb@@ 2c, mov_ecx_dword_ptr_[rip+0x@@ 3@@ 10@@ c9], mov_rdx_r12, lea_rsi_[rip+0x1d@@ a5@@ 7], mov_edi_1, xor_eax_eax, pop_r12, jmp_0x@@ 9@@ 4a@@ e, mov_r9d_dword_ptr_[r@@ ip+0x@@ 3@@ 10@@ aa], test_r9d_r9d, jne_0x2c, xor_esi_esi, jmp_0xffffffffffffffc7, lea_rcx_[rip+0x@@ 1d@@ 9c@@ d], lea_rdx_[rip+0x1d@@ 8a@@ 1], mov_esi_0x8@@ 5, lea_rdi_[rip+0x1d@@ 8@@ a0], xor_eax_eax, call_0xb@@ 4f@@ 8, xor_r8d_r8d, lea_rcx_[rip+0x@@ 1d@@ 9d@@ 1], lea_rdx_[rip+0x1d@@ 87@@ d], mov_esi_0x8@@ b, lea_rdi_[rip+0x1d@@ 87@@ c], xor_eax_eax, call_0xb@@ 4d@@ 4
endbr64, push_r13, mov_rdx_rdi, xor_eax_eax, push_r12, mov_r13_rdi, lea_rsi_[rip+0x19@@ 4@@ fd], push_rbp, mov_edi_1, push_rbx, sub_rsp_8, call_0x3@@ 5e@@ e, mov_rdi_r13, call_0xffffffffffff7@@ 4b@@ 6, mov_rdi_r13, call_0xffffffffffff7@@ 8@@ 1e, cmp_byte_ptr_[rip+0x2@@ b@@ 17@@ 2]_0, jne_0x1c, mov_rax_qword_ptr_[r13], mov_rdi_r13, call_qword_ptr_[rax+0x@@ 40], mov_rsi_rax, mov_edx_0x6@@ 9, mov_rdi_r13, call_0xffffffffffff67@@ bb, mov_rdx_r13, lea_rsi_[rip+0x19@@ 9@@ 1c], mov_edi_1, xor_eax_eax, call_0x3@@ 5a@@ 5, lea_rbp_[rip+0x@@ 17@@ a0@@ 3], mov_ecx_dword_ptr_[r13+0x@@ 24], test_ecx_ecx, jne_0x1@@ 82, call_0xffffffffffff5d@@ 34, cmp_eax_-1, je_0x2@@ 66, mov_esi_1, mov_rdi_r13, mov_qword_ptr_[rip+0x2@@ b0@@ b7@@ ]_r13, call_0xffffffffffff7@@ 38@@ 7, jmp_0x10, call_0xffffffffffff57@@ 00, cmp_dword_ptr_[rax@@ ]_4, jne_0x2@@ 58, mov_rdi_qword_ptr_[rip+0x2@@ b0@@ 4b], call_0xffffffffffff5@@ 9c@@ b, mov_r12d_eax, cmp_eax_-1, je_0xffffffffffffffe0, xor_esi_esi, mov_rdi_r13, call_0xffffffffffff7@@ 35@@ 9, mov_rdi_qword_ptr_[r13+0x1@@ 78], mov_esi_r12d, call_0xffffffffffff8@@ 9a@@ a, mov_rbx_rax, test_rax_rax, je_0x12f, mov_r8_qword_ptr_[rbx], mov_edi_1, xor_eax_eax, mov_ecx_r12d, mov_rdx_r13, lea_rsi_[rip+0x19@@ 8a@@ 2], call_0x3@@ 50@@ 2, mov_rdi_qword_ptr_[rbx+0x20], mov_rax_qword_ptr_[rbx+0x18], add_rdi@@ _r13, test_al_1, je_0xa, mov_rdx_qword_ptr_[rdi], mov_rax_qword_ptr_[r@@ dx@@ +rax-1], call_rax, mov_edx_dword_ptr_[r@@ bx+0x28], test_edx_edx, je_0xffffffffffffff@@ 4f, mov_edi_1, call_0x54@@ 44, mov_rdi_r13, call_0xffffffffffff7@@ 6@@ 1c, cmp_dword_ptr_[rbx+0x@@ 28]_2, je_0xf9, call_0x2e@@ 9d, test_eax_eax, je_0xec, cmp_byte_ptr_[r@@ 13+0x@@ 26@@ 4]_0, je_0x105, mov_eax_dword_ptr_[r13+0x@@ b8], movabs_rdx@@ _0xfffffffffffffff@@ , inc_eax, cdqe, cmp_rax_rdx, lea_rdi_[rax@@ *8], mov_rax_-1, cmova@@ _rdi_rax, call_0xffffffffffff6@@ 1c@@ 7, movsxd_rdi_dword_ptr_[r@@ 13+0x@@ b8], mov_r12_rax, test_edi_edi, jle_0x@@ 2c, mov_rsi_qword_ptr_[r13+0x@@ 258], lea_ecx_[r@@ di-1], xor_eax_eax, mov_rdx_qword_ptr_[r@@ si+rax*8], mov_rdx_qword_ptr_[rdx], mov_qword_ptr_[r12@@ +rax*@@ 8]_rdx, mov_rdx_rax, inc_rax, cmp_rdx_rcx, jne_0xffffffffffffffec, mov_qword_ptr_[r12@@ +r@@ di*@@ 8]_0, mov_rcx_r12, mov_rdx_r13, xor_eax_eax, lea_rsi_[rip+0x19@@ 8@@ 2b], mov_edi_1, call_0x34@@ 1e, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, mov_rdi_qword_ptr_[r13+0x@@ a8], call_0xffffffffffff5c@@ f1, jmp_0xfffffffffffffe@@ 78, mov_r8_rbp, mov_ecx_r12d, mov_rdx_r13, lea_rsi_[rip+0x19@@ 7@@ 80], mov_edi_1, xor_eax_eax, call_0x3@@ 3d@@ 9, call_0xffffffffffff5@@ 9b@@ 4, jmp_0xfffffffffffffe@@ 3f, mov_rdx_r13, xor_eax_eax, lea_rsi_[rip+0x19@@ 79@@ 6], mov_edi_1, call_0x3@@ 3b@@ 9, add_rsp_8, pop_rbx, xor_r12d_r12d, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, mov_edi_0x2@@ e8, call_0xffffffffffff60@@ de, mov_rsi_qword_ptr_[r@@ 13+0x1@@ 78], mov_rdi_rax, xor_edx_edx, mov_rbp_rax, call_0xfffffffffffffb@@ 9a, mov_eax_dword_ptr_[r13+0x@@ b8], test_eax_eax, jle_0x@@ 30, xor_ebx_ebx, mov_rax_qword_ptr_[r13+0x@@ 258], mov_rax_qword_ptr_[rax+r@@ bx*8], mov_rsi_qword_ptr_[rax], mov_rax_qword_ptr_[rsi], cmp_qword_ptr_[rax+8]_0, je_0xa, mov_rdi_rbp, call_0x7@@ d, inc_rbx, cmp_dword_ptr_[r13+0x@@ b@@ 8]_ebx, jg_0xffffffffffffff@@ d6, mov_rdi_rbp, xor_edx_edx, mov_esi_3, call_0x8d@@ 2, mov_rdx_r13, xor_eax_eax, lea_rsi_[rip+0x19@@ 76@@ 9], mov_edi_1, call_0x3@@ 32@@ c, add_rsp_8, pop_rbx, xor_r12d_r12d, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, lea_rdi_[rip+0x17@@ 76@@ 9], call_0xffffffffffff56@@ bf, mov_rdi_rax, xor_eax_eax, call_0x56@@ a5, xor_esi_esi, mov_rdi_r13, call_0xffffffffffff7@@ 11b, lea_rdi_[rip+0x17@@ 7@@ 60], call_0xffffffffffff56@@ 9f, mov_rdi_rax, xor_eax_eax, call_0x56@@ 8@@ 5
endbr64, push_r12, push_rbp, mov_rbp_rdi, lea_rdi_[rip+0x19@@ 88@@ f], push_rbx, call_0xffffffffffff7@@ 87@@ e, mov_rdi_rax, mov_r12_rax, call_0xffffffffffff7@@ 8@@ 33, mov_rdx_rax, lea_rdi_[rbp+0x@@ e0], mov_rsi_r12, call_0x10@@ 93@@ 1, movsxd_rdx_dword_ptr_[r@@ bp+0x@@ d0], mov_rax_qword_ptr_[rbp+0x@@ 258], mov_rax_qword_ptr_[rax+rdx*8], mov_rax_qword_ptr_[rax], mov_rdx_qword_ptr_[rax], cmp_qword_ptr_[r@@ dx+@@ 8]_0, je_0x10@@ f, mov_r12_qword_ptr_[r@@ ax+0x@@ e0], test_r12_r12, je_0xa7, cmp_byte_ptr_[r12]_0, je_0x9c, mov_esi_0xa, mov_rdi_r12, call_0xffffffffffff7@@ 6e@@ 6, mov_esi_dword_ptr_[rbp+0x@@ 64], mov_rdi_qword_ptr_[rbp+0x@@ 88], mov_rbx_rax, call_0xffffffffffff7@@ ed@@ 4, movsxd_rdx_dword_ptr_[r@@ bp+0x@@ d0], mov_rax_qword_ptr_[rbp+0x@@ 258], mov_rdi_qword_ptr_[rbp+0x@@ 88], mov_rax_qword_ptr_[rax+rdx*8], mov_edx_0xffffffff, mov_rax_qword_ptr_[rax], mov_rax_qword_ptr_[rax], mov_rsi_qword_ptr_[rax+8], call_0xffffffffffff7@@ 6b@@ 7, mov_rdi_qword_ptr_[rbp+0x@@ 88], mov_edx_0xffffffff, lea_rsi_[rip+0x19@@ 89@@ 9], call_0xffffffffffff7@@ 6@@ 9f, mov_rdi_qword_ptr_[rbp+0x@@ 88], mov_rdx_rbx, sub_rdx@@ _r12, mov_rsi_r12, call_0xffffffffffff7@@ 68@@ a, mov_esi_dword_ptr_[rbp+0x@@ 60], mov_rdi_qword_ptr_[rbp+0x@@ 88], call_0xffffffffffff7e@@ 6b, cmp_byte_ptr_[rbx]_0, jne_0x33, pop_rbx, pop_rbp, pop_r12, ret, mov_r12_qword_ptr_[r@@ ax+0x@@ 68], test_r12_r12, je_0xd, cmp_byte_ptr_[r12]_0, jne_0xffffffffffffff@@ 5c, lea_rdi_[rip+0x1b@@ 18@@ 4], call_0xffffffffffff7@@ 76@@ d, mov_r12_rax, jmp_0xffffffffffffff47, mov_rdi_qword_ptr_[rbp+0x@@ 88], mov_edx_0xffffffff, lea_rsi_[rip+0x19@@ 84@@ 5], call_0xffffffffffff7@@ 6@@ 2d, lea_rdx_[r@@ bx+1], pop_rbx, mov_rdi_rbp, pop_rbp, mov_esi_1, pop_r12, jmp_0xffffffffffff@@ a0@@ 98, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, jmp_0xfffffffffffffd@@ 4@@ 9
endbr64, push_rbp, mov_rbp_rdi, push_rbx, lea_rbx_[rip+0x@@ 2a@@ 240], sub_rsp_8, mov_rax_qword_ptr_[rdi+0x@@ 2d0], jmp_0x40, cmp_qword_ptr_[rax+0x10]_0, je_0x3b, mov_rdx_qword_ptr_[rax], test_rdx_rdx, je_0x4b, mov_rdi_qword_ptr_[rax+8], add_rdi_rbp, test_dl_1, je_0xa, mov_rax_qword_ptr_[rdi], mov_rdx_qword_ptr_[r@@ ax@@ +rdx@@ -1], call_rdx, test_al_al, jne_0x31, mov_rax_qword_ptr_[rbp+0x@@ 2d0], add_rax_0x20, mov_qword_ptr_[rbp+0x@@ 2d@@ 0]_rax, test_rax_rax, jne_0xffffffffffffffc2, mov_qword_ptr_[rbp+0x@@ 2d@@ 0]_rbx, mov_rdi_rbp, lea_rdx_[rip-0x@@ 5c@@ 1], jmp_0xffffffffffffffc5, mov_eax_dword_ptr_[rbp+0x@@ 20], test_eax_eax, jne_0x13, add_rsp_8, pop_rbx, pop_rbp, ret, mov_qword_ptr_[rbp+0x@@ e0]_0, mov_rdi_qword_ptr_[rbp+0x@@ 88], call_0xffffffffffff7@@ 24@@ e, mov_rdi_qword_ptr_[rbp+0x@@ 88], xor_edx_edx, xor_esi_esi, call_0xffffffffffff7@@ 19@@ e, mov_rcx_qword_ptr_[rbp+0x@@ 2d0], lea_rax_[rip+0x@@ 2a@@ 18@@ b], sub_rcx_rax, mov_edi_1, xor_eax_eax, sar_rcx@@ _5, mov_rdx_rbp, lea_rsi_[rip+0x1a@@ de@@ 3], call_0x50@@ 53, mov_rax_qword_ptr_[rbp+0x@@ 2d0], mov_rdi_qword_ptr_[rax+0x18], mov_rax_qword_ptr_[rax+0x10], add_rdi_rbp, test_al_1, je_0xa, mov_rdx_qword_ptr_[rdi], mov_rax_qword_ptr_[r@@ dx@@ +rax-1], call_rax, mov_rdx_qword_ptr_[rbp+0x@@ 88], xor_eax_eax, test_rdx_rdx, je_0xd, movsx_eax_word_ptr_[r@@ dx], cmp_word_ptr_[r@@ dx+@@ 2]_1, sbb@@ _eax@@ _-1, mov_dword_ptr_[rbp+0x@@ d@@ 8]_eax, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffff@@ 9b@@ 0@@ 6
push_r12, mov_r12_rdi, call_0xffffffffffffee@@ 9b, call_0xffffffffffffb@@ 46@@ 6, mov_rdx_r12, lea_rsi_[rip+0x1c@@ b0@@ 6], lea_rdi_[rip+0x1d@@ 6b@@ 7], xor_eax_eax, call_0xffffffffffffb@@ 7c@@ e, mov_rdi_qword_ptr_[rip+0x@@ 30@@ b6@@ 2], mov_esi_0x2@@ 00000, call_0xffffffffffffba@@ dd, lea_rdi_[rip+0x1d@@ 6a@@ 2], call_0xffffffffffffb@@ 401, mov_rdi_qword_ptr_[rip+0x@@ 30@@ b4@@ 5], mov_edx_0xffffffff, mov_rsi_rax, call_0xffffffffffffb@@ 2c@@ d, mov_rdi_qword_ptr_[rip+0x@@ 30@@ b@@ 31], xor_esi_esi, call_0xffffffffffffb@@ aa@@ f, call_0xffffffffffffb@@ 8c@@ a, mov_rdi_qword_ptr_[rip+0x@@ 30@@ b@@ 1e], pop_r12, jmp_0xffffffffffffb@@ 49@@ c
sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, cmp_qword_ptr_[rip+0x@@ 30@@ bd@@ c]_0, je_0x1@@ 44, mov_edi_dword_ptr_[rip+0x@@ 30@@ 7@@ 70], cmp_edi_-1, je_0x9d, xor_eax_eax, mov_rdx_rsp, mov_esi_6, mov_dword_ptr_[rsp@@ ]_1, mov_qword_ptr_[rsp+0x10]_0, mov_qword_ptr_[rsp+8]_0, call_0xffffffffffffb@@ 25@@ c, cmp_eax_-1, jne_0x4c, call_0xffffffffffffb@@ 15@@ 2, mov_eax_dword_ptr_[rax], sub_eax@@ _0xb, and_eax_0xfffffffd, jne_0x@@ d5, lea_rdi_[rip+0x1d@@ 7@@ b0], call_0xffffffffffffb@@ 348, mov_rdi_rax, call_0xffffffffffffff@@ 00, mov_eax_1, mov_rcx_qword_ptr_[rsp+0x28], xor_rcx_qword_ptr_fs:[0x28], jne_0x@@ e0, add_rsp_0x38, ret, xor_eax_eax, xor_edx_edx, mov_esi_0xffffffff, lea_rdi_[rip+0x4@@ 98], call_0xb@@ 7@@ 98, xor_eax_eax, jmp_0xffffffffffffffcb, mov_rdi_qword_ptr_[rip+0x@@ 30@@ b@@ 29], mov_edx_0x1@@ b0, mov_esi_0x2@@ 42, xor_eax_eax, call_0xffffffffffffb8@@ 35, mov_dword_ptr_[rip+0x@@ 30@@ 6b@@ 2]_eax, mov_edi_eax, cmp_eax_-1, jne_0xffffffffffffff@@ 46, call_0xffffffffffffb0@@ bf, mov_eax_dword_ptr_[rax], cmp_eax_1, je_0x25, cmp_eax_0xd, je_0x20, lea_rdi_[rip+0x1d@@ 6e@@ f], call_0xffffffffffffb@@ 2b@@ 7, mov_rdi_rax, call_0xfffffffffffffe@@ 6f, mov_eax_1, jmp_0xffffffffffffff6f, lea_rdi_[rip+0x1d@@ 69@@ 9], call_0xffffffffffffb@@ 29@@ 9, mov_rdi_rax, call_0xfffffffffffffe@@ 51, mov_eax_1, jmp_0xffffffffffffff51, lea_rdi_[rip+0x1d@@ 7@@ 11], call_0xffffffffffffb@@ 27@@ 9, mov_rdi_rax, call_0xfffffffffffffe@@ 31, mov_eax_1, jmp_0xffffffffffffff31, lea_rdi_[rip+0x1d@@ 5@@ 16], call_0x7e@@ 79, mov_qword_ptr_[rip+0x@@ 30@@ a@@ 85@@ ]_rax, jmp_0xfffffffffffffea@@ f, call_0xffffffffffffb@@ 21@@ 8
push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, call_0xfffffffffffff2f@@ 6, mov_rdi_qword_ptr_[rbp], call_0x1@@ 1b@@ 5d, call_0x1@@ 1c@@ a8, test_eax_eax, je_0xd5, mov_rsi_qword_ptr_[rip+0x@@ 30@@ 9a@@ 4], mov_edi_0xa, mov_r12d_eax, call_0xffffffffffffb@@ 3@@ 9c, mov_rsi_qword_ptr_[rbp], mov_edx_1, mov_edi_r12d, call_0x1@@ 1c@@ eb, mov_ebp_eax, call_0x1@@ 1c@@ 64, test_ebp_ebp, je_0x8d, lea_rdi_[rip+0x1d@@ 4a@@ 6], call_0xffffffffffffb@@ 1e0, mov_rdi_qword_ptr_[rip+0x@@ 30@@ 96@@ 4], mov_rdx_rax, mov_esi_1, xor_eax_eax, call_0xffffffffffffb@@ 7d@@ a, lea_rdi_[rip+0x1d@@ 4a0], call_0xffffffffffffb@@ 1b@@ e, mov_rdi_qword_ptr_[rip+0x@@ 30@@ 94@@ 2], mov_rsi_rax, call_0xc@@ 5@@ 9f, mov_rdi_qword_ptr_[rip+0x@@ 30@@ 6d@@ 9], call_0xffffffffffffb@@ 2b@@ 9, cmp_eax_-1, je_0x11, cmp_eax_0xa, jne_0xffffffffffffffec, mov_eax_1, jmp_0x31, call_0xffffffffffffa@@ f70, cmp_dword_ptr_[rax@@ ]_4, je_0xffffffffffffffd8, lea_rdi_[rip+0x1d@@ 6@@ 27], call_0xffffffffffffb@@ 16@@ f, mov_rdi_rax, xor_eax_eax, call_0xb@@ 15@@ 5, mov_edi_1, call_0xffffffffffffb@@ 7c@@ b, xor_eax_eax, add_rsp_8, pop_rbp, pop_r12, ret, xor_edi_edi, xor_esi_esi, call_0x1@@ 19@@ 68, mov_rdi_rbp, call_0x7c@@ 2@@ 0
push_r12, mov_rdx_rdi, mov_r12_rsi, push_rbp, lea_rsi_[rip+0x1c@@ 84@@ e], sub_rsp_0x38, mov_rbp_rsp, mov_rdi_rbp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0x7@@ 88@@ 6, call_0x7d@@ 11, sub_rsp_8, push_0, mov_rcx_rax, mov_r9_r12, lea_r8_[rip+0x@@ 1d@@ 3d@@ c], xor_eax_eax, lea_rdx_[rip+0x1d@@ 3@@ dd], lea_rsi_[rip+0x1c@@ 80@@ 7], mov_rdi_rbp, call_0x7a@@ f6, call_0xfffffffffffff@@ 19@@ 1, mov_rdx_r12, lea_rsi_[rip+0x1d@@ 5b@@ a], mov_edi_1, xor_eax_eax, call_0xffffffffffffb@@ 54@@ b, mov_rdi_qword_ptr_[rip+0x@@ 30@@ 5e@@ 7], call_0xffffffffffffb@@ 42@@ f, mov_rdi_rbp, call_0xfffffffffffffe@@ 67, mov_rdi_rbp, mov_r12d_eax, call_0x7@@ 86@@ c, pop_rax, pop_rdx, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0xd, add_rsp_0x38, pop_rbp, mov_eax_r12d, pop_r12, ret, call_0xffffffffffffb0@@ 4@@ a
push_r12, push_rbp, push_rbx, sub_rsp_0x20, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, cmp_qword_ptr_[rip+0x@@ 30@@ 8a@@ 0]_0, je_0x20, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x9e, add_rsp_0x20, pop_rbx, pop_rbp, pop_r12, ret, mov_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0xc]_0, lea_rbx_[rip+0x@@ 2d@@ a@@ c8], lea_rdi_[rip+0x1d@@ 3@@ 19], lea_r12_[rsp+0x@@ c], lea_rbp_[rsp+0x10], mov_rdx_r12, mov_rsi_rbp, add_rbx_8, call_0x4@@ d6, mov_rdi_qword_ptr_[rbx], test_rdi_rdi, jne_0xffffffffffffffeb, mov_rax_qword_ptr_[rsp+0x10], test_rax_rax, je_0x21, mov_qword_ptr_[rip+0x@@ 30@@ 8@@ 28]_rax, mov_eax_dword_ptr_[rsp+0xc], mov_dword_ptr_[rip+0x@@ 30@@ 8@@ 26@@ ]_eax, xor_eax_eax, jmp_0xffffffffffffff7e, lea_rdi_[rip+0x1d@@ 4d@@ 1], call_0xffffffffffffa@@ fb@@ 9, mov_rdi_rax, call_0xfffffffffffffb@@ 71, mov_eax_1, jmp_0xffffffffffffff59, call_0xffffffffffffa@@ f7@@ 2
push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, call_0xffffffffffffff@@ 00, test_eax_eax, je_0x29, mov_rcx_qword_ptr_[rsp+0x38], xor_rcx_qword_ptr_fs:[0x28], jne_0x@@ e4, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, call_0xfffffffffffffb@@ 80, test_eax_eax, jne_0xffffffffffffffd2, call_0xd@@ 77, mov_rax_qword_ptr_[rip+0x@@ 30@@ 77@@ 3], test_rax_rax, je_0x98, mov_rax_qword_ptr_[rax+8], mov_rsi_rbp, mov_rdi_qword_ptr_[rax+0x20], lea_r13_[rsp+0x10], call_0xffffffffffffad@@ 52, mov_rax_qword_ptr_[rip+0x@@ 30@@ 74@@ e], mov_rdx_r12, mov_rax_qword_ptr_[rax+8], mov_rdi_r13, mov_rsi_qword_ptr_[rax+0x18], call_0x7@@ 67@@ 8, mov_rax_qword_ptr_[rip+0x@@ 30@@ 7@@ 34], mov_rbx_qword_ptr_[r@@ ax+0x18], mov_rax_qword_ptr_[rax+8], mov_r12_qword_ptr_[r@@ ax+0x10], call_0x7a@@ f0, mov_rdx_rax, xor_r9d_r9d, mov_r8_rbx, mov_rcx_r12, mov_rsi_rbp, mov_rdi_r13, xor_eax_eax, call_0x7@@ 8e@@ 7, mov_rdi_r13, call_0xfffffffffffffc@@ 7f, mov_rdi_r13, mov_dword_ptr_[rsp+0xc]_eax, call_0x7@@ 68@@ 3, mov_eax_dword_ptr_[rsp+0xc], mov_edi_1, mov_dword_ptr_[rsp+0xc]_eax, call_0xaa@@ 61, mov_eax_dword_ptr_[rsp+0xc], jmp_0xffffffffffffff31, lea_rdi_[rip+0x1d@@ 3c@@ 1], call_0xffffffffffffae@@ 89, mov_rdi_rax, call_0xfffffffffffffa@@ 41, mov_eax_1, jmp_0xffffffffffffffcd, call_0xffffffffffffa@@ e4@@ 5
endbr64, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, cmp_qword_ptr_[rip+0x@@ 30@@ 68@@ 8]_0, je_0x92, mov_edi_dword_ptr_[rip+0x@@ 30@@ 2@@ 1c], test_edi_edi, js@@ _0x60, xor_eax_eax, mov_rdx_rsp, mov_esi_6, mov_dword_ptr_[rsp@@ ]_2, mov_qword_ptr_[rsp+0x10]_0, mov_qword_ptr_[rsp+8]_0, call_0xffffffffffffa@@ d0@@ d, cmp_eax_-1, je_0x1d, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x66, add_rsp_0x38, ret, lea_rdi_[rip+0x1d@@ 35@@ 9], call_0xffffffffffffad@@ f1, mov_rdi_rax, call_0xfffffffffffff9a@@ 9, jmp_0xffffffffffffffd1, mov_r8d_edi, lea_rcx_[rip+0x@@ 1d@@ 13@@ 7], lea_rdx_[rip+0x1d@@ 108], mov_esi_0x4@@ c, lea_rdi_[rip+0x1d@@ 10@@ c], xor_eax_eax, call_0xaa@@ 93, lea_rcx_[rip+0x@@ 1d@@ 0@@ d5], lea_rdx_[rip+0x1d@@ 0@@ e7], mov_esi_0x4@@ a, lea_rdi_[rip+0x1d@@ 0@@ eb], call_0xaa@@ 74, call_0xffffffffffffa@@ d6@@ f
endbr64, sub_rsp_8, lea_rdi_[rip+0x1d@@ 0@@ f9], call_0xffffffffffffad@@ 81, mov_rsi_rax, lea_rdi_[rip+0x1c@@ 5d0], add_rsp_8, jmp_0xfffffffffffffdd@@ e
endbr64, sub_rsp_8, lea_rdi_[rip+0x1d@@ 0@@ e6], call_0xffffffffffffad@@ 51, mov_rsi_rax, lea_rdi_[rip+0x2@@ 18@@ 85], add_rsp_8, jmp_0xfffffffffffffd@@ a@@ e
endbr64, lea_rsi_[rip+0x1d@@ 0@@ d3], lea_rdi_[rip+0x1d@@ 0@@ c7], jmp_0xfffffffffffffb@@ e@@ e
endbr64, lea_rsi_[rip+0x1d@@ 0@@ c1], lea_rdi_[rip+0x1d@@ 0@@ b5], jmp_0xfffffffffffffb@@ c@@ e
endbr64, push_r12, push_rbp, push_rbx, sub_rsp_0x40, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, call_0xfffffffffffffc@@ 64, test_eax_eax, je_0x25, mov_rcx_qword_ptr_[rsp+0x38], xor_rcx_qword_ptr_fs:[0x28], jne_0x12@@ 1, add_rsp_0x40, pop_rbx, pop_rbp, pop_r12, ret, call_0xfffffffffffff8e@@ 8, test_eax_eax, jne_0xffffffffffffffd6, call_0xa@@ df, call_0xffffffffffffe@@ 6f@@ a, mov_edi_0x1@@ b8, call_0xffffffffffffb6@@ 20, mov_rbp_rax, mov_rdi_rax, call_0xfffffffffffff2d@@ 5, mov_rdi_rbp, call_0xfffffffffffff48@@ d, mov_ebx_eax, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x@@ 60], mov_eax_1, cmp_ebx_1, je_0x1c, mov_edi_1, mov_dword_ptr_[rsp+0xc]_eax, call_0xa@@ 8@@ 19, mov_eax_dword_ptr_[rsp+0xc], jmp_0xffffffffffffff85, mov_rax_qword_ptr_[rip+0x@@ 30@@ 48@@ 9], mov_edx@@ _0x70, mov_rax_qword_ptr_[rax+8], lea_rdi_[rip+0x1c@@ ff@@ 9], mov_rax_qword_ptr_[rax+0x20], lea_rbp_[rsp+0x10], mov_word_ptr_[rax+@@ 4]_dx, mov_dword_ptr_[rax]@@ _0x7@@ 57@@ 46@@ 57@@ 3, call_0xffffffffffffac@@ 1e, mov_rdx_rax, mov_rax_qword_ptr_[rip+0x@@ 30@@ 45@@ 7], mov_rdi_rbp, mov_rax_qword_ptr_[rax+8], mov_rsi_qword_ptr_[rax+0x18], call_0x7@@ 38@@ 4, mov_rax_qword_ptr_[rip+0x@@ 30@@ 440], mov_rbx_qword_ptr_[r@@ ax+0x18], mov_rax_qword_ptr_[rax+8], mov_r12_qword_ptr_[r@@ ax+0x10], call_0x77@@ fc, mov_rdx_rax, xor_r9d_r9d, mov_r8_rbx, mov_rcx_r12, lea_rsi_[rip+0x1c@@ fa@@ f], mov_rdi_rbp, xor_eax_eax, call_0x7@@ 5e@@ f, mov_rdi_rbp, call_0xfffffffffffff98@@ 7, mov_rdi_rbp, mov_dword_ptr_[rsp+0xc]_eax, call_0x7@@ 38@@ b, mov_eax_dword_ptr_[rsp+0xc], test_eax_eax, jne_0xffffffffffffff@@ 4e, call_0xc@@ 7a, mov_eax_dword_ptr_[rsp+0xc], jmp_0xffffffffffffff3f, call_0xffffffffffffa@@ b6@@ c
push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, lea_rdi_[rip+0x1d@@ 110], sub_rsp_8, call_0xffffffffffffab@@ 7c, mov_rdi_rax, mov_rdx_r12, mov_rsi_rbp, xor_eax_eax, call_0xaa@@ 8@@ c
push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, mov_rdi_rsi, sub_rsp_8, call_0xffffffffffffa@@ 9c0, test_eax_eax, je_0x1b, lea_rdi_[rip+0x1d@@ 108], call_0xffffffffffffab@@ 40, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xa@@ b@@ 23, mov_rsi_r12, mov_rdi_rbp, call_0xffffffffffffff@@ 9@@ 8
endbr64, push_r15, push_r14, mov_r14_rdi, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x1@@ 38, mov_qword_ptr_[rsp+0x38]_rdx, mov_qword_ptr_[rsp+8]_rdi, mov_qword_ptr_[rsp+0x3@@ 0]_rsi, lea_r15_[rsp+0x@@ 70], xor_esi_esi, mov_rdi_r15, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 28]_rax, xor_eax_eax, call_0x13@@ 8d@@ c, mov_rdi_r14, call_0xffffffffffffaa@@ 94, lea_edi_[r@@ ax+0x@@ 64], movsxd_rdi_edi, add_rdi_0x10, mov_rbx_rax, mov_dword_ptr_[rsp+0x@@ 64]_eax, call_0xffffffffffffb@@ 45@@ e, mov_rdi_rax, mov_rsi_r14, mov_r13_rax, call_0xffffffffffffa@@ 8f@@ 0, movsxd_rax_ebx, mov_r9d@@ _0x2f, mov_word_ptr_[r@@ 13@@ +rax]@@ _r9w, mov_rdi_r13, mov_qword_ptr_[rsp+0x58]_rax, call_0xffffffffffffa@@ 9f@@ 4, mov_qword_ptr_[rsp+0x48]_rax, test_rax_rax, je_0x6@@ 82, mov_rax_qword_ptr_[rsp+0x58], mov_rdx_qword_ptr_[rsp+8], lea_rax_[r@@ 13@@ +rax+1], mov_qword_ptr_[rsp+0x68]_rax, lea_rsi_[rip+0x1d@@ 0@@ 8e], mov_edi_1, xor_eax_eax, call_0x86@@ af, mov_qword_ptr_[rsp+0x1@@ 8]_r13, mov_rdi_qword_ptr_[rsp+0x48], call_0xffffffffffffad@@ 5b, mov_rbx_rax, test_rax_rax, je_0x6@@ 9a, movsx@@ _r12d@@ _byte_ptr_[r@@ ax+0x13], lea_rbp_[r@@ ax+0x13], mov_rdx_qword_ptr_[rsp+8], xor_eax_eax, mov_rcx_rbp, lea_rsi_[rip+0x1d@@ 0@@ 70], mov_edi_1, call_0x86@@ 6b, cmp_r12d@@ _0x5f, je_0x13, mov_esi_0x18, mov_edi_r12d, call_0x70@@ c8, test_al_al, je_0xffffffffffffff@@ b1, lea_r12_[r@@ bx+0x14], movsx_ebx@@ _byte_ptr_[r@@ bx+0x14], test_ebx_ebx, je_0x27, mov_esi@@ _0x38, mov_edi_ebx, call_0x70@@ a9, cmp_ebx@@ _0x5f, je_0xffffffffffffff@@ 91, test_al_al, je_0xffffffffffffff@@ 8d, movsx_ebx@@ _byte_ptr_[r@@ 12+1], inc_r12, test_ebx_ebx, jne_0xffffffffffffffe0, mov_rdi_rbp, call_0xffffffffffffa@@ 98@@ b, mov_r12_rax, cmp_eax@@ _0x32, jg@@ _0x7@@ 39, mov_r14@@ _qword_ptr_[rsp+0x68], mov_rsi_rbp, mov_rdi_r14, lea_rdx_[r@@ 12+1], call_0xffffffffffffac@@ 7a, movsxd_rbx@@ _r12d, mov_r8d@@ _0x2f, mov_word_ptr_[r@@ 14+r@@ bx]@@ _r8w, lea_r13_[r@@ 14+r@@ bx+1], lea_r14_[rip+0x@@ 2d@@ 45@@ b], mov_qword_ptr_[rsp+0x10]_rbx, mov_rbx_r14, mov_r14_qword_ptr_[rsp+0x18], lea_rsi_[rip+0x1c@@ d5@@ 2], mov_rdi_r13, call_0xffffffffffffa@@ 7a@@ d, mov_esi_5, mov_rdi_r14, call_0xffffffffffffa@@ ec0, test_eax_eax, jne_0x7@@ 19, mov_rsi_qword_ptr_[rbx+8], add_rbx_8, test_rsi_rsi, jne_0xffffffffffffffd8, mov_rdx_qword_ptr_[rsp+8], lea_rsi_[rip+0x1d@@ 0@@ 22], mov_edi_1, xor_eax_eax, mov_rbx_qword_ptr_[rsp+0x10], call_0x8@@ 57@@ e, mov_edi_0x7@@ 3, mov_word_ptr_[r@@ 13+@@ 4@@ ]_di, mov_dword_ptr_[r13@@ ]@@ _0x6@@ 56@@ d6@@ 16@@ e, mov_rdi_qword_ptr_[rsp+0x18], lea_rsi_[rip+0x19@@ 9@@ 90], call_0xffffffffffffae@@ 7b, mov_r14_rax, test_rax_rax, je_0x7@@ 21, mov_edi_0x28, call_0xffffffffffffb@@ 28@@ 5, mov_rdi_rbp, mov_qword_ptr_[rsp+0x20]_rax, call_0xffffffffffffa@@ 8a@@ 8, lea_rdi_[rax+1], call_0xffffffffffffb@@ 27@@ f, mov_rdi_rax, mov_rax_qword_ptr_[rsp+0x20], mov_rsi_rbp, mov_qword_ptr_[rax+0x1@@ 0]_rdi, call_0xffffffffffffa@@ 70b, mov_ecx_dword_ptr_[rsp+0x@@ 64], lea_ebp_[r@@ cx+r@@ 12+1], lea_edi_[r@@ bp+0x@@ 34], movsxd_rdi_edi, call_0xffffffffffffb@@ 25@@ 7, mov_r12_qword_ptr_[rsp+0x20], mov_rsi_qword_ptr_[rsp+0x18], mov_qword_ptr_[r12+0x1@@ 8]_rax, movsxd_rdx_ebp, mov_rdi_rax, call_0xffffffffffffa@@ 6b@@ d, add_rbx@@ _qword_ptr_[rsp+0x58], mov_esi_0x2f, lea_r9@@ _[rax+r@@ bx+2], mov_word_ptr_[r@@ ax+r@@ bx+@@ 1@@ ]_si, mov_r8_rax, mov_rax_qword_ptr_[rip+0x3@@ 00@@ ba], mov_qword_ptr_[r12+0x@@ 20]@@ _r9, mov_qword_ptr_[r12]_rax, mov_qword_ptr_[r12@@ +8]_0, test_rax_rax, je_6, mov_qword_ptr_[rax+@@ 8]_r12, mov_rax_qword_ptr_[rsp+0x20], mov_rdx_qword_ptr_[rsp+8], mov_rcx_qword_ptr_[rax+0x10], mov_qword_ptr_[rip+0x3@@ 00@@ 8a@@ ]_rax, lea_rsi_[rip+0x1c@@ f8@@ 3], xor_eax_eax, mov_edi_1, call_0x8@@ 48@@ c, lea_rax_[r@@ 13+@@ 5], mov_qword_ptr_[rsp+0x40]_rax, lea_rax_[rsp+0x90], mov_qword_ptr_[rsp+0x50]_rax, mov_qword_ptr_[rsp+0x10]@@ _r13, mov_rdi_r14, call_0xffffffffffffa@@ 93@@ 5, mov_ebp_eax, cmp_eax_-1, je_0x3@@ c8, mov_esi_4, mov_edi_eax, call_0x6@@ eb@@ e, test_al_al, jne_0xffffffffffffffdf, mov_edi_0x30, call_0xffffffffffffb@@ 180, mov_rbx_rax, mov_rax_qword_ptr_[rsp+0x20], mov_qword_ptr_[rsp+0x70]_0, mov_qword_ptr_[rbx+8]_rax, mov_esi_0x20, mov_edi_ebp, call_0x6e@@ 89, test_al_al, je_0x4@@ c6, mov_esi_ebp, mov_rdi_r15, call_0x1@@ 36@@ 67, mov_rdi_r14, call_0xffffffffffffa@@ 8c@@ f, mov_ebp_eax, cmp_eax_-1, je_0x4@@ 9b, mov_esi_4, mov_edi_eax, call_0x6e@@ 58, test_al_al, je_0xffffffffffffffc1, mov_rdi_r15, call_0x1@@ 38@@ bc, mov_rdi_rax, call_0xffffffffffffa@@ 74@@ 4, cmp_rax@@ _5, ja_0x5@@ 53, mov_rdi_r15, call_0x1@@ 38@@ a2, lea_r12_[r@@ bx+0x10], mov_rsi_rax, mov_edx_5, mov_rdi_r12, call_0xffffffffffffa@@ bb@@ e, cmp_ebp@@ _0xa, je_0x3@@ d0, mov_rdi_r14, call_0xffffffffffffa8@@ 64, mov_ebp_eax, cmp_eax_-1, je_0x3@@ d9, mov_esi_4, mov_edi_eax, call_0x6d@@ ed, test_al_al, jne_0xffffffffffffffd6, mov_esi_0x18, mov_edi_ebp, mov_qword_ptr_[rsp+0x70]_0, call_0x6@@ dd@@ 4, test_al_al, jne_0xd, cmp_ebp@@ _0x5f, jne_0x4@@ fc, mov_esi@@ _0x38, mov_edi_ebp, call_0x6d@@ b9, cmp_ebp@@ _0x5f, je_0xa, cmp_al_1, jne_0x40@@ d, mov_esi_ebp, mov_rdi_r15, call_0x1@@ 35@@ 92, mov_rdi_r14, call_0xffffffffffffa@@ 7f@@ a, mov_ebp_eax, cmp_eax_-1, je_0x3@@ 8e, mov_esi_4, mov_edi_eax, call_0x6d@@ 83, test_al_al, je_0xffffffffffffff@@ bc, mov_rdi_r15, call_0x1@@ 37@@ e7, mov_rdi_rax, call_0xffffffffffffa@@ 66@@ f, lea_rdi_[rax+1], call_0xffffffffffffb0@@ 46, mov_qword_ptr_[rbx+0x18]_rax, mov_rdi_r15, call_0x1@@ 37@@ ca, mov_rdi_qword_ptr_[rbx+0x18], mov_rsi_rax, call_0xffffffffffffa@@ 4c@@ e, cmp_ebp@@ _0xa, je_0x3@@ 49, mov_rdi_r14, call_0xffffffffffffa7@@ 94, mov_ebp_eax, cmp_eax_-1, je_0x3@@ 52, mov_esi_4, mov_edi_eax, call_0x6d@@ 1d, test_al_al, jne_0xffffffffffffffd6, mov_qword_ptr_[rsp+0x70]_0, mov_esi_ebp, mov_rdi_r15, call_0x1@@ 34@@ ed, mov_rdi_r14, call_0xffffffffffffa@@ 75@@ 5, mov_esi_eax, cmp_eax_-1, je_0x3@@ 67, cmp_eax_0xa, jne_0xffffffffffffffe2, mov_rdi_r15, call_0x1@@ 37@@ 4d, mov_rdi_rax, call_0xffffffffffffa@@ 5d@@ 5, lea_rdi_[rax+1], call_0xffffffffffffa@@ fa@@ c, mov_qword_ptr_[rbx+0x20]_rax, mov_rdi_r15, call_0x1@@ 37@@ 30, mov_rdi_qword_ptr_[rbx+0x20], mov_rsi_rax, call_0xffffffffffffa@@ 4@@ 34, mov_rax_qword_ptr_[rsp+0x10], mov_ecx@@ _0x2e, mov_word_ptr_[rax+@@ 4@@ ]_cx, mov_dword_ptr_[rax]@@ _0x6@@ 37@@ 36@@ 5@@ 64, mov_rsi_qword_ptr_[rbx+0x18], mov_rdi_qword_ptr_[rsp+0x40], call_0xffffffffffffa@@ 4@@ 12, mov_rdi_qword_ptr_[rsp+0x18], lea_rsi_[rip+0x19@@ 64@@ 6], call_0xffffffffffffab@@ 31, mov_rbp_rax, test_rax_rax, je_0x1@@ 96, mov_rdi_rax, call_0xffffffffffffa8@@ 9d, mov_rdx_qword_ptr_[rsp+0x50], mov_esi_eax, mov_edi_1, call_0xffffffffffffa@@ 93@@ c, test_eax_eax, jne_0x2@@ e2, mov_rax_qword_ptr_[rsp+0xc0], lea_rdi_[rax+1], call_0xffffffffffffaf@@ 23, mov_qword_ptr_[rbx+0x28]_rax, mov_qword_ptr_[rsp+0x28]_rax, call_0xffffffffffffa@@ 36@@ 5, mov_dword_ptr_[rax]_0, mov_r13@@ _qword_ptr_[rsp+0x@@ c0], mov_rdi_qword_ptr_[rsp+0x28], lea_rdx_[r@@ 13+1], mov_rcx_rbp, mov_esi_1, call_0xffffffffffffa@@ 4@@ 11, cmp_r13_rax, jne_0x2@@ f1, mov_rdx_qword_ptr_[rbx+0x28], mov_rax_qword_ptr_[rsp+0xc0], mov_rdi_rbp, mov_byte_ptr_[rdx+rax]_0, call_0xffffffffffffa@@ 3a0, test_eax_eax, jne_0x2@@ 94, mov_rdi_rbp, call_0xffffffffffffa@@ 47@@ 0, mov_rax_qword_ptr_[rsp+0x10], mov_edx_0x7@@ 3, mov_word_ptr_[rax+@@ 4]_dx, mov_dword_ptr_[rax]@@ _0x6@@ 56@@ d6@@ 16@@ e, mov_rdi_qword_ptr_[rbx+0x28], mov_rax_qword_ptr_[rbx+8], lea_rdx_[rip+0x1d@@ 00@@ 5], mov_rsi_qword_ptr_[rax+0x20], mov_r13_qword_ptr_[r@@ ax+0x18], mov_rbp_qword_ptr_[r@@ ax+0x10], mov_rax_-1, test_rdi_rdi, je_0x18, mov_qword_ptr_[rsp+0x28]_rsi, call_0xffffffffffffa@@ 4@@ 9b, mov_rsi_qword_ptr_[rsp+0x28], lea_rdx_[rip+0x1c@@ fd@@ 1], sub_rsp_8, push_rsi, mov_rcx_r12, lea_rsi_[rip+0x1c@@ db@@ 3], push_r13, mov_edi_1, push_rbp, push_rax, xor_eax_eax, push_rdx, mov_rdx_qword_ptr_[rsp+0x38], mov_r9_qword_ptr_[r@@ bx+0x20], mov_r8_qword_ptr_[r@@ bx+0x18], call_0x80@@ f2, mov_rbp@@ _qword_ptr_[rsp+0x60], add_rsp_0x30, mov_r13_qword_ptr_[r@@ bp], test_r13_r13, jne_0x19, jmp_0x@@ cd, mov_rbp_r13, mov_r13_qword_ptr_[r@@ 13], test_r13_r13, je_0x12, lea_rsi_[r@@ 13+0x10], mov_rdi_r12, call_0xffffffffffffa@@ 6a@@ d, test_eax_eax, jg_0xffffffffffffff@@ e6, mov_rax_qword_ptr_[rsp+0x38], mov_qword_ptr_[rbx@@ ]_r13, mov_qword_ptr_[rbp]_rbx, inc_dword_ptr_[r@@ ax], mov_rdi_r14, call_0xffffffffffffa@@ 57@@ 3, mov_ebp_eax, cmp_eax_-1, jne_0xfffffffffffffc@@ 44, mov_rdi_r14, call_0xffffffffffffa@@ 2b0, test_eax_eax, jne_0x2@@ 49, mov_rdi_r14, call_0xffffffffffffa@@ 380, jmp_0xfffffffffffff9d@@ b, call_0xffffffffffffa@@ 210, cmp_dword_ptr_[rax]_2, jne_0x1@@ b2, mov_qword_ptr_[rbx+0x28]_0, jmp_0xfffffffffffffeef, call_0xffffffffffffa@@ 1f@@ 5, cmp_dword_ptr_[rax]_2, jne_0x1@@ c9, mov_rdi_r13, call_0xffffffffffffa@@ dc@@ 4, mov_rdi_r15, call_0x1@@ 35@@ fc, mov_rax_qword_ptr_[rsp+0x1@@ 28], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ 8c, add_rsp_0x1@@ 38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rbp@@ _qword_ptr_[rsp+0x30], mov_rax_qword_ptr_[rsp+0x38], mov_qword_ptr_[rbx@@ ]_r13, mov_qword_ptr_[rbp]_rbx, inc_dword_ptr_[r@@ ax], jmp_0xffffffffffffff55, mov_rdi_qword_ptr_[rsp+0x48], mov_r13_qword_ptr_[r@@ sp+0x18], call_0xffffffffffffa@@ 4f@@ c, mov_rdx_qword_ptr_[rsp+8], lea_rsi_[rip+0x1c@@ f5@@ 5], mov_edi_1, xor_eax_eax, call_0x7@@ fd@@ 4, jmp_0xffffffffffffff88, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ af@@ 9], call_0xffffffffffffa@@ 37@@ 1, mov_rsi_rax, mov_rdi_r13, call_0xfffffffffffff7d@@ 6, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ b0@@ 5], call_0xffffffffffffa@@ 35@@ 5, mov_rdx_rax, mov_rsi_r14, mov_rdi_r13, call_0xfffffffffffff7e@@ 7, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ eb@@ 3], jmp_0xffffffffffffffe1, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ ec0], call_0xffffffffffffa@@ 328, mov_rsi_rax, mov_rdi_r13, call_0xfffffffffffff78@@ d, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ e@@ bb], jmp_0xffffffffffffffb7, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ e@@ 2d], jmp_0xffffffffffffffa9, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ e0@@ 2], call_0xffffffffffffa@@ 2f@@ 0, mov_rsi_rax, mov_rdi_r13, call_0xfffffffffffff75@@ 5, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ e@@ 35], call_0xffffffffffffa@@ 2d@@ 4, mov_rsi_rax, mov_rdi_r13, call_0xfffffffffffff7@@ 39, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ a@@ b8], jmp_0xffffffffffffff63, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ b0@@ 7], call_0xffffffffffffa@@ 2a@@ 7, mov_rdi_rax, mov_rsi_r13, xor_eax_eax, call_0xa@@ 28@@ a, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ b4@@ 9], jmp_0xffffffffffffffe2, lea_rdi_[rip+0x1c@@ 900], call_0xffffffffffffa@@ 280, mov_rdi_rax, mov_ecx@@ _0x32, mov_edx_r12d, mov_rsi_rbp, xor_eax_eax, call_0xa@@ 18@@ b, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ a8@@ a], jmp_0xffffffffffffffb3, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ ad@@ c], jmp_0xffffffffffffffa5, call_0xffffffffffffa@@ 2@@ 1a, mov_r13_r14, lea_rdi_[rip+0x1c@@ 8f@@ 6], jmp_0xffffffffffffff8f, lea_rdi_[rip+0x1c@@ 8@@ 1d], jmp_0xffffffffffffff86, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ d6@@ 7], call_0xffffffffffffa@@ 2@@ 1c, mov_rsi_rax, mov_rdi_r13, call_0xfffffffffffff68@@ 1, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ 9d@@ 8], call_0xffffffffffffa@@ 200, mov_rsi_rax, mov_rdi_r13, call_0xfffffffffffff66@@ 5, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ b@@ 6c], jmp_0xffffffffffffff3d, mov_r13_qword_ptr_[r@@ sp+0x18], lea_rdi_[rip+0x1c@@ 8e@@ 3], jmp_0xffffffffffffff2@@ c
endbr64, push_r12, push_rbp, push_rbx, sub_rsp_0x70, mov_rdi_qword_ptr_[rip+0x2@@ fa@@ 0d], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x68]_rax, xor_eax_eax, test_rdi_rdi, je_0x2@@ 4a, lea_rsi_[rip+0x19@@ 2@@ 12], mov_qword_ptr_[rip+0x2@@ f@@ 9c@@ a]_0, call_0xffffffffffffa@@ 6f@@ 2, mov_rbp_rax, test_rax_rax, je_0x1@@ f7, lea_rsi_[rip+0x1c@@ d@@ 58], mov_edi_1, xor_eax_eax, mov_rbx_rsp, call_0x7d@@ b0, mov_rdi_rbx, mov_rdx_rbp, mov_esi_0x6@@ 7, call_0xffffffffffffa@@ 330, mov_rdi_rbp, test_rax_rax, je_0x1@@ a5, call_0xffffffffffffa@@ 25@@ f, mov_rdi_rbp, cmp_eax_-1, jne_0x1@@ 94, call_0xffffffffffffa@@ 3b@@ e, test_eax_eax, je_0x1@@ 7f, lea_rsi_[rip+0x1c@@ d@@ 26], mov_edi_1, xor_eax_eax, call_0x7d@@ 63, mov_rdi_rbp, call_0xffffffffffffa0@@ 5b, lea_rsi_[rip+0x1c@@ d@@ 28], mov_edi_1, xor_eax_eax, call_0x7d@@ 48, mov_rdx_rbx, mov_ecx_dword_ptr_[rdx], add_rdx_4, lea_eax_[rcx-0x1010101], not_ecx, and_eax_ecx, and_eax_0x80808080, je_0xffffffffffffffeb, mov_ecx_eax, shr_ecx_0x10, test_eax_0x8080, cmove_eax_ecx, lea_rcx_[rdx+2], cmove_rdx_rcx, mov_esi_eax, add_sil@@ _al, sbb_rdx_3, sub_rdx_rbx, je_0x11d, dec@@ _edx, movsxd_rdx_edx, cmp_byte_ptr_[r@@ sp@@ +rdx]@@ _0xa, jne_0x10@@ e, lea_rsi_[rip+0x1c@@ a@@ 8c], mov_edi_1, xor_eax_eax, mov_byte_ptr_[rsp@@ +rdx]_0, call_0x7c@@ e1, mov_esi_0x20, mov_rdi_rbx, call_0xffffffffffffa0@@ a4, mov_r12_rax, test_rax_rax, je_0xde, lea_rsi_[rip+0x1c@@ a@@ 8c], mov_edi_1, xor_eax_eax, call_0x7c@@ b5, mov_byte_ptr_[r@@ 12]_0, mov_rdx_rbx, lea_rsi_[rip+0x1c@@ a@@ 91], mov_edi_1, xor_eax_eax, call_0x7c@@ 9a, mov_rbp_qword_ptr_[rip+0x2@@ f@@ 87@@ e], test_rbp_rbp, jne_0x18, jmp_0x@@ 9e, mov_rbp_qword_ptr_[rbp], test_rbp_rbp, je_0x8e, mov_rsi_qword_ptr_[rbp+0x10], mov_rdi_rbx, call_0xffffffffffffa@@ 25@@ c, test_eax_eax, jne_0xffffffffffffffe5, inc_r12, mov_rdx_r12, lea_rsi_[rip+0x1c@@ a@@ 96], mov_edi_1, xor_eax_eax, call_0x7c@@ 4f, mov_rbx_qword_ptr_[rip+0x2@@ f@@ 84@@ 3], test_rbx_rbx, jne_0x10, jmp_0x5@@ 3, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, je_0x47, cmp_qword_ptr_[rbx+@@ 8]_rbp, jne_0xfffffffffffffff4, mov_rsi_qword_ptr_[rbx+0x18], mov_rdi_r12, call_0xffffffffffffa@@ 2@@ 13, test_eax_eax, jne_0xffffffffffffffe4, lea_rsi_[rip+0x1c@@ a@@ 2b], mov_edi_1, xor_eax_eax, call_0x7@@ c0@@ c, mov_qword_ptr_[rip+0x2@@ f7@@ f@@ 8]_rbx, jmp_0x15, mov_rdi_rbp, call_0xffffffffffff9e@@ f0, mov_rax_qword_ptr_[rsp+0x68], xor_rax_qword_ptr_fs:[0x28], jne_0x58, add_rsp@@ _0x70, pop_rbx, pop_rbp, pop_r12, ret, call_0xffffffffffff9d@@ 70, cmp_dword_ptr_[rax]_2, je_0xffffffffffffffdd, mov_rbp_qword_ptr_[rip+0x2@@ f7@@ cf], lea_rdi_[rip+0x1c@@ 9@@ 28], call_0xffffffffffff9f@@ 68, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x9f@@ 4b, lea_rdi_[rip+0x1c@@ b@@ 2e], call_0x6b@@ 69, mov_qword_ptr_[rip+0x2@@ f7@@ 9d@@ ]_rax, mov_rdi_rax, jmp_0xfffffffffffffd@@ a6, call_0xffffffffffff9@@ f0@@ 5
endbr64, mov_rdi_qword_ptr_[rip+0x2@@ f7@@ 85], push_rbp, test_rdi_rdi, je_0x5c, xor_esi_esi, call_0x6@@ 28@@ d, mov_rdi_rax, mov_rbp_rax, call_0x6@@ 2e@@ 2, mov_rax_qword_ptr_[rip+0x2@@ f7@@ 4e], mov_rdi_qword_ptr_[rbp+0x18], mov_rdx_qword_ptr_[rax+8], mov_r8_qword_ptr_[r@@ ax+0x18], mov_rcx_qword_ptr_[r@@ dx+0x10], xor_eax_eax, lea_rdx_[rip+0x@@ 1f@@ 35@@ f], mov_esi_1, call_0xffffffffffffa@@ 4f@@ 8, cmp_eax_-1, je_0x3c, mov_rdi_rbp, call_0x6@@ 3c@@ b, mov_rdi_rbp, call_0x64@@ 93, mov_rdi_rbp, pop_rbp, jmp_0x6@@ 55@@ a, lea_rcx_[rip+0x@@ 1c@@ 97@@ e], lea_rdx_[rip+0x1c@@ a@@ fe], mov_esi_0x1@@ 27, lea_rdi_[rip+0x1c@@ b0@@ 2], xor_eax_eax, call_0x9b@@ 79, mov_rbp_qword_ptr_[r@@ bp+0x10], lea_rdi_[rip+0x1c@@ 97@@ 9], call_0xffffffffffff9e@@ 99, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x9e@@ 7@@ c
endbr64, mov_eax_esi, mov_rdi_rdx, cmp_esi@@ _5, jne_0xc, jmp_0xfffffffffffffd@@ 52, ret
endbr64, push_r12, push_rbp, mov_rbp_rsi, sub_rsp_0x18, mov_r8d_dword_ptr_[r@@ di+0x@@ 26@@ c], cmp_r8d_1, je_0x37, cmp_r8d@@ _2, je_0x99, test_r8d_r8d, je_0x41, lea_rcx_[rip+0x@@ 1c@@ aa@@ 1], lea_rdx_[rip+0x1c@@ ab@@ 3], mov_esi_0x30, lea_rdi_[rip+0x1c@@ ab@@ 7], xor_eax_eax, call_0x9a@@ ea, mov_rax_qword_ptr_[r@@ si+0x1@@ 38], mov_rcx_qword_ptr_[r@@ dx+0x1@@ 38], mov_eax_dword_ptr_[rax+0x28], xor_r12d_r12d, cmp_dword_ptr_[r@@ cx+0x@@ 28]_eax, jne_0x43, mov_eax_dword_ptr_[r@@ dx+0x1c], cmp_eax_-1, je_0xf, xor_r12d_r12d, cmp_eax_dword_ptr_[r@@ bp+0x@@ 1c], jne_0x33, cmp_eax_5, je_0x64, mov_rdi_qword_ptr_[r@@ dx+0x28], mov_r12d_1, test_rdi_rdi, je_0x1f, mov_rsi_qword_ptr_[rbp+0x@@ 28], lea_rax_[rip+0x@@ 1b@@ ec@@ 2], test_rsi_rsi, cmove_rsi_rax, call_0xffffffffffff9b@@ 71, test_eax_eax, sete_r12b, add_rsp_0x18, pop_rbp, mov_eax_r12d, pop_r12, ret, mov_rax_qword_ptr_[r@@ si+0x1@@ 38], mov_rcx_qword_ptr_[r@@ dx+0x1@@ 38], mov_eax_dword_ptr_[rax+0x@@ 2c], xor_r12d_r12d, cmp_dword_ptr_[r@@ cx+0x@@ 2c]_eax, je_0xffffffffffffff@@ 9a, add_rsp_0x18, pop_rbp, mov_eax_r12d, pop_r12, ret, mov_rdi_qword_ptr_[r@@ dx+0x20], mov_rsi_qword_ptr_[r@@ bp+0x20], mov_qword_ptr_[rsp+8]_rdx, call_0xffffffffffff9b@@ 23, test_eax_eax, mov_rdx_qword_ptr_[rsp+8], je_0xffffffffffffff@@ 85, jmp_0xffffffffffffffa@@ f
endbr64, push_r15, mov_r15_rdi, mov_r9_rsi, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x18, mov_r12_qword_ptr_[r@@ di+0x@@ 258], movsxd_rax_dword_ptr_[r@@ di+0x@@ d0], mov_qword_ptr_[rsp+8]_rdx, mov_rdi_rax, mov_rax_qword_ptr_[r@@ 12+rax*8], mov_rax_qword_ptr_[rax], mov_rax_qword_ptr_[rax], cmp_qword_ptr_[rax+8]_0, je_0x1b, mov_dword_ptr_[rsi@@ ]_edi, inc@@ _edi, mov_dword_ptr_[rdx@@ ]_edi, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_r8d_dword_ptr_[r@@ 15+0x@@ b8], cmp_edi@@ _r8d, jge_0x@@ 8e, lea_eax_[r@@ di+1], cdqe, mov_ebp_eax, cmp_r8d@@ _eax, jle_0x@@ 7b, mov_rdx_qword_ptr_[r@@ 12+rax*8], inc_rax, mov_rsi_qword_ptr_[rdx], mov_rdx_qword_ptr_[rsi], cmp_qword_ptr_[r@@ dx+@@ 8]_0, je_0xffffffffffffffe7, mov_dword_ptr_[r@@ 9]@@ _ebp, mov_r13d_dword_ptr_[r@@ 15+0x@@ b8], cmp_ebp@@ _r13d, jge_0x@@ 3b, movsxd_rax_dword_ptr_[r@@ 15+0x@@ d0], movsxd_rbx@@ _ebp, mov_rax_qword_ptr_[r@@ 12+rax*8], mov_r14_qword_ptr_[rax], jmp_0x17, lea_ebp_[r@@ bx+1], inc_rbx, cmp_r13d@@ _ebx, jle_0x@@ 1a, mov_rax_qword_ptr_[r@@ 12+r@@ bx*8], mov_rsi_qword_ptr_[rax], mov_rdx_r14, mov_rdi_r15, mov_ebp_ebx, call_0xfffffffffffffe@@ 36, test_al_al, jne_0xffffffffffffffdf, mov_rax_qword_ptr_[rsp+8], mov_dword_ptr_[rax]@@ _ebp, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[rsp+8], mov_dword_ptr_[rax]@@ _edi, mov_dword_ptr_[r@@ 9]@@ _edi, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
endbr64, push_rbp, mov_rbp_rdi, mov_eax_dword_ptr_[rdi+0x@@ b8], cmp_eax_esi, lea_edx_[rax-1], cmovle@@ _esi@@ _edx, sub_eax_dword_ptr_[r@@ di+0x18], mov_edx_esi, sub_edx@@ _dword_ptr_[r@@ di+0x@@ d0], add_edx_dword_ptr_[r@@ di+0x@@ c8], mov_dword_ptr_[rdi+0x@@ c@@ 8]_edx, cmp_edx_eax, jle_0x@@ a, mov_dword_ptr_[rdi+0x@@ c@@ 8]_eax, mov_edx_eax, test_edx_edx, jns_0xc, mov_dword_ptr_[rbp+0x@@ c8]_0, mov_rdi_rbp, call_0xffffffffffffa@@ eb@@ 6, mov_rdi_rbp, call_0xffffffffffffc@@ 8e@@ e, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, mov_rax_qword_ptr_[rax+0x18], pop_rbp, jmp_rax
endbr64, push_r14, push_r13, push_r12, mov_r12d_esi, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0x7@@ 1c@@ a, test_eax_eax, je_0x1@@ 53, cmp_byte_ptr_[rbp+0x@@ 26@@ 4]_0, jne_0x@@ f6, mov_edi_0x2@@ e8, call_0xffffffffffffa@@ 50@@ b, mov_rsi_qword_ptr_[rbp+0x@@ 178], mov_rdi_rax, xor_edx_edx, mov_r13_rax, call_0x3@@ fc@@ 7, lea_rdx_[rsp+4], mov_rsi_rsp, mov_rdi_rbp, call_0xfffffffffffffd@@ f7, movsxd_r14@@ _dword_ptr_[r@@ sp], mov_rbx_r14, shl_r14@@ _3, cmp_ebx_dword_ptr_[r@@ sp+4], jge_0x@@ 53, mov_rax_qword_ptr_[rbp+0x@@ 258], mov_rcx_qword_ptr_[r@@ ax+r@@ 14], mov_rsi_qword_ptr_[rcx], mov_rax_qword_ptr_[rsi], cmp_qword_ptr_[rax+8]_0, je_0x2e, mov_edx_r12d, cmp_r12d@@ _5, jne_0xc, mov_rdi_rcx, call_0xfffffffffffffc@@ 9c, mov_edx_eax, mov_eax_dword_ptr_[r@@ cx+0x1@@ 4], cmp_eax_edx, je_0x14, cmp_edx_3, jne_7, cmp_eax_4, je_0xa, mov_rdi_r13, call_0x4@@ 57@@ 1, inc_ebx, add_r14_8, cmp_dword_ptr_[rsp+@@ 4]_ebx, jg_0xffffffffffffff@@ b2, mov_esi_1, mov_rdx_rbp, mov_rdi_r13, call_0x4@@ cc@@ 5, mov_ebx_dword_ptr_[r@@ sp], mov_esi_dword_ptr_[rsp+4], cmp_ebx@@ _esi, jge_0x@@ 1b, mov_esi_ebx, mov_rdi_rbp, call_0xffffffffffffbe@@ 8b, mov_esi_dword_ptr_[rsp+4], inc_ebx, cmp_esi@@ _ebx, jg_0xffffffffffffff@@ ee, mov_rdi_rbp, call_0xfffffffffffffe@@ 69, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ 83, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_esi_dword_ptr_[rbp+0x@@ d0], mov_rdi_rbp, lea_edx_[r@@ si+1], call_0xffffffffffffc8@@ 94, movsxd_rdx_dword_ptr_[r@@ bp+0x@@ d0], mov_rax_qword_ptr_[rbp+0x@@ 258], mov_rsi_rdx, mov_rcx_qword_ptr_[r@@ ax+rdx*8], cmp_r12d@@ _5, je_0x36, mov_dword_ptr_[rcx+0x1@@ 4]_r12d, mov_rdi_rbp, call_0xffffffffffffbe@@ 1d, mov_esi_dword_ptr_[rbp+0x@@ d0], mov_dword_ptr_[rsp]@@ _esi, inc@@ _esi, mov_dword_ptr_[rsp+4]_esi, jmp_0xffffffffffffff8d, call_0xffffffffffff9c@@ 70, jmp_0xffffffffffffff87, mov_rdi_rcx, call_0xfffffffffffffb@@ ad, mov_r12d_eax, jmp_0xffffffffffffffc1, call_0xffffffffffff99@@ f@@ 3
endbr64, sub_rsp_8, mov_esi_1, mov_byte_ptr_[rip+0x2@@ f@@ 26@@ 4]_1, call_0xfffffffffffffe@@ 3c, mov_byte_ptr_[rip+0x2@@ f@@ 25@@ 8]_0, add_rsp_8, ret
endbr64, mov_esi_2, jmp_0xfffffffffffffe@@ 1@@ 7
endbr64, mov_esi_3, jmp_0xfffffffffffffe@@ 0@@ 7
endbr64, mov_esi_5, jmp_0xfffffffffffffd@@ f@@ 7
endbr64, mov_esi_4, jmp_0xfffffffffffffd@@ e@@ 7
endbr64, push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_ebx_edi, mov_rdi_rbp, mov_r12d_dword_ptr_[r@@ si+0x18], mov_esi_3, call_0xf@@ 54@@ 7, mov_rcx_rax, mov_r8d_r12d, xor_eax_eax, mov_edx_ebx, lea_rsi_[rip+0x1c@@ 6b@@ 1], mov_edi_1, call_0x7@@ 5b@@ c, mov_eax_1, cmp_ebx_1, je_0x20, xor_eax_eax, cmp_ebx_2, jne_0x19, mov_edx_dword_ptr_[r@@ bp+0x18], mov_eax_1, cmp_edx@@ _7, je_0xc, xor_eax_eax, cmp_edx_1, seta_al, neg_eax, pop_rbx, pop_rbp, pop_r12, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x18, movsxd_rdx_dword_ptr_[r@@ di+0x@@ d0], mov_rax_qword_ptr_[rdi+0x@@ 258], mov_rax_qword_ptr_[rax+rdx*8], mov_rax_qword_ptr_[rax], mov_rax_qword_ptr_[rax], mov_r14_qword_ptr_[r@@ ax+8], call_0x32@@ ff, mov_eax_dword_ptr_[rbp+0x@@ b8], mov_dword_ptr_[rsp+0xc]_eax, test_r14_r14, je_0x4f, test_eax_eax, jle_0x@@ 4b, mov_r15_qword_ptr_[r@@ bp+0x@@ 258], lea_r13d@@ _[rax-1], xor_ebx_ebx, jmp_0xd, mov_rbx_rax, mov_rax_qword_ptr_[r@@ 15+r@@ bx*8], mov_r12d_ebx, mov_rax_qword_ptr_[rax], mov_rax_qword_ptr_[rax], mov_rsi_qword_ptr_[rax+8], test_rsi_rsi, je_0x12, mov_rdi_r14, call_0xffffffffffff96@@ 44, test_eax_eax, je_0x9d, lea_rax_[rbx+1], cmp_r13_rbx, jne_0xffffffffffffffd0, mov_r15d@@ _dword_ptr_[rsp+0xc], mov_dword_ptr_[rbp+0x@@ c@@ 8]_0xffffffff, sub_r15d@@ _dword_ptr_[r@@ bp+0x18], xor_r12d_r12d, cmp_r15d@@ _-1, jge_0x@@ 64, mov_dword_ptr_[rbp+0x@@ c@@ 8]_r15d, test_r15d_r15d, js@@ _0x58, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x30], mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x28], mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x10], mov_qword_ptr_[rbp+0x@@ bc@@ ]_-1, mov_dword_ptr_[rbp+0x@@ d@@ 0]_0xffffffff, mov_rdi_rbp, mov_esi_r12d, call_0xffffffffffffaa@@ cd, add_rsp_0x18, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, jmp_0xffffffffffffc@@ 4f@@ 7, mov_dword_ptr_[rbp+0x@@ c8]_0, jmp_0xffffffffffffffa0, mov_r15d@@ _dword_ptr_[rsp+0xc], lea_eax_[rbx-1], sub_r15d@@ _dword_ptr_[r@@ bp+0x18], mov_dword_ptr_[rbp+0x@@ c@@ 8]_eax, cmp_r15d_eax, jl_0xffffffffffffff@@ 79, mov_r15d_eax, jmp_0xffffffffffffff7@@ 7
endbr64, mov_edx_dword_ptr_[rdi+0x@@ 268], test_edx_edx, je_0x74, mov_r8d_dword_ptr_[r@@ di+0x@@ 26@@ c], cmp_r8d_1, je_0x57, cmp_r8d@@ _2, je_0x41, test_r8d_r8d, je_0x2c, push_rax, lea_rcx_[rip+0x@@ 1c@@ 44@@ 6], lea_rdx_[rip+0x1c@@ 45@@ 3], mov_esi_0x@@ b9, lea_rdi_[rip+0x1c@@ 4@@ 1a], xor_eax_eax, call_0x94@@ 4d, mov_dword_ptr_[rdi+0x@@ 2@@ 6c]_1, jmp_0xfffffffffffffe@@ 56, mov_dword_ptr_[rdi+0x@@ 2@@ 6c]_0, jmp_0xfffffffffffffe@@ 46, mov_dword_ptr_[rdi+0x@@ 2@@ 6c@@ ]_2, jmp_0xfffffffffffffe@@ 36, ret
endbr64, mov_r8d_dword_ptr_[r@@ di+0x@@ 268], cmp_r8d@@ _2, je_0x41, ja@@ _0x1f, test_r8d_r8d, je_0x32, mov_dword_ptr_[rdi+0x@@ 26@@ 8]_3, jmp_0xfffffffffffffd@@ fe, cmp_r8d@@ _3, jne_0x2b, mov_dword_ptr_[rdi+0x@@ 26@@ 8]_2, jmp_0xfffffffffffffd@@ e0, ret, mov_dword_ptr_[rdi+0x@@ 26@@ 8]_1, jmp_0xfffffffffffffd@@ c6, push_rax, lea_rcx_[rip+0x@@ 1d@@ 188], lea_rdx_[rip+0x1c@@ 39@@ b], mov_esi_0x@@ c5, lea_rdi_[rip+0x1c@@ 35@@ 1], xor_eax_eax, call_0x9@@ 38@@ 4
endbr64, push_rbp, mov_rbp_rdi, mov_r8d_dword_ptr_[r@@ di+0x@@ 270], cmp_r8d_1, je_0x3d, cmp_r8d@@ _2, je_0xaf, test_r8d_r8d, je_0x96, lea_rcx_[rip+0x@@ 1c@@ 35@@ 7], lea_rdx_[rip+0x1c@@ 36@@ a], mov_esi@@ _0xf@@ 3, lea_rdi_[rip+0x1c@@ 2f@@ 9], xor_eax_eax, call_0x9@@ 32@@ c, mov_dword_ptr_[rdi+0x@@ 2@@ 70@@ ]_2, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x30], mov_dword_ptr_[rbp+0x@@ cc@@ ]_0, mov_qword_ptr_[rbp+0x@@ bc@@ ]_-1, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x28], mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x10], mov_esi_dword_ptr_[rbp+0x@@ c8], mov_edx_dword_ptr_[r@@ bp+0x18], mov_eax_dword_ptr_[rbp+0x@@ b8], add_edx@@ _esi, cmp_edx_eax, cmovg@@ _edx_eax, mov_rdi_rbp, call_0xffffffffffffc@@ 40@@ a, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffffc@@ 2e@@ 1, mov_dword_ptr_[rdi+0x@@ 2@@ 70]_1, jmp_0xffffffffffffff98, mov_dword_ptr_[rdi+0x@@ 27@@ 0]_0, jmp_0xffffffffffffff8@@ 8
endbr64, push_rbp, mov_rbp_rdi, mov_r8d_dword_ptr_[r@@ di+0x@@ 27@@ 4], cmp_r8d_1, je_0x3d, cmp_r8d@@ _2, je_0xaf, test_r8d_r8d, je_0x96, lea_rcx_[rip+0x@@ 1c@@ 2a0], lea_rdx_[rip+0x1c@@ 2b@@ 6], mov_esi_0x1@@ 04, lea_rdi_[rip+0x1c@@ 2@@ 19], xor_eax_eax, call_0x9@@ 24@@ c, mov_dword_ptr_[rdi+0x@@ 27@@ 4]_2, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x30], mov_dword_ptr_[rbp+0x@@ cc@@ ]_0, mov_qword_ptr_[rbp+0x@@ bc@@ ]_-1, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x28], mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x10], mov_esi_dword_ptr_[rbp+0x@@ c8], mov_edx_dword_ptr_[r@@ bp+0x18], mov_eax_dword_ptr_[rbp+0x@@ b8], add_edx@@ _esi, cmp_edx_eax, cmovg@@ _edx_eax, mov_rdi_rbp, call_0xffffffffffffc@@ 32@@ a, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffffc@@ 20@@ 1, mov_dword_ptr_[rdi+0x@@ 27@@ 4]_1, jmp_0xffffffffffffff98, mov_dword_ptr_[rdi+0x@@ 27@@ 4]_0, jmp_0xffffffffffffff8@@ 8
endbr64, push_rbp, mov_rbp_rdi, xor@@ _byte_ptr_[r@@ di+0x@@ 26@@ 5]_1, mov_rax_qword_ptr_[rdi], call_qword_ptr_[rax+0x30], mov_dword_ptr_[rbp+0x@@ cc@@ ]_0, mov_qword_ptr_[rbp+0x@@ bc@@ ]_-1, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x28], mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x10], mov_esi_dword_ptr_[rbp+0x@@ c8], mov_edx_dword_ptr_[r@@ bp+0x18], mov_eax_dword_ptr_[rbp+0x@@ b8], add_edx@@ _esi, cmp_edx_eax, cmovg@@ _edx_eax, mov_rdi_rbp, call_0xffffffffffffc@@ 29@@ 9, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffffc@@ 17@@ 0
endbr64, ret
endbr64, push_rbp, mov_rbp_rdi, mov_eax_dword_ptr_[rdi+0x@@ b8], test_eax_eax, jle_0x@@ 4d, mov_rdx_qword_ptr_[rdi+0x@@ 258], lea_ecx_[rax-1], lea_rax_[rdx+8], lea_rsi_[rax@@ +rcx*8], jmp_0x10, add_rax_8, mov_rdx_qword_ptr_[rdx], mov_rcx_qword_ptr_[rdx], mov_rcx_qword_ptr_[r@@ cx], cmp_qword_ptr_[rcx@@ +8]_0, je_8, mov_ecx_dword_ptr_[r@@ dx+8], mov_dword_ptr_[rdx+0x1@@ 4]_ecx, mov_rdx_rax, cmp_rax_rsi, jne_0xffffffffffffffe0, mov_qword_ptr_[rbp+0x@@ bc@@ ]_-1, mov_rdi_rbp, call_0xffffffffffffc0@@ f0, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, mov_rax_qword_ptr_[rax+0x18], pop_rbp, jmp_rax
endbr64, push_rbp, mov_rbp_rdi, mov_eax_dword_ptr_[rdi+0x@@ b8], test_eax_eax, jle_0x@@ 4d, mov_rdx_qword_ptr_[rdi+0x@@ 258], lea_ecx_[rax-1], lea_rax_[rdx+8], lea_rsi_[rax@@ +rcx*8], jmp_0x10, add_rax_8, mov_rdx_qword_ptr_[rdx], mov_rcx_qword_ptr_[rdx], mov_rcx_qword_ptr_[r@@ cx], cmp_qword_ptr_[rcx@@ +8]_0, je_8, mov_ecx_dword_ptr_[rdx+0x@@ c], mov_dword_ptr_[rdx+0x1@@ 4]_ecx, mov_rdx_rax, cmp_rax_rsi, jne_0xffffffffffffffe0, mov_qword_ptr_[rbp+0x@@ bc@@ ]_-1, mov_rdi_rbp, call_0xffffffffffffc0@@ 70, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, mov_rax_qword_ptr_[rax+0x18], pop_rbp, jmp_rax
endbr64, push_rbp, mov_rbp_rdi, mov_eax_dword_ptr_[rdi+0x@@ b8], test_eax_eax, jle_0x@@ 4d, mov_rdx_qword_ptr_[rdi+0x@@ 258], lea_ecx_[rax-1], lea_rax_[rdx+8], lea_rsi_[rax@@ +rcx*8], jmp_0x10, add_rax_8, mov_rdx_qword_ptr_[rdx], mov_rcx_qword_ptr_[rdx], mov_rcx_qword_ptr_[r@@ cx], cmp_qword_ptr_[rcx@@ +8]_0, je_8, mov_ecx_dword_ptr_[r@@ dx+0x10], mov_dword_ptr_[rdx+0x1@@ 4]_ecx, mov_rdx_rax, cmp_rax_rsi, jne_0xffffffffffffffe0, mov_qword_ptr_[rbp+0x@@ bc@@ ]_-1, mov_rdi_rbp, call_0xffffffffffffb@@ ff0, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, mov_rax_qword_ptr_[rax+0x18], pop_rbp, jmp_rax
endbr64, push_rbp, mov_rbp_rdi, mov_edx_dword_ptr_[rdi+0x@@ b8], test_edx_edx, jle_0x@@ 4a, mov_rax_qword_ptr_[rdi+0x@@ 258], dec@@ _edx, lea_rcx_[rax+8], lea_r8_[r@@ cx@@ +rdx*8], jmp_9, add_rcx_8, mov_rsi_qword_ptr_[rax], mov_rax_qword_ptr_[rsi], mov_rax_qword_ptr_[rax], cmp_qword_ptr_[rax+8]_0, je_0xd, mov_rdi_rsi, call_0xfffffffffffff42@@ 1, mov_dword_ptr_[rsi+0x1@@ 4]_eax, mov_qword_ptr_[rbp+0x@@ bc@@ ]_-1, mov_rax_rcx, cmp_rcx@@ _r8, jne_0xffffffffffffffd0, mov_rdi_rbp, call_0xffffffffffffb@@ f7@@ 3, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, mov_rax_qword_ptr_[rax+0x18], pop_rbp, jmp_rax
endbr64, push_rbp, mov_rbp_rdi, mov_eax_dword_ptr_[rdi+0x@@ c4], lea_edx_[rax@@ +2], movsxd_rax_edx, imul_rax_rax@@ _0x5@@ 5555@@ 556, mov_ecx_edx, sar_ecx@@ _0x1f, shr_rax_0x20, sub_eax_ecx, lea_eax_[rax@@ +rax*2], sub_edx_eax, mov_dword_ptr_[rdi+0x@@ c@@ 4]_edx, mov_rax_qword_ptr_[rdi], call_qword_ptr_[rax], mov_eax_dword_ptr_[rbp+0x@@ c8], mov_edx_dword_ptr_[r@@ bp+0x18], mov_esi_dword_ptr_[rbp+0x@@ d0], lea_ecx_[rax@@ +rdx], cmp_esi_ecx, jl@@ _0xa, mov_dword_ptr_[rbp+0x@@ c@@ 8]_ecx, mov_eax_ecx, mov_ecx_dword_ptr_[rbp+0x@@ b8], sub_ecx_edx, cmp_ecx_eax, jge_0x@@ a, mov_dword_ptr_[rbp+0x@@ c@@ 8]_ecx, mov_eax_ecx, test_eax_eax, jns_0xc, mov_dword_ptr_[rbp+0x@@ c8]_0, mov_dword_ptr_[rbp+0x@@ d@@ 4]_0, mov_rdi_rbp, call_0xffffffffffffb@@ 5a@@ d, mov_rdi_rbp, call_0xffffffffffffb@@ ed@@ 5, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, call_qword_ptr_[rax+0x18], mov_rax_qword_ptr_[rbp], mov_rdi_rbp, mov_rax_qword_ptr_[rax+0x20], pop_rbp, jmp_rax
endbr64, mov_eax_dword_ptr_[rdi+0x@@ c4], test_eax_eax, je_0x24, add_qword_ptr_[r@@ di+0x@@ 2d@@ 0]_0x20, mov_dword_ptr_[rdi+0x@@ d@@ 4]_0, mov_rax_qword_ptr_[rdi], jmp_qword_ptr_[r@@ ax+0x20], mov_dword_ptr_[rdi+0x@@ c4@@ ]_2, jmp_0xffffffffffffff1@@ 6
mov_rax_qword_ptr_[r@@ si+0x1@@ 38], test_rax_rax, je_0x12@@ e, push_r14, lea_rdx_[rip+0x1b@@ 26@@ 1], push_r13, push_r12, mov_r12d_0xffffffff, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, mov_r14d_dword_ptr_[r@@ ax+0x18], mov_rax_qword_ptr_[rsi], mov_r13_qword_ptr_[r@@ ax+8], mov_rax_qword_ptr_[rdi], test_rax_rax, je_0x16, mov_rdi_qword_ptr_[rax], mov_esi_3, mov_r12d_dword_ptr_[r@@ ax+0x18], call_0xec@@ f6, mov_rdx_rax, xor_eax_eax, mov_r9d_r14d, mov_r8_r13, mov_ecx_r12d, lea_rsi_[rip+0x1b@@ f0@@ 4], mov_edi_0x20, call_0x6d@@ 67, mov_rdx_qword_ptr_[rbx+0x1@@ 38], mov_eax_1, cmp_dword_ptr_[r@@ dx+0x1@@ 8]_2, je_0x6b, cmp_qword_ptr_[rbp]_0, je_0x8b, lea_r12_[r@@ bx+0x@@ c0], mov_rsi_r12, mov_rdi_rbx, call_0xe@@ 178, test_al_al, jne_0x19, mov_rax_qword_ptr_[rbp], mov_rdi_qword_ptr_[rax], lea_rsi_[r@@ di+0x@@ c0], call_0xe@@ 16@@ 1, test_al_al, jne_0x31, mov_rsi_r12, mov_rdi_rbx, call_0xe@@ 15@@ 2, test_al_al, jne_0x33, mov_rax_qword_ptr_[rbp], mov_rdx_qword_ptr_[rbx+0x1@@ 38], mov_ecx_dword_ptr_[r@@ ax+0x18], cmp_dword_ptr_[r@@ dx+0x1@@ 8]_ecx, jg@@ _0xf, jl@@ _0x36, mov_rax_qword_ptr_[rax], mov_eax_dword_ptr_[rax+0x1c], cmp_dword_ptr_[rbx+0x1@@ c]_eax, jl@@ _0x2b, xor_eax_eax, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_rax_qword_ptr_[rbp], mov_rdi_qword_ptr_[rax], lea_rsi_[r@@ di+0x@@ c0], call_0xe@@ 10@@ a, test_al_al, jne_0xffffffffffffffba, xor_eax_eax, lea_rsi_[rip+0x1b@@ dc@@ f], mov_edi_0x20, call_0x6c@@ b2, mov_rax_qword_ptr_[rbx+0x1@@ 38], mov_qword_ptr_[rbp]_rax, xor_eax_eax, jmp_0xffffffffffffffb9, xor_eax_eax, ret
endbr64, mov_rax_qword_ptr_[r@@ si+0x1@@ 38], test_rax_rax, je_8, cmp_dword_ptr_[rax+0x1@@ 4]_1, je_0xc, xor_eax_eax, ret, push_rbx, mov_rbx_rsi, mov_rdi_rbx, lea_rsi_[r@@ si+0x@@ c0], call_0xe0@@ a2, test_al_al, je_0x2b, mov_ecx_dword_ptr_[r@@ bx+0x18], lea_edx_[r@@ cx@@ -5], cmp_edx_2, ja_0x1@@ a, lea_rsi_[rbx+0x@@ 98], lea_rdi_[r@@ bx+0x110], call_0x1@@ 24@@ 90, test_eax_eax, setg_al, pop_rbx, ret, xor_eax_eax, pop_rbx, ret
endbr64, push_r13, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, lea_r13_[r@@ bp+0x48], push_rbx, sub_rsp_8, call_0xffffffffffffff@@ 78, mov_r8d_eax, test_r8b_r8b, lea_rax_[rbp+0x@@ c0], cmovne@@ _r13_rax, mov_rsi_rbp, mov_rdi_r12, call_0xffffffffffffff@@ 5c, mov_rsi_r13, mov_rdi_rbp, mov_edx_3, mov_ebx_eax, call_0xea@@ da, mov_rcx_rax, movzx_r8d@@ _bl, mov_rdx_r12, xor_eax_eax, lea_rsi_[rip+0x1b@@ d@@ 92], mov_edi_1, call_0x6@@ bb@@ d, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_rax_r13, pop_r13, ret
endbr64, mov_rax_qword_ptr_[r@@ si+0x1@@ 38], test_rax_rax, je_0x5a, push_r15, push_r14, push_r13, mov_r13_rdx, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rcx, push_rbx, mov_rbx_rsi, sub_rsp_0x18, mov_edi_dword_ptr_[r@@ ax+0x14], mov_r14_qword_ptr_[r@@ dx+0x1@@ 38], call_0xfffffffffffff57@@ c, test_eax_eax, je_0x17, test_r14_r14, je_0x12, mov_edi_dword_ptr_[r@@ 14+0x14], mov_rsi_r13, call_0xfffffffffffff56@@ 7, test_eax_eax, jne_0x20, xor_eax_eax, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, xor_eax_eax, ret, mov_edx_3, mov_rsi_rbp, mov_rdi_r12, call_0x3c@@ 65, mov_r14_qword_ptr_[r@@ 13+0x1@@ 38], mov_r15_qword_ptr_[r@@ bx+0x1@@ 38], mov_edx_dword_ptr_[r@@ 14+0x18], mov_rdi_qword_ptr_[r14], mov_esi_3, mov_dword_ptr_[rsp+0xc]_edx, call_0xea@@ 72, mov_r8d_dword_ptr_[r@@ 15+0x18], mov_rdi_qword_ptr_[r15], mov_esi_3, mov_dword_ptr_[rsp+8]_r8d, mov_qword_ptr_[rsp]_rax, call_0xea@@ 58, push_rbp, mov_rcx_rax, lea_rsi_[rip+0x1b@@ c@@ e0], mov_edx_dword_ptr_[rsp+0x14], mov_edi_0x20, push_rdx, xor_eax_eax, mov_rdx_r12, mov_r9_qword_ptr_[rsp+0x10], mov_r8d_dword_ptr_[rsp+0x18], call_0x6a@@ bf, pop_rdx, pop_rcx, test_byte_ptr_[rbx+0x1@@ 4]_1, je_0x6c, mov_ebx_dword_ptr_[r@@ 14+0x18], mov_rdi_qword_ptr_[r14], mov_esi_3, call_0xea@@ 16, mov_rcx_rax, mov_r8d_ebx, xor_eax_eax, mov_rdx_r12, lea_rsi_[rip+0x1b@@ cd@@ 7], mov_edi_0x20, call_0x6a@@ 8a, cmp_dword_ptr_[r14+0x1@@ 8]_1, jg_0xffffffffffffff@@ 32, mov_rax_qword_ptr_[r14], mov_eax_dword_ptr_[rax+0x18], mov_dword_ptr_[r14+0x1@@ 8]_2, test_eax_eax, sete_al, movzx_eax_al, add_eax_3, mov_dword_ptr_[r14+0x1@@ 0]_eax, mov_dword_ptr_[r14+0x1@@ 4]_eax, mov_eax_2, jmp_0xffffffffffffff08, mov_ebx_dword_ptr_[r@@ 15+0x18], test_byte_ptr_[r13+0x1@@ 4]_1, jne_0x2f, mov_eax_dword_ptr_[r@@ 14+0x18], cmp_eax_ebx, jg@@ _0x27, mov_rdi_qword_ptr_[r14], jl@@ _0x32, mov_rdx_qword_ptr_[r15], mov_ecx_dword_ptr_[r@@ di+0x1@@ c], cmp_dword_ptr_[r@@ dx+0x1@@ c]_ecx, jle_0x@@ 27, mov_rdi_rdx, mov_r14_r15, jmp_0xffffffffffffff74, mov_rdi_qword_ptr_[r15], mov_r14_r15, jmp_0xffffffffffffff5f, mov_ebx_eax, jmp_0xffffffffffffff5@@ 3
endbr64, push_r14, push_r13, mov_r13_rsi, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, push_rbx, mov_rsi_qword_ptr_[r@@ si+8], mov_rax_qword_ptr_[r@@ si+0x1@@ 48], test_rax_rax, je_0x75, mov_ebx_dword_ptr_[r@@ ax+0x14], add_rsi@@ _0x10, mov_edi_ebx, call_0xfffffffffffff3d@@ 2, mov_rcx_qword_ptr_[r13], mov_rsi_qword_ptr_[r13+8], mov_edi_dword_ptr_[r@@ cx+0x18], lea_edx_[r@@ di@@ -4], cmp_edx_1, jbe_0x@@ 44, test_eax_eax, jle_0x@@ 50, add_rsi@@ _0x10, mov_rdi_rbp, call_0xfffffffffffffd@@ 0f, test_al_al, je_0x1@@ d8, cmp_ebx_1, jne_0x2@@ 7e, pop_rbx, pop_rbp, mov_rax_qword_ptr_[r13+8], pop_r12, mov_rsi_r13, pop_r13, lea_rdi_[rax+0x@@ d0], pop_r14, jmp_0x6@@ a@@ 73, mov_rdx_qword_ptr_[rcx], cmp_qword_ptr_[rdx@@ ]_rsi, je_0xa, test_eax_eax, jne_0xffffffffffffffb8, mov_rbx_qword_ptr_[r@@ si+0x1@@ 98], test_rbx_rbx, jne_0x1b, jmp_0x@@ b0, mov_rbx_qword_ptr_[rbx+0x18], test_rbx_rbx, je_0x99, mov_rax_qword_ptr_[rbx], cmp_dword_ptr_[rax+0x1@@ 8@@ ]_6, jne_0xffffffffffffffec, mov_rdx_qword_ptr_[r13], mov_rsi_qword_ptr_[rax], mov_eax_dword_ptr_[r@@ dx+0x18], sub_eax@@ _4, cmp_eax_1, jbe_0x@@ 5a, cmp_qword_ptr_[r@@ si+0x1@@ 38]_0, je_0xffffffffffffffd0, mov_rdi_rbp, call_0xfffffffffffffc@@ 7b, test_al_al, jne_0xffffffffffffffc4, mov_rax_qword_ptr_[rbx], mov_rsi_qword_ptr_[rax], mov_rax_qword_ptr_[r@@ si+0x1@@ 38], mov_edi_dword_ptr_[r@@ ax+0x14], call_0xfffffffffffff30@@ 2, test_eax_eax, je_0xffffffffffffff@@ ab, mov_rsi_rbx, mov_rdi_r13, call_0x6a@@ c3, test_al_al, je_0xffffffffffffff@@ 9c, pop_rbx, pop_rbp, pop_r12, mov_r14d_1, pop_r13, mov_eax_r14d, pop_r14, ret, mov_rax_qword_ptr_[rdx], mov_rax_qword_ptr_[rax], cmp_qword_ptr_[rsi@@ ]_rax, jne_0xffffffffffffff9f, mov_rbx_qword_ptr_[rbx+0x18], test_rbx_rbx, jne_0xffffffffffffff@@ 7b, mov_rsi_qword_ptr_[r13+8], mov_rbx_qword_ptr_[r@@ si+0x1@@ 90], test_rbx_rbx, je_0x73, mov_rax_qword_ptr_[rbx], cmp_dword_ptr_[rax+0x1@@ 8@@ ]_6, jne_0x61, mov_rdx_qword_ptr_[r13], mov_rsi_qword_ptr_[rax], mov_eax_dword_ptr_[r@@ dx+0x18], sub_eax@@ _4, cmp_eax_1, jbe_0x@@ 67, mov_rax_qword_ptr_[r@@ si+0x1@@ 38], test_rax_rax, je_0x43, mov_edi_dword_ptr_[r@@ ax+0x14], call_0xfffffffffffff27@@ 6, test_eax_eax, je_0x37, mov_rsi_rbx, mov_rdi_r13, call_0x6a@@ 37, test_al_al, je_0x28, mov_rax_qword_ptr_[rbx], mov_rdi_rbp, mov_rsi_qword_ptr_[rax], call_0xfffffffffffffbb@@ 5, test_al_al, jne_0xffffffffffffff@@ 64, test_r12_r12, je_0xd, cmp_qword_ptr_[r@@ 12]_0, je_0x3e, mov_rbx_qword_ptr_[rbx+0x18], test_rbx_rbx, jne_0xffffffffffffff@@ 91, xor_r14d_r14d, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_eax_r14d, pop_r14, ret, mov_rax_qword_ptr_[rdx], mov_rax_qword_ptr_[rax], cmp_qword_ptr_[rsi@@ ]_rax, jne_0xffffffffffffff92, mov_rbx_qword_ptr_[rbx+0x18], test_rbx_rbx, jne_0xffffffffffffff@@ 6e, jmp_0xffffffffffffffd9, mov_rax_qword_ptr_[rbx], mov_rax_qword_ptr_[rax], mov_ecx_dword_ptr_[r@@ ax+0x18], lea_edx_[r@@ cx@@ -5], cmp_edx_2, jbe_0x@@ a9, mov_rax_qword_ptr_[rax+0x1@@ 38], mov_rbx_qword_ptr_[rbx+0x18], mov_qword_ptr_[r12]_rax, test_rbx_rbx, jne_0xffffffffffffff@@ 39, jmp_0xffffffffffffffa4, mov_rax_qword_ptr_[r13+8], mov_rsi_r13, lea_rdi_[rax+0x@@ 58], call_0x6@@ 8b@@ 5, mov_r14d_eax, test_al_al, jne_0xfffffffffffffe@@ d1, cmp_ebx_2, jne_0xffffffffffffff@@ 83, test_r12_r12, je_0xffffffffffffff@@ 7e, cmp_qword_ptr_[r@@ 12]_0, jne_0xffffffffffffff@@ 73, mov_rax_qword_ptr_[r13+8], mov_rsi_r13, lea_rdi_[rax+0x@@ d0], call_0x6@@ 87@@ e, test_al_al, je_0xffffffffffffff@@ 58, mov_rax_qword_ptr_[r13+8], lea_rsi_[rax+0x@@ a8], lea_rdi_[r@@ ax+0x1@@ 20], call_0x1@@ 1fa@@ f, cmp_eax_1, jle_0xffffffffffffff@@ 38, mov_rax_qword_ptr_[r13+8], mov_rax_qword_ptr_[rax+0x1@@ 48], mov_qword_ptr_[r12]_rax, jmp_0xffffffffffffff26, lea_rsi_[rax+0x@@ 98], lea_rdi_[r@@ ax+0x1@@ 10], call_0x1@@ 1f7@@ a, cmp_eax_1, jle_0xfffffffffffffe@@ fa, mov_rax_qword_ptr_[rbx], mov_rax_qword_ptr_[rax], jmp_0xffffffffffffff3b, mov_r8d_ebx, lea_rcx_[rip+0x@@ 1b@@ 97@@ f], lea_rdx_[rip+0x1b@@ 8@@ 35], mov_esi_0x1@@ 95, lea_rdi_[rip+0x1b@@ 8@@ 39], xor_eax_eax, call_0x87@@ 7@@ 2
endbr64, push_r15, push_r14, push_r13, mov_r13_rdi, mov_edi_0x20, push_r12, mov_r12_rsi, push_rbp, push_rbx, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, call_0x66@@ a3, test_al_al, jne_0x1@@ 1c, mov_rsi_qword_ptr_[r12], mov_rax_qword_ptr_[r@@ si+0x1@@ 38], test_rax_rax, je_0x50, mov_r8d_dword_ptr_[r@@ 12+0x18], cmp_r8d@@ _7, ja_0x7@@ 5, xor_r15d_r15d, cmp_r8d@@ _5, ja@@ _0x3f, cmp_r8d@@ _3, jbe_0x@@ 70, xor_eax_eax, lea_rsi_[rip+0x1b@@ 96@@ 3], mov_edi_0x20, mov_rcx_r12, mov_rdx_r13, call_0x66@@ 68, mov_rsi_qword_ptr_[r12], mov_rax_qword_ptr_[r@@ si+0x1@@ 38], mov_edi_dword_ptr_[r@@ ax+0x14], call_0xfffffffffffff0@@ 65, test_eax_eax, jne_0x1@@ 96, xor_r15d_r15d, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x5@@ 21, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_r15d, pop_r15, ret, cmp_r8d@@ _8, jne_0x@@ 50@@ 3, mov_edi_dword_ptr_[r@@ ax+0x14], call_0xfffffffffffff0@@ 1b, test_eax_eax, jle_0xffffffffffffff@@ bc, mov_rbx_qword_ptr_[r@@ 12+0x10], mov_qword_ptr_[rsp+0x20]_0, test_rbx_rbx, je_0x2@@ 21, lea_rbp_[rsp+0x20], jmp_0x13, mov_rbx_qword_ptr_[rbx+0x10], test_rbx_rbx, je_0x2@@ 09, mov_rdx_rbp, mov_rsi_rbx, mov_rdi_r13, call_0xfffffffffffffb@@ da, test_al_al, je_0xffffffffffffffe3, mov_rax_qword_ptr_[rbx+8], mov_rcx_r12, mov_r8_qword_ptr_[rax+8], mov_rdx_r13, lea_rsi_[rip+0x1b@@ a@@ 74], mov_edi_0x20, xor_eax_eax, call_0x6@@ 5a@@ 5, xor_r15d_r15d, jmp_0xffffffffffffff58, lea_rbp_[rsp+0x20], xor_esi_esi, mov_rdi_rbp, call_0x1@@ 17@@ 36, mov_rbx_qword_ptr_[r@@ 12+0x10], test_rbx_rbx, je_0x3d, mov_esi_0x20, mov_rdi_rbp, call_0x1@@ 17@@ c8, mov_rax_qword_ptr_[rbx+8], mov_r14_qword_ptr_[r@@ ax+8], mov_rdi_r14, call_0xffffffffffff88@@ c8, mov_rdx_rax, mov_rsi_r14, mov_rdi_rbp, call_0x1@@ 19@@ ca, mov_rbx_qword_ptr_[rbx+0x10], test_rbx_rbx, jne_0xffffffffffffffce, mov_rax_qword_ptr_[r12], lea_r15_[rip+0x@@ 1b@@ 69@@ 1], mov_rax_qword_ptr_[rax+0x1@@ 38], test_rax_rax, je_0x11, movsxd_rdx_dword_ptr_[r@@ ax+0x10], lea_rax_[rip+0x@@ 2b@@ 5d@@ a], mov_r15_qword_ptr_[r@@ ax+rdx*8], mov_rdi_rbp, call_0x1@@ 19@@ f3, movsxd_rdx_dword_ptr_[r@@ 12+0x18], mov_rdi_qword_ptr_[r12], mov_rbx_rax, mov_esi_3, lea_rax_[rip+0x@@ 2b@@ 49@@ 6], mov_r14_qword_ptr_[r@@ ax+rdx*8], call_0xe@@ 46@@ 2, push_r15, mov_r8_rax, lea_rsi_[rip+0x1b@@ 78@@ 9], push_rbx, mov_r9_r14, mov_rcx_r12, mov_rdx_r13, mov_edi_0x20, xor_eax_eax, call_0x6@@ 4d@@ 0, mov_rdi_rbp, call_0x1@@ 1a@@ 88, pop_rsi, pop_rdi, jmp_0xfffffffffffffe@@ 1b, mov_rdx_r13, lea_rsi_[rip+0x1b@@ 8c@@ 6], mov_edi_0x20, xor_eax_eax, mov_rcx_r12, call_0x6@@ 4a@@ 4, mov_rsi_qword_ptr_[r@@ 12+0x10], xor_edx_edx, mov_rdi_r13, call_0xfffffffffffffaa@@ 5, test_al_al, je_0xfffffffffffffe@@ 46, lea_rsi_[rip+0x1b@@ 8d@@ 9], xor_eax_eax, mov_rcx_r12, mov_rdx_r13, mov_edi_0x20, call_0x6@@ 47@@ 4, mov_rax_qword_ptr_[r12+0x10], mov_rsi_qword_ptr_[r12], mov_rax_qword_ptr_[rax+8], cmp_qword_ptr_[rsi@@ ]_rax, je_0x25, lea_rdx_[rax+0x10], mov_rcx_r12, mov_rdi_r13, call_0xfffffffffffff8b@@ 3, mov_r15d_eax, test_eax_eax, jne_0xfffffffffffffe@@ 04, mov_rax_qword_ptr_[r12+0x10], mov_rax_qword_ptr_[rax+8], mov_rbx_qword_ptr_[r@@ ax+0x1@@ 90], test_rbx_rbx, je_0x3c, mov_rax_qword_ptr_[rbx], cmp_dword_ptr_[rax+0x1@@ 8@@ ]_6, jne_0x24, mov_rdx_qword_ptr_[rax], mov_rsi_qword_ptr_[r12], cmp_rdx_rsi, je_0x18, mov_rcx_r12, mov_rdi_r13, call_0xfffffffffffff86@@ d, mov_r15d_eax, test_eax_eax, jne_0xfffffffffffffd@@ be, mov_rbx_qword_ptr_[rbx+0x18], test_rbx_rbx, jne_0xffffffffffffffce, mov_rcx_r12, mov_rdx_r13, lea_rsi_[rip+0x1b@@ 87@@ f], mov_edi_0x20, xor_eax_eax, call_0x6@@ 3e0, jmp_0xfffffffffffffd@@ 93, xor_eax_eax, lea_r8_[rip+0x@@ 1a@@ 8@@ 31], mov_rcx_r12, mov_rdx_r13, lea_rsi_[rip+0x1b@@ 88@@ 2], mov_edi_0x20, call_0x6@@ 3b@@ 5, mov_eax_dword_ptr_[r@@ 12+0x18], cmp_eax_1, je_0x1@@ d8, and_eax_0xfffffff@@ 7, je_0x1@@ af, mov_edx_3, mov_rsi_r12, mov_rdi_r13, call_0x34@@ ce, movzx_r15d@@ _al, mov_rax_qword_ptr_[rsp+0x20], test_rax_rax, je_0xad, mov_rdi_qword_ptr_[rax], mov_esi_3, call_0xe@@ 2d@@ f, mov_r8_rax, mov_rcx_r12, xor_eax_eax, mov_rdx_r13, lea_rsi_[rip+0x1b@@ 6@@ 78], mov_edi_0x20, call_0x6@@ 35@@ 3, mov_rax_qword_ptr_[rsp+0x20], mov_qword_ptr_[rsp+0x18]_rax, mov_rdi_qword_ptr_[rax], mov_ebx_dword_ptr_[r@@ ax+0x18], mov_esi_3, call_0xe@@ 2a@@ 9, mov_r8_rax, mov_rcx_r12, xor_eax_eax, mov_r9d_ebx, mov_rdx_r13, lea_rsi_[rip+0x1b@@ 6b@@ 7], mov_edi_0x20, call_0x6@@ 3@@ 1a, mov_rax_qword_ptr_[rsp+0x18], mov_ecx_dword_ptr_[r@@ ax+0x18], test_ecx_ecx, jg_0xffffffffffff@@ fc@@ c6, cmp_dword_ptr_[r@@ 12+0x1@@ 8]_1, je_0x1@@ d7, movabs_rcx@@ _0x1@@ 0000@@ 0001, mov_qword_ptr_[rax+0x1@@ 0]_rcx, mov_dword_ptr_[rax+0x1@@ 8]_1, test_r15d_r15d, je_0xfffffffffffffc@@ 99, mov_r15d@@ _2, jmp_0xfffffffffffffc@@ 90, mov_rax_qword_ptr_[r12+0x10], mov_qword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rsp+8]_rax, lea_rbp_[r@@ sp+0x18], test_rax_rax, je_0xa7, mov_r14_qword_ptr_[rsp+8], mov_rdi_rbp, mov_rsi_qword_ptr_[r14+8], cmp_qword_ptr_[r@@ si+0x1@@ 48]_0, setne_bl, add_rsi@@ _0x10, call_0xfffffffffffff4c@@ 4, test_al_al, jne_0x@@ d6, mov_rax_qword_ptr_[r14+8], mov_r14_qword_ptr_[r@@ ax+0x1@@ 90], test_r14_r14, je_0x3e, mov_rax_qword_ptr_[r14], cmp_dword_ptr_[rax+0x1@@ 8@@ ]_6, jne_0x25, mov_rsi_qword_ptr_[rax], mov_rdi_rbp, cmp_qword_ptr_[r@@ si+0x1@@ 38]_0, mov_eax_1, cmovne_ebx_eax, call_0xfffffffffffff48@@ 1, test_al_al, jne_0x93, mov_r14_qword_ptr_[r@@ 14+0x18], test_r14_r14, jne_0xffffffffffffffcd, test_bl_bl, je_0xff, mov_rax_qword_ptr_[rsp+8], mov_rax_qword_ptr_[rax+0x10], mov_qword_ptr_[rsp+8]_rax, test_rax_rax, jne_0xffffffffffffff@@ 73, mov_rax_qword_ptr_[rsp+0x18], test_rax_rax, jne_0xfffffffffffffe@@ d0, mov_rcx_r12, mov_rdx_r13, lea_rsi_[rip+0x1b@@ 55@@ 9], mov_edi_0x20, xor_eax_eax, call_0x6@@ 1f@@ a, jmp_0xfffffffffffffbb@@ 0, mov_edx_1, mov_rsi_r12, mov_rdi_r13, call_0x3@@ 32@@ 5, movzx_r15d@@ _al, jmp_0xfffffffffffffb@@ 97, mov_edx_2, mov_rsi_r12, mov_rdi_r13, call_0x3@@ 30@@ 5, movzx_r15d@@ _al, jmp_0xfffffffffffffe@@ 37, mov_rax_qword_ptr_[r12], mov_esi_3, mov_rax_qword_ptr_[rax+0x1@@ 38], mov_rdi_qword_ptr_[rax], mov_ebx_dword_ptr_[r@@ ax+0x18], mov_qword_ptr_[rsp+0x18]_rax, call_0xe@@ 10@@ c, mov_r8_rax, mov_r9d_ebx, xor_eax_eax, mov_rcx_r12, mov_rdx_r13, lea_rsi_[rip+0x1b@@ 55@@ a], mov_edi_0x20, call_0x6@@ 17@@ d, mov_rax_qword_ptr_[rsp+0x18], cmp_dword_ptr_[rax+0x1@@ 8]_1, jg_0xffffffffffff@@ fb@@ 2a, cmp_dword_ptr_[r@@ 12+0x1@@ 8]_1, je_0xfffffffffffffe@@ 7f, mov_rdx_qword_ptr_[rax], mov_edx_dword_ptr_[r@@ dx+0x18], mov_dword_ptr_[rax+0x1@@ 8]_2, test_edx_edx, sete_dl, movzx_edx_dl, add_edx@@ _3, mov_dword_ptr_[rax+0x10]_edx, mov_dword_ptr_[rax+0x1@@ 4]_edx, jmp_0xfffffffffffffe@@ 5b, mov_rsi_qword_ptr_[rsp+8], mov_rdi_r13, call_0x3@@ 162, jmp_0xfffffffffffffefa, cmp_byte_ptr_[rip+0x2@@ dd@@ 39@@ ]_0, je_0xfffffffffffffe@@ 3d, jmp_0xfffffffffffffe@@ 22, call_0xffffffffffff84@@ 96, lea_rcx_[rip+0x@@ 1b@@ 27@@ a], lea_rdx_[rip+0x1b@@ 28@@ 6], mov_esi_0x1@@ 77, lea_rdi_[rip+0x1b@@ 23@@ c], xor_eax_eax, call_0x8@@ 17@@ 5
endbr64, push_r13, push_r12, mov_r12d_edx, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, mov_rax_qword_ptr_[rsi], mov_rbx_qword_ptr_[r@@ ax+0x1@@ 90], test_rbx_rbx, je_0x40, mov_r13_rsi, mov_rax_qword_ptr_[rbx], mov_rdi_rbp, mov_rsi_qword_ptr_[rax], call_0xfffffffffffff42@@ 7, test_al_al, je_0x14, mov_rsi_qword_ptr_[rbx], mov_rdi_rbp, call_0xfffffffffffff9c@@ 8, cmp_r12d_eax, cmovl@@ _r12d_eax, mov_rbx_qword_ptr_[rbx+0x18], test_rbx_rbx, jne_0xffffffffffffffd5, mov_rax_qword_ptr_[r13], mov_rbx_qword_ptr_[r@@ ax+0x1@@ 98], test_rbx_rbx, je_0x32, mov_rax_qword_ptr_[rbx], mov_rdi_rbp, mov_rsi_qword_ptr_[rax], call_0xfffffffffffff3e@@ 7, test_al_al, jne_0x14, mov_rsi_qword_ptr_[rbx], mov_rdi_rbp, call_0xfffffffffffff98@@ 8, cmp_r12d_eax, cmovl@@ _r12d_eax, mov_rbx_qword_ptr_[rbx+0x18], test_rbx_rbx, jne_0xffffffffffffffd5, add_rsp_8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret
endbr64, push_r15, mov_rdx_rdi, mov_r15_rdi, push_r14, lea_rsi_[rip+0x1b@@ 5@@ 2b], mov_edi_1, push_r13, xor_eax_eax, push_r12, push_rbp, push_rbx, sub_rsp_0x18, call_0x60@@ 1a, mov_edx_dword_ptr_[r15+0x@@ b8], mov_dword_ptr_[rsp+0xc]_0, test_edx_edx, jle_0x@@ 17@@ 4, xor_ebx_ebx, xor_r12d_r12d, jmp_0xe, inc_rbx, cmp_edx@@ _ebx, jle_0x@@ 13@@ e, mov_rax_qword_ptr_[r15+0x@@ 258], mov_r13d_ebx, mov_rax_qword_ptr_[rax+r@@ bx*8], lea_rbp_[r@@ bx*8], mov_rdi_qword_ptr_[rax], mov_rax_qword_ptr_[rdi], cmp_qword_ptr_[rax+8]_0, je_0xffffffffffffffd4, mov_esi_3, call_0xd@@ f@@ 2d, mov_r8_rax, mov_r9d_r12d, mov_ecx_ebx, mov_rdx_r15, lea_rsi_[rip+0x1b@@ 4c@@ e], mov_edi_0x20, xor_eax_eax, call_0x5f@@ 9f, mov_rax_qword_ptr_[r15+0x@@ 258], mov_rdi_r15, mov_rax_qword_ptr_[rax+r@@ bx*8], mov_rsi_qword_ptr_[rax], call_0xfffffffffffff@@ 36@@ 9, mov_r14_qword_ptr_[rax], test_r14_r14, je_0x21, mov_rsi_r14, mov_rdi_r15, call_0xfffffffffffff8@@ 92, mov_r14_qword_ptr_[r@@ 14+8], cmp_r12d_eax, cmovl@@ _r12d_eax, test_r14_r14, jne_0xffffffffffffffe7, mov_rax_qword_ptr_[r15+0x@@ 258], mov_edx_r12d, mov_rax_qword_ptr_[rax+r@@ bp], mov_rdi_r15, mov_rsi_qword_ptr_[rax], call_0xfffffffffffffe@@ 59, mov_r12d_eax, mov_rax_qword_ptr_[r15+0x@@ 258], mov_rdi_r15, mov_rax_qword_ptr_[rax+r@@ bp], mov_rsi_qword_ptr_[rax], call_0xfffffffffffff3@@ 10, mov_r14_qword_ptr_[rax], test_r14_r14, je_0x2f, cmp_dword_ptr_[r14+0x1@@ 8@@ ]_6, jne_0x1c, mov_rax_qword_ptr_[r14+0x10], mov_edx_r12d, mov_rsi_qword_ptr_[rax+8], mov_rdi_r15, add_rsi@@ _0x10, call_0xfffffffffffffe@@ 17, mov_r12d_eax, mov_r14_qword_ptr_[r@@ 14+8], test_r14_r14, jne_0xffffffffffffffd8, mov_rax_qword_ptr_[r15+0x@@ 258], mov_esi_3, mov_rax_qword_ptr_[rax+r@@ bp], inc_rbx, mov_rdi_qword_ptr_[rax], call_0xd@@ e@@ 50, mov_r8_rax, mov_rdx_r15, mov_r9d_r12d, mov_ecx_r13d, lea_rsi_[rip+0x1b@@ 428], mov_edi_0x20, xor_eax_eax, call_0x5@@ ec@@ 1, mov_edx_dword_ptr_[r15+0x@@ b8], cmp_edx@@ _ebx, jg_0xfffffffffffffe@@ ce, test_r12d_r12d, je_0x1a, mov_eax_dword_ptr_[rsp+0xc], cmp_eax_r12d, cmovge@@ _r12d_eax, mov_dword_ptr_[rsp+0xc]@@ _r12d, test_edx_edx, jg_0xfffffffffffffe@@ 9e, mov_ebx_dword_ptr_[rsp+0x@@ c], mov_rdx_r15, mov_ecx_ebx, xor_eax_eax, lea_rsi_[rip+0x1b@@ 4@@ 16], mov_edi_1, call_0x5e@@ 79, add_rsp_0x18, mov_eax_ebx, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
push_r13, push_r12, xor_r12d_r12d, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, mov_rdi_qword_ptr_[rdi], test_rdi_rdi, je_0x5e, call_0xffffffffffff8@@ 1f0, mov_rdi_rax, call_0xffffffffffff8@@ 1a8, mov_r13_qword_ptr_[r@@ bp], mov_esi_0x28, mov_rdi_r13, mov_ebx_eax, call_0xffffffffffff8@@ 1f@@ 5, cmp_r13_rax, jae_0x@@ 1d, test_rax_rax, je_0x18, cmp_byte_ptr_[rax@@ -1]@@ _0x20, jne_0x12, lea_rbx@@ _[rax-1], sub_ebx@@ _r13d, cmp_r12d_ebx, cmovl@@ _r12d@@ _ebx, add_rbp_8, mov_rdi_qword_ptr_[rbp], test_rdi_rdi, jne_0xffffffffffffffae, add_rsp_8, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, pop_r13, ret
endbr64, movzx_eax_byte_ptr_[rdi+0x@@ 26@@ 4], ret
endbr64, push_r13, xor_esi_esi, mov_r13_rdi, push_r12, push_rbp, sub_rsp_0x20, mov_rbp_rsp, mov_rdi_rbp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0x10@@ 7b@@ 8, lea_rdi_[rip+0x1b@@ 10@@ c], call_0xffffffffffff7@@ 9a@@ c, mov_rdi_rax, mov_r12_rax, call_0xffffffffffff7@@ 96@@ 1, mov_rdx_rax, mov_rsi_r12, mov_rdi_rbp, call_0x10@@ a@@ 63, mov_rdi_rbp, call_0x10@@ a@@ bb, mov_rdx_rax, xor_esi_esi, mov_rdi_r13, call_0xffffffffffffa@@ 2d@@ e, mov_rdi_rbp, call_0x10@@ b@@ 86, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xc, add_rsp_0x20, pop_rbp, pop_r12, pop_r13, ret, call_0xffffffffffff7@@ 92@@ 7
endbr64, push_r12, push_rbp, mov_rbp_rdi, lea_rdi_[rip+0x1b@@ 34@@ 3], sub_rsp_8, call_0xffffffffffff7@@ 93@@ b, mov_rdi_rax, mov_r12_rax, call_0xffffffffffff7@@ 8f@@ 0, mov_rdx_rax, lea_rdi_[rbp+0x@@ e0], mov_rsi_r12, call_0x10@@ 9e@@ e, mov_rax_qword_ptr_[rbp+0x@@ 258], movsxd_rdx_dword_ptr_[r@@ bp+0x@@ d0], mov_rdi_qword_ptr_[r@@ ax+rdx*8], mov_rax_qword_ptr_[rdi], mov_rax_qword_ptr_[rax], cmp_qword_ptr_[rax+8]_0, je_0x5c, add_rdi@@ _0x30, call_0x10@@ a@@ 26, mov_rcx_rax, mov_rdx_rbp, lea_rsi_[rip+0x1b@@ 1e@@ c], mov_edi_1, xor_eax_eax, call_0x55@@ 2d, movsxd_rdx_dword_ptr_[r@@ bp+0x@@ d0], mov_rax_qword_ptr_[rbp+0x@@ 258], mov_rdi_qword_ptr_[r@@ ax+rdx*8], add_rdi@@ _0x30, call_0x10@@ 9f@@ 2, mov_rdi_qword_ptr_[rbp+0x@@ 88], add_rsp_8, pop_rbp, mov_rsi_rax, mov_edx_0xffffffff, pop_r12, jmp_0xffffffffffff@@ 77@@ 87, add_rsp_8, mov_rdi_rbp, pop_rbp, pop_r12, jmp_0xfffffffffffffeb@@ 6
endbr64, push_r12, push_rbp, mov_rbp_rdi, lea_rdi_[rip+0x1b@@ 0@@ 3f], sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xffffffffffff7@@ 6f@@ b, mov_rdi_rax, mov_r12_rax, call_0xffffffffffff7@@ 6b@@ 0, mov_rdx_rax, lea_rdi_[rbp+0x@@ e0], mov_rsi_r12, call_0x10@@ 7a@@ e, mov_rdi_qword_ptr_[rbp+0x@@ 88], call_0xffffffffffff7@@ 4e@@ 2, movsxd_rdx_dword_ptr_[r@@ bp+0x@@ d0], mov_rax_qword_ptr_[rbp+0x@@ 258], mov_rax_qword_ptr_[rax+rdx*8], mov_rax_qword_ptr_[rax], mov_rax_qword_ptr_[rax], cmp_qword_ptr_[rax+8]_0, je_0x98, mov_r12_rsp, xor_esi_esi, mov_rdi_r12, call_0x10@@ 4a@@ 2, movsxd_rdx_dword_ptr_[r@@ bp+0x@@ d0], mov_rax_qword_ptr_[rbp+0x@@ 258], mov_rdi_r12, mov_rax_qword_ptr_[rax+rdx*8], mov_rsi_qword_ptr_[rax], lea_rdx_[r@@ si+0x@@ 48], call_0x6@@ 9c@@ 1, mov_rdi_r12, call_0x10@@ 7a@@ 9, mov_rcx_rax, mov_rdx_rbp, lea_rsi_[rip+0x1a@@ fb@@ f], mov_edi_1, xor_eax_eax, call_0x5@@ 2b0, mov_rdi_r12, call_0x10@@ 7@@ 88, mov_rdi_qword_ptr_[rbp+0x@@ 88], mov_rsi_rax, mov_edx_0xffffffff, call_0xffffffffffff7@@ 5@@ 24, mov_rdi_r12, call_0x10@@ 84@@ c, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x1b, add_rsp_0x28, pop_rbp, pop_r12, ret, mov_rdi_rbp, call_0xfffffffffffffc@@ 35, jmp_0xffffffffffffffd9, call_0xffffffffffff7@@ 5d@@ e
endbr64, push_r12, push_rbp, mov_rbp_rdi, lea_rdi_[rip+0x1a@@ f7@@ 7], sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0xffffffffffff7@@ 5d@@ b, mov_rdi_rax, mov_r12_rax, call_0xffffffffffff7@@ 5@@ 90, mov_rdx_rax, lea_rdi_[rbp+0x@@ e0], mov_rsi_r12, call_0x10@@ 68@@ e, mov_rdi_qword_ptr_[rbp+0x@@ 88], call_0xffffffffffff7@@ 3c@@ 2, movsxd_rdx_dword_ptr_[r@@ bp+0x@@ d0], mov_rax_qword_ptr_[rbp+0x@@ 258], mov_rax_qword_ptr_[rax+rdx*8], mov_rax_qword_ptr_[rax], mov_rax_qword_ptr_[rax], cmp_qword_ptr_[rax+8]_0, je_0x98, mov_r12_rsp, xor_esi_esi, mov_rdi_r12, call_0x10@@ 38@@ 2, movsxd_rdx_dword_ptr_[r@@ bp+0x@@ d0], mov_rax_qword_ptr_[rbp+0x@@ 258], mov_rdi_r12, mov_rax_qword_ptr_[rax+rdx*8], mov_rsi_qword_ptr_[rax], lea_rdx_[r@@ si+0x@@ c0], call_0x68@@ 9e, mov_rdi_r12, call_0x10@@ 68@@ 6, mov_rcx_rax, mov_rdx_rbp, lea_rsi_[rip+0x1a@@ ef@@ 4], mov_edi_1, xor_eax_eax, call_0x5@@ 18d, mov_rdi_r12, call_0x10@@ 66@@ 5, mov_rdi_qword_ptr_[rbp+0x@@ 88], mov_rsi_rax, mov_edx_0xffffffff, call_0xffffffffffff7@@ 401, mov_rdi_r12, call_0x10@@ 7@@ 29, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x18, add_rsp_0x28, pop_rbp, pop_r12, ret, mov_rdi_rbp, call_0xfffffffffffffb@@ 15, jmp_0xffffffffffffffdc, call_0xffffffffffff7@@ 4b@@ e
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x18, mov_r8d_dword_ptr_[r@@ di+0x@@ 26@@ c], cmp_r8d_1, je_0x1@@ 78, cmp_r8d@@ _2, je_0x2e, test_r8d_r8d, je_0x37, lea_rcx_[rip+0x@@ 19d@@ 0a], lea_rdx_[rip+0x1a@@ b@@ 35], mov_esi_0x3@@ 3, lea_rdi_[rip+0x1a@@ b@@ 10], xor_eax_eax, call_0x6d@@ 53, mov_eax_dword_ptr_[rsi+0x@@ 2c], mov_ecx_dword_ptr_[rdx+0x@@ 2c], cmp_eax_ecx, jne_0x14@@ 6, mov_r12_qword_ptr_[r@@ si], mov_rbp_qword_ptr_[r@@ dx], mov_rax_qword_ptr_[r12], mov_rdi_qword_ptr_[r12+0x@@ 28], mov_r14_qword_ptr_[r@@ ax+8], mov_rax_qword_ptr_[rbp], mov_rsi_qword_ptr_[rbp+0x@@ 28], mov_r15_qword_ptr_[r@@ ax+8], test_rdi_rdi, je_0x28, test_rsi_rsi, je_0x1@@ 8a, movzx_eax_byte_ptr_[rdi], movzx_edx_byte_ptr_[rsi], test_al_al, je_0x2c, test_dl_dl, je_0x28, call_0xffffffffffff6@@ dd@@ f, mov_r13d_eax, jmp_0x32, test_r14_r14, je_0x1@@ 7d, test_rsi_rsi, je_0x1@@ 54, movzx_edx_byte_ptr_[rsi], xor_eax_eax, xor_r13d_r13d, test_al_al, sete@@ _r13b, test_dl_dl, sete_dl, movzx_edx_dl, sub_r13d@@ _edx, mov_eax_dword_ptr_[r@@ 12+0x1c], mov_edx_eax, sub_edx@@ _dword_ptr_[r@@ bp+0x@@ 1c], jne_0x1b, cmp_eax_5, jne_0x16, mov_rsi_qword_ptr_[r@@ bp+0x20], mov_rdi_qword_ptr_[r12+0x@@ 20], call_0xffffffffffff6d@@ 8b, mov_edx_eax, test_r14_r14, je_0x7d, test_r15_r15, je_0x78, mov_rsi_r15, mov_rdi_r14, mov_dword_ptr_[rsp+0xc]_edx, call_0xffffffffffff6d@@ 6c, mov_edx_dword_ptr_[rsp+0xc], mov_r8d_dword_ptr_[rbx+0x@@ 268], cmp_r8d@@ _2, je_0x38, cmp_r8d@@ _3, je_0x41, cmp_r8d_1, je_0x8c, lea_rcx_[rip+0x@@ 1a@@ a4@@ 2], lea_rdx_[rip+0x1a@@ a@@ 2c], mov_esi_0x5@@ 4, lea_rdi_[rip+0x1a@@ a0@@ 7], xor_eax_eax, call_0x6c@@ 4a, test_edx_edx, jne_0x96, test_r13d_r13d, cmovne_eax@@ _r13d, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, xor_eax_eax, test_r15_r15, sete_al, xor_ecx_ecx, test_r14_r14, sete_cl, sub_eax_ecx, jmp_0xffffffffffffff8b, mov_eax_dword_ptr_[r@@ si+0x28], mov_ecx_dword_ptr_[r@@ dx+0x28], cmp_eax_ecx, je_0xfffffffffffffe@@ c6, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, sub_eax_ecx, pop_r15, ret, test_r13d_r13d, jne_0x1d, test_edx_edx, cmovne_eax_edx, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, pop_r14, pop_r15, ret, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_eax_edx, pop_r15, ret, lea_rdi_[rip+0x18@@ fb@@ 3], test_r15_r15, jne_0x25, xor_eax_eax, mov_r13d_1, sub_r13@@ d_eax, jmp_0xfffffffffffffe@@ b4, mov_eax_1, test_rsi_rsi, je_0x11, xor_r13d_r13d, jmp_0xffffffffffffff@@ e7, movzx_eax_byte_ptr_[rdi], xor_edx_edx, jmp_0xfffffffffffffe@@ 83, test_r15_r15, jne_0xffffffffffffffee, jmp_0xffffffffffffffd@@ 0
endbr64, mov_rdx_qword_ptr_[rsi], mov_rsi_qword_ptr_[rdi], mov_rdi_qword_ptr_[rip+0x2@@ c@@ 6d@@ f], jmp_0xfffffffffffffd@@ 9@@ f
endbr64, push_r12, mov_r12_rdi, push_rbp, push_rbx, mov_edx_dword_ptr_[rdi+0x@@ b8], test_edx_edx, jle_0x@@ ad, mov_r8_qword_ptr_[r@@ di+0x@@ 258], dec@@ _edx, mov_rax_r8, lea_rdi_[r@@ 8@@ +rdx*@@ 8+8], xor_ecx_ecx, mov_rdx_qword_ptr_[rax], mov_rsi_qword_ptr_[rdx], mov_rsi_qword_ptr_[rsi], cmp_qword_ptr_[r@@ si+@@ 8]_0, je_0xb, movsxd_rsi@@ _ecx, mov_qword_ptr_[r@@ 8+r@@ si*@@ 8]_rdx, inc@@ _ecx, add_rax_8, cmp_rdi_rax, jne_0xffffffffffffffe0, mov_rbx_qword_ptr_[r@@ 12+0x@@ 280], mov_dword_ptr_[r12+0x@@ b@@ 8]_ecx, test_rbx_rbx, je_0x43, mov_rbp_rbx, mov_rax_qword_ptr_[rbp], mov_rbx_qword_ptr_[r@@ bx+0x20], mov_rdi_qword_ptr_[rax], test_rdi_rdi, je_0xc, mov_esi_0x1@@ a8, call_0xffffffffffff7@@ 7@@ 98, lea_rdi_[r@@ bp+0x30], call_0x@@ ff@@ df, mov_esi_0x4@@ 8, mov_rdi_rbp, call_0xffffffffffff7@@ 78@@ 2, test_rbx_rbx, jne_0xffffffffffffffca, pop_rbx, pop_rbp, mov_qword_ptr_[r12+0x@@ 28@@ 0]_0, pop_r12, ret, xor_ecx_ecx, jmp_0xffffffffffffff9@@ 0
endbr64, push_rbp, mov_rbp_rdi, call_0xfffffffffffffe@@ 88, mov_rdi_rbp, mov_esi_0x2@@ e8, pop_rbp, jmp_0xffffffffffff@@ 7@@ 5c@@ a
endbr64, push_r15, mov_r15_r8, push_r14, push_r13, push_r12, push_rbp, mov_rbp_r9, push_rbx, sub_rsp_0x18, mov_r8d_dword_ptr_[r@@ di+0x@@ b8], mov_r9d_dword_ptr_[r@@ di+0x@@ 260], cmp_r8d@@ _r9d, jg_0x1@@ 5b, mov_rbx_rdi, mov_r14d_esi, mov_r13d_edx, mov_r10d@@ _ecx, jne_0x74, lea_eax_[r@@ 8+r@@ 8+0x@@ 32], mov_dword_ptr_[rdi+0x@@ 26@@ 0]_eax, movabs_rdx@@ _0xfffffffffffffff@@ , cdqe, cmp_rax_rdx, lea_rdi_[rax@@ *8], mov_rax_-1, cmova@@ _rdi_rax, mov_dword_ptr_[rsp+0xc]_ecx, call_0xffffffffffff7@@ 5@@ 32, mov_r8_qword_ptr_[rbx+0x@@ 258], movsxd_rdx_dword_ptr_[r@@ bx+0x@@ 260], mov_rsi_r8, shl_rdx_3, mov_rdi_rax, mov_qword_ptr_[rsp]_r8, mov_r12_rax, call_0xffffffffffff6e@@ 3e, mov_r8_qword_ptr_[rsp], mov_rdi_r8, call_0xffffffffffff7@@ 5@@ 32, mov_qword_ptr_[rbx+0x@@ 25@@ 8]_r12, mov_r10d_dword_ptr_[rsp+0xc], lea_rax_[rip+0x@@ 1a@@ 6@@ 19], test_rbp_rbp, mov_rdx_rax, cmovne_rdx@@ _rbp, test_r15_r15, push_rdx, cmovne_rax@@ _r15, mov_ecx_r14d, push_rax, mov_rdx_rbx, mov_r9d@@ _r10d, mov_r8d_r13d, lea_rsi_[rip+0x1a@@ 78@@ c], mov_edi_1, xor_eax_eax, mov_dword_ptr_[rsp+0x10]_r10d, call_0x47@@ 68, mov_edi_0x1@@ a8, call_0xffffffffffff7@@ 4@@ 9e, mov_r10d_dword_ptr_[rsp+0x10], mov_qword_ptr_[rax+0x@@ 30]@@ _r15, mov_dword_ptr_[rax+0x2@@ c]@@ _r10d, mov_qword_ptr_[rax+0x3@@ 8]_rbp, mov_qword_ptr_[rax+8]_0, mov_qword_ptr_[rax+0x1@@ 0]_rax, mov_edi_0x4@@ 8, mov_r12_rax, call_0xffffffffffff7@@ 47@@ 4, lea_rdi_[r@@ ax+0x30], xor_esi_esi, mov_rbp_rax, call_0xf@@ 8d@@ 6, lea_rax_[r12+0x10], mov_qword_ptr_[rbp]_rax, mov_rax_qword_ptr_[rbx+0x@@ 280], mov_rdx_qword_ptr_[rbx+0x@@ 258], mov_qword_ptr_[rbp+0x20]_rax, movsxd_rax_dword_ptr_[r@@ bx+0x@@ b8], mov_qword_ptr_[rbx+0x@@ 28@@ 0]_rbp, lea_ecx_[rax+1], mov_dword_ptr_[rbp+0x@@ 28]@@ _r14d, mov_dword_ptr_[rbp+0x@@ 2c]@@ _r13d, mov_qword_ptr_[r12+0x1@@ 4@@ 8]_rbp, mov_dword_ptr_[rbx+0x@@ b@@ 8]_ecx, mov_qword_ptr_[rdx@@ +rax*@@ 8]_rbp, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rcx_[rip+0x@@ 1a@@ 6a@@ d], lea_rdx_[rip+0x1a@@ 54@@ 4], mov_esi_0x7@@ 4, lea_rdi_[rip+0x1a@@ 4e@@ d], xor_eax_eax, call_0x67@@ 3@@ 0
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 35@@ 00@@ 5], endbr64, push_rbx, mov_rdx_rdi, mov_rbx_rdi, mov_qword_ptr_[rip+0x2@@ c@@ 2a@@ e@@ ]_rdi, lea_rsi_[rip+0x1a@@ 6c@@ f], mov_edi_1, xor_eax_eax, call_0x46@@ 80, movsxd_rsi@@ _dword_ptr_[rbx+0x@@ b8], mov_rdi_qword_ptr_[rbx+0x@@ 258], lea_rcx_[rip-0x@@ 46@@ a], mov_edx_8, pop_rbx, jmp_0xffffffffffff@@ 68@@ 9@@ 0
endbr64, push_r15, mov_rdx_rdi, lea_rsi_[rip+0x1a@@ 6a@@ 8], push_r14, xor_eax_eax, push_r13, push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_8, mov_r8d_dword_ptr_[r@@ di+0x@@ b8], mov_ecx_dword_ptr_[rdi+0x@@ 26@@ c], mov_edi_1, call_0x46@@ 1d, mov_r8d_dword_ptr_[r@@ 12+0x@@ 26@@ c], cmp_r8d_1, je_0x3c, cmp_r8d@@ _2, je_0x2@@ 2e, test_r8d_r8d, je_0x1@@ fd, lea_rcx_[rip+0x@@ 19@@ 6@@ 12], lea_rdx_[rip+0x1a@@ 47@@ a], mov_esi_0x1@@ 07, lea_rdi_[rip+0x1a@@ 418], xor_eax_eax, call_0x66@@ 5b, movzx_ecx_byte_ptr_[r@@ 12+0x@@ 278], xor_eax_eax, mov_rdx_r12, lea_rsi_[rip+0x1a@@ 69@@ 3], mov_edi_1, call_0x4@@ 5b@@ 6, cmp_byte_ptr_[r@@ 12+0x@@ 27@@ 8]_0, jne_0x14@@ 1, mov_edx_dword_ptr_[r12+0x@@ b8], xor_ebx_ebx, test_edx_edx, jg@@ _0x70, jmp_0x1@@ 24, cmp_r8d_1, ja@@ _0xfc, lea_rdi_[rbp+0x@@ 110], call_0xfd@@ 97, test_al_al, mov_rax_qword_ptr_[r12+0x@@ 258], mov_rax_qword_ptr_[rax+r@@ 14], jne_0x1@@ 14, mov_dword_ptr_[rax+0x@@ 28@@ ]_6, mov_r8d@@ _6, mov_ecx_r13d, mov_rdx_r12, lea_rsi_[rip+0x1a@@ 6a@@ b], mov_edi_1, xor_eax_eax, inc_rbx, call_0x45@@ 39, cmp_dword_ptr_[r12+0x@@ b@@ 8]_ebx, jle_0x@@ bc, mov_rax_qword_ptr_[r12+0x@@ 258], mov_esi_3, mov_rax_qword_ptr_[rax+r@@ bx*8], mov_r13d_ebx, mov_rdi_qword_ptr_[rax], lea_r14_[r@@ bx*8], call_0xc@@ 47@@ 7, mov_r8_rax, mov_ecx_ebx, xor_eax_eax, mov_rdx_r12, lea_rsi_[rip+0x1a@@ 60@@ 1], mov_edi_1, call_0x4@@ 4e@@ c, mov_rax_qword_ptr_[r12+0x@@ 258], mov_rax_qword_ptr_[rax+r@@ bx*8], mov_rbp_qword_ptr_[rax], mov_r8d_dword_ptr_[r@@ bp+0x18], cmp_r8d@@ _6, jbe_0xffffffffffffff@@ 48, cmp_r8d@@ _7, jne_0x2@@ 48, lea_r15_[r@@ bp+0x@@ 110], mov_rdi_r15, call_0x@@ fc@@ d6, test_al_al, jne_0x77, mov_rax_qword_ptr_[r12+0x@@ 258], mov_r8d_3, mov_rax_qword_ptr_[rax+r@@ 14], mov_dword_ptr_[rax+0x@@ 28@@ ]_3, jmp_0xffffffffffffff44, mov_dword_ptr_[rax+0x@@ 28]_0, xor_r8d_r8d, jmp_0xffffffffffffff2e, mov_byte_ptr_[r12+0x@@ 27@@ 8]_1, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_dword_ptr_[rax+0x@@ 28@@ ]_5, mov_r8d@@ _5, jmp_0xfffffffffffffef3, lea_rsi_[rbp+0x@@ 98], mov_rdi_r15, call_0x@@ fc@@ 7e, test_eax_eax, mov_rax_qword_ptr_[r12+0x@@ 258], mov_rax_qword_ptr_[rax+r@@ 14], jle_0x@@ 18@@ b, mov_dword_ptr_[rax+0x@@ 28]_2, mov_r8d_2, jmp_0xfffffffffffffe@@ b8, add_rsp_8, pop_rbx, pop_rbp, mov_rdx_r12, pop_r12, pop_r13, pop_r14, lea_rsi_[rip+0x1a@@ 49@@ 2], mov_edi_1, xor_eax_eax, pop_r15, jmp_0x4@@ 3e@@ 1, movzx_ecx_byte_ptr_[r@@ 12+0x@@ 27@@ 9], xor_eax_eax, mov_rdx_r12, lea_rsi_[rip+0x1a@@ 56@@ 3], mov_edi_1, call_0x4@@ 3b@@ e, cmp_byte_ptr_[r@@ 12+0x@@ 27@@ 9]_0, jne_0xffffffffffffff@@ 49, mov_eax_dword_ptr_[r12+0x@@ b8], xor_ebx_ebx, test_eax_eax, jg_0x4@@ 5, jmp_0x@@ ec, mov_dword_ptr_[rax+0x@@ 2c@@ ]_2, mov_r8d_2, mov_ecx_r13d, mov_rdx_r12, lea_rsi_[rip+0x1a@@ 56@@ e], mov_edi_1, xor_eax_eax, inc_rbx, call_0x4@@ 36@@ c, cmp_dword_ptr_[r12+0x@@ b@@ 8]_ebx, jle_0x@@ af, mov_rax_qword_ptr_[r12+0x@@ 258], mov_esi_3, mov_rax_qword_ptr_[rax+r@@ bx*8], mov_r13d_ebx, mov_rdi_qword_ptr_[rax], call_0xc@@ 2b@@ 2, mov_r8_rax, mov_rdx_r12, xor_eax_eax, mov_ecx_ebx, lea_rsi_[rip+0x1a@@ 4@@ 3c], mov_edi_1, call_0x4@@ 32@@ 7, mov_rax_qword_ptr_[r12+0x@@ 258], mov_rax_qword_ptr_[rax+r@@ bx*8], mov_rdx_qword_ptr_[rax], mov_r8d_dword_ptr_[r@@ dx+0x18], cmp_r8d@@ _6, ja_0x2@@ b, cmp_r8d_1, ja_0x4@@ 5, test_r8d_r8d, jne_0xffffffffffffff@@ 70, mov_dword_ptr_[rax+0x@@ 2c@@ ]_3, mov_r8d_3, jmp_0xffffffffffffff6a, cmp_r8d@@ _7, jne_0x7f, mov_dword_ptr_[rax+0x@@ 2c]_1, mov_r8d_1, jmp_0xffffffffffffff4a, mov_dword_ptr_[rax+0x@@ 2c]_0, xor_r8d_r8d, jmp_0xffffffffffffff33, mov_byte_ptr_[r12+0x@@ 27@@ 9]_1, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_dword_ptr_[rax+0x@@ 28@@ ]_4, mov_r8d_4, jmp_0xfffffffffffffd@@ 33, lea_rcx_[rip+0x@@ 1a@@ 3b@@ f], lea_rdx_[rip+0x1a@@ 101], mov_esi_0x@@ dd, lea_rdi_[rip+0x1a@@ 0@@ 9f], xor_eax_eax, call_0x6@@ 2e@@ 2, lea_rcx_[rip+0x@@ 1a@@ 42@@ e], lea_rdx_[rip+0x1a@@ 0@@ e0], mov_esi@@ _0xfe, lea_rdi_[rip+0x1a@@ 0@@ 7e], xor_eax_eax, call_0x6@@ 2c@@ 1
endbr64, push_r15, mov_r15_rdi, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x48, call_0xfffffffffffff76@@ b, mov_rdi_r15, call_0xfffffffffffffb@@ c3, mov_rdi_r15, call_0xfffffffffffffb@@ 6b, mov_edx_dword_ptr_[r15+0x@@ b8], test_edx_edx, je_0x5@@ 9c, mov_ecx_dword_ptr_[r15+0x@@ 268], mov_r8d_dword_ptr_[r@@ 15+0x@@ 26@@ c], xor_eax_eax, mov_rdx_r15, lea_rsi_[rip+0x1a@@ 40@@ d], mov_edi_1, call_0x4@@ 1d8, xor_r9d_r9d, xor_r8d_r8d, mov_ecx_0xffffffff, mov_edx_0xffffffff, mov_esi_0xffffffff, mov_rdi_r15, mov_ebx_dword_ptr_[r@@ 15+0x@@ b8], call_0xfffffffffffff9@@ 64, mov_eax_dword_ptr_[r15+0x@@ 268], test_eax_eax, je_0x5@@ 24, cmp_qword_ptr_[r15+0x@@ 26@@ 8]_3, je_0x3@@ db, lea_eax_[rbx-1], mov_qword_ptr_[rsp+0x18]_rax, xor_r13d_r13d, xor_r14d_r14d, test_ebx_ebx, jg_0x1@@ c9, jmp_0x3@@ ae, mov_rax_qword_ptr_[r14+0x1@@ 38], mov_ecx_1, mov_ebx_dword_ptr_[r@@ ax+0x@@ 2c], mov_dword_ptr_[rsp+0x10]@@ _ebx, test_rbp_rbp, je_0x11, mov_rdx_qword_ptr_[rbp+0x@@ 138], xor_ecx_ecx, cmp_dword_ptr_[rdx+0x@@ 2c]@@ _ebx, setne_cl, mov_eax_dword_ptr_[rax+0x28], mov_dword_ptr_[rsp+0xc]@@ _0xffffffff, mov_dword_ptr_[rsp+0x14]_eax, mov_eax_dword_ptr_[rsp+0x10], mov_dword_ptr_[rsp+0x38]_eax, test_rbp_rbp, je_0x2@@ 9e, mov_r10d_dword_ptr_[r@@ 14+0x1@@ c], mov_ebx_1, cmp_dword_ptr_[rbp+0x@@ 1c]@@ _r10d, je_0x3@@ 7c, mov_rsi_qword_ptr_[rbp+0x@@ 28], test_rsi_rsi, je_0x3@@ af, mov_rbp_qword_ptr_[r@@ 14+0x28], test_rbp_rbp, je_0x4@@ 12, mov_rdi_rbp, mov_dword_ptr_[rsp+0x28]@@ _r10d, mov_dword_ptr_[rsp+0x20]@@ _ecx, call_0xffffffffffff6@@ 250, cmp_eax_1, sbb@@ _r12d_r12d, inc_r12d, lea_r9_[rip+0x@@ 1c@@ 15@@ f], test_eax_eax, lea_rax_[rip+0x@@ 19@@ f7@@ 6], cmovne@@ _r9_rax, mov_ecx_dword_ptr_[rsp+0x20], mov_r10d_dword_ptr_[rsp+0x@@ 28], test_bl_bl, lea_rdx_[rip+0x1c@@ 140], lea_rax_[rip+0x@@ 19@@ f5@@ 9], cmovne_rdx_rax, lea_r8_[rip+0x@@ 1d@@ b@@ 84], cmp_r10d@@ _5, jne_0x14, mov_r8_qword_ptr_[r@@ 14+0x20], lea_rax_[rip+0x@@ 19@@ f@@ 18], test_r8_r8, cmove@@ _r8_rax, test_ecx_ecx, je_0x1@@ 40, mov_esi_3, mov_rdi_r14, mov_dword_ptr_[rsp+0x3c]@@ _r10d, mov_qword_ptr_[rsp+0x30]_r9, mov_qword_ptr_[rsp+0x28]_rdx, mov_qword_ptr_[rsp+0x20]_r8, call_0xb@@ fd@@ e, mov_r9_qword_ptr_[rsp+0x30], mov_rcx_rax, push_r9, lea_rax_[rip+0x@@ 19@@ f@@ 40], lea_rsi_[rip+0x1a@@ 2f@@ 1], push_rbp, mov_edi_1, mov_rdx_qword_ptr_[rsp+0x38], push_rdx, mov_rdx_r15, mov_r8_qword_ptr_[rsp+0x38], push_r8, mov_r10d_dword_ptr_[rsp+0x@@ 5c], push_r10, push_rax, xor_eax_eax, mov_r9d_dword_ptr_[rsp+0x@@ 68], mov_r8d_dword_ptr_[rsp+0x@@ 44], call_0x40@@ 27, mov_edx_dword_ptr_[rsp+0x40], mov_esi_dword_ptr_[rsp+0x@@ 3c], add_rsp_0x30, xor_r9d_r9d, xor_r8d_r8d, mov_ecx_0xffffffff, mov_rdi_r15, call_0xfffffffffffff7b@@ 8, mov_eax_dword_ptr_[r15+0x@@ 268], cmp_eax_1, jne_0xb, test_r12b_r12b, jne_0x2@@ c4, cmp_eax_2, jne_0xa, test_bl_bl, jne_0x1@@ b7, cmp_eax_3, je_0x13, test_bl_bl, jne_0x1@@ d3, test_r12b_r12b, jne_0x1@@ ca, lea_rax_[r@@ 13+1], cmp_r13@@ _qword_ptr_[rsp+0x18], je_0x1@@ f4, mov_r13_rax, mov_rax_qword_ptr_[r15+0x@@ 258], mov_rbp_r14, mov_rax_qword_ptr_[rax+r@@ 13*8], mov_r14_qword_ptr_[rax], mov_rax_qword_ptr_[r14], cmp_qword_ptr_[rax+8]_0, je_0x2@@ fa, mov_r8d_dword_ptr_[r@@ 15+0x@@ 26@@ c], cmp_r8d_1, je_0xb7, cmp_r8d@@ _2, je_0xfffffffffffffe@@ 15, test_r8d_r8d, je_0x11c, lea_rcx_[rip+0x@@ 18@@ f@@ 91], lea_rdx_[rip+0x19@@ e@@ 27], mov_esi_0x1@@ 39, lea_rdi_[rip+0x@@ 19d@@ 97], xor_eax_eax, call_0x5@@ fd@@ a, mov_esi_3, mov_rdi_r14, mov_dword_ptr_[rsp+0x3c]@@ _r10d, mov_qword_ptr_[rsp+0x30]_r9, mov_qword_ptr_[rsp+0x28]_rdx, mov_qword_ptr_[rsp+0x20]_r8, call_0xb@@ ea@@ 4, mov_r9_qword_ptr_[rsp+0x30], mov_rcx_rax, push_r9, lea_rax_[rip+0x@@ 1b@@ fa@@ 2], lea_rsi_[rip+0x1a@@ 1b@@ 7], push_rbp, mov_edi_1, mov_rdx_qword_ptr_[rsp+0x38], push_rdx, mov_rdx_r15, mov_r8_qword_ptr_[rsp+0x38], push_r8, mov_r10d_dword_ptr_[rsp+0x@@ 5c], push_r10, push_rax, xor_eax_eax, mov_r9d_dword_ptr_[rsp+0x@@ 68], mov_r8d_dword_ptr_[rsp+0x@@ 44], call_0x3e@@ ed, add_rsp_0x30, jmp_0xfffffffffffffee1, mov_rax_qword_ptr_[r14+0x1@@ 38], mov_ecx_1, mov_edi_dword_ptr_[r@@ ax+0x28], mov_dword_ptr_[rsp+0xc]@@ _edi, test_rbp_rbp, je_0x11, mov_rdx_qword_ptr_[rbp+0x@@ 138], xor_ecx_ecx, cmp_dword_ptr_[rdx+0x@@ 28]@@ _edi, setne_cl, mov_eax_dword_ptr_[rax+0x@@ 2c], mov_dword_ptr_[rsp+0x10]@@ _0xffffffff, mov_dword_ptr_[rsp+0x38]_eax, mov_eax_dword_ptr_[rsp+0xc], mov_dword_ptr_[rsp+0x14]_eax, test_rbp_rbp, jne_0xfffffffffffffd@@ 6e, mov_rbp_qword_ptr_[r@@ 14+0x28], mov_ebx_1, mov_r12d_1, test_rbp_rbp, je_0x1@@ bf, lea_r9_[rip+0x@@ 19d@@ 16], mov_r10d_dword_ptr_[r@@ 14+0x1@@ c], mov_rdx_r9, jmp_0xfffffffffffffd@@ ba, mov_rax_qword_ptr_[r14+0x1@@ 38], mov_dword_ptr_[rsp+0x10]@@ _0xffffffff, mov_esi_dword_ptr_[rax+0x@@ 2c], mov_eax_dword_ptr_[rax+0x28], mov_dword_ptr_[rsp+0x3@@ 8]_esi, mov_dword_ptr_[rsp+0x14]_eax, mov_dword_ptr_[rsp+0xc]@@ _0xffffffff, xor_ecx_ecx, jmp_0xfffffffffffffd@@ 07, mov_ecx_dword_ptr_[r@@ 14+0x1@@ c], mov_r8_qword_ptr_[r@@ 14+0x20], mov_edx_dword_ptr_[rsp+0x10], mov_esi_dword_ptr_[rsp+0xc], xor_r9d_r9d, mov_rdi_r15, call_0xfffffffffffff5c@@ a, cmp_dword_ptr_[r15+0x@@ 26@@ 8]_3, je_0xfffffffffffffe@@ 42, mov_r9_qword_ptr_[r@@ 14+0x28], lea_rax_[rip+0x18@@ 2a@@ 6], test_r9_r9, cmove@@ _r9_rax, mov_ecx_dword_ptr_[r@@ 14+0x1@@ c], mov_r8_qword_ptr_[r@@ 14+0x20], mov_edx_dword_ptr_[rsp+0x10], mov_esi_dword_ptr_[rsp+0xc], mov_rdi_r15, call_0xfffffffffffff5@@ 92, lea_rax_[r@@ 13+1], cmp_r13@@ _qword_ptr_[rsp+0x18], jne_0xfffffffffffffe@@ 18, mov_rdi_qword_ptr_[r15+0x@@ 80], test_rdi_rdi, je_7, call_0xffffffffffff5f@@ 82, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_rdi_r15, pop_r15, jmp_0xfffffffffffff@@ 70@@ c, xor_ebx_ebx, cmp_r10d@@ _5, jne_0xfffffffffffffc@@ 84, mov_rsi_qword_ptr_[r@@ bp+0x20], mov_rdi_qword_ptr_[r14+0x@@ 20], mov_dword_ptr_[rsp+0x28]@@ _r10d, mov_dword_ptr_[rsp+0x20]@@ _ecx, call_0xffffffffffff5e@@ e3, mov_rsi_qword_ptr_[rbp+0x@@ 28], test_eax_eax, mov_ecx_dword_ptr_[rsp+0x20], mov_r10d_dword_ptr_[rsp+0x@@ 28], setne_bl, test_rsi_rsi, jne_0xfffffffffffffc@@ 60, mov_rbp_qword_ptr_[r@@ 14+0x28], lea_rsi_[rip+0x18@@ 1@@ ff], test_rbp_rbp, jne_0xfffffffffffffc@@ 56, xor_r12d_r12d, lea_r9_[rip+0x@@ 1b@@ dc@@ 6], lea_rbp_[rip+0x@@ 19@@ bb@@ a], jmp_0xfffffffffffffc@@ 76, mov_r9_qword_ptr_[r@@ 14+0x28], lea_rax_[rip+0x18@@ 1c@@ f], test_r9_r9, cmove@@ _r9_rax, mov_edx_dword_ptr_[rsp+0x10], mov_esi_dword_ptr_[rsp+0xc], xor_r8d_r8d, mov_ecx_0xffffffff, mov_rdi_r15, call_0xfffffffffffff4b@@ b, mov_eax_dword_ptr_[r15+0x@@ 268], jmp_0xfffffffffffffd@@ 11, cmp_byte_ptr_[rsi@@ ]_1, sbb@@ _r12d_r12d, inc_r12d, lea_r9_[rip+0x@@ 1b@@ d@@ 64], cmp_byte_ptr_[rsi]_0, lea_rax_[rip+0x@@ 19@@ b7@@ a], cmovne@@ _r9_rax, lea_rbp_[rip+0x@@ 19@@ b4@@ a], jmp_0xfffffffffffffc@@ 06, lea_r9_[rip+0x@@ 19@@ b5@@ d], mov_r10d_dword_ptr_[r@@ 14+0x1@@ c], lea_rbp_[rip+0x@@ 19b@@ 2d], mov_rdx_r9, jmp_0xfffffffffffffb@@ fa, mov_r8d_r13d, lea_rcx_[rip+0x@@ 19@@ f0@@ c], lea_rdx_[rip+0x19@@ b@@ 54], mov_esi_0x1@@ 29, lea_rdi_[rip+0x19@@ ac@@ 4], xor_eax_eax, call_0x5d@@ 07, lea_rcx_[rip+0x@@ 19b@@ 48], lea_rdx_[rip+0x19@@ b@@ 33], mov_esi_0x1@@ 1b, lea_rdi_[rip+0x19@@ aa@@ 3], xor_eax_eax, call_0x5c@@ e6, lea_rcx_[rip+0x@@ 19@@ b0@@ 5], lea_rdx_[rip+0x19@@ b@@ 12], mov_esi_0x1@@ 11, lea_rdi_[rip+0x19@@ a8@@ 2], xor_eax_eax, call_0x5c@@ c@@ 5
endbr64, push_r14, mov_rdx_rdi, lea_rsi_[rip+0x19@@ f@@ 40], push_r13, xor_eax_eax, push_r12, mov_r12_rdi, mov_edi_1, push_rbp, push_rbx, call_0x3c@@ 20, call_0xb@@ 65@@ b, movsxd_rbx_eax, movabs_rax_0x1@@ c7@@ 1c@@ 7@@ 1c@@ 7@@ 1c@@ 7@@ 1c@@ 7, mov_r13_rbx, mov_rdi@@ _-1, cmp_rbx_rax, ja@@ _0xe, lea_rax_[rbx+r@@ bx*8], lea_rdi_[rax@@ *8+8], call_0xffffffffffff6@@ 93@@ e, mov_qword_ptr_[rax]_rbx, lea_r14@@ _[rax+8], dec@@ _rbx, js_0x2@@ 7, mov_rbp_r14, lea_rdi_[r@@ bp+0x30], xor_esi_esi, dec@@ _rbx, call_0x@@ ed@@ 77, add_rbp@@ _0x48, cmp_rbx@@ _-1, jne_0xffffffffffffffea, add_r13d@@ _0x@@ 96, mov_dword_ptr_[r12+0x@@ 26@@ 0]@@ _r13d, movabs_rax@@ _0xfffffffffffffff@@ , movsxd_r13@@ _r13d, cmp_r13_rax, mov_qword_ptr_[r12+0x@@ 25@@ 0]_r14, lea_rdi_[r@@ 13*8], mov_rax_-1, cmova@@ _rdi_rax, call_0xffffffffffff6@@ 8c@@ e, pop_rbx, pop_rbp, mov_qword_ptr_[r12+0x@@ 25@@ 8]_rax, xor_eax_eax, mov_qword_ptr_[r12+0x@@ 2d@@ 8]_0, mov_qword_ptr_[r12+0x@@ 2e@@ 0]_0, mov_qword_ptr_[r12+0x@@ 2d@@ 0]_0, mov_qword_ptr_[r12+0x@@ 28@@ 0]_0, mov_byte_ptr_[r12+0x@@ 26@@ 5]_0, mov_word_ptr_[r@@ 12+0x@@ 27@@ 8]_ax, mov_byte_ptr_[r12+0x@@ 28@@ 8]_0, pop_r12, pop_r13, pop_r14, ret
endbr64, push_r12, xor_esi_esi, mov_r12_rdi, call_0xffffffffffff7@@ 16@@ 5, movzx_ecx_byte_ptr_[r@@ 12+0x@@ 26@@ 4], mov_r8d_dword_ptr_[r@@ 12+0x@@ b8], mov_rdx_r12, lea_rsi_[rip+0x19@@ e@@ 15], mov_edi_1, xor_eax_eax, pop_r12, jmp_0x3@@ ad@@ c
endbr64, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, push_rbx, call_0xffffffffffff7@@ f7@@ 2, lea_rax_[rip+0x@@ 2a@@ 0@@ d6], mov_qword_ptr_[rbp]_rax, mov_qword_ptr_[rbp+0x@@ 18@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 18@@ 8]_0, mov_qword_ptr_[rbp+0x@@ 19@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 19@@ 8]_0, mov_qword_ptr_[rbp+0x@@ 1a@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 1a@@ 8]_0, mov_qword_ptr_[rbp+0x@@ 1b@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 1b@@ 8]_0, mov_qword_ptr_[rbp+0x@@ 1c@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 1c@@ 8]_0, mov_qword_ptr_[rbp+0x@@ 1d@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 1d@@ 8]_0, mov_qword_ptr_[rbp+0x@@ 1e@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 1e@@ 8]_0, mov_qword_ptr_[rbp+0x@@ 1f@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 1f@@ 8]_0, mov_qword_ptr_[rbp+0x@@ 2@@ 00]_0, mov_qword_ptr_[rbp+0x@@ 20@@ 8]_0, mov_qword_ptr_[rbp+0x@@ 2@@ 10]_0, mov_qword_ptr_[rbp+0x@@ 2@@ 18]_0, mov_qword_ptr_[rbp+0x@@ 22@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 22@@ 8]_0, mov_qword_ptr_[rbp+0x@@ 23@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 23@@ 8]_0, mov_qword_ptr_[rbp+0x@@ 24@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 24@@ 8]_0, mov_rdi_rbp, call_0xfffffffffffffa@@ 71, mov_byte_ptr_[rbp+0x@@ 26@@ 4]_1, mov_dword_ptr_[rbp+0x@@ b8]_0, test_r12_r12, je_0x34, mov_rsi_qword_ptr_[r12], test_rsi_rsi, je_0x23, mov_rbx_r12, add_rbx_8, mov_rdi_rbp, call_0x3@@ 99, mov_rsi_qword_ptr_[rbx], test_rsi_rsi, jne_0xffffffffffffffee, mov_rdi_r12, call_0xffffffffffff6@@ 3e@@ 9, pop_rbx, mov_qword_ptr_[rbp+0x@@ 26@@ 8]_0, mov_qword_ptr_[rbp+0x@@ 27@@ 0]_0, mov_rdi_rbp, pop_rbp, pop_r12, jmp_0xfffffffffffffb@@ 3@@ 7
endbr64, push_r15, mov_rcx_rsi, push_r14, push_r13, mov_r13_rsi, lea_rsi_[rip+0x19@@ 4d@@ 9], push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_0x38, mov_dword_ptr_[rsp+0xc]_edx, mov_rdx_rdi, mov_edi_1, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0x2e@@ 82, lea_rsi_[r12+0x@@ 2d8], mov_rdx_r13, mov_rdi_r12, call_0xfffffffffffffe@@ 1f, mov_r8d_eax, xor_eax_eax, test_r8b_r8b, je_0x2a, mov_rcx_qword_ptr_[rsp+0x28], xor_rcx_qword_ptr_fs:[0x28], jne_0x2@@ fd, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rbp_[rsp+0x10], xor_esi_esi, mov_rdi_rbp, call_0xd@@ fd@@ e, mov_rax_qword_ptr_[r13], mov_rax_qword_ptr_[rax], mov_r15_qword_ptr_[r@@ ax+8], mov_rdi_r15, call_0xffffffffffff5@@ 18@@ b, mov_rdx_rax, mov_rsi_r15, mov_rdi_rbp, call_0xe@@ 28@@ d, mov_esi_0x20, mov_rdi_rbp, call_0xe0@@ 60, movsxd_rdx_dword_ptr_[r@@ 13+0x18], lea_rax_[rip+0x27@@ d@@ 90], mov_rdi_qword_ptr_[r@@ ax+rdx*8], call_0xffffffffffff5@@ 19@@ c, mov_rdi_rax, mov_r15_rax, call_0xffffffffffff5@@ 151, mov_rdx_rax, mov_rsi_r15, mov_rdi_rbp, call_0xe@@ 25@@ 3, mov_esi_0x20, mov_rdi_rbp, call_0xe0@@ 26, mov_r15_qword_ptr_[r@@ 13+0x10], test_r15_r15, je_0x10b, xor_edx_edx, lea_rsi_[rip+0x17@@ 25@@ 5], lea_rbx_[rip+0x@@ 19@@ 5@@ 90], mov_rdi_rbp, call_0xe@@ 2@@ 1d, mov_rax_qword_ptr_[r15+8], mov_r14_qword_ptr_[r@@ ax+8], mov_rdi_r14, call_0xffffffffffff50@@ fd, mov_rdx_rax, mov_rsi_r14, mov_rdi_rbp, call_0xe@@ 1@@ ff, mov_r8d_dword_ptr_[r@@ 15+0x@@ 48], test_r8d_r8d, jne_0x43, mov_r15_qword_ptr_[r@@ 15+0x10], test_r15_r15, je_0xaf, cmp_qword_ptr_[r@@ 15+0x1@@ 0]_0, mov_edx_2, lea_rsi_[rip+0x13@@ 74@@ 2], jne_0xffffffffffffffb3, lea_rdi_[rip+0x19@@ 5@@ 2f], call_0xffffffffffff50@@ fa, mov_rdi_rax, mov_qword_ptr_[rsp]_rax, call_0xffffffffffff50@@ ae, mov_rdx_rax, mov_rsi_qword_ptr_[rsp], jmp_0xffffffffffffff92, cmp_r8d@@ _5, ja_0x1@@ b6, mov_eax_r8d, movsxd_rax_dword_ptr_[r@@ bx+rax*4], add_rax_rbx, jmp_rax, lea_rdi_[rip+0x19@@ 49@@ 9], call_0xffffffffffff50@@ 64, mov_esi_0xa, mov_rdi_rbp, call_0xd@@ f0@@ 7, mov_rdi_rbp, call_0xe@@ 17@@ f, mov_ecx_dword_ptr_[rsp+0xc], mov_rsi_qword_ptr_[r13], mov_rdx_rax, mov_rdi_r12, call_0xfffffffffffffb@@ 9c, mov_rbx_qword_ptr_[r@@ 13+0x10], test_rbx_rbx, je_0x35, mov_rdi_rbp, call_0xe@@ 15@@ b, mov_rdx_rax, mov_rax_qword_ptr_[rbx+8], mov_ecx_dword_ptr_[rsp+0xc], lea_rsi_[rax+0x10], mov_rdi_r12, call_0xfffffffffffffb@@ 74, cmp_dword_ptr_[r@@ 13+0x1@@ 8@@ ]_6, jne_0x8a, mov_rbx_qword_ptr_[rbx+0x10], test_rbx_rbx, jne_0xffffffffffffffcf, mov_rdi_rbp, call_0xe@@ 208, mov_eax_1, jmp_0xfffffffffffffdd@@ e, mov_rax_qword_ptr_[rbx+8], mov_r15_qword_ptr_[r@@ ax+0x1@@ 90], test_r15_r15, je_0xffffffffffffff@@ 6e, mov_rax_qword_ptr_[r15], cmp_dword_ptr_[rax+0x1@@ 8@@ ]_6, jne_0x31, mov_rdi_rbp, call_0xe0@@ 90, mov_rdx_rax, mov_rax_qword_ptr_[r15], mov_r14d@@ _dword_ptr_[rsp+0xc], mov_rsi_qword_ptr_[rax], mov_rdi_r12, mov_ecx_r14d, call_0xfffffffffffffaa@@ 7, mov_rsi_qword_ptr_[r15], mov_edx_r14d, mov_rdi_r12, call_0xfffffffffffffcc@@ 9, mov_r15_qword_ptr_[r@@ 15+0x18], test_r15_r15, jne_0xffffffffffffffc1, jmp_0xffffffffffffff27, lea_rcx_[rip+0x@@ 19@@ 33@@ 7], lea_rdx_[rip+0x19@@ 34@@ 9], mov_esi_0x@@ 9a, lea_rdi_[rip+0x19@@ 2e@@ b], xor_eax_eax, call_0x4@@ bd@@ a, call_0xffffffffffff4@@ ed@@ 5
endbr64, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdx, sub_rsp_8, mov_rax_qword_ptr_[rsi], test_rax_rax, jne_0x12, jmp_0x28, mov_rax_qword_ptr_[rax], test_rax_rax, je_0x1a, cmp_qword_ptr_[rax+@@ 8]_rbx, jne_0xfffffffffffffff4, add_rsp_8, pop_rbx, mov_eax_1, pop_rbp, ret, mov_rdx_rdi, mov_r8_rbx, mov_rcx_rbp, lea_rsi_[rip+0x19@@ 550], mov_edi_1, xor_eax_eax, call_0x2@@ ff@@ 9, mov_edi_0x10, call_0xffffffffffff5d@@ 2f, mov_rdx_qword_ptr_[rbp], mov_qword_ptr_[rax+8]_rbx, mov_qword_ptr_[rax]_rdx, mov_qword_ptr_[rbp]_rax, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret
endbr64, push_r12, mov_rcx_rsi, mov_rdx_rdi, push_rbp, xor_eax_eax, mov_rbp_rdi, push_rbx, mov_edi_1, mov_rbx_rsi, lea_rsi_[rip+0x19@@ 5@@ 2e], call_0x2@@ fa@@ e, cmp_byte_ptr_[rbp+0x@@ 26@@ 4]_0, jne_0xa, pop_rbx, pop_rbp, pop_r12, ret, lea_rsi_[rbp+0x@@ 2e0], mov_rdx_rbx, mov_rdi_rbp, call_0xffffffffffffff@@ 3b, test_al_al, jne_0xffffffffffffffe4, mov_rax_qword_ptr_[rbx], mov_rdi_qword_ptr_[rax], mov_rax_qword_ptr_[rdi+0x1@@ 38], test_rax_rax, je_0x54, cmp_qword_ptr_[rax+0x20]_0, je_0x7b, lea_rbp_[r@@ ax+0x30], mov_rax_qword_ptr_[rbx+8], mov_r12_qword_ptr_[r@@ ax+8], mov_rdi_r12, call_0xffffffffffff5@@ 2c@@ a, mov_rdx_rax, mov_rsi_r12, mov_rdi_rbp, call_0xe@@ 3c@@ c, lea_rdi_[rip+0x19@@ 548], call_0xffffffffffff5@@ 2f@@ 0, mov_rdi_rax, mov_r12_rax, call_0xffffffffffff5@@ 2a@@ 5, pop_rbx, mov_rdi_rbp, pop_rbp, mov_rsi_r12, mov_rdx_rax, pop_r12, jmp_0x@@ e@@ 3a@@ 3, mov_esi_3, call_0xa@@ e@@ 89, mov_r8_rax, lea_rcx_[rip+0x@@ 19@@ 4a@@ a], lea_rdx_[rip+0x19@@ 68@@ 3], mov_esi_0x6@@ 9, lea_rdi_[rip+0x19@@ 68@@ 6], xor_eax_eax, call_0x4@@ f7@@ 5, mov_esi_3, call_0xa@@ e@@ 5b, mov_r8_rax, lea_rcx_[rip+0x@@ 19@@ 4a@@ c], lea_rdx_[rip+0x19@@ 65@@ 5], mov_esi_0x6@@ c, lea_rdi_[rip+0x19@@ 6@@ 58], xor_eax_eax, call_0x4@@ f4@@ 7
endbr64, push_r13, mov_ecx_esi, mov_rdx_rdi, push_r12, xor_eax_eax, mov_r13d_esi, push_rbp, lea_rsi_[rip+0x19@@ 18@@ e], mov_rbp_rdi, push_rbx, sub_rsp_8, mov_r8d_dword_ptr_[r@@ di+0x@@ b8], mov_edi_1, call_0x2b@@ 22, mov_eax_dword_ptr_[rbp+0x@@ b8], test_eax_eax, jle_0x@@ 95, xor_ebx_ebx, xor_r12d_r12d, jmp_0x24, cmp_r12d_ebx, je_9, movsxd_rdx_r12d, mov_qword_ptr_[rax+rdx*@@ 8]_rdi, inc_rbx, inc_r12d, cmp_dword_ptr_[rbp+0x@@ b@@ 8]_ebx, jle_0x@@ 2a, mov_rax_qword_ptr_[rbp+0x@@ 258], mov_rdi_qword_ptr_[rax+r@@ bx*8], cmp_r13d@@ _dword_ptr_[r@@ di+0x1@@ c], jle_0xffffffffffffff@@ d7, movzx_esi_byte_ptr_[r@@ bp+0x@@ 26@@ 4], inc_rbx, call_0xfffffffffffff48@@ b, cmp_dword_ptr_[rbp+0x@@ b@@ 8]_ebx, jg_0xffffffffffffff@@ da, mov_dword_ptr_[rbp+0x@@ b@@ 8]_r12d, mov_r8d_r12d, mov_ecx_r13d, mov_rdx_rbp, xor_eax_eax, lea_rsi_[rip+0x19@@ 12@@ 5], mov_edi_1, call_0x2@@ aa@@ 0, mov_eax_dword_ptr_[rbp+0x@@ b8], add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, xor_r12d_r12d, jmp_0xffffffffffffffb@@ f
endbr64, push_r14, xor_eax_eax, push_r13, mov_r13_rdx, mov_rdx_rdi, push_r12, mov_r12d_esi, lea_rsi_[rip+0x19@@ 10@@ 4], push_rbp, mov_rbp_rdi, mov_edi_1, push_rbx, call_0x2a@@ 4a, mov_rdi_rbp, call_0xffffffffffffc@@ a0@@ 2, test_eax_eax, jne_0x3b, xor_eax_eax, mov_rdx_rbp, lea_rsi_[rip+0x19@@ 18@@ 5], mov_edi_1, call_0x2a@@ 28, test_rbp_rbp, je_0x108, pop_rbx, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, mov_rax_qword_ptr_[rax+0x60], pop_r14, jmp_rax, mov_esi_r12d, mov_rdi_rbp, call_0xfffffffffffffea@@ a, test_eax_eax, je_0xffffffffffffff@@ ba, xor_eax_eax, mov_rdx_rbp, lea_rsi_[rip+0x19@@ 0@@ bd], mov_edi_1, call_0x2@@ 9e0, test_r13_r13, je_0xa, mov_rdi_r13, call_0xffffffffffff6b@@ 23, lea_rbx_[rip+0x@@ 190@@ c7], jmp_0x7@@ 9, mov_rdx_rbp, mov_rsi_rbx, xor_eax_eax, mov_edi_1, call_0x2@@ 9b@@ 3, mov_rax_qword_ptr_[rbp], mov_rdi_rbp, mov_r14_qword_ptr_[r@@ bp+0x@@ 178], call_qword_ptr_[rax+0x@@ 60], mov_edi_0x2@@ e8, call_0xffffffffffff56@@ d8, mov_rbp_rax, mov_rdi_rax, mov_rdx_r12, mov_rsi_r14, call_0xfffffffffffff@@ 19@@ 7, mov_rdi_rbp, call_0xffffffffffffc@@ 93@@ f, cmp_eax_1, jle_0x@@ 6f, mov_esi_3, mov_rdi_rbp, call_0xfffffffffffffe@@ 1d, test_eax_eax, je_0x5e, mov_rdx_rbp, lea_rsi_[rip+0x19@@ 0@@ 82], mov_edi_1, xor_eax_eax, call_0x2@@ 95@@ 3, mov_rdi_rbp, mov_byte_ptr_[rip+0x2@@ a5@@ 5c]_0, call_0xfffffffffffff33@@ 4, mov_r12_rax, test_rax_rax, jne_0xffffffffffffff@@ 79, test_r13_r13, je_0xfffffffffffffe@@ f7, mov_rdi_r13, call_0xffffffffffff6b@@ 67, jmp_0xfffffffffffffee9, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, test_r13_r13, jne_0xffffffffffffffdb, mov_rdx_rbp, lea_rsi_[rip+0x19@@ 0@@ 51], mov_edi_1, xor_eax_eax, call_0x2@@ 8f@@ 2, jmp_0xfffffffffffffed@@ 3
movsxd_r9@@ _dword_ptr_[r@@ di+0x1@@ c], cmp_r9d@@ _-1, je_0x30, cmp_r9d@@ _5, je_0x22, cmp_r9d@@ _6, jg@@ _0x27, lea_rax_[rip+0x27@@ 8c@@ 3], mov_rdi_qword_ptr_[rax+r@@ 9@@ *8], jmp_0xffffffffffff@@ 4c@@ 6f, mov_rax_qword_ptr_[rdi+0x20], ret, xor_eax_eax, ret, sub_rsp_0x18, mov_esi_3, mov_dword_ptr_[rsp+0xc]_r9d, call_0xa@@ 78@@ 7, mov_r9d_dword_ptr_[rsp+0xc], mov_r8_rax, lea_rcx_[rip+0x@@ 190@@ 8b], lea_rdx_[rip+0x19@@ 0@@ f4], mov_esi_0x2d, lea_rdi_[rip+0x19@@ 0@@ fa], xor_eax_eax, call_0x4@@ 8e@@ e
endbr64, push_r14, mov_r14_rdi, lea_rdi_[rip+0x19@@ 0@@ f2], push_r13, mov_r13_r8, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rcx, call_0xffffffffffff4b@@ ee, mov_r8d_dword_ptr_[r@@ 14+0x@@ 26@@ c], mov_rdi_rax, cmp_r8d_1, je_0x1@@ 43, cmp_r8d@@ _2, je_0xd1, test_r8d_r8d, je_0x28, lea_rcx_[rip+0x@@ 190@@ b5], lea_rdx_[rip+0x19@@ 0@@ c6], mov_esi_0x4@@ c, lea_rdi_[rip+0x19@@ 0@@ 86], xor_eax_eax, call_0x4@@ 87@@ a, xor_r13d_r13d, test_rbp_rbp, je_0x12@@ a, test_rbx_rbx, je_0x1@@ 79, cmp_byte_ptr_[rbx]_0, je_0x50, call_0xffffffffffff4b@@ 86, lea_rdi_[rip+0x19@@ 0@@ cf], mov_r14_rax, call_0xffffffffffff4b@@ 77, sub_rsp_8, push_rbx, mov_rcx_rax, mov_rdx_-1, mov_r9_rbp, mov_r8_r14, mov_esi_1, mov_rdi_r12, xor_eax_eax, call_0xffffffffffff5@@ 24@@ 3, pop_rax, pop_rdx, add_r13d@@ _2, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, pop_r14, ret, call_0xffffffffffff4b@@ 38, lea_rdi_[rip+0x18@@ fa@@ c], mov_rbx_rax, call_0xffffffffffff4b@@ 29, mov_rcx_rax, mov_r9_rbp, mov_r8_rbx, mov_rdx_-1, mov_esi_1, mov_rdi_r12, xor_eax_eax, call_0xffffffffffff5@@ 1f@@ a, jmp_0xffffffffffffffb9, movsxd_rax_dword_ptr_[r@@ 13+0x@@ 2c], cmp_eax_-1, je_0xffffffffffffff@@ 59, lea_rdx_[rip+0x27@@ 5f@@ c], mov_r8_qword_ptr_[r@@ dx+rax*8], lea_rdx_[rip+0x27@@ 5d@@ 1], mov_rdi_qword_ptr_[r@@ dx+rax*8], mov_r13d_1, test_rbp_rbp, jne_0xffffffffffffff@@ 40, mov_r13d@@ _2, test_rbx_rbx, jne_0x64, test_r8_r8, je_0x1@@ 47, mov_rdi_r8, call_0xffffffffffff4a@@ b7, mov_rsi_rax, mov_r13d_1, mov_rdi_r12, call_0xffffffffffff48@@ e6, jmp_0xffffffffffffff59, movsxd_rax_dword_ptr_[r@@ 13+0x28], cmp_eax_-1, je_0xfffffffffffffe@@ f1, lea_rdx_[rip+0x27@@ 5b@@ 4], mov_r8_qword_ptr_[r@@ dx+rax*8], lea_rdx_[rip+0x27@@ 5e@@ 9], mov_rdi_qword_ptr_[r@@ dx+rax*8], jmp_0xffffffffffffff98, mov_r13d_1, test_rbx_rbx, je_0xd7, cmp_byte_ptr_[rbx]_0, jne_0x8e, call_0xffffffffffff4a@@ 58, lea_rdi_[rip+0x18@@ f7@@ 4], mov_rbx_rax, call_0xffffffffffff4a@@ 49, mov_rcx_rax, mov_r8_rbx, mov_rdi_r12, mov_rdx_-1, mov_esi_1, xor_eax_eax, call_0xffffffffffff5@@ 11@@ d, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, pop_r14, ret, call_0xffffffffffff4a@@ 18, lea_rdi_[rip+0x18@@ f5@@ 2], mov_rbx_rax, call_0xffffffffffff4a@@ 09, mov_rcx_rax, mov_r9_rbp, mov_r8_rbx, mov_rdi_r12, mov_rdx_-1, mov_esi_1, xor_eax_eax, call_0xffffffffffff50@@ da, pop_rbx, pop_rbp, inc_r13d, pop_r12, mov_eax_r13d, pop_r13, pop_r14, ret, call_0xffffffffffff4@@ 9d0, lea_rdi_[rip+0x18@@ f@@ 1c], mov_rbp_rax, call_0xffffffffffff4@@ 9c@@ 1, mov_rcx_rax, mov_r9_rbx, mov_r8_rbp, mov_rdi_r12, mov_rdx_-1, mov_esi_1, xor_eax_eax, call_0xffffffffffff50@@ 92, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, pop_r14, ret, xor_r13d_r13d, lea_rdi_[rip+0x18@@ ea@@ 1], call_0xffffffffffff4@@ 98@@ 6, mov_rsi_rax, jmp_0xfffffffffffffed5, mov_r13d_1, jmp_0xffffffffffffffe@@ 6
endbr64, push_r12, push_rbp, mov_rbp_rdi, mov_edi_0x20, push_rbx, mov_ebx_esi, call_0x4d@@ 2e, mov_dword_ptr_[rax]@@ _ebx, mov_qword_ptr_[rax+0x18]_0, mov_rdi_rbp, mov_r12_rax, call_0x4d@@ 79, mov_qword_ptr_[r12+8]_rax, mov_rsi_rbp, lea_rdx_[rip+0x18@@ 1c@@ c], lea_rdi_[rip+0x18@@ 1c@@ a], xor_eax_eax, call_0xa@@ 1c@@ c, mov_qword_ptr_[r12+0x10]_rax, mov_rax_r12, pop_rbx, pop_rbp, pop_r12, ret
endbr64, push_rbp, lea_rsi_[rip+0x12@@ 63@@ 5], push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rdi_qword_ptr_[rdi+0x10], call_0xffffffffffff4@@ 188, mov_qword_ptr_[rbx+0x18]_rax, test_rax_rax, je_0x38, mov_rdi_rax, call_0xffffffffffff3e@@ f7, mov_edi_eax, mov_esi_0x1@@ a4, call_0xffffffffffff40@@ 9b, mov_rcx_qword_ptr_[r@@ bx+0x18], lea_rdi_[rip+0x2e@@ b], add_rsp_8, pop_rbx, mov_edx_1, mov_esi@@ _0xfffffffe, xor_eax_eax, pop_rbp, jmp@@ _0x40@@ 69, mov_rbp_qword_ptr_[r@@ bx+0x10], lea_rsi_[rip+0x18@@ 16@@ 9], lea_rdi_[rip+0x15@@ 2f0], mov_edx_5, call_0xffffffffffff3b@@ 5d, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x3b@@ a@@ 0
endbr64, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rdi_qword_ptr_[rdi+0x18], call_0xffffffffffff@@ 39@@ ff, test_eax_eax, jne_0x2a, mov_rdi_qword_ptr_[rbx+0x18], call_0xffffffffffff3f@@ 02, test_eax_eax, jne_0x58, mov_rdi_qword_ptr_[rbx+0x18], call_0xffffffffffff3e@@ 65, mov_edi_eax, call_0xffffffffffff40@@ 6e, test_eax_eax, jne_0x32, add_rsp_8, pop_rbx, pop_rbp, ret, mov_rbp_qword_ptr_[r@@ bx+0x10], mov_edx_5, lea_rsi_[rip+0x18@@ 11@@ 6], lea_rdi_[rip+0x15@@ 27@@ 5], call_0xffffffffffff3a@@ e7, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x3b@@ 2a, mov_rbp_qword_ptr_[r@@ bx+0x10], mov_edx_5, lea_rsi_[rip+0x18@@ 13@@ d], jmp_0xffffffffffffffd7, mov_rbp_qword_ptr_[r@@ bx+0x10], mov_edx_5, lea_rsi_[rip+0x18@@ 10@@ 3], jmp_0xffffffffffffffc@@ 5
endbr64, push_rbp, push_rbx, mov_rbx_rdi, mov_edi_1, sub_rsp_8, call_0x36@@ be, mov_rdi_qword_ptr_[rbx+0x18], call_0xffffffffffff3a@@ 45, test_eax_eax, jne_9, add_rsp_8, pop_rbx, pop_rbp, ret, mov_rbp_qword_ptr_[r@@ bx+0x10], lea_rsi_[rip+0x18@@ 11@@ a], lea_rdi_[rip+0x15@@ 20@@ 1], mov_edx_5, call_0xffffffffffff3a@@ 6e, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x3a@@ b@@ 1
endbr64, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rdi_qword_ptr_[rdi+0x10], call_0xffffffffffff38@@ 9f, test_eax_eax, jne_0x49, mov_rdi_qword_ptr_[rbx+8], call_0xffffffffffff38@@ 92, test_eax_eax, je_0xc, call_0xffffffffffff38@@ 79, cmp_dword_ptr_[rax]_2, jne_9, add_rsp_8, pop_rbx, pop_rbp, ret, mov_rbp_qword_ptr_[rbx+8], lea_rsi_[rip+0x17@@ fe@@ e], lea_rdi_[rip+0x15@@ 19@@ 4], mov_edx_5, call_0xffffffffffff3a@@ 01, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x3a@@ 44, mov_rbp_qword_ptr_[r@@ bx+0x10], jmp_0xffffffffffffffd@@ 7
endbr64, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rsi_qword_ptr_[r@@ di+8], test_byte_ptr_[r@@ di@@ ]_1, jne_0x1c, mov_rdi_qword_ptr_[rbx+0x10], call_0xffffffffffff3@@ fb@@ 6, test_eax_eax, jne_0x65, add_rsp_8, pop_rbx, pop_rbp, ret, lea_rdi_[rip+0x17@@ f8@@ 5], xor_eax_eax, lea_rdx_[rip+0x17@@ f@@ 98], call_0x9f@@ 80, mov_rdi_rax, mov_rbp_rax, call_0xffffffffffff37@@ f5, test_eax_eax, je_0xc, call_0xffffffffffff37@@ dc, cmp_dword_ptr_[rax]_2, jne_0x53, mov_rdi_qword_ptr_[rbx+8], mov_rsi_rbp, call_0xffffffffffff3@@ fb@@ b, test_eax_eax, je_0xc, call_0xffffffffffff37@@ c2, cmp_dword_ptr_[rax]_2, jne_0x47, mov_rdi_rbp, call_0xffffffffffff36@@ d5, mov_rsi_qword_ptr_[rbx+8], jmp_0xffffffffffffff92, mov_rbp_qword_ptr_[rbx+8], mov_edx_5, lea_rsi_[rip+0x18@@ 0@@ 62], lea_rdi_[rip+0x15@@ 0@@ d1], call_0xffffffffffff3@@ 94@@ 3, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x3@@ 98@@ 6, mov_edx_5, lea_rsi_[rip+0x17@@ fe@@ d], jmp_0xffffffffffffffdb, mov_edx_5, lea_rsi_[rip+0x18@@ 00@@ 7], jmp_0xffffffffffffffc@@ d
endbr64, push_rbp, mov_rbp_rdi, mov_rdi_qword_ptr_[rdi+0x10], call_0xffffffffffff36@@ 74, mov_rdi_qword_ptr_[rbp+8], call_0xffffffffffff36@@ 6b, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffff@@ 36@@ 6@@ 2
endbr64, movzx_edi@@ _dil, lea_rax_[rip+0x@@ 180@@ 21], movzx_eax_word_ptr_[rax+r@@ di@@ *2], test_eax@@ _esi, setne_al, ret
endbr64, push_rbx, mov_rbx_qword_ptr_[r@@ si], mov_edi_dword_ptr_[rbx], call_0xffffffffffff3a@@ 46, mov_edi_dword_ptr_[r@@ bx+4], pop_rbx, jmp_0xffffffffffff@@ 3a@@ 3@@ d
endbr64, mov_rdi_qword_ptr_[rsi], jmp_0xffffffffffff@@ 38@@ 4@@ 9
endbr64, mov_rdi_qword_ptr_[rsi], jmp_0xffffffffffff@@ 3a@@ 4@@ 9
endbr64, mov_rax_qword_ptr_[rsi], mov_edi_dword_ptr_[rax], jmp_0xffffffffffff@@ 3a@@ 0@@ 7
endbr64, mov_rdi_qword_ptr_[rsi], jmp_0xffffffffffff@@ 3@@ 6c@@ 9
mov_eax_dword_ptr_[rdi+0x1@@ 4], inc@@ _esi, mov_edx_eax, sub_edx@@ _dword_ptr_[r@@ di+0x10], cmp_edx_esi, jl@@ _4, ret, push_rbx, add_eax_esi, add_eax_eax, mov_dword_ptr_[rdi+0x1@@ 4]_eax, mov_rbx_rdi, cdqe, mov_rdi_qword_ptr_[rdi+0x18], lea_rsi_[rax@@ *8], call_0x4@@ 98@@ 7, mov_qword_ptr_[rbx+0x18]_rax, pop_rbx, ret
endbr64, push_rbx, mov_qword_ptr_[rdi+@@ 8]_rsi, mov_rbx_rdi, test_rdx_rdx, je_0x31, mov_qword_ptr_[rdi]_rdx, movabs_rax@@ _0xa@@ 00000000, mov_qword_ptr_[rbx+0x10]_rax, mov_edi@@ _0x50, call_0x4@@ 90@@ 9, mov_qword_ptr_[rbx+0x18]_rax, mov_qword_ptr_[rax]_0, pop_rbx, ret, mov_rdi_rsi, call_0x84@@ 1d, mov_qword_ptr_[rbx]_rax, jmp_0xffffffffffffffc@@ 9
endbr64, push_rbx, mov_qword_ptr_[rdi]_0, mov_qword_ptr_[rdi+8]_0, mov_qword_ptr_[rdi+0x10]_0, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+0x18], call_0xffffffffffff@@ 35@@ 1d, mov_qword_ptr_[rbx+0x18]_0, pop_rbx, ret
endbr64, push_rbp, mov_rbp_rsi, mov_esi_1, push_rbx, mov_rbx_rdi, sub_rsp_8, call_0xffffffffffffff@@ 1b, movsxd_rax_dword_ptr_[r@@ bx+0x10], mov_rdx_qword_ptr_[rbx+0x18], lea_ecx_[rax+1], mov_dword_ptr_[rbx+0x1@@ 0]_ecx, mov_qword_ptr_[rdx@@ +rax*@@ 8]_rbp, mov_qword_ptr_[rdx@@ +rax*8@@ +8]_0, add_rsp_8, pop_rbx, pop_rbp, ret
endbr64, push_r12, mov_r12_rdi, push_rbp, push_rbx, cmp_qword_ptr_[rsi@@ ]_0, je_0x81, mov_rbp_rsi, lea_rax_[r@@ si+8], xor_esi_esi, add_rax_8, cmp_qword_ptr_[r@@ ax@@ -8]_0, mov_ebx_esi, lea_esi_[r@@ si+1], jne_0xfffffffffffffff2, mov_rdi_r12, call_0xfffffffffffffeb@@ d, mov_r8d_dword_ptr_[r@@ 12+0x10], movsxd_rax_ebx, mov_rdi_qword_ptr_[r@@ 12+0x18], lea_rsi_[rax@@ *8+8], movsxd_rax@@ _r8d, lea_rcx_[r@@ di+rax*8], xor_eax_eax, mov_rdx_qword_ptr_[r@@ bp+rax], mov_qword_ptr_[rcx@@ +rax@@ ]_rdx, add_rax_8, cmp_rsi_rax, jne_0xfffffffffffffff0, lea_eax_[r@@ 8+r@@ bx+1], mov_dword_ptr_[r12+0x1@@ 0]_eax, cdqe, mov_qword_ptr_[rdi@@ +rax*@@ 8]_0, pop_rbx, pop_rbp, pop_r12, ret, xor_esi_esi, call_0xfffffffffffffe@@ 5e, mov_eax_dword_ptr_[r@@ 12+0x10], mov_rdi_qword_ptr_[r@@ 12+0x18], cdqe, mov_qword_ptr_[rdi@@ +rax*@@ 8]_0, pop_rbx, pop_rbp, pop_r12, ret
endbr64, push_r12, mov_r12_rdi, push_rbp, xor_ebp_ebp, push_rbx, mov_rbx_rsi, sub_rsp_0x20, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, movdqu_xmm0_xmmword_ptr_[rsi], movups_xmmword_ptr_[r@@ sp]_xmm0, mov_rcx_qword_ptr_[r@@ si+0x10], mov_qword_ptr_[rsp+0x10]_rcx, jmp_0x1e, mov_edx_eax, add_eax_8, mov_dword_ptr_[rsp]_eax, add_rdx_rcx, cmp_qword_ptr_[rdx@@ ]_0, je_0x20, inc_ebp, mov_eax_dword_ptr_[rsp], cmp_eax_0x2f, jbe_0xffffffffffffff@@ e7, mov_rdx_qword_ptr_[rsp+8], lea_rax_[rdx+8], mov_qword_ptr_[rsp+8]_rax, cmp_qword_ptr_[rdx@@ ]_0, jne_0xffffffffffffffe4, mov_esi_ebp, mov_rdi_r12, call_0xfffffffffffffd@@ cc, mov_rsi_qword_ptr_[r12+0x18], test_ebp_ebp, je_0x90, movsxd_rcx_dword_ptr_[r@@ 12+0x10], lea_edx_[r@@ bp-1], lea_eax_[r@@ cx+1], mov_r8_rcx, cdqe, lea_rdi_[rdx@@ +rcx@@ +2], jmp_0x20, mov_ecx_edx, add_edx_8, mov_dword_ptr_[rbx]_edx, add_rcx_qword_ptr_[r@@ bx+0x10], mov_rdx_qword_ptr_[rcx], mov_qword_ptr_[rsi@@ +rax*8@@ -8]_rdx, inc_rax, cmp_rax_rdi, je_0x2a, mov_edx_dword_ptr_[rbx], mov_dword_ptr_[r12+0x1@@ 0]_eax, cmp_edx_0x2f, jbe_0xffffffffffffff@@ db, mov_rcx_qword_ptr_[rbx+8], lea_rdx_[r@@ cx+8], mov_qword_ptr_[rbx+@@ 8]_rdx, mov_rdx_qword_ptr_[rcx], mov_qword_ptr_[rsi@@ +rax*8@@ -8]_rdx, inc_rax, cmp_rax_rdi, jne_0xffffffffffffffda, add_ebp@@ _r8d, movsxd_rbp_ebp, mov_qword_ptr_[rsi@@ +r@@ bp*@@ 8]_0, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x18, add_rsp_0x20, pop_rbx, pop_rbp, pop_r12, ret, mov_ebp_dword_ptr_[r@@ 12+0x10], jmp_0xffffffffffffffd1, call_0xffffffffffff3@@ 5b@@ 9
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x28]_rsi, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rsi_rsp, lea_rax_[rsp+0x20], mov_qword_ptr_[rsp+0x10]_rax, mov_dword_ptr_[rsp]_8, mov_dword_ptr_[rsp+4]_0x30, call_0xfffffffffffffe@@ 48, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xffffffffffff34@@ f@@ b
endbr64, push_r12, push_rbp, push_rbx, mov_rbx_rdi, mov_rsi_qword_ptr_[r@@ di+0x18], mov_rdi_qword_ptr_[rdi+8], call_0xffffffffffff3a@@ ad, mov_r12_qword_ptr_[r@@ bx+8], mov_rbp_qword_ptr_[rbx], mov_edx_5, lea_rsi_[rip+0x17@@ de@@ 5], lea_rdi_[rip+0x14@@ c@@ 1c], call_0xffffffffffff34@@ 8e, mov_rdi_rax, mov_rdx_r12, mov_rsi_rbp, xor_eax_eax, call_0x34@@ c@@ e
endbr64, push_r12, mov_r12_rdi, lea_rdx_[rip+0x17@@ dc@@ d], push_rbp, lea_rdi_[rip+0x12@@ 4e@@ 5], mov_rbp_rsi, sub_rsp_8, test_r12_r12, je_0x3a, mov_rsi_rdi, xor_r8d_r8d, mov_rcx_r12, xor_eax_eax, call_0xffffffffffff3a@@ f1, mov_edx_5, lea_rsi_[rip+0x17@@ d@@ 80], lea_rdi_[rip+0x14@@ bb@@ 7], call_0xffffffffffff34@@ 29, mov_rdi_rax, mov_rdx_r12, mov_rsi_rbp, xor_eax_eax, call_0x34@@ 69, lea_rdi_[rip+0x17@@ d7@@ d], call_0xffffffffffff3@@ 1bd, mov_rdi_rax, lea_rdx_[rip+0x17@@ d@@ 68], test_rax_rax, je_7, cmp_byte_ptr_[rax]_0, jne_0xffffffffffffffaa, lea_rdi_[rip+0x12@@ 47@@ a], jmp_0xffffffffffffffa@@ 1
endbr64, test_rdi_rdi, je_0x11, mov_qword_ptr_[rip+0x2@@ 88@@ 1@@ 0]_rdi, mov_rax_rdi, ret, sub_rsp_8, lea_rdi_[rip+0x17@@ d@@ 33], call_0xffffffffffff3@@ 16d, test_rax_rax, je_0x15, mov_qword_ptr_[rip+0x2@@ 87@@ ec@@ ]_rax, add_rsp_8, ret, lea_rax_[rip+0x14@@ b@@ 1e], jmp_0xffffffffffffffe@@ 6
endbr64, mov_rax_qword_ptr_[rip+0x2@@ 87@@ c5], ret
endbr64, mov_rsi_qword_ptr_[rip+0x2@@ 87@@ b5], mov_rdx_rdi, xor_eax_eax, lea_rdi_[rip+0x17@@ ce@@ d], jmp_0x@@ 9@@ 94@@ 9
endbr64, push_r13, push_r12, push_rbp, lea_rbp_[r@@ di+0x1@@ 3], push_rbx, sub_rsp_8, movsx_edi_byte_ptr_[r@@ di+0x1@@ 3], test_dil_dil, je_0x7e, mov_rbx_rbp, xor_r12d_r12d, jmp_0x16, movsx_edi_byte_ptr_[r@@ bx+1], inc_rbx, inc_r12d, test_dil_dil, je_0x23, mov_esi_0x20, call_0xfffffffffffffa@@ 44, test_al_al, jne_0xffffffffffffffe5, add_rsp_8, pop_rbx, pop_rbp, pop_r12, xor_eax_eax, pop_r13, ret, cmp_r12d@@ _0xa, jg@@ _0x40, mov_r13d@@ _dword_ptr_[rip+0x2@@ 8c@@ 03], cmp_r13d_-1, je_0x17, cmp_r13d@@ _r12d, jne_0x5b, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_eax_1, pop_r13, ret, mov_dword_ptr_[rip+0x2@@ 8b@@ e@@ 1]@@ _r12d, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_eax_1, pop_r13, ret, xor_r12d_r12d, jmp_0xffffffffffffffc4, mov_edx_5, lea_rsi_[rip+0x17@@ c@@ 48], lea_rdi_[rip+0x14@@ a@@ 3f], call_0xffffffffffff3@@ 2b@@ 1, mov_rdi_rax, mov_ecx_0xa, mov_edx_r12d, mov_rsi_rbp, xor_eax_eax, call_0x32@@ 1c, mov_edx_5, lea_rsi_[rip+0x17@@ c7@@ 3], lea_rdi_[rip+0x14@@ a@@ 12], call_0xffffffffffff3@@ 284, mov_rdi_rax, mov_edx_r13d, mov_esi_r12d, xor_eax_eax, call_0x3@@ 1f@@ 4
push_rbp, lea_rsi_[rip+0x11@@ cc@@ 9], push_rbx, sub_rsp_8, mov_eax_dword_ptr_[rip+0x2a@@ bb@@ d], mov_rdi_qword_ptr_[rip+0x2@@ 8b@@ 6e], inc_eax, mov_dword_ptr_[rip+0x2@@ a@@ ba@@ e@@ ]_eax, call_0xffffffffffff38@@ 0e, mov_qword_ptr_[rip+0x2@@ 8b@@ 52@@ ]_rax, test_rax_rax, je_0x98, mov_rbp_qword_ptr_[rip+0x2@@ 8b@@ 4a], mov_rdi_rax, call_0xffffffffffff3@@ 56@@ f, mov_edi_eax, mov_rsi_rbp, call_0x4@@ 6c@@ 5, mov_ebx@@ _0x200, lea_rbp_[rip+0x@@ 180@@ 5b], mov_rcx_qword_ptr_[rip+0x2@@ 8b@@ 19], mov_edx_9, mov_esi_1, mov_rdi_rbp, call_0xffffffffffff38@@ 4c, dec_ebx, jne_0xffffffffffffffe5, mov_rbp_qword_ptr_[rip+0x2@@ 8a@@ fc], mov_rdi_rbp, call_0xffffffffffff30@@ a9, test_eax_eax, jne_0x91, mov_rdi_rbp, call_0xffffffffffff3@@ 5a@@ 9, test_eax_eax, jne_0x6c, mov_rdi_qword_ptr_[rip+0x2@@ 8a@@ d9], xor_edx_edx, xor_esi_esi, call_0xffffffffffff3@@ 60@@ 5, test_eax_eax, jne_0x43, mov_eax_dword_ptr_[rip+0x2@@ ab@@ 16], dec_eax, mov_dword_ptr_[rip+0x2@@ a@@ b0@@ e@@ ]_eax, add_rsp_8, pop_rbx, pop_rbp, ret, mov_rbp_qword_ptr_[rip+0x2@@ 8a@@ b8], mov_edx_5, lea_rsi_[rip+0x17@@ fc@@ 1], lea_rdi_[rip+0x14@@ 90@@ b], call_0xffffffffffff3@@ 17@@ d, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x3@@ 1c0, mov_rbp_qword_ptr_[rip+0x2@@ 8a@@ 8c], mov_edx_5, lea_rsi_[rip+0x17@@ b@@ e0], jmp_0xffffffffffffffd4, mov_rbp_qword_ptr_[rip+0x2@@ 8a@@ 77], mov_edx_5, lea_rsi_[rip+0x17@@ ba@@ 3], jmp_0xffffffffffffffbf, mov_rbp_qword_ptr_[rip+0x2@@ 8a@@ 62], mov_edx_5, lea_rsi_[rip+0x17@@ b6@@ 6], jmp_0xffffffffffffffa@@ a
endbr64, cmp_byte_ptr_[rip+0x2@@ 8@@ 98@@ 9]_0, jne_0xd, jmp_0xffffffffffffff13, ret
endbr64, cmp_byte_ptr_[rip+0x2@@ 8@@ 96@@ 9]_0, je_5, jmp_0xffffffffffffff83, ret
endbr64, push_r12, push_rbp, sub_rsp_8, mov_ebp@@ _dword_ptr_[rip+0x2@@ 84@@ 3b], mov_r8_qword_ptr_[rip+0x2@@ 89@@ 30], cmp_ebp_-1, je_0x25, mov_rsi_r8, mov_edi_ebp, call_0x3@@ 9a@@ e, cmp_dword_ptr_[rip+0x2@@ 84@@ 1e@@ ]_-1, mov_r12d_eax, je_0x2f, add_rsp_8, pop_rbp, mov_eax_r12d, pop_r12, ret, xor_esi_esi, mov_rdi_r8, xor_eax_eax, call_0xffffffffffff3@@ 56@@ 9, mov_ebp_eax, cmp_eax_-1, je_0x21, mov_r8_qword_ptr_[rip+0x2@@ 88@@ ee], jmp_0xffffffffffffffc3, mov_edi_ebp, call_0xffffffffffff3@@ 12@@ e, add_rsp_8, pop_rbp, mov_eax_r12d, pop_r12, ret, call_0xfffffffffffffb@@ fe, lea_rsi_[rip+0x17@@ a@@ 3a], lea_rdi_[rip+0x14@@ 70@@ 9], mov_edx_5, mov_rbp_rax, call_0xffffffffffff2@@ f7@@ 3, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x2@@ fb@@ 6
endbr64, mov_eax_dword_ptr_[rip+0x28@@ 3a@@ 2], test_eax_eax, js@@ _0xc, mov_eax_1, ret, push_rbp, lea_rdi_[rip+0x17@@ da@@ 1], call_0xffffffffffff2c@@ f0, test_rax_rax, je_0x50, mov_dword_ptr_[rip+0x2@@ 8@@ 37@@ 4]_0xffffffff, mov_rdi_qword_ptr_[rip+0x2@@ 8@@ 86@@ d], mov_edx_0x1@@ b0, mov_esi_0x2@@ 42, xor_eax_eax, call_0xffffffffffff34@@ c9, mov_dword_ptr_[rip+0x2@@ 83@@ 5a@@ ]_eax, cmp_eax_-1, je_0xb, mov_eax_1, pop_rbp, ret, call_0xffffffffffff2d@@ 50, mov_eax_dword_ptr_[rax], cmp_eax_0xd, je_7, cmp_eax_1, jne_0x68, xor_eax_eax, pop_rbp, ret, mov_rdi_qword_ptr_[rip+0x2@@ 88@@ 21], mov_edx_0x1@@ b0, mov_esi_0x2@@ 42, call_0xffffffffffff34@@ 87, mov_dword_ptr_[rip+0x2@@ 83@@ 14]_eax, cmp_eax_-1, jne_0xffffffffffffff9d, call_0xffffffffffff2d@@ 17, mov_eax_dword_ptr_[rax], cmp_eax_0xd, je_0xffffffffffffffce, cmp_eax_1, je_0xffffffffffffffc9, call_0xfffffffffffffb@@ 26, lea_rsi_[rip+0x17@@ 9a@@ 2], lea_rdi_[rip+0x14@@ 63@@ 1], mov_edx_5, mov_rbp_rax, call_0xffffffffffff2e@@ 9b, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x2@@ ed@@ e, call_0xfffffffffffffa@@ f9, lea_rsi_[rip+0x17@@ 9b@@ 5], lea_rdi_[rip+0x14@@ 60@@ 4], mov_edx_5, mov_rbp_rax, call_0xffffffffffff2e@@ 6e, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x2@@ eb@@ 1
endbr64, push_rbp, call_0xfffffffffffffee@@ b, test_al_al, je_0x6c, cmp_dword_ptr_[rip+0x2@@ 8@@ 28@@ 3@@ ]_-1, je_0x32, mov_edx_5, lea_rsi_[rip+0x17@@ ca@@ 3], lea_rdi_[rip+0x14@@ 5b@@ 4], call_0xffffffffffff2e@@ 26, mov_rdx_qword_ptr_[rip+0x2@@ 87@@ 5a], mov_rcx_rax, xor_esi_esi, lea_rdi_[rip+0x28@@ 25@@ 6], call_0x38@@ 8e, mov_edx_5, lea_rsi_[rip+0x17@@ c8@@ 6], lea_rdi_[rip+0x14@@ 58@@ 4], call_0xffffffffffff2d@@ f6, mov_rdx_qword_ptr_[rip+0x2@@ 87@@ 32], mov_rcx_rax, xor_esi_esi, lea_rdi_[rip+0x28@@ 22@@ a], pop_rbp, jmp_0x3@@ 85@@ d, call_0xfffffffffffffa@@ 48, lea_rsi_[rip+0x17@@ 94@@ 4], lea_rdi_[rip+0x14@@ 55@@ 3], mov_edx_5, mov_rbp_rax, call_0xffffffffffff2d@@ bd, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x2d@@ 3@@ 0
endbr64, sub_rsp_8, mov_edi_1, call_0x2@@ 9b@@ 3, cmp_dword_ptr_[rip+0x2@@ 8@@ 1c@@ f@@ ]_-1, je_0xc, mov_edi_1, call_0x2@@ 9a0, mov_dword_ptr_[rip+0x2@@ 8@@ 1b@@ d@@ ]_0xffffffff, mov_dword_ptr_[rip+0x2@@ 8@@ 1a@@ f]@@ _0xffffffff, add_rsp_8, ret
endbr64, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_ebx_edi, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, cmp_byte_ptr_[rip+0x2@@ 86@@ 8b@@ ]_0, jne_7, call_0xfffffffffffffc@@ 15, mov_eax_ebx, and_eax@@ _0xff00, xor@@ _bh@@ _bh@@ , mov_dword_ptr_[rip+0x2@@ 86@@ 7@@ 1]_eax, cmp_ebx_3, ja_0x6@@ e, cmp_ebx_1, ja_0x8@@ c, test_ebx_ebx, jne_0x6a, mov_dword_ptr_[rip+0x2@@ 8@@ 15@@ 5]_0, call_0xc@@ 705, mov_edi_dword_ptr_[rip+0x2@@ 8@@ 14@@ a], cmp_edi_1, jne_0x@@ f1, call_0xa@@ 8f@@ 1, mov_edi_dword_ptr_[rip+0x2@@ 8@@ 13@@ 6], call_0xa@@ f7@@ 6, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], mov_eax_dword_ptr_[rip+0x28@@ 1@@ 1d], jne_0x3@@ 11, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, cmp_ebx_4, jne_0x2@@ cd, call_0xffffffffffff2c@@ f7, test_eax_eax, jne_0x2@@ 50, call_0xffffffffffff2d@@ ea, test_eax_eax, jne_0x2@@ 43, call_0xfffffffffffff8f@@ d, mov_rdi_rax, mov_esi_2, call_0xffffffffffff3@@ 240, test_eax_eax, je_0x49, call_0xffffffffffff2a@@ c7, cmp_dword_ptr_[rax]@@ _0xd, jne_0x2@@ b8, cmp_ebx_3, jne_0xffffffffffffff@@ 57, call_0xfffffffffffff8d@@ 0, lea_rsi_[rip+0x17@@ 84@@ 4], lea_rdi_[rip+0x14@@ 3d@@ b], mov_edx_5, mov_rbp_rax, call_0xffffffffffff2c@@ 45, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x2@@ bb8, call_0xfffffffffffffd@@ e0, cmp_ebx_1, mov_eax_3, cmovne_ebx_eax, mov_dword_ptr_[rip+0x2@@ 80@@ 6a@@ ]_ebx, call_0xc@@ 6@@ 1a, mov_edi_dword_ptr_[rip+0x2@@ 80@@ 5f], cmp_edi_1, je_0xffffffffffffff@@ 1b, mov_rdi_qword_ptr_[rip+0x2@@ 85@@ 37], xor_edx_edx, mov_esi_0x2@@ 48, call_0x6b@@ 48, mov_rax_qword_ptr_[rip+0x2@@ 84@@ e4], mov_rcx_qword_ptr_[rip+0x2@@ 7f@@ 25], mov_byte_ptr_[rax]_0, mov_rdi_qword_ptr_[rip+0x2@@ 8@@ 4d@@ b], mov_rsi_rsp, lea_rdx_[rip-0x@@ 78@@ f], mov_dword_ptr_[rip+0x2@@ 8@@ 4c@@ f]@@ _0xffffffff, call_0xffffffffffff2d@@ 37, mov_ebp_eax, cmp_eax_-1, je_0x2@@ 33, test_eax_eax, je_0x7b, jle_0x@@ 18@@ b, lea_eax@@ _[rax-1], mov_r13_rax, lea_r12_[rax@@ *8+8], xor_ebx_ebx, mov_rax_qword_ptr_[rsp], mov_rdi_qword_ptr_[rip+0x2@@ 8@@ 48@@ 5], mov_rsi_qword_ptr_[rax+r@@ bx], add_rbx_8, add_rsi@@ _0x13, call_0xffffffffffff2a@@ 21, mov_rdi_qword_ptr_[rip+0x2@@ 8@@ 47@@ 5], xor_edx_edx, mov_esi_0x2@@ 49, call_0x6a@@ be, cmp_r12_rbx, jne_0xffffffffffffffce, cmp_dword_ptr_[rip+0x2@@ 7@@ fa@@ d@@ ]_2, ja_0x7@@ d, lea_rbp_[r@@ 13@@ *8+8], xor_ebx_ebx, mov_rax_qword_ptr_[rsp], mov_rdi_qword_ptr_[rax+r@@ bx], add_rbx_8, call_0xffffffffffff28@@ b4, cmp_rbx_rbp, jne_0xffffffffffffffec, mov_rdi_qword_ptr_[rsp], call_0xffffffffffff28@@ a6, cmp_dword_ptr_[rip+0x2@@ 8@@ 47@@ 7]@@ _0xff, mov_dword_ptr_[rip+0x2@@ 84@@ 35@@ ]_0, ja_0x@@ b5, mov_edi_dword_ptr_[rip+0x2@@ 7f@@ 61], cmp_edi_2, jbe_0xfffffffffffffe@@ 1d, call_0xfffffffffffff8a@@ 8, lea_rdi_[rip+0x28@@ 3d@@ c], mov_esi_0x2@@ 800, call_0xb@@ 957, mov_edi_dword_ptr_[rip+0x2@@ 7f@@ 3c], jmp_0xfffffffffffffd@@ fb, mov_rdi_qword_ptr_[rip+0x2@@ 84@@ 11], mov_esi_2, call_0x2@@ 1b@@ 4, mov_r14_qword_ptr_[rip+0x2@@ 8@@ 3c0], mov_r13_qword_ptr_[rip+0x2@@ 8@@ 3c@@ 1], xor_ebx_ebx, mov_rax_qword_ptr_[rsp], mov_rdi_r14, mov_rsi_qword_ptr_[rax+r@@ bx], add_rsi@@ _0x13, call_0xffffffffffff2@@ 94@@ 9, mov_rdi_r13, call_0xffffffffffff2@@ 90@@ 1, test_eax_eax, jne_0x95, add_rbx_8, cmp_r12_rbx, jne_0xffffffffffffffd5, mov_rdi_qword_ptr_[rip+0x2@@ 8@@ 39@@ 4], call_0x9a@@ 4, test_ebp_ebp, jle_0xffffffffffffff@@ 43, lea_r13d_[r@@ bp-1], jmp_0xffffffffffffff18, mov_rdi_qword_ptr_[rip+0x2@@ 8@@ 39@@ 1], xor_edx_edx, mov_esi_0x2@@ 46, call_0x6@@ 9a@@ a, jmp_0xffffffffffffff3e, lea_rdi_[rip+0x14@@ 1d@@ 7], mov_edx_5, lea_rsi_[rip+0x14@@ e@@ 9d], call_0xffffffffffff2a@@ 3d, mov_rdi_rax, xor_eax_eax, call_0x2@@ 9b@@ 3, cmp_dword_ptr_[rip+0x2@@ 7e@@ 7@@ 1@@ ]_2, jbe_0xfffffffffffffe@@ e7, mov_rdi_qword_ptr_[rip+0x2@@ 8@@ 34@@ c], mov_esi_2, call_0x20@@ ef, jmp_0xffffffffffffff7f, lea_rsi_[rip+0x17@@ 65@@ 6], lea_rdi_[rip+0x14@@ 18@@ 5], mov_edx_5, call_0xffffffffffff2@@ 9f@@ 2, mov_rdi_rax, mov_rsi_r13, xor_eax_eax, call_0x2a@@ 35, mov_r8d_ebx, lea_rcx_[rip+0x@@ 17@@ 87@@ 2], lea_rdx_[rip+0x17@@ 93@@ 7], mov_esi_0x1@@ 32, lea_rdi_[rip+0x17@@ 87@@ 9], xor_eax_eax, call_0x2@@ 6f@@ 1, call_0xffffffffffff2@@ 9e@@ c, call_0xfffffffffffff6@@ 27, mov_rbp_rax, mov_edx_5, lea_rsi_[rip+0x17@@ 56@@ 3], lea_rdi_[rip+0x14@@ 12@@ a], call_0xffffffffffff2@@ 99@@ c, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x2@@ 9d@@ f, mov_rbp_qword_ptr_[rip+0x2@@ 8@@ 28@@ 3], mov_edx_5, lea_rsi_[rip+0x17@@ 5a@@ 7], jmp_0xffffffffffffffd@@ 4
endbr64, mov_eax_dword_ptr_[rip+0x2@@ 7d@@ b6], ret
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_r8d_dword_ptr_[rip+0x2@@ 7d@@ 9b], cmp_r8d@@ _2, jbe_0x@@ f5, mov_rdi_qword_ptr_[rip+0x2@@ 827@@ 2], mov_esi_2, call_0x20@@ 15, mov_eax_dword_ptr_[rip+0x28@@ 24@@ 2], mov_rbp_qword_ptr_[rip+0x2@@ 8@@ 21@@ b], xor_ebx_ebx, lea_r13_[rip+0x@@ 17@@ 7e@@ d], test_eax_eax, jle_0x@@ 56, mov_rdi_rbp, xor_eax_eax, mov_r8d_ebx, mov_rcx_r13, mov_rdx_-1, mov_esi_1, call_0xffffffffffff30@@ 49, mov_rbp_qword_ptr_[rip+0x2@@ 8@@ 1e@@ 5], mov_rdi_rbp, call_0xffffffffffff2@@ 90@@ a, cmp_rax@@ _0xa, ja@@ _0x40, mov_r12_qword_ptr_[rip+0x2@@ 8@@ 1d8], mov_rdi_r12, call_0xffffffffffff27@@ 35, test_eax_eax, jne_0x57, inc_ebx, cmp_ebx@@ _dword_ptr_[rip+0x2@@ 8@@ 1d@@ c], jl_0xffffffffffffff@@ b4, mov_rdi_qword_ptr_[rip+0x2@@ 8@@ 1c@@ b], call_0x7d@@ b, mov_dword_ptr_[rip+0x2@@ 8@@ 1c@@ 4]_0, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_r9d@@ _0xa, mov_r8_rbp, lea_rcx_[rip+0x@@ 17@@ 54@@ 9], lea_rdx_[rip+0x17@@ 7d@@ a], mov_esi_0x1@@ 5b, lea_rdi_[rip+0x17@@ 7@@ 34], xor_eax_eax, call_0x2@@ 5a@@ c, lea_rsi_[rip+0x17@@ 5@@ 58], lea_rdi_[rip+0x13@@ ff@@ 7], mov_edx_5, call_0xffffffffffff28@@ 64, mov_rdi_rax, mov_rsi_r12, xor_eax_eax, call_0x2@@ 8a@@ 7, lea_rcx_[rip+0x@@ 17@@ 4d@@ b], lea_rdx_[rip+0x17@@ 7@@ 94], mov_esi_0x1@@ 52, lea_rdi_[rip+0x17@@ 6e@@ e], xor_eax_eax, call_0x2@@ 56@@ 6
endbr64, sub_rsp_8, cmp_dword_ptr_[rip+0x2@@ 8@@ 16@@ e]@@ _0x1ff, ja_0x6@@ 6, mov_eax_dword_ptr_[rip+0x2@@ 7c@@ 66], cmp_eax_1, je_0x30, cmp_eax_3, jne_0x30, call_0xfffffffffffffea@@ c, mov_rdi_qword_ptr_[rip+0x2@@ 8@@ 120], call_0xffffffffffff27@@ b0, mov_rdi_qword_ptr_[rip+0x2@@ 8@@ 11c], call_0xffffffffffff26@@ 54, lea_rdi_[rip+0x28@@ 0@@ c8], call_0xba@@ 58, call_0xfffffffffffffa@@ 43, call_0x8@@ 00@@ e, cmp_byte_ptr_[rip+0x2@@ 8@@ 12@@ 6]_0, je_0x12, add_rsp_8, jmp_0xfffffffffffff7@@ 3c, add_rsp_8, ret, mov_rdi_qword_ptr_[rip+0x2@@ 80@@ e1], mov_esi_1, call_0x1e@@ 8c, jmp_0xffffffffffffff8@@ b
endbr64, push_r13, mov_eax_dword_ptr_[rip+0x2a@@ 10@@ 4], push_r12, inc_eax, mov_dword_ptr_[rip+0x2@@ a0@@ fa@@ ]_eax, push_rbp, mov_rbp_rdi, mov_eax_dword_ptr_[rdi+0x18], lea_edx_[rax@@ -5], cmp_edx_1, jbe_0x@@ 4b, mov_qword_ptr_[rdi+0x1@@ 60]_0, cmp_eax_1, ja_0x3@@ b, mov_rax_qword_ptr_[rdi+0x1@@ 48], test_rax_rax, je_0x19, mov_qword_ptr_[rax]_0, mov_rax_qword_ptr_[rax+0x18], test_rax_rax, jne_0xfffffffffffffff2, mov_qword_ptr_[rbp+0x@@ 15@@ 0]_0, mov_qword_ptr_[rbp+0x@@ 14@@ 8]_0, cmp_byte_ptr_[rbp+0x@@ 17@@ 9]_0, jne_0x1@@ a3, cmp_dword_ptr_[rip+0x2@@ 7b@@ 6e@@ ]_2, ja@@ _0x2e, cmp_qword_ptr_[rbp+0x@@ 16@@ 0]_0, je_0x1@@ 6a, mov_eax_dword_ptr_[rip+0x2@@ a0@@ 78], pop_rbp, dec_eax, pop_r12, mov_dword_ptr_[rip+0x2@@ a0@@ 6d@@ ]_eax, pop_r13, ret, lea_rdi_[rip+0x27@@ fc@@ 9], call_0xb@@ 58@@ 9, lea_rdx_[r@@ bp+0x48], mov_rsi_rbp, lea_rdi_[rip+0x27@@ fb@@ 6], call_0x1a@@ 76, mov_rcx_qword_ptr_[rip+0x2@@ 7f@@ ea], mov_rdx_qword_ptr_[rip+0x2@@ 7@@ fa@@ 3], mov_rdi_qword_ptr_[rip+0x2@@ 7@@ fa@@ c], mov_esi_1, call_0xffffffffffff2d@@ 17, cmp_rax_qword_ptr_[r@@ ip+0x2@@ 7f@@ 8b], jne_0x1@@ e1, mov_rdi_qword_ptr_[rip+0x2@@ 7@@ fb@@ e], call_0xffffffffffff2a@@ 7e, test_eax_eax, jne_0x20@@ 2, mov_r12_qword_ptr_[rip+0x2@@ 7@@ fa@@ a], mov_r13_qword_ptr_[rip+0x2@@ 7f@@ 63], mov_rdi_r12, call_0xffffffffffff2@@ 9d0, mov_edi_eax, mov_rsi_r13, call_0xffffffffffff27@@ 46, test_eax_eax, jne_0x1@@ f8, mov_rdi_r12, call_0xffffffffffff2@@ 9b@@ 6, mov_edi_eax, call_0xffffffffffff2@@ bb@@ f, test_eax_eax, jne_0x1@@ ff, mov_rdi_qword_ptr_[rip+0x2@@ 7f@@ 6b], call_0xffffffffffff@@ 25@@ fb, test_eax_eax, jne_0x20@@ 9, mov_rdi_qword_ptr_[rip+0x2@@ 7f@@ 2f], mov_r8d_dword_ptr_[rip+0x2@@ 7f@@ 48], mov_esi_1, xor_eax_eax, lea_rcx_[rip+0x@@ 17@@ 4f@@ 5], mov_rdx_-1, call_0xffffffffffff2d@@ 6b, mov_rsi_qword_ptr_[rip+0x2@@ 7@@ f0@@ f], mov_rdi_qword_ptr_[rip+0x2@@ 7f@@ 30], call_0xffffffffffff2b@@ f8, test_eax_eax, jne_0x1@@ e7, mov_rdi_qword_ptr_[rip+0x2@@ 7@@ f0@@ 4], call_0x5@@ 14, mov_r12_qword_ptr_[rip+0x2@@ 7e@@ e0], mov_rdi_r12, call_0xffffffffffff2@@ 60@@ 5, cmp_rax@@ _0xa, ja_0x@@ e8, mov_eax_dword_ptr_[rip+0x27@@ ee@@ 8], inc_eax, mov_dword_ptr_[rip+0x2@@ 7@@ ee@@ 0]_eax, cmp_eax@@ _0xf@@ a, jg_0x@@ bb, call_0xfffffffffffff35@@ d, cmp_qword_ptr_[rbp+0x@@ 16@@ 0]_0, jne_0xfffffffffffffea@@ 2, cmp_qword_ptr_[rbp+0x@@ 15@@ 8]_0, je_0xfffffffffffffe@@ 94, mov_rdi_rbp, call_0x9@@ 3d@@ 9, jmp_0xfffffffffffffe@@ 86, lea_rdi_[rbp+0x@@ 98], mov_esi_1, call_0x6b@@ 9c, mov_esi_3, mov_rdi_rbp, mov_r13_rax, call_0x8@@ 18@@ c, mov_rdi_rbp, mov_r12_rax, call_0x8@@ 29@@ 1, mov_rsi_rax, mov_rdx_r12, mov_rcx_r13, lea_rdi_[rip+0x17@@ 4@@ 24], xor_eax_eax, call_0x32@@ 5a, mov_rdi_rbp, call_0x8@@ 27@@ 2, mov_esi_1, mov_rdi_rbp, mov_r12_rax, call_0x8@@ 15@@ 2, mov_rsi_rax, mov_rdx_r12, lea_rdi_[rip+0x17@@ 408], xor_eax_eax, call_0x34@@ 7e, mov_byte_ptr_[rbp+0x@@ 17@@ 9]_0, jmp_0xfffffffffffffd@@ ed, call_0xfffffffffffffb@@ a8, mov_dword_ptr_[rip+0x2@@ 7e@@ 11]_0, jmp_0xffffffffffffff3c, mov_r9d@@ _0xa, mov_r8_r12, lea_rcx_[rip+0x@@ 17@@ 19@@ c], lea_rdx_[rip+0x17@@ 40@@ d], mov_esi_0x1@@ 9f, lea_rdi_[rip+0x17@@ 38@@ 7], xor_eax_eax, call_0x2@@ 1@@ ff, mov_esi_1, mov_rdi_rbp, call_0x80@@ e2, mov_rbp_rax, mov_edx_5, lea_rsi_[rip+0x17@@ 1c@@ 6], lea_rdi_[rip+0x13@@ c@@ 35], call_0xffffffffffff24@@ a7, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x24@@ ea, mov_esi_1, mov_rdi_rbp, call_0x80@@ ad, mov_rbp_rax, mov_edx_5, lea_rsi_[rip+0x17@@ 1c@@ 1], jmp_0xffffffffffffffcb, mov_esi_1, mov_rdi_rbp, call_0x80@@ 8f, mov_rbp_rax, mov_edx_5, lea_rsi_[rip+0x17@@ 1d@@ 3], jmp_0xffffffffffffffad, mov_esi_1, mov_rdi_rbp, call_0x80@@ 71, mov_rbp_rax, mov_edx_5, lea_rsi_[rip+0x17@@ 1e@@ d], jmp_0xffffffffffffff8f, mov_esi_1, mov_rdi_rbp, call_0x80@@ 53, mov_rbp_rax, mov_edx_5, lea_rsi_[rip+0x17@@ 1@@ ff], jmp_0xffffffffffffff71, mov_esi_1, mov_rdi_rbp, call_0x80@@ 32, mov_rbp_rax, mov_edx_5, lea_rsi_[rip+0x17@@ 20@@ e], jmp_0xffffffffffffff5@@ 0
endbr64, cmp_dword_ptr_[rip+0x2@@ 78@@ 35@@ ]_2, ja@@ _5, ret, jmp_0xfffffffffffffc@@ 4@@ 0
endbr64, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, call_0xffffffffffff27@@ 10, mov_edi_eax, mov_rsi_rbp, call_0x38@@ 66, mov_rdi_rbx, call_0x8@@ 44@@ e, mov_qword_ptr_[rip+0x2@@ 7c@@ fa@@ ]_rbx, add_rsp_8, pop_rbx, pop_rbp, ret
endbr64, cmp_qword_ptr_[rip+0x2@@ 7c@@ d@@ c]_0, mov_dword_ptr_[rip+0x2@@ 7c@@ de@@ ]_edi, je_6, ret, mov_rax_qword_ptr_[rip+0x2@@ 7b@@ 61], mov_qword_ptr_[rip+0x27@@ cc@@ 2]_rax, ret
endbr64, test@@ _dword_ptr_[rip+0x2@@ 7c@@ b6@@ ]_edi, setne_al, ret
endbr64, push_r12, mov_r12_rsi, sub_rsp_0xd0, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, test@@ _dword_ptr_[rip+0x2@@ 7c@@ 3b@@ ]_edi, je_0x6a, mov_ecx_edi, mov_rdi_qword_ptr_[rip+0x2@@ 7c@@ 28], lea_rdx_[rip+0x17@@ 240], mov_esi_1, call_0xffffffffffff2@@ 93@@ 4, mov_rdi_qword_ptr_[rip+0x2@@ 7c@@ 10], lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_esi_1, lea_rax_[rsp+0x20], mov_rcx_rsp, mov_rdx_r12, mov_dword_ptr_[rsp]_0x10, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffff20@@ b7, mov_rsi_qword_ptr_[rip+0x2@@ 7b@@ d3], mov_edi_0xa, call_0xffffffffffff@@ 25@@ 26, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xc, add_rsp_0xd0, pop_r12, ret, call_0xffffffffffff2@@ 28@@ 7
endbr64, lea_rdx_[r@@ si+0x30], mov_esi_dword_ptr_[r@@ si+0x@@ 48], add_rdi@@ _0x50, jmp_0xb@@ 7a@@ 1
endbr64, movzx_eax_byte_ptr_[r@@ dx+0x@@ 4c], test_al_al, je_8, cmp_dword_ptr_[rdi+0x@@ c@@ ]_3, je_0x68, push_rbp, sub_rsp_0x10, mov_rbp_qword_ptr_[r@@ dx+0x28], mov_eax_dword_ptr_[rbp+0x10], cmp_eax_3, je_0x5f, and_eax_0xfffffffb, je_0x2a, test_dword_ptr_[r@@ si+0x1@@ 0]@@ _0xfffffffb, je_0x11, cmp_rbp@@ _rsi, sete_al, add_rsp_0x10, pop_rbp, ret, mov_edi_5, call_0xb@@ 99@@ b, mov_rsi_rax, jmp_0xffffffffffffffe4, mov_edi_5, mov_qword_ptr_[rsp+8]_rsi, call_0xb@@ 98@@ 6, mov_rsi_qword_ptr_[rsp+8], mov_rbp_rax, test_dword_ptr_[r@@ si+0x1@@ 0]@@ _0xfffffffb, jne_0xffffffffffffffc3, jmp_0xffffffffffffffd0, ret, cmp_dword_ptr_[rdi+0x@@ c]_2, mov_eax_1, je_0xffffffffffffff@@ ae, mov_rax_qword_ptr_[rdx], mov_edx_dword_ptr_[rax+0x18], lea_eax_[rdx@@ -4], cmp_eax_1, setbe@@ _al, cmp_edx@@ _7, sete_dl, or_al@@ _dl, je_0xffffffffffffff@@ 86, add_rsp_0x10, pop_rbp, ret
endbr64, mov_rdx_rsi, mov_rsi_qword_ptr_[r@@ di+0x10], jmp_0xffffffffffffff4@@ 5
endbr64, mov_eax_dword_ptr_[rsi+0x@@ 48], cmp_eax_1, ja_0x2@@ 6, mov_r8d_dword_ptr_[r@@ di+0x@@ 48], test_eax_eax, jne_7, test_r8d_r8d, jne_0x19, lea_rdx_[r@@ di+0x30], lea_rdi_[r@@ si+0x30], mov_esi_r8d, jmp_0xb@@ 6a@@ c, xor_eax_eax, ret
push_rbp, mov_rbp_rsi, call_0xffffffffffff2@@ 3e@@ c, test_eax_eax, js@@ _0xf, mov_edi_eax, call_0xffffffffffff26@@ 81, test_eax_eax, jne_0x29, pop_rbp, ret, mov_edx_5, lea_rsi_[rip+0x1@@ 70@@ 8a], lea_rdi_[rip+0x13@@ 89@@ 1], call_0xffffffffffff2@@ 10@@ 3, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0x2@@ 14@@ 6, mov_edx_5, lea_rsi_[rip+0x1@@ 70@@ 96], jmp_0xffffffffffffffd@@ b
endbr64, push_r12, mov_r12_rdi, push_rbp, sub_rsp_8, call_0xffffffffffff20@@ 92, test_rax_rax, je_0x1f, mov_rsi_r12, mov_rdi_rax, mov_rbp_rax, call_0xffffffffffffff@@ 8f, add_rsp_8, mov_rdi_rbp, pop_rbp, pop_r12, jmp_0xffffffffffff@@ 22@@ 70, lea_rsi_[rip+0x1@@ 70@@ 73], lea_rdi_[rip+0x13@@ 8@@ 2b], mov_edx_5, call_0xffffffffffff20@@ 98, mov_rdi_rax, mov_rsi_r12, xor_eax_eax, call_0x20@@ d@@ b
endbr64, push_rbp, call_0x3@@ 1e@@ b, mov_rdi_rax, mov_esi_0x2f, mov_rbp_rax, call_0xffffffffffff2@@ 12@@ b, test_rax_rax, je_0xd, mov_byte_ptr_[rax]_0, mov_rdi_rbp, call_0xffffffffffffff@@ 7b, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffff@@ 1d@@ c@@ 2
endbr64, push_r14, push_r13, mov_r13_rdi, push_r12, push_rbp, push_rbx, call_0xffffffffffff@@ 1ff@@ 1, test_rax_rax, je_0xf9, mov_r12_rax, lea_rbx_[rip+0x@@ 16@@ 9@@ 9d], mov_rdi_r12, call_0xffffffffffff2@@ 38@@ 6, test_rax_rax, je_0x69, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x2e, lea_rdx_[r@@ ax+0x13], je_0xffffffffffffffea, cmp_word_ptr_[r@@ ax+0x1@@ 3]@@ _0x2@@ e@@ 2e, je_0x7b, mov_rsi_r13, mov_rdi_rbx, xor_eax_eax, call_0x8@@ 5d@@ 1, mov_rdi_rax, mov_r14_rax, mov_esi_1, xor_eax_eax, call_0xffffffffffff2@@ 58@@ f, mov_ebp_eax, test_eax_eax, js@@ _0x65, mov_edi_eax, call_0xffffffffffff@@ 25@@ 32, test_eax_eax, jne_0x8d, mov_edi_ebp, call_0xffffffffffff2@@ 15@@ 3, test_eax_eax, jne_0x70, mov_rdi_r14, call_0xffffffffffff1d@@ 27, mov_rdi_r12, call_0xffffffffffff@@ 23@@ 1f, test_rax_rax, jne_0xffffffffffffff@@ 9b, mov_rdi_r12, mov_rsi_r13, call_0xfffffffffffffe@@ 6f, pop_rbx, pop_rbp, mov_rdi_r12, pop_r12, pop_r13, pop_r14, jmp_0xffffffffffff@@ 2@@ 14@@ f, cmp_byte_ptr_[rdx+@@ 2]_0, je_0xffffffffffffff@@ 63, jmp_0xffffffffffffff7d, mov_edx_5, lea_rsi_[rip+0x16@@ f5@@ 5], lea_rdi_[rip+0x13@@ 6e@@ c], call_0xffffffffffff1f@@ 5e, mov_rdi_rax, mov_rsi_r14, xor_eax_eax, call_0x1@@ fa@@ 1, mov_edx_5, lea_rsi_[rip+0x16@@ f6@@ 2], jmp_0xffffffffffffffdb, mov_edx_5, lea_rsi_[rip+0x16@@ f@@ 3b], jmp_0xffffffffffffffcd, lea_rsi_[rip+0x16@@ ef@@ 8], lea_rdi_[rip+0x13@@ 6b@@ 0], mov_edx_5, call_0xffffffffffff1f@@ 1d, mov_rdi_rax, mov_rsi_r13, xor_eax_eax, call_0x1@@ f6@@ 0
endbr64, push_r12, push_rbp, push_rbx, mov_rax_qword_ptr_[rsi], mov_r12_qword_ptr_[r@@ ax+8], test_r12_r12, je_0x70, and_ecx_1, mov_rbp_rdi, jne_0x26, mov_rdi_r12, call_0xffffffffffff1f@@ 01, pop_rbx, mov_rdi_rbp, pop_rbp, mov_rsi_r12, mov_rdx_rax, pop_r12, jmp_0xa@@ fff, mov_rbx_rsi, mov_edx_9, lea_rsi_[rip+0x16@@ f@@ 19], call_0xa@@ fe@@ 1, mov_rax_qword_ptr_[rbx], mov_r12_qword_ptr_[r@@ ax+8], mov_rdi_r12, call_0xffffffffffff@@ 1ec@@ 2, mov_rdx_rax, mov_rsi_r12, mov_rdi_rbp, call_0xa@@ fc@@ 4, pop_rbx, mov_rdi_rbp, pop_rbp, mov_esi_0xa, pop_r12, jmp_0x@@ ad@@ 93, lea_rcx_[rip+0x@@ 16@@ eb@@ 3], lea_rdx_[rip+0x17@@ 2c@@ 3], mov_esi_0x3@@ e, lea_rdi_[rip+0x16@@ eb@@ 3], xor_eax_eax, call_0x1b@@ 9@@ 2
endbr64, push_r12, mov_r12_rdi, push_rbp, lea_rbp_[r@@ dx+0x@@ 50], mov_rdi_rbp, push_rbx, mov_ebx_ecx, call_0xb@@ 30@@ c, test_al_al, je_0x5d, and_ebx_1, jne_0x20, pop_rbx, mov_rsi_rbp, pop_rbp, mov_rdi_r12, mov_edx_1, pop_r12, jmp_0x6@@ 2c@@ f, mov_rdi_r12, mov_edx_9, lea_rsi_[rip+0x16@@ e7@@ a], call_0xa@@ f@@ 31, mov_rsi_rbp, mov_rdi_r12, mov_edx_1, call_0x6@@ 2a@@ 1, pop_rbx, pop_rbp, mov_rdi_r12, mov_esi_0xa, pop_r12, jmp_0x@@ ac@@ f0, pop_rbx, pop_rbp, pop_r12, ret
endbr64, lea_rax_[r@@ si+0x@@ 48], cmp_rax_rdx, je_5, ret, push_r13, mov_r13d_ecx, push_r12, lea_r12_[r@@ si+0x30], push_rbp, mov_rbp_rdi, mov_rdi_r12, push_rbx, mov_rbx_rsi, sub_rsp_8, call_0xb@@ 27@@ 6, test_al_al, je_0x37, mov_eax_dword_ptr_[rbx+0x18], lea_edx_[rax@@ -6], cmp_edx_1, jbe_0x@@ 2c, test_eax_eax, je_0x28, and_r13d@@ _1, jne_0x32, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, mov_rsi_r12, pop_r12, mov_edx_1, pop_r13, jmp_0x6@@ 22@@ 3, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_rdi_rbp, mov_edx_0x10, lea_rsi_[rip+0x16@@ d@@ bb], call_0xa@@ e@@ 79, mov_rsi_r12, mov_rdi_rbp, mov_edx_1, call_0x6@@ 1e@@ 9, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, mov_esi_0xa, pop_r13, jmp_0x@@ ac@@ 3@@ 2
endbr64, ret
endbr64, push_r12, push_rbp, sub_rsp_8, mov_r12_qword_ptr_[r@@ si+0x28], test_r12_r12, je_9, cmp_byte_ptr_[r12]_0, jne_0xf, add_rsp_8, pop_rbp, pop_r12, ret, and_ecx_1, mov_rbp_rdi, jne_0x22, mov_rdi_r12, call_0xffffffffffff1c@@ ed, add_rsp_8, mov_rdi_rbp, pop_rbp, mov_rsi_r12, mov_rdx_rax, pop_r12, jmp_0x@@ ad@@ e8, mov_edx_9, lea_rsi_[rip+0x16@@ d@@ 27], mov_rdi_rbp, call_0x@@ add@@ 1, mov_rdi_r12, call_0xffffffffffff1c@@ b9, mov_rdx_rax, mov_rsi_r12, mov_rdi_rbp, call_0xa@@ db@@ b, add_rsp_8, mov_rdi_rbp, pop_rbp, mov_esi_0xa, pop_r12, jmp_0x@@ ab@@ 8@@ 7
endbr64, push_r13, mov_rax_qword_ptr_[r8+0x@@ 20], push_r12, push_rbp, mov_r12_qword_ptr_[r@@ dx+rax], test_r12_r12, je_9, cmp_byte_ptr_[r12]_0, jne_0xd, pop_rbp, pop_r12, pop_r13, ret, and_ecx_1, mov_rbp_rdi, jne_0x22, mov_rdi_r12, call_0xffffffffffff1c@@ 5d, mov_rdi_rbp, pop_rbp, mov_rsi_r12, pop_r12, mov_rdx_rax, pop_r13, jmp_0x@@ ad@@ 5a, mov_r13_qword_ptr_[r@@ 8], mov_rdi_r13, call_0xffffffffffff1c@@ 3a, mov_rdx_rax, mov_rsi_r13, mov_rdi_rbp, call_0xa@@ d@@ 3c, mov_edx_2, lea_rsi_[rip+0x16@@ c6@@ a], mov_rdi_rbp, call_0xa@@ d@@ 28, mov_rdi_r12, call_0xffffffffffff1c@@ 10, mov_rdx_rax, mov_rsi_r12, mov_rdi_rbp, call_0xa@@ d@@ 12, mov_rdi_rbp, pop_rbp, pop_r12, mov_esi_0xa, pop_r13, jmp_0x@@ aa@@ e@@ 0
endbr64, lea_rax_[r@@ si+0x@@ c0], cmp_rax_rdx, je_0xa, ret, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_qword_ptr_[r@@ si+0x1@@ 40], test_rbx_rbx, je_0x57, mov_rax_qword_ptr_[r8+0x@@ 20], mov_r12_r8, cmp_qword_ptr_[r@@ bx@@ +rax]_0, je_0x49, and_ecx_1, mov_rbp_rdi, mov_r13d_ecx, jne_0x4d, mov_esi_0x20, mov_rdi_rbp, call_0xaa@@ 80, mov_rax_qword_ptr_[r12+0x20], mov_r14_qword_ptr_[r@@ bx+rax], mov_rdi_r14, call_0xffffffffffff1b@@ 7f, mov_rdx_rax, mov_rsi_r14, mov_rdi_rbp, call_0xac@@ 81, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, jne_0xffffffffffffffce, test_r13d_r13d, jne_0x41, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_r14_qword_ptr_[r@@ 8], mov_rdi_r14, call_0xffffffffffff1b@@ 4a, mov_rdx_rax, mov_rsi_r14, mov_rdi_rbp, call_0xac@@ 4c, mov_esi_0x3a, mov_rdi_rbp, call_0xaa@@ 1f, jmp_0xffffffffffffff92, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, mov_esi_0xa, pop_r14, jmp_0x@@ aa@@ 0@@ 0
endbr64, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, mov_rax_qword_ptr_[r8+0x@@ 20], and_ecx_1, movzx_eax_byte_ptr_[rdx+rax], je_0x67, test_al_al, je_0xa3, mov_r12_qword_ptr_[r@@ 8], mov_rdi_r12, call_0xffffffffffff1a@@ d7, mov_rdx_rax, mov_rsi_r12, mov_rdi_rbp, call_0xa@@ bd@@ 9, mov_rdi_rbp, mov_edx_2, lea_rsi_[rip+0x16@@ b0@@ 4], call_0xa@@ bc@@ 5, mov_rdi_rbp, lea_rsi_[rip+0x14@@ 86@@ 7], mov_edx_3, call_0xa@@ bb@@ 1, add_rsp_8, mov_rdi_rbp, pop_rbp, mov_esi_0xa, pop_r12, jmp_0xa@@ 97@@ d, mov_edx_3, lea_rsi_[rip+0x14@@ 8@@ 35], test_al_al, je_0x12, add_rsp_8, mov_rdi_rbp, pop_rbp, pop_r12, jmp_0x@@ ab@@ 76, add_rsp_8, mov_rdi_rbp, pop_rbp, mov_edx_2, lea_rsi_[rip+0x16@@ ab@@ 9], pop_r12, jmp_0x@@ ab@@ 5a, add_rsp_8, pop_rbp, pop_r12, ret
endbr64, push_r12, mov_rax_qword_ptr_[r8+0x@@ 20], and_ecx_1, push_rbp, mov_rbp_rdi, push_rbx, movsxd_rbx@@ _dword_ptr_[r@@ dx+rax], je_0x72, test_ebx_ebx, je_0x9e, mov_r12_qword_ptr_[r@@ 8], shl_rbx_4, mov_rdi_r12, call_0xffffffffffff1a@@ 06, mov_rdx_rax, mov_rsi_r12, mov_rdi_rbp, call_0xa@@ b0@@ 8, mov_edx_2, lea_rsi_[rip+0x16@@ a@@ 36], mov_rdi_rbp, call_0xaa@@ f4, lea_rax_[rip+0x24@@ e@@ 48], mov_r12_qword_ptr_[r@@ ax+r@@ bx], mov_rdi_r12, call_0xffffffffffff@@ 19d@@ 1, mov_rdx_rax, mov_rsi_r12, mov_rdi_rbp, call_0xaa@@ d3, pop_rbx, mov_rdi_rbp, pop_rbp, mov_esi_0xa, pop_r12, jmp_0xa@@ 8a@@ 2, shl_rbx_4, lea_rax_[rip+0x24@@ e0@@ d], mov_r12_qword_ptr_[r@@ ax+r@@ bx], mov_rdi_r12, call_0xffffffffffff19@@ 96, pop_rbx, mov_rdi_rbp, pop_rbp, mov_rsi_r12, mov_rdx_rax, pop_r12, jmp_0x@@ aa@@ 94, pop_rbx, pop_rbp, pop_r12, ret
endbr64, mov_rax_qword_ptr_[rdx+0x10], test_rax_rax, je_0x35, cmp_dword_ptr_[rax+0x1@@ 0]_1, jbe_0x@@ 2f, push_r12, and_ecx_1, push_rbp, mov_rbp_rdi, push_rbx, jne_0x2b, mov_r12_qword_ptr_[r@@ ax+8], mov_rdi_r12, call_0xffffffffffff19@@ 4a, pop_rbx, mov_rdi_rbp, pop_rbp, mov_rsi_r12, mov_rdx_rax, pop_r12, jmp_0x@@ aa@@ 48, ret, mov_r12_qword_ptr_[r@@ 8], mov_rbx_rdx, mov_rdi_r12, call_0xffffffffffff19@@ 1f, mov_rdx_rax, mov_rsi_r12, mov_rdi_rbp, call_0xaa@@ 21, mov_edx_2, lea_rsi_[rip+0x16@@ 94@@ f], mov_rdi_rbp, call_0xaa@@ 0d, mov_rax_qword_ptr_[rbx+0x10], mov_r12_qword_ptr_[r@@ ax+8], mov_rdi_r12, call_0xffffffffffff18@@ ed, mov_rdx_rax, mov_rsi_r12, mov_rdi_rbp, call_0xa@@ 9e@@ f, pop_rbx, mov_rdi_rbp, pop_rbp, mov_esi_0xa, pop_r12, jmp_0xa@@ 7b@@ e
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rsi, mov_r13d_dword_ptr_[r@@ si+0x1c], cmp_r13d@@ _6, je_0x9c, jg_0x@@ 9c, and_ecx_1, mov_r12_rdi, jne_0x3a, mov_rdi_rsi, call_0x7@@ 5c@@ 5, mov_rdi_rax, call_0xffffffffffff18@@ 8d, mov_rdi_rbp, mov_r13_rax, call_0x7@@ 5b@@ 2, pop_rbp, mov_rdi_r12, pop_r12, mov_rdx_r13, mov_rsi_rax, pop_r13, jmp_0xa@@ 97@@ f, mov_edx_0xa, lea_rsi_[rip+0x16@@ 8c@@ 4], call_0xa@@ 9@@ 64, mov_rdi_rbp, call_0x7@@ 57@@ c, mov_rdi_rax, call_0xffffffffffff18@@ 44, mov_rdi_rbp, mov_r13_rax, call_0x7@@ 56@@ 9, mov_rsi_rax, mov_rdi_r12, mov_rdx_r13, call_0xa@@ 93@@ b, pop_rbp, mov_rdi_r12, pop_r12, mov_esi_0xa, pop_r13, jmp_0xa@@ 70@@ 9, pop_rbp, pop_r12, pop_r13, ret, mov_rsi_rdx, mov_rdi_rbp, mov_edx_3, call_0x7@@ 3@@ 1f, mov_r8_rax, mov_r9d_r13d, lea_rcx_[rip+0x15@@ c8@@ 5], lea_rdx_[rip+0x16@@ c0@@ e], mov_esi_0x@@ ee, lea_rdi_[rip+0x16@@ 80@@ 9], xor_eax_eax, call_0x1@@ 4e@@ 8
endbr64, lea_rax_[r@@ si+0x@@ 48], cmp_rdx_rax, je_5, ret, push_r14, mov_r14_rdx, push_r13, push_r12, push_rbp, mov_rbp_rsi, sub_rsp_8, mov_r13d_dword_ptr_[r@@ si+0x10], cmp_r13d_4, ja_0x3@@ 49, mov_r13d_dword_ptr_[r@@ si+0x14], cmp_r13d_1, ja_0x3@@ 72, mov_r8d_dword_ptr_[r@@ si+0x18], cmp_r8d@@ _7, ja_0x3@@ 0c, lea_rdx_[rip+0x16@@ b0@@ e], movsxd_rax_dword_ptr_[r@@ dx+r@@ 8*4], mov_r12_rdi, add_rax_rdx, jmp_rax, lea_rcx_[rip+0x@@ 16@@ 4f@@ 3], lea_rdx_[rip+0x16@@ 88@@ 9], mov_esi_0x1@@ 25, lea_rdi_[rip+0x16@@ 4@@ 94], xor_eax_eax, call_0x1@@ 17@@ 3, mov_edx_3, mov_rsi_r14, mov_rdi_rbp, call_0x6@@ f7@@ 3, mov_r8_rax, mov_r9d_r13d, lea_rcx_[rip+0x@@ 16@@ 53@@ 1], lea_rdx_[rip+0x16@@ 85@@ 2], mov_esi_0x1@@ 01, lea_rdi_[rip+0x16@@ 45@@ d], xor_eax_eax, call_0x1@@ 13c, mov_edx_3, mov_rsi_r14, mov_rdi_rbp, call_0x6f@@ 3c, mov_r8_rax, mov_r9d_r13d, lea_rcx_[rip+0x@@ 16@@ 5@@ 22], lea_rdx_[rip+0x16@@ 8@@ 1b], mov_esi_0x1@@ 04, lea_rdi_[rip+0x16@@ 42@@ 6], xor_eax_eax, call_0x1@@ 10@@ 5
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_rbx_qword_ptr_[r@@ si+0x10], test_rbx_rbx, je_0x116, mov_rbp_rdi, mov_r12_rsi, lea_r15_[rip+0x@@ 13@@ 4a@@ e], lea_r14_[rip+0x@@ 16@@ 7@@ 1d], lea_r13_[rip+0x@@ 16@@ 4@@ 15], jmp_0x1d, mov_eax_dword_ptr_[rbx+0x@@ 48], test_eax_eax, jne_0x68, mov_rbx_qword_ptr_[rbx+0x10], mov_r15_r13, test_rbx_rbx, je_0xde, cmp_qword_ptr_[r@@ bx]@@ _r12, jne_0x15@@ 8, mov_rdi_r15, call_0xffffffffffff13@@ 3d, mov_rdx_rax, mov_rsi_r15, mov_rdi_rbp, call_0xa@@ 4@@ 3f, mov_rax_qword_ptr_[rbx+8], mov_r15_qword_ptr_[r@@ ax+8], mov_rdi_r15, call_0xffffffffffff13@@ 1f, mov_rdx_rax, mov_rsi_r15, mov_rdi_rbp, call_0xa@@ 42@@ 1, cmp_byte_ptr_[rbx+0x@@ 4c]_0, jne_0xffffffffffffffa@@ 8, mov_rsi_qword_ptr_[rbx+0x28], mov_rdi_rbp, call_0xa@@ b@@ 4f, mov_eax_dword_ptr_[rbx+0x@@ 48], test_eax_eax, je_0xffffffffffffff@@ 9c, mov_edx_2, lea_rsi_[rip+0x16@@ 38@@ 7], mov_rdi_rbp, call_0xa@@ 3f@@ 4, mov_r8d_dword_ptr_[r@@ bx+0x48], cmp_r8d@@ _5, ja_0x10@@ a, mov_eax_r8d, movsxd_rax_dword_ptr_[r@@ 14@@ +rax*4], add_rax_r14, jmp_rax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rcx_[rip+0x@@ 16@@ 3@@ ff], lea_rdx_[rip+0x16@@ 5@@ e0], mov_esi_0x1@@ 3a, lea_rdi_[rip+0x16@@ 20@@ 3], xor_eax_eax, call_0x@@ ee@@ 2, lea_rcx_[rip+0x15@@ 6@@ 1e], lea_rdx_[rip+0x16@@ 5b@@ f], mov_esi_0x1@@ 54, lea_rdi_[rip+0x16@@ 1e@@ 2], xor_eax_eax, call_0xec@@ 1
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x18, mov_rbx_qword_ptr_[r@@ dx], mov_qword_ptr_[rsp+8]_rdx, test_rbx_rbx, je_0x9d, mov_r15_rdi, mov_r12_rsi, mov_r13d_ecx, mov_rbp_r8, xor_edx_edx, jmp_0x26, test_r13b@@ _1, jne_0x44, mov_rsi_rbx, mov_rdi_r15, call_0xfffffffffffffd@@ bc, mov_edx_1, mov_rbx_qword_ptr_[rbx+8], test_rbx_rbx, je_0x5b, mov_eax_dword_ptr_[rbx+0x18], cmp_rax_qword_ptr_[r@@ bp+0x20], jne_0xfffffffffffffff0, cmp_qword_ptr_[r@@ bx]@@ _r12, jne_0x81, test_dl_dl, je_0xffffffffffffffd1, mov_edx_2, lea_rsi_[rip+0x@@ f7@@ aa], mov_rdi_r15, call_0xa@@ 238, jmp_0xffffffffffffffc1, mov_r14_qword_ptr_[r@@ bp], mov_rdi_r14, call_0xffffffffffff11@@ 19, mov_rdx_rax, mov_rsi_r14, mov_rdi_r15, call_0xa@@ 2@@ 1b, mov_edx_2, lea_rsi_[rip+0x16@@ 14@@ 9], mov_rdi_r15, call_0xa@@ 20@@ 7, jmp_0xffffffffffffff90, and_r13d@@ _1, je_6, test_dl_dl, jne_0x11, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, mov_rdi_r15, mov_esi_0xa, pop_r15, jmp_0x@@ 9@@ fb@@ 1, mov_rsi_qword_ptr_[rsp+8], mov_edx_3, mov_rdi_r12, call_0x6b@@ cf, mov_r8_rax, lea_rcx_[rip+0x@@ 16@@ 2e@@ 8], lea_rdx_[rip+0x16@@ 48@@ 1], mov_esi_0x1@@ 69, lea_rdi_[rip+0x16@@ 0@@ bc], xor_eax_eax, call_0xd@@ 9@@ b
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_rbx_qword_ptr_[r@@ dx+0x@@ 68], test_rbx_rbx, je_0xcc, add_rsi@@ _0xc0, mov_r12_rdx, cmp_rdx_rsi, je_0xb9, mov_r13d_ecx, mov_rbp_rdi, and_r13d@@ _1, jne_0x@@ bc, lea_r14_[rip+0x@@ 160@@ f6], mov_esi_0x20, mov_rdi_rbp, call_0x9f@@ 18, mov_r15_qword_ptr_[r@@ bx+8], mov_rdi_r15, call_0xffffffffffff10@@ 1c, mov_rdx_rax, mov_rsi_r15, mov_rdi_rbp, call_0xa@@ 11@@ e, mov_esi_0x20, mov_rdi_rbp, call_0x9e@@ f1, mov_r15_qword_ptr_[r@@ bx+0x10], mov_rdi_r15, call_0xffffffffffff0@@ ff@@ 5, mov_rdx_rax, mov_rsi_r15, mov_rdi_rbp, call_0xa0@@ f7, cmp_byte_ptr_[rbx+0x1@@ 8]_0, jne_0x26, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, je_0x36, cmp_rbx_qword_ptr_[r@@ 12+0x@@ 68], je_0xffffffffffffff@@ 9f, mov_esi_0xa, mov_rdi_rbp, call_0x9e@@ b5, jmp_0xffffffffffffff90, mov_edx_9, mov_rsi_r14, mov_rdi_rbp, call_0xa0@@ bd, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, jne_0xffffffffffffffce, test_r13d_r13d, jne_0x34, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_edx_0xb, lea_rsi_[rip+0x16@@ 0@@ 2f], call_0xa0@@ 8c, mov_rbx_qword_ptr_[r@@ 12+0x@@ 68], test_rbx_rbx, jne_0xffffffffffffff@@ 31, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, pop_r14, mov_esi_0xa, pop_r15, jmp_0x@@ 9e@@ 4@@ 3
endbr64, lea_rax_[r@@ si+0x@@ c0], cmp_rdx_rax, je_0xba, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_qword_ptr_[r@@ si+0x1@@ 60], test_rbx_rbx, je_0x5b, mov_eax_dword_ptr_[r@@ si+0x18], sub_eax@@ _5, cmp_eax_1, ja_0x@@ 95, mov_r13d_ecx, mov_r12_rdi, and_r13d@@ _1, jne_0x4c, mov_esi_0x20, mov_rdi_r12, call_0x9@@ dd@@ 8, mov_rbp_qword_ptr_[rbx+8], mov_rdi_rbp, call_0xffffffffffff0@@ ed@@ c, mov_rdx_rax, mov_rsi_rbp, mov_rdi_r12, call_0x9@@ fd@@ e, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, jne_0xffffffffffffffd3, test_r13d_r13d, jne_0x2b, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_edx_0x11, lea_rsi_[rip+0x15@@ f6@@ d], call_0x9@@ fb@@ 4, mov_rbx_qword_ptr_[rbp+0x@@ 160], test_rbx_rbx, jne_0xffffffffffffffa5, pop_rbx, pop_rbp, mov_rdi_r12, pop_r12, pop_r13, mov_esi_0xa, pop_r14, jmp_0x@@ 9d@@ 73, ret, mov_r14_rdx, mov_rdi_rsi, call_0x6b@@ 81, mov_edx_3, mov_rsi_r14, mov_rdi_rbp, mov_rbx_rax, call_0x6@@ 97@@ e, mov_r8_rax, mov_r9_rbx, lea_rcx_[rip+0x@@ 160@@ c4], lea_rdx_[rip+0x16@@ 2@@ 1d], mov_esi_0x1@@ 9e, lea_rdi_[rip+0x15@@ e@@ 68], xor_eax_eax, call_0xb@@ 4@@ 7
endbr64, lea_rax_[r@@ si+0x@@ c0], cmp_rdx_rax, je_0xba, push_r13, push_r12, mov_r12_rsi, push_rbp, push_rbx, sub_rsp_8, mov_rbx_qword_ptr_[r@@ si+0x1@@ 48], test_rbx_rbx, je_0x55, mov_eax_dword_ptr_[r@@ si+0x18], sub_eax_2, cmp_eax_3, ja_0x@@ 93, and_ecx_1, mov_rbp_rdi, mov_r13d_ecx, jne_0x4b, mov_esi_0x20, mov_rdi_rbp, call_0x9c@@ c8, mov_rsi_qword_ptr_[rbx+8], mov_ecx_1, lea_rdx_[r@@ si+0x@@ 48], mov_rdi_rbp, call_0x67@@ d3, mov_rbx_qword_ptr_[rbx+0x18], test_rbx_rbx, jne_0xffffffffffffffd7, test_r13d_r13d, jne_0x30, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_edx_0x11, lea_rsi_[rip+0x15@@ e6@@ f], call_0x9@@ ea@@ 4, mov_rbx_qword_ptr_[r@@ 12+0x1@@ 48], test_rbx_rbx, jne_0xffffffffffffffa4, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, mov_esi_0xa, pop_r13, jmp_0x@@ 9c@@ 60, ret, mov_r13_rdx, mov_rdi_rsi, call_0x6a@@ 71, mov_edx_3, mov_rsi_r13, mov_rdi_r12, mov_rbx_rax, call_0x6@@ 86@@ e, mov_r8_rax, mov_r9_rbx, lea_rcx_[rip+0x15@@ ff@@ 4], lea_rdx_[rip+0x16@@ 0@@ fd], mov_esi_0x1@@ b7, lea_rdi_[rip+0x15@@ d@@ 58], xor_eax_eax, call_0xa@@ 3@@ 7
endbr64, push_r12, and_edx_1, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, jne_0x27, mov_r12_qword_ptr_[r@@ si+0x10], mov_rdi_r12, call_0xffffffffffff0@@ d0@@ 6, pop_rbx, mov_rdi_rbp, pop_rbp, mov_rsi_r12, mov_rdx_rax, pop_r12, jmp_0x@@ 9e@@ 04, mov_r12_qword_ptr_[r@@ si+8], mov_rdi_r12, call_0xffffffffffff0c@@ e1, mov_rdx_rax, mov_rsi_r12, mov_rdi_rbp, call_0x9d@@ e3, mov_edx_2, lea_rsi_[rip+0x15@@ d@@ 11], mov_rdi_rbp, call_0x9d@@ cf, mov_r12_qword_ptr_[r@@ bx+0x10], mov_rdi_r12, call_0xffffffffffff0@@ cb@@ 3, mov_rdx_rax, mov_rsi_r12, mov_rdi_rbp, call_0x9d@@ b5, pop_rbx, mov_rdi_rbp, pop_rbp, mov_esi_0xa, pop_r12, jmp_0x@@ 9b@@ 8@@ 4
endbr64, push_r13, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, cmp_qword_ptr_[rip+0x2@@ 5@@ 27@@ 4]_0, je_0x32, mov_r13_rsi, lea_rbx_[rip+0x@@ 25@@ 268], mov_r8_rbx, mov_ecx_1, mov_rdx_r12, mov_rsi_r13, mov_rdi_rbp, call_qword_ptr_[r@@ bx+0x18], add_rbx@@ _0x28, cmp_qword_ptr_[rbx]_0, jne_0xffffffffffffffe4, mov_rbx_qword_ptr_[r@@ 12+0x@@ 70], test_rbx_rbx, je_0x22, mov_rsi_rbx, mov_edx_1, mov_rdi_rbp, call_0xfffffffffffffe@@ f5, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, jne_0xffffffffffffffea, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret
endbr64, push_r15, push_r14, mov_r14_rsi, push_r13, mov_r13_rdi, push_r12, mov_r12_rcx, push_rbp, mov_rbp_rdx, mov_rsi_rbp, sub_rsp_0x20, mov_r15@@ _rsp, mov_rdx_rcx, mov_rdi_r15, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x10]_0, call_0xffffffffffffff@@ 1d, mov_rdi_r15, call_0x9c@@ e5, mov_rdi_qword_ptr_[rsp+0x10], mov_rsi_r13, call_0xffffffffffff0c@@ 68, test_eax_eax, js@@ _0x28, mov_rdi_r15, call_0x9d@@ cc, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x4b, add_rsp_0x20, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_rbp, mov_edx_1, mov_rsi_r12, call_0x66@@ 6e, mov_edx_5, lea_rsi_[rip+0x15@@ e@@ 25], lea_rdi_[rip+0x12@@ 2a@@ 4], mov_rbp_rax, call_0xffffffffffff0b@@ 13, mov_rdi_rax, mov_rdx_r14, mov_rsi_rbp, xor_eax_eax, call_0xb@@ 53, call_0xffffffffffff0b@@ 2@@ e
endbr64, push_r15, lea_r15_[rip+0x@@ 14@@ f@@ 18], mov_ecx@@ _0x2000, push_r14, push_r13, mov_r13_rdi, push_r12, push_rbp, push_rbx, sub_rsp_0x58, mov_qword_ptr_[rsp+0x18]_rsi, lea_rsi_[rip+0x26@@ 43@@ 3], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x48]_rax, xor_eax_eax, and_edx_1, lea_rax_[rip+0x15@@ 9a@@ e], cmovne_rax@@ _r15, mov_r12d_edx, xor_edx_edx, mov_qword_ptr_[rsp+0x30]_0, mov_qword_ptr_[rsp+0x38]_0, mov_qword_ptr_[rsp+0x40]_0, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffff0@@ f@@ 90, test_eax_eax, jne_0x12@@ 6, lea_rbx_[rsp+0x20], mov_rdi_rbx, mov_qword_ptr_[rsp+8]_rbx, call_0x5c@@ c6, lea_rsi_[rip+0x67@@ da], mov_rdi_rbx, call_0x5d@@ b7, mov_eax_dword_ptr_[rsp+0x20], lea_rbp_[rsp+0x@@ 30], test_eax_eax, jle_0x@@ 81, xor_ebx_ebx, lea_rbp_[rsp+0x@@ 30], mov_rax_qword_ptr_[rsp+0x28], test_r12d_r12d, mov_r15_qword_ptr_[r@@ ax+r@@ bx*8], lea_rax_[r@@ 15+0x@@ c0], lea_r9_[r@@ 15+0x@@ 48], cmove_rax@@ _r9, mov_rdi_r15, mov_rsi_rax, mov_r14_rax, call_0x5b@@ 04, test_al_al, je_0x3e, mov_rdx_r14, mov_rsi_r15, mov_rdi_rbp, call_0xfffffffffffffd@@ a2, mov_esi_0xa, mov_rdi_rbp, call_0x9@@ 90@@ 5, mov_rdi_rbp, call_0x9b@@ 5d, mov_rdi_qword_ptr_[rsp+0x40], mov_rsi_r13, call_0xffffffffffff0a@@ e0, test_eax_eax, js_0x4@@ 4, mov_rdi_rbp, call_0x98@@ 74, inc_rbx, cmp_dword_ptr_[rsp+0x@@ 20]@@ _ebx, jg_0xffffffffffffff@@ 90, mov_rdi_qword_ptr_[rsp+8], call_0x5d@@ 41, mov_rdi_rbp, call_0x9c@@ 29, mov_rax_qword_ptr_[rsp+0x48], xor_rax_qword_ptr_fs:[0x28], jne_0x7a, add_rsp_0x58, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_edx_1, mov_rsi_r14, mov_rdi_r15, call_0x65@@ 3a, mov_edx_5, lea_rsi_[rip+0x15@@ ce@@ 1], lea_rdi_[rip+0x12@@ 100], mov_r12_rax, call_0xffffffffffff0@@ 96@@ f, mov_rcx_qword_ptr_[rsp+0x18], mov_rsi_qword_ptr_[rsp+0x10], mov_rdi_rax, mov_rdx_r12, xor_eax_eax, call_0x9a@@ 8, lea_rsi_[rip+0x15@@ c@@ 84], lea_rdi_[rip+0x12@@ 0@@ d3], mov_edx_5, call_0xffffffffffff0@@ 940, mov_rsi_qword_ptr_[rsp+0x10], mov_rdi_rax, xor_eax_eax, call_0x98@@ 1, call_0xffffffffffff0@@ 95@@ c
endbr64, push_r12, mov_r12_rdi, push_rbp, push_rbx, mov_ebx_esi, mov_esi_1, call_0xffffffffffffc@@ cd@@ e, mov_rbp_rax, mov_rdi_rax, call_0xffffffffffffcd@@ 33, mov_rdi_qword_ptr_[rbp+0x18], mov_edx_ebx, mov_rsi_r12, call_0xfffffffffffffe0@@ 5, and_ebx@@ _2, mov_rdi_rbp, jne_0x22, call_0xffffffffffffce@@ 38, mov_rdi_rbp, call_0xffffffffffffcf@@ 00, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, jmp_0xffffffffffffc@@ fc@@ 4, call_0xffffffffffffcd@@ 88, mov_rdi_rbp, call_0xffffffffffffce@@ 10, mov_rdi_rbp, call_0xffffffffffffc@@ ed@@ 8, mov_rdi_rbp, call_0xffffffffffffc@@ fa0, pop_rbx, pop_rbp, mov_rdi_r12, pop_r12, jmp_0xffffffffffffe@@ 82@@ 4
endbr64, push_r15, mov_r15_rdi, lea_rdi_[rip+0x15@@ cd@@ a], push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, call_0xaa@@ d4, mov_edx_5, lea_rsi_[rip+0x15@@ d@@ 19], lea_rdi_[rip+0x11@@ f@@ ea], mov_r14_rax, call_0xffffffffffff0@@ 85@@ 9, lea_rdi_[rip+0x15@@ ca@@ c], mov_r13_rax, call_0xaa@@ aa, lea_rdi_[rip+0x15@@ c@@ 98], mov_r12_rax, call_0xaa@@ 9b, mov_rbp_rax, call_0x67@@ a3, lea_rdi_[rip+0x15@@ c8@@ e], mov_rbx_rax, call_0xaa@@ 84, push_r15, mov_rdi_qword_ptr_[rip+0x2@@ 6@@ 00@@ 6], mov_rcx_rax, push_r14, mov_r9_rbp, mov_r8_rbx, push_r13, lea_rdx_[rip+0x15@@ c6@@ e], mov_esi_1, push_r12, xor_eax_eax, call_0xffffffffffff0@@ e@@ 69, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
push_r15, push_r14, mov_r14_rdi, lea_rdi_[rip+0x15@@ c@@ 2c], push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x18, mov_qword_ptr_[rsp+8]_rsi, call_0xaa@@ 23, lea_rdi_[rip+0x15@@ c@@ 16], mov_r15_rax, call_0xaa@@ 14, lea_rdi_[rip+0x15@@ c0@@ 2], mov_r13_rax, call_0xaa@@ 05, mov_rbp_rax, call_0x6@@ 70d, lea_rdi_[rip+0x15@@ b@@ f8], mov_rbx_rax, call_0xa@@ 9e@@ e, mov_edx_5, lea_rsi_[rip+0x15@@ b@@ fd], lea_rdi_[rip+0x11@@ f0@@ 4], mov_r12_rax, call_0xffffffffffff0@@ 77@@ 3, mov_rcx_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[rip+0x2@@ 5f@@ 52], push_rcx, mov_rdx_rax, mov_r9_rbp, push_r15, mov_r8_rbx, mov_rcx_r12, push_r14, mov_esi_1, xor_eax_eax, push_r13, call_0xffffffffffff0d@@ b8, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
endbr64, push_rbp, lea_rsi_[rip+0x15@@ bb@@ 9], mov_rbp_rdi, mov_edx_5, lea_rdi_[rip+0x11@@ ea@@ 3], call_0xffffffffffff0@@ 7@@ 15, mov_rdi_rax, mov_rsi_rbp, pop_rbp, jmp_0xffffffffffffff2@@ 9
push_rbp, mov_rbp_rdi, mov_rdx_rbp, push_rbx, mov_rbx_rsi, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x18]_0, lea_rcx_[rsp+0x20], lea_rdi_[rsp+0x18], movdqu_xmm0_xmmword_ptr_[rsi], movups_xmmword_ptr_[rsp+0x@@ 20]_xmm0, mov_rax_qword_ptr_[rsi+0x10], mov_esi_1, mov_qword_ptr_[rsp+0x30]_rax, call_0xffffffffffff0@@ aa@@ 7, test_eax_eax, js_0x4@@ 6, mov_rbx_qword_ptr_[rip+0x2@@ 9@@ 11@@ 7], lea_rdx_[rip+0x28@@ 110], mov_rdi_qword_ptr_[rbx+0x30], mov_rbp_qword_ptr_[rsp+0x18], cmp_rdi_rdx, je_0xf, mov_dword_ptr_[rsp+0xc]_eax, call_0xffffffffffff0@@ 3f@@ e, mov_eax_dword_ptr_[rsp+0xc], mov_qword_ptr_[rbx+0x@@ 30]@@ _rbp, mov_rdx_qword_ptr_[rsp+0x38], xor_rdx_qword_ptr_fs:[0x28], jne_0x4d, add_rsp_0x48, pop_rbx, pop_rbp, ret, mov_r9_rbx, mov_r8_rbp, mov_ecx_0x1000, mov_edx_1, mov_esi_0x1000, lea_rdi_[rip+0x28@@ 0@@ be], call_0xffffffffffff0a@@ be, cmp_eax@@ _0xfff, jle_@@ 5, or_eax_0xffffffff, mov_rbx_qword_ptr_[rip+0x2@@ 90@@ a8], lea_rbp_[rip+0x@@ 28@@ 0@@ a1], mov_rdi_qword_ptr_[rbx+0x30], cmp_rdi_rbp, jne_0xffffffffffffff98, jmp_0xffffffffffffffa3, call_0xffffffffffff0@@ 65@@ 6
push_rbp, mov_ebp_esi, push_rbx, mov_rbx_rdi, sub_rsp_0x1@@ 48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 38]_rax, xor_eax_eax, mov_rax_qword_ptr_[rdi+0x18], test_rax_rax, je_0xc, mov_rsi_qword_ptr_[r@@ di+0x20], mov_rdi_qword_ptr_[rdi+0x30], call_rax, mov_eax_dword_ptr_[rip+0x2@@ 7f@@ 5a], inc_eax, mov_dword_ptr_[rip+0x2@@ 7f@@ 52@@ ]_eax, cmp_eax_3, jg_0x1@@ 43, mov_dword_ptr_[rsp+0x2@@ 4]_ebp, mov_rax_qword_ptr_[rbx+0x28], mov_qword_ptr_[rsp+0x28]_rax, mov_rax_qword_ptr_[rip+0x2@@ 90@@ 31], mov_qword_ptr_[rsp+0x10]_rax, lea_rax_[rsp+0x70], mov_qword_ptr_[rsp+8]_rax, lea_rax_[rsp+0x30], mov_qword_ptr_[rsp+0x18]_rax, mov_rax_qword_ptr_[rsp+0x28], test_rax_rax, je_0x69, mov_dword_ptr_[rsp+0x20]_0, mov_eax_dword_ptr_[rsp+0x20], mov_rdx_qword_ptr_[rsp+0x28], cmp_eax_1, jle_0x@@ 8a, mov_eax_dword_ptr_[rsp+0x24], lea_rcx_[rip+0x@@ 27@@ f0@@ 9], and_eax@@ _dword_ptr_[r@@ dx+0x28], mov_dword_ptr_[rsp+0x24]_eax, mov_rdx_qword_ptr_[rsp+0x28], mov_eax_dword_ptr_[rsp+0x24], or_eax@@ _dword_ptr_[r@@ dx+0x@@ 2c], mov_dword_ptr_[rsp+0x24]_eax, mov_rax_qword_ptr_[rsp+0x28], mov_rbx_qword_ptr_[rax], mov_rax_qword_ptr_[rsp+0x28], cmp_rax_rcx, je_0xc, mov_rdi_qword_ptr_[rsp+0x28], call_0xffffffffffff0@@ 2b@@ b, mov_qword_ptr_[rsp+0x2@@ 8]_rbx, mov_rax_qword_ptr_[rsp+0x28], test_rax_rax, jne_0xffffffffffffff@@ 9b, mov_eax_dword_ptr_[rip+0x27@@ ea@@ 5], dec_eax, mov_dword_ptr_[rip+0x2@@ 7e@@ 9d@@ ]_eax, mov_rax_qword_ptr_[rsp+0x1@@ 38], xor_rax_qword_ptr_fs:[0x28], jne_0x12@@ 5, add_rsp_0x1@@ 48, pop_rbx, pop_rbp, ret, movsxd_rax_dword_ptr_[rsp+0x@@ 20], shl_rax_4, cmp_qword_ptr_[r@@ dx+r@@ ax+0x1@@ 0]_0, je_0x47, mov_rdx_qword_ptr_[rsp+0x28], movsxd_rax_dword_ptr_[rsp+0x@@ 20], mov_ecx_dword_ptr_[rsp+0x24], shl_rax_4, test_dword_ptr_[r@@ dx@@ +rax+@@ 8]_ecx, je_0x2f, mov_rdi_qword_ptr_[rsp+8], call_0xffffffffffff0@@ 7@@ 32, endbr64, test_eax_eax, je_0x6f, mov_rdi_qword_ptr_[rsp+0x18], mov_esi_6, call_0xfffffffffffffe@@ 9b, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rip+0x2@@ 8f@@ 1a@@ ]_rax, mov_eax_dword_ptr_[rsp+0x20], inc_eax, mov_dword_ptr_[rsp+0x20]_eax, jmp_0xffffffffffffff0a, mov_eax_dword_ptr_[rip+0x27@@ e0@@ 2], mov_edx_5, inc_eax, lea_rsi_[rip+0x15@@ 97@@ c], lea_rdi_[rip+0x11@@ c0@@ b], mov_dword_ptr_[rip+0x2@@ 7d@@ e7@@ ]_eax, call_0xffffffffffff0@@ 47@@ 7, mov_rdi_rax, xor_esi_esi, call_0xfffffffffffffd@@ 3d, mov_dword_ptr_[rsp+0x24]_0, jmp_0xfffffffffffffe@@ 8f, mov_rax_qword_ptr_[rsp+0x18], pxor_xmm0_xmm0, mov_qword_ptr_[rip+0x2@@ 8@@ eb@@ 8]_rax, lea_rcx_[rip-0x@@ 2e@@ f], movaps_xmmword_ptr_[r@@ ax]_xmm0, mov_qword_ptr_[rsp+0x48]_rcx, mov_rcx_qword_ptr_[rsp+8], mov_qword_ptr_[rax+0x@@ 30]_0, mov_rdx_qword_ptr_[rsp+0x28], movaps_xmmword_ptr_[r@@ ax+0x@@ 20]_xmm0, mov_qword_ptr_[rsp+0x40]_rcx, movsxd_rax_dword_ptr_[rsp+0x@@ 20], mov_rsi_qword_ptr_[rsp+0x28], mov_rcx_qword_ptr_[rsp+0x28], mov_dword_ptr_[rsp+0x@@ 38]_1, mov_edi_dword_ptr_[r@@ cx+0x30], add_rsi@@ _0x38, shl_rax_4, call_qword_ptr_[r@@ dx+r@@ ax+0x10], jmp_0xffffffffffffff42, call_0xffffffffffff0@@ 42@@ 3
endbr64, push_rbp, push_rbx, mov_ebx_edi, sub_rsp_8, mov_rax_qword_ptr_[rip+0x2@@ 8e@@ 3d], mov_rbp_qword_ptr_[r@@ ax+0x28], mov_rax_qword_ptr_[rip+0x2@@ 8e@@ 32], mov_rdx_qword_ptr_[rbp], mov_qword_ptr_[rax+0x28]_rdx, mov_rax_qword_ptr_[rbp+0x10], test_rax_rax, je_7, test_dword_ptr_[r@@ bp+@@ 8]_edi, jne_0x4e, mov_rax_qword_ptr_[rbp+0x20], test_rax_rax, je_7, test_dword_ptr_[r@@ bp+0x@@ 1@@ 8]_ebx, jne_0x20, lea_rax_[rip+0x27@@ d@@ 27], cmp_rbp_rax, je_0x29, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffff@@ 00@@ f9, mov_edi_dword_ptr_[r@@ bp+0x30], lea_rsi_[rbp+0x@@ 38], call_rax, lea_rax_[rip+0x27@@ d0@@ 0], cmp_rbp_rax, jne_0xffffffffffffffdb, add_rsp_8, pop_rbx, pop_rbp, ret, mov_edi_dword_ptr_[r@@ bp+0x30], lea_rsi_[rbp+0x@@ 38], call_rax, jmp_0xffffffffffffffa@@ b
endbr64, push_rbp, mov_rbp_qword_ptr_[rip+0x2@@ 8d@@ b4], mov_esi_edi, mov_rax_qword_ptr_[rbp], and_edi_1, mov_qword_ptr_[rip+0x2@@ 8d@@ a4@@ ]_rax, je_0x12, mov_qword_ptr_[rbp+0x@@ 18]_0, mov_qword_ptr_[rbp+0x@@ 20]_0, mov_rdi_rbp, call_0xfffffffffffffc@@ ff, mov_rdi_qword_ptr_[rbp+0x30], lea_rax_[rip+0x27@@ d7@@ f], cmp_rdi_rax, je_7, call_0xffffffffffff00@@ 7a, mov_rdi_rbp, pop_rbp, jmp_0xffffffffffff@@ 00@@ 7@@ 1
endbr64, push_rax, pop_rax, mov_edi_2, sub_rsp_8, call_0xffffffffffffff@@ 91, mov_edi_2, call_0xffffffffffff0@@ 92@@ 7
endbr64, push_r15, push_r14, push_r13, mov_r13_rdx, push_r12, mov_r12d_esi, push_rbp, mov_rbp_rdi, mov_rdi_rcx, push_rbx, sub_rsp_0xf8, mov_qword_ptr_[rsp+0x6@@ 0]_r8, mov_qword_ptr_[rsp+0x6@@ 8]_r9, test_al_al, je_0x3f, movaps_xmmword_ptr_[rsp+0x70]_xmm0, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0x@@ e0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, lea_rax_[rsp+0x1@@ 30], mov_qword_ptr_[rsp+0x28]_rax, lea_rsi_[rsp+0x20], lea_rax_[rsp+0x40], mov_dword_ptr_[rsp+0x20]@@ _0x20, mov_dword_ptr_[rsp+0x24]@@ _0x30, mov_qword_ptr_[rsp+0x30]_rax, call_0xfffffffffffffb@@ 28, mov_rax_qword_ptr_[rip+0x2@@ 8c@@ 8c], lea_rdi_[rip+0x15@@ 66@@ f], mov_r8_qword_ptr_[r@@ ax+0x30], mov_qword_ptr_[rsp+0x18]_r8, call_0xa@@ 46@@ c, mov_edx_5, lea_rsi_[rip+0x15@@ 6a@@ 8], lea_rdi_[rip+0x11@@ 98@@ 2], mov_r15_rax, call_0xffffffffffff0@@ 1f@@ 1, lea_rdi_[rip+0x15@@ 64@@ 4], mov_qword_ptr_[rsp+0x10]_rax, call_0xa@@ 440, lea_rdi_[rip+0x15@@ 6@@ 2e], mov_qword_ptr_[rsp+8]_rax, call_0xa@@ 42@@ f, mov_r14_rax, call_0x6@@ 13@@ 7, lea_rdi_[rip+0x15@@ 6@@ 22], mov_rbx_rax, call_0xa@@ 4@@ 18, sub_rsp_8, mov_r8_qword_ptr_[rsp+0x20], mov_rdi_qword_ptr_[rip+0x2@@ 5@@ 99@@ 3], push_r8, mov_rcx_rax, mov_r9_rbp, push_r15, mov_r8_rbx, xor_eax_eax, mov_rsi_qword_ptr_[rsp+0x28], push_rsi, mov_esi_1, mov_rdx_qword_ptr_[rsp+0x28], push_rdx, lea_rdx_[rip+0x15@@ 6@@ 38], push_r14, push_r13, push_r12, call_0xffffffffffff0@@ 7e@@ 6, add_rsp_0x40, call_0xfffffffffffeff@@ a@@ d
mov_eax_dword_ptr_[rip+0x2@@ 7a@@ ca], push_rbp, test_eax_eax, mov_rax_qword_ptr_[rip+0x2@@ 8b@@ c0], jne_0x75, test_rax_rax, mov_rax_qword_ptr_[rip+0x28@@ bb@@ 4], je_0xa8, cmp_dword_ptr_[rax+@@ 8]_0, mov_rax_qword_ptr_[rip+0x2@@ 8b@@ a3], jne_0x26, call_qword_ptr_[rax+0x10], lea_rcx_[rip+0x15@@ 69@@ 7], lea_rdx_[rip+0x15@@ 7@@ 60], mov_esi_0x1@@ b7, lea_rdi_[rip+0x15@@ 5e@@ d], xor_eax_eax, call_0xfffffffffffffe@@ 42, cmp_dword_ptr_[rax+@@ 8]_1, mov_rax_qword_ptr_[rip+0x2@@ 8b@@ 72], je_0x58, mov_r8d_dword_ptr_[r@@ ax+8], lea_rcx_[rip+0x15@@ 6@@ 8d], lea_rdx_[rip+0x15@@ 7@@ 2e], mov_esi_0x1@@ bb, lea_rdi_[rip+0x15@@ 5@@ bb], xor_eax_eax, call_0xfffffffffffffe@@ 10, mov_rbp_qword_ptr_[r@@ ax+0x30], mov_edx_5, lea_rsi_[rip+0x15@@ 5f@@ 3], lea_rdi_[rip+0x11@@ 85@@ 2], call_0xffffffffffff00@@ c4, mov_rdi_rax, mov_rsi_rbp, call_0xfffffffffffff8d@@ 9, mov_edi_2, call_0xffffffffffff0@@ 6@@ ff, mov_rdi_qword_ptr_[rax+0x10], mov_esi_1, call_0xffffffffffff0@@ 5d@@ 1, mov_rbp_qword_ptr_[r@@ ax+0x30], mov_edx_5, lea_rsi_[rip+0x15@@ 5d@@ c], jmp_0xffffffffffffffc@@ 1
endbr64, push_rax, pop_rax, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x28]_rsi, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rsi_rsp, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]_8, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffff8e@@ 6, call_0xfffffffffffffe@@ 8@@ 1
endbr64, push_rax, pop_rax, sub_rsp_8, call_0xfffffffffffff8c@@ 6, call_0xfffffffffffffe@@ 6@@ 1
endbr64, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_0xe8, mov_qword_ptr_[rsp+0x38]_rsi, mov_qword_ptr_[rsp+0x40]_rdx, mov_qword_ptr_[rsp+0x48]_rcx, mov_qword_ptr_[rsp+0x50]_r8, mov_qword_ptr_[rsp+0x58]_r9, test_al_al, je_0x3c, movaps_xmmword_ptr_[rsp+0x60]_xmm0, movaps_xmmword_ptr_[rsp+0x70@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0xfffffffffffefd@@ 88, mov_r12d_dword_ptr_[rax], lea_rax_[rsp+0x100], mov_qword_ptr_[rsp+0x18]_rax, lea_rsi_[rsp+0x10], lea_rax_[rsp+0x30], mov_rdi_rbp, mov_dword_ptr_[rsp+0x10@@ ]_8, mov_dword_ptr_[rsp+0x14]@@ _0x30, mov_qword_ptr_[rsp+0x20]_rax, call_0xfffffffffffff80@@ 1, test_eax_eax, jg@@ _7, call_0xfffffffffffffd@@ 98, mov_edi_r12d, mov_qword_ptr_[rsp+8]_0, call_0xffffffffffff0@@ 5a@@ 7, mov_r8_rax, mov_rax_qword_ptr_[rip+0x2@@ 89@@ 48], lea_rdi_[rsp+8], mov_rcx_qword_ptr_[r@@ ax+0x30], lea_rdx_[rip+0x14@@ d@@ b8], xor_eax_eax, mov_esi_1, call_0xffffffffffff0@@ 13@@ 1, test_eax_eax, jle_0xffffffffffffff@@ c2, mov_rbp_qword_ptr_[rip+0x2@@ 8@@ 92@@ 1], lea_rax_[rip+0x27@@ 9@@ 1a], mov_rdi_qword_ptr_[rbp+0x30], mov_r12_qword_ptr_[rsp+8], cmp_rdi_rax, je_7, call_0xfffffffffffefc@@ 0c, mov_qword_ptr_[rbp+0x@@ 30]@@ _r12, jmp_0xffffffffffffff9@@ b
sub_rsp_8, mov_edi_0x38, call_0xffffffffffff0@@ 24@@ 7, test_rax_rax, je_0x28, mov_rdx_qword_ptr_[rip+0x2@@ 88@@ e6], mov_qword_ptr_[rax+0x28]_0, mov_qword_ptr_[rax]_rdx, mov_qword_ptr_[rax+0x@@ 30]_0, mov_qword_ptr_[rip+0x2@@ 88@@ cc@@ ]_rax, add_rsp_8, ret, lea_rdi_[rip+0x@@ 115@@ de], mov_edx_5, lea_rsi_[rip+0x15@@ 3f@@ c], call_0xfffffffffffefe@@ 44, mov_rdi_rax, xor_eax_eax, call_0xfffffffffffffe@@ 8@@ a
endbr64, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, call_0xffffffffffffff@@ 8f, mov_qword_ptr_[rax+0x1@@ 8]_r12, mov_qword_ptr_[rax+0x20]@@ _rbp, mov_dword_ptr_[rax+8]_0, mov_qword_ptr_[rax+0x1@@ 0]_rbx, mov_dword_ptr_[rip+0x2@@ 77@@ 6d]_0, pop_rbx, pop_rbp, pop_r12, ret
endbr64, sub_rsp_8, call_0xffffffffffffff@@ 58, lea_rdx_[rip-0x@@ ab@@ 4], lea_rcx_[rip-0x@@ 5@@ 1b], mov_qword_ptr_[rax+0x18]_rdx, mov_qword_ptr_[rax+0x20]_0, mov_dword_ptr_[rax+8]_0, mov_qword_ptr_[rax+0x1@@ 0]_rcx, mov_dword_ptr_[rip+0x2@@ 77@@ 24]_0, add_rsp_8, ret
endbr64, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, call_0xfffffffffffffe@@ ff, mov_qword_ptr_[rax+0x1@@ 8]_r12, mov_qword_ptr_[rax+0x20]@@ _rbp, mov_dword_ptr_[rax+@@ 8]_1, mov_qword_ptr_[rax+0x1@@ 0]_rbx, mov_dword_ptr_[rip+0x2@@ 76@@ dd@@ ]_0, pop_rbx, pop_rbp, pop_r12, ret
endbr64, push_rbp, mov_ebp_edi, mov_edi_0x4@@ 8, push_rbx, mov_ebx_esi, sub_rsp_8, call_0xffffffffffff0@@ 10@@ d, test_rax_rax, je_0x55, mov_rdx_qword_ptr_[rip+0x2@@ 87@@ ac], mov_qword_ptr_[rax+0x10]_0, mov_rdx_qword_ptr_[rdx+0x@@ 28], mov_dword_ptr_[rax+8]_0, mov_qword_ptr_[rax]_rdx, mov_rdx_qword_ptr_[rip+0x2@@ 87@@ 8f], mov_qword_ptr_[rax+0x20]_0, mov_dword_ptr_[rax+0x1@@ 8]_0, mov_dword_ptr_[rax+0x@@ 28]@@ _ebp, mov_dword_ptr_[rax+0x2@@ c]_ebx, mov_dword_ptr_[rax+0x@@ 30]_0, mov_qword_ptr_[rax+0x@@ 38]_0, mov_qword_ptr_[rdx+0x@@ 28]_rax, add_rsp_8, pop_rbx, pop_rbp, ret, mov_eax_dword_ptr_[rip+0x27@@ 65@@ a], lea_rdi_[rip+0x@@ 114@@ 71], inc_eax, mov_edx_5, lea_rsi_[rip+0x15@@ 2b@@ 5], mov_dword_ptr_[rip+0x2@@ 76@@ 3f@@ ]_eax, call_0xfffffffffffefc@@ cf, mov_rdi_rax, xor_eax_eax, call_0xfffffffffffffd@@ 1@@ 5
push_r15, mov_r15d_r8d, push_r14, mov_r14_r9, push_r13, mov_r13_rdi, push_r12, mov_r12d_esi, push_rbp, mov_rbp_rdx, push_rbx, mov_ebx_ecx, sub_rsp_0x38, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_eax_dword_ptr_[rip+0x27@@ 5f@@ b], inc_eax, mov_dword_ptr_[rip+0x2@@ 7@@ 5f@@ 3]_eax, lea_eax_[r@@ 8+1], lea_rdi_[rax@@ *8+0x@@ 40], call_0xffffffffffff00@@ 37, test_rax_rax, je_0xf5, mov_dword_ptr_[rsp+0xc]_0, lea_r10_[rip+0x@@ 27@@ 5@@ ea], mov_dword_ptr_[rax+0x1@@ 8]_ebx, mov_ebx_0xffffffff, mov_qword_ptr_[rax+0x1@@ 0]_r13, mov_dword_ptr_[rax+@@ 8]_r12d, mov_qword_ptr_[rax+0x20]@@ _rbp, mov_qword_ptr_[rax+0x@@ 2@@ 8]_rbx, mov_dword_ptr_[rax+0x@@ 30]@@ _r15d, lea_r9_[r@@ ax+0x38], lea_r11d_[r@@ 15-1], movdqu_xmm0_xmmword_ptr_[r@@ 14], mov_r8_qword_ptr_[r@@ 14+0x10], movups_xmmword_ptr_[r@@ sp+0x10]_xmm0, mov_qword_ptr_[rsp+0x20]_r8, test_r15d_r15d, je_0x54, lea_rdi_[rax+r@@ 11@@ *8+0x@@ 40], mov_rdx_r9, jmp_0x1e, mov_esi_ecx, add_ecx@@ _8, mov_dword_ptr_[rsp+0x10]_ecx, add_rsi@@ _r8, mov_rcx_qword_ptr_[rsi], mov_qword_ptr_[rdx@@ -@@ 8]_rcx, cmp_rdx@@ _rdi, je_0x29, mov_ecx_dword_ptr_[rsp+0x10], add_rdx_8, cmp_ecx@@ _0x2f, jbe_0xffffffffffffff@@ dd, mov_rsi_qword_ptr_[rsp+0x18], lea_rcx_[r@@ si+8], mov_qword_ptr_[rsp+0x18]_rcx, mov_rcx_qword_ptr_[rsi], mov_qword_ptr_[rdx@@ -@@ 8]_rcx, cmp_rdx@@ _rdi, jne_0xffffffffffffffdb, lea_r9_[r@@ 9+r@@ 11@@ *8+8], mov_qword_ptr_[r@@ 9]_0, mov_rdx_qword_ptr_[rip+0x2@@ 86@@ 2e], mov_rdx_qword_ptr_[rdx+0x@@ 28], mov_qword_ptr_[rax]_rdx, mov_rdx_qword_ptr_[rip+0x2@@ 86@@ 20], mov_qword_ptr_[rdx+0x@@ 28]_rax, cmp_rax@@ _r10, je_0x60, mov_eax_dword_ptr_[rip+0x2@@ 75@@ 11], dec_eax, mov_dword_ptr_[rip+0x2@@ 7@@ 50@@ 9]_eax, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x3d, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_edx_5, lea_rsi_[rip+0x15@@ 17@@ 6], cmp_r15d@@ _0x14, ja@@ _0x38, call_0xfffffffffffef@@ 9b8, mov_eax_dword_ptr_[rax], lea_r10_[rip+0x@@ 27@@ 4@@ ea], mov_dword_ptr_[rsp+0xc]_eax, mov_rax_r10, jmp_0xfffffffffffffef9, call_0xfffffffffffefb@@ 7e, call_0xfffffffffffef@@ 999, mov_ebx_dword_ptr_[rsp+0x@@ c], mov_edx_5, mov_dword_ptr_[rax]@@ _ebx, lea_rsi_[rip+0x15@@ 1@@ 12], lea_rdi_[rip+0x@@ 112@@ b9], call_0xfffffffffffefb@@ 2b, mov_rdi_rax, xor_eax_eax, call_0xfffffffffffffb@@ 7@@ 1
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_r8d_edx, lea_rax_[rsp+0x20], xor_ecx_ecx, xor_edx_edx, mov_r9@@ _rsp, mov_qword_ptr_[rsp+0x10]_rax, mov_dword_ptr_[rsp]@@ _0x18, mov_dword_ptr_[rsp+4]_0x30, call_0xfffffffffffffd@@ bb, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xfffffffffffefa@@ 8@@ e
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_r9@@ _rsp, lea_rax_[rsp+0x20], mov_qword_ptr_[rsp+0x10]_rax, mov_dword_ptr_[rsp]@@ _0x28, mov_dword_ptr_[rsp+4]_0x30, call_0xfffffffffffffd@@ 0c, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xfffffffffffef@@ 9d@@ f
endbr64, push_r12, mov_r12_rsi, mov_rsi_rdi, push_rbp, mov_rbp_rdi, mov_edi_1, sub_rsp_0xa8, mov_rdx_rsp, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, call_0xfffffffffffefc@@ ce, cmp_eax_-1, jne_0x2e, call_0xfffffffffffef7@@ b4, cmp_dword_ptr_[rax]_2, jne_0x7a, mov_rax_qword_ptr_[rsp+0x98], xor_rax_qword_ptr_fs:[0x28], jne_0x62, add_rsp_0xa8, pop_rbp, pop_r12, ret, mov_edx_dword_ptr_[rsp+0x20], mov_esi_dword_ptr_[rsp+0x1c], mov_rdi_r12, call_0xfffffffffffefd@@ bd, cmp_eax_-1, je_0x68, mov_esi_dword_ptr_[rsp+0x18], mov_rdi_r12, and_esi@@ _0xffff@@ 0@@ fff, call_0xfffffffffffefe@@ 36, cmp_eax_-1, jne_0xffffffffffffffb4, mov_edx_5, lea_rsi_[rip+0x14@@ fb@@ 8], lea_rdi_[rip+0x@@ 110@@ 87], call_0xfffffffffffef@@ 8f@@ 9, mov_rdi_rax, mov_rsi_r12, xor_eax_eax, call_0xfffffffffffff93@@ c, call_0xfffffffffffef@@ 9@@ 17, lea_rsi_[rip+0x14@@ f@@ 33], lea_rdi_[rip+0x@@ 110@@ 62], mov_edx_5, call_0xfffffffffffef@@ 8c@@ f, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xfffffffffffff9@@ 12, mov_edx_5, lea_rsi_[rip+0x14@@ f@@ 31], jmp_0xffffffffffffffb@@ 1
endbr64, push_r14, push_r13, mov_r13_rdx, push_r12, mov_r12_rdi, push_rbp, push_rbx, mov_rbx_rsi, mov_rdi_rbx, sub_rsp_0xa0, xor_esi_esi, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, call_0x8@@ 6c@@ c, xor_esi_esi, xor_eax_eax, mov_rdi_r12, call_0xfffffffffffefe@@ 10, test_eax_eax, js_0x@@ d9, mov_rdx_rsp, mov_esi_eax, mov_edi_1, mov_ebp_eax, call_0xfffffffffffefc@@ 47, mov_edx_5, lea_rsi_[rip+0x14@@ f@@ 99], test_eax_eax, js@@ _0xf0, mov_eax_dword_ptr_[rsp+0x18], and_eax_0xf000, cmp_eax_0x8000, jne_0x40, mov_rsi_qword_ptr_[rsp+0x30], xor_r14d_r14d, test_rsi_rsi, je_0x5e, mov_rdi_rbx, call_0x86@@ 6e, mov_rsi_qword_ptr_[rbx+0x10], mov_rdx_qword_ptr_[rsp+0x30], mov_edi_ebp, call_0x9f@@ 6e, test_rax_rax, js_0xa@@ 6, mov_rax_qword_ptr_[rsp+0x30], mov_qword_ptr_[rbx]_rax, jmp_0x33, mov_edx_5, lea_rsi_[rip+0x14@@ f4@@ 6], lea_rdi_[rip+0x10@@ f5@@ b], call_0xfffffffffffef7@@ cd, mov_rsi_rax, mov_rdx_r12, mov_rdi_r13, xor_eax_eax, call_0x9b@@ 9d, mov_r14d_eax, mov_edi_ebp, call_0xfffffffffffef@@ 94@@ 3, mov_rax_qword_ptr_[rsp+0x98], xor_rax_qword_ptr_fs:[0x28], jne_0x7d, add_rsp@@ _0xa0, pop_rbx, pop_rbp, pop_r12, pop_r13, mov_eax_r14d, pop_r14, ret, mov_edx_5, lea_rsi_[rip+0x14@@ ec@@ 8], lea_rdi_[rip+0x10@@ ef@@ b], call_0xfffffffffffef7@@ 6d, mov_rsi_rax, mov_rdx_r12, mov_rdi_r13, xor_eax_eax, call_0x9c@@ 3d, mov_r14d_eax, jmp_0xffffffffffffffa7, mov_edx_5, lea_rsi_[rip+0x14@@ ec@@ f], lea_rdi_[rip+0x10@@ ec@@ b], call_0xfffffffffffef7@@ 3d, mov_rsi_rax, mov_rdx_r12, mov_rdi_r13, xor_eax_eax, call_0x9c@@ 0d, mov_r14d_eax, jmp_0xffffffffffffff70, call_0xfffffffffffef7@@ 5@@ 0
endbr64, push_rbp, mov_rbp_rdx, sub_rsp_0x30, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, test_edi_edi, js_0x4@@ d, xor_eax_eax, mov_rdx_rsp, mov_esi_6, mov_dword_ptr_[rsp@@ ]_2, mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0x18]_0, call_0xfffffffffffef@@ 6@@ 15, cmp_eax_-1, je_0x44, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x2f, add_rsp_0x30, pop_rbp, ret, push_rdx, mov_r9_rsi, mov_r8_rbp, push_rdi, lea_rcx_[rip+0x14@@ e@@ 30], lea_rdx_[rip+0x14@@ ec@@ 7], mov_esi_0x7@@ e, lea_rdi_[rip+0x14@@ e@@ 32], call_0xfffffffffffff3b@@ 3, call_0xfffffffffffef@@ 6a@@ e, lea_rsi_[rip+0x14@@ e@@ 3a], lea_rdi_[rip+0x10@@ df@@ 9], mov_edx_5, call_0xfffffffffffef@@ 66@@ 6, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xfffffffffffff6a@@ 9
endbr64, mov_rax_qword_ptr_[rsi], mov_r8_qword_ptr_[r@@ si+8], mov_rdx_qword_ptr_[r@@ si+0x10], mov_edi_dword_ptr_[rax], mov_rsi_r8, jmp_0xffffffffffffff2@@ c
endbr64, push_rbp, mov_rbp_rsi, mov_esi_5, sub_rsp_0x30, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_rdx_rsp, mov_dword_ptr_[rsp@@ ]_1, mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0x18]_0, call_0xfffffffffffef@@ 5@@ 3b, cmp_eax_-1, je_0x33, xor_eax_eax, cmp_word_ptr_[r@@ sp@@ ]_1, je_0x1a, mov_rcx_qword_ptr_[rsp+0x28], xor_rcx_qword_ptr_fs:[0x28], jne_0x3f, add_rsp_0x30, pop_rbp, ret, mov_ebp_dword_ptr_[r@@ sp+0x18], call_0xfffffffffffef@@ 54@@ c, cmp_ebp_eax, setne_al, jmp_0xffffffffffffffda, lea_rsi_[rip+0x14@@ c9@@ 1], lea_rdi_[rip+0x10@@ d@@ 30], mov_edx_5, call_0xfffffffffffef@@ 5@@ 9d, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xfffffffffffff5@@ 10, call_0xfffffffffffef@@ 5b@@ b
endbr64, push_r13, mov_r13_rcx, push_r12, mov_r12_rdi, push_rbp, mov_ebp_esi, mov_rsi_rdx, push_rbx, mov_rbx_rdx, sub_rsp_0x38, mov_edi_dword_ptr_[r@@ di], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, call_0xa0@@ 2, xor_esi_esi, cmp_ebp_1, sete_sil, mov_edi_dword_ptr_[r@@ 12], add_esi@@ _6, xor_eax_eax, mov_rdx_rsp, mov_dword_ptr_[rsp@@ ]_1, mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0x18]_0, call_0xfffffffffffef@@ 46@@ 7, cmp_eax_-1, jne_0x5f, call_0xfffffffffffef@@ 35@@ d, mov_eax_dword_ptr_[rax], mov_edx_5, sub_eax@@ _0xb, and_eax_0xfffffffd, jne_0x2b, lea_rsi_[rip+0x14@@ c0@@ 2], lea_rdi_[rip+0x10@@ c7@@ 9], call_0xfffffffffffef@@ 4e@@ b, mov_rdi_rax, mov_rsi_r13, xor_eax_eax, call_0xfffffffffffff45@@ e, lea_rsi_[rip+0x14@@ ca@@ 5], lea_rdi_[rip+0x10@@ c@@ 50], call_0xfffffffffffef@@ 4c@@ 2, mov_rdi_rax, mov_rsi_r13, xor_eax_eax, call_0xfffffffffffff50@@ 5, xor_eax_eax, mov_r9_r13, mov_r8_rbx, mov_rcx_r12, mov_edx_3, mov_esi_0xffffffff, lea_rdi_[rip-0x@@ 1b@@ c], call_0xfffffffffffff98@@ 4, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0xd, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, call_0xfffffffffffef@@ 4a@@ 4
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, test_rdi_rdi, je_0xd5, xor_esi_esi, xor_eax_eax, mov_r12_rdi, call_0xfffffffffffef@@ 9e@@ 2, mov_ebp_eax, mov_edx_5, test_eax_eax, js_0x@@ b1, lea_rsi_[rip+0x14@@ c@@ 2a], lea_rdi_[rip+0x10@@ b@@ 9e], call_0xfffffffffffef@@ 4@@ 10, mov_rdi_rax, call_0x1@@ 9b8, mov_r13_rax, mov_rax_rsp, push_rax, xor_edx_edx, mov_r9d_2, push@@ _-1, mov_r8d_1, mov_ecx_4, xor_esi_esi, mov_edi_ebp, call_0x@@ 93@@ 93, mov_rdi_r13, mov_rbx_rax, call_0x1@@ ba@@ 8, mov_edi_ebp, call_0xfffffffffffef@@ 56@@ 1, pop_rax, pop_rdx, test_ebx_ebx, js@@ _0x20, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x6d, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_ebx_dword_ptr_[r@@ sp+4], cmp_ebx@@ _0x20, je_0xffffffffffffffdb, call_0xfffffffffffef@@ 1e@@ f, mov_dword_ptr_[rax]@@ _ebx, mov_edx_5, lea_rsi_[rip+0x14@@ ab@@ c], lea_rdi_[rip+0x10@@ b@@ 13], call_0xfffffffffffef@@ 38@@ 5, mov_rdi_rax, mov_rsi_r12, xor_eax_eax, call_0xfffffffffffff3c@@ 8, lea_rsi_[rip+0x14@@ b6@@ b], jmp_0xffffffffffffffe0, lea_rcx_[rip+0x14@@ b@@ 51], lea_rdx_[rip+0x14@@ b@@ 84], mov_esi_0x@@ d1, lea_rdi_[rip+0x14@@ a@@ ff], call_0xfffffffffffff0@@ 80, call_0xfffffffffffef@@ 37@@ b
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ fa@@ 5], endbr64, push_rbp, mov_rbp_rdi, lea_rdi_[rip+0x14@@ b7@@ 5], call_0xfffffffffffef0@@ e1, test_rax_rax, je_0x21, mov_rdi_rbp, lea_rsi_[rip+0x14@@ b@@ 7c], call_0xfffffffffffef@@ 2e@@ d, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffff@@ ef@@ 2b@@ 4, lea_rsi_[rip+0x1@@ 14@@ 5b], mov_edi_6, call_0xfffffffffffef7@@ cc, jmp_0xffffffffffffffd@@ 0
endbr64, push_r13, push_r12, mov_r12_rdi, push_rbp, sub_rsp_0xf0, mov_qword_ptr_[rsp+0x4@@ 8]_rsi, mov_qword_ptr_[rsp+0x50]_rdx, mov_qword_ptr_[rsp+0x5@@ 8]_rcx, mov_qword_ptr_[rsp+0x6@@ 0]_r8, mov_qword_ptr_[rsp+0x6@@ 8]_r9, test_al_al, je_0x3f, movaps_xmmword_ptr_[rsp+0x70]_xmm0, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0x@@ e0@@ ]_xmm7, mov_rdi_qword_ptr_[rip+0x2@@ 7c@@ fc], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, test_rdi_rdi, je_0xae, cmp_qword_ptr_[rip+0x2@@ 7d@@ 23@@ ]_0, je_0xcb, lea_rax_[rsp+0x1@@ 10], mov_qword_ptr_[rsp+0x10]_rax, lea_rdi_[rip+0x27@@ cf@@ 1], lea_rax_[rsp+0x40], mov_qword_ptr_[rsp+0x18]_rax, mov_dword_ptr_[rsp+@@ 8]_8, mov_dword_ptr_[rsp+0xc]@@ _0x30, call_0x80@@ c7, mov_rsi_r12, lea_rdx_[rsp+8], mov_r12_rsp, lea_rdi_[rip+0x27@@ cc0], call_0x8@@ 1a0, mov_rdi_r12, call_0xfffffffffffef@@ 548, mov_rdi_r12, call_0xfffffffffffef0@@ 20, lea_r12_[rsp+0x20], mov_rcx_rax, lea_rdx_[rip+0x14@@ a7@@ 9], mov_esi_0x14, mov_rdi_r12, call_0xfffffffffffef7@@ 24, mov_r8_qword_ptr_[rip+0x2@@ 7c@@ 98], mov_rdi_qword_ptr_[rip+0x2@@ 7c@@ 99], mov_rcx_r12, lea_rdx_[rip+0x14@@ 69@@ 9], mov_esi_1, xor_eax_eax, call_0xfffffffffffef@@ 8@@ 30, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ b3, add_rsp@@ _0xf0, pop_rbp, pop_r12, pop_r13, ret, lea_rsi_[rip+0xe@@ 20@@ a], call_0xfffffffffffef7@@ 59, mov_qword_ptr_[rip+0x2@@ 7c@@ 45@@ ]_rax, mov_rbp_rax, test_rax_rax, je_0x2f, mov_rdi_rax, call_0xfffffffffffef@@ 28@@ 2, mov_r13_qword_ptr_[rip+0x2@@ 7b@@ e6], mov_rdi_rbp, call_0xfffffffffffef@@ 4b@@ 3, mov_edi_eax, mov_rsi_r13, call_0x60@@ 9, jmp_0xfffffffffffffeff, call_0xfffffffffffe@@ ef@@ 98, mov_edi_dword_ptr_[rax], call_0xfffffffffffef@@ 80@@ 1, mov_rbp_qword_ptr_[rip+0x2@@ 7@@ bb@@ 5], mov_edx_5, lea_rsi_[rip+0x14@@ 99@@ a], lea_rdi_[rip+0x10@@ 8@@ b0], mov_r12_rax, call_0xfffffffffffef@@ 11@@ f, mov_rdi_rax, mov_rdx_r12, mov_rsi_rbp, xor_eax_eax, call_0x5@@ 35@@ f, mov_qword_ptr_[rip+0x2@@ 7b@@ 7f@@ ]_0, jmp_0xffffffffffffff44, call_0xfffffffffffef@@ 12@@ a
endbr64, push_rbx, mov_edx_5, mov_ebx_edi, lea_rsi_[rip+0x14@@ 97@@ d], lea_rdi_[rip+0x10@@ 86@@ 4], call_0xfffffffffffef0@@ d6, mov_rsi_rax, mov_edi_ebx, call_0x57@@ c, mov_edi_0x10, call_0x5f@@ 2, mov_rdx_qword_ptr_[rip+0x2@@ 7b@@ 86], mov_dword_ptr_[rax+@@ 8]_ebx, mov_qword_ptr_[rax]_rdx, mov_qword_ptr_[rip+0x2@@ 7b@@ 79@@ ]_rax, pop_rbx, ret
endbr64, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x28]_rsi, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, cmp_qword_ptr_[rip+0x2@@ 7a@@ f@@ 4]_0, je_0xa4, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+8]_rax, lea_rdi_[rip+0x27@@ a@@ 9a], lea_rax_[rsp+0x20], mov_qword_ptr_[rsp+0x10]_rax, mov_dword_ptr_[rsp]_8, mov_dword_ptr_[rsp+4]_0x30, call_0x7e@@ 91, mov_rdx_rsp, mov_rsi_rbp, lea_rdi_[rip+0x27@@ a6@@ f], call_0x7f@@ 6f, mov_edx_0x20, mov_esi_0xa, lea_rdi_[rip+0x27@@ a@@ 59], call_0x7d@@ 99, mov_esi_0xa, lea_rdi_[rip+0x27@@ a@@ 48], call_0x7@@ ec8, mov_rbx_qword_ptr_[rip+0x2@@ 7a@@ 7c], test_rbx_rbx, je_0x29, lea_rbp_[rip+0x@@ 27@@ a@@ 30], mov_edi_dword_ptr_[r@@ bx+8], mov_rdx_qword_ptr_[rbp], mov_rsi_qword_ptr_[rip+0x2@@ 7a@@ 32], call_0x97@@ 92, test_rax_rax, js_0x2@@ 4, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, jne_0xffffffffffffffe2, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x33, add_rsp_0xd8, pop_rbx, pop_rbp, ret, mov_ebp_dword_ptr_[r@@ bx+8], lea_rsi_[rip+0x14@@ 8@@ 2c], lea_rdi_[rip+0x10@@ 6e@@ 3], mov_edx_5, call_0xfffffffffffe@@ ef@@ 50, mov_rdi_rax, mov_esi_ebp, xor_eax_eax, call_0xffffffffffffef@@ 94, call_0xfffffffffffe@@ ef@@ 6@@ f
push_rax, pop_rax, lea_rdi_[rip+0x10@@ 6b@@ 5], mov_edx_5, lea_rsi_[rip+0x14@@ 80@@ b], sub_rsp_8, mov_eax_dword_ptr_[rip+0x26@@ 88@@ 1], inc_eax, mov_dword_ptr_[rip+0x2@@ 6@@ 87@@ 9]_eax, call_0xfffffffffffee@@ f0@@ 9, mov_rdi_rax, xor_eax_eax, call_0xffffffffffffef@@ 4@@ f
endbr64, sub_rsp_8, call_0xfffffffffffef@@ 2a8, test_rax_rax, je_7, add_rsp_8, ret, call_0xffffffffffffff@@ a@@ 9
endbr64, sub_rsp_8, call_0xfffffffffffef@@ 148, test_rax_rax, je_7, add_rsp_8, ret, call_0xffffffffffffff@@ 8@@ 9
endbr64, sub_rsp_8, call_0xfffffffffffef@@ 348, test_rax_rax, je_7, add_rsp_8, ret, call_0xffffffffffffff@@ 6@@ 9
endbr64, sub_rsp_8, call_0xfffffffffffef@@ 5@@ 28, test_rax_rax, je_7, add_rsp_8, ret, call_0xffffffffffffff@@ 4@@ 9
endbr64, sub_rsp_8, call_0xfffffffffffef0@@ 98, test_rax_rax, je_7, add_rsp_8, ret, call_0xffffffffffffff@@ 2@@ 9
endbr64, sub_rsp_8, mov_rcx_rdx, mov_rdx_rsi, mov_esi_1, call_0xfffffffffffef@@ 22@@ d, test_eax_eax, js@@ _7, add_rsp_8, ret, mov_eax_dword_ptr_[rip+0x2@@ 67@@ 99], lea_rdi_[rip+0x10@@ 5b0], inc_eax, mov_edx_5, lea_rsi_[rip+0x14@@ 70@@ 4], mov_dword_ptr_[rip+0x2@@ 67@@ 7e@@ ]_eax, call_0xfffffffffffeee@@ 0e, mov_rdi_rax, xor_eax_eax, call_0xffffffffffffee@@ 5@@ 4
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]_0x10, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xffffffffffffff@@ 0d, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xfffffffffffeed@@ 7@@ 0
endbr64, push_rbp, mov_ebp_edi, call_0xfffffffffffeee@@ 09, test_eax_eax, js@@ _4, pop_rbp, ret, mov_eax_dword_ptr_[rip+0x2@@ 66@@ 88], lea_rsi_[rip+0x14@@ 6@@ 1b], inc_eax, lea_rdi_[rip+0x10@@ 49@@ 6], mov_edx_5, mov_dword_ptr_[rip+0x2@@ 66@@ 6d@@ ]_eax, call_0xfffffffffffeec@@ fd, mov_rdi_rax, mov_esi_ebp, xor_eax_eax, call_0xffffffffffffed@@ 4@@ 1
endbr64, push_rbp, movsxd_rbp@@ _esi, mov_esi_ebp, sub_rsp_0x20, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rip+0xd@@ 7f@@ 2], mov_qword_ptr_[rsp]_rax, lea_rax_[rip+0x10@@ 6@@ 30], mov_qword_ptr_[rsp+8]_rax, lea_rax_[rip+0x14@@ 5c@@ 6], mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffeed@@ 0f, cmp_eax_ebp, je_0x70, mov_eax_dword_ptr_[rip+0x26@@ 600], inc_eax, mov_dword_ptr_[rip+0x2@@ 6@@ 5f@@ 8]_eax, cmp_ebp_2, jg@@ _0x35, mov_rbp_qword_ptr_[r@@ sp+r@@ bp*8], lea_rsi_[rip+0x14@@ 59@@ e], lea_rdi_[rip+0x10@@ 3@@ ff], mov_edx_5, call_0xfffffffffffeec@@ 6c, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffffeca@@ f, lea_rsi_[rip+0x14@@ 55@@ 3], lea_rdi_[rip+0x10@@ 3d0], mov_edx_5, call_0xfffffffffffeec@@ 3d, mov_rdi_rax, mov_esi_ebp, xor_eax_eax, call_0xffffffffffffec@@ 81, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_8, add_rsp_0x20, pop_rbp, ret, call_0xfffffffffffeec@@ 4@@ 2
endbr64, sub_rsp_8, call_0xfffffffffffeed@@ a8, test_eax_eax, jne_7, add_rsp_8, ret, mov_eax_dword_ptr_[rip+0x26@@ 55@@ 4], lea_rdi_[rip+0x10@@ 36@@ b], inc_eax, mov_edx_5, lea_rsi_[rip+0x14@@ 50@@ d], mov_dword_ptr_[rip+0x2@@ 65@@ 39@@ ]_eax, call_0xfffffffffffeeb@@ c9, mov_rdi_rax, xor_eax_eax, call_0xffffffffffffe@@ c0@@ f
endbr64, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, sub_rsp_8, call_0xfffffffffffee@@ f7@@ f, mov_rdi_rbp, call_0xfffffffffffeea@@ 67, test_eax_eax, je_0xc, call_0xfffffffffffee@@ 9d@@ e, cmp_dword_ptr_[rax]@@ _0x20, jne_0xa, add_rsp_8, pop_rbp, pop_r12, ret, lea_rsi_[rip+0x14@@ 4c@@ 9], lea_rdi_[rip+0x10@@ 2f@@ c], mov_edx_5, call_0xfffffffffffeeb@@ 69, mov_rdi_rax, mov_rsi_r12, xor_eax_eax, call_0xffffffffffffe@@ ba@@ c
endbr64, push_r12, xor_eax_eax, mov_r12_rsi, push_rbp, mov_esi_1, mov_ebp_edi, sub_rsp_8, call_0xfffffffffffeea@@ 89, cmp_eax_-1, je_0x22, or_eax_1, mov_edx_eax, mov_esi_2, xor_eax_eax, mov_edi_ebp, call_0xfffffffffffeea@@ 71, cmp_eax_-1, je_0x2f, add_rsp_8, pop_rbp, pop_r12, ret, mov_edx_5, lea_rsi_[rip+0x14@@ 47@@ 3], lea_rdi_[rip+0x10@@ 28@@ a], call_0xfffffffffffeea@@ fc, mov_rdi_rax, mov_rsi_r12, xor_eax_eax, call_0xffffffffffffeb@@ 3f, mov_edx_5, lea_rsi_[rip+0x14@@ 47@@ e], jmp_0xffffffffffffffd@@ b
endbr64, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, cmp_byte_ptr_[rip+0x2@@ 7@@ 5a@@ c]_0, je_0x7c, mov_rcx_qword_ptr_[rip+0x2@@ 7@@ 5e@@ 3], mov_rax_qword_ptr_[rip+0x27@@ 5d@@ 4], mov_rdx_rcx, sub_rdx_rax, movsxd_rbp@@ _ebx, cmp_rdx@@ _rbp, jl@@ _0x@@ 98, mov_r8_qword_ptr_[rip+0x2@@ 7@@ 5b@@ 3], add_rax_rbp, cmp_rax@@ _r8, je_0xb4, movsxd_rsi@@ _dword_ptr_[rip+0x2@@ 7@@ 5c0], mov_rdx_rsi, not_edx, add_rax_rsi, movsxd_rdx_edx, and_rax@@ _rdx, cmp_rax_rcx, ja@@ _0x1f, mov_qword_ptr_[rip+0x27@@ 58@@ e]_rax, mov_rcx_rax, mov_qword_ptr_[rip+0x27@@ 57@@ c]@@ _rcx, add_rsp_8, pop_rbx, mov_rax_r8, pop_rbp, ret, mov_qword_ptr_[rip+0x27@@ 57@@ 1]@@ _rcx, jmp_0xffffffffffffff@@ e6, mov_r8_qword_ptr_[rip+0x2@@ 3d@@ 69], lea_rcx_[rip-0x@@ 4b@@ e], xor_edx_edx, xor_esi_esi, lea_rdi_[rip+0x27@@ 53@@ 7], call_0xfffffffffffeea@@ c7, mov_byte_ptr_[rip+0x2@@ 7@@ 50@@ b@@ ]_1, mov_qword_ptr_[rip+0x2@@ 75@@ 20]@@ _0x2000, jmp_0xffffffffffffff56, mov_esi_ebx, lea_rdi_[rip+0x27@@ 50@@ f], call_0xfffffffffffee@@ ed@@ f, mov_rax_qword_ptr_[rip+0x2@@ 75@@ 1b], mov_r8_qword_ptr_[rip+0x2@@ 7@@ 50@@ c], add_rax_rbp, mov_rcx_qword_ptr_[rip+0x2@@ 75@@ 12], cmp_rax@@ _r8, jne_0xffffffffffffff@@ 58, or_byte_ptr_[r@@ ip+0x2@@ 75@@ 32@@ ]_2, jmp_0xffffffffffffff4@@ b
endbr64, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, cmp_byte_ptr_[rip+0x2@@ 74@@ 9c]_0, je_0xac, mov_rdi_rbp, call_0xfffffffffffee@@ 9c@@ 3, mov_rdi_qword_ptr_[rip+0x2@@ 7@@ 4b@@ f], movsxd_rbx_eax, lea_rdx_[r@@ di+r@@ bx+1], cmp_qword_ptr_[rip+0x2@@ 7@@ 4b@@ 8]_rdx, jb_0x@@ c0, mov_rdx_rbx, mov_rsi_rbp, call_0xfffffffffffeec@@ ac, add_rbx@@ _qword_ptr_[rip+0x2@@ 74@@ 98], lea_rax_[rbx+1], mov_qword_ptr_[rip+0x2@@ 74@@ 8d@@ ]_rax, mov_byte_ptr_[rbx]_0, mov_r8_qword_ptr_[rip+0x2@@ 7@@ 47@@ b], mov_rdx_qword_ptr_[rip+0x2@@ 7@@ 47@@ c], cmp_rdx@@ _r8, je_0xa9, movsxd_rax_dword_ptr_[rip+0x2@@ 7@@ 48@@ 4], mov_rcx_rax, not_ecx, add_rax_rdx, movsxd_rcx_ecx, mov_rdx_qword_ptr_[rip+0x2@@ 7@@ 46@@ 2], and_rax@@ _rcx, mov_qword_ptr_[rip+0x27@@ 45@@ 0]_rax, cmp_rax_rdx, jbe_0xc, mov_qword_ptr_[rip+0x27@@ 44@@ 4]@@ _rdx, mov_rax_rdx, mov_qword_ptr_[rip+0x2@@ 74@@ 32@@ ]_rax, add_rsp_8, pop_rbx, mov_rax_r8, pop_rbp, ret, mov_r8_qword_ptr_[rip+0x2@@ 3c@@ 29], lea_rcx_[rip-0x@@ 5@@ fe], xor_edx_edx, xor_esi_esi, lea_rdi_[rip+0x27@@ 3f@@ 7], call_0xfffffffffffee@@ 98@@ 7, mov_byte_ptr_[rip+0x2@@ 7@@ 3c@@ b@@ ]_1, mov_qword_ptr_[rip+0x27@@ 3e@@ 0]@@ _0x2000, jmp_0xffffffffffffff2a, lea_rdi_[rip+0x27@@ 3d@@ 1], lea_esi_[rax+1], call_0xfffffffffffeed@@ 9e, mov_rdi_qword_ptr_[rip+0x2@@ 7@@ 3d@@ a], jmp_0xffffffffffffff30, or_byte_ptr_[r@@ ip+0x2@@ 7@@ 40@@ 1@@ ]_2, jmp_0xffffffffffffff5@@ 6
endbr64, push_r12, cmp_byte_ptr_[rip+0x2@@ 7@@ 37@@ 3]_0, mov_r12_rdi, push_rbp, mov_rbp_rsi, push_rbx, je_0x9b, mov_rdi_qword_ptr_[rip+0x2@@ 7@@ 39@@ 6], movsxd_rbx@@ _ebp, lea_rax_[r@@ di+r@@ bx+1], cmp_qword_ptr_[rip+0x2@@ 7@@ 38@@ f]_rax, jb_0x@@ b7, mov_rdx_rbx, mov_rsi_r12, call_0xfffffffffffeeb@@ 83, add_rbx@@ _qword_ptr_[rip+0x2@@ 7@@ 36@@ f], lea_rax_[rbx+1], mov_qword_ptr_[rip+0x27@@ 36@@ 4]_rax, mov_byte_ptr_[rbx]_0, mov_r8_qword_ptr_[rip+0x2@@ 7@@ 35@@ 2], mov_rdx_qword_ptr_[rip+0x2@@ 7@@ 35@@ 3], cmp_rdx@@ _r8, je_0xa0, movsxd_rax_dword_ptr_[rip+0x2@@ 7@@ 35@@ b], mov_rcx_rax, not_ecx, add_rax_rdx, movsxd_rcx_ecx, mov_rdx_qword_ptr_[rip+0x2@@ 7@@ 33@@ 9], and_rax@@ _rcx, mov_qword_ptr_[rip+0x2@@ 73@@ 27@@ ]_rax, cmp_rax_rdx, jbe_0xc, mov_qword_ptr_[rip+0x2@@ 73@@ 1b@@ ]_rdx, mov_rax_rdx, pop_rbx, pop_rbp, mov_qword_ptr_[rip+0x27@@ 30@@ 7]_rax, pop_r12, mov_rax_r8, ret, mov_r8_qword_ptr_[rip+0x2@@ 3b@@ 09], lea_rcx_[rip-0x@@ 7@@ 1e], xor_edx_edx, xor_esi_esi, lea_rdi_[rip+0x27@@ 2d@@ 7], call_0xfffffffffffee@@ 86@@ 7, mov_byte_ptr_[rip+0x2@@ 7@@ 2a@@ b@@ ]_1, mov_qword_ptr_[rip+0x27@@ 2c@@ 0]@@ _0x2000, jmp_0xffffffffffffff3b, lea_rdi_[rip+0x27@@ 2b@@ 1], lea_esi_[r@@ bp+1], call_0xfffffffffffeec@@ 7e, mov_rdi_qword_ptr_[rip+0x2@@ 7@@ 2b@@ a], jmp_0xffffffffffffff39, or_byte_ptr_[r@@ ip+0x2@@ 7@@ 2e@@ 1@@ ]_2, jmp_0xffffffffffffff5@@ f
endbr64, cmp_byte_ptr_[rip+0x2@@ 72@@ 55@@ ]_0, jne_5, ret, sub_rsp_8, xor_esi_esi, lea_rdi_[rip+0x27@@ 26@@ 3], call_0xfffffffffffeea@@ 63, mov_byte_ptr_[rip+0x2@@ 72@@ 37@@ ]_0, add_rsp_8, ret
push_r13, push_r12, mov_r12d_esi, mov_rsi_rdx, push_rbp, mov_rbp_rdi, sub_rsp_0x@@ e0, mov_qword_ptr_[rsp+0x48]_rcx, mov_qword_ptr_[rsp+0x50]_r8, mov_qword_ptr_[rsp+0x58]_r9, test_al_al, je_0x3c, movaps_xmmword_ptr_[rsp+0x60]_xmm0, movaps_xmmword_ptr_[rsp+0x70@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, lea_rax_[rsp+0x100], mov_qword_ptr_[rsp+0x18]_rax, lea_rdx_[rsp+0x10], lea_rax_[rsp+0x30], lea_rdi_[rsp+8], mov_qword_ptr_[rsp+8]_0, mov_dword_ptr_[rsp+0x10]@@ _0x18, mov_dword_ptr_[rsp+0x14]@@ _0x30, mov_qword_ptr_[rsp+0x20]_rax, call_0xfffffffffffff84@@ 4, mov_r13_qword_ptr_[rsp+8], mov_edx_5, lea_rsi_[rip+0x14@@ 0@@ 4e], lea_rdi_[rip+0x@@ fe@@ 05], call_0xfffffffffffee@@ 67@@ 7, mov_rdi_rax, mov_rcx_r13, mov_edx_r12d, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffffe@@ 5e@@ 4
endbr64, push_rbx, mov_rbx_rdi, movsx_edi_byte_ptr_[r@@ di+0x1@@ 3], cmp_dil@@ _0x2e, je_0x40, add_rbx@@ _0x13, test_dil_dil, je_0x2c, mov_esi@@ _0x38, call_0xffffffffffffad@@ 4b, test_al_al, jne_0xd, movzx_eax_byte_ptr_[rbx], cmp_al@@ _0x5f, je_6, cmp_al_0x2d, jne_0x19, movsx_edi_byte_ptr_[r@@ bx+1], inc_rbx, test_dil_dil, jne_0xffffffffffffffdd, mov_eax_1, pop_rbx, ret, xor_eax_eax, pop_rbx, ret
push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x4@@ 38, mov_qword_ptr_[rsp+0x10]_rsi, mov_qword_ptr_[rsp+0x18]_rdi, lea_rsi_[rip+0xd@@ 6b@@ 3], lea_r12_[rsp+0x20], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x4@@ 28]_rax, xor_eax_eax, call_0xfffffffffffeeb@@ 86, mov_r14_rax, mov_dword_ptr_[rsp+4]_0, lea_rbp_[r@@ sp+0x1@@ f], test_rax_rax, je_0x2@@ a4, mov_rdx_r14, mov_esi_0x400, mov_rdi_r12, call_0xfffffffffffee@@ 7c@@ 5, test_rax_rax, je_0x2@@ 3a, inc_dword_ptr_[r@@ sp+4], mov_r15_r12, mov_ecx_dword_ptr_[r15], add_r15@@ _4, lea_eax_[rcx-0x1010101], not_ecx, and_eax_ecx, and_eax_0x80808080, je_0xffffffffffffffea, mov_ecx_eax, shr_ecx_0x10, test_eax_0x8080, cmove_eax_ecx, lea_rcx_[r@@ 15+2], cmove@@ _r15@@ _rcx, mov_edx_eax, add@@ _dl@@ _al, sbb@@ _r15@@ _3, sub_r15@@ _r12, jmp_0x1f, movsx_edi_byte_ptr_[r@@ bp+r@@ 15], mov_esi_4, call_0xffffffffffffac@@ 45, dec@@ _r15, test_al_al, je_0xc, movsxd_rbx@@ _r15d, test_r15_r15, jne_0xffffffffffffffe3, xor_ebx_ebx, mov_byte_ptr_[rsp+r@@ bx+0x@@ 20]_0, movsx_edi@@ _byte_ptr_[rsp+0x@@ 20], cmp_dil@@ _0x23, je_0xffffffffffffff@@ 71, mov_rbx_r12, test_dil_dil, jne_0x14, jmp_0xffffffffffffff63, movsx_edi_byte_ptr_[r@@ bx+1], inc_rbx, mov_esi@@ _0x38, call_0xffffffffffffab@@ fc, test_al_al, jne_0xffffffffffffffed, movzx_eax_byte_ptr_[rbx], cmp_al_0x2d, je_0xffffffffffffffe6, test_al_al, je_0x1@@ 4a, movsx_edi_byte_ptr_[r@@ bx+1], mov_byte_ptr_[rbx]_0, lea_r15_[r@@ bx+1], cmp_dil@@ _0x3d, jne_0x1d, movsx_edi_byte_ptr_[r@@ bx+2], lea_r15_[r@@ bx+2], jmp_0x13, movsx_edi_byte_ptr_[r@@ 15+1], inc_r15, mov_esi_4, call_0xffffffffffffa@@ bb@@ 3, test_al_al, jne_0xffffffffffffffec, mov_rdi_r15, call_0x4c@@ 57, mov_rbx_rax, test_rax_rax, je_0x2@@ 19, mov_r15_qword_ptr_[rsp+0x10], jmp_0x27, mov_rsi_r12, mov_rdi_r13, call_0xfffffffffffee@@ 70@@ 2, test_eax_eax, je_0xab, cmp_dword_ptr_[r15+0x@@ c]_2, je_0x48, add_r15@@ _0x40, mov_r13_qword_ptr_[r@@ 15], test_r13_r13, jne_0xffffffffffffffdc, cmp_byte_ptr_[r15+@@ 8]_0, jne_0xffffffffffffffef, mov_edx_5, lea_rsi_[rip+0x14@@ 00@@ 5], lea_rdi_[rip+0xf@@ bb@@ 6], call_0xfffffffffffee@@ 4@@ 28, mov_esi_dword_ptr_[rsp+4], mov_rdi_qword_ptr_[rsp+0x18], mov_rdx_rax, mov_rcx_r12, xor_eax_eax, call_0xfffffffffffffc@@ d2, mov_rdi_r13, call_0xfffffffffffee@@ 42@@ 5, movsxd_rdx_eax, cmp_byte_ptr_[r@@ sp@@ +rdx+0x@@ 20]@@ _0x2d, jne_0xffffffffffffffaa, test_rbx_rbx, jne_0xffffffffffffffa5, mov_rsi_r13, mov_rdi_r12, mov_qword_ptr_[rsp+8]_rdx, call_0xfffffffffffee@@ 27@@ 6, test_eax_eax, mov_rdx_qword_ptr_[rsp+8], jne_0xffffffffffffff@@ 8c, mov_rax_qword_ptr_[r15+0x20], lea_rbx_[r@@ 12@@ +rdx+1], test_rax_rax, jne_0x36, mov_r15_qword_ptr_[r@@ 15+0x18], mov_rdi_rbx, call_0xfffffffffffff5@@ 33, mov_qword_ptr_[r15]_rax, jmp_0xfffffffffffffe@@ 2b, mov_eax_dword_ptr_[r15+0x@@ c], test_eax_eax, je_0x3a, test_rbx_rbx, je_0xfc, mov_rax_qword_ptr_[r15+0x20], test_rax_rax, je_0xffffffffffffffce, mov_rsi_rbx, mov_rdi_r15, call_rax, jmp_0xfffffffffffffd@@ fe, xor_ebx_ebx, jmp_0xffffffffffffff08, test_rbx_rbx, jne_0x@@ b3, mov_rax_qword_ptr_[r15+0x20], test_rax_rax, je_0xe, xor_esi_esi, mov_rdi_r15, call_rax, jmp_0xfffffffffffffd@@ c7, mov_edx_dword_ptr_[r@@ 15+0x28], mov_rax_qword_ptr_[r15+0x10], mov_dword_ptr_[rax]_edx, jmp_0xfffffffffffffd@@ b8, mov_rdi_r14, call_0xfffffffffffee@@ 210, test_eax_eax, jne_0xa1, mov_rdi_r14, call_0xfffffffffffee@@ 2e0, test_eax_eax, jne_0xb8, mov_rax_qword_ptr_[rsp+0x@@ 428], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ c0, add_rsp_0x4@@ 38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xfffffffffffee@@ 14@@ a, mov_edi_dword_ptr_[rax], cmp_edi_2, je_0xffffffffffffffcd, call_0xfffffffffffee@@ 9a@@ e, mov_edx_5, lea_rsi_[rip+0x13@@ cc@@ d], lea_rdi_[rip+0x@@ fa@@ 64], mov_r12_rax, call_0xfffffffffffee@@ 2d@@ 3, mov_rsi_qword_ptr_[rsp+0x18], mov_rdi_rax, mov_rdx_r12, xor_eax_eax, call_0x4@@ 45@@ 1, jmp_0xffffffffffffff99, mov_edx_5, lea_rsi_[rip+0x13@@ e6@@ 9], jmp_0xfffffffffffffe@@ 7f, mov_edx_5, lea_rsi_[rip+0x13@@ e4@@ 5], jmp_0xfffffffffffffe@@ 6e, mov_edx_5, lea_rsi_[rip+0x13@@ cb@@ c], lea_rdi_[rip+0x@@ fa@@ 13], call_0xfffffffffffee@@ 28@@ 5, mov_rsi_qword_ptr_[rsp+0x18], mov_rdi_rax, xor_eax_eax, call_0xffffffffffffe@@ 2c@@ 6, mov_edx_5, lea_rsi_[rip+0x13@@ cc@@ 5], jmp_0xffffffffffffffd9, mov_edx_5, lea_rsi_[rip+0x13@@ de@@ 5], jmp_0xfffffffffffffe@@ 28, call_0xfffffffffffee@@ 28@@ 2
endbr64, push_rax, pop_rax, sub_rsp_0xe8, mov_qword_ptr_[rsp+0x38]_rsi, mov_qword_ptr_[rsp+0x40]_rdx, mov_qword_ptr_[rsp+0x48]_rcx, mov_qword_ptr_[rsp+0x50]_r8, mov_qword_ptr_[rsp+0x58]_r9, mov_r10_rdi, test_al_al, je_0x3c, movaps_xmmword_ptr_[rsp+0x60]_xmm0, movaps_xmmword_ptr_[rsp+0x70@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, lea_rax_[rsp+0xf0], mov_rsi_r10, mov_qword_ptr_[rsp+0x18]_rax, lea_rdx_[rsp+0x10], lea_rax_[rsp+0x30], lea_rdi_[rsp+8], mov_qword_ptr_[rsp+8]_0, mov_dword_ptr_[rsp+0x10@@ ]_8, mov_dword_ptr_[rsp+0x14]@@ _0x30, mov_qword_ptr_[rsp+0x20]_rax, call_0xfffffffffffff33@@ c, mov_rsi_qword_ptr_[rip+0x2@@ 6c@@ f0], mov_edx_5, lea_rdi_[rip+0xf@@ 90@@ 2], call_0xfffffffffffee@@ 17@@ 4, mov_rsi_qword_ptr_[rsp+8], mov_rdx_rax, lea_rdi_[rip+0x13@@ d@@ 4a], xor_eax_eax, call_0xffffffffffffe0@@ d@@ e
endbr64, push_r15, mov_rdx_rdi, push_r14, push_r13, mov_r13_rdi, lea_rdi_[rip+0x13@@ d@@ 34], push_r12, mov_r12_rsi, lea_rsi_[rip+0x13@@ d@@ 1e], push_rbp, push_rbx, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, call_0x4@@ 6f@@ 7, mov_rcx_qword_ptr_[rip+0x2@@ 34@@ 4b], lea_rsi_[rsp+0x10], lea_rdx_[rip-0x@@ 55@@ 1], mov_rdi_rax, mov_rbp_rax, call_0xfffffffffffee@@ 26@@ 9, test_eax_eax, js@@ _0x10@@ a, je_0x65, dec_eax, lea_rax_[rax@@ *8+8], mov_qword_ptr_[rsp+8]_rax, xor_ebx_ebx, lea_r15_[rip+0x@@ 12@@ a5@@ 6], mov_rax_qword_ptr_[rsp+0x10], mov_rsi_rbp, mov_rdx_qword_ptr_[r@@ ax+r@@ bx], mov_rdi_r15, add_rdx@@ _0x13, xor_eax_eax, call_0x46@@ 9b, mov_rdi_rax, mov_rsi_r12, mov_r14_rax, call_0xfffffffffffffa@@ bd, mov_rax_qword_ptr_[rsp+0x10], mov_rdi_qword_ptr_[rax+r@@ bx], add_rbx_8, call_0xfffffffffffed@@ e0@@ b, mov_rdi_r14, call_0xfffffffffffed@@ e0@@ 3, cmp_qword_ptr_[rsp+@@ 8]_rbx, jne_0xffffffffffffffb9, mov_rdi_rbp, call_0xfffffffffffedd@@ f4, mov_rdi_qword_ptr_[rsp+0x10], call_0xfffffffffffedd@@ ea, mov_rdx_r13, lea_rsi_[rip+0x13@@ c@@ 5c], lea_rdi_[rip+0x13@@ c6@@ b], xor_eax_eax, call_0x4@@ 64@@ 2, mov_rbp_rax, mov_rsi_r12, mov_rdi_rax, call_0xfffffffffffffa@@ 64, mov_rdi_rbp, call_0xfffffffffffedd@@ bc, lea_rdi_[rip+0x13@@ c@@ 51], call_0xfffffffffffedd@@ f0, mov_rsi_rax, test_rax_rax, je_0x29, mov_rdx_r13, lea_rdi_[rip+0x13@@ c@@ 3f], xor_eax_eax, call_0x4@@ 607, mov_rbp_rax, mov_rdi_rax, mov_rsi_r12, call_0xfffffffffffffa@@ 29, mov_rdi_rbp, call_0xfffffffffffedd@@ 81, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x2d, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, call_0xfffffffffffed@@ e@@ 38, cmp_dword_ptr_[rax]_2, jne_0x14, mov_rdi_rbp, call_0xfffffffffffedd@@ 4b, jmp_0xffffffffffffff61, call_0xfffffffffffee@@ 001, lea_rsi_[rip+0x13@@ a5@@ 5], lea_rdi_[rip+0x@@ f7@@ 4c], mov_edx_5, call_0xfffffffffffed@@ fb@@ 9, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffffd@@ ff@@ c
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x18, mov_rax_qword_ptr_[rdi], mov_qword_ptr_[rip+0x2@@ 6a@@ f@@ 4]@@ _rdx, lea_rcx_[rax+8], mov_rax_qword_ptr_[rax+8], mov_qword_ptr_[rsp]_rcx, mov_qword_ptr_[rdi]_rcx, test_rax_rax, je_0x111, mov_r12_rdi, mov_rbx_rsi, cmp_byte_ptr_[rax]@@ _0x2d, jne_0x10@@ 2, cmp_byte_ptr_[rax+1]_0, je_0xf8, mov_rcx_qword_ptr_[rsp], add_rcx_8, mov_qword_ptr_[r12@@ ]_rcx, mov_qword_ptr_[rsp+8]_rcx, cmp_byte_ptr_[rax]@@ _0x2d, jne_0x12, cmp_byte_ptr_[rax+1]@@ _0x2d, jne_0xc, cmp_byte_ptr_[rax+@@ 2]_0, je_0xd2, movzx_ebp_byte_ptr_[r@@ ax+1], cmp_bpl@@ _0x2d, je_0x1@@ 3e, lea_r14@@ _[rax+1], test_bpl_bpl, je_0x2@@ 19, mov_rdi_rbx, jmp_0xe, cmp_bpl@@ _al, je_0x3d, add_rdi@@ _0x40, cmp_qword_ptr_[rdi]_0, movzx_eax_byte_ptr_[r@@ di+8], jne_0xffffffffffffffef, test_al_al, jne_0xffffffffffffffeb, mov_edx_5, lea_rsi_[rip+0x13@@ b@@ 20], lea_rdi_[rip+0xf@@ 66@@ c], call_0xfffffffffffed@@ ed@@ e, mov_rdi_rax, movsx_esi@@ _bpl, xor_eax_eax, call_0xfffffffffffffc@@ 90, mov_edx_dword_ptr_[r@@ di+0xc], movzx_eax_byte_ptr_[r@@ 14+1], lea_r15_[r@@ 14+1], test_edx_edx, je_0x6a, test_al_al, jne_0x@@ 86, mov_rax_qword_ptr_[r12], mov_rsi_qword_ptr_[rax], lea_rdx_[rax+8], mov_qword_ptr_[r12@@ ]_rdx, test_rsi_rsi, je_0x1@@ ff, mov_r14_r15, mov_rax_qword_ptr_[rdi+0x20], test_rax_rax, je_0x8@@ 4, call_rax, movzx_ebp_byte_ptr_[r@@ 14], test_bpl_bpl, jne_0xffffffffffffff@@ 6f, mov_rax_qword_ptr_[r12], mov_qword_ptr_[rsp]_rax, mov_rax_qword_ptr_[rsp], mov_rax_qword_ptr_[rax], test_rax_rax, jne_0xffffffffffffff@@ 01, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, cmp_al_0x3d, je_0x1@@ 9e, mov_rax_qword_ptr_[rdi+0x20], test_rax_rax, je_0x49, xor_esi_esi, call_rax, mov_r14_r15, jmp_0xffffffffffffffb2, lea_rsi_[r@@ 14+2], lea_r14_[rip+0x@@ ff@@ 7f], cmp_al_0x3d, je_0xffffffffffffff@@ 8e, mov_rax_qword_ptr_[rdi+0x20], mov_rsi_r15, lea_r14_[rip+0x@@ ff@@ 6d], test_rax_rax, jne_0xffffffffffffff@@ 88, mov_rax_qword_ptr_[rdi+0x18], mov_qword_ptr_[rax]_rsi, jmp_0xffffffffffffff7d, mov_edx_dword_ptr_[r@@ di+0x28], mov_rax_qword_ptr_[rdi+0x10], mov_r14_r15, mov_dword_ptr_[rax]_edx, jmp_0xffffffffffffff66, lea_rbp_[rax@@ +2], mov_r13_rbx, jmp_0x5@@ 6, mov_rsi_r15, mov_rdi_rbp, call_0xfffffffffffee0@@ 72, test_eax_eax, je_0x7b, mov_rdi_r15, call_0xfffffffffffedd@@ e6, movsxd_r14@@ _eax, mov_rdx_r14, mov_rsi_r15, mov_rdi_rbp, call_0xfffffffffffedc@@ 45, test_eax_eax, jne_0x20, mov_eax_dword_ptr_[r13+0x@@ c], mov_ecx@@ _0x2d, cmp_eax_2, mov_edx_0x3@@ d, movsx_esi_byte_ptr_[r@@ bp+r@@ 14], cmovne@@ _ecx@@ _edx, cmp_esi_ecx, je_0x5d, add_r13@@ _0x40, mov_r15_qword_ptr_[r@@ 13], test_r15_r15, jne_0xffffffffffffffab, cmp_byte_ptr_[r13+@@ 8]_0, jne_0xffffffffffffffee, lea_rsi_[rip+0x13@@ 9d@@ a], lea_rdi_[rip+0xf@@ 4f@@ a], mov_edx_5, call_0xfffffffffffedd@@ 67, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xfffffffffffffb@@ 1a, mov_eax_dword_ptr_[r13+0x@@ c], test_eax_eax, jne_0x59, mov_rax_qword_ptr_[r13+0x@@ 20], test_rax_rax, je_0x38, xor_esi_esi, mov_rdi_r13, call_rax, jmp_0xfffffffffffffebf, lea_rsi_[r@@ bp+r@@ 14+1], test_eax_eax, je_0xb5, mov_rax_qword_ptr_[r13+0x@@ 20], test_rax_rax, jne_0xffffffffffffffe2, mov_rax_qword_ptr_[r@@ 13+0x18], mov_qword_ptr_[rax]_rsi, mov_rax_qword_ptr_[r12], mov_qword_ptr_[rsp]_rax, jmp_0xfffffffffffffe@@ 9d, mov_edx_dword_ptr_[r@@ 13+0x28], mov_rax_qword_ptr_[r13+0x10], mov_dword_ptr_[rax]_edx, mov_rax_qword_ptr_[rsp+8], mov_qword_ptr_[rsp]_rax, jmp_0xfffffffffffffe@@ 85, mov_rcx_qword_ptr_[rsp], mov_rsi_qword_ptr_[r@@ cx+8], lea_rax_[r@@ cx+0x10], mov_qword_ptr_[r12]_rax, test_rsi_rsi, jne_0xffffffffffffffb8, mov_edx_5, lea_rsi_[rip+0x13@@ 8f@@ 1], lea_rdi_[rip+0xf@@ 45@@ 7], call_0xfffffffffffed@@ cc@@ 9, mov_rdi_rax, mov_rsi_r15, xor_eax_eax, call_0xfffffffffffffa@@ 7c, mov_edx_5, lea_rsi_[rip+0x13@@ 78@@ c], jmp_0xfffffffffffffd@@ bf, movsx@@ _ebp@@ _byte_ptr_[r@@ di+8], lea_rsi_[rip+0x13@@ 8e@@ 2], lea_rdi_[rip+0x@@ f4@@ 1b], mov_edx_5, call_0xfffffffffffedc@@ 88, mov_rdi_rax, mov_esi_ebp, xor_eax_eax, call_0xfffffffffffffa@@ 3c, mov_edx_5, lea_rsi_[rip+0x13@@ 7@@ 2b], jmp_0xffffffffffffff9@@ b
endbr64, push_r12, mov_r12_rsi, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, call_0xfffffffffffeda@@ 8e, mov_dword_ptr_[rax]_0, xor_edx_edx, mov_rsi_rsp, mov_rdi_r12, mov_rbp_rax, call_0xfffffffffffed@@ f@@ 48, mov_rdx_qword_ptr_[rsp], cmp_rdx@@ _r12, je_7, cmp_byte_ptr_[rdx]_0, je_0x37, mov_rbp_qword_ptr_[rbx], test_rbp_rbp, je_0x5f, mov_edx_5, lea_rsi_[rip+0x13@@ 7@@ 11], lea_rdi_[rip+0xf@@ 38@@ 8], call_0xfffffffffffedb@@ fa, mov_rdi_rax, mov_rdx_r12, mov_rsi_rbp, xor_eax_eax, call_0xfffffffffffff9a@@ a, cmp_rax@@ _0x7fffffff, ja_0xffffffffffffff@@ c5, mov_edx_dword_ptr_[rbp], test_edx_edx, jne_0xffffffffffffffbe, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x3e, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, ret, movsx@@ _ebp@@ _byte_ptr_[r@@ bx+8], mov_edx_5, lea_rsi_[rip+0x13@@ 6d@@ 8], lea_rdi_[rip+0xf@@ 32@@ 7], call_0xfffffffffffedb@@ 99, mov_rdi_rax, mov_rdx_r12, mov_esi_ebp, xor_eax_eax, call_0xfffffffffffff94@@ a, call_0xfffffffffffed@@ bb@@ 5
endbr64, push_rbp, lea_rsi_[rip+0x13@@ 7e@@ f], mov_edx_5, mov_rbp_qword_ptr_[rdi], lea_rdi_[rip+0xf@@ 2f@@ 3], call_0xfffffffffffedb@@ 65, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, pop_rbp, jmp_0x3@@ ce@@ 7
endbr64, mov_rax_qword_ptr_[rip+0x2@@ 66@@ ad], test_rax_rax, je_7, test_rdi_rdi, jne_0xa, mov_qword_ptr_[rip+0x2@@ 66@@ 9@@ c]@@ _rdi, ret, push_r13, push_r12, push_rbp, push_rbx, push_rdx, movsx@@ _r13d@@ _byte_ptr_[r@@ ax+8], mov_rbx_qword_ptr_[rax], test_r13d_r13d, jne_8, mov_r13d@@ _8, movsx@@ _ebp@@ _byte_ptr_[r@@ di+8], mov_r12_qword_ptr_[rdi], test_ebp_ebp, jne_7, mov_ebp@@ _8, mov_edx_5, lea_rsi_[rip+0x13@@ 65@@ d], lea_rdi_[rip+0xf@@ 28@@ 4], call_0xfffffffffffeda@@ f6, mov_rdi_rax, mov_r8_rbx, mov_ecx_r13d, mov_rdx_r12, mov_esi_ebp, xor_eax_eax, call_0xfffffffffffff8a@@ 1
endbr64, mov_byte_ptr_[rip+0x2@@ 2f@@ 19@@ ]_dil, ret
endbr64, sub_rsp_8, xor_edi_edi, call_0xfffffffffffed@@ 9a@@ 6, test_eax_eax, jne_0xf, lea_rax_[rip+0x13@@ 7@@ 38], add_rsp_8, ret, mov_edi_1, call_0xfffffffffffed@@ 98@@ b, test_eax_eax, je_0xffffffffffffffe7, lea_rdi_[rip+0x13@@ 7@@ 27], call_0xfffffffffffed@@ 8@@ 3b, test_rax_rax, je_7, cmp_byte_ptr_[rax]_0, jne_0xffffffffffffffd8, lea_rdi_[rip+0x13@@ 7@@ 16], call_0xfffffffffffed@@ 8@@ 25, test_rax_rax, je_7, cmp_byte_ptr_[rax]_0, jne_0xffffffffffffffc2, lea_rax_[rip+0x13@@ 6f@@ 5], add_rsp_8, ret
endbr64, push_r14, mov_esi_0x@@ c0, push_r13, mov_r13_rdi, mov_edi_1, push_r12, push_rbp, sub_rsp_0xa8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, call_0xffffffffffffeb@@ 4e, xor_edi_edi, mov_r12_rax, call_0xfffffffffffed@@ 90@@ 4, mov_r8d_eax, xor_eax_eax, test_r8d_r8d, jne_0x1@@ 67, mov_byte_ptr_[r12@@ ]_al, mov_qword_ptr_[r12+@@ 8]_r13, call_0xffffffffffffff@@ 38, mov_rsi_rax, mov_ecx_4, lea_rdi_[rip+0x13@@ 67@@ 6], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], mov_rbp_rax, movzx_edx_byte_ptr_[r@@ ip+0x2@@ 2e@@ 2c], seta_al, sbb_al_0, test_al_al, jne_0x41, mov_byte_ptr_[r@@ 12]_0, test_dl_dl, jne_7, mov_byte_ptr_[r@@ 12]_0, mov_rax_qword_ptr_[rsp+0x98], xor_rax_qword_ptr_fs:[0x28], jne_0x12@@ 4, add_rsp_0xa8, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, test_dl_dl, je_0xffffffffffffffc8, cmp_byte_ptr_[r12]_0, je_0xffffffffffffffc6, lea_rdi_[r12+0x@@ b4], call_0xffffffffffffed@@ 7d, mov_r14_rsp, xor_ecx_ecx, xor_eax_eax, mov_edx_eax, add_eax@@ _0x20, mov_qword_ptr_[r14@@ +rdx@@ ]_rcx, mov_qword_ptr_[r14@@ +rdx+@@ 8]_rcx, mov_qword_ptr_[r14@@ +rdx+0x1@@ 0]_rcx, mov_qword_ptr_[r14@@ +rdx+0x1@@ 8]_rcx, cmp_eax@@ _0x80, jb_0xffffffffffffff@@ e3, add_rax_r14, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+8]_0, mov_qword_ptr_[rax+0x10]_0, lea_rdi_[rsp+8], call_0xfffffffffffedc@@ 13, lea_rdx_[r@@ 12+0x18], mov_rsi_r14, mov_edi_0xd, mov_qword_ptr_[rsp@@ ]_1, mov_dword_ptr_[rsp+0x8@@ 8]_0, call_0xfffffffffffed@@ 80@@ e, call_0x4@@ 3e@@ 9, mov_dword_ptr_[r12+0x1@@ 0]_eax, test_eax_eax, je_0x76, mov_edi_1, call_0xffffffffffffe@@ bc@@ 6, mov_dword_ptr_[r12+0x@@ b@@ 0]_eax, mov_edi_dword_ptr_[r@@ 12+0x@@ b8], mov_esi_1, call_0xffffffffffffeb@@ fc, mov_edi_dword_ptr_[r@@ 12+0x@@ b4], call_0xfffffffffffeda@@ 5f, mov_edi_dword_ptr_[r@@ 12+0x@@ b8], call_0xfffffffffffeda@@ 52, mov_rdi_qword_ptr_[rip+0x2@@ 2e@@ 4e], xor_ecx_ecx, xor_edx_edx, xor_esi_esi, call_0xfffffffffffedd@@ c0, jmp_0xfffffffffffffe@@ ea, mov_edi_1, call_0xfffffffffffed@@ 78@@ b, test_eax_eax, setne_al, jmp_0xfffffffffffffe@@ 90, call_0xfffffffffffed@@ 8b@@ c, xor_edx_edx, lea_rsi_[rip+0x13@@ 5@@ 25], lea_rdi_[rip+0x13@@ 5@@ 26], call_0xfffffffffffed@@ 7d@@ 7, mov_edi_dword_ptr_[r@@ 12+0x@@ b4], xor_esi_esi, call_0xffffffffffffeb@@ 88, mov_edi_dword_ptr_[r@@ 12+0x@@ b4], call_0xfffffffffffed@@ 9e@@ b, mov_edi_dword_ptr_[r@@ 12+0x@@ b8], call_0xfffffffffffed@@ 9d@@ e, mov_rsi_r13, mov_rdi_rbp, call_0xffffffffffffa@@ 3d@@ 3
endbr64, cmp_byte_ptr_[rdi]_0, jne_9, ret, push_rbp, mov_rbp_rdi, mov_esi_1, mov_edi_dword_ptr_[r@@ di+0x@@ b0], call_0xffffffffffffeb@@ 31, mov_rsi_qword_ptr_[rbp+8], mov_edi_dword_ptr_[r@@ bp+0x10], mov_edx_2, call_0x4@@ 350, lea_rsi_[r@@ bp+0x18], mov_edi_0xd, xor_edx_edx, call_0xfffffffffffed@@ 6f@@ 0, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffff@@ ed@@ 55@@ 7
endbr64, push_r15, mov_eax_7, push_r14, push_r13, mov_r13_rdx, push_r12, lea_r12_[rip+0x@@ 10@@ a@@ 9e], push_rbp, mov_rbp_rsi, push_rbx, lea_rbx_[rip+0x@@ 2@@ 1d@@ e9], sub_rsp_0x18, movsxd_r15@@ _dword_ptr_[r@@ si+0x28], mov_qword_ptr_[rsp]_rdi, mov_dword_ptr_[rsp+0xc]@@ _r15d, mov_r14_qword_ptr_[r@@ si+0x30], jmp_0x19, mov_r12_qword_ptr_[r@@ bx+0x28], add_rbx@@ _0x28, add_r14@@ _4, test_r12_r12, je_0x81, mov_rax_qword_ptr_[rbx+8], cmp_r15_rax, jne_0xffffffffffffffe8, mov_rsi_qword_ptr_[rbp], mov_rdx_r15, mov_rdi_r12, call_0xfffffffffffedb@@ 4c, test_eax_eax, jne_0xffffffffffffffd5, mov_eax_dword_ptr_[r14], lea_edx_[rax+1], mov_dword_ptr_[r@@ 14@@ ]_edx, test_eax_eax, jne_0x12@@ c, lea_r12_[r@@ bp+0x10], mov_rdi_r12, call_0x6@@ 5f@@ b, movsxd_rdx_dword_ptr_[r@@ bp+0x@@ 2c], mov_rsi_qword_ptr_[rbp+8], mov_rdi_r12, call_0x6@@ 87@@ b, mov_rdi_r12, call_0x6@@ 8b@@ 3, mov_rcx_qword_ptr_[r@@ bp+0x20], mov_rsi_qword_ptr_[r13+8], mov_rax_qword_ptr_[rbx+0x10], mov_rdi_qword_ptr_[r13], mov_rdx_qword_ptr_[rsp], add_rsp_0x18, mov_r8_rbx, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, jmp_rax, cmp_dword_ptr_[rsp+0x@@ c]_1, jle_0x@@ f8, mov_rax_qword_ptr_[r13+8], mov_rbx_qword_ptr_[r@@ ax+0x70], test_rbx_rbx, je_0x8b, mov_r12_qword_ptr_[r@@ bp], jmp_0xb, mov_rbx_rax, mov_r13_qword_ptr_[r@@ bx+8], mov_rdx_r15, mov_rsi_r12, mov_rdi_r13, call_0xfffffffffffed@@ aa@@ 8, test_eax_eax, jne_0xf, mov_rdi_r13, call_0xfffffffffffed@@ 6e@@ c, cmp_r15_rax, je_0x5b, mov_rax_qword_ptr_[rbx], test_rax_rax, jne_0xffffffffffffffd4, mov_edi_0x18, call_0xffffffffffffe@@ be@@ 5, movsxd_rsi_dword_ptr_[r@@ bp+0x28], mov_rdi_qword_ptr_[rbp], mov_r12_rax, call_0xffffffffffffee@@ 15, mov_qword_ptr_[r12+8]_rax, movsxd_rsi_dword_ptr_[r@@ bp+0x@@ 2c], mov_rdi_qword_ptr_[rbp+8], call_0xffffffffffffe@@ e0@@ 3, mov_qword_ptr_[r12+0x10]_rax, mov_qword_ptr_[r12]_0, mov_qword_ptr_[rbx@@ ]_r12, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rbx_[r@@ ax+0x70], jmp_0xffffffffffffffb1, mov_edx_5, lea_rsi_[rip+0x13@@ 5@@ 15], lea_rdi_[rip+0x@@ ed@@ e4], call_0xfffffffffffed@@ 65@@ 6, mov_edx_dword_ptr_[rsp+0xc], mov_rdi_qword_ptr_[rsp], mov_rsi_rax, mov_rcx_r12, xor_eax_eax, call_0x1@@ 6e@@ 1, mov_edx_5, lea_rsi_[rip+0x13@@ 4@@ 98], lea_rdi_[rip+0x@@ ed@@ b7], call_0xfffffffffffed@@ 6@@ 29, mov_rdi_qword_ptr_[rsp], mov_rsi_rax, mov_rdx_r12, xor_eax_eax, call_0x1@@ 6b@@ 8, mov_r12_qword_ptr_[r@@ bp], mov_edx_5, lea_rsi_[rip+0x13@@ 48@@ b], jmp_0xffffffffffffffa@@ 6
endbr64, push_r12, mov_r12_rdi, mov_edi@@ _0x50, push_rbp, mov_ebp_esi, push_rbx, mov_ebx_edx, call_0xffffffffffffe@@ 6f@@ c, mov_qword_ptr_[rax+8]_0, mov_qword_ptr_[rax+0x10]_0, mov_qword_ptr_[rax+0x4@@ 0]_r12, test_bl@@ _2, je_0x38, mov_ecx_ebx, and_ecx_1, mov_edx_3, sub_edx_ecx, mov_dword_ptr_[rax]_edx, mov_dword_ptr_[rax+@@ 4]_ebx, mov_dword_ptr_[rax+0x4@@ 8]_ebp, mov_dword_ptr_[rax+0x@@ 4c]_0, mov_qword_ptr_[rax+0x18]_0, mov_qword_ptr_[rax+0x20]_0, pop_rbx, pop_rbp, pop_r12, ret, mov_edx_ebx, not_edx, and_edx_1, jmp_0xffffffffffffffc@@ f
endbr64, push_r12, mov_r12d_esi, push_rbp, mov_rbp_rdi, sub_rsp_8, and_esi@@ _0x100, je_7, cmp_byte_ptr_[rdi]@@ _0x2d, je_0x54, xor_esi_esi, mov_rdi_rbp, xor_eax_eax, call_0xfffffffffffed@@ b0@@ b, mov_esi_eax, cmp_eax_-1, je_0x58, mov_edx_r12d, mov_rdi_rbp, or_dl@@ _0x80, call_0xffffffffffffff@@ 46, lea_rdi_[rip-0x@@ 634@@ 6], mov_r12_rax, lea_rcx_[r@@ ax+0x48], mov_edx_1, xor_eax_eax, mov_esi@@ _0xfffffffe, call_0xffffffffffffda@@ 17, add_rsp_8, pop_rbp, mov_rax_r12, pop_r12, ret, cmp_byte_ptr_[rdi+@@ 1]_0, jne_0xffffffffffffffaa, add_rsp_8, pop_rbp, mov_edx_r12d, xor_esi_esi, pop_r12, jmp_0xfffffffffffffefe, lea_rsi_[rip+0x13@@ 3d@@ a], lea_rdi_[rip+0x@@ ec@@ 79], mov_edx_5, call_0xfffffffffffed@@ 4e@@ 6, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffffd@@ 52@@ 9
endbr64, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_0xd0, mov_esi_dword_ptr_[r@@ di+0x@@ 48], lea_rdx_[rsp+0x30], mov_edi_1, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0xc8]_rax, xor_eax_eax, call_0xfffffffffffed@@ 8@@ 9e, cmp_eax_-1, je_0x10d, mov_eax_dword_ptr_[rsp+0x48], and_eax_0xf000, cmp_eax@@ _0x1000, je_0x8a, mov_rdi_qword_ptr_[rsp+0x60], test_rdi_rdi, jg_0x4@@ 4, mov_qword_ptr_[rbx+0x@@ 38]_0, mov_qword_ptr_[rbx+0x@@ 30]_0, xor_eax_eax, mov_qword_ptr_[rbx+0x28]_rax, mov_rax_qword_ptr_[rsp+0xc8], xor_rax_qword_ptr_fs:[0x28], jne_0xbd, add_rsp_0xd0, pop_rbx, pop_rbp, pop_r12, ret, call_0xffffffffffffe@@ 540, mov_qword_ptr_[rbx+0x30]_rax, mov_edi_dword_ptr_[rbx+0x@@ 48], mov_rdx_qword_ptr_[rsp+0x60], mov_rsi_rax, call_0x7b@@ 8c, test_rax_rax, js_0x@@ b4, mov_rax_qword_ptr_[rbx+0x30], mov_rdx_qword_ptr_[rsp+0x60], add_rdx_rax, mov_qword_ptr_[rbx+0x3@@ 8]_rdx, jmp_0xffffffffffffff9e, mov_rax_rsp, mov_qword_ptr_[rsp+0x10]_0, mov_qword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rsp+0x20]_0, lea_r12_[rsp+0x10], push_rax, mov_edi_dword_ptr_[rbx+0x@@ 48], xor_edx_edx, push@@ _-1, mov_r9d_1, mov_r8_r12, mov_ecx_4, xor_esi_esi, call_0x7@@ 3e@@ d, mov_rbp_rax, pop_rax, pop_rdx, test_rbp_rbp, js_0x6@@ 2, mov_rdi_r12, call_0x65@@ 1b, mov_rdi_r12, call_0x6@@ 5f@@ 3, add_rbp_rax, mov_qword_ptr_[rbx+0x30]_rax, mov_qword_ptr_[rbx+0x3@@ 8]_rbp, jmp_0xffffffffffffff33, call_0xfffffffffffed@@ 3b@@ e, mov_rbp_qword_ptr_[r@@ bx+0x40], mov_edx_5, lea_rsi_[rip+0x13@@ 29@@ 9], lea_rdi_[rip+0x@@ eb@@ 00], call_0xfffffffffffed@@ 37@@ 2, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffffd@@ 3b@@ 5, mov_rbp_qword_ptr_[r@@ bx+0x40], mov_edx_5, lea_rsi_[rip+0x13@@ 2c0], jmp_0xffffffffffffffd7, mov_r12_qword_ptr_[rsp+8], mov_rbp_qword_ptr_[r@@ bx+0x40], mov_edx_5, lea_rsi_[rip+0x13@@ 28@@ 1], lea_rdi_[rip+0x@@ ea@@ c0], call_0xfffffffffffed@@ 33@@ 2, mov_rdi_rax, mov_rdx_r12, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffffd@@ 2a@@ 2
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x18, mov_qword_ptr_[rsp]_rdx, mov_qword_ptr_[rsp+8]_rcx, mov_rdx_qword_ptr_[r@@ di+0x30], mov_rcx_qword_ptr_[r@@ di+0x38], cmp_rdx_rcx, jae_0x@@ 44@@ 2, mov_rbp_rdi, mov_rbx_rsi, inc_rdx, jmp_0x1e, inc_dword_ptr_[r@@ bp+0x@@ 4c], lea_rax_[rdx+1], cmp_rcx_rdx, je_0x4@@ 1e, mov_rdx_rax, mov_qword_ptr_[rbp+0x@@ 30]_rdx, mov_rax_rdx, movsx@@ _r12d@@ _byte_ptr_[r@@ dx@@ -1], mov_esi_r12d, and_esi@@ _0xffffff@@ ef, cmp_sil@@ _0xa, je_0xffffffffffffffd7, cmp_rdx_rcx, jae_0x@@ 3f@@ a, lea_r13_[rip+0x@@ 13@@ 34@@ d], lea_rdx_[rax-1], mov_qword_ptr_[rbx]_rdx, cmp_rax_rcx, jb@@ _0x2f, jmp_0x3@@ ac, mov_edx_r12d, and_edx_0xffffff@@ df, cmp_edx@@ _0x1a, je_0x2d, lea_rdx_[rax+1], mov_qword_ptr_[rbp+0x@@ 30]_rdx, movsx@@ _r12d@@ _byte_ptr_[rax], cmp_rdx_qword_ptr_[r@@ bp+0x38], jae_0x@@ 2d@@ d, mov_esi_4, mov_edi_r12d, call_0xffffffffffff9@@ 96@@ f, test_al_al, mov_rax_qword_ptr_[rbp+0x30], je_0xffffffffffffffcc, mov_rcx_qword_ptr_[rbx], mov_r8_rax, sub_r8@@ _rcx, mov_r9_rcx, dec@@ _r8d, mov_dword_ptr_[rbx+0x@@ 28]@@ _r8d, test_r8d_r8d, je_0x3@@ 5b, cmp_byte_ptr_[rcx@@ ]@@ _0x2d, je_0x3@@ e2, cmp_rax_qword_ptr_[r@@ bp+0x38], jae_0x@@ 2b@@ c, cmp_r12d@@ _0xa, jne_0x33, jmp_0x2@@ f4, mov_rdx_qword_ptr_[rbp+0x@@ 30], lea_rax_[rdx+1], mov_qword_ptr_[rbp+0x@@ 30]_rax, movsx@@ _r12d@@ _byte_ptr_[r@@ dx], cmp_rax_qword_ptr_[r@@ bp+0x38], jae_0x@@ 28@@ c, cmp_r12d@@ _0xa, je_0x2@@ c2, mov_esi_4, mov_edi_r12d, call_0xffffffffffff98@@ f4, mov_r14d_eax, test_al_al, jne_0xffffffffffffffca, mov_rax_qword_ptr_[rbp+0x30], mov_rsi_qword_ptr_[rbp+0x@@ 38], cmp_rax_rsi, jae_0x@@ 25@@ d, cmp_r12d@@ _0x1a, je_0x3@@ 5a, cmp_r12d@@ _0x3a, jne_0x3@@ a2, lea_rdx_[rax+1], mov_qword_ptr_[rbp+0x@@ 30]_rdx, movsx@@ _r12d@@ _byte_ptr_[rax], cmp_r12d@@ _0xa, je_0x1@@ f8, mov_esi_4, mov_edi_r12d, call_0xffffffffffff98@@ a2, test_al_al, mov_rax_qword_ptr_[rbp+0x30], je_0x47, mov_rsi_qword_ptr_[rbp+0x@@ 38], cmp_rax_rsi, jb_0xffffffffffffff@@ ce, mov_r13_qword_ptr_[r@@ bx], mov_r12d_dword_ptr_[r@@ bx+0x28], mov_edx_5, lea_rsi_[rip+0x13@@ 18@@ 1], lea_rdi_[rip+0x@@ e8@@ e0], call_0xfffffffffffed@@ 15@@ 2, mov_rsi_rax, mov_rcx_r13, mov_edx_r12d, mov_rdi_rbp, xor_eax_eax, call_0x1@@ 1d@@ f, cmp_rax_qword_ptr_[r@@ bp+0x38], jae_0xffffffffffffff@@ c0, cmp_r12d@@ _0x1a, je_0x2@@ b5, dec_rax, mov_qword_ptr_[rbx+8]_rax, jmp_0x@@ ac, test_r14b_r14b, je_0x3a, mov_r15_qword_ptr_[rbx], mov_r14d_dword_ptr_[r@@ bx+0x28], mov_edx_5, test_byte_ptr_[r@@ bp+@@ 5@@ ]_2, je_0x2@@ 64, mov_rsi_r13, lea_rdi_[rip+0xe@@ 87@@ 9], call_0xfffffffffffed0@@ eb, mov_rsi_rax, mov_rcx_r15, mov_edx_r14d, mov_rdi_rbp, xor_eax_eax, call_0x1@@ 228, mov_rdx_qword_ptr_[rbp+0x@@ 30], mov_rcx_qword_ptr_[rbp+0x@@ 38], inc_dword_ptr_[r@@ bp+0x@@ 4c], cmp_rdx_rcx, jae_0x@@ a7, lea_rax_[rdx+1], mov_qword_ptr_[rbp+0x@@ 30]_rax, movsx@@ _r12d@@ _byte_ptr_[r@@ dx], cmp_rcx_rax, jbe_0x@@ 95, cmp_r12d@@ _0xa, je_0x8b, mov_esi_4, mov_edi_r12d, call_0xffffffffffff97@@ b8, mov_r14d_eax, mov_rax_qword_ptr_[rbp+0x30], test_r14b_r14b, je_0x6e, lea_rdx_[rax-1], mov_qword_ptr_[rbp+0x@@ 30]_rdx, cmp_qword_ptr_[rbp+0x@@ 38]_rdx, jbe_0x@@ 2c, lea_rax_[rdx+1], mov_qword_ptr_[rbp+0x@@ 30]_rax, movsx@@ _r12d@@ _byte_ptr_[r@@ dx], mov_eax_r12d, and_eax_0xffffff@@ ef, cmp_eax_0xa, je_0xffffffffffffff@@ 54, test_r14b_r14b, jne_0x2b, mov_rdx_qword_ptr_[rbp+0x@@ 30], cmp_qword_ptr_[rbp+0x@@ 38]_rdx, ja_0xffffffffffffff@@ d8, mov_r13_qword_ptr_[r@@ bx], mov_r12d_dword_ptr_[r@@ bx+0x28], mov_edx_5, lea_rsi_[rip+0x13@@ 11c], jmp_0xfffffffffffffe@@ e3, mov_esi_4, mov_edi_r12d, call_0xffffffffffff97@@ 48, mov_r14d_eax, jmp_0xffffffffffffffc7, mov_rax_rdx, mov_rdx_qword_ptr_[rbx+8], sub_rax_rdx, dec_eax, mov_dword_ptr_[rbx+0x@@ 2c]_eax, jne_0x15, jmp_0x28, mov_eax_dword_ptr_[rbx+0x@@ 2c], dec_eax, mov_dword_ptr_[rbx+0x@@ 2c]_eax, je_0x1b, mov_rdx_qword_ptr_[rbx+8], cdqe, movsx_edi_byte_ptr_[r@@ dx@@ +rax-1], mov_esi_4, call_0xffffffffffff9@@ 70@@ e, test_al_al, jne_0xffffffffffffffdf, mov_rax_qword_ptr_[rsp], mov_rdx_qword_ptr_[rsp+8], mov_rsi_rbx, mov_rdi_rbp, call_rax, mov_rax_qword_ptr_[rbp+0x30], mov_rcx_qword_ptr_[rbp+0x@@ 38], cmp_rax_rcx, jae_0x@@ 11, mov_edx_r12d, and_edx_0xffffff@@ ef, cmp_edx@@ _0xa, jne_0xfffffffffffffd@@ 2e, mov_eax_1, cmp_r12d@@ _0xa, jne_5, inc_dword_ptr_[r@@ bp+0x@@ 4c], add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, cmp_rsi_rdx, ja_0xfffffffffffffe@@ 78, jmp_0xfffffffffffffe@@ 23, mov_rcx_qword_ptr_[rbx], mov_r8_rdx, sub_r8@@ _rcx, mov_r9_rcx, dec@@ _r8d, mov_rax_rdx, jmp_0xfffffffffffffd@@ 3b, mov_rcx_qword_ptr_[rbx], mov_r12d_dword_ptr_[r@@ bx+0x28], mov_edx_5, lea_rsi_[rip+0x13@@ 0@@ 75], lea_rdi_[rip+0xe@@ 6d@@ 4], mov_qword_ptr_[rsp]_rcx, call_0xfffffffffffec@@ f@@ 42, mov_rcx_qword_ptr_[rsp], mov_rsi_rax, mov_edx_r12d, mov_rdi_rbp, xor_eax_eax, call_0x@@ fc@@ e, mov_r9_qword_ptr_[r@@ bx], mov_r8d_dword_ptr_[r@@ bx+0x28], mov_edx_5, lea_rsi_[rip+0x12@@ bd@@ 2], lea_rdi_[rip+0x@@ e6@@ 94], mov_dword_ptr_[rsp+8]_r8d, mov_qword_ptr_[rsp]_r9, call_0xfffffffffffec@@ ef@@ d, mov_r9_qword_ptr_[rsp], mov_r8d_dword_ptr_[rsp+8], mov_rsi_rax, mov_rcx_r9, mov_edx_r8d, mov_rdi_rbp, xor_eax_eax, call_0xf@@ 81, mov_dword_ptr_[rbx+0x@@ 28]_0, lea_rsi_[rip+0x12@@ b7@@ e], lea_rdi_[rip+0xe@@ 65@@ 1], mov_edx_5, call_0xfffffffffffec@@ eb@@ e, mov_rsi_rax, mov_rdi_rbp, xor_eax_eax, call_0xf@@ 51, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret, lea_rsi_[rip+0x12@@ f@@ 48], lea_rdi_[rip+0x@@ e6@@ 17], call_0xfffffffffffec@@ e@@ 89, mov_rsi_rax, mov_rcx_r15, mov_edx_r14d, mov_rdi_rbp, xor_eax_eax, call_0xf@@ 16, mov_r13_qword_ptr_[r@@ bx], mov_r12d_dword_ptr_[r@@ bx+0x28], mov_edx_5, lea_rsi_[rip+0x12@@ ec@@ e], jmp_0xfffffffffffffd@@ 05, mov_r13_qword_ptr_[r@@ bx], mov_r12d_dword_ptr_[r@@ bx+0x28], mov_edx_5, lea_rsi_[rip+0x12@@ e0@@ e], jmp_0xfffffffffffffc@@ ed, mov_edx_5, lea_rsi_[rip+0x12@@ dc@@ d], lea_rdi_[rip+0xe@@ 5b@@ c], mov_qword_ptr_[rsp+8]_rcx, mov_dword_ptr_[rsp]_r8d, call_0xfffffffffffec@@ e@@ 25, mov_r8d_dword_ptr_[rsp], mov_rcx_qword_ptr_[rsp+8], mov_rsi_rax, mov_edx_r8d, mov_rdi_rbp, xor_eax_eax, call_0xea@@ c, mov_r13_qword_ptr_[r@@ bx], mov_r12d_dword_ptr_[r@@ bx+0x28], mov_edx_5, lea_rsi_[rip+0x12@@ de@@ c], jmp_0xfffffffffffffc@@ 9@@ b
endbr64, push_rbp, mov_rbp_rdi, test_byte_ptr_[r@@ di+@@ 4]@@ _0x80, jne_0x1c, mov_rdi_qword_ptr_[rbp+0x28], test_rdi_rdi, je_7, call_0xfffffffffffecb@@ 39, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffff@@ ec@@ b@@ 30, mov_edi_1, call_0xffffffffffffc@@ 9d@@ 3, mov_edi_dword_ptr_[r@@ bp+0x48], call_0xfffffffffffec@@ f@@ 3b, test_eax_eax, je_0xffffffffffffffd2, mov_rbp_qword_ptr_[r@@ bp+0x40], lea_rsi_[rip+0x12@@ ee@@ 7], lea_rdi_[rip+0x@@ e5@@ 1e], mov_edx_5, call_0xfffffffffffecd@@ 8b, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffffc@@ dc@@ e
endbr64, mov_r11_qword_ptr_[r@@ si], test_r11_r11, je_0x6f, mov_rax_qword_ptr_[r@@ 11@@ +0x10], test_rax_rax, jne_0x23, jmp_0x5@@ 7, mov_qword_ptr_[r@@ 9+0x1@@ 8]_r8, mov_r8_qword_ptr_[r@@ ax+0x18], test_r8_r8, je_6, mov_qword_ptr_[r8+0x@@ 20]@@ _r9, mov_rax_qword_ptr_[rax+0x10], test_rax_rax, je_0x38, mov_r9_qword_ptr_[r@@ ax+0x20], mov_r8_qword_ptr_[r@@ ax+0x18], test_r9_r9, jne_0xffffffffffffffdb, mov_r10_qword_ptr_[r@@ ax+8], test_cl_cl, je_0x13, mov_qword_ptr_[r@@ 10+0x1@@ 9@@ 0]_r8, jmp_0xffffffffffffffd2, mov_qword_ptr_[r@@ 10+0x1@@ 9@@ 8]_r8, jmp_0xffffffffffffffc1, mov_r11_qword_ptr_[r@@ 11+8], test_r11_r11, jne_0xffffffffffffff@@ 99, mov_r10@@ _rdx, test_rdx_rdx, je_0x7a, mov_rax_qword_ptr_[r@@ 10@@ +0x10], mov_qword_ptr_[r@@ 1@@ 0]_rdi, test_rax_rax, jne_0x40, jmp_0x5@@ c, lea_r8_[r@@ 9+0x1@@ 90], mov_r9_qword_ptr_[r@@ 9+0x1@@ 90], mov_qword_ptr_[rax+0x1@@ 8]_r9, mov_qword_ptr_[rax+0x20]_0, mov_r9_qword_ptr_[r@@ 8], test_r9_r9, je_6, mov_qword_ptr_[r@@ 9+0x@@ 20]_rax, mov_qword_ptr_[r@@ 8]_rax, mov_rax_qword_ptr_[rax+0x10], test_rax_rax, je_0x20, mov_r9_qword_ptr_[r@@ ax+8], test_cl_cl, jne_0xffffffffffffffc8, lea_r8_[r@@ 9+0x1@@ 98], mov_r9_qword_ptr_[r@@ 9+0x1@@ 98], jmp_0xffffffffffffffc6, mov_r10_qword_ptr_[r@@ 10+8], test_r10_r10, jne_0xffffffffffffff@@ 91, mov_qword_ptr_[rsi@@ ]_rdx, ret
endbr64, push_r15, pxor_xmm0_xmm0, push_r14, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_0x2@@ e8, mov_qword_ptr_[rsp+0x18]_rsi, lea_r10_[r@@ sp+0x1@@ 60], lea_rbx_[rsp+0x@@ 240], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x2@@ d8]_rax, xor_eax_eax, test_byte_ptr_[r@@ di+@@ 4]_2, lea_rax_[rsp+0x@@ e8], cmovne_rax@@ _r10, mov_qword_ptr_[rsp+0x8@@ 0]_rbx, mov_r15_rax, lea_rax_[rsp+0xa0], mov_qword_ptr_[rsp+8]_rax, mov_qword_ptr_[rdi+0x1@@ 8]_rax, mov_qword_ptr_[rsp+0x40]_rax, lea_rax_[rsp+0x90], mov_qword_ptr_[rsp+0x30]_rax, lea_rax_[rsp+0x40], mov_qword_ptr_[rsp+0x20]_rax, lea_rax_[rsp+0x50], mov_qword_ptr_[rdi+0x@@ 20]@@ _r15, mov_qword_ptr_[rsp+0x4@@ 8]_r15, mov_dword_ptr_[rsp]_0, mov_qword_ptr_[rsp+0x28]_rax, test_rsi_rsi, setne@@ _byte_ptr_[rsp+0x@@ 3f], movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm0, movaps_xmmword_ptr_[rsp+0x70]_xmm0, xor_r12d_r12d, xor_eax_eax, mov_edx_eax, add_eax@@ _0x20, mov_qword_ptr_[rbx@@ +rdx@@ ]_r12, mov_qword_ptr_[rbx@@ +rdx+@@ 8]_r12, mov_qword_ptr_[rbx@@ +rdx+0x1@@ 0]_r12, mov_qword_ptr_[rbx@@ +rdx+0x1@@ 8]_r12, cmp_eax@@ _0x80, jb_0xffffffffffffff@@ e3, add_rax_rbx, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+8]_0, mov_qword_ptr_[rax+0x10]_0, mov_rdi_qword_ptr_[rsp+0x30], call_0x1b@@ e0, mov_rcx_qword_ptr_[rsp+0x20], mov_rsi_qword_ptr_[rsp+0x28], lea_rdx_[rip-0x@@ c8@@ 6], mov_rdi_rbp, call_0xfffffffffffff84@@ 7, test_al_al, je_0x@@ 8a@@ 8, mov_esi_dword_ptr_[r@@ sp], test_esi_esi, je_0xd, cmp_byte_ptr_[rsp+0x@@ 3f@@ ]_0, jne_0x@@ 930, mov_rax_qword_ptr_[rsp+0xa0], lea_rdx_[rip+0x@@ fe@@ 02], mov_rsi_qword_ptr_[rax+8], mov_rdi_rbp, call_0x1@@ 5e@@ 2, test_byte_ptr_[r@@ bp+@@ 4]_2, jne_0x13, test@@ _dword_ptr_[rsp+0x@@ b@@ 8]@@ _0xfffffffd, je_0x4@@ 10, lea_rsi_[r@@ 15+0x20], lea_rdx_[rip+0x@@ eb@@ 6b], mov_rdi_rbp, call_0x16@@ 18, lea_rsi_[r@@ 15+0x28], lea_rdx_[rip+0x12@@ 7c@@ a], mov_rdi_rbp, call_0x1@@ 60@@ 5, mov_rsi_qword_ptr_[r15+0x@@ 58], lea_rdx_[rip+0x12@@ 8@@ 1c], mov_rdi_rbp, call_0x15@@ 92, test_byte_ptr_[r@@ bp+@@ 4]_2, je_0x6@@ 79, mov_rax_qword_ptr_[r15+0x10], mov_eax_dword_ptr_[rax+0x10], test_eax_eax, je_0x3@@ 92, cmp_eax_1, je_0x7@@ f1, cmp_eax_4, jne_0xd, cmp_dword_ptr_[r15+0x@@ c]_1, je_0x9@@ 00, mov_rdi_qword_ptr_[rsp+8], mov_rsi_r15, call_0x2@@ 55@@ 3, mov_rdx_qword_ptr_[r15], mov_qword_ptr_[r15+0x1@@ 8]_rax, test_rdx_rdx, je_0x3e, mov_rax_qword_ptr_[rdx+0x10], test_rax_rax, jne_0x12, jmp_0x28, mov_rax_qword_ptr_[rax+0x10], test_rax_rax, je_0x1a, cmp_qword_ptr_[rax+0x@@ 28]_0, jne_0xfffffffffffffff2, mov_rcx_qword_ptr_[r@@ 15+0x10], mov_qword_ptr_[rax+0x@@ 28]_rcx, mov_rax_qword_ptr_[rax+0x10], test_rax_rax, jne_0xffffffffffffffea, mov_rdx_qword_ptr_[rdx+8], test_rdx_rdx, jne_0xffffffffffffffc8, mov_edx_dword_ptr_[r@@ bp+4], mov_eax_dword_ptr_[rsp+0x@@ b8], mov_ecx_edx, and_ecx@@ _2, jne_0x25, cmp_qword_ptr_[rsp+0x@@ d8]_0, lea_edi_[rax@@ -6], je_0x6@@ e9, test_eax_eax, je_0x@@ 84@@ d, cmp_edi_1, jbe_0x@@ 84@@ 4, mov_rsi_qword_ptr_[rsp+0x1@@ e8], test_rsi_rsi, je_0x5@@ 17, lea_esi_[rax@@ -2], cmp_esi@@ _3, ja_0x6@@ ef, cmp_qword_ptr_[rsp+0x@@ 2@@ 00]_0, je_0xe, sub_eax@@ _5, cmp_eax_1, ja_0x7@@ e4, test_ecx_ecx, je_0x3@@ 6c, cmp_dword_ptr_[r@@ bp@@ ]_1, mov_eax_dword_ptr_[rsp+0x@@ b8], je_0x6@@ 2b, mov_rax_qword_ptr_[rsp+0xa0], mov_rdi_qword_ptr_[rax+8], call_0x1d@@ 69, xor_ecx_ecx, xor_edx_edx, cmp_dword_ptr_[r@@ bp@@ ]_1, mov_r14_rax, je_0x3@@ 81, lea_rax_[r@@ 14+0x10], xor_r13d_r13d, jmp_0x1f, cmp_esi_1, je_0x1d, inc_edx, inc_r13d, mov_rax_qword_ptr_[rax+8], test_rax_rax, je_0x17, mov_esi_dword_ptr_[r@@ ax+0x18], test_esi_esi, je_0xfffffffffffffff2, cmp_dword_ptr_[rax+0x@@ 54]_1, jne_0xffffffffffffffe2, inc@@ _ecx, jmp_0xffffffffffffff@@ e5, cmp_edx_1, jg@@ _0x7@@ 32, test_ecx_ecx, je_0xb, and_edx_1, jne_0x@@ 77@@ 6, mov_rdi_r14, call_0x1a@@ 2f, cmp_eax_r13d, jne_0x@@ 6e@@ f, mov_eax_dword_ptr_[rbp], mov_rdi_r14, cmp_eax_3, je_0x5@@ 48, cmp_eax_1, je_0x4@@ bf, call_0x1@@ a0@@ 9, cmp_eax_1, jle_0x@@ f, mov_eax_dword_ptr_[r15+0x@@ c], cmp_eax_1, jne_0x@@ 7a@@ a, cmp_dword_ptr_[r@@ bp@@ ]_1, je_0x1@@ ce, mov_rdi_r14, call_0x1@@ 9e@@ 5, cmp_eax_1, jne_0x1@@ bd, mov_rdi_r14, call_0x1@@ db@@ 4, cmp_dword_ptr_[rax+0x@@ 54]_1, mov_r13_rax, jne_0x10, cmp_dword_ptr_[r15+0x@@ c]_1, je_0x1@@ a1, mov_ecx_dword_ptr_[r@@ bp+4], lea_rax_[r@@ 13+0x@@ c0], lea_r10_[r@@ 13+0x@@ 48], test_cl@@ _2, cmove_rax@@ _r10, mov_r14_rax, test_cl@@ _0x20, jne_0x2@@ 1d, cmp_dword_ptr_[r@@ bp@@ ]_3, je_0x2@@ 13, mov_rax_qword_ptr_[rsp+0xc8], mov_edx_dword_ptr_[rsp+0x@@ bc], test_rax_rax, je_0x12@@ 7, cmp_byte_ptr_[rax]_0, je_0x1@@ 1e, test_cl@@ _8, je_0x111, mov_rsi_qword_ptr_[r@@ 13+0x28], test_rsi_rsi, je_0x104, cmp_byte_ptr_[rsi]_0, je_0xfb, cmp_edx@@ _6, je_0x15, cmp_dword_ptr_[r@@ 13+0x1@@ c@@ ]_6, je_0xf9, mov_rdx_qword_ptr_[r15], shr_ecx@@ _1, and_ecx_1, mov_rsi_r14, mov_rdi_r13, call_0xfffffffffffffa@@ d7, movdqu_xmm1_xmmword_ptr_[r@@ 15], movups_xmmword_ptr_[r@@ 14@@ ]_xmm1, movdqu_xmm2_xmmword_ptr_[r@@ 15+0x10], movups_xmmword_ptr_[r@@ 14+0x1@@ 0@@ ]_xmm2, movdqu_xmm3_xmmword_ptr_[r@@ 15+0x20], movups_xmmword_ptr_[r@@ 14+0x@@ 20@@ ]_xmm3, movdqu_xmm4@@ _xmmword_ptr_[r@@ 15+0x30], movups_xmmword_ptr_[r@@ 14+0x@@ 30@@ ]_xmm4, movdqu@@ _xmm5@@ _xmmword_ptr_[r@@ 15+0x40], movups_xmmword_ptr_[r@@ 14+0x@@ 40@@ ]_xmm5, movdqu@@ _xmm6@@ _xmmword_ptr_[r@@ 15+0x@@ 50], movups_xmmword_ptr_[r@@ 14+0x@@ 50@@ ]_xmm6, movdqu@@ _xmm7@@ _xmmword_ptr_[r@@ 15+0x@@ 60], movups_xmmword_ptr_[r@@ 14+0x@@ 60@@ ]_xmm7, mov_rax_qword_ptr_[r15+0x@@ 70], mov_qword_ptr_[r14+0x@@ 70]_rax, mov_eax_dword_ptr_[rbp+4], test_al_2, je_0x1@@ fa, test_al_0x10, jne_0x11, mov_rax_qword_ptr_[rsp+0x1@@ e0], mov_qword_ptr_[r13+0x1@@ 40]_rax, mov_rax_qword_ptr_[rsp+0x18], test_rax_rax, je_5, mov_qword_ptr_[rax]_r13, mov_rax_qword_ptr_[rbp+0x@@ 38], inc_dword_ptr_[r@@ sp], cmp_qword_ptr_[rbp+0x@@ 30]_rax, jb_0xffffffffffff@@ fc@@ 09, lea_rdi_[rsp+0x60], call_0x5a@@ 1e, mov_rax_qword_ptr_[rsp+0x@@ 2d8], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ 6d@@ 4, mov_eax_dword_ptr_[rsp], add_rsp_0x2@@ e8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_qword_ptr_[r13+0x@@ 28]_rax, cmp_edx@@ _6, je_0xffffffffffffff@@ 1c, test_cl@@ _8, jne_0xffffffffffffff@@ 08, mov_dword_ptr_[r13+0x1@@ c]_edx, cmp_dword_ptr_[rsp+0x@@ bc@@ ]_5, jne_0xe, mov_rax_qword_ptr_[rsp+0xc0], mov_qword_ptr_[r13+0x@@ 20]_rax, mov_ecx_dword_ptr_[r@@ bp+4], jmp_0xfffffffffffffef0, mov_rsi_qword_ptr_[r@@ 15+0x10], mov_rdi_r14, call_0x1c@@ e9, mov_r13_rax, jmp_0xfffffffffffffe@@ 59, mov_edx_5, lea_rsi_[rip+0x12@@ 40@@ 9], lea_rdi_[rip+0xd@@ ea@@ 3], call_0xfffffffffffec@@ 7@@ 15, mov_rsi_rax, lea_rdx_[rip+0x12@@ 40@@ 6], mov_rdi_rbp, xor_eax_eax, call_0x85@@ 1, mov_rax_qword_ptr_[r15+0x10], mov_eax_dword_ptr_[rax+0x10], test_eax_eax, jne_0x13, mov_edi_1, call_0x5e@@ 9c, mov_qword_ptr_[r15+0x1@@ 0]_rax, mov_eax_dword_ptr_[rax+0x10], cmp_eax_1, jne_0xfffffffffffffc@@ 32, cmp_dword_ptr_[r15+0x@@ c]_1, jne_0xfffffffffffffc@@ 37, mov_edx_5, lea_rsi_[rip+0x12@@ 8@@ 70], lea_rdi_[rip+0x@@ de@@ 47], call_0xfffffffffffec@@ 6b@@ 9, mov_rsi_rax, lea_rdx_[rip+0x12@@ 3d@@ 2], mov_rdi_rbp, xor_eax_eax, call_0x7@@ 45, lea_rsi_[r@@ 14+0x@@ 50], mov_rdi_rsi, mov_qword_ptr_[rsp+0x10]_rsi, call_0x5b@@ 64, test_al_al, mov_rsi_qword_ptr_[rsp+0x10], jne_0x3@@ 28, mov_ecx_dword_ptr_[r@@ bp+4], jmp_0xfffffffffffffdd@@ 2, mov_eax_dword_ptr_[rsp+0x@@ b8], test_eax_eax, je_0x2@@ 2f, cmp_dword_ptr_[r@@ bp@@ ]_1, je_0xfffffffffffffc@@ 98, and_edx_2, or_edx_eax, jne_0xfffffffffffffc@@ 8d, mov_rax_qword_ptr_[rsp+0xb0], test_rax_rax, jne_0xfffffffffffffc@@ 7c, mov_rdi_r15, call_0x1@@ 47@@ 8, jmp_0xfffffffffffffc@@ 6e, mov_eax_dword_ptr_[rsp+0x@@ b8], test_eax_eax, je_0x3@@ 4f, cmp_dword_ptr_[r15+0x@@ c]_1, je_0x10, mov_edx_1, cmp_eax_1, jne_0xfffffffffffffc@@ 67, mov_ecx_1, xor_edx_edx, jmp_0xfffffffffffffc@@ 5a, mov_esi_dword_ptr_[rsp+0x@@ b0], call_0x14@@ 19, mov_r14_qword_ptr_[rsp+8], mov_rdi_r13, mov_rsi_r14, call_0x1@@ 3f@@ 9, mov_esi_dword_ptr_[rsp+0x@@ b8], mov_rdi_r13, call_0x1@@ 34@@ a, movdqa_xmm0_xmmword_ptr_[rsp+0x@@ d0], mov_rcx_qword_ptr_[rsp+0x1@@ e8], movups_xmmword_ptr_[r@@ 13+0x@@ 30]_xmm0, mov_rax_qword_ptr_[rsp+0x@@ e0], movdqu_xmm0_xmmword_ptr_[r@@ sp+0x1@@ e8], mov_qword_ptr_[r13+0x@@ 40]_rax, mov_rax_qword_ptr_[rsp+0x@@ 200], mov_qword_ptr_[r13+0x1@@ 40]_0, mov_qword_ptr_[r13+0x1@@ 60]_rax, movups_xmmword_ptr_[r@@ 13+0x1@@ 48@@ ]_xmm0, test_rcx_rcx, je_0xfffffffffffffd@@ a4, mov_rax_r14, jmp_0x1c, mov_qword_ptr_[rcx@@ ]_r13, mov_rcx_qword_ptr_[r@@ cx+0x18], test_rcx_rcx, je_0xfffffffffffffd@@ 85, cmp_qword_ptr_[rcx@@ ]_rax, je_0xffffffffffffffed, mov_rdi_qword_ptr_[rsp+8], mov_edx_3, mov_rsi_r15, mov_qword_ptr_[rsp]_rcx, call_0x20@@ ea, mov_rcx_qword_ptr_[rsp], mov_esi_3, mov_rdi_qword_ptr_[r@@ cx], mov_rbx_rax, call_0x2@@ 14@@ 6, mov_r8_rax, mov_r9_rbx, lea_rcx_[rip+0x12@@ a0@@ c], lea_rdx_[rip+0x12@@ a7@@ d], mov_esi_0x1@@ e9, lea_rdi_[rip+0x12@@ 250], xor_eax_eax, call_0xffffffffffffc@@ 22@@ f, cmp_eax_5, je_0x4@@ 0b, cmp_qword_ptr_[rsp+0x@@ 2@@ 00]_0, jne_0xfffffffffffffa@@ f4, cmp_eax_6, je_0x3@@ d5, or_eax_ecx, jne_0xfffffffffffffa@@ ef, cmp_qword_ptr_[r15+0x@@ 68]_0, je_0x8a, mov_rdi_qword_ptr_[rsp+8], call_0x2@@ 1e@@ 7, mov_edx_5, lea_rsi_[rip+0x12@@ 7b@@ e], lea_rdi_[rip+0x@@ dc@@ 2d], mov_r13_rax, call_0xfffffffffffec@@ 4@@ 9c, mov_rsi_rax, mov_rdx_r13, mov_rdi_rbp, xor_eax_eax, call_0x5d@@ c, mov_edx_dword_ptr_[r@@ bp+4], mov_qword_ptr_[r15+0x@@ 68]_0, mov_ecx_edx, and_ecx@@ _2, jmp_0xfffffffffffffa@@ 99, mov_edx_dword_ptr_[rsp+0x@@ b8], test_edx_edx, jne_0xfffffffffffffb@@ 3e, call_0x1@@ 54@@ 1, jmp_0xfffffffffffffb@@ 4a, cmp_dword_ptr_[rsp+0x@@ b8@@ ]_2, ja_0xfffffffffffff@@ 98@@ 5, jmp_0xfffffffffffffd@@ 46, mov_ecx_dword_ptr_[rsp+0x@@ b4], test_ecx_ecx, jne_0x11, mov_eax_dword_ptr_[rsp+0x@@ b0], sub_eax_2, cmp_eax_2, jbe_0x@@ 60, xor_eax_eax, cmp_dword_ptr_[r@@ bp@@ ]_1, jne_0xfffffffffffffd@@ c1, mov_rax_qword_ptr_[rsp+0xb0], cmp_rax_1, je_0x7c, test_byte_ptr_[r@@ bp+@@ 4]_2, je_0xfffffffffffffd@@ bc, jmp_0xfffffffffffffa@@ 35, call_0x1@@ 4d@@ 0, cmp_eax_1, jne_0xfffffffffffffc@@ a8, cmp_dword_ptr_[r15+0x@@ c]_1, je_0xfffffffffffffc@@ 9d, mov_rdi_r14, call_0x18@@ 94, mov_r13_rax, jmp_0xfffffffffffffa@@ f4, mov_rdi_qword_ptr_[rsp+8], xor_esi_esi, call_0x1@@ 1e@@ 9, cmp_dword_ptr_[r@@ bp@@ ]_1, mov_eax_dword_ptr_[rsp+0x@@ b8], jne_0x40, test_eax_eax, jne_0xfffffffffffff@@ 9d@@ 9, mov_rax_qword_ptr_[rsp+0xb0], cmp_rax_1, jne_0xffffffffffffff@@ 88, mov_rdx_qword_ptr_[r15+0x10], cmp_dword_ptr_[r@@ dx+0x1@@ 0]_1, jne_0xffffffffffffff@@ 7e, mov_rdi_qword_ptr_[rsp+8], xor_esi_esi, call_0x1@@ 1a@@ 5, mov_eax_dword_ptr_[rsp+0x@@ b8], mov_edx_dword_ptr_[r@@ bp+4], jmp_0xfffffffffffffd@@ 0f, lea_rdi_[r@@ 15+0x@@ 50], call_0x58@@ 5c, test_eax_eax, jns_0xffffffffffff@@ fc@@ d3, jmp_0xfffffffffffff7@@ 9f, mov_rsi_qword_ptr_[rsp+0x1@@ e8], cmp_edi_1, ja_0xfffffffffffff@@ 92@@ b, movdqu_xmm0_xmmword_ptr_[r@@ 15+0x@@ 50], mov_rdi_qword_ptr_[r15+0x@@ 60], movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm0, mov_qword_ptr_[rsp+0xe@@ 0]_rdi, test_rsi_rsi, je_0xfffffffffffffe@@ 2b, mov_rdi_qword_ptr_[rsp+8], call_0x20@@ 37, mov_r12_rax, mov_edx_5, lea_rsi_[rip+0x12@@ 54@@ b], lea_rdi_[rip+0x@@ da@@ 7a], call_0xfffffffffffec@@ 2e@@ c, mov_rsi_rax, mov_rdx_r12, mov_rdi_rbp, xor_eax_eax, call_0x37@@ c, mov_ecx_edx, jmp_0xfffffffffffff92@@ b, mov_edx_5, lea_rsi_[rip+0x11@@ fc@@ 1], jmp_0xfffffffffffffb@@ 98, lea_rdi_[rsp+0x60], call_0x55@@ 13, mov_eax_dword_ptr_[rsp], test_eax_eax, jne_0xfffffffffffffa@@ f0, cmp_byte_ptr_[rsp+0x@@ 3f@@ ]_0, je_0xfffffffffffffa@@ e5, mov_rbp_qword_ptr_[r@@ bp+0x40], lea_rsi_[rip+0x12@@ 7b@@ d], lea_rdi_[rip+0xd@@ a0@@ 4], mov_edx_5, call_0xfffffffffffec@@ 27@@ 1, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffffc@@ 1e@@ 4, mov_r8_qword_ptr_[r@@ 14+8], lea_rcx_[rip+0x12@@ 69@@ 5], lea_rdx_[rip+0x12@@ 7c@@ 6], mov_esi_0x1@@ 6e, lea_rdi_[rip+0x11@@ f8@@ 9], xor_eax_eax, call_0xffffffffffffbf@@ 68, mov_edx_5, lea_rsi_[rip+0x12@@ 57@@ f], lea_rdi_[rip+0xd@@ 9a@@ e], call_0xfffffffffffec@@ 220, mov_rsi_rax, mov_rdi_rbp, xor_eax_eax, call_0x2@@ b3, mov_edx_5, lea_rsi_[rip+0x12@@ 37@@ a], jmp_0xffffffffffffffdb, mov_rdi_qword_ptr_[rsp+8], call_0x1f@@ 2b, mov_r12_rax, mov_edx_5, lea_rsi_[rip+0x12@@ 49@@ f], jmp_0xfffffffffffffef4, mov_edx_5, lea_rsi_[rip+0x12@@ 59@@ e], jmp_0xffffffffffffffaf, mov_edx_5, lea_rsi_[rip+0x12@@ 3e0], lea_rdi_[rip+0xd@@ 94@@ f], call_0xfffffffffffec@@ 1c@@ 1, mov_rsi_rax, lea_rcx_[rip+0x@@ 11@@ ee@@ b], lea_rdx_[rip+0x11@@ ee@@ b], mov_rdi_rbp, xor_eax_eax, call_0x2@@ 46, mov_edx_5, lea_rsi_[rip+0x12@@ 37@@ d], lea_rdi_[rip+0xd@@ 9@@ 1c], call_0xfffffffffffec@@ 18@@ e, mov_rsi_rax, lea_rcx_[rip+0x@@ da@@ 5c], lea_rdx_[rip+0x11@@ ea@@ 0], mov_rdi_rbp, xor_eax_eax, call_0x2@@ 13, lea_rdx_[rip+0x@@ 1f@@ 5f@@ 7], shl_rax_4, lea_rdi_[r@@ 15+0x@@ 50], mov_esi_1, mov_r13_qword_ptr_[r@@ dx+rax], mov_rbx_qword_ptr_[r@@ 14+8], call_0x77@@ 2, mov_rdi_qword_ptr_[rsp+8], mov_edx_3, mov_rsi_r15, mov_r12_rax, call_0x1c@@ ed, mov_edx_5, lea_rsi_[rip+0x12@@ 5b@@ 4], lea_rdi_[rip+0xd@@ 8b@@ 3], mov_rbp_rax, call_0xfffffffffffec@@ 12@@ 2, mov_rdi_rax, mov_r9_rbx, mov_r8_r13, lea_rcx_[rip+0x@@ 11@@ e7@@ 6], mov_rdx_r12, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffffc0@@ 85, mov_rdi_qword_ptr_[rsp+8], call_0x1e@@ 2b, mov_r12_rax, mov_edx_5, lea_rsi_[rip+0x12@@ 3c@@ f], jmp_0xfffffffffffffd@@ f4, mov_rdi_qword_ptr_[rsp+8], call_0x1@@ e0@@ d, mov_r12_rax, mov_edx_5, lea_rsi_[rip+0x12@@ 35@@ 1], jmp_0xfffffffffffffdd@@ 6, call_0xfffffffffffec0@@ f@@ 4
endbr64, push_r12, mov_r12_rdx, push_rbp, sub_rsp_8, call_0xffffffffffffeb@@ 22, mov_rbp_rax, mov_rdi_rax, call_0xffffffffffffe@@ bc@@ 7, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffff4@@ 1c, mov_rdi_rbp, mov_r12d_eax, call_0xfffffffffffff2a@@ 1, add_rsp_8, pop_rbp, mov_eax_r12d, pop_r12, ret
push_r13, mov_edx_0x100, push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_0x2@@ 18, mov_rsi_qword_ptr_[r@@ di+0x40], mov_r12_rsp, mov_rdi_r12, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x20@@ 8]_rax, xor_eax_eax, call_0x2@@ 6e@@ b, mov_rdi_qword_ptr_[rbx+0x18], test_rdi_rdi, je_0x5f, mov_rax_qword_ptr_[rdi], cmp_qword_ptr_[rax+8]_0, je_0x55, mov_rsi_qword_ptr_[rbx+0x20], mov_edx_1, call_0x1@@ bc@@ a, lea_r13_[r@@ sp+0x100], mov_rsi_rax, mov_edx_0x100, mov_rdi_r13, call_0x2@@ 6b@@ 2, mov_edx_5, lea_rsi_[rip+0x12@@ 58@@ 9], lea_rdi_[rip+0x@@ d7@@ 78], mov_ebx_dword_ptr_[r@@ bx+0x@@ 4c], call_0xfffffffffffeb@@ fe@@ 7, push_rbp, mov_rcx_rax, push_r13, jmp_0x2f, mov_edx_5, lea_rsi_[rip+0x12@@ 5@@ 9c], lea_rdi_[rip+0xd@@ 74@@ b], mov_ebx_dword_ptr_[r@@ bx+0x@@ 4c], call_0xfffffffffffeb@@ fb@@ a, sub_rsp_8, push_rbp, mov_rcx_rax, mov_edx_0x400, xor_eax_eax, mov_r9d_ebx, mov_r8_r12, mov_esi_1, lea_rdi_[rip+0x24@@ cc@@ 4], call_0xfffffffffffec@@ 6e@@ 4, pop_rax, pop_rdx, mov_rax_qword_ptr_[rsp+0x@@ 208], xor_rax_qword_ptr_fs:[0x28], jne_0x17, add_rsp_0x2@@ 18, pop_rbx, pop_rbp, pop_r12, lea_rax_[rip+0x24@@ c@@ 98], pop_r13, ret, call_0xfffffffffffeb@@ f9@@ 5
endbr64, push_rax, pop_rax, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]_0x10, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffffe@@ 5e, mov_rdi_rax, mov_rsi_rsp, call_0xffffffffffffb@@ ef@@ 3
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]_0x10, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffffd@@ b0, mov_rdi_rax, mov_rsi_rsp, call_0x1f@@ 35, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xfffffffffffe@@ be@@ 2@@ 8
endbr64, push_rbx, mov_rbx_rdi, sub_rsp_0x@@ e0, mov_qword_ptr_[rsp+0x40]_rdx, mov_qword_ptr_[rsp+0x48]_rcx, mov_qword_ptr_[rsp+0x50]_r8, mov_qword_ptr_[rsp+0x58]_r9, test_al_al, je_0x3c, movaps_xmmword_ptr_[rsp+0x60]_xmm0, movaps_xmmword_ptr_[rsp+0x70@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+0x18]_rax, mov_rdi_rbx, lea_rax_[rsp+0x30], mov_dword_ptr_[rsp+0x10]@@ _0x10, mov_dword_ptr_[rsp+0x14]@@ _0x30, mov_qword_ptr_[rsp+0x20]_rax, call_0xfffffffffffffc@@ e5, mov_rsi_rax, lea_rdx_[rsp+0x10], lea_rdi_[rsp+8], call_0xffffffffffffc@@ ef@@ 3, cmp_dword_ptr_[rbx+@@ 8]_1, mov_rdx_qword_ptr_[rbx+0x10], mov_rsi_qword_ptr_[rsp+8], lea_rdi_[rip+0x10@@ c@@ 1a], mov_eax_0, jne_0x2a, call_0x1@@ eb@@ 3, mov_rdi_qword_ptr_[rsp+8], call_0xfffffffffffeba@@ 89, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x10, add_rsp_0x@@ e0, pop_rbx, ret, call_0xffffffffffffbc@@ 7b, call_0xfffffffffffe@@ bd@@ 2@@ 6
endbr64, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rdi_qword_ptr_[rdi], test_rdi_rdi, je_0x29, mov_rbp_rsi, jmp_0x15, mov_rdi_qword_ptr_[rbx+0x28], add_rbx@@ _0x28, test_rdi_rdi, je_0x11, mov_rsi_rbp, call_0xfffffffffffeba@@ d0, test_eax_eax, jne_0xffffffffffffffe9, mov_rdi_rbx, add_rsp_8, pop_rbx, mov_rax_rdi, pop_rbp, ret
endbr64, test_rdi_rdi, je_0x4a, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, jmp_0x13, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, je_0x22, mov_rdi_qword_ptr_[rbx+8], mov_rsi_rbp, call_0xfffffffffffeba@@ 81, test_eax_eax, jne_0xffffffffffffffea, add_rsp_8, mov_rax_rbx, pop_rbx, pop_rbp, ret, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret, xor_eax_eax, ret
endbr64, push_r12, mov_edx_5, lea_rsi_[rip+0x12@@ 3c@@ 3], push_rbp, push_rbx, mov_rbx_rdi, movsx_edi@@ _byte_ptr_[rdi], test_dil_dil, je_0x67, mov_esi@@ _0x38, call_0xffffffffffff8@@ 33@@ c, test_al_al, je_0x4d, lea_rbp_[r@@ bx+1], movsx_ebx@@ _byte_ptr_[rbx], lea_r12_[rip+0x@@ 12@@ 4a@@ 3], test_ebx_ebx, je_0x2d, mov_esi@@ _0x38, mov_edi_ebx, call_0xffffffffffff8@@ 3@@ 19, test_al_al, jne_0x11, mov_esi_ebx, mov_rdi_r12, call_0xfffffffffffe@@ bc@@ 6b, test_rax_rax, je_0x3b, movsx_ebx@@ _byte_ptr_[r@@ bp], inc_rbp, test_ebx_ebx, jne_0xffffffffffffffd8, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret, mov_edx_5, lea_rsi_[rip+0x12@@ 1c@@ 4], pop_rbx, pop_rbp, lea_rdi_[rip+0xd@@ 34@@ 1], pop_r12, jmp_0xfffffffffffe@@ bb@@ b1, mov_edx_5, lea_rsi_[rip+0x12@@ 1d@@ 4], lea_rdi_[rip+0xd@@ 32@@ 3], call_0xfffffffffffebb@@ 95, mov_r8_rax, sub_rsp_8, lea_rax_[rip+0x@@ 12@@ 420], push_rax, mov_r9d_ebx, mov_edx_1, mov_ecx_0x@@ 96, mov_esi_0x@@ 96, lea_rdi_[rip+0x24@@ 7f@@ 8], xor_eax_eax, call_0xfffffffffffeb@@ 95@@ 6, pop_rax, pop_rdx, pop_rbx, pop_rbp, lea_rax_[rip+0x24@@ 7e@@ 6], pop_r12, ret
endbr64, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, sub_rsp_0x10, cmp_edx_1, je_0xc3, cmp_edx_2, je_0x32, test_edx_edx, je_0x41, mov_r8d_edx, lea_rcx_[rip+0x12@@ 1a@@ 2], lea_rdx_[rip+0x12@@ 3a@@ b], mov_esi_0xa@@ 1, lea_rdi_[rip+0x12@@ 2c0], xor_eax_eax, call_0xffffffffffffb8@@ 3d, mov_edx_dword_ptr_[rsi], lea_rsi_[rip+0x12@@ 2a@@ 4], mov_rdi_rbp, xor_eax_eax, call_0x4b@@ 62, mov_r12_qword_ptr_[r@@ bx+8], test_r12_r12, je_0x18, mov_rdi_r12, call_0xfffffffffffebb@@ 01, mov_rdx_rax, mov_rsi_r12, mov_rdi_rbp, call_0x4@@ c0@@ 3, mov_r12_qword_ptr_[r@@ bx+0x10], test_r12_r12, je_0x3f, cmp_byte_ptr_[r12]_0, je_0x38, mov_esi_0x2d, mov_rdi_rbp, call_0x4@@ 9c@@ 6, mov_r12_qword_ptr_[r@@ bx+0x10], mov_rdi_r12, call_0xfffffffffffeba@@ ca, add_rsp_0x10, pop_rbx, mov_rdi_rbp, pop_rbp, mov_rsi_r12, mov_rdx_rax, pop_r12, jmp_0x4@@ bc@@ 4, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, ret, mov_edx_dword_ptr_[rsi], test_edx_edx, jne_0xffffffffffffff@@ 76, mov_r12_qword_ptr_[r@@ si+8], mov_dword_ptr_[rsp+0xc]_edx, test_r12_r12, je_0x53, mov_esi_0x3a, mov_rdi_r12, call_0xfffffffffffeba@@ d9, test_rax_rax, mov_edx_dword_ptr_[rsp+0xc], jne_0xffffffffffffff@@ 4f, mov_rdi_qword_ptr_[rbx+0x10], test_rdi_rdi, je_0xffffffffffffff@@ 5c, mov_esi_0x3a, mov_dword_ptr_[rsp+0xc]_edx, call_0xfffffffffffeba@@ b1, test_rax_rax, mov_edx_dword_ptr_[rsp+0xc], jne_0xffffffffffffff@@ 27, jmp_0xffffffffffffff3b, mov_r12_qword_ptr_[r@@ si+0x10], test_r12_r12, je_0xffffffffffffff@@ 81, mov_esi_0x3a, mov_rdi_r12, call_0xfffffffffffeba@@ 7b, test_rax_rax, mov_edx_dword_ptr_[rsp+0xc], jne_0xfffffffffffffe@@ f1, jmp_0xffffffffffffff2@@ 4
endbr64, push_r12, mov_r12d_esi, push_rbp, mov_rbp_rdi, push_rbx, call_0x4@@ ea@@ 2, test_al_al, je_0x5b, movsxd_rax_dword_ptr_[rip+0x2@@ 4@@ 64@@ 2], lea_rcx_[rax@@ +rax*2], mov_rdx_rax, lea_rax_[rip+0x24@@ 54@@ 4], lea_rbx_[rax@@ +rcx*8], cmp_edx@@ _9, lea_eax_[rdx+1], mov_edx_0, cmove_eax_edx, mov_rdi_rbx, mov_dword_ptr_[rip+0x2@@ 46@@ 19@@ ]_eax, call_0x48@@ 39, mov_edx_r12d, mov_rsi_rbp, mov_rdi_rbx, call_0xfffffffffffffe@@ 3b, mov_rdi_rbx, call_0x4a@@ f3, mov_rax_qword_ptr_[rbx+0x10], pop_rbx, pop_rbp, pop_r12, ret, mov_edx_5, lea_rsi_[rip+0x12@@ 13@@ 3], lea_rdi_[rip+0x@@ d0@@ eb], call_0xfffffffffffeb@@ 95@@ d, lea_rdx_[rip+0x12@@ 120], pop_rbx, cmp_rax_rdx, pop_rbp, lea_rdx_[rip+0x13@@ 0@@ cf], cmove_rax_rdx, pop_r12, ret
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_0x18, movsx_edi_byte_ptr_[r@@ si], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, test_dil_dil, jne_0x1f, jmp_0x2@@ 05, movsx_edi_byte_ptr_[r@@ bp+1], inc_rbp, test_dil_dil, je_0x1@@ ee, mov_esi_1, call_0xffffffffffff7@@ ff@@ b, test_al_al, jne_0xffffffffffffffe4, movsx_edi_byte_ptr_[r@@ bp], test_dil_dil, je_0x1@@ d3, mov_r13_rbp, jmp_0xf, movsx_edi_byte_ptr_[r@@ 13+1], inc@@ _r13, test_dil_dil, je_0x56, mov_esi_1, call_0xffffffffffff7@@ fc@@ e, test_al_al, je_0xffffffffffffffe7, movsx_edi_byte_ptr_[r@@ 13], test_dil_dil, je_0x3e, mov_r14_r13, jmp_0x15, movsx_edi_byte_ptr_[r@@ 14+1], inc@@ _r14, test_dil_dil, je_0x26, mov_esi_1, call_0xffffffffffff7f@@ 9e, test_al_al, jne_0xffffffffffffffe7, cmp_byte_ptr_[r14]_0, mov_edx_5, lea_rsi_[rip+0x11@@ f0@@ d], jne_0x1@@ 79, mov_esi_0x3a, mov_rdi_rbp, call_0xfffffffffffeb@@ 8d@@ 7, mov_r14_rax, test_rax_rax, je_0x6c, call_0xfffffffffffeb@@ 6@@ 9a, mov_dword_ptr_[rax]_0, mov_edx_0xa, mov_rsi_rsp, mov_rdi_rbp, mov_r15_rax, call_0xfffffffffffebb@@ 51, mov_rdx_qword_ptr_[rsp], cmp_rdx@@ _rbp, je_0x2@@ 4d, cmp_rdx@@ _r14, jne_0x1@@ 6c, test_rax_rax, js_0x2@@ 4c, cmp_rax@@ _0x7fffffff, jg_0x1@@ e3, cmp_dword_ptr_[r@@ 15]@@ _0x22, je_0x1@@ d9, cmp_byte_ptr_[rdx+@@ 1]_0, lea_rbp@@ _[rdx+1], je_0x2@@ 39, mov_dword_ptr_[rbx]_eax, jmp_0xd, mov_dword_ptr_[rbx]_0, mov_rsi_r13, sub_rsi@@ _rbp, mov_rdi_rbp, call_0xffffffffffffcf@@ 41, mov_qword_ptr_[rbx+8]_rax, mov_esi_0x2d, mov_rdi_rax, mov_r13_rax, call_0xfffffffffffeb@@ 87@@ d, test_rax_rax, je_0x1@@ 85, cmp_byte_ptr_[rax+1]_0, mov_byte_ptr_[rax]_0, lea_rdx_[rax+1], je_0x1@@ 91, mov_r13_qword_ptr_[r@@ bx+8], mov_qword_ptr_[rbx+0x1@@ 0]_rdx, lea_rsi_[rip+0x11@@ fd@@ 9], mov_edx_5, movsx_edi_byte_ptr_[r@@ 13], test_dil_dil, je_0x96, mov_esi_0x20, lea_rbp_[r@@ 13+1], call_0xffffffffffff7e@@ 93, test_al_al, je_0x1@@ 6a, movsx_edi_byte_ptr_[r@@ 13+1], lea_r13_[rip+0x@@ 11@@ fb@@ c], test_dil_dil, jne_0x17, jmp_0x@@ b5, movsx_edi_byte_ptr_[r@@ bp+1], inc_rbp, test_dil_dil, je_0xa6, mov_esi_0x20, call_0xffffffffffff7e@@ 5b, test_al_al, jne_0xffffffffffffffe4, movsx_edi_byte_ptr_[r@@ bp], mov_esi_0x18, call_0xffffffffffff7e@@ 49, test_al_al, jne_0xffffffffffffffd2, movsx_esi_byte_ptr_[r@@ bp], mov_rdi_r13, call_0xfffffffffffeb@@ 7@@ 99, test_rax_rax, jne_0xffffffffffffffc1, mov_edx_5, lea_rsi_[rip+0x11@@ e4@@ b], jmp_0x1@@ 0d, mov_edx_5, lea_rsi_[rip+0x11@@ f@@ 58], lea_rdi_[rip+0x@@ ce@@ 73], call_0xfffffffffffeb@@ 6e@@ 5, mov_rsi_rax, mov_rdi_r12, xor_eax_eax, call_0x5a@@ b8, mov_rcx_qword_ptr_[rsp+8], xor_rcx_qword_ptr_fs:[0x28], jne_0x12@@ 0, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_edx_5, lea_rsi_[rip+0x1@@ 1d@@ 74], jmp_0xffffffffffffffb8, mov_rbx_qword_ptr_[rbx+0x10], lea_rbp_[rip+0x@@ 11@@ e@@ fd], movsx_edi_byte_ptr_[rbx], test_dil_dil, jne_0x13, jmp_0x5@@ 5, movsx_edi_byte_ptr_[r@@ bx+1], inc_rbx, test_dil_dil, je_0x46, mov_esi_0x20, call_0xffffffffffff7d@@ 97, test_al_al, jne_0xffffffffffffffe8, movsx_edi_byte_ptr_[rbx], mov_esi_0x18, call_0xffffffffffff7d@@ 86, test_al_al, jne_0xffffffffffffffd7, movsx_esi@@ _byte_ptr_[rbx], mov_rdi_rbp, call_0xfffffffffffeb@@ 6d@@ 7, test_rax_rax, jne_0xffffffffffffffc7, mov_edx_5, lea_rsi_[rip+0x1@@ 1d@@ b1], jmp_0x4b, xor_eax_eax, jmp_0xffffffffffffff63, lea_rdx_[rip+0xd@@ 78@@ 3], jmp_0xfffffffffffffe@@ 8f, mov_edx_5, lea_rsi_[rip+0x11@@ e@@ 2d], jmp_0xffffffffffffff2c, mov_edx_5, lea_rsi_[rip+0x11@@ e@@ 38], jmp_0xffffffffffffff1b, mov_edx_5, lea_rsi_[rip+0x1@@ 1d@@ 0e], lea_rdi_[rip+0x@@ cd@@ 7d], call_0xfffffffffffeb@@ 5e@@ f, mov_rsi_rax, mov_rdi_r12, xor_eax_eax, call_0x58@@ c2, jmp_0xffffffffffffff0a, mov_edx_5, lea_rsi_[rip+0x1@@ 1d@@ aa], jmp_0xfffffffffffffee0, mov_edx_5, lea_rsi_[rip+0x1@@ 1d@@ b3], jmp_0xfffffffffffffecf, mov_edx_5, lea_rsi_[rip+0x11@@ c9@@ a], jmp_0xfffffffffffffe@@ be, call_0xfffffffffffeb@@ 5d@@ 5
endbr64, push_r13, lea_r13_[r@@ di+8], push_r12, mov_r12_rdx, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, mov_rdi_r13, sub_rsp_8, call_0x5c@@ c2, mov_rdx_r13, mov_rsi_r12, mov_rdi_rbp, call_0xfffffffffffffc@@ 44, test_eax_eax, je_0x14, mov_eax_0xffffffff, test_byte_ptr_[r@@ bx+@@ 4]_0x40, jne_9, mov_dword_ptr_[rbx+@@ 8]_2, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret
endbr64, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, sub_rsp_8, test_rsi_rsi, je_0xf, cmp_byte_ptr_[rsi]_0, je_0x32, add_rsp_8, pop_rbp, pop_r12, ret, mov_edx_5, lea_rsi_[rip+0x11@@ 1@@ fe], lea_rdi_[rip+0x@@ cc@@ 98], call_0xfffffffffffeb@@ 50@@ a, mov_rsi_rax, mov_rdx_r12, mov_rdi_rbp, xor_eax_eax, call_0xfffffffffffff5@@ 9a, mov_edx_5, lea_rsi_[rip+0x11@@ 1f@@ 6], jmp_0xffffffffffffffd@@ 8
endbr64, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, push_rbx, mov_rax_qword_ptr_[rsi], test_rax_rax, je_0x3c, cmp_byte_ptr_[rax]_0, je_7, pop_rbx, pop_rbp, pop_r12, ret, mov_edx_5, lea_rsi_[rip+0x11@@ 1c@@ 1], lea_rdi_[rip+0x@@ cc@@ 3b], call_0xfffffffffffeb@@ 4a@@ d, pop_rbx, mov_rdi_rbp, pop_rbp, mov_rsi_rax, mov_rdx_r12, xor_eax_eax, pop_r12, jmp_0xfffffffffffff@@ 5e@@ 9, mov_rbx_rsi, mov_edx_5, lea_rsi_[rip+0x11@@ 16@@ e], lea_rdi_[rip+0x@@ cc@@ 08], call_0xfffffffffffeb@@ 47@@ a, mov_rsi_rax, mov_rdx_r12, mov_rdi_rbp, xor_eax_eax, call_0xfffffffffffff5b@@ a, lea_rax_[rip+0x@@ 11@@ ce@@ 6], mov_qword_ptr_[rbx]_rax, pop_rbx, pop_rbp, pop_r12, ret
endbr64, xor_eax_eax, test_rdi_rdi, je_0x4f, cmp_byte_ptr_[rdi]_0, push_rbx, mov_rbx_rdi, je_0x3d, call_0xfffffffffffeb@@ 45@@ c, dec_rax, lea_rdx_[r@@ bx+rax], test_rax_rax, jle_0x@@ 29, movzx_ecx_byte_ptr_[rdx], cmp_cl@@ _0x2f, je_0xd, cmp_byte_ptr_[rdx@@ -1]_0x2f, jne_0x18, cmp_cl@@ _0x2e, jne_0x13, mov_byte_ptr_[rdx]_0, dec@@ _rdx, mov_rax_rdx, sub_rax_rbx, test_rax_rax, jg_0xffffffffffffff@@ de, inc_rax, pop_rbx, ret, ret
endbr64, movzx_edx_byte_ptr_[rdi], mov_rax_rdi, jmp_0x16, cmp_byte_ptr_[rax+1]@@ _0x2f, jne_0x16, inc_rax, movzx_edx_byte_ptr_[rax+1], inc_rax, cmp_dl@@ _0x2f, je_0xfffffffffffffff6, cmp_dl@@ _0x2e, je_0xffffffffffffffe8, ret
endbr64, push_rbx, mov_esi_0x2f, mov_rbx_rdi, call_0xfffffffffffeb@@ 47@@ 3, lea_rdi_[rax+1], test_rax_rax, mov_rax_rbx, cmovne_rax@@ _rdi, pop_rbx, ret
endbr64, push_r12, mov_r12_rdi, lea_rdi_[rip+0x11@@ c@@ 28], call_0xfffffffffffeb@@ 130, test_rax_rax, mov_rsi_rax, lea_rax_[rip+0x@@ 11@@ c@@ 11], cmove_rsi_rax, mov_rdx_r12, lea_rdi_[rip+0x11@@ c0@@ f], xor_eax_eax, pop_r12, jmp_0x1@@ 93@@ c
endbr64, push_r14, push_r13, push_r12, mov_r12_rdi, push_rbp, push_rbx, test_rdx_rdx, je_0x7b, movzx_r8d_byte_ptr_[r@@ si], test_r8b_r8b, je_0xad, mov_rbx_rdx, lea_rbp_[r@@ si+1], mov_r13_rdi, lea_r14_[rip+0x@@ 11@@ bd@@ a], jmp_0x27, test_r8b_r8b, js@@ _0x65, dec@@ _rbx, test_rbx_rbx, jle_0x@@ 45, mov_byte_ptr_[r@@ 13]@@ _r8b, inc@@ _r13, movzx_r8d_byte_ptr_[r@@ bp], inc_rbp, test_r8b_r8b, je_0x31, cmp_r8b@@ _0x5c, jne_0xffffffffffffffdb, sub_rbx@@ _2, test_rbx_rbx, jle_0x@@ 22, mov_eax_0x5@@ c@@ 5c, mov_word_ptr_[r@@ 13@@ ]_ax, inc_rbp, add_r13@@ _2, movzx_r8d_byte_ptr_[r@@ bp-1], test_r8b_r8b, jne_0xffffffffffffffd8, mov_byte_ptr_[r@@ 13]_0, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, sub_rbx@@ _4, test_rbx_rbx, jle_0xffffffffffffff@@ e1, mov_rdi_r13, mov_rcx_r14, mov_rdx_-1, mov_esi_1, xor_eax_eax, call_0xfffffffffffeb@@ 9e@@ 3, add_r13@@ _4, jmp_0xffffffffffffff86, mov_r13_rdi, jmp_0xffffffffffffffb@@ d
endbr64, mov_eax_dword_ptr_[rdi+0x18], cmp_eax_esi, je_0x29, mov_rdx_qword_ptr_[rdi], mov_r9d_dword_ptr_[r@@ dx+0x1@@ a0], test_eax_eax, jne_0x21, inc@@ _r9d, mov_dword_ptr_[rdx+0x1@@ a0]@@ _r9d, test_r9d_r9d, js@@ _0x22, mov_dword_ptr_[rdi+0x1@@ 8]_esi, mov_byte_ptr_[r@@ di+0x1@@ 79@@ ]_1, ret, test_esi_esi, jne_0xffffffffffffffe9, dec@@ _r9d, mov_dword_ptr_[rdx+0x1@@ a0]@@ _r9d, jmp_0xffffffffffffffdd, push_rax, lea_rcx_[rip+0x@@ 11@@ a@@ f8], mov_esi_0x2e, mov_r8_qword_ptr_[r@@ dx+8], lea_rdi_[rip+0x11@@ b@@ 1c], lea_rdx_[rip+0x11@@ b@@ 31], xor_eax_eax, call_0xffffffffffffa@@ f4@@ 7
endbr64, or_dword_ptr_[r@@ di+0x1@@ 4]_esi, ret
endbr64, not_esi, and_dword_ptr_[r@@ di+0x1@@ 4]_esi, ret
endbr64, mov_dword_ptr_[rdi+0x1@@ 4]_0, ret
endbr64, mov_eax_dword_ptr_[r@@ si+0x14], mov_dword_ptr_[rdi+0x1@@ 4]_eax, ret
endbr64, mov_dword_ptr_[rdi+0x1@@ 0]_esi, ret
endbr64, push_rbx, mov_byte_ptr_[rdi+@@ 8]_0, mov_qword_ptr_[rdi]_0, mov_qword_ptr_[rdi+0x1@@ 8]_0, mov_qword_ptr_[rdi+0x@@ 20]_0, mov_qword_ptr_[rdi+0x@@ 28]_0, mov_qword_ptr_[rdi+0x@@ 30]_0, mov_qword_ptr_[rdi+0x@@ 38]_0, mov_qword_ptr_[rdi+0x@@ 48]_0, mov_qword_ptr_[rdi+0x@@ 40]_0, mov_rbx_rdi, lea_rdi_[r@@ di+0x@@ 50], call_0x46@@ 21, mov_qword_ptr_[rbx+0x@@ 68]_0, mov_qword_ptr_[rbx+0x@@ 70]_0, pop_rbx, ret
endbr64, movabs_rax_0x6@@ 00000000, push_rbx, mov_qword_ptr_[rdi+0x1@@ 8]_rax, mov_byte_ptr_[r@@ di+0x1@@ 79@@ ]_0, mov_qword_ptr_[rdi+0x10]_0, mov_qword_ptr_[rdi+0x@@ 20]_0, mov_qword_ptr_[rdi+0x@@ 28]_0, mov_rbx_rdi, lea_rdi_[r@@ di+0x30], call_0x4@@ 5c@@ 7, mov_byte_ptr_[rbx+0x1@@ 78]_0, mov_qword_ptr_[rbx+0x1@@ 70]_0, mov_qword_ptr_[rbx+0x1@@ 68]_0, mov_qword_ptr_[rbx+0x1@@ 40]_0, mov_qword_ptr_[rbx+0x1@@ 38]_0, mov_qword_ptr_[rbx+0x1@@ 48]_0, mov_qword_ptr_[rbx+0x1@@ 50]_0, mov_qword_ptr_[rbx+0x1@@ 58]_0, mov_qword_ptr_[rbx+0x1@@ 60]_0, mov_byte_ptr_[rbx+0x@@ 50]_0, mov_qword_ptr_[rbx+0x@@ 48]_0, mov_qword_ptr_[rbx+0x@@ 60]_0, mov_qword_ptr_[rbx+0x@@ 68]_0, mov_qword_ptr_[rbx+0x@@ 70]_0, mov_qword_ptr_[rbx+0x@@ 78]_0, mov_qword_ptr_[rbx+0x@@ 80]_0, mov_qword_ptr_[rbx+0x@@ 90]_0, mov_qword_ptr_[rbx+0x@@ 88]_0, lea_rdi_[rbx+0x@@ 98], call_0x4@@ 50f, mov_qword_ptr_[rbx+0x@@ b0]_0, mov_qword_ptr_[rbx+0x@@ b8]_0, mov_byte_ptr_[rbx+0x@@ c8]_0, mov_qword_ptr_[rbx+0x@@ c0]_0, mov_qword_ptr_[rbx+0x@@ d8]_0, mov_qword_ptr_[rbx+0x@@ e0]_0, mov_qword_ptr_[rbx+0x@@ e8]_0, mov_qword_ptr_[rbx+0x@@ f0]_0, mov_qword_ptr_[rbx+0x@@ f8]_0, mov_qword_ptr_[rbx+0x10@@ 8]_0, mov_qword_ptr_[rbx+0x1@@ 00]_0, lea_rdi_[r@@ bx+0x110], call_0x4@@ 48@@ e, mov_qword_ptr_[rbx+0x1@@ 28]_0, mov_qword_ptr_[rbx+0x1@@ 30]_0, xor_edi_edi, call_0x4@@ 77@@ 1, mov_qword_ptr_[rbx+0x@@ 58]_rax, mov_dword_ptr_[rbx+0x@@ 54]_0, xor_edi_edi, call_0x4@@ 75@@ f, mov_qword_ptr_[rbx+0x@@ d0]_rax, mov_dword_ptr_[rbx+0x@@ cc@@ ]_0, pop_rbx, ret
endbr64, push_rbx, mov_qword_ptr_[rdi+8]_0, mov_qword_ptr_[rdi+0x1@@ 90]_0, mov_qword_ptr_[rdi+0x1@@ 98]_0, mov_rbx_rdi, lea_rdi_[r@@ di+0x10], call_0xfffffffffffffe@@ 16, mov_dword_ptr_[rbx+0x1@@ a0]_0, mov_qword_ptr_[rbx+0x1@@ 0]_rbx, mov_qword_ptr_[rbx+0x18]_0, pop_rbx, ret
endbr64, mov_rax_qword_ptr_[rdi+0x18], mov_qword_ptr_[rsi@@ ]_rdi, mov_qword_ptr_[rsi+8]_rax, mov_qword_ptr_[rdi+0x1@@ 8]_rsi, ret
endbr64, mov_eax_dword_ptr_[rdi+0x1@@ a0], ret
endbr64, lea_rax_[r@@ di+0x@@ 48], sub_rsp_0x18, cmp_rsi_rax, je_0xa1, cmp_qword_ptr_[rsi@@ ]_0, je_0xf, mov_eax_1, add_rsp_0x18, ret, mov_rax_qword_ptr_[r@@ si+0x20], test_rax_rax, je_7, cmp_byte_ptr_[rax]_0, jne_0xffffffffffffffe7, mov_rax_qword_ptr_[r@@ si+0x28], test_rax_rax, je_7, cmp_byte_ptr_[rax]_0, jne_0xffffffffffffffd9, mov_rax_qword_ptr_[rsi+0x@@ 40], test_rax_rax, je_7, cmp_byte_ptr_[rax]_0, jne_0xffffffffffffffcb, mov_rax_qword_ptr_[rsi+0x@@ 48], test_rax_rax, je_7, cmp_byte_ptr_[rax]_0, jne_0xffffffffffffffbd, mov_rax_qword_ptr_[rsi+0x@@ 38], test_rax_rax, je_7, cmp_byte_ptr_[rax]_0, jne_0xffffffffffffffaf, mov_rax_qword_ptr_[rsi+0x@@ 30], test_rax_rax, je_7, cmp_byte_ptr_[rax]_0, jne_0xffffffffffffffa1, lea_rdi_[r@@ si+0x50], mov_qword_ptr_[rsp+8]_rsi, call_0x4@@ 35@@ b, test_al_al, mov_rsi_qword_ptr_[rsp+8], jne_0xffffffffffffff8a, cmp_qword_ptr_[rsi+0x@@ 68]_0, jne_0xffffffffffffff@@ 83, cmp_qword_ptr_[rsi+0x@@ 70]_0, setne_al, jmp_0xffffffffffffff7e, cmp_qword_ptr_[rdi+0x1@@ 0]_0, jne_0xffffffffffffff@@ 66, mov_eax_dword_ptr_[rdi+0x18], mov_qword_ptr_[rsp+8]_rsi, test_eax_eax, jne_0xffffffffffffff@@ 56, add_rdi@@ _0x30, call_0x43@@ 11, test_al_al, mov_rsi_qword_ptr_[rsp+8], je_0xffffffffffffff@@ 3a, jmp_0xffffffffffffff3@@ a
endbr64, push_r14, mov_r14_rdx, push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, cmp_qword_ptr_[rdx@@ ]_0, je_0x5f, mov_eax_1, mov_edx_eax, lea_rdi_[rax@@ *8], inc_rax, cmp_qword_ptr_[r@@ 14@@ +rax*8@@ -8]_0, jne_0xffffffffffffffed, mov_dword_ptr_[rbp@@ ]_edx, call_0xffffffffffffb@@ ef@@ 8, mov_rdi_qword_ptr_[r14], mov_qword_ptr_[rbp+8]_rax, test_rdi_rdi, je_0x24, xor_r13d_r13d, jmp_8, mov_rax_qword_ptr_[rbp+8], lea_rbx@@ _[rax+r@@ 13], add_r13_8, call_r12, mov_rdi_qword_ptr_[r@@ 14+r@@ 13], mov_qword_ptr_[rbx]_rax, test_rdi_rdi, jne_0xffffffffffffffe7, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, xor_edx_edx, xor_edi_edi, jmp_0xffffffffffffffb@@ 9
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rdi, push_rbx, xor_ebx_ebx, sub_rsp_8, call_0x4@@ 7d, mov_dword_ptr_[rbp]_eax, cdqe, lea_rdi_[rax@@ *8], call_0xffffffffffffbe@@ 8b, mov_qword_ptr_[rbp+8]_rax, call_0x4@@ 72, mov_r12_rax, jmp_0x15, mov_rdx_qword_ptr_[rbp+8], mov_qword_ptr_[rdx+r@@ bx*@@ 8]_rax, inc_rbx, mov_rdi_r12, call_0x4@@ f2, test_rax_rax, jne_0xffffffffffffffea, mov_rdi_r12, call_0x56@@ 5, mov_r9d_dword_ptr_[r@@ bp], cmp_r9d@@ _ebx, jne_0xd, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_r8d_ebx, lea_rcx_[rip+0x@@ 11@@ 64@@ a], lea_rdx_[rip+0x11@@ 69@@ b], mov_esi_0x4@@ d, lea_rdi_[rip+0x11@@ 66@@ 9], xor_eax_eax, call_0xffffffffffffaa@@ 3@@ d
endbr64, mov_eax_dword_ptr_[rdi], test_eax_eax, jle_0x@@ 48, push_r13, mov_r13_rdx, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, xor_ebx_ebx, sub_rsp_8, mov_rax_qword_ptr_[rbp+8], mov_rsi_qword_ptr_[rax+r@@ bx*8], test_rsi_rsi, je_0xb, mov_rdx_r13, mov_rdi_rbp, call_r12, inc_rbx, cmp_dword_ptr_[r@@ bp@@ ]_ebx, jg_0xffffffffffffff@@ e4, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, ret
endbr64, mov_rcx_rsi, movsxd_rsi_dword_ptr_[r@@ di], mov_rdi_qword_ptr_[rdi+8], mov_edx_8, jmp_0xfffffffffff@@ ea@@ b6@@ d
endbr64, push_rbx, mov_dword_ptr_[rdi]_0, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+8], call_0xfffffffffffea@@ 9d@@ e, mov_qword_ptr_[rbx+8]_0, pop_rbx, ret
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, call_0xffffffffffffb@@ db@@ 2, movzx_ebx_byte_ptr_[r@@ ax], mov_r12_rax, mov_rbp_rax, test_bl_bl, je_0x2b, movsx_edi@@ _bl, mov_esi_8, call_0xffffffffffff7@@ 348, mov_r8d_eax, mov_eax_ebx, or_eax_0x20, test_r8b_r8b, cmovne_ebx_eax, inc_rbp, mov_byte_ptr_[rbp-@@ 1@@ ]_bl, movzx_ebx_byte_ptr_[r@@ bp], test_bl_bl, jne_0xffffffffffffffd9, mov_rdi_r12, call_0x1@@ 44@@ 4, mov_edx_eax, mov_ecx@@ _0x8@@ 00@@ 7@@ 80@@ 71, imul@@ _rdx_rcx, shr_rdx@@ _0x2f, imul_edx@@ _edx@@ _0xfff@@ 1, sub_eax_edx, lea_rdx_[rip+0x2@@ 3d@@ 31], lea_rbp@@ _[rdx@@ +rax*8], mov_rbx_qword_ptr_[rbp], test_rbx_rbx, jne_0x11, jmp_0x3c, mov_rbp_rbx, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, je_0x2f, mov_rdi_qword_ptr_[rbx+8], mov_rsi_r12, call_0xfffffffffffea@@ 9c@@ e, test_eax_eax, jne_0xffffffffffffffe7, mov_rdi_r12, call_0xfffffffffffea@@ 92@@ 2, mov_r13_qword_ptr_[r@@ bp], add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_rax_r13, pop_r13, ret, mov_edi_0x1@@ a8, call_0xffffffffffffc0@@ c3, mov_rdi_rax, mov_r13_rax, call_0xfffffffffffffb@@ f8, mov_rdi_r12, call_0xffffffffffffc@@ 1c0, mov_qword_ptr_[r13+8]_rax, mov_qword_ptr_[r13]_0, mov_qword_ptr_[rbp@@ ]_r13, mov_rdi_r12, inc@@ _dword_ptr_[rip+0x2@@ 3c@@ 92], inc@@ _dword_ptr_[rip+0x2@@ 3c@@ 90], call_0xfffffffffffea@@ 8c@@ c, add_rsp_8, pop_rbx, pop_rbp, pop_r12, mov_rax_r13, pop_r13, ret
endbr64, push_rbx, mov_rbx_rdi, call_0xfffffffffffffc@@ 18, test_eax_eax, je_0x39, cmp_eax_1, jne_0x2c, mov_edx_dword_ptr_[r@@ bx+0x28], lea_rax_[rbx+0x10], test_edx_edx, jne_0x19, mov_rax_qword_ptr_[rax+8], test_rax_rax, je_0x46, mov_edx_dword_ptr_[rax+0x18], test_edx_edx, je_0xfffffffffffffff2, pop_rbx, ret, xor_eax_eax, pop_rbx, ret, lea_rax_[rbx+0x10], mov_rdx_rax, mov_rcx_qword_ptr_[rdx+0x@@ d0], mov_ecx_dword_ptr_[r@@ cx+0x10], sub_ecx@@ _4, cmp_ecx_1, jbe_0x@@ 10, mov_rdx_qword_ptr_[rdx+8], test_rdx_rdx, jne_0xffffffffffffffe7, jmp_0xffffffffffffffcd, mov_rax_rdx, pop_rbx, ret, mov_r8_qword_ptr_[r@@ bx+8], lea_rcx_[rip+0x@@ 114@@ 60], lea_rdx_[rip+0x@@ 115@@ c9], mov_esi_0x8@@ 4, lea_rdi_[rip+0x@@ 115@@ 12], call_0xffffffffffffa@@ 7d@@ d
endbr64, push_rbp, push_rbx, sub_rsp_8, call_0xfffffffffffffe@@ 46, mov_rdi_rax, mov_rbx_rax, call_0xffffffffffffff@@ 4b, test_rax_rax, je_9, add_rsp_8, pop_rbx, pop_rbp, ret, mov_rbp_qword_ptr_[rbx+8], lea_rsi_[rip+0x1@@ 14@@ 3f], lea_rdi_[rip+0xc@@ 1f@@ 6], mov_edx_5, call_0xfffffffffffeaa@@ 63, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffffa@@ 9d@@ 6
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, test_rsi_rsi, je_0xb7, mov_edx_dword_ptr_[r@@ si+0x10], mov_rbx_rsi, test_edx_edx, je_0xca, mov_rdx_qword_ptr_[rdi+0x@@ 68], mov_rbp_rdi, mov_eax_dword_ptr_[r@@ dx+0x10], lea_r12_[r@@ di+0x10], test_eax_eax, jne_0x3c, cmp_qword_ptr_[rdi+0x1@@ 8]_0, jne_0x35, mov_qword_ptr_[rdi+0x@@ 6@@ 8]_rsi, mov_qword_ptr_[rdi+0x@@ e@@ 0]_rsi, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, mov_rax_qword_ptr_[r12+8], test_rax_rax, je_0x18, mov_rdx_qword_ptr_[rax+0x@@ 58], mov_r12_rax, cmp_rbx_rdx, jne_0xffffffffffffffec, jmp_0xffffffffffffffd3, mov_edi_0x1@@ 80, call_0xffffffffffffb@@ ef@@ b, mov_r13_rax, mov_rdi_rax, call_0xfffffffffffff87@@ 0, mov_qword_ptr_[r13@@ ]_rbp, mov_qword_ptr_[r13@@ +8]_0, mov_qword_ptr_[r13+0x@@ 5@@ 8]_rbx, mov_qword_ptr_[r13+0x@@ d@@ 0]_rbx, mov_qword_ptr_[r12+@@ 8]_r13, inc@@ _dword_ptr_[rip+0x2@@ 3a@@ cd], add_rsp_8, pop_rbx, mov_r12_r13, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, lea_rcx_[rip+0x@@ 114@@ 03], lea_rdx_[rip+0x@@ 114@@ 6a], mov_esi_0x@@ b3, lea_rdi_[rip+0x@@ 113@@ d3], xor_eax_eax, call_0xffffffffffffa6@@ 9c, lea_rcx_[rip+0x@@ 113@@ f8], lea_rdx_[rip+0x@@ 114@@ 49], mov_esi_0x@@ b5, lea_rdi_[rip+0x@@ 113@@ b2], xor_eax_eax, call_0xffffffffffffa@@ 67@@ b
endbr64, push_rbp, mov_rbp_rsi, call_0xfffffffffffffc@@ e8, mov_rdi_rax, mov_rsi_rbp, pop_rbp, jmp_0xfffffffffffffed@@ c
endbr64, mov_eax_dword_ptr_[rip+0x2@@ 3a@@ 46], ret
endbr64, mov_eax_dword_ptr_[rip+0x2@@ 3a@@ 3a], ret
endbr64, sub_rsp_8, mov_edi_0x10, call_0xffffffffffffb@@ a0@@ 3, mov_qword_ptr_[rax]_0, mov_dword_ptr_[rax+8]_0, add_rsp_8, ret
endbr64, mov_r8_qword_ptr_[r@@ di], test_r8_r8, jne_0x2f, movsxd_rax_dword_ptr_[r@@ di+8], lea_rcx_[rip+0x2@@ 3a@@ 09], cmp_eax@@ _0xfff@@ 0, jg@@ _0x2d, mov_rdx_qword_ptr_[r@@ cx+rax*8], test_rdx_rdx, je_0x32, inc_eax, mov_dword_ptr_[rdi+@@ 8]_eax, lea_r8@@ _[rdx@@ +0x10], mov_r8_qword_ptr_[r@@ 8], mov_rdx_qword_ptr_[r@@ 8], lea_rax_[rdx@@ +0x10], test_rdx_rdx, mov_edx_0, cmove_rax_rdx, mov_qword_ptr_[rdi]_rax, mov_rax_r8, ret, lea_edx_[rax+1], mov_dword_ptr_[rdi+@@ 8]_edx, inc_rax, jmp_0xffffffffffffffb@@ 7
endbr64, mov_r8_qword_ptr_[r@@ di], test_r8_r8, jne_0x2f, movsxd_rax_dword_ptr_[r@@ di+8], lea_rcx_[rip+0x@@ 23@@ 999], cmp_eax@@ _0xfff@@ 0, jg@@ _0x20, mov_rdx_qword_ptr_[r@@ cx+rax*8], test_rdx_rdx, je_0x22, inc_eax, mov_dword_ptr_[rdi+@@ 8]_eax, lea_r8@@ _[rdx@@ +0x10], mov_rax_qword_ptr_[r@@ 8+8], test_rax_rax, je_0x20, mov_qword_ptr_[rdi]_rax, mov_rax_r8, ret, lea_edx_[rax+1], mov_dword_ptr_[rdi+@@ 8]_edx, inc_rax, jmp_0xffffffffffffffc7, mov_rdx_qword_ptr_[r@@ 8], mov_rcx_qword_ptr_[rdx], lea_rdx_[r@@ cx+0x10], test_rcx_rcx, cmovne_rax_rdx, jmp_0xffffffffffffffd@@ 1
endbr64, jmp_0xfffffffffff@@ ea@@ 54@@ c
endbr64, sub_rsp_8, call_0x40@@ 18, call_0xffffffffffffc0@@ 53, mov_dword_ptr_[rip+0x2@@ 38@@ e@@ 4]_0, mov_dword_ptr_[rip+0x23@@ 8d@@ e]_0, lea_rax_[rip+0x2@@ 38@@ f3], lea_rdx_[rax+0x@@ 7@@ ff@@ 88], mov_qword_ptr_[rax]_0, add_rax_8, cmp_rax_rdx, jne_0xfffffffffffffff2, add_rsp_8, ret
endbr64, push_r15, push_r14, push_r13, mov_r13_rdi, push_r12, push_rbp, push_rbx, sub_rsp_0x18, movsxd_rax_dword_ptr_[rip+0x2@@ 38@@ 94], lea_rdi_[rax@@ *4@@ +1], call_0xffffffffffffb@@ 86@@ c, movsxd_rdx_dword_ptr_[rip+0x2@@ 38@@ 80], mov_rbp_rax, test_edx_edx, js@@ _0x16, lea_rdx_[rax@@ +rdx*4@@ +4], mov_dword_ptr_[rax]_0, add_rax_4, cmp_rax_rdx, jne_0xfffffffffffffff3, mov_dword_ptr_[rsp+0xc]_0, xor_r14d_r14d, xor_ebx_ebx, xor_r12d_r12d, lea_rax_[rip+0x2@@ 38@@ 69], mov_rax_qword_ptr_[rax+r@@ 14*8], mov_ecx_r14d, test_rax_rax, je_0x10@@ f, xor_r15d_r15d, mov_rax_qword_ptr_[rax], inc@@ _r15d, test_rax_rax, jne_0xfffffffffffffff7, lea_rdx_[rip+0x11@@ 19@@ c], xor_eax_eax, mov_r8d_r15d, mov_esi_1, mov_rdi_r13, call_0xfffffffffffea@@ d@@ 51, inc_r12d, xor_edx_edx, cmp_r15d_1, movsxd_rax_r15d, setne_dl, lea_rax_[r@@ bp@@ +rax*4], add_ebx@@ _edx, inc@@ _r14, inc_dword_ptr_[r@@ ax], cmp_r14@@ _0xfff@@ 1, jne_0xffffffffffffff9a, movsxd_rax_dword_ptr_[rip+0x2@@ 37@@ e1], mov_r15_rax, lea_rax_[r@@ bp@@ +rax*4], test_r15d_r15d, jg_0x1@@ 7, jmp_0x@@ c9, sub_rax_4, dec@@ _r15d, je_8, mov_edx_dword_ptr_[rax], test_edx_edx, je_0xfffffffffffffff@@ 3, movsxd_r15@@ _r15d, lea_r14_[rip+0x@@ 110@@ bf], mov_r8d_dword_ptr_[r@@ bp+r@@ 15*4], mov_ecx_r15d, mov_rdx_r14, mov_esi_1, mov_rdi_r13, xor_eax_eax, dec@@ _r15, call_0xfffffffffffea@@ cd@@ 7, test_r15d_r15d, jns_0xffffffffffffff@@ e0, mov_ecx_dword_ptr_[rsp+0xc], mov_rdi_r13, lea_rdx_[rip+0x11@@ 118], mov_esi_1, xor_eax_eax, call_0xfffffffffffea@@ cb@@ 8, mov_r8d_ebx, mov_ecx_r12d, mov_rdi_r13, lea_rdx_[rip+0x@@ 110@@ 4b], mov_esi_1, xor_eax_eax, call_0xfffffffffffea@@ c@@ 9c, mov_rdi_r13, lea_rsi_[rip+0x1@@ 10@@ ff], call_0xffffffffffffba@@ 6d, add_rsp_0x18, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, jmp_0xfffffffffff@@ ea@@ 37@@ 7, xor_r8d_r8d, lea_rdx_[rip+0x@@ 110@@ a4], mov_esi_1, mov_rdi_r13, xor_eax_eax, call_0xfffffffffffea@@ c@@ 5c, inc@@ _dword_ptr_[rsp+0xc], mov_rax_rbp, jmp_0xffffffffffffff1a, js_0xffffffffffffff@@ 7e, jmp_0xffffffffffffff4@@ c
endbr64, push_r13, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, push_rbx, mov_ebx_ecx, sub_rsp_8, mov_rax_qword_ptr_[rsi], mov_r13_qword_ptr_[r@@ ax+8], mov_rdi_r13, call_0xfffffffffffea@@ 5d0, mov_rdx_rax, mov_rsi_r13, mov_rdi_rbp, call_0x36@@ d2, mov_rsi_qword_ptr_[r@@ 12+0x10], mov_eax_dword_ptr_[r@@ si+0x10], cmp_eax_1, jbe_0x@@ 16, mov_edx_dword_ptr_[r12+0x@@ c], cmp_ebx_2, je_0x2d, cmp_ebx_3, je_0x30, cmp_ebx_1, je_0x1e, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, jmp_0x3@@ 6d@@ f, cmp_edx_1, je_0xa, sub_eax@@ _4, cmp_eax_1, jbe_0xffffffffffffff@@ d9, mov_rdi_rbp, call_0x3d@@ c0, jmp_0xffffffffffffffc@@ f
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, mov_r13_qword_ptr_[r@@ si+0x10], mov_rax_qword_ptr_[rdi], cmp_dword_ptr_[r@@ 13+0x1@@ 0]_1, mov_r12_qword_ptr_[r@@ ax+8], jbe_0x@@ 4c, mov_rbx_rdi, mov_rdi_r12, mov_rbp_rsi, call_0xfffffffffffea@@ 5@@ 37, mov_rdi_qword_ptr_[r13+8], mov_r12_rax, call_0xfffffffffffea@@ 5@@ 2b, lea_rdi_[r@@ 12@@ +rax+2], call_0xffffffffffffba@@ 31, mov_r12_rax, mov_rax_qword_ptr_[rbp+0x10], xor_r8d_r8d, mov_rcx_qword_ptr_[rax+8], mov_rax_qword_ptr_[rbx], lea_rdx_[rip+0xf@@ 5e@@ f], mov_rsi_qword_ptr_[rax+8], mov_rdi_r12, xor_eax_eax, call_0x@@ 99@@ b, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret
endbr64, mov_rax_qword_ptr_[rsi+0x10], mov_eax_dword_ptr_[rax+0x10], cmp_eax_1, jbe_0x@@ 14, mov_ecx_dword_ptr_[r@@ si+0xc], cmp_edx_2, je_0x1f, cmp_edx_3, je_0x22, cmp_edx_1, je_0x10, mov_rax_qword_ptr_[rdi], mov_rax_qword_ptr_[rax+8], ret, cmp_ecx_1, je_0xa, sub_eax@@ _4, cmp_eax_1, jbe_0xffffffffffffff@@ e7, mov_rax_qword_ptr_[r@@ si+0x18], test_rax_rax, je_0xc, ret, jmp_0xffffffffffffff3@@ 0
endbr64, mov_edx_esi, lea_rsi_[r@@ di+0x@@ 48], jmp_0xffffffffffffff9@@ 6
endbr64, mov_rax_qword_ptr_[rsi+0x10], mov_eax_dword_ptr_[rax+0x10], cmp_eax_1, jbe_0x@@ 14, mov_ecx_dword_ptr_[r@@ si+0xc], cmp_edx_2, je_0x1f, cmp_edx_3, je_0x22, cmp_edx_1, je_0x10, mov_rax_qword_ptr_[rdi], mov_rax_qword_ptr_[rax+8], ret, cmp_ecx_1, je_0xa, sub_eax@@ _4, cmp_eax_1, jbe_0xffffffffffffff@@ e7, mov_rax_qword_ptr_[r@@ si+0x18], test_rax_rax, je_0xc, ret, sub_rsp_0x18, mov_qword_ptr_[rsp+8]_rsi, call_0xfffffffffffffeb@@ 7, mov_rsi_qword_ptr_[rsp+8], mov_qword_ptr_[rsi+0x1@@ 8]_rax, add_rsp_0x18, ret
endbr64, mov_edx_esi, lea_rsi_[r@@ di+0x@@ 48], jmp_0xffffffffffffff8@@ 6
endbr64, push_r12, push_rbx, mov_rbx_rdx, sub_rsp_8, mov_r12_qword_ptr_[r@@ si+0x20], test_r12_r12, je_0x23, mov_rdi_r12, lea_rsi_[rip+0xc@@ 508], call_0xfffffffffffea@@ 5b@@ f, mov_dword_ptr_[rbx]_eax, add_rsp_8, pop_rbx, mov_rax_r12, pop_r12, ret, mov_edx_5, lea_rsi_[rip+0x10@@ f7@@ 2], lea_rdi_[rip+0x@@ bb@@ 13], call_0xfffffffffffea@@ 38@@ 5, mov_r12_rax, jmp_0xffffffffffffffc@@ 4
endbr64, mov_eax_dword_ptr_[rdi+0x10], lea_rdx_[rip+0x10@@ f6@@ 3], movsx_eax_byte_ptr_[r@@ dx+rax], ret
endbr64, mov_eax_dword_ptr_[rdi+0x18], lea_rdx_[rip+0x10@@ f4@@ 9], movsx_eax_byte_ptr_[r@@ dx+rax], ret
endbr64, mov_eax_dword_ptr_[rdi+0x1@@ 4], lea_rdx_[rip+0x10@@ f@@ 32], movsx_eax_byte_ptr_[r@@ dx+rax], ret
endbr64, mov_eax_dword_ptr_[rdi+0x10], lea_rdx_[rip+0x1d@@ 6b@@ 2], shl_rax_4, mov_rax_qword_ptr_[r@@ dx+rax], ret
endbr64, mov_eax_dword_ptr_[rdi+0x1@@ 4], lea_rdx_[rip+0x1d@@ 65@@ 2], shl_rax_4, mov_rax_qword_ptr_[r@@ dx+rax], ret
endbr64, mov_eax_dword_ptr_[rdi+0x18], lea_rdx_[rip+0x1d@@ 59@@ 2], shl_rax_4, mov_rax_qword_ptr_[r@@ dx+rax], ret
endbr64, movsxd_rax_dword_ptr_[r@@ di+0x1@@ c], cmp_eax_5, je_0x15, shl_rax_4, lea_rdx_[rip+0x1d@@ 6a@@ 8], mov_rax_qword_ptr_[r@@ dx+rax], ret, mov_rax_qword_ptr_[rdi+0x20], ret
endbr64, push_rbp, push_rbx, sub_rsp_8, mov_rbp_qword_ptr_[r@@ si], mov_rbx_qword_ptr_[rdi], mov_rax_qword_ptr_[rbp], mov_rsi_qword_ptr_[rax+8], mov_rax_qword_ptr_[rbx], mov_rdi_qword_ptr_[rax+8], call_0xfffffffffffea@@ 50@@ 1, test_eax_eax, jne_0x57, mov_rdx_qword_ptr_[rbx+0x@@ 58], mov_rcx_qword_ptr_[rbp+0x@@ 58], cmp_rdx_rcx, je_0x4a, mov_eax_dword_ptr_[r@@ dx+0x10], cmp_eax_1, jbe_0x@@ 4d, cmp_dword_ptr_[rbx+0x@@ 54]_1, je_0xa, sub_eax@@ _4, cmp_eax_1, jbe_0x@@ 3f, mov_eax_dword_ptr_[r@@ cx+0x10], cmp_eax_1, jbe_0x@@ 27, cmp_dword_ptr_[rbp+0x@@ 54]_1, je_0xa, sub_eax@@ _4, cmp_eax_1, jbe_0x@@ 19, mov_rsi_qword_ptr_[r@@ cx+8], mov_rdi_qword_ptr_[rdx+8], add_rsp_8, pop_rbx, pop_rbp, jmp_0xfffffffffff@@ ea@@ 4b@@ 1, mov_eax_1, add_rsp_8, pop_rbx, pop_rbp, ret, add_rsp_8, pop_rbx, mov_eax_0xffffffff, pop_rbp, ret
endbr64, push_r12, mov_r12_rdi, push_rbp, push_rbx, mov_rbx_rdx, mov_rdi_qword_ptr_[r@@ dx+0x30], test_rdi_rdi, je_0x3b, mov_esi_0x28, call_0xfffffffffffea@@ 24@@ 4, test_rax_rax, je_0x2c, lea_rbp@@ _[rax+1], mov_rdi_rbp, lea_rsi_[rip+0xc@@ 32@@ 2], call_0xfffffffffffea@@ 3b@@ c, pop_rbx, mov_rsi_rbp, pop_rbp, mov_rdi_r12, mov_rdx_rax, pop_r12, jmp_0x3@@ 2c@@ a, lea_rsi_[rbx+0x@@ 50], pop_rbx, pop_rbp, mov_rdi_r12, mov_edx_1, pop_r12, jmp_0xffffffffffffe@@ 63@@ 0
endbr64, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_0x38, lea_r12_[rsp+0x10], mov_rdi_r12, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_qword_ptr_[rsp+0x10]_0, mov_qword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rsp+0x20]_0, call_0xffffffffffffff@@ 4f, mov_rdi_r12, call_0x32@@ 97, mov_rsi_qword_ptr_[rsp+0x20], mov_rdx_rsp, mov_rdi_rbp, call_0xffffffffffffe@@ 7e@@ 7, test_eax_eax, js_0x1@@ a, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x3c, add_rsp_0x38, pop_rbp, pop_r12, ret, mov_r12_qword_ptr_[rsp+8], mov_rbp_qword_ptr_[rsp+0x20], mov_edx_5, lea_rsi_[rip+0x10@@ c@@ f8], lea_rdi_[rip+0xb@@ 86@@ 7], call_0xfffffffffffea@@ 0@@ d9, mov_rdi_rax, mov_rdx_r12, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffffa0@@ 49, call_0xfffffffffffea@@ 0@@ f@@ 4
endbr64, sub_rsp_8, call_0xffffffffffffec@@ e8, mov_qword_ptr_[rip+0x@@ a3@@ 17@@ 4]_rax, add_rsp_8, ret
endbr64, mov_rax_qword_ptr_[rip+0x@@ a3@@ 15@@ d], test_rax_rax, je_0xa, ret, mov_rax_qword_ptr_[rip+0x@@ 1f@@ 60@@ 1], mov_qword_ptr_[rip+0x@@ a3@@ 14@@ 2]_rax, ret
endbr64, b@@ nd@@ _@@ jmp@@ _qword_ptr_[rip+0x@@ 34@@ df@@ 5], endbr64, sub_rsp_8, call_0xffffffffffffff@@ a8, mov_rdi_qword_ptr_[rip+0x@@ 1f@@ 5e@@ 4], call_0x@@ ec, call_0xffffffffffffa@@ 25@@ 7, mov_edi@@ _0x12, add_rsp_8, jmp_0xfffffffffff@@ ea@@ 33@@ 9
endbr64, mov_edi_1, jmp_0xffffffffffff@@ 9c@@ d@@ 7
endbr64, push_r15, mov_r15_rdi, lea_rdi_[rip+0xf@@ 46@@ a], push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, call_0x42@@ 64, mov_edx_5, lea_rsi_[rip+0x10@@ c@@ 2b], lea_rdi_[rip+0xb@@ 77@@ a], mov_r14_rax, call_0xfffffffffffe9@@ fe@@ 9, lea_rdi_[rip+0x10@@ c@@ 1d], mov_r13_rax, call_0x4@@ 23@@ a, lea_rdi_[rip+0x@@ f4@@ 28], mov_r12_rax, call_0x4@@ 22@@ b, mov_rbp_rax, call_0xffffffffffffff@@ 33, lea_rdi_[rip+0x@@ f4@@ 1e], mov_rbx_rax, call_0x42@@ 14, push_r15, mov_rdi_qword_ptr_[rip+0x@@ 1f7@@ 96], mov_rcx_rax, push_r14, mov_r9_rbp, mov_r8_rbx, push_r13, lea_rdx_[rip+0x@@ f3@@ fe], mov_esi_1, push_r12, xor_eax_eax, call_0xfffffffffffea@@ 5f@@ 9, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
endbr64, mov_dword_ptr_[rip+0x@@ 1f@@ 3b@@ e]@@ _edi, ret
endbr64, push_rbp, mov_rbp_rdi, call_0xfffffffffffea@@ 2a8, mov_edi_eax, call_0xfffffffffffe9e@@ 41, xor_ecx_ecx, test_eax_eax, je_0x18, mov_rdi_rbp, mov_edx_2, xor_esi_esi, pop_rbp, jmp_0xfffffffffff@@ ea@@ 44@@ b, mov_edx_dword_ptr_[rip+0x@@ 1f@@ 38@@ 2], mov_rdi_rbp, xor_esi_esi, pop_rbp, jmp_0xfffffffffff@@ ea@@ 43@@ 4
endbr64, mov_qword_ptr_[rip+0x@@ 1f@@ 36@@ 5@@ ]_rdi, mov_qword_ptr_[rip+0x@@ a@@ 2@@ fe@@ 6@@ ]_rsi, ret
endbr64, mov_eax_dword_ptr_[rip+0x@@ a@@ 2@@ fc@@ 6], ret
endbr64, sub_rsp_0x18, mov_r8_rdi, mov_rdx_rsi, mov_rdi_rsp, mov_rsi_r8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, inc_dword_ptr_[rip+0x@@ a@@ 2f@@ 96], mov_qword_ptr_[rsp]_0, call_0xffffffffffffb0@@ 5e, mov_rsi_qword_ptr_[rip+0x@@ a@@ 2f@@ 8a], mov_rdi_qword_ptr_[rsp], call_qword_ptr_[rip+0x@@ 1f@@ 2f@@ 8], mov_rdi_qword_ptr_[rsp], call_0xfffffffffffe9c@@ 04, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_7, add_rsp_0x18, ret, call_0xfffffffffffe9@@ ea@@ a
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x28]_rsi, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rsi_rsp, lea_rax_[rsp+0x20], mov_qword_ptr_[rsp+0x10]_rax, mov_dword_ptr_[rsp]_8, mov_dword_ptr_[rsp+4]_0x30, call_0xfffffffffffffe@@ f8, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xfffffffffffe9d@@ e@@ b
endbr64, push_r12, mov_r10_rdi, push_rbp, push_rbx, sub_rsp_0x@@ e0, mov_qword_ptr_[rsp+0x38]_rsi, mov_qword_ptr_[rsp+0x40]_rdx, mov_qword_ptr_[rsp+0x48]_rcx, mov_qword_ptr_[rsp+0x50]_r8, mov_qword_ptr_[rsp+0x58]_r9, test_al_al, je_0x3c, movaps_xmmword_ptr_[rsp+0x60]_xmm0, movaps_xmmword_ptr_[rsp+0x70@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, lea_rax_[rsp+0x100], mov_qword_ptr_[rsp+0x18]_rax, mov_rsi_r10, lea_rdx_[rsp+0x10], lea_rax_[rsp+0x30], lea_rdi_[rsp+8], mov_qword_ptr_[rsp+8]_0, mov_dword_ptr_[rsp+0x10@@ ]_8, mov_dword_ptr_[rsp+0x14]@@ _0x30, mov_qword_ptr_[rsp+0x20]_rax, call_0xffffffffffffa@@ ea@@ a, lea_rdi_[rip+0xf@@ 148], mov_r12_qword_ptr_[rsp+8], call_0x3f@@ 49, mov_rbp_rax, call_0xfffffffffffffc@@ 51, lea_rdi_[rip+0xf@@ 13c], mov_rbx_rax, call_0x3f@@ 32, sub_rsp_8, push_r12, mov_rdi_qword_ptr_[rip+0x@@ 1f@@ 4b0], mov_rcx_rax, lea_rdx_[rip+0xf@@ 18@@ 3], mov_r9_rbp, mov_r8_rbx, mov_esi_1, xor_eax_eax, call_0xfffffffffffea@@ 3@@ 19, mov_rdi_qword_ptr_[rsp+0x18], call_0xfffffffffffe9a@@ 0f, pop_rax, pop_rdx, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0xe, add_rsp_0x@@ e0, pop_rbx, pop_rbp, pop_r12, ret, call_0xfffffffffffe9c@@ a@@ c
endbr64, push_r12, mov_r10_rdi, push_rbp, push_rbx, sub_rsp_0x@@ e0, mov_qword_ptr_[rsp+0x38]_rsi, mov_qword_ptr_[rsp+0x40]_rdx, mov_qword_ptr_[rsp+0x48]_rcx, mov_qword_ptr_[rsp+0x50]_r8, mov_qword_ptr_[rsp+0x58]_r9, test_al_al, je_0x3c, movaps_xmmword_ptr_[rsp+0x60]_xmm0, movaps_xmmword_ptr_[rsp+0x70@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, lea_rax_[rsp+0x100], mov_rsi_r10, lea_rdx_[rsp+0x10], mov_qword_ptr_[rsp+0x18]_rax, lea_rdi_[rsp+8], lea_rax_[rsp+0x30], mov_dword_ptr_[rsp+0x10@@ ]_8, mov_dword_ptr_[rsp+0x14]@@ _0x30, mov_qword_ptr_[rsp+0x20]_rax, call_0xffffffffffffad@@ 73, lea_rdi_[rip+0x@@ f0@@ 11], mov_rbp_qword_ptr_[rsp+8], call_0x3e@@ 12, mov_rbx_rax, call_0xfffffffffffffb@@ 1a, lea_rdi_[rip+0xf@@ 00@@ 5], mov_r12_rax, call_0x3d@@ fb, mov_rdx_rax, mov_r9_rbp, mov_r8_rbx, mov_rcx_r12, lea_rsi_[rip+0x@@ f0@@ 50], mov_edi_1, xor_eax_eax, call_0xfffffffffffea@@ 0@@ 6c, mov_rdi_qword_ptr_[rsp+8], call_0xfffffffffffe@@ 98@@ e2, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0xe, add_rsp_0x@@ e0, pop_rbx, pop_rbp, pop_r12, ret, call_0xfffffffffffe9b@@ 8@@ 1
endbr64, push_r12, mov_r12_rdi, push_rbp, push_rbx, sub_rsp_0x50, mov_qword_ptr_[rsp+0x28]_rsi, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0x70], mov_qword_ptr_[rsp+8]_rax, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]_8, mov_qword_ptr_[rsp+0x10]_rax, jmp_0x36, mov_edx_eax, add_rdx_qword_ptr_[r@@ sp+0x10], mov_rbp_qword_ptr_[r@@ dx], add_eax_8, mov_dword_ptr_[rsp]_eax, test_rbp_rbp, je_0x3c, mov_rdi_rbp, call_0xfffffffffffe9a@@ f0, mov_rbx_rax, mov_rdi_r12, mov_rdx_rax, mov_rsi_rbp, call_0xfffffffffffe9d@@ ef, add_r12@@ _rbx, mov_eax_dword_ptr_[rsp], cmp_eax_0x2f, jbe_0xffffffffffffff@@ c9, mov_rdx_qword_ptr_[rsp+8], mov_rbp_qword_ptr_[r@@ dx], lea_rax_[rdx+8], mov_qword_ptr_[rsp+8]_rax, test_rbp_rbp, jne_0xffffffffffffffc8, mov_byte_ptr_[r@@ 12]_0, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xe, add_rsp_0x50, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, ret, call_0xfffffffffffe9a@@ a@@ 8
endbr64, push_r12, mov_r12_rsi, push_rbp, push_rbx, mov_rbx_rdi, call_0xfffffffffffe9a@@ 82, mov_rdi_r12, mov_rbp_rax, call_0xfffffffffffe9a@@ 77, xor_r8d_r8d, cmp_rbp_rax, jb_0x1@@ 7, sub_rbp@@ _rax, lea_rdi_[r@@ bx+r@@ bp], mov_rsi_r12, call_0xfffffffffffe9c@@ e0, test_eax_eax, sete_r8b, pop_rbx, pop_rbp, mov_eax_r8d, pop_r12, ret
endbr64, sub_rsp_0xe8, mov_qword_ptr_[rsp+0x38]_rsi, mov_qword_ptr_[rsp+0x40]_rdx, mov_qword_ptr_[rsp+0x48]_rcx, mov_qword_ptr_[rsp+0x50]_r8, mov_qword_ptr_[rsp+0x58]_r9, mov_r10_rdi, test_al_al, je_0x3c, movaps_xmmword_ptr_[rsp+0x60]_xmm0, movaps_xmmword_ptr_[rsp+0x70@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+0x18]_rax, lea_rdx_[rsp+0x10], lea_rax_[rsp+0x30], lea_rdi_[rsp+8], mov_rsi_r10, mov_dword_ptr_[rsp+0x10@@ ]_8, mov_dword_ptr_[rsp+0x14]@@ _0x30, mov_qword_ptr_[rsp+0x20]_rax, call_0xffffffffffffab@@ 27, mov_rcx_qword_ptr_[rsp+0x28], xor_rcx_qword_ptr_fs:[0x28], mov_rax_qword_ptr_[rsp+8], jne_0xa, add_rsp_0xe8, ret, call_0xfffffffffffe9@@ 98@@ 5
endbr64, mov_r8_rdi, test_rdx_rdx, je_0x58, movzx_ecx_byte_ptr_[r@@ si], test_cl_cl, jne_0x2d, jmp_0x4b, mov_rcx_rax, mov_rax_rdx, mov_r8_rdi, mov_rdx_rcx, cmp_rax_1, jbe_0x@@ 36, movzx_eax_byte_ptr_[rsi], inc@@ _rsi, mov_byte_ptr_[r@@ 8]_al, lea_rdi_[r@@ 8+1], movzx_ecx_byte_ptr_[r@@ si], test_cl_cl, je_0x34, lea_rax_[rdx@@ -1], cmp_cl@@ _0x25, jne_0xffffffffffffffd3, cmp_rdx@@ _2, jbe_0x@@ 25, mov_byte_ptr_[r@@ di]@@ _0x25, lea_r8_[r@@ di+1], sub_rdx@@ _2, cmp_rax_1, ja_0xffffffffffffff@@ ce, mov_byte_ptr_[r@@ 8]_0, mov_rax_r8, ret, mov_r8_rdi, mov_byte_ptr_[r@@ 8]_0, jmp_0xffffffffffffffe@@ b
endbr64, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, call_0xfffffffffffe9@@ 8d@@ f, lea_rdi_[rax@@ +rax], call_0xffffffffffffa@@ 9c@@ 6, movsx_edi_byte_ptr_[rbx], mov_r13_rax, mov_r12_rax, test_dil_dil, jne_0x1f, jmp_0x5@@ 3, mov_rax_rbp, mov_rbp_r12, mov_r12_rax, movzx_eax_byte_ptr_[rbx], inc_rbx, mov_byte_ptr_[rbp@@ ]_al, movsx_edi_byte_ptr_[rbx], test_dil_dil, je_0x38, mov_esi_0x20, call_0xffffffffffff5@@ fa@@ 1, lea_rbp_[r@@ 12+1], test_al_al, jne_0xffffffffffffffd5, movsx_edi_byte_ptr_[rbx], mov_esi_0x18, call_0xffffffffffff5f@@ 8b, test_al_al, jne_0xffffffffffffffc4, mov_byte_ptr_[r@@ 12]@@ _0x5c, add_r12@@ _2, jmp_0xffffffffffffffc2, mov_byte_ptr_[r@@ 12]_0, add_rsp_8, mov_rax_r13, pop_rbx, pop_rbp, pop_r12, pop_r13, ret
endbr64, push_r12, mov_r12_rdi, push_rbx, sub_rsp_8, movzx_ebx@@ _byte_ptr_[rdi], cmp_bl@@ _0x22, je_0x1c, cmp_bl@@ _0x27, je_0x17, add_rsp_8, pop_rbx, mov_rax_r12, pop_r12, ret, mov_rdi_r12, call_0xfffffffffffe@@ 98@@ 1d, lea_rax_[r@@ 12@@ +rax-1], cmp_byte_ptr_[rax@@ ]_bl, jne_0x19, mov_byte_ptr_[rax]_0, add_rsp_8, inc_r12, pop_rbx, mov_rax_r12, pop_r12, ret, add_rsp_8, xor_r12d_r12d, pop_rbx, mov_rax_r12, pop_r12, ret
endbr64, movzx_edx_byte_ptr_[rdi], mov_r8d@@ _0x8@@ 11@@ c@@ 9d@@ c5, test_dl_dl, je_0x20, inc_rdi, movsx_eax@@ _dl, movzx_edx_byte_ptr_[rdi], xor_eax@@ _r8d, imul@@ _r8d@@ _eax@@ _0x1@@ 000@@ 19@@ 3, test_dl_dl, jne_0xffffffffffffffeb, mov_eax_r8d, ret
endbr64, push_r14, push_r13, push_r12, push_rbp, mov_ebp@@ _3, push_rbx, lea_rbx_[rip+0x@@ a@@ 28@@ 58], lea_r12_[r@@ bx+0x1@@ 30], xor_edx_edx, mov_rsi_rbx, mov_edi_ebp, call_0xfffffffffffe@@ 96@@ 5a, test_eax_eax, jne_0x23, add_rbx@@ _0x@@ 98, mov_ebp@@ _2, cmp_rbx_r12, jne_0xffffffffffffffe1, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, call_0xfffffffffffe9@@ 580, mov_edi_dword_ptr_[rax], call_0xfffffffffffe9d@@ e9, mov_edi_ebp, mov_r14_rax, call_0xfffffffffffe9b@@ 9f, mov_edx_5, lea_rsi_[rip+0x10@@ 35@@ 6], lea_rdi_[rip+0x@@ ae@@ 95], mov_r13_rax, call_0xfffffffffffe9@@ 70@@ 4, mov_rdi_qword_ptr_[rip+0x@@ 1e@@ ee@@ 8], mov_rdx_rax, mov_r8_r14, mov_rcx_r13, mov_esi_1, xor_eax_eax, call_0xfffffffffffe9d@@ 58, mov_eax_dword_ptr_[rip+0x210@@ 4d], inc_eax, mov_dword_ptr_[rip+0x210@@ 45@@ ]_eax, jmp_0xffffffffffffff8@@ 4
endbr64, push_r12, push_rbx, mov_rbx_rdi, sub_rsp_8, call_0xfffffffffffff6@@ 32, mov_edx_5, lea_rsi_[rip+0x10@@ 3e@@ 7], lea_rdi_[rip+0x@@ ae@@ 38], mov_r12_rax, call_0xfffffffffffe@@ 96@@ a7, mov_rdi_qword_ptr_[rip+0x@@ 1e@@ e8@@ b], add_rsp_8, mov_r8_rbx, pop_rbx, mov_rdx_rax, mov_rcx_r12, mov_esi_1, xor_eax_eax, pop_r12, jmp_0xfffffffffffe@@ 9c@@ f@@ 4
endbr64, push_r12, xor_ecx_ecx, mov_r12_rdi, push_rbp, sub_rsp_0xa8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, mov_rbp_rsp, mov_eax_dword_ptr_[rip+0x20@@ fb@@ 1], inc_eax, mov_dword_ptr_[rip+0x20@@ fa@@ 9]_eax, xor_eax_eax, mov_edx_eax, add_eax@@ _0x20, mov_qword_ptr_[rbp@@ +rdx@@ ]_rcx, mov_qword_ptr_[rbp@@ +rdx+@@ 8]_rcx, mov_qword_ptr_[rbp@@ +rdx+0x1@@ 0]_rcx, mov_qword_ptr_[rbp@@ +rdx+0x1@@ 8]_rcx, cmp_eax@@ _0x80, jb_0xffffffffffffff@@ e2, add_rax_rbp, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+8]_0, mov_qword_ptr_[rax+0x10]_0, lea_rdi_[rsp+8], call_0xfffffffffffe9@@ 8d8, lea_rdx_[rip+0xa@@ 26@@ dc], mov_rsi_rbp, mov_edi_3, mov_qword_ptr_[rsp@@ ]_1, mov_dword_ptr_[rsp+0x8@@ 8]_0, call_0xfffffffffffe@@ 94@@ d1, test_eax_eax, jne_0x59, lea_rdx_[rip+0xa@@ 27@@ 49], mov_rsi_rbp, mov_edi_2, call_0xfffffffffffe@@ 94@@ b9, test_eax_eax, jne_0x7b, xor_edx_edx, mov_esi_0xffffffff, lea_rdi_[rip-0x@@ 1d@@ e], call_0xffffffffffff9a@@ 92, mov_eax_dword_ptr_[rip+0x20@@ f0@@ 7], dec_eax, mov_dword_ptr_[rip+0x20@@ e@@ ff@@ ]_eax, mov_rax_qword_ptr_[rsp+0x98], xor_rax_qword_ptr_fs:[0x28], jne_0x42, add_rsp_0xa8, pop_rbp, pop_r12, ret, mov_edi_3, call_0xfffffffffffe9@@ 9e@@ c, mov_edx_5, lea_rsi_[rip+0x10@@ 1c@@ b], lea_rdi_[rip+0x@@ ac@@ e2], mov_rbp_rax, call_0xfffffffffffe9@@ 55@@ 1, mov_rdi_rax, mov_rdx_r12, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffff95@@ 91, call_0xfffffffffffe9@@ 56@@ c, mov_edi_2, jmp_0xffffffffffffffc@@ 6
endbr64, mov_edi_1, jmp_0xffffffffffff@@ 9@@ 14@@ 7
endbr64, sub_rsp_0x18, call_0xfffffffffffe9c@@ 18, cmp_eax_-1, je_0x28, test_eax_eax, jg@@ _0x1f, lea_rdi_[rip-0x@@ 6d@@ ed], xor_edx_edx, lea_rsi_[rip-0x@@ 1d@@ 6], mov_dword_ptr_[rsp+0xc]_eax, call_0xffffffffffff9@@ 6c@@ 6, mov_eax_dword_ptr_[rsp+0xc], add_rsp_0x18, ret, mov_eax_dword_ptr_[rip+0x20@@ e5@@ 2], lea_rdi_[rip+0x@@ ac@@ 69], inc_eax, mov_edx_5, lea_rsi_[rip+0x10@@ 218], mov_dword_ptr_[rip+0x20@@ e@@ 37@@ ]_eax, call_0xfffffffffffe9@@ 4c@@ 7, mov_rdi_rax, xor_eax_eax, call_0xffffffffffff9@@ 50@@ d
endbr64, push_r15, push_r14, mov_r14_rsi, push_r13, push_r12, mov_r12d_edx, push_rbp, mov_ebp_edi, push_rbx, sub_rsp_0x18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, lea_r13_[r@@ sp+4], jmp_0x13, call_0xfffffffffffe9@@ 2c8, cmp_dword_ptr_[rax@@ ]_4, jne_0x15, xor_edx_edx, mov_rsi_r13, mov_edi_ebp, call_0xfffffffffffe9@@ 9e@@ 7, mov_ebx_eax, cmp_eax_-1, je_0xffffffffffffffe5, cmp_ebp_ebx, jne_0x1@@ e9, mov_r13d_dword_ptr_[r@@ sp+4], test_r12b@@ _4, je_0x2a, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x1@@ fd, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, mov_eax_r13d, pop_r13, pop_r14, pop_r15, ret, test_r12b@@ _1, jne_0x5c, mov_ebp_r13d, lea_r15_[r@@ ip-0x@@ 6c@@ 70], and_ebp@@ _0x7f, jne_0x5c, mov_ebx_r13d, sar@@ _ebx@@ _8, mov_r13d_ebx, and_r13d@@ _0xff, je_0xffffffffffffff@@ b3, and_r12d@@ _8, jne_0xffffffffffffffad, mov_edx_5, lea_rsi_[rip+0x1@@ 00@@ 8f], lea_rdi_[rip+0x@@ ab@@ 6e], call_0xfffffffffffe9@@ 3e0, mov_rdi_rax, movzx_edx@@ _bl, mov_rsi_r14, xor_eax_eax, call_r15, mov_r13d_0xffffffff, jmp_0xffffffffffffff7f, mov_ebp_r13d, lea_r15_[r@@ ip-0x@@ ab@@ a], and_ebp@@ _0x7f, je_0xffffffffffffff@@ a8, lea_eax_[r@@ bp+1], cmp_al_1, jle_0x@@ 7c, test_r12b@@ _2, je_0xb, cmp_ebp@@ _0xd, je_0xf1, and_r12d@@ _8, jne_0x@@ f7, cmp_ebp_2, je_0xae, and_r13d@@ _0x80, lea_rbx_[rip+0x@@ b@@ 4d@@ 4], jne_0x@@ ea, mov_edi_ebp, call_0xfffffffffffe@@ 97@@ f2, mov_edx_5, lea_rsi_[rip+0x1@@ 00@@ 39], lea_rdi_[rip+0x@@ aa@@ e8], mov_r12_rax, call_0xfffffffffffe9@@ 35@@ 7, mov_rdi_rax, mov_rcx_rbx, mov_rdx_r12, mov_rsi_r14, xor_eax_eax, call_r15, mov_r13d_0xffffffff, jmp_0xfffffffffffffef3, and_r12d@@ _8, je_0x14, mov_r13d_0xffffffff, jmp_0xfffffffffffffedc, mov_edx_5, lea_rsi_[rip+0x1@@ 00@@ 14], lea_rdi_[rip+0x@@ aa@@ 93], call_0xfffffffffffe9@@ 30@@ 5, mov_rdi_rax, mov_edx_r13d, mov_rsi_r14, xor_eax_eax, call_r15, mov_r13d_0xffffffff, jmp_0xfffffffffffffea@@ 4, mov_edx_5, lea_rsi_[rip+0x1@@ 00@@ 49], lea_rdi_[rip+0x@@ aa@@ 5b], call_0xfffffffffffe9@@ 2c@@ d, mov_rdi_rax, mov_rsi_r14, xor_eax_eax, call_r15, mov_r13d_0xffffffff, jmp_0xfffffffffffffe@@ 6f, xor_r13d_r13d, jmp_0xfffffffffffffe@@ 65, mov_r13d_ebp, jmp_0xfffffffffffffe@@ 55, mov_edx_5, lea_rsi_[rip+0x1@@ 00@@ 17], lea_rdi_[rip+0x@@ aa@@ 0b], call_0xfffffffffffe9@@ 27@@ d, mov_rbx_rax, jmp_0xffffffffffffff01, mov_eax_dword_ptr_[rip+0x20@@ bd@@ a], lea_rsi_[rip+0x@@ ff@@ ba], inc_eax, lea_rdi_[rip+0xa@@ 9e@@ 8], mov_edx_5, mov_dword_ptr_[rip+0x20@@ bb@@ f@@ ]_eax, call_0xfffffffffffe9@@ 24@@ f, mov_rdi_rax, mov_rsi_r14, xor_eax_eax, call_0xffffffffffff@@ 92@@ 92, call_0xfffffffffffe9@@ 26@@ d
endbr64, ret
endbr64, ret
endbr64, mov_rax_qword_ptr_[rip+0x@@ a@@ 24@@ 75], mov_qword_ptr_[rip+0x@@ a@@ 24@@ 1e@@ ]_rax, ret
endbr64, mov_rax_qword_ptr_[rip+0x@@ a@@ 24@@ 5d], jmp_qword_ptr_[r@@ ax+0x1@@ 0@@ ]
endbr64, lea_rax_[r@@ di+0x28], ret
endbr64, mov_rax_qword_ptr_[rdi+8], ret
endbr64, push_rbp, push_rbx, sub_rsp_8, cmp_qword_ptr_[rdi+0x1@@ 60]_0, jne_0xc5, mov_rbx_qword_ptr_[r@@ di+0x158], mov_qword_ptr_[rdi+0x1@@ 58]_0, test_rbx_rbx, jne_0x31, jmp_0x8@@ d, mov_qword_ptr_[rdx+0x1@@ 8]_rax, mov_rcx_qword_ptr_[rbp+0x@@ 148], mov_rax_qword_ptr_[rbx+0x18], test_rax_rax, je_0x38, mov_qword_ptr_[rax+0x20]_rdx, test_rcx_rcx, je_0x3b, mov_rbx_qword_ptr_[rbx+0x10], test_rbx_rbx, je_0x60, mov_rbp_qword_ptr_[rbx], test_rbp_rbp, je_0xfffffffffffffff1, mov_rdx_qword_ptr_[rbx+0x20], mov_rax_qword_ptr_[rbx+0x18], test_rdx_rdx, jne_0xffffffffffffffc7, mov_qword_ptr_[rbp+0x@@ 14@@ 8]_rax, mov_rcx_rax, test_rax_rax, jne_0xffffffffffffffcc, mov_qword_ptr_[rbp+0x@@ 15@@ 0]_rdx, test_rcx_rcx, jne_0xffffffffffffffc9, cmp_dword_ptr_[rbp+0x@@ 18@@ ]_5, jne_0xffffffffffffffc3, cmp_qword_ptr_[rbp+0x@@ 16@@ 0]_0, je_0x2c, mov_esi_6, mov_rdi_rbp, call_0xffffffffffffde@@ 9a, mov_rdi_rbp, call_0xffffffffffff6@@ 97@@ 2, mov_rbx_qword_ptr_[rbx+0x10], test_rbx_rbx, jne_0xffffffffffffffa4, add_rsp_8, pop_rbx, pop_rbp, ret, mov_esi_7, mov_rdi_rbp, call_0xffffffffffffde@@ 70, jmp_0xffffffffffffffd6, mov_esi_3, call_0xffffffffffffe@@ d0@@ 4, mov_r8_rax, lea_rcx_[rip+0x@@ fe@@ 7d], lea_rdx_[rip+0x10@@ 3@@ fe], mov_esi_0x6@@ b, lea_rdi_[rip+0x10@@ 2d@@ 1], xor_eax_eax, call_0xffffffffffff8d@@ f@@ 0
endbr64, test_sil_sil, setne_sil, movzx_esi_sil, add@@ _esi_esi, jmp_0x5@@ 25@@ f
endbr64, push_r12, push_rbp, mov_rbp_rdi, mov_rdi_rsi, sub_rsp_8, mov_rsi_rdx, mov_edx_1, call_0xffffffffffffec@@ 27, mov_edx_5, lea_rsi_[rip+0x@@ fe@@ 2e], lea_rdi_[rip+0xa@@ 7e@@ d], mov_r12_rax, call_0xfffffffffffe@@ 90@@ 5c, mov_rdi_rax, mov_rdx_r12, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffff8@@ fc@@ c
endbr64, cmp_byte_ptr_[rdi]@@ _0x2d, je_0x29, sub_rsp_8, xor_esi_esi, call_0x5a@@ f1, mov_r8_rax, mov_rax_qword_ptr_[rip+0x@@ a@@ 22@@ 9a], mov_rdi_r8, mov_rax_qword_ptr_[rax+8], add_rsp_8, jmp_rax, xor_r8d_r8d, cmp_byte_ptr_[rdi+@@ 1]_0, jne_0xffffffffffffffd2, mov_rax_qword_ptr_[rip+0x@@ a@@ 22@@ 78], mov_rdi_r8, mov_rax_qword_ptr_[rax+8], jmp_rax
endbr64, push_r15, push_r14, mov_r14_rdx, push_r13, mov_r13d_r8d, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, xor_esi_esi, push_rbx, mov_ebx_ecx, sub_rsp_8, test_ecx_ecx, setl@@ e_@@ sil, call_qword_ptr_[rip+0x@@ 1e@@ 44@@ 2], test_rax_rax, je_0xf7, mov_rdi_rax, mov_r15_rax, call_qword_ptr_[rip+0x@@ 1e@@ 43@@ 5], mov_rdx_qword_ptr_[rax], test_rdx_rdx, jne_0x14, jmp_0x7@@ 5, lea_rax_[r@@ dx+0x20], mov_rdx_qword_ptr_[rdx+0x@@ 20], test_rdx_rdx, je_0x65, cmp_qword_ptr_[rdx@@ ]_rbp, jne_0xfffffffffffffff0, mov_dword_ptr_[rdx+0x1@@ 8]_r13d, cmp_ebx_1, jg_0x1@@ 2c, je_0x39, mov_rcx_qword_ptr_[r@@ dx+0x20], mov_qword_ptr_[rax]_rcx, mov_rax_qword_ptr_[rdx+0x@@ 30], test_rax_rax, je_0xf1, mov_rcx_qword_ptr_[r@@ dx+0x28], mov_qword_ptr_[rax+0x@@ 28]_rcx, mov_rdx_qword_ptr_[rdx+0x@@ 28], test_rdx_rdx, je_0xec, mov_qword_ptr_[rdx+0x@@ 30]_rax, mov_dword_ptr_[rip+0x@@ 1e@@ 3b@@ 0]_1, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, test_ebx_ebx, js_0xffffffffffffff@@ e6, mov_edi_0x38, call_0xffffffffffffa@@ 45@@ 7, mov_qword_ptr_[rax]_rbp, mov_qword_ptr_[rax+@@ 8]_r14, mov_qword_ptr_[rax+0x1@@ 0]_r15, mov_dword_ptr_[rax+0x1@@ 8]_r13d, mov_rdi_r15, mov_rbx_rax, call_qword_ptr_[rip+0x@@ 1e@@ 38@@ f], mov_rax_qword_ptr_[rax], mov_rdi_r15, mov_qword_ptr_[rbx+0x20]_rax, call_qword_ptr_[rip+0x@@ 1e@@ 37@@ f], mov_qword_ptr_[rax]_rbx, mov_rax_qword_ptr_[rip+0x@@ a@@ 2@@ 12@@ 5], mov_qword_ptr_[rbx+0x28]_0, mov_qword_ptr_[rbx+0x30]_rax, test_rax_rax, je_0x7a, mov_qword_ptr_[rax+0x@@ 2@@ 8]_rbx, mov_qword_ptr_[rip+0x@@ a@@ 2@@ 10@@ 9@@ ]_rbx, jmp_0xffffffffffffff7f, test_ebx_ebx, js_0xffffffffffffff@@ 7e, mov_edx_3, mov_rsi_r14, mov_rdi_rbp, call_0xffffffffffffea@@ 65, mov_r9_rax, mov_r8_r12, lea_rcx_[rip+0x@@ fc@@ cb], lea_rdx_[rip+0x10@@ 1a@@ c], mov_esi_0x1@@ 95, lea_rdi_[rip+0x@@ 100@@ 9f], xor_eax_eax, call_0xffffffffffff8@@ bb@@ e, mov_rdx_qword_ptr_[rdx+0x@@ 28], mov_qword_ptr_[rip+0x@@ a@@ 20@@ a5@@ ]_rdx, jmp_0xffffffffffffff16, mov_qword_ptr_[rip+0x@@ a@@ 20@@ a@@ 1]_rax, jmp_0xffffffffffffff17, mov_qword_ptr_[rip+0x@@ a@@ 20@@ 8d@@ ]_rbx, jmp_0xffffffffffffff85, mov_edx_1, mov_rsi_r14, mov_rdi_rbp, call_0xffffffffffffea@@ 00, mov_edx_5, lea_rsi_[rip+0x@@ fc@@ 9f], lea_rdi_[rip+0xa@@ 5c@@ 6], mov_r13_rax, call_0xfffffffffffe@@ 8e@@ 35, mov_rdi_rax, mov_rdx_r13, mov_rsi_r12, xor_eax_eax, call_0xffffffffffff8d@@ a@@ 5
endbr64, mov_rdi_qword_ptr_[rip+0x@@ a@@ 207@@ d], test_rdi_rdi, je_0x22, sub_rsp_8, call_0xfffffffffffe@@ 8d@@ bc, mov_qword_ptr_[rip+0x@@ a@@ 20@@ 64]_0, add_rsp_8, ret, ret
cmp_dword_ptr_[rdi+0x1@@ 8]_4, ja@@ _0xc, ret, push_r12, mov_r12_rsi, mov_rsi_rdx, push_rbp, mov_rbp_rdi, sub_rsp_8, call_0x5b@@ 10, test_al_al, jne_0x29, mov_rax_qword_ptr_[rip+0x@@ 1e@@ 220], test_rax_rax, je_7, mov_rdi_rbp, call_rax, test_r12_r12, je_8, cmp_dword_ptr_[rbp+0x@@ 18]_1, ja_0x1@@ d, add_rsp_8, pop_rbp, pop_r12, ret, mov_rdi_rbp, call_0xffffffffffff6@@ 99@@ d, jmp_0xffffffffffffffd1, mov_rsi_r12, mov_rdi_rbp, call_0x5b@@ 2a, test_al_al, je_0xffffffffffffffd8, cmp_dword_ptr_[r@@ 12+0x1@@ 8]_5, ja_0x1@@ b, add_rsp_8, pop_rbp, mov_rdi_r12, pop_r12, jmp_0xffffffffffff@@ 6@@ 96@@ f, mov_esi_5, mov_rdi_r12, call_0xffffffffffffda@@ c8, jmp_0xffffffffffffffd@@ a
sub_rsp_0x18, cmp_byte_ptr_[rdi]@@ _0x2f, jne_0x39, movzx_eax_byte_ptr_[r@@ di+1], test_al_al, je_0x52, cmp_al_0x2f, je_0x4e, add_rdi_2, mov_esi_0x2f, call_0xfffffffffffe@@ 8d@@ 9b, mov_rdi_rax, test_rax_rax, jne_0xffffffffffffffe0, lea_rax_[rip+0x@@ 1c@@ 27@@ 7], add_rsp_0x18, ret, mov_qword_ptr_[rsp+8]_rdi, call_0xffffffffffffd0@@ bb, test_rax_rax, mov_rdi_qword_ptr_[rsp+8], jne_0x16, mov_esi_0x5@@ f, call_0xfffffffffffe@@ 8d@@ 67, test_rax_rax, je_0x13, lea_rax_[rip+0x@@ 1c@@ 22@@ 1], add_rsp_0x18, ret, lea_rax_[rip+0x@@ 1c@@ 25@@ 5], jmp_0xfffffffffffffff@@ 4
push_rbp, mov_rbp_rdi, call_0xffffffffffffff@@ 7c, mov_rdi_rbp, mov_qword_ptr_[rip+0x@@ a@@ 1f@@ 25@@ ]_rax, call_0xffffffffffffa@@ 2e@@ d, mov_qword_ptr_[rip+0x@@ a@@ 1f@@ 11@@ ]_rax, mov_rax_qword_ptr_[rip+0x@@ a@@ 1f@@ 12], pop_rbp, mov_rax_qword_ptr_[rax], jmp_rax
endbr64, jmp_0xffffffffffffffc@@ c
push_r14, mov_r14d_ecx, push_r13, mov_r13_rdx, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, mov_ebx_r8d, call_0xffffffffffffff@@ 29, mov_edx_dword_ptr_[rip+0x@@ 1e0@@ c6], test_edx_edx, js@@ _0x1f, mov_r8d_ebx, pop_rbx, mov_rdi_rbp, pop_rbp, mov_rsi_r12, pop_r12, mov_rdx_r13, mov_rax_qword_ptr_[rax+0x18], pop_r13, mov_ecx_r14d, pop_r14, jmp_rax, mov_edx_3, mov_rsi_r13, mov_rdi_r12, call_0xffffffffffffe@@ 7e@@ 2, mov_r8_rax, lea_rcx_[rip+0x@@ fa@@ d3], lea_rdx_[rip+0x@@ ff@@ 0c], mov_esi_0x2@@ 7b, lea_rdi_[rip+0x@@ fe@@ 1f], xor_eax_eax, call_0xffffffffffff8@@ 93@@ e
push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, mov_rdi_qword_ptr_[rip+0x@@ a@@ 1e@@ 57], test_rdi_rdi, je_0x12, call_0xfffffffffffe@@ 8b@@ 9a, mov_qword_ptr_[rip+0x@@ a@@ 1e@@ 42@@ ]_0, lea_rdi_[rip+0xa@@ 1e@@ 23], call_0x1a@@ 73, mov_r12_qword_ptr_[rip+0x@@ a@@ 1e@@ 4f], mov_rdi_r12, call_0xfffffffffffe@@ 8b@@ e4, mov_rdx_rax, mov_rsi_r12, lea_rdi_[rip+0xa@@ 1e0@@ 2], call_0x1c@@ e2, mov_esi_0x2f, lea_rdi_[rip+0xa@@ 1d@@ f1], call_0x1a@@ b1, mov_rdi_rbp, call_0xfffffffffffe8@@ bb@@ 9, mov_rdx_rax, mov_rsi_rbp, lea_rdi_[rip+0xa@@ 1dd@@ 7], call_0x1@@ cb@@ 7, lea_rdi_[rip+0xa@@ 1d@@ cb], call_0x1c@@ eb, mov_rdi_qword_ptr_[rip+0x@@ a@@ 1d@@ cf], lea_rsi_[rip+0x7c@@ 4d], call_0xfffffffffffe9@@ 138, mov_qword_ptr_[rip+0x@@ a@@ 1d@@ c4@@ ]_rax, test_rax_rax, je_0x11, add_rsp_8, pop_rbp, pop_r12, ret, call_0xfffffffffffe8@@ 998, cmp_dword_ptr_[rax]_2, je_0xffffffffffffffe9, mov_rbp_qword_ptr_[rip+0x@@ a@@ 1d@@ 97], lea_rsi_[rip+0x@@ fa@@ 10], lea_rdi_[rip+0xa@@ 2b@@ 7], mov_edx_5, call_0xfffffffffffe@@ 8b@@ 24, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffff8b@@ 6@@ 7
endbr64, push_r15, push_r14, mov_r14d_1, push_r13, mov_r13_rdx, push_r12, mov_r12_rsi, push_rbp, push_rbx, sub_rsp_0x4@@ 28, mov_dword_ptr_[rsp+8]_ecx, mov_dword_ptr_[rsp+0xc]_r8d, lea_rbx_[rsp+0x10], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x4@@ 18]_rax, xor_eax_eax, call_0xfffffffffffffec@@ e, mov_rdi_qword_ptr_[rip+0x@@ a@@ 1d@@ 22], xor_esi_esi, call_0xffffffffffff4e@@ 90, mov_rdi_rax, mov_rbp_rax, call_0xffffffffffff4@@ ee@@ 5, mov_rdx_qword_ptr_[rip+0x@@ a@@ 1d@@ 11], test_rdx_rdx, jne_0x80, jmp_0x1@@ 5b, mov_edx_1, mov_rsi_r13, mov_rdi_r12, call_0xffffffffffffe6@@ 3d, mov_rdi_rax, mov_qword_ptr_[rsp]_rax, call_0xfffffffffffe8@@ aa@@ 1, mov_rsi_qword_ptr_[rsp], mov_r15_rax, mov_rdx_rax, mov_rdi_rbx, call_0xfffffffffffe@@ 88@@ ff, cmp_r15@@ _0x3ff, ja_0x1@@ 4, test_eax_eax, jne_0x10, movzx_eax_byte_ptr_[r@@ sp+r@@ 15+0x10], test_al_al, je_0x23, cmp_al_0x2f, je_0x1f, mov_rdi_qword_ptr_[rbp+0x18], mov_rcx_rbx, lea_rdx_[rip+0xd@@ ed@@ 2], mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 90@@ aa, xor_r14d_r14d, mov_rdx_qword_ptr_[rip+0x@@ a@@ 1c@@ 93], test_rdx_rdx, je_0x1e, mov_rcx_qword_ptr_[rip+0x@@ a@@ 1c@@ 7f], mov_esi_0x400, mov_rdi_rbx, call_0x1@@ 6f@@ 7, test_eax_eax, jns_0xffffffffffffff@@ 78, mov_eax_dword_ptr_[rsp+8], test_eax_eax, jle_0x@@ a4, cmp_dword_ptr_[rsp+0x@@ c]_1, lea_r8_[rip+0x@@ ab@@ 4c], lea_rbx_[rip+0x@@ fc@@ 16], cmovne@@ _rbx@@ _r8, mov_edx_1, mov_rsi_r13, mov_rdi_r12, call_0xffffffffffffe@@ 58@@ c, mov_rdi_qword_ptr_[rbp+0x18], mov_rcx_rax, mov_r8_rbx, lea_rdx_[rip+0x@@ fc@@ 04], mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 90@@ 2f, mov_rdi_rbp, call_0xffffffffffff4e@@ 77, mov_rdi_rbp, call_0xffffffffffff4e@@ ff, mov_rdi_rbp, call_0xffffffffffff4@@ fc@@ 7, mov_rdi_rbp, call_0xffffffffffff50@@ 8f, mov_rdi_qword_ptr_[rip+0x@@ a@@ 1c@@ 1b], call_0xffffffffffff6@@ 8b@@ 3, mov_rax_qword_ptr_[rsp+0x@@ 418], xor_rax_qword_ptr_fs:[0x28], jne_0x57, add_rsp_0x4@@ 28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, test_r14b_r14b, jne_0x25, mov_rdi_rbp, call_0xffffffffffff4e@@ 18, mov_rdi_rbp, call_0xffffffffffff4@@ ea0, jmp_0xffffffffffffffa1, mov_edx_dword_ptr_[rsp+8], test_edx_edx, jg_0xffffffffffffff@@ 45, mov_rdi_rbp, call_0xffffffffffff4e@@ 85, mov_rdi_rbp, call_0xffffffffffff4@@ ed@@ d, jmp_0xffffffffffffff86, call_0xfffffffffffe8@@ 95@@ 6
endbr64, sub_rsp_8, mov_rdi_qword_ptr_[rip+0x@@ a@@ 1b@@ 81], call_0xfffffffffffffd@@ 11, mov_rax_qword_ptr_[rip+0x@@ a@@ 1b@@ 75], mov_qword_ptr_[rip+0x@@ a@@ 1b@@ 3e@@ ]_rax, add_rsp_8, ret
endbr64, push_rbp, mov_rbp_rdi, mov_rdi_qword_ptr_[rip+0x@@ a@@ 19@@ a9], test_rdi_rdi, je_0x1e, xor_edx_edx, xor_esi_esi, call_0xfffffffffffe@@ 8b@@ 88, test_eax_eax, jne_0x13, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffffffe@@ 3b, pop_rbp, ret, mov_rbp_qword_ptr_[rip+0x@@ a@@ 19@@ 77], lea_rsi_[rip+0x@@ f6@@ 80], lea_rdi_[rip+0x@@ 9e@@ 97], mov_edx_5, call_0xfffffffffffe@@ 870@@ 4, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffff87@@ 4@@ 7
push_r15, mov_r15d@@ _r9d, push_r14, mov_r14_r8, push_r13, mov_r13_rdi, mov_rdi_rdx, push_r12, mov_r12_rcx, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rsi, sub_rsp_0x18, call_0x5@@ 34@@ d, test_rax_rax, jne_0x3c, test_rbx_rbx, je_0x28, add_rsp_0x18, mov_rax_rbx, pop_rbx, mov_rdi_rbp, pop_rbp, mov_rsi_r12, pop_r12, pop_r13, mov_rdx_r14, pop_r14, mov_ecx_r15d, pop_r15, jmp_rax, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_edx_5, lea_rsi_[rip+0x@@ f6@@ 1d], lea_rdi_[rip+0x@@ 9e@@ 04], mov_qword_ptr_[rsp+8]_rax, call_0xfffffffffffe@@ 86@@ 71, mov_rcx_qword_ptr_[rsp+8], mov_rdi_rax, mov_rdx_rbp, mov_rsi_r13, xor_eax_eax, call_0xffffffffffff8@@ 5d@@ c
endbr64, mov_eax_dword_ptr_[rip+0x@@ 1d@@ 6d@@ e], test_eax_eax, js@@ _4, ret, jmp_0xfffffffffffffc@@ 2@@ 0
endbr64, ret
endbr64, ret
endbr64, cmp_edi_2, ja_9, ret, sub_rsp_8, lea_rdi_[rip-0x@@ dd@@ b], call_0x5@@ 28@@ 5, add_rsp_8, jmp_0x5@@ 2c@@ c
endbr64, mov_eax_dword_ptr_[rip+0x@@ 1d@@ 8@@ 2e], test_eax_eax, jle_0x@@ f4, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, cmp_qword_ptr_[rip+0x@@ a@@ 15@@ d8]_0, mov_rbp_qword_ptr_[rip+0x@@ a@@ 16@@ 21], je_0xd9, mov_rdi_rbp, xor_esi_esi, call_0xffffffffffff47@@ 66, mov_rdi_rax, mov_rbp_rax, call_0xffffffffffff47@@ bb, mov_rbx_qword_ptr_[rip+0x@@ a@@ 15@@ af], lea_r13_[rip+0x@@ f@@ 5a@@ 3], lea_r12_[rip+0x@@ a@@ 4c@@ b], test_rbx_rbx, je_0x58, mov_rsi_qword_ptr_[rbx+8], mov_rdi_qword_ptr_[rbx], cmp_dword_ptr_[rbx+0x1@@ 8]_1, mov_edx_1, mov_r15_r12, cmove@@ _r15@@ _r13, call_0xffffffffffffd@@ f0@@ 1, mov_rdi_qword_ptr_[rbx+0x10], mov_r14_rax, call_qword_ptr_[rip+0x@@ 1d@@ 7c@@ f], mov_rdi_qword_ptr_[rbp+0x18], mov_rcx_rax, mov_r9_r15, mov_r8_r14, lea_rdx_[rip+0xf@@ 56@@ 6], mov_esi_1, xor_eax_eax, call_0xfffffffffffe8@@ 99@@ 4, mov_rbx_qword_ptr_[r@@ bx+0x28], test_rbx_rbx, jne_0xffffffffffffffb0, mov_rdi_rbp, call_0xffffffffffff47@@ d3, mov_rdi_rbp, call_0xffffffffffff48@@ 5b, mov_rdi_rbp, call_0xffffffffffff4@@ 92@@ 3, mov_rdi_rbp, call_0xffffffffffff4@@ 9e@@ b, mov_rdi_qword_ptr_[rip+0x@@ a@@ 15@@ 77], call_0xffffffffffff6@@ 20@@ f, mov_dword_ptr_[rip+0x@@ 1d@@ 74@@ 8]_0, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, ret, mov_rdi_rbp, call_0xfffffffffffe8@@ 125, test_eax_eax, je_0xffffffffffffffc8, call_0xfffffffffffe8@@ 10@@ c, cmp_dword_ptr_[rax]_2, je_0xffffffffffffffbe, lea_rsi_[rip+0xc@@ 88@@ c], lea_rdi_[rip+0x@@ 9a@@ 32], mov_edx_5, call_0xfffffffffffe8@@ 29@@ f, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffff8@@ 2e@@ 2
endbr64, push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, push_rbx, sub_rsp_8, call_qword_ptr_[rip+0x@@ 1d@@ 6c@@ e], mov_rbx_qword_ptr_[rax], test_rbx_rbx, je_0x30, xor_r13d_r13d, mov_rdi_rbp, call_qword_ptr_[rip+0x@@ 1d@@ 6b@@ f], cmp_dword_ptr_[rbx+0x1@@ 8]_1, mov_rsi_r13, mov_rdi_qword_ptr_[rbx], cmovne@@ _rsi@@ _r12, mov_rdx_rax, call_0xfffffffffffff4@@ 3e, mov_rbx_qword_ptr_[r@@ bx+0x20], test_rbx_rbx, jne_0xffffffffffffffda, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret
endbr64, push_rbp, mov_rbp_rsi, mov_esi_1, call_qword_ptr_[rip+0x@@ 1d@@ 66@@ d], test_rax_rax, je_0x12, mov_rsi_rbp, mov_rdi_rax, pop_rbp, jmp_0xffffffffffffff81, pop_rbp, ret
push_rbp, push_rbx, mov_rbx_rsi, sub_rsp_8, call_0xffffffffffff9@@ 33@@ 7, mov_rbp_rax, jmp_0x15, mov_byte_ptr_[rax]_0, mov_rsi_rbx, mov_rdi_rbp, call_0xffffffffffffff@@ af, mov_esi_0x2f, mov_rdi_rbp, call_0xfffffffffffe8@@ 26@@ 2, test_rax_rax, jne_0xffffffffffffffe2, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffffe@@ 7e@@ f@@ f
endbr64, push_r12, mov_esi_1, push_rbp, mov_rbp_rdi, sub_rsp_8, mov_r12_qword_ptr_[rip+0x@@ a@@ 13@@ 86], mov_rdi_r12, call_qword_ptr_[rip+0x@@ 1d@@ 5@@ dd], test_rax_rax, je_0xd, mov_rdi_rax, mov_rsi_rbp, call_0xfffffffffffffe@@ f2, add_rsp_8, mov_rsi_rbp, pop_rbp, mov_rdi_r12, pop_r12, jmp_0xffffffffffffff7@@ 0
endbr64, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, sub_rsp_8, call_0xfffffffffffffeb@@ f, mov_rdi_r12, call_qword_ptr_[rip+0x@@ 1d@@ 5a@@ 1], add_rsp_8, mov_rsi_rbp, pop_rbp, mov_rdi_rax, pop_r12, jmp_0xffffffffffffff3@@ 4
endbr64, mov_r8d_ecx, mov_ecx_0xffffffff, jmp_0xfffffffffffff@@ 46@@ 4
endbr64, mov_r8d_ecx, mov_ecx_1, jmp_0xfffffffffffff@@ 44@@ 4
endbr64, push_rbp, mov_rbp_rsi, push_rbx, mov_ebx_ecx, sub_rsp_8, call_0xfffffffffffff3e@@ 1, cmp_ebx_1, mov_eax_0, cmove@@ _rbp_rax, mov_rax_qword_ptr_[rip+0x@@ a@@ 13@@ 01], mov_rdi_rbp, call_qword_ptr_[rax+8], mov_rax_qword_ptr_[rip+0x@@ a@@ 12@@ f4], mov_rax_qword_ptr_[rax+0x10], add_rsp_8, pop_rbx, pop_rbp, jmp_rax
endbr64, push_r15, push_r14, push_r13, mov_r13_rdi, push_r12, push_rbp, push_rbx, sub_rsp_0x1@@ 38, mov_qword_ptr_[rsp+0x10]_rsi, mov_qword_ptr_[rsp+0x18]_rdx, mov_qword_ptr_[rsp]_rcx, mov_qword_ptr_[rsp+8]_r8, lea_rsi_[rip+0x7@@ 12@@ 3], mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x1@@ 28]_rax, xor_eax_eax, call_0xfffffffffffe8@@ 5f@@ b, test_rax_rax, je_0x2@@ 34, lea_rdi_[rip-0x@@ b@@ 88@@ a], mov_rcx_rax, mov_r14_rax, mov_edx_1, mov_esi_0xffffffff, xor_eax_eax, call_0xffffffffffff84@@ f4, lea_r12_[rsp+0x20], mov_rcx_r13, mov_rdx_r14, mov_esi_0x100, mov_rdi_r12, call_0xcc@@ 2, movsxd_rbx_eax, test_ebx_ebx, js_0x1@@ 91, mov_rbp_r12, jmp_0xa, inc_rbp, movsx_edi_byte_ptr_[r@@ bp], mov_esi_2, call_0xffffffffffff4@@ 6d@@ c, test_al_al, jne_0xffffffffffffffed, cmp_byte_ptr_[rbp]@@ _0x23, je_0xffffffffffffff@@ bf, add_rbx@@ _r12, cmp_rbp_rbx, jb@@ _0xf, jmp_0x1f, dec@@ _rbx, cmp_rbp_rbx, je_0xffffffffffffff@@ aa, movsx_edi_byte_ptr_[r@@ bx-1], mov_esi_2, call_0xffffffffffff4@@ 6a@@ f, test_al_al, jne_0xffffffffffffffe8, cmp_rbp_rbx, je_0xffffffffffffff@@ 93, mov_byte_ptr_[rbx]_0, movzx_eax_byte_ptr_[rbp], test_al_al, je_0x1@@ e0, mov_rbx_rbp, jmp_0x16, movzx_eax_byte_ptr_[rbx+1], inc_rbx, test_al_al, je_0x1@@ c7, movsx_edi@@ _al, mov_esi_2, call_0xffffffffffff4@@ 67@@ 1, test_al_al, je_0xffffffffffffffe2, cmp_byte_ptr_[rbx]_0, je_0x1@@ ad, mov_byte_ptr_[rbx]_0, lea_r15_[r@@ bx+1], jmp_0xb, inc_r15, movsx_edi_byte_ptr_[r@@ 15], mov_esi_2, call_0xffffffffffff4@@ 64@@ 4, test_al_al, jne_0xffffffffffffffed, mov_ecx_9, mov_rsi_rbp, lea_rdi_[rip+0xf@@ 150], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x93, mov_ecx_0xf, mov_rsi_rbp, lea_rdi_[rip+0xf@@ 13@@ b], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x75, mov_ecx_0x1@@ 1, mov_rsi_rbp, lea_rdi_[rip+0xf@@ 130], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x7c, mov_ecx_9, mov_rsi_rbp, lea_rdi_[rip+0xf@@ 12@@ 7], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, je_0x20, mov_ecx_0xf, lea_rdi_[rip+0xf@@ 11@@ 9], mov_rsi_rbp, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x@@ 83, xor_r9d_r9d, mov_r8_qword_ptr_[rsp+8], mov_rcx_qword_ptr_[rsp], mov_rsi_qword_ptr_[rsp+0x18], mov_rdx_r15, mov_rdi_r13, call_0xfffffffffffff78@@ a, jmp_0xfffffffffffffe@@ 85, xor_r9d_r9d, mov_r8_qword_ptr_[rsp+8], mov_rcx_qword_ptr_[rsp], mov_rsi_qword_ptr_[rsp+0x10], mov_rdx_r15, mov_rdi_r13, call_0xfffffffffffff76@@ 9, jmp_0xfffffffffffffe@@ 64, mov_r9d_1, jmp_0xffffffffffffffdc, mov_edi_1, call_0xffffffffffff7a@@ 62, mov_rax_qword_ptr_[rsp+0x1@@ 28], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ b6, add_rsp_0x1@@ 38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_ecx_0x1@@ 1, lea_rdi_[rip+0x@@ f0@@ 8d], mov_rsi_rbp, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x3c, mov_r9d_1, jmp_0xffffffffffffff66, call_0xfffffffffffe@@ 7c@@ 3f, cmp_dword_ptr_[rax]_2, je_0xffffffffffffff@@ aa, lea_rsi_[rip+0xe@@ ea@@ 6], lea_rdi_[rip+0x9@@ 56@@ 5], mov_edx_5, call_0xfffffffffffe7@@ dd@@ 2, mov_rdi_rax, mov_rsi_r13, xor_eax_eax, call_0xffffffffffff7e@@ 15, lea_rsi_[rip+0x@@ ee@@ b1], lea_rdi_[rip+0x@@ 95@@ 40], mov_edx_5, call_0xfffffffffffe@@ 7d@@ ad, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffff7d@@ 20, lea_rdi_[rip+0x@@ 95@@ 1f], mov_edx_5, lea_rsi_[rip+0x@@ ee@@ b5], call_0xfffffffffffe@@ 7d@@ 85, mov_rdi_rax, xor_eax_eax, call_0xffffffffffff7c@@ fb, call_0xfffffffffffe@@ 7d@@ a@@ 6
endbr64, push_r13, push_r12, mov_r12d_edi, mov_rdi_qword_ptr_[rip+0x@@ a0@@ fe@@ 6], push_rbp, call_0xfffffffffffe@@ 7a@@ cd, lea_rdi_[rip+0xe@@ fe@@ 7], call_0xffffffffffff4@@ 9d@@ 1, mov_rdi_qword_ptr_[rip+0x@@ a0@@ fc@@ 5], mov_rbp_rax, mov_qword_ptr_[rip+0x@@ a0@@ fc@@ 3]_rax, call_0xfffffffffffe7@@ aa@@ b, lea_rdx_[rip+0xe@@ fc@@ e], mov_rsi_rbp, lea_rdi_[rip+0xc@@ 6a@@ 9], xor_eax_eax, call_0xffffffffffffe@@ 30@@ 3, lea_rdi_[rip+0x1b@@ 24@@ 7], mov_qword_ptr_[rip+0x@@ a0@@ f@@ 90]_rax, call_0x5@@ 30, mov_eax_dword_ptr_[rip+0x@@ 1d@@ 16@@ d], test_eax_eax, jns@@ _7, call_0xfffffffffffff6b@@ 1, cmp_r12d_2, jbe_0x@@ 70, cmp_qword_ptr_[rip+0x@@ 1d@@ 16@@ 6]_1, sbb@@ _ebp_ebp, and_ebp@@ _0xfffffff@@ 0, add_ebp@@ _0x13, mov_edi_ebp, call_0x2@@ 04, cmp_eax_-1, jne_0x33, mov_r13_qword_ptr_[rip+0x@@ a0@@ f5@@ b], mov_esi_0x1@@ ed, mov_rdi_r13, call_0xfffffffffffe@@ 7b@@ 7b, test_eax_eax, je_0x94, call_0xfffffffffffe@@ 7b@@ 0e, cmp_dword_ptr_[rax]@@ _0x11, jne_0x@@ cc, mov_edi_ebp, call_0x1@@ ce, lea_edx_[rax@@ +3], cmp_edx@@ _5, ja_0x@@ 95, lea_rcx_[rip+0x@@ ef@@ 46], movsxd_rdx_dword_ptr_[r@@ cx+rdx*4], add_rdx_rcx, jmp_rdx, mov_edi_1, call_0x1@@ a3, jmp_0xffffffffffffffd5, xor_edx_edx, xor_esi_esi, mov_rdi_r13, call_0xfffffffffffe@@ 80@@ b9, test_eax_eax, je_0xffffffffffffff@@ 72, mov_edx_5, lea_rsi_[rip+0x@@ ed@@ b0], jmp_0x32, mov_r8d_eax, lea_rcx_[rip+0x@@ ed@@ e4], lea_rdx_[rip+0xe@@ ec@@ d], mov_esi_0x3@@ 2f, lea_rdi_[rip+0x@@ ee@@ 00], xor_eax_eax, call_0xffffffffffff7@@ 9@@ 1f, mov_edx_5, lea_rsi_[rip+0x@@ ed@@ 46], lea_rdi_[rip+0x9@@ 36@@ 5], call_0xfffffffffffe@@ 7b@@ d7, mov_rdi_rax, mov_rsi_r13, xor_eax_eax, call_0xffffffffffff7c@@ 1@@ a
endbr64, movdqu_xmm0_xmmword_ptr_[r@@ di], movdqu_xmm1_xmmword_ptr_[r@@ di+0x10], mov_rax_qword_ptr_[rdi+0x20], movaps_xmmword_ptr_[r@@ ip+0x@@ 1d@@ 0@@ 18@@ ]_xmm0, mov_qword_ptr_[rip+0x@@ 1d@@ 0@@ 3@@ 1]_rax, movaps_xmmword_ptr_[r@@ ip+0x@@ 1d@@ 0@@ 1a@@ ]_xmm1, ret
push_r13, mov_r13_rsi, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, call_0xa@@ 22, mov_rdi_r13, call_0xfffffffffffe@@ 7b@@ 9a, mov_rdx_rax, mov_rsi_r13, mov_rdi_rbp, call_0xc@@ 9c, mov_esi_0x2f, mov_rdi_rbp, call_0xa@@ 6f, mov_rdi_r12, call_0xfffffffffffe@@ 7b@@ 77, mov_rdx_rax, mov_rdi_rbp, mov_rsi_r12, call_0xc@@ 79, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, jmp_0x@@ ca@@ c
push_r13, push_r12, mov_r12d_edi, lea_rdi_[rip+0x9@@ 2b0], push_rbp, mov_rbp_rsi, lea_rsi_[rip+0x@@ ee@@ 5f], push_rbx, mov_rbx_rdx, mov_edx_5, sub_rsp_8, mov_r13_qword_ptr_[rip+0x@@ a0@@ de@@ 3], call_0xfffffffffffe@@ 7b@@ 03, mov_rcx_rbx, sub_rcx@@ _rbp, mov_rdi_rax, inc_rcx, mov_r8_rbx, mov_edx_r12d, mov_rsi_r13, xor_eax_eax, call_0xffffffffffff7@@ a6@@ 7
endbr64, push_r12, push_rbp, push_rbx, mov_ebx_edi, lea_rdi_[rip+0x@@ ed@@ 65], sub_rsp_0xa0, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x98]_rax, xor_eax_eax, mov_ebp_ebx, call_0xffffffffffff47@@ 33, mov_qword_ptr_[rip+0x@@ a0@@ d@@ 47@@ ]_rax, mov_rsi_rax, and_ebp@@ _2, je_0x5c, lea_rdx_[rip+0x@@ f0@@ 26], lea_rdi_[rip+0x@@ a0@@ d6@@ 1], call_0xffffffffffffff@@ 01, cmp_dword_ptr_[rip+0x@@ 1c@@ f@@ 1d@@ ]_-1, je_0x1@@ b5, mov_edx_5, lea_rsi_[rip+0xf@@ 00@@ 6], lea_rdi_[rip+0x9@@ 1f@@ a], call_0xfffffffffffe@@ 7a@@ 6c, mov_rdx_qword_ptr_[rip+0x@@ a0@@ d40], mov_esi_1, mov_rcx_rax, lea_rdi_[rip+0x1c@@ ee@@ 9], call_0xffffffffffff8@@ 4d@@ 1, mov_rsi_qword_ptr_[rip+0x@@ a0@@ ce@@ 5], lea_rdi_[rip+0x@@ a0@@ d0@@ e], lea_rdx_[rip+0xe@@ fe@@ 1], call_0xfffffffffffffea@@ 7, mov_rdi_qword_ptr_[rip+0x@@ a0@@ cc@@ 3], test_rdi_rdi, je_7, call_0xfffffffffffe7@@ 9d@@ 6, mov_rdi_qword_ptr_[rip+0x@@ a0@@ cf@@ a], lea_rsi_[rip+0x6a@@ f8], call_0xfffffffffffe7@@ fe@@ 3, mov_qword_ptr_[rip+0x@@ a0@@ c@@ 9f@@ ]_rax, mov_rdi_rax, test_rax_rax, je_0x109, mov_r12_qword_ptr_[rip+0x@@ a0@@ cd@@ 4], call_0xfffffffffffe@@ 7d@@ 44, mov_edi_eax, mov_rsi_r12, call_0xffffffffffff8e@@ 9a, mov_r12_qword_ptr_[rip+0x@@ a0@@ c7@@ 6], mov_rdi_r12, call_0xfffffffffffe@@ 7d@@ 2b, mov_esi_eax, mov_rdx_rsp, mov_edi_1, call_0xfffffffffffe@@ 7d@@ cc, test_eax_eax, js_0x1@@ b6, cmp_qword_ptr_[rsp+0x30]_0, jne_0xb, and_ebx@@ _8, je_0x1@@ 3c, test_ebp_ebp, jne_0x3c, test_r12_r12, je_0xca, mov_r12d_2, mov_rax_qword_ptr_[rsp+0x98], xor_rax_qword_ptr_fs:[0x28], jne_0x14@@ a, add_rsp@@ _0xa0, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, mov_rsi_qword_ptr_[rip+0x@@ a0@@ c0@@ 9], lea_rdi_[rip+0x@@ a0@@ c@@ 12], lea_rdx_[rip+0xe@@ f0@@ e], call_0xfffffffffffffd@@ cb, mov_rdi_qword_ptr_[rip+0x@@ a0@@ bd@@ f], test_rdi_rdi, je_7, call_0xfffffffffffe7@@ 8f@@ a, mov_rdi_qword_ptr_[rip+0x@@ a0@@ b@@ fe], lea_rsi_[rip+0x6@@ 3a8], call_0xfffffffffffe7@@ f0@@ 7, mov_qword_ptr_[rip+0x@@ a0@@ bb@@ b@@ ]_rax, mov_rbp_qword_ptr_[rip+0x@@ a0@@ be@@ 4], mov_rdi_rax, test_rax_rax, je_0x124, call_0xfffffffffffe@@ 7c@@ 68, mov_edi_eax, mov_rsi_rbp, call_0xffffffffffff8d@@ be, mov_r12_qword_ptr_[rip+0x@@ a0@@ b@@ 9a], jmp_0xffffffffffffff58, call_0xfffffffffffe@@ 77@@ 48, cmp_dword_ptr_[rax]_2, jne_0x@@ b5, and_ebx@@ _0x10, je_0x7e, test_ebp_ebp, jne_0xffffffffffffff@@ 73, mov_r12d_1, jmp_0xffffffffffffff3c, mov_rdi_qword_ptr_[rip+0x@@ a0@@ ba@@ 9], mov_edx_0x1@@ 80, mov_esi_0x2@@ 42, xor_eax_eax, call_0xfffffffffffe@@ 7e@@ 6d, mov_dword_ptr_[rip+0x@@ 1c@@ d@@ 4a@@ ]_eax, mov_r12d_eax, cmp_eax_-1, jne_0xfffffffffffffe@@ 2d, call_0xfffffffffffe7@@ 6f@@ 6, cmp_dword_ptr_[rax]_2, jne_0xb, and_ebx_1, jne_0xfffffffffffffe@@ fe, mov_rbp_qword_ptr_[rip+0x@@ a0@@ b@@ 6c], mov_edx_5, lea_rsi_[rip+0x@@ ec@@ 18], jmp_0x5@@ 8, test_ebp_ebp, jne_0x2a, mov_r12d@@ _0xfffffffe, jmp_0xfffffffffffffe@@ d3, mov_r12d@@ _0xfffffffd, test_ebp_ebp, je_0xfffffffffffffe@@ c6, mov_edi_1, call_0xffffffffffff7@@ 47@@ 6, jmp_0xfffffffffffffe@@ b6, mov_edi_1, call_0xffffffffffff7@@ 46@@ 7, jmp_0xffffffffffffffce, call_0xfffffffffffe7@@ 87@@ 0, mov_rbp_qword_ptr_[rip+0x@@ a0@@ b@@ 14], mov_edx_5, lea_rsi_[rip+0x@@ eb@@ f8], lea_rdi_[rip+0x8@@ fa@@ f], call_0xfffffffffffe@@ 78@@ 21, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffff7@@ 8@@ 64, mov_rbp_qword_ptr_[rip+0x@@ a0@@ a@@ e8], mov_edx_5, lea_rsi_[rip+0x@@ eb@@ fc], jmp_0xffffffffffffffd4, mov_edx_5, lea_rsi_[rip+0x@@ ec@@ 1e], jmp_0xffffffffffffffc@@ 6
endbr64, mov_qword_ptr_[rip+0x@@ a0@@ a@@ 7d@@ ]_rdi, ret
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x28]_rsi, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, mov_r10_rdi, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_rdi_qword_ptr_[rip+0x@@ a0@@ 9e@@ 7], lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rcx_rsp, lea_rax_[rsp+0x20], mov_rdx_r10, mov_esi_1, mov_dword_ptr_[rsp]_8, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffe7@@ 556, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xfffffffffffe@@ 77@@ 3@@ 9
endbr64, push_r15, push_r14, push_r13, xor_r13d_r13d, push_r12, movabs@@ _r12@@ _0x400@@ 68@@ 0000@@ 000000, push_rbp, push_rbx, sub_rsp@@ _0x8@@ 18, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x@@ 80@@ 8]_rax, xor_eax_eax, mov_r14_rsp, mov_rcx_qword_ptr_[rip+0x@@ a0@@ 9a@@ 1], mov_rdx_qword_ptr_[rip+0x@@ a0@@ 95@@ 2], mov_esi_0x800, mov_rdi_r14, call_0x3@@ 92, test_eax_eax, jle_0x@@ 2@@ 16, movsx_edi_byte_ptr_[r@@ sp], inc_r13d, test_dil_dil, je_0xffffffffffffffd3, mov_r15_r14, jmp_0x13, movsx_edi_byte_ptr_[r@@ 15+1], inc_r15, test_dil_dil, je_0xffffffffffffffbd, mov_esi_2, call_0xffffffffffff3d@@ 9e, test_al_al, jne_0xffffffffffffffe7, movzx_eax_byte_ptr_[r15], test_al_al, je_0xffffffffffffff@@ a7, cmp_al_0x2@@ 3, je_0xffffffffffffff@@ a3, mov_rbx_r15, jmp_0x15, movzx_eax_byte_ptr_[rbx+1], inc_rbx, test_al_al, je_0x1@@ 9f, sub_eax@@ _0x21, cmp_al@@ _0x5d, jbe_0xffffffffffffff@@ ec, cmp_rbx_r15, je_0x1@@ 8f, mov_byte_ptr_[rbx]_0, mov_rax_qword_ptr_[rip+0x@@ a0@@ 8d@@ f], mov_rdi_r15, call_qword_ptr_[rax], movsx_edi_byte_ptr_[r@@ bx+1], lea_rbp_[r@@ bx+1], test_dil_dil, jne_0x1b, jmp_0x@@ e9, movsx_edi_byte_ptr_[r@@ bp+1], lea_rbx_[r@@ bp+1], test_dil_dil, je_0x1@@ 5d, mov_rbp_rbx, mov_esi_2, call_0xffffffffffff3d@@ 27, test_al_al, jne_0xffffffffffffffe0, movsx_edi_byte_ptr_[r@@ bp], test_dil_dil, je_0x1@@ 37, mov_esi_0x20, call_0xffffffffffff3d@@ 0c, test_al_al, je_0x105, movsx_edi_byte_ptr_[r@@ bp+1], lea_r15_[r@@ bp+1], test_dil_dil, jne_0x1d, jmp_0x1@@ 32, movsx_edi_byte_ptr_[r@@ 15+1], lea_rax_[r@@ 15+1], test_dil_dil, je_0x58, mov_r15_rax, mov_esi_0x20, lea_rbx_[r@@ 15-1], call_0xffffffffffff3c@@ ce, test_al_al, jne_0xffffffffffffffdf, movsx_edi_byte_ptr_[r@@ 15], mov_esi_0x10, call_0xffffffffffff3c@@ bc, test_al_al, jne_0xffffffffffffffcd, movzx_eax_byte_ptr_[r15], cmp_al_0x3a, jbe_0x@@ 65, movsx_edi_byte_ptr_[r@@ 15], test_dil_dil, je_0x1a, cmp_dil@@ _0x23, je_0x14, mov_esi_2, call_0xffffffffffff3c@@ 97, test_al_al, je_0x102, mov_rax_r15, mov_r15_rbx, mov_byte_ptr_[rax]_0, lea_rbx_[r@@ 15+2], cmp_byte_ptr_[rbp]@@ _0x2d, je_0x41, mov_rax_qword_ptr_[rip+0x@@ a0@@ 7f@@ 8], mov_rdi_rbp, call_qword_ptr_[rax+8], movsx_edi_byte_ptr_[r@@ 15+2], test_dil_dil, jne_0xffffffffffffff@@ 33, mov_rax_qword_ptr_[rip+0x@@ a0@@ 7@@ dd], call_qword_ptr_[rax+0x10], jmp_0xfffffffffffffe@@ 6a, bt@@ _r12_rax, jb_0xffffffffffffff@@ 5c, jmp_0xffffffffffffff93, cmp_byte_ptr_[rbp+@@ 1]_0, je_0xffffffffffffffbd, mov_r12_qword_ptr_[rip+0x@@ a0@@ 7e@@ b], mov_edx_5, lea_rsi_[rip+0xe@@ 96@@ f], lea_rdi_[rip+0x@@ 8c@@ 86], call_0xfffffffffffe7@@ 4f@@ 8, mov_rdi_rax, mov_rdx_r12, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffff7@@ 46@@ 8, movsx_edi_byte_ptr_[r@@ bp], mov_esi_0x10, call_0xffffffffffff3b@@ f7, test_al_al, jne_0xfffffffffffffe@@ f1, cmp_byte_ptr_[rbp]@@ _0x2d, je_0xfffffffffffffe@@ e7, mov_rbx_rbp, mov_rdx_rbx, mov_rsi_r14, mov_edi_r13d, call_0xfffffffffffff97@@ f, mov_rax_r15, mov_r15_rbp, jmp_0xffffffffffffff36, mov_rax_qword_ptr_[rsp+0x@@ 80@@ 8], xor_rax_qword_ptr_fs:[0x28], jne_0x24, add_rsp@@ _0x8@@ 18, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, xor_eax_eax, pop_r15, ret, mov_rdx_r15, mov_rsi_r14, mov_edi_r13d, call_0xfffffffffffff93@@ 5, call_0xfffffffffffe@@ 74@@ 9@@ 0
endbr64, push_rbp, mov_rbp_qword_ptr_[rip+0x@@ a0@@ 6d@@ c], test_rbp_rbp, je_0x25, mov_rdi_rbp, call_0xfffffffffffe7@@ 30@@ c, test_eax_eax, jne_0x@@ fe, mov_rdi_rbp, call_0xfffffffffffe7@@ 3d@@ c, mov_qword_ptr_[rip+0x@@ a0@@ 6b@@ 4]_0, mov_rbp_qword_ptr_[rip+0x@@ a0@@ 6a@@ 5], test_rbp_rbp, je_0x50, mov_rdi_rbp, call_0xfffffffffffe7@@ 2d@@ d, test_eax_eax, jne_0x@@ ba, mov_rdi_rbp, call_0xfffffffffffe7@@ 3a@@ d, mov_qword_ptr_[rip+0x@@ a0@@ 67@@ d]_0, test_eax_eax, jne_0x8a, mov_rsi_qword_ptr_[rip+0x@@ a0@@ 6b@@ e], mov_rdi_qword_ptr_[rip+0x@@ a0@@ 69@@ 7], call_0xfffffffffffe7@@ 9c@@ 7, test_eax_eax, jne_0x43, mov_rdi_qword_ptr_[rip+0x@@ a0@@ 66@@ 7], call_0xffffffffffff5@@ 2e@@ 7, mov_rdi_qword_ptr_[rip+0x@@ a0@@ 65@@ b], call_0xfffffffffffe7@@ 12@@ b, mov_eax_dword_ptr_[rip+0x@@ 1c@@ 8@@ 48], mov_qword_ptr_[rip+0x@@ a0@@ 64@@ 5]_0, test_eax_eax, jns@@ _0xb, pop_rbp, ret, mov_edi_1, pop_rbp, jmp_0xffffffffffff@@ 6@@ fb@@ 2, mov_rbp_qword_ptr_[rip+0x@@ a0@@ 66@@ 6], mov_edx_5, lea_rsi_[rip+0xe@@ 8d@@ 2], lea_rdi_[rip+0x@@ 8b@@ 01], call_0xfffffffffffe7@@ 37@@ 3, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffff7@@ 3b@@ 6, mov_rbp_qword_ptr_[rip+0x@@ a0@@ 6@@ 1a], mov_edx_5, lea_rsi_[rip+0xe@@ 86@@ e], jmp_0xffffffffffffffd4, mov_rbp_qword_ptr_[rip+0x@@ a0@@ 60@@ 5], mov_edx_5, lea_rsi_[rip+0x@@ e8@@ 21], jmp_0xffffffffffffffbf, mov_rbp_qword_ptr_[rip+0x@@ a0@@ 6@@ 10], mov_edx_5, lea_rsi_[rip+0xe@@ 7d@@ c], jmp_0xffffffffffffffa@@ a
endbr64, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rcx, push_rbx, mov_rbx_rdi, call_0xfffffffffffe7@@ 54@@ f, test_rax_rax, je_0x27, mov_rdi_rbx, call_0xfffffffffffe7@@ 32@@ 2, test_eax_eax, je_0x31, dec_eax, movsxd_rdi_eax, add_rbx@@ _rdi, cmp_byte_ptr_[rbx]@@ _0xa, jne_0x49, mov_byte_ptr_[rbx]_0, pop_rbx, pop_rbp, pop_r12, ret, mov_rdi_r12, call_0xfffffffffffe7@@ 1a@@ d, test_eax_eax, jne_0x3f, pop_rbx, pop_rbp, mov_eax_0xffffffff, pop_r12, ret, mov_edx_5, lea_rsi_[rip+0xe@@ 89@@ 6], lea_rdi_[rip+0x@@ 8a@@ 45], call_0xfffffffffffe7@@ 2b@@ 7, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffff7@@ 22@@ a, mov_edx_5, lea_rsi_[rip+0xe@@ 8a@@ 1], jmp_0xffffffffffffffdb, lea_rsi_[rip+0x@@ e8@@ 50], lea_rdi_[rip+0x@@ 8a@@ 17], mov_edx_5, call_0xfffffffffffe7@@ 284, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffff7@@ 2c@@ 7
endbr64, push_rbp, mov_rbp_rcx, call_0xffffffffffffff@@ 48, test_eax_eax, js@@ _4, pop_rbp, ret, lea_rsi_[rip+0xe@@ 88@@ e], lea_rdi_[rip+0x@@ 89@@ dd], mov_edx_5, call_0xfffffffffffe7@@ 24@@ a, mov_rdi_rax, mov_rsi_rbp, xor_eax_eax, call_0xffffffffffff7@@ 1b@@ d
endbr64, cmp_qword_ptr_[rdi]_0, je_0x22, xor_eax_eax, mov_rcx_qword_ptr_[r@@ di+0x10], add_rcx_rax, movsx_r8d@@ _byte_ptr_[r@@ cx], cmp_r8d@@ _esi, jne_4, mov_byte_ptr_[rcx@@ ]_dl, inc_rax, cmp_qword_ptr_[r@@ di]_rax, ja_0xffffffffffffff@@ e8, ret
endbr64, push_r12, push_rbp, mov_rbp_rdi, mov_edi_0x18, sub_rsp_8, call_0xffffffffffff8@@ 2f@@ d, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+@@ 8]_rbp, mov_r12_rax, test_rbp_rbp, jne_0x17, mov_qword_ptr_[rax+0x10]_0, add_rsp_8, mov_rax_r12, pop_rbp, pop_r12, ret, mov_rdi_rbp, call_0xffffffffffff8@@ 2c@@ d, mov_qword_ptr_[r12+0x10]_rax, add_rsp_8, mov_rax_r12, pop_rbp, pop_r12, ret
endbr64, push_rbx, mov_qword_ptr_[rdi]_0, mov_qword_ptr_[rdi+@@ 8]_rsi, mov_rbx_rdi, test_rsi_rsi, jne_0x12, mov_qword_ptr_[rdi+0x10]_0, pop_rbx, ret, mov_rdi_rsi, call_0xffffffffffff8@@ 28@@ 5, mov_qword_ptr_[rbx+0x10]_rax, pop_rbx, ret
endbr64, mov_qword_ptr_[rdi]_0, ret
endbr64, push_rbx, mov_r9_qword_ptr_[r@@ di+8], mov_r8_qword_ptr_[r@@ di], cmp_r9@@ _r8, jb@@ _0x2e, mov_rax_r9, sub_rax@@ _r8, cmp_rax_rsi, jb@@ _6, pop_rbx, ret, add_r9@@ _rsi, lea_rsi_[r@@ 9+r@@ 9], mov_qword_ptr_[rdi+@@ 8]_rsi, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+0x10], call_0xffffffffffff8@@ 26@@ e, mov_qword_ptr_[rbx+0x10]_rax, pop_rbx, ret, lea_rcx_[rip+0x@@ e@@ 76@@ c], lea_rdx_[rip+0xe@@ 80@@ 5], mov_esi_0x@@ 97, lea_rdi_[rip+0xe@@ 77@@ 6], xor_eax_eax, call_0xffffffffffff6e@@ 2@@ 7
endbr64, push_rbp, mov_ebp_esi, mov_esi_1, push_rbx, mov_rbx_rdi, sub_rsp_8, call_0xffffffffffffff@@ 8c, mov_rax_qword_ptr_[rbx], mov_rdx_qword_ptr_[rbx+0x10], lea_rcx_[rax+1], mov_qword_ptr_[rbx@@ ]_rcx, mov_byte_ptr_[rdx@@ +rax@@ ]_bpl, add_rsp_8, pop_rbx, pop_rbp, ret
endbr64, push_r12, mov_r12d_esi, mov_rsi_rdx, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, call_0xffffffffffffff@@ 4c, mov_rdi_qword_ptr_[rbx], mov_rdx_rbp, add_rdi_qword_ptr_[r@@ bx+0x10], mov_esi_r12d, call_0xfffffffffffe7@@ 1c@@ a, add_qword_ptr_[r@@ bx]@@ _rbp, pop_rbx, pop_rbp, pop_r12, ret
endbr64, push_r13, mov_r8_rsi, mov_r13_rsi, push_r12, xor_esi_esi, mov_r12_rdx, push_rbp, mov_rcx_-1, push_rbx, mov_rbx_rdi, xor_edi_edi, sub_rsp_0x28, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_r9@@ _rsp, movdqu_xmm0_xmmword_ptr_[r@@ dx], movups_xmmword_ptr_[r@@ sp]_xmm0, mov_rax_qword_ptr_[rdx+0x10], mov_edx_1, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffe@@ 74@@ 92, test_eax_eax, js@@ _0x58, inc_eax, movsxd_rbp@@ _eax, mov_rsi_rbp, mov_rdi_rbx, call_0xfffffffffffffeb@@ e, mov_rdi_qword_ptr_[rbx], mov_r9_r12, add_rdi_qword_ptr_[r@@ bx+0x10], mov_r8_r13, mov_rcx_-1, mov_edx_1, mov_rsi_rbp, call_0xfffffffffffe7@@ 45@@ d, test_eax_eax, js_0x2@@ 3, movsxd_rdx_eax, add_qword_ptr_[r@@ bx@@ ]_rdx, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0x2f, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, lea_rdi_[rip+0x@@ 87@@ 4a], mov_edx_5, lea_rsi_[rip+0x@@ e6@@ 48], call_0xfffffffffffe6@@ fb0, mov_rdi_rax, xor_eax_eax, call_0xffffffffffff6@@ ff@@ 6, call_0xfffffffffffe6@@ fd@@ 1
endbr64, sub_rsp_0xd8, mov_qword_ptr_[rsp+0x30]_rdx, mov_qword_ptr_[rsp+0x38]_rcx, mov_qword_ptr_[rsp+0x40]_r8, mov_qword_ptr_[rsp+0x48]_r9, test_al_al, je_0x39, movaps_xmmword_ptr_[rsp+0x50]_xmm0, movaps_xmmword_ptr_[rsp+0x60]_xmm1, movaps_xmmword_ptr_[rsp+0x70]_xmm2, movaps_xmmword_ptr_[rsp+0x80]_xmm3, movaps_xmmword_ptr_[rsp+0x90]_xmm4, movaps_xmmword_ptr_[rsp+0xa0]_xmm5, movaps_xmmword_ptr_[rsp+0xb0]_xmm6, movaps_xmmword_ptr_[rsp+0xc0]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, lea_rax_[rsp+0xe0], mov_qword_ptr_[rsp+8]_rax, mov_rdx_rsp, lea_rax_[rsp+0x20], mov_dword_ptr_[rsp]_0x10, mov_dword_ptr_[rsp+4]_0x30, mov_qword_ptr_[rsp+0x10]_rax, call_0xfffffffffffffe@@ 8d, mov_rcx_qword_ptr_[rsp+0x18], xor_rcx_qword_ptr_fs:[0x28], jne_0xa, add_rsp_0xd8, ret, call_0xfffffffffffe@@ 6f@@ 1@@ 0
endbr64, push_r12, mov_r12_rsi, mov_rsi_rdx, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rdi, call_0xfffffffffffffd@@ 6c, mov_rdi_qword_ptr_[rbx], mov_rdx_rbp, add_rdi_qword_ptr_[r@@ bx+0x10], mov_rsi_r12, call_0xfffffffffffe7@@ 1d@@ a, add_qword_ptr_[r@@ bx]@@ _rbp, pop_rbx, pop_rbp, pop_r12, ret
endbr64, push_rbx, mov_esi_1, mov_rbx_rdi, call_0xfffffffffffffd@@ 33, mov_rdx_qword_ptr_[rbx+0x10], mov_rax_qword_ptr_[rbx], mov_byte_ptr_[rdx+rax]_0, pop_rbx, ret
endbr64, push_rbx, mov_esi_1, mov_rbx_rdi, call_0xfffffffffffffd@@ 13, mov_rax_qword_ptr_[rbx], mov_rdx_qword_ptr_[rbx+0x10], mov_byte_ptr_[rdx+rax]_0, mov_rax_qword_ptr_[rbx+0x10], pop_rbx, ret
endbr64, mov_r9_qword_ptr_[r@@ di+8], cmp_r9@@ _rsi, jb@@ _6, mov_qword_ptr_[rdi@@ ]_rsi, ret, push_rax, mov_r8_rsi, lea_rcx_[rip+0x@@ e@@ 4e@@ c], lea_rdx_[rip+0xe@@ 50@@ d], mov_esi_0xa@@ 6, lea_rdi_[rip+0xe@@ 48@@ e], xor_eax_eax, call_0xffffffffffff6b@@ 3@@ f
endbr64, mov_rax_qword_ptr_[rdi], mov_qword_ptr_[rsi]_rax, ret
endbr64, mov_r8_qword_ptr_[r@@ si], mov_r9_qword_ptr_[r@@ di+8], cmp_r8@@ _r9, ja@@ _6, mov_qword_ptr_[rdi@@ ]_r8, ret, push_rax, lea_rcx_[rip+0x@@ e4@@ 9c], lea_rdx_[rip+0xe@@ 4b@@ d], mov_esi_0xa@@ 6, lea_rdi_[rip+0xe@@ 43@@ e], xor_eax_eax, call_0xffffffffffff6a@@ e@@ f
endbr64, mov_rax_qword_ptr_[rdi+0x10], mov_qword_ptr_[rdi+8]_0, mov_qword_ptr_[rdi+0x10]_0, mov_qword_ptr_[rdi]_0, ret
endbr64, push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+0x10], call_0xfffffffffffe@@ 6a@@ f4, mov_qword_ptr_[rbx+0x10]_0, mov_qword_ptr_[rbx+8]_0, mov_qword_ptr_[rbx]_0, pop_rbx, ret
endbr64, push_rbp, mov_rbp_rdi, mov_rdi_qword_ptr_[rdi+0x10], call_0xfffffffffffe@@ 6a@@ c4, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffffe@@ 6a@@ b@@ b
push_rbx, mov_esi_0x20, mov_ebx_edi, call_0xffffffffffff34@@ 58, test_al_al, je_9, xor_eax_eax, pop_rbx, ret, mov_esi_0x18, mov_edi_ebx, call_0xffffffffffff34@@ 41, mov_r8d_eax, mov_eax_ebx, test_r8b_r8b, jne_0xffffffffffffffe7, cmp_ebx@@ _0x7e, je_0xd, test_ebx_ebx, je_0xffffffffffffffdc, add_eax@@ _0x100, pop_rbx, ret, mov_eax_0xffffffff, pop_rbx, ret
push_r12, push_rbp, mov_rbp_rsi, push_rbx, test_rdi_rdi, je_0x1@@ 66, mov_rbx_rdi, movsx_edi@@ _byte_ptr_[rdi], test_rbp_rbp, lea_rax_[rip+0x@@ 8e@@ 2a], cmove@@ _rbp_rax, test_dil_dil, jne_0x54, cmp_byte_ptr_[rbp]_0, jne_0x49, jmp_0x1@@ 65, movsx_edi_byte_ptr_[r@@ bp], test_dil_dil, je_0x61, mov_esi_0x20, call_0xffffffffffff3@@ 3c@@ a, test_al_al, jne_0x10@@ b, movsx_edi_byte_ptr_[rbx], call_0xffffffffffffff@@ 5a, movsx_edi_byte_ptr_[r@@ bp], mov_r12d_eax, call_0xffffffffffffff@@ 4e, cmp_r12d_eax, jne_0x26, movsx_edi_byte_ptr_[r@@ bx+1], inc_rbx, inc_rbp, test_dil_dil, je_0xffffffffffffff@@ bf, mov_esi_0x20, call_0xffffffffffff@@ 33@@ 90, test_al_al, jne_0xffffffffffffffb1, jmp_0xffffffffffffffca, sub@@ _r12d_eax, pop_rbx, pop_rbp, mov_eax_r12d, pop_r12, ret, movzx_eax_byte_ptr_[rbx], cmp_al@@ _0x30, jne_0x2c, movzx_eax_byte_ptr_[rbx+1], inc_rbx, cmp_al@@ _0x30, je_0xfffffffffffffff@@ 7, cmp_dil@@ _0x30, jne_0x12, inc_rbp, cmp_byte_ptr_[rbp]@@ _0x30, je_0xfffffffffffffff@@ 9, xor_r12d_r12d, jmp_0x38, movsx_edi_byte_ptr_[r@@ bp], mov_esi_0x20, call_0xffffffffffff3@@ 32@@ 7, test_al_al, je_0x2d, test_r12d_r12d, jne_0xd, movsx@@ _r12d@@ _byte_ptr_[rbx], movsx_edx_byte_ptr_[r@@ bp], sub_r12d@@ _edx, movzx_eax_byte_ptr_[rbx+1], inc_rbx, inc_rbp, movsx_edi@@ _al, mov_esi_0x20, call_0xffffffffffff@@ 32@@ fc, test_al_al, jne_0xffffffffffffffc5, movsx_edi_byte_ptr_[rbx], mov_esi_0x20, call_0xffffffffffff3@@ 2e@@ b, test_al_al, jne_0x5d, movsx_edi_byte_ptr_[r@@ bp], mov_esi_0x20, call_0xffffffffffff3@@ 2d@@ 9, test_al_al, jne_0x40, test_r12d_r12d, jne_0xffffffffffffff@@ 50, movsx_edi_byte_ptr_[rbx], jmp_0xfffffffffffffed8, movzx_eax_byte_ptr_[rbx], movzx_edi_byte_ptr_[r@@ bp], cmp_al@@ _0x30, je_0xffffffffffffff@@ 4f, jmp_0xffffffffffffff54, xor_edi_edi, lea_rbx_[rip+0x@@ 8c@@ d1], jmp_0xfffffffffffffe@@ 9d, mov_r12d_0xffffffff, jmp_0xffffffffffffff0f, mov_r12d_1, jmp_0xffffffffffffff04, xor_r12d_r12d, jmp_0xfffffffffffffef@@ c
endbr64, mov_dword_ptr_[rdi]_0, mov_qword_ptr_[rdi+8]_0, mov_qword_ptr_[rdi+0x10]_0, ret
endbr64, mov_edx_dword_ptr_[rdi], mov_eax_1, test_edx_edx, jne_0x10, mov_rdx_qword_ptr_[rdi+8], test_rdx_rdx, je_0xa, cmp_byte_ptr_[rdx]_0, je_5, ret, mov_rax_qword_ptr_[rdi+0x10], test_rax_rax, je_0xfffffffffffffff6, cmp_byte_ptr_[rax]_0, setne_al, ret
endbr64, mov_eax_dword_ptr_[rsi], cmp_dword_ptr_[r@@ di]_eax, ja@@ _0x40, jb_0x4@@ 6, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rsi_qword_ptr_[r@@ si+8], mov_rdi_qword_ptr_[rdi+8], call_0xfffffffffffffd@@ f0, test_eax_eax, je_9, add_rsp_8, pop_rbx, pop_rbp, ret, mov_rsi_qword_ptr_[rbp+0x10], mov_rdi_qword_ptr_[rbx+0x10], add_rsp_8, pop_rbx, pop_rbp, jmp_0xfffffffffffffdd@@ 2, mov_eax_1, ret, mov_eax_0xffffffff, ret
endbr64, push_rbx, mov_eax_1, mov_ebx_esi, test_esi_esi, jne_0xa, pop_rbx, ret, mov_rsi_rdx, call_0xffffffffffffff@@ 85, cmp_ebx@@ _5, ja_0x5@@ 4, lea_rsi_[rip+0xe@@ 1a@@ 4], mov_ecx_ebx, movsxd_rdx_dword_ptr_[r@@ si@@ +rcx*4], add_rdx_rsi, jmp_rdx, mov_r8d_ebx, lea_rcx_[rip+0x@@ ae@@ 97], lea_rdx_[rip+0xe@@ 168], mov_esi_0x@@ c3, lea_rdi_[rip+0xe@@ 118], xor_eax_eax, call_0xffffffffffff67@@ 3@@ a
endbr64, push_rbp, mov_rbp_rdi, mov_edx_5, push_rbx, lea_rsi_[rip+0xd@@ 180], sub_rsp_8, movsx_edi@@ _byte_ptr_[rdi], test_dil_dil, je_0x5d, mov_esi@@ _0x38, call_0xffffffffffff30@@ fa, test_al_al, je_0x43, movsx_edi_byte_ptr_[r@@ bp+1], lea_rbx_[r@@ bp+1], test_dil_dil, je_0x29, mov_esi@@ _0x38, call_0xffffffffffff30@@ db, test_al_al, jne_0xb, movzx_ebp@@ _byte_ptr_[rbx], cmp_bpl@@ _0x2d, jne_0x3b, movsx_edi_byte_ptr_[r@@ bx+1], inc_rbx, test_dil_dil, jne_0xffffffffffffffdf, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret, mov_edx_5, lea_rsi_[rip+0xe@@ 134], add_rsp_8, pop_rbx, lea_rdi_[rip+0x8@@ 10@@ 6], pop_rbp, jmp_0xfffffffffff@@ e6@@ 97@@ 7, test_bpl_bpl, je_0xffffffffffffffd0, mov_edx_5, lea_rsi_[rip+0xc@@ f@@ 97], lea_rdi_[rip+0x@@ 80@@ e6], call_0xfffffffffffe6@@ 958, mov_r8_rax, sub_rsp_8, lea_rax_[rip+0x@@ 59@@ 30], push_rax, movsx@@ _r9d@@ _bpl, mov_edx_1, mov_ecx_0x@@ 96, mov_esi_0x@@ 96, lea_rdi_[rip+0x9@@ fc@@ 1a], xor_eax_eax, call_0xfffffffffffe@@ 67@@ 18, pop_rax, pop_rdx, add_rsp_8, pop_rbx, lea_rax_[rip+0x@@ 9@@ fc@@ 05], pop_rbp, ret
endbr64, test_rdi_rdi, je_0x19, cmp_byte_ptr_[rdi]_0, je_0xc, jmp_0xffffffffffffff62, lea_rax_[rip+0x@@ 1b@@ d6@@ 1], ret, lea_rax_[rip+0x@@ 1b@@ d7@@ 9], ret
endbr64, cmp_edi@@ _7, ja@@ _0x61, lea_rcx_[rip+0x@@ e0@@ 60], mov_edx_edi, movsxd_rax_dword_ptr_[r@@ cx+rdx*4], add_rax_rcx, jmp_rax, xor_eax_eax, ret
endbr64, lea_rax_[rip+0x@@ 1b@@ c5@@ 5], ret
endbr64, mov_qword_ptr_[rip+0x@@ 1b@@ c8@@ 1]_0, mov_byte_ptr_[rip+0x@@ 9@@ fb@@ 20]_0, ret
endbr64, cmp_dword_ptr_[rsi+0x1@@ 0]_1, ja@@ _8, ret, push_r12, push_rbp, mov_rbp_rdi, push_rbx, mov_rbx_rsi, mov_esi_0x3a, call_0xfffffffffffff68@@ 1, mov_r12_qword_ptr_[r@@ bx+8], mov_rdi_r12, call_0xfffffffffffe@@ 67@@ 85, pop_rbx, mov_rdi_rbp, pop_rbp, mov_rsi_r12, mov_rdx_rax, pop_r12, jmp_0xfffffffffffff88@@ 3
endbr64, sub_rsp_8, mov_eax_dword_ptr_[rdi+0x10], test_eax_eax, je_0x13, cmp_eax_1, je_0x46, mov_rax_qword_ptr_[rdi+8], add_rsp_8, ret, mov_edx_5, lea_rsi_[rip+0xd@@ e@@ 91], lea_rdi_[rip+0x@@ 7e@@ 9b], call_0xfffffffffffe6@@ 70d, lea_rdx_[rip+0x@@ de@@ 7e], cmp_rax_rdx, lea_rdx_[rip+0x@@ de@@ 81], cmove_rax_rdx, add_rsp_8, ret, mov_edx_5, lea_rsi_[rip+0xd@@ e6@@ d], lea_rdi_[rip+0x@@ 7e@@ 63], call_0xfffffffffffe@@ 66@@ d5, lea_rdx_[rip+0x@@ de@@ 5a], cmp_rax_rdx, lea_rdx_[rip+0x@@ de@@ 5d], cmove_rax_rdx, jmp_0xffffffffffffff9@@ 3
endbr64, lea_rax_[rip+0x@@ 1bb@@ c5], test_rdi_rdi, je_0x3a, cmp_byte_ptr_[rdi]_0, lea_rax_[rip+0x@@ 1bb@@ 96], je_0x2e, sub_rsp_8, call_0xfffffffffffffd@@ 80, cmp_dword_ptr_[rax+0x1@@ 0@@ ]_7, je_7, add_rsp_8, ret, mov_dword_ptr_[rax+0x1@@ 0@@ ]_6, mov_byte_ptr_[rip+0x@@ 9f@@ 9f@@ 8]_1, add_rsp_8, ret, cmp_dword_ptr_[rax+0x1@@ 0@@ ]_7, je_4, ret, mov_dword_ptr_[rax+0x1@@ 0@@ ]_6, mov_byte_ptr_[rip+0x@@ 9f@@ 9d@@ 8]_1, ret
endbr64, mov_rax_qword_ptr_[rip+0x@@ 1bb@@ 25], test_rax_rax, je_0x3a, cmp_dword_ptr_[rax+0x1@@ 0@@ ]_6, jne_0xc, cmp_rax_rdi, je_0x1a, mov_rax_qword_ptr_[rax], test_rax_rax, je_0x22, cmp_dword_ptr_[rax+0x1@@ 0@@ ]_6, jne_0xfffffffffffffff4, cmp_rdi_rax, jne_0xffffffffffffffef, mov_dword_ptr_[rax+0x1@@ 0@@ ]_7, mov_byte_ptr_[rip+0x@@ 9f@@ 99@@ 5]_1, ret, ret
endbr64, push_r12, lea_rdi_[rip+0x9@@ 8d@@ a], push_rbp, push_rbx, sub_rsp@@ _0x8@@ 10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x@@ 80@@ 8]_rax, xor_eax_eax, call_0xffffffffffff@@ 32@@ 57, mov_rdi_rax, lea_rsi_[rip+0x56@@ ad], mov_rbp_rax, call_0xfffffffffffe@@ 6b@@ 95, mov_r12_rax, mov_rbx_rsp, test_rax_rax, jne_0xf, jmp_0x5@@ 5, mov_rdi_rbx, call_0xfffffffffffffe@@ fd, mov_rcx_rbp, mov_rdx_r12, mov_esi_0x800, mov_rdi_rbx, call_0xfffffffffffff27@@ a, test_eax_eax, jns_0xffffffffffffff@@ e3, mov_rdi_rbp, call_0xfffffffffffe6@@ 2f@@ e, mov_rdi_r12, call_0xfffffffffffe@@ 65@@ 36, mov_rax_qword_ptr_[rsp+0x@@ 80@@ 8], xor_rax_qword_ptr_fs:[0x28], jne_0x21, add_rsp@@ _0x8@@ 10, pop_rbx, pop_rbp, pop_r12, ret, mov_rdi_rbp, mov_byte_ptr_[rip+0x@@ 9f@@ 8d@@ c]_1, call_0xfffffffffffe6@@ 2c@@ 6, jmp_0xffffffffffffffd0, call_0xfffffffffffe6@@ 57@@ f
endbr64, cmp_byte_ptr_[rip+0x@@ 9f@@ 8@@ bb@@ ]_0, jne_5, ret, push_r13, lea_rdi_[rip+0x9@@ 80@@ e], lea_r13_[rip+0x@@ b@@ 9b@@ 1], push_r12, push_rbp, push_rbx, lea_rbx_[rip+0x@@ 1b@@ 9b@@ 5], sub_rsp_8, call_0xffffffffffff3@@ 19@@ 1, mov_rdi_rax, xor_esi_esi, mov_r12_rax, call_0xffffffffffff2@@ 8d@@ 4, mov_rdi_rax, mov_rbp_rax, call_0xffffffffffff2@@ 929, jmp_0xc, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, je_0x4a, mov_eax_dword_ptr_[rbx+0x10], sub_eax@@ _5, cmp_eax_1, ja_0xffffffffffffff@@ ef, mov_rcx_qword_ptr_[rbx+8], mov_rdi_qword_ptr_[rbp+0x18], xor_eax_eax, mov_rdx_r13, mov_esi_1, call_0xfffffffffffe@@ 6b@@ 3b, test_eax_eax, jns_0xffffffffffffff@@ d4, lea_rdi_[rip+0x@@ 7c@@ 49], mov_edx_5, lea_rsi_[rip+0xd@@ ca@@ 7], call_0xfffffffffffe6@@ 4a@@ f, mov_rdi_rax, xor_eax_eax, call_0xffffffffffff64@@ f5, mov_rdi_rbp, call_0xffffffffffff2@@ 95@@ d, mov_rdi_rbp, call_0xffffffffffff2@@ 9e@@ 5, mov_rdi_rbp, call_0xffffffffffff2a@@ ad, mov_rdi_rbp, call_0xffffffffffff2b@@ 75, call_0xffffffffffff30@@ f0, mov_rdi_rax, call_0xffffffffffff4@@ 3@@ 98, mov_byte_ptr_[rip+0x@@ 9@@ f7@@ f2@@ ]_0, add_rsp_8, pop_rbx, pop_rbp, mov_rdi_r12, pop_r12, pop_r13, jmp_0xfffffffffff@@ e6@@ 1c@@ f
push_r12, mov_r12_rcx, cmp_esi@@ _4, je_0x15, cmp_esi@@ _5, jne_0x16, mov_r8_rdx, mov_rsi_r8, mov_rdx_rcx, call_0x3a@@ b8, mov_rax_r12, pop_r12, ret, mov_r8d_esi, lea_rcx_[rip+0x@@ dc@@ 71], lea_rdx_[rip+0x@@ dd@@ 2c], mov_esi_0x5@@ 2, lea_rdi_[rip+0x@@ dc@@ 73], xor_eax_eax, call_0xffffffffffff6@@ 13@@ e
push_r15, mov_rsi_rdi, push_r14, push_r13, mov_r13_rdi, push_r12, lea_r12_[rip+0x@@ dc@@ 69], push_rbp, push_rbx, sub_rsp_0x28, mov_r14_qword_ptr_[r@@ di+0x@@ 58], mov_rbx_rsp, mov_rdi_rbx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x18]_rax, xor_eax_eax, mov_rbp_r14, call_0x3d@@ c8, lea_r15_[r@@ sp+0x10], movzx_r8d_byte_ptr_[r@@ bx], mov_rdi_rbp, inc_rbx, mov_rcx_r12, mov_rdx_-1, mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 6a@@ ed, add_rbp@@ _2, cmp_rbx_r15, jne_0xffffffffffffffd9, mov_byte_ptr_[r14+0x@@ 20]_0, mov_rax_qword_ptr_[rsp+0x18], xor_rax_qword_ptr_fs:[0x28], jne_0x18, add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, mov_rdi_r13, pop_r13, pop_r14, pop_r15, jmp_0xfffffffffffe@@ 60@@ d9, call_0xfffffffffffe6@@ 39@@ 4
push_r15, push_r14, push_r13, mov_r13_rdi, push_r12, mov_r12_rsi, push_rbp, push_rbx, mov_rbx_rcx, sub_rsp_0x28, mov_qword_ptr_[rsp+8]_rdx, mov_qword_ptr_[rsp+0x18]_r8, cmp_rcx@@ _0x7@@ fff, jg@@ _0x48, cmp_rcx_-1, je_0x42, mov_ebp_ecx, xor_r14d_r14d, movsxd_rdi@@ _ecx, test_ecx_ecx, jne_0x40, cmp_dword_ptr_[r12+@@ 8]_5, jne_0x48, mov_edi_0x6@@ 0, call_0xffffffffffff7@@ 4@@ 13, mov_rdi_rax, mov_rax_qword_ptr_[r12], mov_qword_ptr_[rdi+0x@@ 58]_rax, mov_qword_ptr_[r12@@ ]_rdi, call_0x3@@ 20@@ f, jmp_0x24, mov_edi@@ _0x8000, mov_ebp@@ _0x8000, call_0xffffffffffff7@@ 3e@@ 6, cmp_dword_ptr_[r12+@@ 8]_5, mov_r14_rax, je_0xffffffffffffff@@ c0, mov_qword_ptr_[rsp+0x10]_0, test_ebp_ebp, jle_0x@@ c7, mov_r8d_dword_ptr_[r@@ 13+8], mov_edi_dword_ptr_[r@@ 13], test_r8d_r8d, jne_0x1@@ 98, movsxd_r15@@ _ebp, mov_rdx_r15, mov_rsi_r14, call_0xa0@@ 6, mov_r9_rax, test_rax_rax, js_0x@@ eb, je_0x96, add_qword_ptr_[rsp+0x1@@ 0]_r9, cmp_rbx@@ _-1, je_0xb, sub_rbx@@ _r9, cmp_r15@@ _rbx, cmovg@@ _ebp@@ _ebx, mov_esi_dword_ptr_[r@@ 12+8], mov_rdi_qword_ptr_[r12], mov_rcx_r9, mov_rdx_r14, mov_qword_ptr_[rsp]_r9, call_0xfffffffffffffe0@@ 8, mov_rax_qword_ptr_[rsp+8], mov_r9_qword_ptr_[rsp], mov_r8d_dword_ptr_[r@@ ax+8], cmp_r8d@@ _2, je_0x32, cmp_r8d@@ _3, je_0xffffffffffffff@@ 84, cmp_r8d_1, je_0x7e, lea_rcx_[rip+0x@@ da@@ 7b], lea_rdx_[rip+0x@@ db@@ 16], mov_esi_0x8@@ a, lea_rdi_[rip+0x@@ da@@ 7d], xor_eax_eax, call_0xffffffffffff5f@@ 48, mov_rax_qword_ptr_[rsp+8], mov_rdx_r9, mov_edi_dword_ptr_[rax], mov_rsi_r14, call_0xa0@@ 3, test_rax_rax, js_0xa@@ b, jne_0xffffffffffffff@@ 3d, cmp_dword_ptr_[r12+@@ 8]_5, je_0x10b, mov_rdi_r14, call_0xfffffffffffe@@ 5f@@ 50, test_rbx_rbx, jg_0x@@ 98, mov_rax_qword_ptr_[rsp+0x10], add_rsp_0x28, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rdi_qword_ptr_[rax], mov_rdx_r9, mov_rsi_r14, call_0xfffffffffffff2d@@ f, jmp_0xfffffffffffffef2, mov_edx_5, lea_rsi_[rip+0x@@ da@@ 17], lea_rdi_[rip+0x@@ 79@@ 1b], call_0xfffffffffffe6@@ 18d, mov_rdi_qword_ptr_[rsp+0x18], mov_rsi_rax, xor_eax_eax, call_0x65@@ e, cmp_dword_ptr_[r12+@@ 8]_5, je_0x87, mov_rdi_r14, call_0xfffffffffffe@@ 5e@@ da, mov_qword_ptr_[rsp+0x10@@ ]_-1, jmp_0xffffffffffffff8a, mov_edx_5, lea_rsi_[rip+0xd@@ 9d@@ 6], jmp_0xffffffffffffffb0, mov_edx_5, lea_rsi_[rip+0xd@@ 9e@@ c], lea_rdi_[rip+0x@@ 78@@ bb], call_0xfffffffffffe6@@ 12@@ d, mov_rdi_qword_ptr_[rsp+0x18], mov_rsi_rax, xor_eax_eax, call_0x4@@ fe, cdqe, mov_qword_ptr_[rsp+0x10]_rax, jmp_0xffffffffffffff40, lea_rcx_[rip+0xd@@ 95@@ 4], lea_rdx_[rip+0xd@@ 9@@ ff], mov_esi_0x@@ 9d, lea_rdi_[rip+0xd@@ 95@@ 6], xor_eax_eax, call_0xffffffffffff5e@@ 21, mov_rdi_qword_ptr_[r12], call_0xfffffffffffffc@@ e8, jmp_0xffffffffffffff76, mov_rdi_qword_ptr_[r12], call_0xfffffffffffffc@@ da, jmp_0xfffffffffffffef@@ 2
endbr64, push_r13, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, sub_rsp_0x10, cmp_edx@@ _5, je_0x1a, add_rsp_0x10, mov_esi_edx, mov_rdx_rdi, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, jmp_0xfffffffffffffc@@ 57, mov_edi_0x6@@ 0, mov_qword_ptr_[rsp+8]_rcx, call_0xffffffffffff7@@ 1a@@ 6, mov_qword_ptr_[rax+0x5@@ 8]_rbp, mov_rdi_rax, mov_r13_rax, call_0x2@@ fa@@ 7, mov_rcx_qword_ptr_[rsp+8], mov_rdx_r12, mov_rdi_r13, mov_esi_5, call_0xfffffffffffffc@@ 22, mov_rdi_r13, mov_r12_rax, call_0xfffffffffffffc@@ 67, add_rsp_0x10, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret
endbr64, sub_rsp_0x48, pxor_xmm0_xmm0, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, movaps_xmmword_ptr_[rsp+0x20]_xmm0, mov_dword_ptr_[rsp+0x18]_ecx, mov_dword_ptr_[rsp+0x20]@@ _r8d, mov_rcx_qword_ptr_[rsp+0x50], mov_r8@@ _qword_ptr_[rsp+0x58], movaps_xmmword_ptr_[rsp]_xmm0, mov_qword_ptr_[rsp+0x10]_rdx, mov_dword_ptr_[rsp]@@ _edi, mov_dword_ptr_[rsp+8]_esi, lea_rdx_[rsp+0x20], lea_rsi_[rsp+0x10], mov_rdi_rsp, mov_dword_ptr_[rsp+0x28]@@ _r9d, call_0xfffffffffffffc@@ aa, mov_rcx_qword_ptr_[rsp+0x38], xor_rcx_qword_ptr_fs:[0x28], jne_7, add_rsp_0x48, ret, call_0xfffffffffffe@@ 60@@ 1@@ 0
endbr64, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, pxor_xmm0_xmm0, mov_dword_ptr_[rsp+0x18]_ecx, mov_qword_ptr_[rsp+0x20]_r8, mov_rcx_qword_ptr_[rsp+0x50], mov_r8@@ _qword_ptr_[rsp+0x58], movaps_xmmword_ptr_[rsp]_xmm0, mov_qword_ptr_[rsp+0x10]_rdx, mov_dword_ptr_[rsp]@@ _edi, mov_dword_ptr_[rsp+8]_esi, lea_rdx_[rsp+0x20], lea_rsi_[rsp+0x10], mov_rdi_rsp, mov_dword_ptr_[rsp+0x28]@@ _r9d, call_0xfffffffffffffc@@ 2f, mov_rcx_qword_ptr_[rsp+0x38], xor_rcx_qword_ptr_fs:[0x28], jne_7, add_rsp_0x48, ret, call_0xfffffffffffe@@ 5f@@ 9@@ 5
endbr64, push_r12, pxor_xmm0_xmm0, push_rbp, sub_rsp_0x48, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, movaps_xmmword_ptr_[rsp]_xmm0, mov_dword_ptr_[rsp]@@ _edi, mov_dword_ptr_[rsp+8]_esi, test_esi_esi, jne_0x@@ be, mov_r12_rdx, mov_rsi_r12, mov_edx_1, mov_rbp_rcx, call_0xfffffffffffe@@ 60@@ 10, cmp_rax_-1, je_0x27, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x@@ b5, add_rsp_0x48, pop_rbp, mov_rax_r12, pop_r12, ret, call_0xfffffffffffe@@ 5d@@ 40, cmp_dword_ptr_[rax]@@ _0x1d, je_0x30, mov_edx_5, lea_rsi_[rip+0xd@@ 77@@ c], lea_rdi_[rip+0x7@@ 66@@ 1], call_0xfffffffffffe@@ 5e@@ d3, mov_rsi_rax, mov_rdi_rbp, xor_eax_eax, call_0x3a@@ 6, movsxd_r12@@ _eax, jmp_0xffffffffffffffa9, mov_rcx_r12, lea_rdx_[rsp+0x10], lea_rsi_[rsp+0x20], mov_rdi_rsp, mov_r8_rbp, mov_dword_ptr_[rsp+0x1@@ 8]_3, mov_qword_ptr_[rsp+0x10]_0, mov_dword_ptr_[rsp+0x@@ 28@@ ]_4, mov_qword_ptr_[rsp+0x20]_0, call_0xfffffffffffffb@@ 33, mov_r12_rax, jmp_0xffffffffffffff66, mov_r8d_esi, lea_rcx_[rip+0xd@@ 6b@@ a], lea_rdx_[rip+0xd@@ 74@@ 5], mov_esi_0x1@@ 12, lea_rdi_[rip+0xd@@ 6b@@ c], xor_eax_eax, call_0xffffffffffff5b@@ 87, call_0xfffffffffffe@@ 5e@@ 8@@ 2
endbr64, mov_rax_rdi, mov_ecx_5, lea_rdi_[rip+0xd@@ 75@@ 2], mov_rsi_rax, repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_dl, sbb_dl_0, test_dl_dl, je_0x50, mov_rsi_rax, mov_ecx_7, lea_rdi_[rip+0x@@ d7@@ 39], repe_cmpsb_byte_ptr_[rsi]_byte_ptr_[rdi], seta_al, sbb_al_0, test_al_al, jne_0x1e, mov_dword_ptr_[rip+0x@@ 1b@@ 3@@ 32@@ ]_1, mov_byte_ptr_[rip+0x@@ 9f@@ 17@@ a]_1, mov_eax_1, ret, mov_dword_ptr_[rip+0x@@ 1b@@ 3@@ 16@@ ]_0, mov_byte_ptr_[rip+0x@@ 9f@@ 15@@ e]_0, xor_eax_eax, ret, sub_rsp_8, mov_edi_1, mov_dword_ptr_[rip+0x@@ 1b@@ 2f@@ 5@@ ]_2, call_0xfffffffffffe@@ 5c@@ ad, test_eax_eax, setne_al, mov_byte_ptr_[rip+0x@@ 9f@@ 13@@ 4]_al, add_rsp_8, ret
endbr64, cmp_dword_ptr_[rip+0x@@ 1b@@ 2c@@ d@@ ]_-1, push_r12, movzx_eax_byte_ptr_[rip+0x@@ 9f@@ 1@@ 13], mov_r12_rdi, je_0x19, test_al_al, lea_rax_[rip+0x7@@ ed@@ 8], cmove@@ _r12_rax, mov_rax_r12, pop_r12, ret, lea_rdi_[rip+0xd@@ 69@@ a], call_0xfffffffffffe@@ 5b@@ 19, test_rax_rax, mov_rdi_rax, lea_rax_[rip+0xd@@ 67@@ c], cmove@@ _rdi_rax, call_0xffffffffffffff@@ 13, jmp_0xffffffffffffffc@@ 7
endbr64, xor_eax_eax, test_rdi_rdi, je_9, mov_eax_dword_ptr_[rdi], test_eax_eax, setne_al, ret
endbr64, push_rbx, mov_rbx_rdi, sub_rsp_0xf0, mov_qword_ptr_[rsp+0x50]_rdx, mov_qword_ptr_[rsp+0x5@@ 8]_rcx, mov_qword_ptr_[rsp+0x6@@ 0]_r8, mov_qword_ptr_[rsp+0x6@@ 8]_r9, test_al_al, je_0x3f, movaps_xmmword_ptr_[rsp+0x70]_xmm0, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0x@@ e0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, lea_rax_[rsp+0x100], mov_qword_ptr_[rsp+0x28]_rax, lea_rax_[rsp+0x40], mov_dword_ptr_[rsp+0x20]@@ _0x10, mov_dword_ptr_[rsp+0x24]@@ _0x30, mov_qword_ptr_[rsp+0x30]_rax, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x10]_0, test_rbx_rbx, je_0x1f, mov_qword_ptr_[rbx@@ ]_1, lea_rdx_[rsp+0x20], mov_rdi_rsp, call_0xffffffffffffe@@ be@@ 7, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rbx+8]_rax, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x10, add_rsp@@ _0xf0, mov_eax_0xffffffff, pop_rbx, ret, call_0xfffffffffffe@@ 5c@@ 5@@ b
endbr64, push_rbx, mov_rbx_rdi, sub_rsp_0xf0, mov_qword_ptr_[rsp+0x50]_rdx, mov_qword_ptr_[rsp+0x5@@ 8]_rcx, mov_qword_ptr_[rsp+0x6@@ 0]_r8, mov_qword_ptr_[rsp+0x6@@ 8]_r9, test_al_al, je_0x3f, movaps_xmmword_ptr_[rsp+0x70]_xmm0, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0x@@ e0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, lea_rax_[rsp+0x100], mov_qword_ptr_[rsp+0x28]_rax, lea_rax_[rsp+0x40], mov_dword_ptr_[rsp+0x20]@@ _0x10, mov_dword_ptr_[rsp+0x24]@@ _0x30, mov_qword_ptr_[rsp+0x30]_rax, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x10]_0, test_rbx_rbx, je_0x1f, mov_qword_ptr_[rbx@@ ]_2, lea_rdx_[rsp+0x20], mov_rdi_rsp, call_0xffffffffffffea@@ e7, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rbx+8]_rax, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x10, add_rsp@@ _0xf0, mov_eax_0xffffffff, pop_rbx, ret, call_0xfffffffffffe@@ 5b@@ 5@@ b
endbr64, push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_0xf0, mov_qword_ptr_[rsp+0x50]_rdx, mov_qword_ptr_[rsp+0x5@@ 8]_rcx, mov_qword_ptr_[rsp+0x6@@ 0]_r8, mov_qword_ptr_[rsp+0x6@@ 8]_r9, test_al_al, je_0x3f, movaps_xmmword_ptr_[rsp+0x70]_xmm0, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0x@@ e0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, call_0xfffffffffffe@@ 58@@ f6, mov_r12d_dword_ptr_[rax], mov_edi_r12d, call_0xfffffffffffe6@@ 15@@ b, mov_rdx_rax, mov_rsi_rbp, lea_rdi_[rip+0xa@@ 3e@@ b], xor_eax_eax, call_0xffffffffffffc0@@ 67, mov_rbp_rax, lea_rax_[rsp+0x1@@ 10], mov_qword_ptr_[rsp+0x28]_rax, lea_rax_[rsp+0x40], mov_dword_ptr_[rsp+0x20]@@ _0x10, mov_dword_ptr_[rsp+0x24]@@ _0x30, mov_qword_ptr_[rsp+0x30]_rax, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+8]_0, mov_qword_ptr_[rsp+0x10]_0, test_rbx_rbx, je_0x25, mov_dword_ptr_[rbx@@ ]_2, mov_dword_ptr_[rbx+@@ 4]_r12d, lea_rdx_[rsp+0x20], mov_rdi_rsp, mov_rsi_rbp, call_0xffffffffffffe@@ 9b@@ 4, mov_rax_qword_ptr_[rsp+0x10], mov_qword_ptr_[rbx+8]_rax, mov_rdi_rbp, call_0xfffffffffffe@@ 57@@ 83, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x13, add_rsp@@ _0xf0, pop_rbx, pop_rbp, mov_eax_0xffffffff, pop_r12, ret, call_0xfffffffffffe@@ 5a@@ 1@@ d
endbr64, push_rbx, mov_rbx_rdi, sub_rsp_0x@@ e0, mov_qword_ptr_[rsp+0x40]_rdx, mov_qword_ptr_[rsp+0x48]_rcx, mov_qword_ptr_[rsp+0x50]_r8, mov_qword_ptr_[rsp+0x58]_r9, test_al_al, je_0x3c, movaps_xmmword_ptr_[rsp+0x60]_xmm0, movaps_xmmword_ptr_[rsp+0x70@@ ]_xmm1, movaps_xmmword_ptr_[rsp+0x80@@ ]_xmm2, movaps_xmmword_ptr_[rsp+0x90@@ ]_xmm3, movaps_xmmword_ptr_[rsp+0xa0@@ ]_xmm4, movaps_xmmword_ptr_[rsp+0xb0@@ ]_xmm5, movaps_xmmword_ptr_[rsp+0xc0@@ ]_xmm6, movaps_xmmword_ptr_[rsp+0xd0@@ ]_xmm7, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, lea_rax_[rsp+0xf0], mov_qword_ptr_[rsp+0x18]_rax, lea_rdx_[rsp+0x10], lea_rax_[rsp+0x30], lea_rdi_[rsp+8], mov_dword_ptr_[rsp+0x10]@@ _0x10, mov_dword_ptr_[rsp+0x14]@@ _0x30, mov_qword_ptr_[rsp+0x20]_rax, call_0xffffffffffff6a@@ ee, cmp_dword_ptr_[rbx@@ ]_1, mov_rdx_qword_ptr_[rbx+8], mov_rsi_qword_ptr_[rsp+8], lea_rdi_[rip+0x@@ a8@@ 16], mov_eax_0, jne_0x2a, call_0xffffffffffffb@@ aa@@ f, mov_rdi_qword_ptr_[rsp+8], call_0xfffffffffffe@@ 56@@ 85, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x10, add_rsp_0x@@ e0, pop_rbx, ret, call_0xffffffffffff58@@ 77, call_0xfffffffffffe5@@ 92@@ 2
endbr64, mov_eax_dword_ptr_[rsi], mov_dword_ptr_[rdi]_eax, mov_rax_qword_ptr_[rsi+8], mov_dword_ptr_[rsi@@ ]_0, mov_qword_ptr_[rdi@@ +8]_rax, mov_qword_ptr_[rsi+@@ 8]_0, ret
endbr64, push_rbx, mov_qword_ptr_[rdi]_0, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+8], call_0xfffffffffffe@@ 56@@ 1d, mov_qword_ptr_[rbx+8]_0, pop_rbx, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, test_rdx_rdx, je_0x70, mov_r13d_edi, mov_r14_rsi, mov_r15_rdx, xor_ebx_ebx, mov_rbp_rsi, mov_rdx_r15, mov_rsi_rbp, mov_edi_r13d, call_0xfffffffffffe@@ 5a@@ 82, mov_r12_rax, cmp_rax_-1, je_0x16, test_rax_rax, je_0x41, add_rbx_rax, sub_r15@@ _rax, je_0x39, lea_rbp_[r@@ 14+r@@ bx], jmp_0xffffffffffffffd8, call_0xfffffffffffe@@ 56@@ 90, mov_eax_dword_ptr_[rax], cmp_eax_4, je_0xffffffffffffffcb, cmp_eax_0xb, je_0xffffffffffffffc6, mov_rax_rbx, neg_rax, test_rbx_rbx, cmovne@@ _r12_rax, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_r12_rbx, jmp_0xffffffffffffff@@ eb, xor_r12d_r12d, jmp_0xffffffffffffffe@@ 6
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_8, test_rdx_rdx, je_0x70, mov_r13d_edi, mov_r14_rsi, mov_r15_rdx, xor_ebx_ebx, mov_rbp_rsi, mov_rdx_r15, mov_rsi_rbp, mov_edi_r13d, call_0xfffffffffffe@@ 57@@ 42, mov_r12_rax, cmp_rax_-1, je_0x16, test_rax_rax, je_0x41, add_rbx_rax, sub_r15@@ _rax, je_0x39, lea_rbp_[r@@ 14+r@@ bx], jmp_0xffffffffffffffd8, call_0xfffffffffffe@@ 56@@ 00, mov_eax_dword_ptr_[rax], cmp_eax_4, je_0xffffffffffffffcb, cmp_eax_0xb, je_0xffffffffffffffc6, mov_rax_rbx, neg_rax, test_rbx_rbx, cmovne@@ _r12_rax, add_rsp_8, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_r12_rbx, jmp_0xffffffffffffff@@ eb, xor_r12d_r12d, jmp_0xffffffffffffffe@@ 6
endbr64, sub_rsp_8, call_0xfffffffffffe5@@ 5b8, mov_dword_ptr_[rax]@@ _0x26, mov_eax_0xffffffff, add_rsp_8, ret
push_r15, push_r14, mov_r14_rcx, push_r13, mov_r13d_esi, push_r12, lea_r12_[r@@ di+8], mov_rdi_r12, push_rbp, mov_rbp_rdx, push_rbx, sub_rsp_8, mov_r15_qword_ptr_[r@@ dx], call_0xfffffffffffffe@@ 6f, cmp_byte_ptr_[r15]_0, mov_edx_5, lea_rsi_[rip+0xd0@@ 57], je_0x51, mov_rdi_r14, mov_rsi_r15, call_0x1c@@ 92, mov_r14_rax, test_rax_rax, je_0x67, movsxd_rbx@@ _dword_ptr_[r@@ ax+0xc], add_rbx@@ _r15, jmp_9, inc_rbx, movsx_edi_byte_ptr_[rbx], mov_esi_4, call_0xffffffffffff1e@@ 0d, test_al_al, jne_0xffffffffffffffee, and_r13d@@ _1, mov_eax_dword_ptr_[r@@ 14+8], jne_0x49, cmp_byte_ptr_[rbx]_0, je_0x44, mov_edx_5, lea_rsi_[rip+0xd0@@ 33], lea_rdi_[rip+0x@@ 6e@@ 50], call_0xfffffffffffe5@@ 6c@@ 2, add_rsp_8, pop_rbx, pop_rbp, mov_rdi_r12, pop_r12, pop_r13, pop_r14, mov_rsi_rax, pop_r15, xor_eax_eax, jmp_0xfffffffffffffa@@ 87, xor_ebx_ebx, and_r13d@@ _2, mov_eax_0xffffffff, je_0x15, mov_qword_ptr_[rbp]_rbx, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_edx_5, lea_rsi_[rip+0xc@@ fc@@ 4], lea_rdi_[rip+0x@@ 6d@@ fb], call_0xfffffffffffe5@@ 66@@ d, add_rsp_8, pop_rbx, pop_rbp, mov_rdi_r12, pop_r12, pop_r13, pop_r14, mov_rsi_rax, mov_rdx_r15, xor_eax_eax, pop_r15, jmp_0xfffffffffffffa@@ 2@@ f
push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rbp_qword_ptr_[rdi], movsx_edi_byte_ptr_[r@@ bp], test_dil_dil, je_0x85, mov_esi_2, call_0xffffffffffff1d@@ 3e, test_al_al, jne_0x67, movsx_edi_byte_ptr_[r@@ bp], mov_r12_rbp, test_dil_dil, je_0x8b, mov_esi_2, call_0xffffffffffff1d@@ 20, test_al_al, je_0x61, mov_r13_r12, sub_r13@@ _rbp, lea_rdi_[rip+0x@@ 9e@@ 97@@ a], call_0xffffffffffffe@@ 48@@ a, mov_rdx_r13, mov_rsi_rbp, lea_rdi_[rip+0x@@ 9e@@ 968], call_0xffffffffffffe@@ 708, lea_rdi_[rip+0x@@ 9e@@ 95@@ c], call_0xffffffffffffe7@@ 3c, mov_qword_ptr_[rbx@@ ]_r12, mov_rax_qword_ptr_[rip+0x@@ 9e@@ 95@@ d], add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, movsx_edi_byte_ptr_[r@@ bp+1], inc_rbp, test_dil_dil, jne_0xffffffffffffff@@ 83, mov_qword_ptr_[rbx@@ ]_rbp, xor_eax_eax, jmp_0xffffffffffffffe2, movsx_edi_byte_ptr_[r@@ 12+1], inc_r12, test_dil_dil, jne_0xffffffffffffff@@ 87, jmp_0xffffffffffffff93, xor_r13d_r13d, jmp_0xffffffffffffff8@@ c
push_r12, push_rbx, mov_rbx_rdi, inc_rdi, sub_rsp_8, cmp_rdi_rsi, jae_0x@@ 3d, cmp_byte_ptr_[rsi@@ -1]@@ _0x20, lea_rax_[r@@ si-1], je_0xe, dec_rax, cmp_byte_ptr_[rax]@@ _0x20, jne_0xfffffffffffffff@@ a, cmp_rdi_rax, jae_0x@@ 22, lea_rdi_[rdx@@ -1], cmp_rax_rdi, jae_0x@@ 19, mov_qword_ptr_[r@@ 9]_rax, inc_rax, sub_rsi_rax, mov_qword_ptr_[rcx]_rax, mov_dword_ptr_[r@@ 8]_esi, add_rsp_8, pop_rbx, pop_r12, ret, sub_rdx_rbx, cmp_rdx@@ _0xf@@ 9, mov_ecx@@ _0xf@@ a, cmovle@@ _ecx@@ _edx, lea_rsi_[rip+0xc@@ ed@@ a], mov_edx_5, lea_rdi_[rip+0x@@ 6c@@ 8c], mov_r12d_ecx, call_0xfffffffffffe@@ 54@@ fb, mov_rdi_qword_ptr_[rsp+0x20], mov_rsi_rax, mov_r8_rbx, mov_ecx_r12d, lea_rdx_[rip+0xb@@ 2c@@ d], xor_eax_eax, call_0xffffffffffff9@@ 57@@ f
endbr64, push_r14, push_r13, mov_r13_r8, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rcx, push_rbx, mov_rbx_rdi, mov_rdi_rcx, call_0xffffffffffff98@@ 75, test_rax_rax, jne_0x1e, mov_rdi_rbp, call_0xffffffffffffa@@ 85@@ 8, mov_rdx_qword_ptr_[rax+8], mov_rax_qword_ptr_[rbx], mov_qword_ptr_[rax+8]_rdx, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_r13_qword_ptr_[r@@ 13], mov_edx_5, lea_rsi_[rip+0x@@ ce@@ 7f], lea_rdi_[rip+0x@@ 6c@@ 06], mov_r14_rax, call_0xfffffffffffe@@ 54@@ 75, mov_rsi_rax, mov_rcx_r14, mov_rdx_r13, mov_rdi_r12, xor_eax_eax, call_0xffffffffffff9@@ 50@@ 2
endbr64, push_r15, mov_r15_rdx, push_r14, push_r13, mov_r13_r8, push_r12, push_rbp, push_rbx, sub_rsp_8, cmp_byte_ptr_[rcx]_0, je_0x113, test_byte_ptr_[r@@ dx+@@ 4]_2, je_0x1@@ 58, mov_r12_rdi, mov_rdi_rcx, mov_r14_qword_ptr_[r@@ 12+0x1@@ 40], call_0xffffffffffff6a@@ 57, movsx_edi@@ _byte_ptr_[rax], add_r12@@ _0x1@@ 40, mov_rbp_rax, test_dil_dil, je_0xca, mov_rbx_rbp, jmp_0x11, movsx_edi_byte_ptr_[r@@ bx+1], inc_rbx, test_dil_dil, je_0x1b, mov_esi_4, call_0xffffffffffff1a@@ ff, test_al_al, je_0xffffffffffffffe8, cmp_byte_ptr_[rbx]_0, je_8, mov_byte_ptr_[rbx]_0, inc_rbx, mov_rax_qword_ptr_[r12], test_rax_rax, je_0x44, mov_rdx_qword_ptr_[r@@ 13+0x20], mov_r12_rax, mov_qword_ptr_[rax@@ +rdx@@ ]_rbp, movsx_edi_byte_ptr_[rbx], test_dil_dil, jne_0x15, jmp_0x7@@ 7, movsx_edi_byte_ptr_[r@@ bx+1], inc_rbx, test_dil_dil, je_0x66, mov_esi_4, call_0xffffffffffff1a@@ b7, test_al_al, jne_0xffffffffffffffe8, movsx_edi_byte_ptr_[rbx], test_dil_dil, je_0x50, mov_rbp_rbx, jmp_0xffffffffffffff8b, test_r14_r14, jne_0x98, mov_edi_0x28, call_0xffffffffffff6@@ 8a@@ 2, mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+0x20]_0, mov_qword_ptr_[rax+0x18]_0, mov_qword_ptr_[rax+0x10]_0, mov_qword_ptr_[rax+8]_0, mov_qword_ptr_[r12]_rax, jmp_0xffffffffffffff80, cmp_qword_ptr_[r@@ 12]_0, jne_0x3c, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_r12_qword_ptr_[r@@ 8], mov_edx_5, lea_rsi_[rip+0x@@ cd@@ 3b], lea_rdi_[rip+0x@@ 6a@@ 9a], call_0xfffffffffffe5@@ 30@@ c, mov_rsi_rax, mov_rdx_r12, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff@@ 93@@ 9c, mov_r12_qword_ptr_[r@@ 13], mov_edx_5, lea_rsi_[rip+0x@@ cd@@ b7], jmp_0xffffffffffffffd4, mov_r12_qword_ptr_[r@@ 13], mov_edx_5, lea_rsi_[rip+0x@@ cd@@ 5d], jmp_0xffffffffffffffc2, mov_r12_qword_ptr_[r@@ 8], mov_edx_5, lea_rsi_[rip+0x@@ cd@@ 14], jmp_0xffffffffffffffb@@ 1
endbr64, cmp_byte_ptr_[rcx]_0, jne_9, ret, push_rbx, mov_rbx_qword_ptr_[r@@ 8+0x@@ 20], mov_rdi_rcx, add_rbx@@ _rsi, call_0xffffffffffff6@@ 8e@@ 5, mov_qword_ptr_[rbx]_rax, pop_rbx, ret
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x18, mov_qword_ptr_[rsp+8]_rcx, cmp_byte_ptr_[rcx]_0, jne_0x12, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_rbp_rdx, mov_rdi_rbp, mov_r12_rsi, lea_rdx_[rsp+8], xor_esi_esi, lea_rcx_[rip+0x@@ 18@@ 74@@ 1], mov_rbx_r8, call_0xfffffffffffffa@@ fe, test_eax_eax, lea_rdi_[r@@ bp+8], setne@@ _r13b, call_0xfffffffffffff4@@ ff, test_al_al, jne_0x15, mov_rax_qword_ptr_[rbx+0x20], mov_byte_ptr_[r12@@ +rax]@@ _r13b, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_r13_qword_ptr_[r@@ bp+0x10], mov_r12_qword_ptr_[rbx], mov_edx_5, lea_rsi_[rip+0x@@ cd@@ 28], lea_rdi_[rip+0x6@@ 99@@ 7], call_0xfffffffffffe5@@ 20@@ 9, mov_rsi_rax, mov_rcx_r13, mov_rdx_r12, mov_rdi_rbp, xor_eax_eax, call_0xffffffffffff@@ 92@@ 9@@ 6
endbr64, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x18, mov_qword_ptr_[rsp+8]_rcx, cmp_byte_ptr_[rcx]_0, jne_0x12, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_rbp_rdx, mov_rdi_rbp, mov_r12_rsi, lea_rdx_[rsp+8], xor_esi_esi, lea_rcx_[rip+0x@@ 18@@ 64@@ 1], mov_rbx_r8, call_0xfffffffffffffa@@ 5e, lea_rdi_[r@@ bp+8], mov_r13d_eax, call_0xfffffffffffff46@@ 2, test_al_al, jne_0x15, mov_rax_qword_ptr_[rbx+0x20], mov_dword_ptr_[r12@@ +rax]@@ _r13d, add_rsp_0x18, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_r13_qword_ptr_[r@@ bp+0x10], mov_r12_qword_ptr_[rbx], mov_edx_5, lea_rsi_[rip+0x@@ cc@@ ab], lea_rdi_[rip+0x6@@ 8f@@ a], call_0xfffffffffffe5@@ 16@@ c, mov_rsi_rax, mov_rcx_r13, mov_rdx_r12, mov_rdi_rbp, xor_eax_eax, call_0xffffffffffff9@@ 1f@@ 9
endbr64, push_r13, mov_rdi_rcx, mov_r13_r8, push_r12, mov_r12_rcx, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_rsi, sub_rsp_8, call_0xffffffffffffe@@ 8b@@ 3, cmp_dword_ptr_[rax+0x1@@ 0]_2, mov_qword_ptr_[rbx+0x10]_rax, je_0x16, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_rdi_r12, call_0xffffffffffffe@@ 70d, mov_edx_5, lea_rsi_[rip+0x@@ cc@@ 6c], lea_rdi_[rip+0x6@@ 88@@ 3], mov_r13_qword_ptr_[r@@ 13], mov_rbx_rax, call_0xfffffffffffe@@ 50@@ ee, add_rsp_8, mov_r8_rbx, pop_rbx, mov_rdi_rbp, pop_rbp, mov_rdx_r12, pop_r12, mov_rsi_rax, mov_rcx_r13, xor_eax_eax, pop_r13, jmp_0xffffffffffff@@ 92@@ 1@@ e
endbr64, cmp_byte_ptr_[rcx]_0, jne_9, ret, push_rbx, mov_rbx_rdi, mov_rdi_rcx, call_0xffffffffffff66@@ e9, mov_qword_ptr_[rbx+0x28]_rax, pop_rbx, ret
endbr64, push_r14, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, cmp_byte_ptr_[rcx]_0, mov_qword_ptr_[rsp]_rcx, jne_0x29, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_0x79, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_r12_rdx, mov_rbx_rdi, mov_rbp_rcx, mov_rdi_r12, mov_rdx_rsp, lea_rcx_[rip+0x@@ 18@@ 43@@ a], mov_esi_2, mov_r13_r8, call_0xfffffffffffff8d@@ 2, lea_rdi_[r@@ 12+8], mov_r14d_eax, call_0xfffffffffffff2d@@ 5, test_al_al, jne_0x33, cmp_qword_ptr_[rsp]_0, je_0xf, mov_dword_ptr_[rbx+0x1@@ c]@@ _r14d, jmp_0xffffffffffffff9a, mov_dword_ptr_[rbx+0x1@@ c@@ ]_5, mov_rdi_rbp, call_0xffffffffffff66@@ 2e, mov_qword_ptr_[rbx+0x20]_rax, jmp_0xffffffffffffff7e, call_0xfffffffffffe@@ 50@@ 10, mov_r14_qword_ptr_[r@@ 12+0x10], mov_r13_qword_ptr_[r@@ 13], mov_edx_5, lea_rsi_[rip+0xc@@ 94@@ 2], lea_rdi_[rip+0x@@ 67@@ 4d], call_0xfffffffffffe4@@ fb@@ f, mov_rsi_rax, mov_rcx_r14, mov_rdx_r13, mov_rdi_r12, xor_eax_eax, call_0xffffffffffff90@@ 4@@ c
endbr64, push_r14, push_r13, push_r12, mov_r12_r8, push_rbp, mov_rbp_rdx, push_rbx, sub_rsp_0x10, mov_eax_dword_ptr_[r@@ dx+4], mov_qword_ptr_[rsp+8]_rcx, test_al_4, jne_0x@@ da, test_al_2, je_0x18, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, lea_r14_[r@@ sp+8], mov_rbx_rdi, lea_rcx_[rip+0x@@ 18@@ 30@@ 1], mov_rdi_rbp, mov_rdx_r14, mov_esi_1, call_0xfffffffffffff7f@@ 6, mov_dword_ptr_[rbx+0x1@@ 0]_eax, lea_r13_[r@@ bp+8], mov_rdi_r13, call_0xfffffffffffff1f@@ 7, test_al_al, jne_0x@@ b5, mov_rdi_rbp, lea_rcx_[rip+0x@@ 18@@ 290], mov_rdx_r14, mov_esi_1, call_0xfffffffffffff7c@@ 8, mov_dword_ptr_[rbx+0x1@@ 4]_eax, mov_rdi_r13, call_0xfffffffffffff@@ 1c@@ d, test_al_al, jne_0xa1, xor_esi_esi, mov_rdi_rbp, lea_rcx_[rip+0x@@ 18@@ 1c@@ 4], mov_rdx_r14, call_0xfffffffffffff7a@@ 1, mov_dword_ptr_[rbx+0x1@@ 8]_eax, mov_rdi_r13, call_0xfffffffffffff@@ 1a@@ 6, test_al_al, je_0xffffffffffffff@@ 69, mov_r13_qword_ptr_[r@@ bp+0x10], mov_r12_qword_ptr_[r12], mov_edx_5, lea_rsi_[rip+0x@@ ca@@ f5], lea_rdi_[rip+0x@@ 66@@ 4c], call_0xfffffffffffe4@@ eb@@ e, mov_rsi_rax, mov_rcx_r13, mov_rdx_r12, mov_rdi_rbp, xor_eax_eax, call_0xffffffffffff8f@@ 4b, mov_r12_qword_ptr_[r@@ 8], mov_edx_5, lea_rsi_[rip+0x@@ ca@@ 3f], lea_rdi_[rip+0x@@ 66@@ 1e], call_0xfffffffffffe@@ 4e@@ 90, mov_rsi_rax, mov_rdx_r12, mov_rdi_rbp, xor_eax_eax, call_0xffffffffffff8f@@ 20, mov_r13_qword_ptr_[r@@ bp+0x10], mov_r12_qword_ptr_[r12], mov_edx_5, lea_rsi_[rip+0x@@ ca@@ 47], jmp_0xffffffffffffffa2, mov_r13_qword_ptr_[r@@ bp+0x10], mov_r12_qword_ptr_[r12], mov_edx_5, lea_rsi_[rip+0x@@ ca@@ 59], jmp_0xffffffffffffff8@@ c
endbr64, push_r13, add_rsi@@ _0x50, push_r12, mov_r12_rcx, push_rbp, mov_rbp_rdx, mov_rdi_rbp, push_rbx, mov_rdx_rcx, mov_rbx_r8, sub_rsp_8, call_0xffffffffffff98@@ 7f, test_eax_eax, js@@ _0x10, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, mov_edx_5, lea_rsi_[rip+0xc@@ 78@@ f], lea_rdi_[rip+0x6@@ 58@@ 3], mov_r13_qword_ptr_[r@@ bx], call_0xfffffffffffe@@ 4d@@ f2, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, mov_rcx_r12, pop_r12, mov_rsi_rax, mov_rdx_r13, xor_eax_eax, pop_r13, jmp_0xffffffffffff@@ 8@@ fe@@ 5
endbr64, push_r13, lea_rdi_[rip+0x6@@ 55@@ 1], push_r12, mov_r12_rdx, mov_edx_5, push_rbp, mov_rbp_rcx, push_rbx, mov_rbx_rsi, lea_rsi_[rip+0xc@@ 75@@ 7], sub_rsp_8, mov_r13_qword_ptr_[r@@ 8], call_0xfffffffffffe@@ 4d@@ a3, mov_rsi_rax, mov_rdx_r13, xor_eax_eax, mov_rdi_r12, call_0xffffffffffff8@@ ee@@ 3, cmp_byte_ptr_[rbp]_0, je_0x68, mov_r12_qword_ptr_[r@@ bx+0x60], test_r12_r12, je_0x53, cmp_byte_ptr_[r12]_0, je_0x4c, mov_rdi_qword_ptr_[rbx+0x@@ 58], call_0xfffffffffffe@@ 4d@@ 94, mov_rdi_r12, mov_r13_rax, call_0xfffffffffffe@@ 4d@@ 89, lea_rdi_[r@@ 13@@ +rax+2], call_0xffffffffffff6@@ 28@@ f, mov_r9_qword_ptr_[r@@ bx+0x60], mov_r8_qword_ptr_[rbx+0x@@ 58], mov_r12_rax, mov_rdi_rax, lea_rcx_[rip+0xc@@ 70@@ b], mov_rdx_-1, mov_esi_1, xor_eax_eax, call_0xfffffffffffe@@ 54@@ 87, mov_qword_ptr_[rbx+0x@@ 5@@ 8]_r12, mov_rdi_rbp, call_0xffffffffffff6@@ 36@@ b, mov_qword_ptr_[rbx+0x@@ 60]_rax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret
endbr64, push_r13, push_r12, push_rbp, mov_rbp_rdx, push_rbx, mov_rbx_r8, sub_rsp_8, mov_eax_dword_ptr_[r@@ dx+4], test_al_4, jne_0x65, test_al_2, je_0x13, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, ret, lea_rsi_[r@@ di+0x30], mov_rdx_rcx, mov_rdi_rbp, mov_r12_rcx, call_0xffffffffffff97@@ 33, test_eax_eax, jns_0xffffffffffffff@@ db, mov_edx_5, lea_rsi_[rip+0xc@@ 65@@ 1], lea_rdi_[rip+0x6@@ 44@@ 5], mov_r13_qword_ptr_[r@@ bx], call_0xfffffffffffe@@ 4c@@ b4, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, mov_rcx_r12, pop_r12, mov_rsi_rax, mov_rdx_r13, xor_eax_eax, pop_r13, jmp_0xffffffffffff@@ 8@@ ea@@ 7, mov_r12_qword_ptr_[r@@ 8], mov_edx_5, lea_rsi_[rip+0xc@@ 8@@ 2b], lea_rdi_[rip+0x6@@ 40@@ a], call_0xfffffffffffe@@ 4c@@ 7c, mov_rsi_rax, mov_rdx_r12, mov_rdi_rbp, xor_eax_eax, call_0xffffffffffff8d@@ 0@@ c
endbr64, push_r15, push_r14, mov_r14_rcx, push_r13, push_r12, push_rbp, lea_rbp_[r@@ si+0x@@ 68], push_rbx, sub_rsp_0x48, mov_qword_ptr_[rsp+0x10]_rdx, mov_qword_ptr_[rsp+0x18]_r8, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x38]_rax, xor_eax_eax, movzx_eax_byte_ptr_[r14], test_al_al, je_0x1@@ 42, inc@@ _r14, movsx@@ _r15d@@ _al, cmp_al_0xa, je_0xffffffffffffffeb, cmp_r15d@@ _0x20, jne_0x1@@ a5, movsx_eax_byte_ptr_[r@@ 14], test_eax_eax, je_0x1@@ 91, mov_rbx_r14, cmp_eax_0xa, jne_0x11, jmp_0x1@@ 83, test_eax_eax, je_0xe, movsx_eax_byte_ptr_[r@@ bx+1], inc_rbx, cmp_eax_0xa, jne_0xfffffffffffffff2, lea_r9_[rsp+0x@@ 28], lea_r8_[rsp+0x@@ 24], lea_r13_[rsp+0x30], sub_rsp_8, push_qword_ptr_[r@@ sp+0x18], mov_rcx_r13, mov_rsi_rbx, mov_rdx_rbx, mov_rdi_r14, mov_qword_ptr_[rsp+0x18]_r9, mov_qword_ptr_[rsp+0x10]_r8, call_0xfffffffffffff6@@ 3b, pop_rcx, pop_rsi, xor_r15d_r15d, cmp_dword_ptr_[rsp+0x@@ 24@@ ]_8, mov_r8_qword_ptr_[rsp], mov_r9_qword_ptr_[rsp+8], je_0xdb, mov_edi_0x20, call_0xffffffffffff60@@ b8, mov_rdi_r14, mov_r13_rax, call_0xffffffffffff97@@ 8d, mov_r12@@ _qword_ptr_[rsp+0x28], sub_r12@@ _rax, test_r12d_r12d, jle_0x@@ 14@@ 5, lea_edi_[r@@ 12+2], movsxd_rdi_edi, mov_qword_ptr_[rsp]_rax, call_0xffffffffffff60@@ 8b, mov_byte_ptr_[rax]@@ _0x2f, mov_rsi_qword_ptr_[rsp], movsxd_r12_r12d, mov_r14_rax, mov_rdx_r12, lea_rdi_[rax+1], call_0xfffffffffffe@@ 4e@@ 72, mov_byte_ptr_[r14+r@@ 12+@@ 1]_0, mov_qword_ptr_[r13@@ +@@ 8]_r14, mov_r14_rbx, mov_eax_dword_ptr_[rsp+0x24], lea_edi_[rax+1], movsxd_rdi_edi, call_0xffffffffffff60@@ 56, movsxd_rdx_dword_ptr_[rsp+0x@@ 24], mov_rsi_qword_ptr_[rsp+0x30], mov_rdi_rax, call_0xfffffffffffe@@ 4e@@ 44, mov_rdi_rax, movsxd_rax_dword_ptr_[rsp+0x@@ 24], mov_byte_ptr_[rdi@@ +rax]_0, mov_qword_ptr_[r13+0x1@@ 0]_rdi, mov_byte_ptr_[r@@ 13+0x1@@ 8]@@ _r15b, mov_qword_ptr_[r13]_0, mov_qword_ptr_[rbp@@ ]_r13, mov_rbp_r13, movzx_eax_byte_ptr_[r14], test_al_al, jne_0xfffffffffffffe@@ ca, mov_rax_qword_ptr_[rsp+0x38], xor_rax_qword_ptr_fs:[0x28], jne_0x9f, add_rsp_0x48, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_rax_qword_ptr_[rsp+0x30], movabs_rcx@@ _0x6@@ 57@@ 46@@ 5@@ 6c@@ 6@@ f7@@ 36@@ 26@@ f, cmp_qword_ptr_[rax]@@ _rcx, jne_0xffffffffffffff@@ 19, sub_rsp_8, push_qword_ptr_[r@@ sp+0x18], mov_rdx_rbx, mov_rcx_r13, mov_rsi_qword_ptr_[rsp+0x38], mov_rdi_r14, call_0xfffffffffffff5@@ 1a, pop_rax, pop_rdx, mov_r15d_1, jmp_0xfffffffffffffef0, mov_rbx_r14, jmp_0xfffffffffffffe@@ 95, mov_rax_qword_ptr_[rsp+0x18], mov_edx_5, mov_r13_qword_ptr_[rax], lea_rsi_[rip+0xc@@ 6a@@ c], lea_rdi_[rip+0x6@@ 1d@@ b], call_0xfffffffffffe@@ 4a@@ 4d, mov_rdi_qword_ptr_[rsp+0x10], mov_rsi_rax, mov_ecx_r15d, mov_rdx_r13, xor_eax_eax, call_0xffffffffffff8a@@ d8, call_0xfffffffffffe@@ 4a@@ 63, mov_rax_qword_ptr_[rsp+0x18], mov_edx_5, mov_r13_qword_ptr_[rax], lea_rsi_[rip+0xc@@ 6a@@ c], lea_rdi_[rip+0x6@@ 19@@ b], call_0xfffffffffffe@@ 4a@@ 0d, mov_rdi_qword_ptr_[rsp+0x10], mov_rsi_rax, mov_rdx_r13, xor_eax_eax, call_0xffffffffffff8a@@ 9@@ b
endbr64, cmp_byte_ptr_[rcx]_0, je_0x7@@ 7f, push_r15, mov_r15_rdx, push_r14, push_r13, push_r12, mov_r12_r8, push_rbp, mov_rbp_rcx, push_rbx, sub_rsp_0x38, mov_rax_qword_ptr_[rsi], test_rax_rax, je_0x7@@ 89, mov_rdx_rax, mov_rax_qword_ptr_[rax+8], test_rax_rax, jne_0xfffffffffffffff6, lea_rax_[rdx+8], mov_qword_ptr_[rsp+0x28]_rax, mov_edi_0x20, call_0xffffffffffff5e@@ d6, mov_rcx_qword_ptr_[rsp+0x28], mov_qword_ptr_[rax]_0, mov_qword_ptr_[rax+8]_0, mov_qword_ptr_[rcx]_rax, lea_rcx_[rax+8], mov_qword_ptr_[rax+0x10]_0, mov_qword_ptr_[rsp+8]_rax, mov_qword_ptr_[rsp+0x28]_rcx, lea_r13_[r@@ ax+0x10], mov_rcx_rax, mov_rax_qword_ptr_[r12+0x20], mov_dword_ptr_[rcx+0x1@@ 8]_eax, movsx_edi_byte_ptr_[r@@ bp], test_dil_dil, je_0x1@@ b0, mov_r14_rbp, jmp_0x19, and_eax_0xfffffffb, cmp_al@@ _0x28, je_0x31, movsx_edi_byte_ptr_[r@@ 14+1], inc@@ _r14, test_dil_dil, je_0x24, mov_esi_4, call_0xffffffffffff10@@ 4f, test_al_al, jne_0x16, movzx_eax_byte_ptr_[r14], cmp_al_0x7@@ c, setne_sil, cmp_al_0x3a, setne_dl, test_sil@@ _dl, jne_0xffffffffffffffcc, mov_rbx_r14, sub_rbx@@ _rbp, cmp_r14d@@ _ebp, je_0x1@@ 5b, lea_rdi_[rip+0x@@ 9d@@ ce@@ c], call_0xffffffffffffd7@@ 9c, movsxd_rdx_ebx, mov_rsi_rbp, lea_rdi_[rip+0x@@ 9d@@ cd@@ a], call_0xffffffffffffda@@ 1a, lea_rdi_[rip+0x@@ 9d@@ cc@@ e], call_0xffffffffffffda@@ 4e, mov_rdi_qword_ptr_[rip+0x@@ 9d@@ cd@@ 2], call_0xffffffffffff8c@@ 92, mov_rbx_rax, test_rax_rax, jne_0x6@@ 94, mov_edi@@ _0x50, call_0xffffffffffff5d@@ ec, mov_rbx_rax, mov_rax_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[rip+0x@@ 9d@@ c@@ a8], mov_qword_ptr_[rbx]_rax, call_0xffffffffffff9c@@ 55, mov_qword_ptr_[rbx+8]_rax, mov_qword_ptr_[rbx+0x10]_0, mov_qword_ptr_[r13@@ ]_rbx, mov_qword_ptr_[rbx+0x18]_0, mov_qword_ptr_[rbx+0x20]_0, mov_byte_ptr_[rbx+0x@@ 4d@@ ]_0, lea_r13_[r@@ bx+0x10], cmp_byte_ptr_[r@@ 14]@@ _0x3a, je_0x3@@ 34, mov_rax_qword_ptr_[r12+0x20], mov_byte_ptr_[rbx+0x@@ 4c]_1, lea_rdx_[rax@@ -4], cmp_rdx_1, jbe_0x@@ 2f@@ 5, cmp_rax@@ _7, je_0x2@@ eb, mov_qword_ptr_[rbx+0x28]_0, jmp_8, inc@@ _r14, movsx_edi_byte_ptr_[r@@ 14], mov_esi_4, call_0xffffffffffff0@@ f@@ 54, test_al_al, jne_0xffffffffffffffed, cmp_byte_ptr_[r@@ 14]@@ _0x28, lea_rbp_[r@@ 14+1], je_0xa6, mov_dword_ptr_[rbx+0x@@ 48]_0, lea_rdi_[r@@ bx+0x30], call_0xffffffffffffd@@ cc@@ 2, movzx_eax_byte_ptr_[r14], test_al_al, je_0x2@@ 89, cmp_al_0x2@@ c, je_0x5@@ 37, cmp_al_0x7@@ c, jne_0x5@@ fd, mov_rax_qword_ptr_[r12+0x20], sub_rax_4, cmp_rax_3, jbe_0x@@ 57@@ b, lea_rbp_[r@@ 14+1], jmp_0xd, inc_rbp, movsx_edi_byte_ptr_[r@@ bp], mov_esi_4, call_0xffffffffffff0@@ ee@@ 4, test_al_al, jne_0xffffffffffffffed, movsx_edi_byte_ptr_[r@@ bp], test_dil_dil, jne_0xfffffffffffffe@@ 64, mov_r12_qword_ptr_[r12], mov_edx_5, lea_rsi_[rip+0xc@@ 47@@ 6], lea_rdi_[rip+0x@@ 5f@@ 25], call_0xfffffffffffe@@ 47@@ 97, mov_rsi_rax, mov_rdx_r12, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff88@@ 27, inc_rbp, movsx_edi_byte_ptr_[r@@ bp], mov_esi_4, call_0xffffffffffff0@@ e@@ 94, test_al_al, jne_0xffffffffffffffed, movzx_eax_byte_ptr_[rbp], mov_edx_eax, and_edx@@ _0xfffffffd, cmp_dl@@ _0x3c, jne_0x38@@ 7, xor_edx_edx, cmp_al@@ _0x3c, movzx_r9d_byte_ptr_[r@@ bp+1], setne_dl, lea_edx_[rdx@@ +rdx@@ +2], mov_dword_ptr_[rbx+0x@@ 4@@ 8]_edx, cmp_r9b@@ _0x3d, je_0x4@@ 5e, cmp_al@@ _r9b, je_0x3@@ cb, movsx_r8d@@ _al, mov_rcx_qword_ptr_[rip+0x@@ 9d@@ b@@ 28], mov_r10_qword_ptr_[r@@ 12], mov_eax_r9d, and_eax_0xfffffffd, mov_qword_ptr_[rsp+0x20]_r10, mov_qword_ptr_[rsp+0x18]_rcx, mov_dword_ptr_[rsp+0x10]_r8d, cmp_al@@ _0x3c, je_0x5@@ 4a, mov_edx_5, lea_rsi_[rip+0xc@@ 54@@ 3], lea_rdi_[rip+0x@@ 5e@@ 82], call_0xfffffffffffe4@@ 6f@@ 4, mov_r8d_dword_ptr_[rsp+0x10], mov_rsi_rax, push_r8, xor_eax_eax, mov_r9d_r8d, push_r8, mov_rdi_r15, inc_rbp, mov_r10_qword_ptr_[rsp+0x30], mov_rcx_qword_ptr_[rsp+0x28], mov_rdx_r10, call_0xffffffffffff88@@ 1b, mov_eax_dword_ptr_[rbx+0x@@ 48], or_eax_1, mov_dword_ptr_[rbx+0x@@ 48]_eax, pop_rdx, pop_rcx, cmp_eax_1, je_0xe, cmp_qword_ptr_[r12+0x@@ 20@@ ]_6, je_0x3@@ 52, movsx_edi_byte_ptr_[r@@ bp], mov_esi_4, call_0xffffffffffff0@@ dc@@ 1, test_al_al, jne_0xd, jmp_0x2@@ 68, inc_rbp, movsx_edi_byte_ptr_[r@@ bp], mov_esi_4, call_0xffffffffffff0@@ da@@ 4, test_al_al, jne_0xffffffffffffffed, movsx_edi_byte_ptr_[r@@ bp], mov_r14_rbp, lea_eax_[r@@ di-0x@@ 28], cmp_al_1, jbe_0x@@ 3@@ 9a, test_dil_dil, jne_0x2a, jmp_0x3@@ 8f, movsx_edi_byte_ptr_[r@@ 14+1], inc@@ _r14, lea_eax_[r@@ di-0x@@ 28], cmp_al_1, jbe_0x@@ fb, test_dil_dil, je_0xf2, mov_esi_4, call_0xffffffffffff0d@@ 57, test_al_al, je_0xffffffffffffffd8, mov_eax_r14d, sub_eax@@ _ebp, mov_dword_ptr_[rsp+0x10]_eax, movsx_edi_byte_ptr_[r@@ 14], jmp_0x11, movsx_edi_byte_ptr_[r@@ 14+1], inc@@ _r14, mov_esi_4, call_0xffffffffffff0d@@ 2b, test_al_al, jne_0xffffffffffffffec, movzx_eax_byte_ptr_[r14], cmp_al@@ _0x28, je_0x4@@ b7, cmp_al_0x2@@ 9, jne_0x4@@ 73, lea_rdi_[rip+0x@@ 9d@@ 99@@ 7], call_0xffffffffffffd@@ 48@@ 7, movsxd_rdx_dword_ptr_[r@@ sp+0x10], mov_rsi_rbp, lea_rdi_[rip+0x@@ 9d@@ 98@@ 3], call_0xffffffffffffd@@ 70@@ 3, lea_rdi_[rip+0x@@ 9d@@ 97@@ 7], call_0xffffffffffffd7@@ 37, mov_rdx_qword_ptr_[rip+0x@@ 9d@@ 97@@ b], lea_rsi_[r@@ bx+0x30], mov_rdi_r15, call_0xffffffffffff90@@ 14, test_eax_eax, js_0x1@@ ec, movsx_edi_byte_ptr_[r@@ 14+1], mov_esi_4, inc@@ _r14, call_0xffffffffffff0@@ cb@@ 3, test_al_al, jne_0xffffffffffffffec, movzx_eax_byte_ptr_[r14], test_al_al, jne_0xfffffffffffffd@@ 83, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_edi_3, call_0xffffffffffffdd@@ 13, mov_qword_ptr_[rbx+0x28]_rax, jmp_0xfffffffffffffd@@ 1d, mov_eax_r14d, sub_eax@@ _ebp, mov_dword_ptr_[rsp+0x10]_eax, jmp_0xffffffffffffff37, movsx_edi_byte_ptr_[r@@ 14+1], lea_rbp_[r@@ 14+1], test_dil_dil, je_0x2@@ 9e, mov_r14_rbp, jmp_0x1c, cmp_al_0x7@@ c, je_0x2b, movsx_edi_byte_ptr_[r@@ 14+1], inc@@ _r14, test_dil_dil, je_0x1e, mov_esi_4, call_0xffffffffffff0c@@ 2a, test_al_al, jne_0x10, movzx_eax_byte_ptr_[r14], mov_edx_eax, and_edx@@ _0xfffffffb, cmp_dl@@ _0x28, jne_0xffffffffffffffd5, mov_rax_r14, sub_rax_rbp, mov_qword_ptr_[rsp+0x10]_rax, cmp_r14d@@ _ebp, je_0x2@@ 4f, lea_rdi_[rip+0x@@ 9d@@ 8a@@ 8], call_0xffffffffffffd@@ 378, movsxd_rdx_dword_ptr_[r@@ sp+0x10], mov_rsi_rbp, lea_rdi_[rip+0x@@ 9d@@ 8@@ 94], call_0xffffffffffffd@@ 5f@@ 4, lea_rdi_[rip+0x@@ 9d@@ 8@@ 88], call_0xffffffffffffd6@@ 28, mov_byte_ptr_[rbx+0x@@ 4c]_0, mov_rdi_qword_ptr_[rip+0x@@ 9d@@ 8@@ 88], call_0xffffffffffffdc@@ 28, cmp_dword_ptr_[rax+0x1@@ 0]_2, mov_qword_ptr_[rbx+0x28]_rax, jne_0xfffffffffffffc@@ 5e, mov_rdi_qword_ptr_[rip+0x@@ 9d@@ 86@@ e], call_0xffffffffffffda@@ 8e, mov_rbp_rax, test_rax_rax, je_0xfffffffffffffc@@ 46, mov_rbx_qword_ptr_[rip+0x@@ 9d@@ 85@@ 6], mov_r13_qword_ptr_[rip+0x@@ 9d@@ 86@@ f], mov_r12_qword_ptr_[r12], mov_edx_5, lea_rsi_[rip+0xc@@ 20@@ f], lea_rdi_[rip+0x@@ 5b@@ e6], call_0xfffffffffffe@@ 44@@ 58, mov_rsi_rax, mov_r9_rbp, mov_r8_rbx, mov_rcx_r13, mov_rdx_r12, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff8@@ 4d@@ f, movsx_edi_byte_ptr_[r@@ bp], mov_esi@@ _0x38, call_0xffffffffffff0b@@ 47, test_al_al, jne_0xfffffffffffffd@@ 93, mov_rcx_qword_ptr_[rip+0x@@ 9d@@ 8@@ 13], mov_r14_qword_ptr_[r@@ 12], mov_edx_5, lea_rsi_[rip+0xc@@ 33@@ b], lea_rdi_[rip+0x@@ 5b@@ 8a], mov_qword_ptr_[rsp+0x10]_rcx, call_0xfffffffffffe4@@ 3f@@ 7, mov_rcx_qword_ptr_[rsp+0x10], mov_rsi_rax, mov_rdx_r14, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff@@ 85@@ 32, jmp_0xfffffffffffffd@@ 50, cmp_al_0x3d, jne_0xa9, mov_dword_ptr_[rbx+0x@@ 48]_1, inc_rbp, jmp_0xfffffffffffffd@@ 1c, mov_r8_qword_ptr_[rip+0x@@ 9d@@ 77@@ a], mov_rcx_qword_ptr_[rip+0x@@ 9d@@ 7b@@ 3], mov_rbp_qword_ptr_[r@@ 12], mov_edx_5, lea_rsi_[rip+0xc@@ 38@@ 3], lea_rdi_[rip+0x@@ 5b@@ 2a], mov_qword_ptr_[rsp+0x18]_r8, mov_qword_ptr_[rsp+0x10]_rcx, call_0xfffffffffffe@@ 43@@ 92, mov_r8_qword_ptr_[rsp+0x18], mov_rcx_qword_ptr_[rsp+0x10], mov_rsi_rax, mov_rdx_rbp, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff8@@ 588, jmp_0xfffffffffffffdd@@ 3, add_rbp@@ _2, cmp_qword_ptr_[r12+0x@@ 20@@ ]_6, jne_0xfffffffffffffc@@ ba, mov_r14_qword_ptr_[r@@ 12], mov_edx_5, lea_rsi_[rip+0xc@@ 25@@ 6], lea_rdi_[rip+0x@@ 5a@@ d5], call_0xfffffffffffe4@@ 34@@ 7, mov_rsi_rax, mov_rdx_r14, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff8@@ 48@@ 7, jmp_0xfffffffffffffc@@ 88, mov_rcx_qword_ptr_[rip+0x@@ 9d@@ 7@@ 26], mov_r14_qword_ptr_[r@@ 12], mov_edx_5, lea_rsi_[rip+0xc@@ 1b@@ 6], lea_rdi_[rip+0x@@ 5a@@ 9d], mov_qword_ptr_[rsp+0x10]_rcx, call_0xfffffffffffe4@@ 30@@ a, mov_rcx_qword_ptr_[rsp+0x10], mov_rsi_rax, mov_rdx_r14, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff8@@ 44@@ 5, mov_dword_ptr_[rbx+0x@@ 48]_1, jmp_0xfffffffffffffc@@ 3f, or_edx_1, mov_dword_ptr_[rbx+0x@@ 4@@ 8]_edx, add_rbp@@ _2, jmp_0xfffffffffffffc@@ 24, mov_dword_ptr_[rsp+0x10]_0, jmp_0xfffffffffffffc@@ bd, test_al_al, je_0xfffffffffffffd@@ 48, lea_rbp_[r@@ 14+1], jmp_0xf, inc_rbp, movsx_edi_byte_ptr_[r@@ bp], mov_esi_4, call_0xffffffffffff0@@ 9c@@ 4, test_al_al, jne_0xffffffffffffffed, jmp_0xfffffffffffff8f@@ 0, mov_r12_qword_ptr_[r12], mov_edx_5, lea_rsi_[rip+0xb@@ fd@@ e], lea_rdi_[rip+0x@@ 5a@@ 0d], call_0xfffffffffffe4@@ 27@@ f, mov_rsi_rax, mov_rdx_r12, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff8@@ 30@@ f, ret, mov_r12_qword_ptr_[r12], mov_edx_5, lea_rsi_[rip+0xc@@ 2a@@ 9], lea_rdi_[rip+0x@@ 59@@ e0], call_0xfffffffffffe4@@ 25@@ 2, mov_rsi_rax, mov_rdx_r12, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff8@@ 2e@@ 2, mov_qword_ptr_[rsp+0x28]_rsi, jmp_0xfffffffffffff88@@ d, mov_r13_qword_ptr_[rip+0x@@ 9d@@ 6@@ 2c], mov_r12_qword_ptr_[r12], mov_edx_5, lea_rsi_[rip+0xb@@ f@@ 44], lea_rdi_[rip+0x5@@ 9a@@ 3], call_0xfffffffffffe@@ 42@@ 15, mov_rsi_rax, mov_r8_rbx, mov_rcx_r13, mov_rdx_r12, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff8@@ 29@@ f, mov_rax_qword_ptr_[rbx+8], mov_r12_qword_ptr_[r12], mov_r13_qword_ptr_[r@@ ax+8], mov_edx_5, lea_rsi_[rip+0xc@@ 1f@@ 2], lea_rdi_[rip+0x5@@ 96@@ 9], call_0xfffffffffffe4@@ 1d@@ b, mov_rsi_rax, mov_rcx_r13, mov_rdx_r12, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff8@@ 268, mov_edx_5, lea_rsi_[rip+0xb@@ fb@@ 7], lea_rdi_[rip+0x5@@ 93@@ e], mov_byte_ptr_[rsp+@@ 8]@@ _r9b, call_0xfffffffffffe4@@ 1a@@ b, mov_r10_qword_ptr_[rsp+0x20], movsx@@ _r9d@@ _byte_ptr_[r@@ sp+8], mov_r8d_dword_ptr_[rsp+0x10], mov_rcx_qword_ptr_[rsp+0x18], mov_rsi_rax, mov_rdx_r10, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff8@@ 22@@ 6, mov_r13_qword_ptr_[rip+0x@@ 9d@@ 57@@ a], mov_r12_qword_ptr_[r12], mov_edx_5, lea_rsi_[rip+0xc@@ 10@@ a], lea_rdi_[rip+0x@@ 58@@ f1], call_0xfffffffffffe4@@ 16@@ 3, mov_rsi_rax, mov_r8d@@ _0x20, mov_rcx_r13, mov_rdx_r12, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff8@@ 1@@ ea, mov_r13_qword_ptr_[rip+0x@@ 9d@@ 53@@ e], mov_r12_qword_ptr_[r12], mov_edx_5, lea_rsi_[rip+0x@@ c0@@ ce], lea_rdi_[rip+0x@@ 58@@ b5], call_0xfffffffffffe4@@ 12@@ 7, mov_rsi_rax, mov_r8d@@ _0x29, mov_rcx_r13, mov_rdx_r12, mov_rdi_r15, xor_eax_eax, call_0xffffffffffff8@@ 1a@@ e
endbr64, push_r14, push_r13, mov_r13_rdx, push_r12, push_rbp, push_rbx, sub_rsp_0x10, mov_qword_ptr_[rsp+8]_rcx, test_byte_ptr_[r@@ dx+@@ 4]_4, jne_0xa@@ b, mov_rbx_rdi, lea_rbp_[r@@ sp+8], jmp_0x2d, mov_rdi_r12, call_0xd@@ 4d, mov_r14_rax, test_rax_rax, jne_0x36, mov_rdi_r12, call_0xffffffffffff56@@ fd, mov_rsi_rax, mov_rdi_rbx, call_0xd@@ 92, test_al_al, je_0x4a, mov_rdi_rbp, call_0xffffffffffffea@@ 66, mov_r12_rax, test_rax_rax, jne_0xffffffffffffffcb, add_rsp_0x10, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, mov_edx_5, lea_rsi_[rip+0xc@@ 100], lea_rdi_[rip+0x5@@ 80@@ 7], call_0xfffffffffffe@@ 40@@ 79, mov_rsi_rax, mov_rcx_r14, mov_rdx_r12, mov_rdi_r13, xor_eax_eax, call_0xffffffffffff8@@ 106, mov_edx_5, lea_rsi_[rip+0xc@@ 10@@ 5], lea_rdi_[rip+0x@@ 57@@ dc], call_0xfffffffffffe@@ 40@@ 4e, mov_rsi_rax, mov_rdx_r12, mov_rdi_r13, xor_eax_eax, call_0xffffffffffff80@@ de, mov_r12_qword_ptr_[r@@ 8], mov_edx_5, lea_rsi_[rip+0x@@ bb@@ d2], jmp_0xffffffffffffffd@@ 5
endbr64, push_r15, push_r14, mov_r14_rdx, push_r13, push_r12, push_rbp, push_rbx, sub_rsp_0x38, mov_qword_ptr_[rsp+8]_rcx, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, test_byte_ptr_[r@@ dx+@@ 4]_4, jne_0x@@ cf, mov_rbx_rdi, lea_r12_[r@@ sp+8], lea_r13_[rsp+0x10], jmp_0x31, mov_rsi_r13, mov_rdi_r15, call_0xa@@ 92, mov_rbp_rax, test_rax_rax, je_0x4c, mov_rsi_rbx, mov_rdi_rax, call_0xd@@ 6f, test_al_al, je_0x6d, mov_rdi_rbp, call_0xe@@ 13, mov_rdi_r12, call_0xffffffffffffe@@ 96@@ b, mov_r15_rax, test_rax_rax, jne_0xffffffffffffffc8, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x98, add_rsp_0x38, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, mov_r12_qword_ptr_[rsp+0x18], mov_edx_5, lea_rsi_[rip+0x@@ c0@@ 42], lea_rdi_[rip+0x@@ 56@@ f1], call_0xfffffffffffe@@ 3f@@ 63, mov_rsi_rax, mov_rcx_r12, mov_rdx_r15, mov_rdi_r14, xor_eax_eax, call_0xffffffffffff7@@ ff0, mov_edx_5, lea_rsi_[rip+0x@@ c0@@ 4f], lea_rdi_[rip+0x5@@ 6c@@ 6], call_0xfffffffffffe@@ 3f@@ 38, mov_rsi_rax, mov_rdx_r15, mov_rdi_r14, xor_eax_eax, call_0xffffffffffff7@@ fc8, mov_r12_qword_ptr_[r@@ 8], mov_edx_5, lea_rsi_[rip+0x@@ ba@@ bc], lea_rdi_[rip+0x@@ 56@@ 9b], call_0xfffffffffffe@@ 3f@@ 0d, mov_rsi_rax, mov_rdx_r12, mov_rdi_r14, xor_eax_eax, call_0xffffffffffff7f@@ 9d, call_0xfffffffffffe@@ 3f@@ 2@@ 8
endbr64, lea_rcx_[rip+0x@@ 9d@@ 3@@ 15], lea_rsi_[r@@ cx+0x1@@ fff@@ d8], lea_rdx_[rip+0x2@@ ec@@ 2], mov_rax_qword_ptr_[rcx], test_rax_rax, je_0x2d, mov_dword_ptr_[rax+0x@@ 30]_0, mov_qword_ptr_[rax+0x@@ 38]_0, mov_qword_ptr_[rax+0x40]_rdx, mov_qword_ptr_[rax+0x@@ 48]_0, mov_rax_qword_ptr_[rax], test_rax_rax, jne_0xffffffffffffffdf, add_rcx_8, cmp_rcx_rsi, jne_0xffffffffffffffc6, ret
endbr64, lea_rax_[rip+0x@@ 9d@@ 2b@@ 5], lea_rdx_[r@@ ax+0x1@@ fff@@ d8], mov_qword_ptr_[rax]_0, add_rax_8, cmp_rax_rdx, jne_0xfffffffffffffff2, mov_dword_ptr_[rip+0x@@ 9d@@ 26@@ e]_0, ret
endbr64, mov_eax_dword_ptr_[rip+0x@@ 9d@@ 25@@ 6], ret
endbr64, push_r14, push_r13, push_r12, push_rbp, mov_ebp_esi, push_rbx, mov_rbx_rdi, call_0xffffffffffff8a@@ 3f, mov_rdi_rax, mov_r13_rax, call_0xffffffffffffa6@@ 64, mov_edx_eax, mov_ecx@@ _0x8@@ 000@@ a@@ 001, imul@@ _rdx_rcx, shr_rdx@@ _0x31, imul_edx@@ _edx@@ _0x3@@ fff@@ b, sub_eax_edx, lea_rdx_[rip+0x@@ 9d@@ 23@@ 1], lea_r14@@ _[rdx@@ +rax*8], mov_r12_qword_ptr_[r@@ 14], test_r12_r12, jne_0x13, jmp_0x40, mov_rax_qword_ptr_[r12], test_rax_rax, je_0x31, mov_r12_rax, mov_rdi_qword_ptr_[r12+8], cmp_byte_ptr_[rdi]@@ _0x2f, jne_0x@@ ea, inc_rdi, mov_rsi_r13, call_0xfffffffffffe@@ 40@@ 70, test_eax_eax, jne_0xffffffffffffffd9, pop_rbx, pop_rbp, mov_rax_r12, pop_r12, pop_r13, pop_r14, ret, mov_r14_r12, xor_r12d_r12d, test_bpl@@ _2, jne_0xffffffffffffffe7, mov_edi@@ _0x50, call_0xffffffffffff5@@ 2d@@ 7, mov_qword_ptr_[rax+0x10]_0, mov_r12_rax, cmp_rbx_r13, jae_0x@@ 12, and_ebp@@ _1, je_0xd, cmp_byte_ptr_[r@@ 13@@ -1]_0x2f, je_0x8d, mov_rdi_r13, call_0xfffffffffffe@@ 3d@@ 9f, lea_rdi_[rax@@ +2], call_0xffffffffffff5@@ 2a@@ 6, mov_byte_ptr_[rax]@@ _0x2f, mov_rbx_rax, lea_rdi_[rax+1], mov_rsi_r13, call_0xfffffffffffe@@ 3c@@ 04, mov_qword_ptr_[r12+@@ 8]_rbx, lea_rax_[rip+0x2d@@ 3e], mov_qword_ptr_[r12+0x@@ 40]_rax, mov_dword_ptr_[r12+0x@@ 30]_0, mov_qword_ptr_[r12]_0, mov_qword_ptr_[r12+0x1@@ 8]_0, mov_qword_ptr_[r12+0x@@ 20]_0, mov_qword_ptr_[r12+0x@@ 38]_0, mov_qword_ptr_[r12+0x@@ 48]_0, mov_qword_ptr_[r12+0x@@ 28]_0, mov_qword_ptr_[r14]@@ _r12, mov_rax_r12, inc_dword_ptr_[rip+0x@@ 9d@@ 114], pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, ret, dec@@ _r13, mov_qword_ptr_[rax+@@ 8]_r13, jmp_0xffffffffffffff9a, mov_r8_rdi, lea_rcx_[rip+0x@@ be@@ 78], lea_rdx_[rip+0x@@ be@@ f1], mov_esi_0x5@@ c, lea_rdi_[rip+0x@@ be@@ 10], xor_eax_eax, call_0xffffffffffff3a@@ 0@@ 3
endbr64, push_r15, push_r14, push_r13, mov_r13_rdi, push_r12, push_rbp, push_rbx, sub_rsp_0x18, movsxd_rax_dword_ptr_[rip+0x@@ 9d@@ 0@@ b4], lea_rdi_[rax@@ *4@@ +1], call_0xffffffffffff4d@@ ac, movsxd_rdx@@ _dword_ptr_[rip+0x@@ 9d@@ 0@@ a0], mov_rbp_rax, test_edx_edx, js@@ _0x16, lea_rdx_[rax@@ +rdx*4@@ +4], mov_dword_ptr_[rax]_0, add_rax_4, cmp_rax_rdx, jne_0xfffffffffffffff3, mov_dword_ptr_[rsp+0xc]_0, xor_r14d_r14d, xor_ebx_ebx, xor_r12d_r12d, lea_rax_[rip+0x@@ 9d@@ 0@@ 89], mov_rax_qword_ptr_[rax+r@@ 14*8], mov_ecx_r14d, test_rax_rax, je_0x10@@ f, xor_r15d_r15d, mov_rax_qword_ptr_[rax], inc@@ _r15d, test_rax_rax, jne_0xfffffffffffffff7, lea_rdx_[rip+0x@@ bd@@ 87], xor_eax_eax, mov_r8d_r15d, mov_esi_1, mov_rdi_r13, call_0xfffffffffffe4@@ 29@@ 1, inc_r12d, xor_edx_edx, cmp_r15d_1, movsxd_rax_r15d, setne_dl, lea_rax_[r@@ bp@@ +rax*4], add_ebx@@ _edx, inc@@ _r14, inc_dword_ptr_[r@@ ax], cmp_r14@@ _0x3@@ fff@@ b, jne_0xffffffffffffff9a, movsxd_rax_dword_ptr_[rip+0x@@ 9d@@ 00@@ 1], mov_r15_rax, lea_rax_[r@@ bp@@ +rax*4], test_r15d_r15d, jg_0x1@@ 7, jmp_0x@@ c9, sub_rax_4, dec@@ _r15d, je_8, mov_edx_dword_ptr_[rax], test_edx_edx, je_0xfffffffffffffff@@ 3, movsxd_r15@@ _r15d, lea_r14_[rip+0x@@ b@@ da@@ 7], mov_r8d_dword_ptr_[r@@ bp+r@@ 15*4], mov_ecx_r15d, mov_rdx_r14, mov_esi_1, mov_rdi_r13, xor_eax_eax, dec@@ _r15, call_0xfffffffffffe@@ 42@@ 17, test_r15d_r15d, jns_0xffffffffffffff@@ e0, mov_ecx_dword_ptr_[rsp+0xc], mov_rdi_r13, lea_rdx_[rip+0xb@@ d0@@ 4], mov_esi_1, xor_eax_eax, call_0xfffffffffffe4@@ 1f8, mov_r8d_ebx, mov_ecx_r12d, mov_rdi_r13, lea_rdx_[rip+0x@@ bd@@ 33], mov_esi_1, xor_eax_eax, call_0xfffffffffffe4@@ 1d@@ c, mov_rdi_r13, lea_rsi_[rip+0xa@@ 63@@ f], call_0xffffffffffff4@@ fa@@ d, add_rsp_0x18, pop_rbx, mov_rdi_rbp, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, jmp_0xfffffffffffe@@ 38@@ b7, xor_r8d_r8d, lea_rdx_[rip+0x@@ bc@@ 8f], mov_esi_1, mov_rdi_r13, xor_eax_eax, call_0xfffffffffffe4@@ 19@@ c, inc@@ _dword_ptr_[rsp+0xc], mov_rax_rbp, jmp_0xffffffffffffff1a, js_0xffffffffffffff@@ 7e, jmp_0xffffffffffffff4@@ c
endbr64, sub_rsp_8, mov_edi_0x10, call_0xffffffffffff4c@@ 13, mov_qword_ptr_[rax]_0, mov_dword_ptr_[rax+8]_0, add_rsp_8, ret
endbr64, mov_r8_qword_ptr_[r@@ di], test_r8_r8, jne_0x36, movsxd_rax_dword_ptr_[r@@ di+8], lea_rcx_[rip+0x@@ 9c@@ ef@@ 9], jmp_0x1e, lea_edx_[rax+1], mov_dword_ptr_[rdi+@@ 8]_edx, mov_rdx_qword_ptr_[r@@ cx+rax*8], inc_rax, mov_qword_ptr_[rdi]_rdx, test_rdx_rdx, jne_0x10, cmp_eax@@ _0x3@@ fff@@ a, jle_0xffffffffffffff@@ e6, mov_rax_r8, ret, mov_rdx_r8, mov_rax_qword_ptr_[rdx], mov_r8_rdx, mov_qword_ptr_[rdi]_rax, mov_rax_r8, ret
endbr64, jmp_0xfffffffffffe@@ 37@@ f@@ c
endbr64, push_rbp, mov_rbp_rsi, push_rbx, sub_rsp_8, mov_rsi_qword_ptr_[rdi], test_rsi_rsi, je_0x2d, mov_rbx_rdi, jmp_0x15, mov_rsi_qword_ptr_[rbx+0x10], add_rbx_0x10, test_rsi_rsi, je_0x15, movsxd_rdx_dword_ptr_[r@@ bx+0xc], mov_rdi_rbp, call_0xfffffffffffe@@ 3e@@ 1c, test_eax_eax, jne_0xffffffffffffffe5, mov_rsi_rbx, add_rsp_8, pop_rbx, mov_rax_rsi, pop_rbp, ret
sub_rsp_8, cmp_byte_ptr_[rdi+0x1@@ 5]_0, mov_rax_qword_ptr_[rdi+8], jne_0x54, mov_ecx_dword_ptr_[r@@ ax+0x10], cmp_rdx_rax, sete_al, test_ecx_ecx, jne_0x24, mov_r8d_dword_ptr_[r@@ di+0x10], and_r8d@@ _0xff00, cmp_r8d@@ _0x100, je_0x1b, cmp_r8d@@ _0x200, jne_0x43, mov_eax_1, add_rsp_8, ret, mov_rdi_qword_ptr_[rsi], call_0xffffffffffff8a@@ c5, cmp_eax_1, setl@@ e_al, add_rsp_8, ret, mov_rsi_qword_ptr_[rdx+8], mov_rdi_qword_ptr_[rax+8], xor_edx_edx, call_0xfffffffffffe@@ 3a@@ e6, test_eax_eax, sete_al, add_rsp_8, ret, lea_rcx_[rip+0x@@ bb@@ d8], lea_rdx_[rip+0x@@ bc@@ 89], mov_esi_0x@@ b2, lea_rdi_[rip+0x@@ bc@@ 58], xor_eax_eax, call_0xffffffffffff3@@ 6c@@ b
endbr64, xor_eax_eax, mov_dword_ptr_[rdi+0x1@@ 0]_esi, mov_qword_ptr_[rdi]_0, mov_qword_ptr_[rdi+8]_0, mov_word_ptr_[r@@ di+0x1@@ 4]_ax, mov_qword_ptr_[rdi+0x1@@ 8]_0, mov_qword_ptr_[rdi+0x@@ 20]_0, ret
endbr64, push_r13, push_r12, push_rbp, push_rbx, mov_rbx_rdi, sub_rsp_8, cmp_byte_ptr_[rdi+0x1@@ 4]_0, je_0xcb, mov_rdx_qword_ptr_[rbx+8], cmp_byte_ptr_[rbx+0x1@@ 5]_0, mov_eax_dword_ptr_[r@@ dx+0x10], jne_0x4a, dec_eax, cmp_eax_1, jbe_0x@@ 48, test_byte_ptr_[rbx+0x1@@ 1]_1, je_0x30, mov_rdi_qword_ptr_[rbx], call_0xffffffffffff8c@@ d8, mov_rdi_rax, mov_rax_qword_ptr_[rbx+8], mov_eax_dword_ptr_[rax+0x10], test_eax_eax, jne_0x1a, call_0xffffffffffff8@@ 9f@@ 5, cmp_eax_1, jle_0x@@ 10, mov_edi_5, call_0xffffffffffffd0@@ b6, mov_qword_ptr_[rbx+8]_rax, add_rsp_8, pop_rbx, pop_rbp, pop_r12, xor_eax_eax, pop_r13, ret, cmp_eax_1, jne_0xfffffffffffffff0, mov_rdi_qword_ptr_[rdx+8], call_0xffffffffffffc@@ ee@@ 7, mov_rbp_rax, mov_rax_qword_ptr_[rbx+8], mov_edx_5, lea_rsi_[rip+0x@@ bb@@ 57], lea_rdi_[rip+0x@@ 50@@ 56], mov_r12_qword_ptr_[r@@ ax+8], mov_rbx_qword_ptr_[rbx], call_0xfffffffffffe@@ 38@@ c1, push_rbp, mov_r8_rax, mov_r9_rbx, push_r12, mov_ecx_0x400, mov_edx_1, mov_esi_0x400, lea_rdi_[rip+0x2@@ 9c@@ ca@@ d], xor_eax_eax, call_0xfffffffffffe@@ 36@@ 8b, pop_rdx, pop_rcx, add_rsp_8, pop_rbx, pop_rbp, pop_r12, lea_rax_[rip+0x2@@ 9c@@ c9@@ 5], pop_r13, ret, mov_rdi_qword_ptr_[rdi], call_0xffffffffffff7c@@ 3d, mov_rbp_rax, test_rax_rax, je_0xffffffffffffff@@ 2d, mov_rax_qword_ptr_[rbx+8], lea_rdx_[rip+0x8@@ 96@@ c], mov_esi_dword_ptr_[r@@ ax+0x10], lea_r12_[rip+0x@@ 5@@ 9b@@ 1], test_esi_esi, cmovne@@ _r12@@ _rdx, lea_rsi_[rip+0xb@@ aa@@ 2], mov_edx_5, lea_rdi_[rip+0x4@@ fc@@ c], mov_r13_qword_ptr_[r@@ ax+8], mov_rbx_qword_ptr_[rbx], call_0xfffffffffffe@@ 38@@ 37, sub_rsp_8, push_rbp, mov_r8_rax, mov_r9_rbx, push_r13, mov_ecx_0x400, mov_edx_1, push_r12, mov_esi_0x400, lea_rdi_[rip+0x2@@ 9c@@ c@@ 1d], xor_eax_eax, call_0xfffffffffffe@@ 35@@ fb, add_rsp_0x20, add_rsp_8, pop_rbx, pop_rbp, pop_r12, lea_rax_[rip+0x2@@ 9c@@ c0@@ 3], pop_r13, ret
push_rbp, mov_rbp_rdi, mov_rdi_rdx, push_rbx, sub_rsp_8, mov_qword_ptr_[rbp@@ ]_rsi, call_0xffffffffffffcf@@ 60, xor_edx_edx, mov_qword_ptr_[rbp+8]_rax, mov_word_ptr_[rbp+0x@@ 14@@ ]_dx, test_byte_ptr_[rbp+0x@@ 10]_1, je_0x37, mov_rdi_qword_ptr_[rbp], lea_rsi_[rip+0x@@ ba@@ 98], mov_rbx_rax, call_0xfffffffffffe@@ 3b@@ fd, test_rax_rax, je_6, mov_byte_ptr_[rbp+0x@@ 14]_1, mov_rdi_qword_ptr_[rbx+8], lea_rsi_[rip+0x@@ ba@@ 7c], call_0xfffffffffffe@@ 3b@@ e4, test_rax_rax, je_6, mov_byte_ptr_[rbp+0x@@ 15]_1, add_rsp_8, pop_rbx, mov_rdi_rbp, pop_rbp, jmp_0xfffffffffffffe@@ 2@@ d
endbr64, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rdi, mov_rdi_rsi, sub_rsp_8, call_0xffffffffffff4@@ 8d@@ c, add_rsp_8, mov_rdi_rbp, pop_rbp, mov_rdx_r12, mov_rsi_rax, pop_r12, jmp_0xffffffffffffff6@@ 7
endbr64, push_r13, mov_r13_rdi, push_r12, push_rbp, mov_rbp_rsi, mov_rdi_rbp, mov_esi_0x3a, call_0xfffffffffffe@@ 37@@ b9, mov_r12_rax, test_rax_rax, je_0x2e, mov_rsi_rax, sub_rsi@@ _rbp, mov_rdi_rbp, call_0xffffffffffff48@@ b3, inc_r12, pop_rbp, mov_rdx_r12, pop_r12, mov_rdi_r13, mov_rsi_rax, pop_r13, jmp_0xffffffffffffff1d, mov_rdi_rbp, call_0xffffffffffff4@@ 86@@ d, pop_rbp, mov_rdx_r12, pop_r12, mov_rdi_r13, mov_rsi_rax, pop_r13, jmp_0xfffffffffffffef@@ a
endbr64, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdi, cmp_byte_ptr_[rbp+0x@@ 14]_0, push_rbx, mov_rbx_rdx, mov_rax_qword_ptr_[rsi], mov_rdi_qword_ptr_[rdi], mov_rsi_qword_ptr_[rax+8], jne_0x21, call_0xfffffffffffe3@@ 95@@ f, test_eax_eax, sete_al, test_al_al, jne_0x23, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret, xor_edx_edx, call_0xfffffffffffe@@ 37@@ be, test_eax_eax, sete_al, test_al_al, je_0xffffffffffffffe1, mov_rdx_qword_ptr_[rbx+0x10], pop_rbx, mov_rdi_rbp, pop_rbp, mov_rsi_r12, pop_r12, jmp_0xfffffffffffffc@@ 5@@ 2
endbr64, push_rbx, mov_rbx_rdi, cmp_byte_ptr_[rdi+0x1@@ 4]_0, je_0x14, call_0xffffffffffff8d@@ 62, mov_qword_ptr_[rbx+0x18]_rax, pop_rbx, ret, mov_rdi_qword_ptr_[rdi], call_0xffffffffffff8@@ 9f@@ d, add_rax_0x10, mov_qword_ptr_[rbx+0x20]_rax, pop_rbx, ret
endbr64, push_r12, push_rbx, mov_rbx_rdi, sub_rsp_8, cmp_byte_ptr_[rdi+0x1@@ 4]_0, jne_0x22, jmp_0x61, lea_rdx_[r@@ 12+0x@@ 48], mov_rsi_r12, mov_rdi_rbx, call_0xffffffffffffff@@ 25, test_al_al, jne_0x16, mov_rdi_qword_ptr_[rbx+0x18], call_0xffffffffffff8d@@ 98, mov_r12_rax, test_rax_rax, jne_0xffffffffffffffdd, xor_r12d_r12d, add_rsp_8, pop_rbx, mov_rax_r12, pop_r12, ret, mov_rax_qword_ptr_[r12+8], mov_rdx_qword_ptr_[r12+0x@@ 58], mov_qword_ptr_[rbx+0x20]_rax, mov_rsi_r12, mov_rdi_rbx, call_0xfffffffffffffb@@ 94, test_al_al, jne_0xffffffffffffffd5, mov_r12_qword_ptr_[r@@ bx+0x20], test_r12_r12, jne_0xffffffffffffffdc, jmp_0xffffffffffffffc@@ 7
endbr64, push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi+0x18], call_0xffffffffffff8d@@ c4, mov_qword_ptr_[rbx+0x18]_0, mov_qword_ptr_[rbx+0x20]_0, pop_rbx, ret
endbr64, push_rbx, mov_rbx_rdi, mov_rdi_qword_ptr_[rdi], call_0xfffffffffffe3@@ 2e@@ 5, xor_eax_eax, mov_qword_ptr_[rbx]_0, mov_qword_ptr_[rbx+8]_0, mov_word_ptr_[rbx+0x1@@ 4]_ax, mov_rdi_qword_ptr_[rbx+0x18], call_0xffffffffffff8d@@ 77, mov_qword_ptr_[rbx+0x18]_0, mov_qword_ptr_[rbx+0x20]_0, pop_rbx, ret
endbr64, push_r13, xor_edx_edx, push_r12, push_rbp, mov_rbp_rsi, mov_rsi_rdi, sub_rsp_0x30, mov_r13_rsp, mov_rdi_r13, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+8]_0, mov_dword_ptr_[rsp+0x10]@@ _0x100, mov_word_ptr_[rsp+0x1@@ 4]_dx, mov_qword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rsp+0x20]_0, call_0xfffffffffffffd@@ 95, test_rax_rax, jne_0x55, mov_rsi_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[rsp], mov_eax_dword_ptr_[r@@ si+0x10], test_eax_eax, je_0x35, call_0xffffffffffff8b@@ 8b, mov_r12_rax, mov_rdi_r13, call_0xffffffffffffff@@ 40, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x3e, add_rsp_0x30, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, call_0xffffffffffff8@@ 9f8, mov_r12_rax, jmp_0xffffffffffffffcd, mov_rdx_rax, lea_rsi_[rip+0x@@ 90@@ 6c], mov_rdi_rbp, xor_eax_eax, call_0xffffffffffffd@@ 85@@ 9, xor_r12d_r12d, jmp_0xffffffffffffffae, call_0xfffffffffffe@@ 34@@ 9@@ f
endbr64, push_r13, push_r12, mov_r12_rsi, push_rbp, mov_rbp_rdx, xor_edx_edx, sub_rsp_0x30, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+0x28]_rax, xor_eax_eax, mov_r13_rsp, mov_word_ptr_[rsp+0x1@@ 4]_dx, mov_qword_ptr_[rsp]_0, mov_qword_ptr_[rsp+8]_0, mov_dword_ptr_[rsp+0x10]@@ _0x100, mov_qword_ptr_[rsp+0x18]_0, mov_qword_ptr_[rsp+0x20]_0, call_0xffffffffffff4@@ 578, mov_rsi_rax, mov_rdx_r12, mov_rdi_r13, call_0xfffffffffffffc0@@ a, test_rax_rax, jne_0x52, mov_rsi_qword_ptr_[rsp+8], mov_rdi_qword_ptr_[rsp], mov_eax_dword_ptr_[r@@ si+0x10], test_eax_eax, je_0x32, call_0xffffffffffff8@@ aa@@ 0, mov_r12_rax, mov_rdi_r13, call_0xfffffffffffffe@@ 55, mov_rax_qword_ptr_[rsp+0x28], xor_rax_qword_ptr_fs:[0x28], jne_0x3b, add_rsp_0x30, pop_rbp, mov_rax_r12, pop_r12, pop_r13, ret, call_0xffffffffffff8@@ 9@@ 10, mov_r12_rax, jmp_0xffffffffffffffd0, mov_rdx_rax, lea_rsi_[rip+0x@@ 8f@@ 84], mov_rdi_rbp, xor_eax_eax, call_0xffffffffffffd@@ 77@@ 1, xor_r12d_r12d, jmp_0xffffffffffffffb1, call_0xfffffffffffe3@@ 3b@@ 7
endbr64, movsx_eax@@ _byte_ptr_[rdi], inc_rdi, test_al_al, je_0x34, sub_eax@@ _0x21, cmp_eax@@ _0x5d, ja_0x1@@ 2, movsx_eax@@ _byte_ptr_[rdi], inc_rdi, test_al_al, jne_0xfffffffffffffff0, xor_eax_eax, ret, mov_edx_5, lea_rsi_[rip+0xb@@ 66@@ c], lea_rdi_[rip+0x4a@@ d3], jmp_0xfffffffffffe@@ 3@@ 34@@ 5, mov_edx_5, lea_rsi_[rip+0xb@@ 6@@ 2c], lea_rdi_[rip+0x4a@@ bb], jmp_0xfffffffffffe@@ 3@@ 32@@ d
endbr64, push_r12, mov_r12_rdi, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_qword_ptr_[r@@ di+0x1@@ 60], test_rbx_rbx, jne_0x10, jmp_0x26, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, je_0x1a, mov_rdi_qword_ptr_[rbx+8], mov_rsi_rbp, call_0xfffffffffffe@@ 35@@ 91, test_eax_eax, jne_0xffffffffffffffea, pop_rbx, pop_rbp, xor_eax_eax, pop_r12, ret, mov_edi_0x10, call_0xffffffffffff4@@ 80@@ b, mov_rdx_qword_ptr_[r@@ 12+0x1@@ 60], mov_qword_ptr_[rax+@@ 8]_rbp, mov_qword_ptr_[rax]_rdx, mov_qword_ptr_[r12+0x1@@ 60]_rax, mov_eax_1, pop_rbx, pop_rbp, pop_r12, ret
endbr64, push_r12, push_rbp, mov_rbp_rdi, sub_rsp_8, call_0xffffffffffffff@@ 82, mov_r12d_eax, test_al_al, je_0x19, cmp_qword_ptr_[rbp+0x@@ 14@@ 8]_0, je_0x1e, mov_esi_5, mov_rdi_rbp, call_0xffffffffffff8@@ 004, add_rsp_8, pop_rbp, mov_eax_r12d, pop_r12, ret, mov_rdi_rbp, mov_esi_6, call_0xffffffffffff7@@ fe8, add_rsp_8, pop_rbp, mov_eax_r12d, pop_r12, ret
endbr64, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, sub_rsp_8, mov_rax_qword_ptr_[r@@ si+0x1@@ 48], test_rax_rax, jne_0xf, jmp_0x24, mov_rax_qword_ptr_[rax+0x18], test_rax_rax, je_0x19, cmp_qword_ptr_[rax+@@ 8]_rbx, jne_0xfffffffffffffff3, add_rsp_8, pop_rbx, xor_eax_eax, pop_rbp, ret, mov_edi_0x28, call_0xffffffffffff47@@ 3b, mov_rdx_qword_ptr_[rbx+0x1@@ 58], mov_qword_ptr_[rax]_rbp, mov_qword_ptr_[rax+0x10]_rdx, mov_rdx_qword_ptr_[rbp+0x@@ 150], mov_qword_ptr_[rax+8]_rbx, mov_qword_ptr_[rbx+0x1@@ 58]_rax, mov_qword_ptr_[rax+0x18]_0, mov_qword_ptr_[rax+0x20]_rdx, test_rdx_rdx, je_0x1f, mov_qword_ptr_[rdx+0x1@@ 8]_rax, mov_qword_ptr_[rbp+0x@@ 15@@ 0]_rax, add_rsp_8, pop_rbx, mov_eax_1, pop_rbp, ret, mov_qword_ptr_[rbp+0x@@ 14@@ 8]_rax, jmp_0xffffffffffffffe@@ 0
endbr64, mov_rax_qword_ptr_[rip+0x2@@ 9c@@ 9a@@ 5], mov_rsi_rdi, test_rax_rax, jne_0xf, jmp_0x1d, mov_rax_qword_ptr_[rax], test_rax_rax, je_0x12, cmp_qword_ptr_[rax+@@ 8]_rsi, jne_0xfffffffffffffff4, ret, lea_rdi_[rip+0x2@@ 9c@@ 97@@ 9], jmp_0x@@ c8@@ 9
endbr64, push_rbp, push_rbx, sub_rsp_8, mov_rbx_qword_ptr_[rip+0x2@@ 9c@@ 95@@ f], test_rbx_rbx, je_0x2c, mov_rbp_rdi, jmp_0xf, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, je_0x1a, mov_rdi_qword_ptr_[rbx+8], cmp_qword_ptr_[rdi+0x1@@ 60]_0, jne_0xffffffffffffffec, call_rbp, mov_rbx_qword_ptr_[rbx], test_rbx_rbx, jne_0xffffffffffffffea, add_rsp_8, pop_rbx, pop_rbp, ret
endbr64, sub_rsp_8, mov_rdi_qword_ptr_[rip+0x2@@ 9c@@ 9@@ 11], call_0xb@@ f1, mov_qword_ptr_[rip+0x2@@ 9c@@ 90@@ 1]_0, add_rsp_8, ret
endbr64, movabs_rax@@ _0xe@@ fc@@ da@@ b8@@ 96@@ 7@@ 45@@ 2@@ 30@@ 1, mov_qword_ptr_[rdi]_rax, movabs_rax@@ _0x10@@ 32@@ 54@@ 76@@ 98@@ ba@@ dc@@ fe, mov_qword_ptr_[rdi@@ +8]_rax, mov_qword_ptr_[rdi+0x10]_0, ret
endbr64, push_r15, push_r14, push_r13, push_r12, push_rbp, push_rbx, mov_eax_dword_ptr_[r@@ si+0x10], mov_r14d_dword_ptr_[r@@ si], mov_edx_dword_ptr_[r@@ si+0x@@ 2c], mov_dword_ptr_[rsp-0x@@ 20]_eax, mov_eax_dword_ptr_[rdi], mov_ebx_dword_ptr_[r@@ si+0x18], mov_r12d_dword_ptr_[r@@ si+0x@@ 34], mov_dword_ptr_[rsp-0x@@ 14@@ ]_edx, lea_edx_[rax@@ +r@@ 14@@ -0x@@ 28@@ 95@@ 5b@@ 88], mov_eax_dword_ptr_[rdi+8], mov_r9d_dword_ptr_[r@@ si+4], mov_r11d_dword_ptr_[r@@ si+0xc], mov_ebp_dword_ptr_[r@@ si+0x14], mov_r13d_dword_ptr_[r@@ si+0x1c], mov_r15d_dword_ptr_[r@@ si+0x@@ 24], mov_r10d_dword_ptr_[r@@ si+0x28], mov_r8d_dword_ptr_[r@@ si+8], mov_ecx_dword_ptr_[r@@ si+0x20], mov_dword_ptr_[rsp-0x@@ 1c]@@ _ebx, mov_dword_ptr_[rsp-0x@@ 10]@@ _r12d, mov_ebx_dword_ptr_[r@@ si+0x30], mov_r12d_dword_ptr_[r@@ si+0x38], xor_eax_dword_ptr_[r@@ di+0xc], mov_esi_dword_ptr_[r@@ si+0x@@ 3c], and_eax@@ _dword_ptr_[r@@ di+4], mov_dword_ptr_[rsp-0x@@ 1@@ 8]_ecx, mov_dword_ptr_[rsp-0x@@ c]_esi, xor_eax_dword_ptr_[r@@ di+0xc], add_eax_edx, mov_edx_dword_ptr_[r@@ di+4], rol_eax@@ _7, add_eax_dword_ptr_[r@@ di+4], xor_edx_dword_ptr_[r@@ di+8], mov_ecx_dword_ptr_[r@@ di+0xc], and_edx@@ _eax, lea_ecx_[r@@ cx+r@@ 9@@ -0x@@ 17@@ 38@@ 48@@ aa], xor_edx_dword_ptr_[r@@ di+8], add_edx_ecx, mov_ecx_dword_ptr_[r@@ di+8], rol@@ _edx@@ _0xc, lea_esi_[r@@ cx+r@@ 8+0x@@ 24@@ 20@@ 70@@ db], mov_ecx_dword_ptr_[r@@ di+4], add_edx_eax, xor_ecx@@ _eax, and_ecx@@ _edx, xor_ecx_dword_ptr_[r@@ di+4], add_ecx@@ _esi, mov_esi_dword_ptr_[r@@ di+4], mov_dword_ptr_[rsp@@ -@@ 8]_r8d, ror@@ _ecx@@ _0xf, lea_r8d_[r@@ si+r@@ 11@@ -0x@@ 3e@@ 4@@ 23@@ 1@@ 12], mov_esi_eax, add_ecx@@ _edx, xor_esi@@ _edx, and_esi@@ _ecx, xor_esi@@ _eax, add_esi@@ _r8d, mov_r8d_dword_ptr_[r@@ sp-0x@@ 20], ror@@ _esi@@ _0xa, lea_r8d@@ _[rax+r@@ 8-0x@@ a8@@ 3f@@ 0@@ 51], mov_eax_edx, add_esi@@ _ecx, xor_eax@@ _ecx, and_eax@@ _esi, xor_eax_edx, add_eax@@ _r8d, rol_eax@@ _7, lea_r8d@@ _[rdx+r@@ bp+0x@@ 47@@ 87@@ c6@@ 2a], mov_edx_ecx, add_eax_esi, xor_edx@@ _esi, and_edx@@ _eax, xor_edx@@ _ecx, add_edx@@ _r8d, mov_r8d_dword_ptr_[r@@ sp-0x@@ 1c], rol@@ _edx@@ _0xc, lea_r8d_[r@@ cx+r@@ 8-0x@@ 57@@ c@@ fb@@ 9e@@ d], mov_ecx_esi, add_edx_eax, xor_ecx@@ _eax, and_ecx@@ _edx, xor_ecx@@ _esi, add_ecx@@ _r8d, ror@@ _ecx@@ _0xf, lea_r8d_[r@@ si+r@@ 13@@ -0x@@ 2b@@ 96@@ a@@ ff], mov_esi_eax, add_ecx@@ _edx, xor_esi@@ _edx, and_esi@@ _ecx, xor_esi@@ _eax, add_esi@@ _r8d, mov_r8d_dword_ptr_[r@@ sp@@ -0x18], ror@@ _esi@@ _0xa, lea_r8d@@ _[rax+r@@ 8+0x@@ 69@@ 80@@ 9@@ 8d@@ 8], mov_eax_edx, add_esi@@ _ecx, xor_eax@@ _ecx, and_eax@@ _esi, xor_eax_edx, add_eax@@ _r8d, rol_eax@@ _7, lea_r8d@@ _[rdx+r@@ 15-0x@@ 74@@ bb@@ 0@@ 85@@ 1], mov_edx_ecx, add_eax_esi, xor_edx@@ _esi, and_edx@@ _eax, xor_edx@@ _ecx, add_edx@@ _r8d, rol@@ _edx@@ _0xc, lea_r8d_[r@@ cx+r@@ 10@@ -0x@@ a@@ 44@@ f], mov_ecx_esi, add_edx_eax, xor_ecx@@ _eax, and_ecx@@ _edx, xor_ecx@@ _esi, add_ecx@@ _r8d, mov_r8d_dword_ptr_[r@@ sp-0x@@ 14], ror@@ _ecx@@ _0xf, lea_r8d_[r@@ si+r@@ 8-0x@@ 7@@ 6a@@ 3@@ 28@@ 42], mov_esi_eax, add_ecx@@ _edx, xor_esi@@ _edx, and_esi@@ _ecx, xor_esi@@ _eax, add_esi@@ _r8d, ror@@ _esi@@ _0xa, lea_r8d@@ _[rax+r@@ bx+0x@@ 6b@@ 90@@ 112@@ 2], mov_eax_edx, add_esi@@ _ecx, xor_eax@@ _ecx, and_eax@@ _esi, xor_eax_edx, add_eax@@ _r8d, mov_r8d_dword_ptr_[r@@ sp@@ -0x10], rol_eax@@ _7, lea_r8d@@ _[rdx+r@@ 8-0x@@ 26@@ 7@@ 8e@@ 6d], mov_edx_ecx, add_eax_esi, xor_edx@@ _esi, and_edx@@ _eax, xor_edx@@ _ecx, add_edx@@ _r8d, rol@@ _edx@@ _0xc, lea_r8d_[r@@ cx+r@@ 12-0x@@ 59@@ 86@@ bc@@ 72], mov_ecx_esi, add_edx_eax, xor_ecx@@ _eax, and_ecx@@ _edx, xor_ecx@@ _esi, add_ecx@@ _r8d, mov_r8d_dword_ptr_[r@@ sp-0x@@ c], ror@@ _ecx@@ _0xf, lea_r8d_[r@@ si+r@@ 8+0x@@ 4@@ 9b@@ 40@@ 8@@ 21], mov_esi_eax, add_ecx@@ _edx, xor_esi@@ _edx, and_esi@@ _ecx, xor_esi@@ _eax, add_esi@@ _r8d, ror@@ _esi@@ _0xa, add_esi@@ _ecx, lea_r8d@@ _[rax+r@@ 9@@ -0x@@ 9e@@ 1d@@ a@@ 9e], mov_eax_ecx, xor_eax@@ _esi, and_eax_edx, xor_eax@@ _ecx, add_eax@@ _r8d, mov_r8d_dword_ptr_[r@@ sp-0x@@ 1c], rol_eax@@ _5, add_eax_esi, lea_r8d@@ _[rdx+r@@ 8-0x@@ 3@@ fb@@ f@@ 4c@@ c0], mov_edx_esi, xor_edx_eax, and_edx@@ _ecx, xor_edx@@ _esi, add_edx@@ _r8d, mov_r8d_dword_ptr_[r@@ sp-0x@@ 14], rol@@ _edx@@ _9, add_edx_eax, lea_r8d_[r@@ cx+r@@ 8+0x@@ 26@@ 5e@@ 5a@@ 51], mov_ecx_eax, xor_ecx@@ _edx, and_ecx@@ _esi, xor_ecx@@ _eax, add_ecx@@ _r8d, rol@@ _ecx@@ _0xe, add_ecx@@ _edx, lea_r8d_[r@@ si+r@@ 14@@ -0x@@ 16@@ 49@@ 38@@ 56], mov_esi_edx, xor_esi@@ _ecx, and_esi@@ _eax, xor_esi@@ _edx, add_esi@@ _r8d, ror@@ _esi@@ _0xc, add_esi@@ _ecx, lea_r8d@@ _[rax+r@@ bp-0x@@ 2@@ 9d@@ 0@@ e@@ fa@@ 3], mov_eax_ecx, xor_eax@@ _esi, and_eax_edx, xor_eax@@ _ecx, add_eax@@ _r8d, rol_eax@@ _5, add_eax_esi, lea_r8d@@ _[rdx+r@@ 10+0x@@ 24@@ 4@@ 14@@ 53], mov_edx_esi, xor_edx_eax, and_edx@@ _ecx, xor_edx@@ _esi, add_edx@@ _r8d, mov_r8d_dword_ptr_[r@@ sp-0x@@ c], rol@@ _edx@@ _9, add_edx_eax, lea_r8d_[r@@ cx+r@@ 8-0x@@ 27@@ 5e@@ 19@@ 7f], mov_ecx_eax, xor_ecx@@ _edx, and_ecx@@ _esi, xor_ecx@@ _eax, add_ecx@@ _r8d, mov_r8d_dword_ptr_[r@@ sp-0x@@ 20], rol@@ _ecx@@ _0xe, add_ecx@@ _edx, lea_r8d_[r@@ si+r@@ 8-0x@@ 18@@ 2c@@ 0@@ 4@@ 38], mov_esi_edx, xor_esi@@ _ecx, and_esi@@ _eax, xor_esi@@ _edx, add_esi@@ _r8d, ror@@ _esi@@ _0xc, add_esi@@ _ecx, lea_r8d@@ _[rax+r@@ 15+0x@@ 2@@ 1e@@ 1c@@ de@@ 6], mov_eax_ecx, xor_eax@@ _esi, and_eax_edx, xor_eax@@ _ecx, add_eax@@ _r8d, rol_eax@@ _5, add_eax_esi, lea_r8d@@ _[rdx+r@@ 12-0x@@ 3c@@ c@@ 8f@@ 8@@ 2a], mov_edx_esi, xor_edx_eax, and_edx@@ _ecx, xor_edx@@ _esi, add_edx@@ _r8d, rol@@ _edx@@ _9, add_edx_eax, lea_r8d_[r@@ cx+r11@@ -0x@@ b@@ 2a@@ f@@ 27@@ 9], mov_ecx_eax, xor_ecx@@ _edx, and_ecx@@ _esi, xor_ecx@@ _eax, add_ecx@@ _r8d, mov_r8d_dword_ptr_[r@@ sp@@ -0x18], rol@@ _ecx@@ _0xe, add_ecx@@ _edx, lea_esi_[r@@ si+r@@ 8+0x@@ 45@@ 5a@@ 14@@ ed], mov_r8d_edx, xor_r8d@@ _ecx, and_r8d@@ _eax, xor_r8d@@ _edx, add_r8d@@ _esi, mov_esi_dword_ptr_[r@@ sp@@ -0x10], ror@@ _r8d@@ _0xc, add_r8d@@ _ecx, lea_esi@@ _[rax+r@@ si-0x@@ 56@@ 1c@@ 16@@ fb], mov_eax_ecx, xor_eax@@ _r8d, and_eax_edx, xor_eax@@ _ecx, add_eax_esi, mov_esi_dword_ptr_[r@@ sp@@ -8], rol_eax@@ _5, add_eax@@ _r8d, lea_esi@@ _[rdx+r@@ si-0x@@ 3@@ 10@@ 5c@@ 08], mov_edx_r8d, xor_edx_eax, and_edx@@ _ecx, xor_edx@@ _r8d, add_edx@@ _esi, rol@@ _edx@@ _9, add_edx_eax, mov_esi_eax, xor_esi@@ _edx, and_esi@@ _r8d, lea_ecx_[r@@ cx+r@@ 13+0x@@ 67@@ 6@@ f0@@ 2d@@ 9], xor_esi@@ _eax, add_esi@@ _ecx, rol@@ _esi@@ _0xe, add_esi@@ _edx, mov_ecx_edx, xor_ecx@@ _esi, lea_r8d_[r@@ 8+r@@ bx-0x@@ 7@@ 2d@@ 5b@@ 37@@ 6], mov_dword_ptr_[rsp@@ -@@ 4]_r8d, mov_r8d_ecx, and_r8d@@ _eax, xor_r8d@@ _edx, add_r8d@@ _dword_ptr_[r@@ sp@@ -4], ror@@ _r8d@@ _0xc, add_r8d@@ _esi, xor_ecx@@ _r8d, lea_eax@@ _[rax+r@@ bp-0x@@ 5c@@ 6b@@ e], add_ecx_eax, mov_eax_dword_ptr_[r@@ sp@@ -0x18], rol@@ _ecx@@ _4, lea_eax_[rdx@@ +rax-0x@@ 7@@ 88@@ e0@@ 97@@ f], mov_edx_esi, add_ecx@@ _r8d, xor_edx@@ _r8d, xor_edx@@ _ecx, add_edx_eax, mov_eax_dword_ptr_[r@@ sp-0x@@ 14], rol@@ _edx@@ _0xb, lea_eax_[r@@ si+r@@ ax+0x@@ 6d@@ 9d@@ 6@@ 12@@ 2], mov_esi_r8d, add_edx_ecx, xor_esi@@ _ecx, xor_esi@@ _edx, add_esi@@ _eax, rol@@ _esi@@ _0x10, mov_eax_ecx, add_esi@@ _edx, xor_eax_edx, lea_r8d_[r@@ 8+r@@ 12-0x@@ 2@@ 1a@@ c@@ 7f@@ 4], xor_eax@@ _esi, add_eax@@ _r8d, ror_eax@@ _9, lea_r8d_[r@@ cx+r@@ 9@@ -0x@@ 5b@@ 4@@ 115@@ bc], mov_ecx_edx, add_eax_esi, xor_ecx@@ _esi, xor_ecx@@ _eax, add_ecx@@ _r8d, mov_r8d_dword_ptr_[r@@ sp-0x@@ 20], rol@@ _ecx@@ _4, lea_edx@@ _[rdx+r@@ 8+0x@@ 4b@@ dec@@ fa@@ 9], mov_r8d_esi, add_ecx_eax, xor_r8d@@ _eax, xor_r8d@@ _ecx, add_r8d@@ _edx, rol@@ _r8d@@ _0xb, mov_edx_eax, add_r8d@@ _ecx, xor_edx@@ _ecx, lea_esi_[r@@ si+r@@ 13@@ -0x@@ 94@@ 4b@@ 4a0], xor_edx@@ _r8d, add_edx@@ _esi, rol@@ _edx@@ _0x10, mov_esi_ecx, add_edx@@ _r8d, xor_esi@@ _r8d, lea_eax@@ _[rax+r@@ 10@@ -0x@@ 4@@ 140@@ 43@@ 90], xor_esi@@ _edx, add_esi@@ _eax, mov_eax_dword_ptr_[r@@ sp@@ -0x10], ror@@ _esi@@ _9, lea_eax_[r@@ cx+r@@ ax+0x@@ 28@@ 9b@@ 7@@ ec@@ 6], mov_ecx_r8d, add_esi@@ _edx, xor_ecx@@ _edx, xor_ecx@@ _esi, add_ecx_eax, rol@@ _ecx@@ _4, mov_eax_edx, add_ecx@@ _esi, xor_eax@@ _esi, lea_r8d_[r@@ 8+r@@ 14@@ -0x@@ 15@@ 5e@@ d@@ 80@@ 6], xor_eax@@ _ecx, add_eax@@ _r8d, rol_eax@@ _0xb, mov_r8d_esi, add_eax_ecx, xor_r8d@@ _ecx, lea_edx@@ _[rdx+r@@ 11@@ -0x@@ 2b@@ 10@@ c@@ f7@@ b], xor_r8d@@ _eax, add_r8d@@ _edx, mov_edx_dword_ptr_[r@@ sp-0x@@ 1c], rol@@ _r8d@@ _0x10, lea_edx_[r@@ si@@ +rdx+0x@@ 4@@ 88@@ 1d@@ 05], mov_esi_ecx, add_r8d@@ _eax, xor_esi@@ _eax, xor_esi@@ _r8d, add_esi@@ _edx, ror@@ _esi@@ _9, mov_edx_eax, add_esi@@ _r8d, xor_edx@@ _r8d, lea_ecx_[r@@ cx+r@@ 15-0x@@ 26@@ 2b@@ 2@@ fc@@ 7], xor_edx@@ _esi, add_edx_ecx, rol@@ _edx@@ _4, mov_ecx_r8d, add_edx@@ _esi, xor_ecx@@ _esi, lea_eax@@ _[rax+r@@ bx-0x@@ 19@@ 24@@ 66@@ 1b], xor_ecx@@ _edx, add_ecx_eax, mov_eax_dword_ptr_[r@@ sp-0x@@ c], rol@@ _ecx@@ _0xb, lea_eax_[r@@ 8+r@@ ax+0x1@@ fa@@ 27@@ c@@ f8], mov_r8d_esi, add_ecx@@ _edx, xor_r8d@@ _edx, xor_r8d@@ _ecx, add_r8d@@ _eax, mov_eax_dword_ptr_[r@@ sp@@ -8], rol@@ _r8d@@ _0x10, lea_esi_[r@@ si@@ +rax-0x@@ 3b@@ 5@@ 3a@@ 99@@ b], mov_eax_edx, add_r8d@@ _ecx, xor_eax@@ _ecx, xor_eax@@ _r8d, add_eax_esi, ror_eax@@ _9, lea_esi@@ _[rdx+r@@ 14@@ -0x@@ bd@@ 6@@ dd@@ bc], mov_edx_ecx, add_eax@@ _r8d, not_edx, or_edx_eax, xor_edx@@ _r8d, add_edx@@ _esi, rol@@ _edx@@ _6, lea_esi_[r@@ cx+r@@ 13+0x@@ 43@@ 2a@@ ff@@ 97], mov_ecx_r8d, add_edx_eax, not_ecx, or_ecx@@ _edx, xor_ecx@@ _eax, add_ecx@@ _esi, rol@@ _ecx@@ _0xa, mov_esi_eax, add_ecx@@ _edx, not_esi, or_esi@@ _ecx, lea_r8d_[r@@ 8+r@@ 12-0x@@ 54@@ 6b@@ dc@@ 59], xor_esi@@ _edx, add_esi@@ _r8d, lea_r8d@@ _[rax+r@@ bp-0x@@ 3@@ 6c@@ 5@@ fc@@ 7], mov_ebp_edx, rol@@ _esi@@ _0xf, not@@ _ebp, add_esi@@ _ecx, mov_eax_ebp, or_eax@@ _esi, xor_eax@@ _ecx, add_eax@@ _r8d, mov_ebp_ecx, ror_eax@@ _0xb, not@@ _ebp, add_eax_esi, lea_r8d@@ _[rdx+r@@ bx+0x@@ 65@@ 5b@@ 5@@ 9c@@ 3], mov_edx_ebp, or_edx_eax, xor_edx@@ _esi, add_edx@@ _r8d, rol@@ _edx@@ _6, lea_r8d_[r@@ cx+r11@@ -0x@@ 70@@ f@@ 33@@ 36@@ e], mov_ecx_esi, add_edx_eax, not_ecx, or_ecx@@ _edx, xor_ecx@@ _eax, add_ecx@@ _r8d, rol@@ _ecx@@ _0xa, lea_r8d_[r@@ si+r@@ 10@@ -0x@@ 100@@ b8@@ 3], mov_esi_eax, add_ecx@@ _edx, not_esi, or_esi@@ _ecx, xor_esi@@ _edx, add_esi@@ _r8d, mov_ebp_edx, rol@@ _esi@@ _0xf, not@@ _ebp, add_esi@@ _ecx, lea_r8d@@ _[rax+r@@ 9@@ -0x@@ 7a@@ 7b@@ a@@ 22@@ f], mov_eax_ebp, or_eax@@ _esi, xor_eax@@ _ecx, mov_r11d_dword_ptr_[r@@ sp@@ -0x18], add_eax@@ _r8d, mov_ebp_ecx, ror_eax@@ _0xb, not@@ _ebp, add_eax_esi, lea_r8d@@ _[rdx+r@@ 11+0x@@ 6@@ fa@@ 87@@ e4@@ f], mov_edx_ebp, or_edx_eax, xor_edx@@ _esi, mov_r11d_dword_ptr_[r@@ sp-0x@@ c], add_edx@@ _r8d, rol@@ _edx@@ _6, lea_r8d_[r@@ cx+r11@@ -0x@@ 1d@@ 3@@ 19@@ 20], mov_ecx_esi, add_edx_eax, not_ecx, or_ecx@@ _edx, mov_r10d_dword_ptr_[r@@ sp-0x@@ 1c], xor_ecx@@ _eax, add_ecx@@ _r8d, rol@@ _ecx@@ _0xa, lea_r8d_[r@@ si+r@@ 10@@ -0x@@ 5c@@ fe@@ bc@@ ec], mov_esi_eax, add_ecx@@ _edx, not_esi, or_esi@@ _ecx, xor_esi@@ _edx, add_esi@@ _r8d, mov_r10d@@ _edx, rol@@ _esi@@ _0xf, not@@ _r10d, add_esi@@ _ecx, mov_r14d_dword_ptr_[r@@ sp@@ -0x10], mov_r8d_r10d, mov_r9d_dword_ptr_[r@@ sp-0x@@ 20], or_r8d@@ _esi, lea_eax@@ _[rax+r@@ 14+0x@@ 4@@ e0@@ 8@@ 11@@ a1], xor_r8d@@ _ecx, add_r8d@@ _eax, lea_edx@@ _[rdx+r@@ 9@@ -0x@@ 8a@@ c8@@ 17@@ e], mov_r9d_ecx, ror@@ _r8d@@ _0xb, not@@ _r9d, add_r8d@@ _esi, mov_eax_r9d, or_eax@@ _r8d, xor_eax@@ _esi, add_eax_edx, mov_edx_dword_ptr_[r@@ sp-0x@@ 14], rol_eax@@ _6, lea_ecx_[r@@ cx@@ +rdx@@ -0x@@ 4@@ 2c@@ 50@@ dc@@ b], mov_edx_esi, add_eax@@ _r8d, not_edx, or_edx_eax, xor_edx@@ _r8d, add_edx_ecx, rol@@ _edx@@ _0xa, mov_ecx_r8d, add_edx_eax, mov_ebx_dword_ptr_[r@@ sp@@ -8], not_ecx, or_ecx@@ _edx, lea_esi_[r@@ si+r@@ bx+0x@@ 2a@@ d@@ 7d@@ 2@@ bb], xor_ecx@@ _eax, add_ecx@@ _esi, rol@@ _ecx@@ _0xf, mov_esi_eax, add_ecx@@ _edx, not_esi, or_esi@@ _ecx, xor_esi@@ _edx, lea_r8d_[r@@ 8+r@@ 15-0x@@ 14@@ 79@@ 2c@@ 6f], pop_rbx, add_esi@@ _r8d, add_eax_dword_ptr_[r@@ di], pop_rbp, mov_dword_ptr_[rdi]_eax, mov_eax_esi, mov_esi_dword_ptr_[r@@ di+4], pop_r12, add_esi@@ _ecx, pop_r13, ror_eax@@ _0xb, add_eax_esi, pop_r14, add_ecx_dword_ptr_[r@@ di+8], add_edx_dword_ptr_[r@@ di+0xc], mov_dword_ptr_[rdi+@@ 4]_eax, mov_dword_ptr_[rdi+@@ 8]_ecx, mov_dword_ptr_[rdi+0x@@ c]_edx, pop_r15, ret
endbr64, push_r15, push_r14, push_r13, push_r12, mov_r12_rdx, push_rbp, mov_rbp_rsi, push_rbx, mov_ebx@@ _0x40, mov_rax_qword_ptr_[rdi+0x10], mov_r13_rax, shr@@ _r13@@ _3, and_r13d@@ _0x3f, lea_rax_[rax@@ +rdx*8], sub_rbx@@ _r13, mov_qword_ptr_[rdi+0x1@@ 0]_rax, cmp_rbx_rdx, ja_0x4@@ 2, test_r13_r13, jne_0x13@@ 5, cmp_rdx@@ _0x3f, jbe_0x@@ 4b, mov_rbx_rsi, lea_rax_[r@@ 12-0x@@ 40], and_rax@@ _0xffffffffffffff@@ c0, lea_rbp_[r@@ bx+r@@ ax+0x40], mov_rsi_rbx, add_rbx@@ _0x40, call_0xfffffffffffff86@@ 9, cmp_rbx_rbp, jne_0xfffffffffffffff1, and_r12d@@ _0x3f, xor_r13d_r13d, test_r12_r12, jne_0x15, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret, lea_rsi_[r@@ di+r@@ 13+0x18], mov_eax_r12d, cmp_r12d@@ _0x20, jae_0x@@ 3c, and_r12d@@ _0x10, jne_0x1@@ ca, test_al_8, jne_0x1@@ dc, test_al_4, jne_0x1@@ ec, test_eax_eax, je_0xffffffffffffff@@ c3, movzx_edx_byte_ptr_[r@@ bp], mov_byte_ptr_[rsi@@ ]_dl, test_al_2, je_0xffffffffffffff@@ b9, mov_edx_eax, movzx_eax_word_ptr_[r@@ bp@@ +rdx@@ -2], mov_word_ptr_[r@@ si+rdx@@ -@@ 2]_ax, jmp_0xffffffffffffffab, mov_rax_qword_ptr_[rbp], mov_edx_r12d, mov_qword_ptr_[rsi]_rax, lea_rax_[r@@ si+rdx@@ +8], lea_rdx_[r@@ bp@@ +rdx@@ +8], mov_rcx_qword_ptr_[r@@ dx@@ -0x@@ 28], mov_qword_ptr_[rax@@ -0x@@ 28]_rcx, mov_rcx_qword_ptr_[r@@ dx@@ -0x20], mov_qword_ptr_[rax@@ -0x@@ 20]_rcx, mov_rcx_qword_ptr_[r@@ dx@@ -0x18], mov_qword_ptr_[rax@@ -0x1@@ 8]_rcx, lea_rcx_[r@@ si+8], and_rcx@@ _0xfffffffffffffff8, mov_rdx_qword_ptr_[r@@ dx@@ -0x10], sub_rsi_rcx, mov_qword_ptr_[rax@@ -0x1@@ 0]_rdx, lea_eax_[r@@ 12+r@@ si], and_eax_0xffffff@@ e0, sub_rbp@@ _rsi, cmp_eax_0x20, jb_0xffffffffffffff@@ 59, and_eax_0xffffff@@ e0, mov_edx_eax, xor_esi_esi, mov_eax_esi, mov_r10_qword_ptr_[r@@ bp+rax], mov_r9_qword_ptr_[r@@ bp@@ +rax+8], mov_r8_qword_ptr_[r@@ bp+r@@ ax+0x10], mov_rdi_qword_ptr_[r@@ bp+r@@ ax+0x18], add_esi@@ _0x20, mov_qword_ptr_[rcx@@ +rax]@@ _r10, mov_qword_ptr_[rcx@@ +rax+@@ 8]_r9, mov_qword_ptr_[rcx@@ +r@@ ax+0x1@@ 0]_r8, mov_qword_ptr_[rcx@@ +r@@ ax+0x1@@ 8]_rdi, cmp_esi_edx, jb_0xffffffffffffff@@ d2, jmp_0xffffffffffffff1c, lea_r9_[r@@ di+0x18], lea_rax_[r@@ 9+r@@ 13], cmp_ebx@@ _0x20, jae_0x@@ 65, test_bl@@ _0x10, jne_0x13@@ 2, test_bl@@ _8, jne_0x14@@ 2, test_bl@@ _4, jne_0x15@@ 0, test_ebx_ebx, je_0x1e, movzx_edx_byte_ptr_[rsi], mov_byte_ptr_[rax]_dl, test_bl@@ _2, je_0x14, mov_edx_ebx, movzx_ecx_word_ptr_[r@@ si+rdx@@ -2], mov_word_ptr_[rax@@ +rdx@@ -@@ 2]_cx, mov_rsi_r9, lea_r12_[r@@ 13+r@@ 12-0x@@ 40], call_0xfffffffffffff7@@ 10, add_rbx@@ _rbp, cmp_r12@@ _0x3f, ja_0xfffffffffffffe@@ 7e, mov_rbp_rbx, xor_r13d_r13d, jmp_0xfffffffffffffea@@ 0, mov_rdx_qword_ptr_[rsi], mov_ecx_ebx, mov_qword_ptr_[rax]_rdx, lea_rdx_[rax@@ +rcx@@ +8], lea_rcx_[r@@ si+rcx@@ +8], mov_rsi_qword_ptr_[r@@ cx-0x@@ 28], mov_qword_ptr_[rdx@@ -0x@@ 28]_rsi, mov_rsi_qword_ptr_[r@@ cx-0x@@ 20], mov_qword_ptr_[rdx@@ -0x@@ 20]_rsi, mov_rsi_qword_ptr_[r@@ cx@@ -0x18], mov_qword_ptr_[rdx@@ -0x1@@ 8]_rsi, mov_rsi_rbp, mov_rcx_qword_ptr_[r@@ cx@@ -0x10], mov_qword_ptr_[rdx@@ -0x1@@ 0]_rcx, lea_rcx_[rax+8], and_rcx@@ _0xfffffffffffffff8, sub_rax_rcx, sub_rsi_rax, add_eax_ebx, and_eax_0xffffff@@ e0, cmp_eax_0x20, jb_0xffffffffffffff@@ 8d, and_eax_0xffffff@@ e0, mov_edx_eax, xor_r8d_r8d, mov_eax_r8d, mov_r14_qword_ptr_[r@@ si@@ +rax+8], mov_r11_qword_ptr_[r@@ si+r@@ ax+0x10], mov_r10_qword_ptr_[r@@ si+r@@ ax+0x18], mov_r15_qword_ptr_[r@@ si+rax], add_r8d@@ _0x20, mov_qword_ptr_[rcx@@ +rax]@@ _r15, mov_qword_ptr_[rcx@@ +rax+@@ 8]_r14, mov_qword_ptr_[rcx@@ +r@@ ax+0x1@@ 0]_r11, mov_qword_ptr_[rcx@@ +r@@ ax+0x1@@ 8]_r10, cmp_r8d@@ _edx, jb_0xffffffffffffff@@ d0, jmp_0xffffffffffffff51, movdqu_xmm0_xmmword_ptr_[r@@ bp], mov_edx_eax, movups_xmmword_ptr_[r@@ si@@ ]_xmm0, movdqu_xmm1_xmmword_ptr_[r@@ bp@@ +rdx@@ -0x10], movups_xmmword_ptr_[r@@ si+rdx@@ -0x@@ 10]_xmm1, jmp_0xfffffffffffffd@@ fc, mov_rdx_qword_ptr_[rbp], mov_qword_ptr_[rsi@@ ]_rdx, mov_edx_eax, mov_rax_qword_ptr_[r@@ bp@@ +rdx@@ -8], mov_qword_ptr_[rsi@@ +rdx@@ -@@ 8]_rax, jmp_0xfffffffffffffd@@ e4, mov_edx_dword_ptr_[rbp], mov_dword_ptr_[rsi@@ ]_edx, mov_edx_eax, mov_eax_dword_ptr_[r@@ bp@@ +rdx@@ -4], mov_dword_ptr_[rsi@@ +rdx@@ -4]_eax, jmp_0xfffffffffffffdd@@ 0, movdqu_xmm2_xmmword_ptr_[r@@ si], mov_edx_ebx, movups_xmmword_ptr_[r@@ ax@@ ]_xmm2, movdqu_xmm3_xmmword_ptr_[r@@ si+rdx@@ -0x10], movups_xmmword_ptr_[r@@ ax@@ +rdx@@ -0x@@ 10@@ ]_xmm3, jmp_0xfffffffffffffef2, mov_rdx_qword_ptr_[rsi], mov_qword_ptr_[rax]_rdx, mov_edx_ebx, mov_rcx_qword_ptr_[r@@ si+rdx@@ -8], mov_qword_ptr_[rax@@ +rdx@@ -@@ 8]_rcx, jmp_0xfffffffffffffe@@ db, mov_edx_dword_ptr_[rsi], mov_dword_ptr_[rax]_edx, mov_edx_ebx, mov_ecx_dword_ptr_[r@@ si+rdx@@ -4], mov_dword_ptr_[rax@@ +rdx@@ -@@ 4]_ecx, jmp_0xfffffffffffffec@@ 8
endbr64, push_rbp, mov_edx_0x40, mov_ecx_0x80, sub_rsp_0x10, mov_rax_qword_ptr_fs:[0x28], mov_qword_ptr_[rsp+8]_rax, xor_eax_eax, mov_rax_qword_ptr_[rdi+0x10], mov_rbp_rdi, mov_qword_ptr_[rsp]_rax, shr_rax@@ _3, and_eax_0x3f, sub_rdx_rax, sub_rcx_rax, cmp_rdx@@ _9, cmovb@@ _rdx_rcx, lea_rsi_[rip+0x17@@ b8@@ 6], sub_rdx@@ _8, call_0xfffffffffffffc@@ b2, mov_rsi_rsp, mov_edx_8, mov_rdi_rbp, call_0xfffffffffffffc@@ a2, mov_rax_qword_ptr_[rsp+8], xor_rax_qword_ptr_fs:[0x28], jne_8, add_rsp_0x10, pop_rbp, ret, call_0xfffffffffffe@@ 26@@ 3@@ 7
endbr64, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, mov_rdi_rsi, sub_rsp_8, call_0xffffffffffffff@@ 6d, test_rbx_rbx, je_0x90, mov_rax_rbp, mov_rdi_rbx, lea_rcx_[r@@ bp+0x10], movzx_edx_byte_ptr_[r@@ ax+3], add_rax_4, mov_byte_ptr_[rdi+@@ 3@@ ]_dl, add_rdi_4, movzx_edx_word_ptr_[r@@ ax@@ -2], mov_byte_ptr_[r@@ di-@@ 2@@ ]_dl, mov_edx_dword_ptr_[r@@ ax@@ -4], mov_byte_ptr_[r@@ di-@@ 3]@@ _dh, mov_edx_dword_ptr_[r@@ ax@@ -4], mov_byte_ptr_[r@@ di-@@ 4]_dl, cmp_rax_rcx, jne_0xffffffffffffffdb, lea_rax_[r@@ bp+8], and_rax@@ _0xfffffffffffffff8, mov_qword_ptr_[rbp]_0, mov_qword_ptr_[rbp+0x@@ 38]_0, mov_qword_ptr_[rbp+0x@@ 40]_0, mov_qword_ptr_[rbp+0x@@ 48]_0, mov_qword_ptr_[rbp+0x@@ 50]_0, sub_rbp@@ _rax, add_ebp@@ _0x58, xor_esi_esi, and_ebp@@ _0xffffff@@ e0, xor_ecx_ecx, mov_edx_ecx, add_ecx@@ _0x20, mov_qword_ptr_[rax@@ +rdx@@ ]_rsi, mov_qword_ptr_[rax@@ +rdx+@@ 8]_rsi, mov_qword_ptr_[rax@@ +rdx+0x1@@ 0]_rsi, mov_qword_ptr_[rax@@ +rdx+0x1@@ 8]_rsi, cmp_ecx@@ _ebp, jb_0xffffffffffffff@@ e6, add_rsp_8, pop_rbx, pop_rbp, ret
endbr64, push_rbp, mov_rbp_rdi, mov_edi_0x10, push_rbx, mov_rbx_rsi, sub_rsp_8, call_0xffffffffffff36@@ 3b, mov_qword_ptr_[rax+@@ 8]_rbp, mov_qword_ptr_[rax]_rbx, add_rsp_8, pop_rbx, pop_rbp, ret
endbr64, test_rdi_rdi, je_0x21, push_rbx, mov_rbx_rdi, mov_rdi_rbx, mov_rbx_qword_ptr_[rbx], call_0xfffffffffffe@@ 22@@ 6a, test_rbx_rbx, jne_0xfffffffffffffff2, pop_rbx, ret, ret
endbr64, push_r12, push_rbp, mov_rbp_rsi, push_rbx, mov_rbx_rdi, mov_r12_qword_ptr_[rdi], mov_edi_0x10, call_0xffffffffffff3@@ 5d@@ a, mov_qword_ptr_[rax+@@ 8]_rbp, mov_qword_ptr_[rax]_r12, mov_qword_ptr_[rbx]_rax, pop_rbx, pop_rbp, pop_r12, ret
endbr64, push_r15, lea_r15_[rip+0x@@ 13@@ 3d@@ 3], push_r14, mov_r14_rdx, push_r13, mov_r13_rsi, push_r12, mov_r12d_edi, push_rbp, lea_rbp_[rip+0x@@ 13@@ 3d@@ 4], push_rbx, sub_rbp@@ _r15, sub_rsp_8, call_0xfffffffffffe@@ 17@@ f4, sar@@ _rbp@@ _3, je_0x21, xor_ebx_ebx, mov_rdx_r14, mov_rsi_r13, mov_edi_r12d, call_qword_ptr_[r@@ 15+r@@ bx*8], add_rbx_1, cmp_rbp_rbx, jne_0xffffffffffffffec, add_rsp_8, pop_rbx, pop_rbp, pop_r12, pop_r13, pop_r14, pop_r15, ret
endbr64, ret
endbr64, sub_rsp_8, add_rsp_8, ret
